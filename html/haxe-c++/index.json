{"Abi": "abi/abi.html", "ArrayBase": "arraybase.html", "ArrayBase.getBase()": "arraybase.html#getBase", "ArrayBase.getByteCount()": "arraybase.html#getByteCount", "ArrayBase.getElementSize()": "arraybase.html#getElementSize", "ArrayBase.length": "arraybase.html#length", "AtomicInt": "atomicint.html", "AtomicInt.atomicDec()": "atomicint.html#atomicDec", "AtomicInt.atomicInc()": "atomicint.html#atomicInc", "AtomicInt.exchangeIf()": "atomicint.html#exchangeIf", "AutoCast": "autocast.html", "Callable": "callable.html", "Callable.call": "callable.html#call", "Callable.fromFunction()": "callable.html#fromFunction", "Callable.fromStaticFunction()": "callable.html#fromStaticFunction", "Callable.geq()": "callable.html#geq", "Callable.get_call()": "callable.html#get_call", "Callable.getProcAddress()": "callable.html#getProcAddress", "Callable.gt()": "callable.html#gt", "Callable.leq()": "callable.html#leq", "Callable.lt()": "callable.html#lt", "Callable.toFunction()": "callable.html#toFunction", "CallableData": "callabledata.html", "CastCharStar": "castcharstar.html", "CastCharStar.fromString()": "castcharstar.html#fromString", "CastCharStar.toPointer()": "castcharstar.html#toPointer", "CDecl": "abi/cdecl.html", "Char": "char.html", "Compress": "zip/compress.html", "ConstCharStar": "constcharstar.html", "ConstCharStar.fromString()": "constcharstar.html#fromString", "ConstCharStar.toPointer()": "constcharstar.html#toPointer", "ConstCharStar.toString()": "constcharstar.html#toString", "ConstPointer": "constpointer.html", "ConstPointer.add()": "constpointer.html#add", "ConstPointer.at()": "constpointer.html#at", "ConstPointer.constRaw": "constpointer.html#constRaw", "ConstPointer.dec()": "constpointer.html#dec", "ConstPointer.decBy()": "constpointer.html#decBy", "ConstPointer.fromPointer()": "constpointer.html#fromPointer", "ConstPointer.fromRaw()": "constpointer.html#fromRaw", "ConstPointer.fromStar()": "constpointer.html#fromStar", "ConstPointer.geq()": "constpointer.html#geq", "ConstPointer.get_constRaw()": "constpointer.html#get_constRaw", "ConstPointer.get_raw()": "constpointer.html#get_raw", "ConstPointer.get_value()": "constpointer.html#get_value", "ConstPointer.gt()": "constpointer.html#gt", "ConstPointer.inc()": "constpointer.html#inc", "ConstPointer.incBy()": "constpointer.html#incBy", "ConstPointer.leq()": "constpointer.html#leq", "ConstPointer.lt()": "constpointer.html#lt", "ConstPointer.postIncVal()": "constpointer.html#postIncVal", "ConstPointer.ptr": "constpointer.html#ptr", "ConstPointer.raw": "constpointer.html#raw", "ConstPointer.rawCast()": "constpointer.html#rawCast", "ConstPointer.reinterpret()": "constpointer.html#reinterpret", "ConstPointer.setRaw()": "constpointer.html#setRaw", "ConstPointer.sub()": "constpointer.html#sub", "ConstPointer.value": "constpointer.html#value", "ConstStar": "conststar.html", "Debugger": "vm/debugger.html", "Debugger.addClassFunctionBreakpoint()": "vm/debugger.html#addClassFunctionBreakpoint", "Debugger.addFileLineBreakpoint()": "vm/debugger.html#addFileLineBreakpoint", "Debugger.breakNow()": "vm/debugger.html#breakNow", "Debugger.continueThreads()": "vm/debugger.html#continueThreads", "Debugger.deleteBreakpoint()": "vm/debugger.html#deleteBreakpoint", "Debugger.enableCurrentThreadDebugging()": "vm/debugger.html#enableCurrentThreadDebugging", "Debugger.getClasses()": "vm/debugger.html#getClasses", "Debugger.getCurrentThreadNumber()": "vm/debugger.html#getCurrentThreadNumber", "Debugger.getFiles()": "vm/debugger.html#getFiles", "Debugger.getFilesFullPath()": "vm/debugger.html#getFilesFullPath", "Debugger.getStackVariables()": "vm/debugger.html#getStackVariables", "Debugger.getStackVariableValue()": "vm/debugger.html#getStackVariableValue", "Debugger.getThreadInfo()": "vm/debugger.html#getThreadInfo", "Debugger.getThreadInfos()": "vm/debugger.html#getThreadInfos", "Debugger.NONEXISTENT_VALUE": "vm/debugger.html#NONEXISTENT_VALUE", "Debugger.setEventNotificationHandler()": "vm/debugger.html#setEventNotificationHandler", "Debugger.setStackVariableValue()": "vm/debugger.html#setStackVariableValue", "Debugger.STEP_INTO": "vm/debugger.html#STEP_INTO", "Debugger.STEP_OUT": "vm/debugger.html#STEP_OUT", "Debugger.STEP_OVER": "vm/debugger.html#STEP_OVER", "Debugger.stepThread()": "vm/debugger.html#stepThread", "Debugger.THREAD_CREATED": "vm/debugger.html#THREAD_CREATED", "Debugger.THREAD_NOT_STOPPED": "vm/debugger.html#THREAD_NOT_STOPPED", "Debugger.THREAD_STARTED": "vm/debugger.html#THREAD_STARTED", "Debugger.THREAD_STOPPED": "vm/debugger.html#THREAD_STOPPED", "Debugger.THREAD_TERMINATED": "vm/debugger.html#THREAD_TERMINATED", "Deque": "vm/deque.html", "DictionaryData": "objc/dictionarydata.html", "EnumBase": "enumbase.html", "EnumBase._hx_getIndex()": "enumbase.html#_hx_getIndex", "EnumBase._hx_getParamCount()": "enumbase.html#_hx_getParamCount", "EnumBase._hx_getParameters()": "enumbase.html#_hx_getParameters", "EnumBase._hx_getParamI()": "enumbase.html#_hx_getParamI", "EnumBase._hx_getTag()": "enumbase.html#_hx_getTag", "EnumBase.getIndex()": "enumbase.html#getIndex", "EnumBase.getParamCount()": "enumbase.html#getParamCount", "EnumBase.getParameters()": "enumbase.html#getParameters", "EnumBase.getParamI()": "enumbase.html#getParamI", "EnumBase.getTag()": "enumbase.html#getTag", "ErrorConstants": "errorconstants.html", "ExecutionTrace": "vm/executiontrace.html", "ExecutionTrace.traceFunctions()": "vm/executiontrace.html#traceFunctions", "ExecutionTrace.traceLines()": "vm/executiontrace.html#traceLines", "ExecutionTrace.traceOff()": "vm/executiontrace.html#traceOff", "FastCall": "abi/fastcall.html", "FastIterator": "fastiterator.html", "FastIterator.hasNext()": "fastiterator.html#hasNext", "FastIterator.next()": "fastiterator.html#next", "FieldIntegerLookup": "rtti/fieldintegerlookup.html", "FieldNumericIntegerLookup": "rtti/fieldnumericintegerlookup.html", "FILE": "file.html", "Finalizable": "finalizable.html", "Finalizable.finalize()": "finalizable.html#finalize", "Float32": "float32.html", "Float64": "float64.html", "Flush": "zip/flush.html", "Function": "function.html", "Function.call": "function.html#call", "Function.fromStaticFunction()": "function.html#fromStaticFunction", "Function.geq()": "function.html#geq", "Function.get_call()": "function.html#get_call", "Function.getProcAddress()": "function.html#getProcAddress", "Function.gt()": "function.html#gt", "Function.leq()": "function.html#leq", "Function.lt()": "function.html#lt", "Function.nativeFromStaticFunction()": "function.html#nativeFromStaticFunction", "Function.nativeGetProcAddress()": "function.html#nativeGetProcAddress", "FunctionData": "functiondata.html", "Gc": "vm/gc.html", "Gc.compact()": "vm/gc.html#compact", "Gc.doNotKill()": "vm/gc.html#doNotKill", "Gc.enable()": "vm/gc.html#enable", "Gc.enterGCFreeZone()": "vm/gc.html#enterGCFreeZone", "Gc.exitGCFreeZone()": "vm/gc.html#exitGCFreeZone", "Gc.getNextZombie()": "vm/gc.html#getNextZombie", "Gc.MEM_INFO_CURRENT": "vm/gc.html#MEM_INFO_CURRENT", "Gc.MEM_INFO_LARGE": "vm/gc.html#MEM_INFO_LARGE", "Gc.MEM_INFO_RESERVED": "vm/gc.html#MEM_INFO_RESERVED", "Gc.MEM_INFO_USAGE": "vm/gc.html#MEM_INFO_USAGE", "Gc.memInfo()": "vm/gc.html#memInfo", "Gc.memInfo64()": "vm/gc.html#memInfo64", "Gc.memUsage()": "vm/gc.html#memUsage", "Gc.run()": "vm/gc.html#run", "Gc.safePoint()": "vm/gc.html#safePoint", "Gc.setFinalizer()": "vm/gc.html#setFinalizer", "Gc.setMinimumFreeSpace()": "vm/gc.html#setMinimumFreeSpace", "Gc.setMinimumWorkingMemory()": "vm/gc.html#setMinimumWorkingMemory", "Gc.setTargetFreeSpacePercentage()": "vm/gc.html#setTargetFreeSpacePercentage", "Gc.trace()": "vm/gc.html#trace", "Gc.versionCheck()": "vm/gc.html#versionCheck", "Host": "cppia/host.html", "Host.enableJit()": "cppia/host.html#enableJit", "Host.main()": "cppia/host.html#main", "Host.run()": "cppia/host.html#run", "Host.runFile()": "cppia/host.html#runFile", "HostClasses": "cppia/hostclasses.html", "Int16": "int16.html", "Int32": "int32.html", "Int64": "int64.html", "Int8": "int8.html", "Lib": "lib.html", "Lib._loadPrime()": "lib.html#_loadPrime", "Lib.bytesReference()": "lib.html#bytesReference", "Lib.getBinDirectory()": "lib.html#getBinDirectory", "Lib.getDllExtension()": "lib.html#getDllExtension", "Lib.haxeToNeko()": "lib.html#haxeToNeko", "Lib.load()": "lib.html#load", "Lib.loadLazy()": "lib.html#loadLazy", "Lib.nekoToHaxe()": "lib.html#nekoToHaxe", "Lib.print()": "lib.html#print", "Lib.println()": "lib.html#println", "Lib.pushDllSearchPath()": "lib.html#pushDllSearchPath", "Lib.rethrow()": "lib.html#rethrow", "Lib.setFloatFormat()": "lib.html#setFloatFormat", "Lib.stringReference()": "lib.html#stringReference", "Lib.unloadAllLibraries()": "lib.html#unloadAllLibraries", "Lock": "vm/lock.html", "Module": "cppia/module.html", "Module.boot()": "cppia/module.html#boot", "Module.fromData()": "cppia/module.html#fromData", "Module.fromString()": "cppia/module.html#fromString", "Module.resolveClass()": "cppia/module.html#resolveClass", "Module.run()": "cppia/module.html#run", "Mutex": "vm/mutex.html", "Native": "native.html", "Native.addressOf()": "native.html#addressOf", "Native.calloc()": "native.html#calloc", "Native.free()": "native.html#free", "Native.get()": "native.html#get", "Native.malloc()": "native.html#malloc", "Native.memcpy()": "native.html#memcpy", "Native.nativeCalloc()": "native.html#nativeCalloc", "Native.nativeFree()": "native.html#nativeFree", "Native.nativeMalloc()": "native.html#nativeMalloc", "Native.nativeMemcpy()": "native.html#nativeMemcpy", "Native.nativeRealloc()": "native.html#nativeRealloc", "Native.realloc()": "native.html#realloc", "Native.set()": "native.html#set", "Native.sizeof()": "native.html#sizeof", "Native.star()": "native.html#star", "NativeArc": "nativearc.html", "NativeArc._bridgeTransfer()": "nativearc.html#_bridgeTransfer", "NativeArc.bridgeTransfer()": "nativearc.html#bridgeTransfer", "NativeArray": "nativearray.html", "NativeArray.address()": "nativearray.html#address", "NativeArray.blit()": "nativearray.html#blit", "NativeArray.capacity()": "nativearray.html#capacity", "NativeArray.create()": "nativearray.html#create", "NativeArray.getBase()": "nativearray.html#getBase", "NativeArray.getElementSize()": "nativearray.html#getElementSize", "NativeArray.memcmp()": "nativearray.html#memcmp", "NativeArray.reserve()": "nativearray.html#reserve", "NativeArray.resolveVirtualArray()": "nativearray.html#resolveVirtualArray", "NativeArray.setData()": "nativearray.html#setData", "NativeArray.setSize()": "nativearray.html#setSize", "NativeArray.setUnmanagedData()": "nativearray.html#setUnmanagedData", "NativeArray.unsafeGet()": "nativearray.html#unsafeGet", "NativeArray.unsafeSet()": "nativearray.html#unsafeSet", "NativeArray.zero()": "nativearray.html#zero", "NativeFile": "nativefile.html", "NativeFile.file_close()": "nativefile.html#file_close", "NativeFile.file_contents_bytes()": "nativefile.html#file_contents_bytes", "NativeFile.file_contents_string()": "nativefile.html#file_contents_string", "NativeFile.file_eof()": "nativefile.html#file_eof", "NativeFile.file_flush()": "nativefile.html#file_flush", "NativeFile.file_open()": "nativefile.html#file_open", "NativeFile.file_read()": "nativefile.html#file_read", "NativeFile.file_read_char()": "nativefile.html#file_read_char", "NativeFile.file_seek()": "nativefile.html#file_seek", "NativeFile.file_stderr()": "nativefile.html#file_stderr", "NativeFile.file_stdin()": "nativefile.html#file_stdin", "NativeFile.file_stdout()": "nativefile.html#file_stdout", "NativeFile.file_tell()": "nativefile.html#file_tell", "NativeFile.file_write()": "nativefile.html#file_write", "NativeFile.file_write_char()": "nativefile.html#file_write_char", "NativeGc": "nativegc.html", "NativeGc.addFinalizable()": "nativegc.html#addFinalizable", "NativeGc.allocateExtended()": "nativegc.html#allocateExtended", "NativeGc.allocGcBytes()": "nativegc.html#allocGcBytes", "NativeGc.allocGcBytesRaw()": "nativegc.html#allocGcBytesRaw", "NativeGc.compact()": "nativegc.html#compact", "NativeGc.doNotKill()": "nativegc.html#doNotKill", "NativeGc.enable()": "nativegc.html#enable", "NativeGc.enterGCFreeZone()": "nativegc.html#enterGCFreeZone", "NativeGc.exitGCFreeZone()": "nativegc.html#exitGCFreeZone", "NativeGc.getNextZombie()": "nativegc.html#getNextZombie", "NativeGc.memInfo()": "nativegc.html#memInfo", "NativeGc.nativeTrace()": "nativegc.html#nativeTrace", "NativeGc.run()": "nativegc.html#run", "NativeGc.safePoint()": "nativegc.html#safePoint", "NativeGc.setMinimumFreeSpace()": "nativegc.html#setMinimumFreeSpace", "NativeGc.setMinimumWorkingMemory()": "nativegc.html#setMinimumWorkingMemory", "NativeGc.setTargetFreeSpacePercentage()": "nativegc.html#setTargetFreeSpacePercentage", "NativeMath": "nativemath.html", "NativeMath.castInt()": "nativemath.html#castInt", "NativeMath.fastInt()": "nativemath.html#fastInt", "NativeMath.idiv()": "nativemath.html#idiv", "NativeMath.imod()": "nativemath.html#imod", "NativeProcess": "nativeprocess.html", "NativeProcess.process_close()": "nativeprocess.html#process_close", "NativeProcess.process_exit()": "nativeprocess.html#process_exit", "NativeProcess.process_kill()": "nativeprocess.html#process_kill", "NativeProcess.process_pid()": "nativeprocess.html#process_pid", "NativeProcess.process_run()": "nativeprocess.html#process_run", "NativeProcess.process_run_with_show()": "nativeprocess.html#process_run_with_show", "NativeProcess.process_stderr_read()": "nativeprocess.html#process_stderr_read", "NativeProcess.process_stdin_close()": "nativeprocess.html#process_stdin_close", "NativeProcess.process_stdin_write()": "nativeprocess.html#process_stdin_write", "NativeProcess.process_stdout_read()": "nativeprocess.html#process_stdout_read", "NativeRandom": "nativerandom.html", "NativeRandom.random_float()": "nativerandom.html#random_float", "NativeRandom.random_int()": "nativerandom.html#random_int", "NativeRandom.random_new()": "nativerandom.html#random_new", "NativeRandom.random_set_seed()": "nativerandom.html#random_set_seed", "NativeSocket": "nativesocket.html", "NativeSocket.host_local()": "nativesocket.html#host_local", "NativeSocket.host_local_ipv6()": "nativesocket.html#host_local_ipv6", "NativeSocket.host_resolve()": "nativesocket.html#host_resolve", "NativeSocket.host_resolve_ipv6()": "nativesocket.html#host_resolve_ipv6", "NativeSocket.host_reverse()": "nativesocket.html#host_reverse", "NativeSocket.host_reverse_ipv6()": "nativesocket.html#host_reverse_ipv6", "NativeSocket.host_to_string()": "nativesocket.html#host_to_string", "NativeSocket.host_to_string_ipv6()": "nativesocket.html#host_to_string_ipv6", "NativeSocket.socket_accept()": "nativesocket.html#socket_accept", "NativeSocket.socket_bind()": "nativesocket.html#socket_bind", "NativeSocket.socket_bind_ipv6()": "nativesocket.html#socket_bind_ipv6", "NativeSocket.socket_close()": "nativesocket.html#socket_close", "NativeSocket.socket_connect()": "nativesocket.html#socket_connect", "NativeSocket.socket_connect_ipv6()": "nativesocket.html#socket_connect_ipv6", "NativeSocket.socket_fast_select()": "nativesocket.html#socket_fast_select", "NativeSocket.socket_host()": "nativesocket.html#socket_host", "NativeSocket.socket_init()": "nativesocket.html#socket_init", "NativeSocket.socket_listen()": "nativesocket.html#socket_listen", "NativeSocket.socket_new()": "nativesocket.html#socket_new", "NativeSocket.socket_new_ip()": "nativesocket.html#socket_new_ip", "NativeSocket.socket_peer()": "nativesocket.html#socket_peer", "NativeSocket.socket_poll()": "nativesocket.html#socket_poll", "NativeSocket.socket_poll_alloc()": "nativesocket.html#socket_poll_alloc", "NativeSocket.socket_poll_events()": "nativesocket.html#socket_poll_events", "NativeSocket.socket_poll_prepare()": "nativesocket.html#socket_poll_prepare", "NativeSocket.socket_read()": "nativesocket.html#socket_read", "NativeSocket.socket_recv()": "nativesocket.html#socket_recv", "NativeSocket.socket_recv_char()": "nativesocket.html#socket_recv_char", "NativeSocket.socket_recv_from()": "nativesocket.html#socket_recv_from", "NativeSocket.socket_select()": "nativesocket.html#socket_select", "NativeSocket.socket_send()": "nativesocket.html#socket_send", "NativeSocket.socket_send_char()": "nativesocket.html#socket_send_char", "NativeSocket.socket_send_to()": "nativesocket.html#socket_send_to", "NativeSocket.socket_set_blocking()": "nativesocket.html#socket_set_blocking", "NativeSocket.socket_set_broadcast()": "nativesocket.html#socket_set_broadcast", "NativeSocket.socket_set_fast_send()": "nativesocket.html#socket_set_fast_send", "NativeSocket.socket_set_timeout()": "nativesocket.html#socket_set_timeout", "NativeSocket.socket_shutdown()": "nativesocket.html#socket_shutdown", "NativeSocket.socket_write()": "nativesocket.html#socket_write", "NativeSsl": "nativessl.html", "NativeSsl.cert_add_der()": "nativessl.html#cert_add_der", "NativeSsl.cert_add_pem()": "nativessl.html#cert_add_pem", "NativeSsl.cert_get_altnames()": "nativessl.html#cert_get_altnames", "NativeSsl.cert_get_issuer()": "nativessl.html#cert_get_issuer", "NativeSsl.cert_get_next()": "nativessl.html#cert_get_next", "NativeSsl.cert_get_notafter()": "nativessl.html#cert_get_notafter", "NativeSsl.cert_get_notbefore()": "nativessl.html#cert_get_notbefore", "NativeSsl.cert_get_subject()": "nativessl.html#cert_get_subject", "NativeSsl.cert_load_defaults()": "nativessl.html#cert_load_defaults", "NativeSsl.cert_load_file()": "nativessl.html#cert_load_file", "NativeSsl.cert_load_path()": "nativessl.html#cert_load_path", "NativeSsl.conf_close()": "nativessl.html#conf_close", "NativeSsl.conf_new()": "nativessl.html#conf_new", "NativeSsl.conf_set_ca()": "nativessl.html#conf_set_ca", "NativeSsl.conf_set_cert()": "nativessl.html#conf_set_cert", "NativeSsl.conf_set_servername_callback()": "nativessl.html#conf_set_servername_callback", "NativeSsl.conf_set_verify()": "nativessl.html#conf_set_verify", "NativeSsl.dgst_make()": "nativessl.html#dgst_make", "NativeSsl.dgst_sign()": "nativessl.html#dgst_sign", "NativeSsl.dgst_verify()": "nativessl.html#dgst_verify", "NativeSsl.init()": "nativessl.html#init", "NativeSsl.key_from_der()": "nativessl.html#key_from_der", "NativeSsl.key_from_pem()": "nativessl.html#key_from_pem", "NativeSsl.ssl_close()": "nativessl.html#ssl_close", "NativeSsl.ssl_debug_set()": "nativessl.html#ssl_debug_set", "NativeSsl.ssl_get_peer_certificate()": "nativessl.html#ssl_get_peer_certificate", "NativeSsl.ssl_get_verify_result()": "nativessl.html#ssl_get_verify_result", "NativeSsl.ssl_handshake()": "nativessl.html#ssl_handshake", "NativeSsl.ssl_new()": "nativessl.html#ssl_new", "NativeSsl.ssl_read()": "nativessl.html#ssl_read", "NativeSsl.ssl_recv()": "nativessl.html#ssl_recv", "NativeSsl.ssl_recv_char()": "nativessl.html#ssl_recv_char", "NativeSsl.ssl_send()": "nativessl.html#ssl_send", "NativeSsl.ssl_send_char()": "nativessl.html#ssl_send_char", "NativeSsl.ssl_set_hostname()": "nativessl.html#ssl_set_hostname", "NativeSsl.ssl_set_socket()": "nativessl.html#ssl_set_socket", "NativeSsl.ssl_write()": "nativessl.html#ssl_write", "NativeString": "nativestring.html", "NativeString.c_str()": "nativestring.html#c_str", "NativeString.compare()": "nativestring.html#compare", "NativeString.fromGcPointer()": "nativestring.html#fromGcPointer", "NativeString.fromPointer()": "nativestring.html#fromPointer", "NativeString.fromPointerLen()": "nativestring.html#fromPointerLen", "NativeString.raw()": "nativestring.html#raw", "NativeString.utf8CharCodeAt()": "nativestring.html#utf8CharCodeAt", "NativeString.utf8DecodeAdvance()": "nativestring.html#utf8DecodeAdvance", "NativeString.utf8IsValid()": "nativestring.html#utf8IsValid", "NativeString.utf8Length()": "nativestring.html#utf8Length", "NativeString.utf8Sub()": "nativestring.html#utf8Sub", "NativeSys": "nativesys.html", "NativeSys.file_delete()": "nativesys.html#file_delete", "NativeSys.file_full_path()": "nativesys.html#file_full_path", "NativeSys.get_cwd()": "nativesys.html#get_cwd", "NativeSys.get_env()": "nativesys.html#get_env", "NativeSys.print()": "nativesys.html#print", "NativeSys.println()": "nativesys.html#println", "NativeSys.put_env()": "nativesys.html#put_env", "NativeSys.set_cwd()": "nativesys.html#set_cwd", "NativeSys.set_time_locale()": "nativesys.html#set_time_locale", "NativeSys.sys_command()": "nativesys.html#sys_command", "NativeSys.sys_cpu_time()": "nativesys.html#sys_cpu_time", "NativeSys.sys_create_dir()": "nativesys.html#sys_create_dir", "NativeSys.sys_env()": "nativesys.html#sys_env", "NativeSys.sys_exe_path()": "nativesys.html#sys_exe_path", "NativeSys.sys_exists()": "nativesys.html#sys_exists", "NativeSys.sys_exit()": "nativesys.html#sys_exit", "NativeSys.sys_file_type()": "nativesys.html#sys_file_type", "NativeSys.sys_get_pid()": "nativesys.html#sys_get_pid", "NativeSys.sys_getch()": "nativesys.html#sys_getch", "NativeSys.sys_is64()": "nativesys.html#sys_is64", "NativeSys.sys_read_dir()": "nativesys.html#sys_read_dir", "NativeSys.sys_remove_dir()": "nativesys.html#sys_remove_dir", "NativeSys.sys_rename()": "nativesys.html#sys_rename", "NativeSys.sys_sleep()": "nativesys.html#sys_sleep", "NativeSys.sys_stat()": "nativesys.html#sys_stat", "NativeSys.sys_string()": "nativesys.html#sys_string", "NativeSys.sys_time()": "nativesys.html#sys_time", "NativeVirtualArray": "nativevirtualarray.html", "NativeVirtualArray.concat()": "nativevirtualarray.html#concat", "NativeVirtualArray.copy()": "nativevirtualarray.html#copy", "NativeVirtualArray.filter()": "nativevirtualarray.html#filter", "NativeVirtualArray.indexOf()": "nativevirtualarray.html#indexOf", "NativeVirtualArray.insert()": "nativevirtualarray.html#insert", "NativeVirtualArray.iterator()": "nativevirtualarray.html#iterator", "NativeVirtualArray.join()": "nativevirtualarray.html#join", "NativeVirtualArray.keyValueIterator()": "nativevirtualarray.html#keyValueIterator", "NativeVirtualArray.lastIndexOf()": "nativevirtualarray.html#lastIndexOf", "NativeVirtualArray.length": "nativevirtualarray.html#length", "NativeVirtualArray.map()": "nativevirtualarray.html#map", "NativeVirtualArray.pop()": "nativevirtualarray.html#pop", "NativeVirtualArray.push()": "nativevirtualarray.html#push", "NativeVirtualArray.remove()": "nativevirtualarray.html#remove", "NativeVirtualArray.resize()": "nativevirtualarray.html#resize", "NativeVirtualArray.reverse()": "nativevirtualarray.html#reverse", "NativeVirtualArray.shift()": "nativevirtualarray.html#shift", "NativeVirtualArray.slice()": "nativevirtualarray.html#slice", "NativeVirtualArray.sort()": "nativevirtualarray.html#sort", "NativeVirtualArray.splice()": "nativevirtualarray.html#splice", "NativeVirtualArray.toString()": "nativevirtualarray.html#toString", "NativeVirtualArray.unshift()": "nativevirtualarray.html#unshift", "NativeXmlState": "nativexmlstate.html", "NativeXmlState.cdata()": "nativexmlstate.html#cdata", "NativeXmlState.comment()": "nativexmlstate.html#comment", "NativeXmlState.doctype()": "nativexmlstate.html#doctype", "NativeXmlState.done()": "nativexmlstate.html#done", "NativeXmlState.pcdata()": "nativexmlstate.html#pcdata", "NativeXmlState.xml()": "nativexmlstate.html#xml", "NSData": "objc/nsdata.html", "NSData.fromBytes()": "objc/nsdata.html#fromBytes", "NSData.fromBytesData()": "objc/nsdata.html#fromBytesData", "NSData.NSDataDataToBytes()": "objc/nsdata.html#NSDataDataToBytes", "NSData.to_data()": "objc/nsdata.html#to_data", "NSData.to_data_data()": "objc/nsdata.html#to_data_data", "NSData.toBytes()": "objc/nsdata.html#toBytes", "NSData.toBytesData()": "objc/nsdata.html#toBytesData", "NSData.toNSObject()": "objc/nsdata.html#toNSObject", "NSDataData": "objc/nsdatadata.html", "NSDictionary": "objc/nsdictionary.html", "NSDictionary._hx_nsdictionary_to_obj()": "objc/nsdictionary.html#_hx_nsdictionary_to_obj", "NSDictionary._hx_obj_to_nsdictionary()": "objc/nsdictionary.html#_hx_obj_to_nsdictionary", "NSDictionary.fromDynamic()": "objc/nsdictionary.html#fromDynamic", "NSDictionary.toDynamic()": "objc/nsdictionary.html#toDynamic", "NSDictionary.toNSObject()": "objc/nsdictionary.html#toNSObject", "NSError": "objc/nserror.html", "NSLog": "objc/nslog.html", "NSLog.log()": "objc/nslog.html#log", "NSObject": "objc/nsobject.html", "NSObject._hx_objc_to_dynamic()": "objc/nsobject.html#_hx_objc_to_dynamic", "NSObject._hx_value_to_objc()": "objc/nsobject.html#_hx_value_to_objc", "NSObject.fromHaxe()": "objc/nsobject.html#fromHaxe", "NSObject.toHaxe()": "objc/nsobject.html#toHaxe", "NSObjectData": "objc/nsobjectdata.html", "NSString": "objc/nsstring.html", "NSString.castFromString()": "objc/nsstring.html#castFromString", "NSString.castToString()": "objc/nsstring.html#castToString", "NSString.fromString()": "objc/nsstring.html#fromString", "NSString.toNSObject()": "objc/nsstring.html#toNSObject", "NSString.toObject()": "objc/nsstring.html#toObject", "NSString.toString()": "objc/nsstring.html#toString", "NSStringData": "objc/nsstringdata.html", "ObjcBlock": "objc/objcblock.html", "Object": "object.html", "ObjectType": "objecttype.html", "ObjectType.vtAbstractBase": "objecttype.html#vtAbstractBase", "ObjectType.vtArray": "objecttype.html#vtArray", "ObjectType.vtBool": "objecttype.html#vtBool", "ObjectType.vtClass": "objecttype.html#vtClass", "ObjectType.vtEnum": "objecttype.html#vtEnum", "ObjectType.vtFloat": "objecttype.html#vtFloat", "ObjectType.vtFunction": "objecttype.html#vtFunction", "ObjectType.vtInt": "objecttype.html#vtInt", "ObjectType.vtInt64": "objecttype.html#vtInt64", "ObjectType.vtNull": "objecttype.html#vtNull", "ObjectType.vtObject": "objecttype.html#vtObject", "ObjectType.vtString": "objecttype.html#vtString", "ObjectType.vtUnknown": "objecttype.html#vtUnknown", "Parameter": "vm/parameter.html", "Parameter.name": "vm/parameter.html#name", "Parameter.value": "vm/parameter.html#value", "Pointer": "pointer.html", "Pointer.addressOf()": "pointer.html#addressOf", "Pointer.arrayElem()": "pointer.html#arrayElem", "Pointer.destroy()": "pointer.html#destroy", "Pointer.destroyArray()": "pointer.html#destroyArray", "Pointer.endOf()": "pointer.html#endOf", "Pointer.fromHandle()": "pointer.html#fromHandle", "Pointer.fromPointer()": "pointer.html#fromPointer", "Pointer.fromRaw()": "pointer.html#fromRaw", "Pointer.fromStar()": "pointer.html#fromStar", "Pointer.get_ref()": "pointer.html#get_ref", "Pointer.nativeArrayElem()": "pointer.html#nativeArrayElem", "Pointer.nativeFromHandle()": "pointer.html#nativeFromHandle", "Pointer.nativeOfArray()": "pointer.html#nativeOfArray", "Pointer.ofArray()": "pointer.html#ofArray", "Pointer.postIncRef()": "pointer.html#postIncRef", "Pointer.ref": "pointer.html#ref", "Pointer.set_ref()": "pointer.html#set_ref", "Pointer.setAt()": "pointer.html#setAt", "Pointer.toUnmanagedArray()": "pointer.html#toUnmanagedArray", "Pointer.toUnmanagedVector()": "pointer.html#toUnmanagedVector", "Poll": "net/poll.html", "Poll.events()": "net/poll.html#events", "Poll.poll()": "net/poll.html#poll", "Poll.prepare()": "net/poll.html#prepare", "Poll.readIndexes": "net/poll.html#readIndexes", "Poll.writeIndexes": "net/poll.html#writeIndexes", "Prime": "prime.html", "Prime._loadPrime()": "prime.html#_loadPrime", "Prime.load()": "prime.html#load", "Prime.nekoInit()": "prime.html#nekoInit", "Profiler": "vm/profiler.html", "Profiler.start()": "vm/profiler.html#start", "Profiler.stop()": "vm/profiler.html#stop", "Protocol": "objc/protocol.html", "Random": "random.html", "Random.float()": "random.html#float", "Random.int()": "random.html#int", "Random.setSeed()": "random.html#setSeed", "RawConstPointer": "rawconstpointer.html", "RawConstPointer.addressOf()": "rawconstpointer.html#addressOf", "RawPointer": "rawpointer.html", "RawPointer.addressOf()": "rawpointer.html#addressOf", "Reference": "reference.html", "SizeT": "sizet.html", "StackFrame": "vm/stackframe.html", "StackFrame.className": "vm/stackframe.html#className", "StackFrame.fileName": "vm/stackframe.html#fileName", "StackFrame.functionName": "vm/stackframe.html#functionName", "StackFrame.lineNumber": "vm/stackframe.html#lineNumber", "StackFrame.parameters": "vm/stackframe.html#parameters", "Star": "star.html", "StaticMysql": "link/staticmysql.html", "StaticRegexp": "link/staticregexp.html", "StaticSqlite": "link/staticsqlite.html", "StaticStd": "link/staticstd.html", "StaticZlib": "link/staticzlib.html", "StdCall": "abi/stdcall.html", "Stdio": "stdio.html", "Stdio.fclose()": "stdio.html#fclose", "Stdio.fopen()": "stdio.html#fopen", "Stdio.fprintf()": "stdio.html#fprintf", "Stdio.fwrite()": "stdio.html#fwrite", "Stdio.printf()": "stdio.html#printf", "Stdlib": "stdlib.html", "Stdlib.calloc()": "stdlib.html#calloc", "Stdlib.free()": "stdlib.html#free", "Stdlib.malloc()": "stdlib.html#malloc", "Stdlib.memcpy()": "stdlib.html#memcpy", "Stdlib.nativeCalloc()": "stdlib.html#nativeCalloc", "Stdlib.nativeFree()": "stdlib.html#nativeFree", "Stdlib.nativeMalloc()": "stdlib.html#nativeMalloc", "Stdlib.nativeMemcpy()": "stdlib.html#nativeMemcpy", "Stdlib.nativeRealloc()": "stdlib.html#nativeRealloc", "Stdlib.realloc()": "stdlib.html#realloc", "Stdlib.sizeof()": "stdlib.html#sizeof", "StdString": "stdstring.html", "StdString.c_str()": "stdstring.html#c_str", "StdString.find()": "stdstring.html#find", "StdString.npos": "stdstring.html#npos", "StdString.ofString()": "stdstring.html#ofString", "StdString.size()": "stdstring.html#size", "StdString.substr()": "stdstring.html#substr", "StdString.toStdString()": "stdstring.html#toStdString", "StdString.toString()": "stdstring.html#toString", "StdStringRef": "stdstringref.html", "StdStringRef.c_str()": "stdstringref.html#c_str", "StdStringRef.find()": "stdstringref.html#find", "StdStringRef.size()": "stdstringref.html#size", "StdStringRef.substr()": "stdstringref.html#substr", "StdStringRef.toStdString()": "stdstringref.html#toStdString", "StdStringRef.toString()": "stdstringref.html#toString", "Struct": "struct.html", "ThisCall": "abi/thiscall.html", "Thread": "vm/thread.html", "ThreadInfo": "vm/threadinfo.html", "ThreadInfo.breakpoint": "vm/threadinfo.html#breakpoint", "ThreadInfo.criticalErrorDescription": "vm/threadinfo.html#criticalErrorDescription", "ThreadInfo.number": "vm/threadinfo.html#number", "ThreadInfo.stack": "vm/threadinfo.html#stack", "ThreadInfo.status": "vm/threadinfo.html#status", "ThreadInfo.STATUS_RUNNING": "vm/threadinfo.html#STATUS_RUNNING", "ThreadInfo.STATUS_STOPPED_BREAK_IMMEDIATE": "vm/threadinfo.html#STATUS_STOPPED_BREAK_IMMEDIATE", "ThreadInfo.STATUS_STOPPED_BREAKPOINT": "vm/threadinfo.html#STATUS_STOPPED_BREAKPOINT", "ThreadInfo.STATUS_STOPPED_CRITICAL_ERROR": "vm/threadinfo.html#STATUS_STOPPED_CRITICAL_ERROR", "ThreadInfo.STATUS_STOPPED_UNCAUGHT_EXCEPTION": "vm/threadinfo.html#STATUS_STOPPED_UNCAUGHT_EXCEPTION", "ThreadServer": "net/threadserver.html", "ThreadServer.addSocket()": "net/threadserver.html#addSocket", "ThreadServer.afterEvent()": "net/threadserver.html#afterEvent", "ThreadServer.clientConnected()": "net/threadserver.html#clientConnected", "ThreadServer.clientDisconnected()": "net/threadserver.html#clientDisconnected", "ThreadServer.clientMessage()": "net/threadserver.html#clientMessage", "ThreadServer.connectLag": "net/threadserver.html#connectLag", "ThreadServer.errorOutput": "net/threadserver.html#errorOutput", "ThreadServer.initialBufferSize": "net/threadserver.html#initialBufferSize", "ThreadServer.listen": "net/threadserver.html#listen", "ThreadServer.maxBufferSize": "net/threadserver.html#maxBufferSize", "ThreadServer.maxSockPerThread": "net/threadserver.html#maxSockPerThread", "ThreadServer.messageHeaderSize": "net/threadserver.html#messageHeaderSize", "ThreadServer.nthreads": "net/threadserver.html#nthreads", "ThreadServer.onError()": "net/threadserver.html#onError", "ThreadServer.readClientMessage()": "net/threadserver.html#readClientMessage", "ThreadServer.run()": "net/threadserver.html#run", "ThreadServer.sendData()": "net/threadserver.html#sendData", "ThreadServer.stopClient()": "net/threadserver.html#stopClient", "ThreadServer.update()": "net/threadserver.html#update", "ThreadServer.updateTime": "net/threadserver.html#updateTime", "ThreadServer.work()": "net/threadserver.html#work", "Tls": "vm/tls.html", "UInt16": "uint16.html", "UInt32": "uint32.html", "UInt64": "uint64.html", "UInt8": "uint8.html", "Uncompress": "zip/uncompress.html", "Unsafe": "vm/unsafe.html", "Unsafe.unsafeSet()": "vm/unsafe.html#unsafeSet", "VarArg": "vararg.html", "VirtualArray": "virtualarray.html", "VirtualArray.concat()": "virtualarray.html#concat", "VirtualArray.copy()": "virtualarray.html#copy", "VirtualArray.filter()": "virtualarray.html#filter", "VirtualArray.fromArray()": "virtualarray.html#fromArray", "VirtualArray.get_length()": "virtualarray.html#get_length", "VirtualArray.indexOf()": "virtualarray.html#indexOf", "VirtualArray.insert()": "virtualarray.html#insert", "VirtualArray.iterator()": "virtualarray.html#iterator", "VirtualArray.join()": "virtualarray.html#join", "VirtualArray.keyValueIterator()": "virtualarray.html#keyValueIterator", "VirtualArray.lastIndexOf()": "virtualarray.html#lastIndexOf", "VirtualArray.length": "virtualarray.html#length", "VirtualArray.map()": "virtualarray.html#map", "VirtualArray.pop()": "virtualarray.html#pop", "VirtualArray.push()": "virtualarray.html#push", "VirtualArray.remove()": "virtualarray.html#remove", "VirtualArray.resize()": "virtualarray.html#resize", "VirtualArray.reverse()": "virtualarray.html#reverse", "VirtualArray.shift()": "virtualarray.html#shift", "VirtualArray.slice()": "virtualarray.html#slice", "VirtualArray.sort()": "virtualarray.html#sort", "VirtualArray.splice()": "virtualarray.html#splice", "VirtualArray.toArray()": "virtualarray.html#toArray", "VirtualArray.unshift()": "virtualarray.html#unshift", "Void": "void.html", "WeakRef": "vm/weakref.html", "WeakRef.get()": "vm/weakref.html#get", "WeakRef.set()": "vm/weakref.html#set", "WeakRef.toString()": "vm/weakref.html#toString", "Winapi": "abi/winapi.html", "Xml": "xml.html", "Xml.addChild()": "xml.html#addChild", "Xml.attributes()": "xml.html#attributes", "Xml.createCData()": "xml.html#createCData", "Xml.createComment()": "xml.html#createComment", "Xml.createDocType()": "xml.html#createDocType", "Xml.createDocument()": "xml.html#createDocument", "Xml.createElement()": "xml.html#createElement", "Xml.createPCData()": "xml.html#createPCData", "Xml.createProcessingInstruction()": "xml.html#createProcessingInstruction", "Xml.elements()": "xml.html#elements", "Xml.elementsNamed()": "xml.html#elementsNamed", "Xml.exists()": "xml.html#exists", "Xml.firstChild()": "xml.html#firstChild", "Xml.firstElement()": "xml.html#firstElement", "Xml.get()": "xml.html#get", "Xml.insertChild()": "xml.html#insertChild", "Xml.iterator()": "xml.html#iterator", "Xml.nodeName": "xml.html#nodeName", "Xml.nodeType": "xml.html#nodeType", "Xml.nodeValue": "xml.html#nodeValue", "Xml.parent": "xml.html#parent", "Xml.parse()": "xml.html#parse", "Xml.remove()": "xml.html#remove", "Xml.removeChild()": "xml.html#removeChild", "Xml.set()": "xml.html#set", "Xml.toString()": "xml.html#toString", "XmlType": "xmltype.html", "XmlType.CData": "xmltype.html#CData", "XmlType.Comment": "xmltype.html#Comment", "XmlType.DocType": "xmltype.html#DocType", "XmlType.Document": "xmltype.html#Document", "XmlType.Element": "xmltype.html#Element", "XmlType.PCData": "xmltype.html#PCData", "XmlType.ProcessingInstruction": "xmltype.html#ProcessingInstruction"}