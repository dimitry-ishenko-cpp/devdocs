{"1. Installing scikit-image": "user_guide/install.html", "3. Getting started": "user_guide/getting_started.html", "4. A crash course on NumPy for images": "user_guide/numpy_images.html", "5. Image data types and what they mean": "user_guide/data_types.html", "6. I/O Plugin Infrastructure": "user_guide/plugins.html", "7. Handling Video Files": "user_guide/video.html", "8. Data visualization": "user_guide/visualization.html", "9. Image adjustment: transforming image content": "user_guide/transforming_image_data.html", "10. Geometrical transformations of images": "user_guide/geometrical_transform.html", "11. Tutorials": "user_guide/tutorials.html", "11.1. Image Segmentation": "user_guide/tutorial_segmentation.html", "11.2. How to parallelize loops": "user_guide/tutorial_parallelization.html", "12. Getting help on using scikit-image": "user_guide/getting_help.html", "color.combine_stains()": "api/skimage.color.html#skimage.color.combine_stains", "color.convert_colorspace()": "api/skimage.color.html#skimage.color.convert_colorspace", "color.deltaE_cie76()": "api/skimage.color.html#skimage.color.deltaE_cie76", "color.deltaE_ciede2000()": "api/skimage.color.html#skimage.color.deltaE_ciede2000", "color.deltaE_ciede94()": "api/skimage.color.html#skimage.color.deltaE_ciede94", "color.deltaE_cmc()": "api/skimage.color.html#skimage.color.deltaE_cmc", "color.gray2rgb()": "api/skimage.color.html#skimage.color.gray2rgb", "color.gray2rgba()": "api/skimage.color.html#skimage.color.gray2rgba", "color.hed2rgb()": "api/skimage.color.html#skimage.color.hed2rgb", "color.hsv2rgb()": "api/skimage.color.html#skimage.color.hsv2rgb", "color.lab2lch()": "api/skimage.color.html#skimage.color.lab2lch", "color.lab2rgb()": "api/skimage.color.html#skimage.color.lab2rgb", "color.lab2xyz()": "api/skimage.color.html#skimage.color.lab2xyz", "color.label2rgb()": "api/skimage.color.html#skimage.color.label2rgb", "color.lch2lab()": "api/skimage.color.html#skimage.color.lch2lab", "color.luv2rgb()": "api/skimage.color.html#skimage.color.luv2rgb", "color.luv2xyz()": "api/skimage.color.html#skimage.color.luv2xyz", "color.rgb2gray()": "api/skimage.color.html#skimage.color.rgb2gray", "color.rgb2hed()": "api/skimage.color.html#skimage.color.rgb2hed", "color.rgb2hsv()": "api/skimage.color.html#skimage.color.rgb2hsv", "color.rgb2lab()": "api/skimage.color.html#skimage.color.rgb2lab", "color.rgb2luv()": "api/skimage.color.html#skimage.color.rgb2luv", "color.rgb2rgbcie()": "api/skimage.color.html#skimage.color.rgb2rgbcie", "color.rgb2xyz()": "api/skimage.color.html#skimage.color.rgb2xyz", "color.rgb2ycbcr()": "api/skimage.color.html#skimage.color.rgb2ycbcr", "color.rgb2ydbdr()": "api/skimage.color.html#skimage.color.rgb2ydbdr", "color.rgb2yiq()": "api/skimage.color.html#skimage.color.rgb2yiq", "color.rgb2ypbpr()": "api/skimage.color.html#skimage.color.rgb2ypbpr", "color.rgb2yuv()": "api/skimage.color.html#skimage.color.rgb2yuv", "color.rgba2rgb()": "api/skimage.color.html#skimage.color.rgba2rgb", "color.rgbcie2rgb()": "api/skimage.color.html#skimage.color.rgbcie2rgb", "color.separate_stains()": "api/skimage.color.html#skimage.color.separate_stains", "color.xyz2lab()": "api/skimage.color.html#skimage.color.xyz2lab", "color.xyz2luv()": "api/skimage.color.html#skimage.color.xyz2luv", "color.xyz2rgb()": "api/skimage.color.html#skimage.color.xyz2rgb", "color.xyz_tristimulus_values()": "api/skimage.color.html#skimage.color.xyz_tristimulus_values", "color.ycbcr2rgb()": "api/skimage.color.html#skimage.color.ycbcr2rgb", "color.ydbdr2rgb()": "api/skimage.color.html#skimage.color.ydbdr2rgb", "color.yiq2rgb()": "api/skimage.color.html#skimage.color.yiq2rgb", "color.ypbpr2rgb()": "api/skimage.color.html#skimage.color.ypbpr2rgb", "color.yuv2rgb()": "api/skimage.color.html#skimage.color.yuv2rgb", "data.astronaut()": "api/skimage.data.html#skimage.data.astronaut", "data.binary_blobs()": "api/skimage.data.html#skimage.data.binary_blobs", "data.brain()": "api/skimage.data.html#skimage.data.brain", "data.brick()": "api/skimage.data.html#skimage.data.brick", "data.camera()": "api/skimage.data.html#skimage.data.camera", "data.cat()": "api/skimage.data.html#skimage.data.cat", "data.cell()": "api/skimage.data.html#skimage.data.cell", "data.cells3d()": "api/skimage.data.html#skimage.data.cells3d", "data.checkerboard()": "api/skimage.data.html#skimage.data.checkerboard", "data.chelsea()": "api/skimage.data.html#skimage.data.chelsea", "data.clock()": "api/skimage.data.html#skimage.data.clock", "data.coffee()": "api/skimage.data.html#skimage.data.coffee", "data.coins()": "api/skimage.data.html#skimage.data.coins", "data.colorwheel()": "api/skimage.data.html#skimage.data.colorwheel", "data.download_all()": "api/skimage.data.html#skimage.data.download_all", "data.eagle()": "api/skimage.data.html#skimage.data.eagle", "data.file_hash()": "api/skimage.data.html#skimage.data.file_hash", "data.grass()": "api/skimage.data.html#skimage.data.grass", "data.gravel()": "api/skimage.data.html#skimage.data.gravel", "data.horse()": "api/skimage.data.html#skimage.data.horse", "data.hubble_deep_field()": "api/skimage.data.html#skimage.data.hubble_deep_field", "data.human_mitosis()": "api/skimage.data.html#skimage.data.human_mitosis", "data.immunohistochemistry()": "api/skimage.data.html#skimage.data.immunohistochemistry", "data.kidney()": "api/skimage.data.html#skimage.data.kidney", "data.lbp_frontal_face_cascade_filename()": "api/skimage.data.html#skimage.data.lbp_frontal_face_cascade_filename", "data.lfw_subset()": "api/skimage.data.html#skimage.data.lfw_subset", "data.lily()": "api/skimage.data.html#skimage.data.lily", "data.logo()": "api/skimage.data.html#skimage.data.logo", "data.microaneurysms()": "api/skimage.data.html#skimage.data.microaneurysms", "data.moon()": "api/skimage.data.html#skimage.data.moon", "data.nickel_solidification()": "api/skimage.data.html#skimage.data.nickel_solidification", "data.page()": "api/skimage.data.html#skimage.data.page", "data.palisades_of_vogt()": "api/skimage.data.html#skimage.data.palisades_of_vogt", "data.protein_transport()": "api/skimage.data.html#skimage.data.protein_transport", "data.retina()": "api/skimage.data.html#skimage.data.retina", "data.rocket()": "api/skimage.data.html#skimage.data.rocket", "data.shepp_logan_phantom()": "api/skimage.data.html#skimage.data.shepp_logan_phantom", "data.skin()": "api/skimage.data.html#skimage.data.skin", "data.stereo_motorcycle()": "api/skimage.data.html#skimage.data.stereo_motorcycle", "data.text()": "api/skimage.data.html#skimage.data.text", "data.vortex()": "api/skimage.data.html#skimage.data.vortex", "draw.bezier_curve()": "api/skimage.draw.html#skimage.draw.bezier_curve", "draw.circle_perimeter()": "api/skimage.draw.html#skimage.draw.circle_perimeter", "draw.circle_perimeter_aa()": "api/skimage.draw.html#skimage.draw.circle_perimeter_aa", "draw.disk()": "api/skimage.draw.html#skimage.draw.disk", "draw.ellipse()": "api/skimage.draw.html#skimage.draw.ellipse", "draw.ellipse_perimeter()": "api/skimage.draw.html#skimage.draw.ellipse_perimeter", "draw.ellipsoid()": "api/skimage.draw.html#skimage.draw.ellipsoid", "draw.ellipsoid_stats()": "api/skimage.draw.html#skimage.draw.ellipsoid_stats", "draw.line()": "api/skimage.draw.html#skimage.draw.line", "draw.line_aa()": "api/skimage.draw.html#skimage.draw.line_aa", "draw.line_nd()": "api/skimage.draw.html#skimage.draw.line_nd", "draw.polygon()": "api/skimage.draw.html#skimage.draw.polygon", "draw.polygon2mask()": "api/skimage.draw.html#skimage.draw.polygon2mask", "draw.polygon_perimeter()": "api/skimage.draw.html#skimage.draw.polygon_perimeter", "draw.random_shapes()": "api/skimage.draw.html#skimage.draw.random_shapes", "draw.rectangle()": "api/skimage.draw.html#skimage.draw.rectangle", "draw.rectangle_perimeter()": "api/skimage.draw.html#skimage.draw.rectangle_perimeter", "draw.set_color()": "api/skimage.draw.html#skimage.draw.set_color", "exposure.adjust_gamma()": "api/skimage.exposure.html#skimage.exposure.adjust_gamma", "exposure.adjust_log()": "api/skimage.exposure.html#skimage.exposure.adjust_log", "exposure.adjust_sigmoid()": "api/skimage.exposure.html#skimage.exposure.adjust_sigmoid", "exposure.cumulative_distribution()": "api/skimage.exposure.html#skimage.exposure.cumulative_distribution", "exposure.equalize_adapthist()": "api/skimage.exposure.html#skimage.exposure.equalize_adapthist", "exposure.equalize_hist()": "api/skimage.exposure.html#skimage.exposure.equalize_hist", "exposure.histogram()": "api/skimage.exposure.html#skimage.exposure.histogram", "exposure.is_low_contrast()": "api/skimage.exposure.html#skimage.exposure.is_low_contrast", "exposure.match_histograms()": "api/skimage.exposure.html#skimage.exposure.match_histograms", "exposure.rescale_intensity()": "api/skimage.exposure.html#skimage.exposure.rescale_intensity", "feature.blob_dog()": "api/skimage.feature.html#skimage.feature.blob_dog", "feature.blob_doh()": "api/skimage.feature.html#skimage.feature.blob_doh", "feature.blob_log()": "api/skimage.feature.html#skimage.feature.blob_log", "feature.BRIEF": "api/skimage.feature.html#skimage.feature.BRIEF", "feature.BRIEF.__init__()": "api/skimage.feature.html#skimage.feature.BRIEF.__init__", "feature.BRIEF.extract()": "api/skimage.feature.html#skimage.feature.BRIEF.extract", "feature.canny()": "api/skimage.feature.html#skimage.feature.canny", "feature.Cascade": "api/skimage.feature.html#skimage.feature.Cascade", "feature.Cascade.__init__()": "api/skimage.feature.html#skimage.feature.Cascade.__init__", "feature.Cascade.detect_multi_scale()": "api/skimage.feature.html#skimage.feature.Cascade.detect_multi_scale", "feature.Cascade.eps": "api/skimage.feature.html#skimage.feature.Cascade.eps", "feature.Cascade.features_number": "api/skimage.feature.html#skimage.feature.Cascade.features_number", "feature.Cascade.stages_number": "api/skimage.feature.html#skimage.feature.Cascade.stages_number", "feature.Cascade.stumps_number": "api/skimage.feature.html#skimage.feature.Cascade.stumps_number", "feature.Cascade.window_height": "api/skimage.feature.html#skimage.feature.Cascade.window_height", "feature.Cascade.window_width": "api/skimage.feature.html#skimage.feature.Cascade.window_width", "feature.CENSURE": "api/skimage.feature.html#skimage.feature.CENSURE", "feature.CENSURE.__init__()": "api/skimage.feature.html#skimage.feature.CENSURE.__init__", "feature.CENSURE.detect()": "api/skimage.feature.html#skimage.feature.CENSURE.detect", "feature.corner_fast()": "api/skimage.feature.html#skimage.feature.corner_fast", "feature.corner_foerstner()": "api/skimage.feature.html#skimage.feature.corner_foerstner", "feature.corner_harris()": "api/skimage.feature.html#skimage.feature.corner_harris", "feature.corner_kitchen_rosenfeld()": "api/skimage.feature.html#skimage.feature.corner_kitchen_rosenfeld", "feature.corner_moravec()": "api/skimage.feature.html#skimage.feature.corner_moravec", "feature.corner_orientations()": "api/skimage.feature.html#skimage.feature.corner_orientations", "feature.corner_peaks()": "api/skimage.feature.html#skimage.feature.corner_peaks", "feature.corner_shi_tomasi()": "api/skimage.feature.html#skimage.feature.corner_shi_tomasi", "feature.corner_subpix()": "api/skimage.feature.html#skimage.feature.corner_subpix", "feature.daisy()": "api/skimage.feature.html#skimage.feature.daisy", "feature.draw_haar_like_feature()": "api/skimage.feature.html#skimage.feature.draw_haar_like_feature", "feature.draw_multiblock_lbp()": "api/skimage.feature.html#skimage.feature.draw_multiblock_lbp", "feature.fisher_vector()": "api/skimage.feature.html#skimage.feature.fisher_vector", "feature.graycomatrix()": "api/skimage.feature.html#skimage.feature.graycomatrix", "feature.graycoprops()": "api/skimage.feature.html#skimage.feature.graycoprops", "feature.haar_like_feature()": "api/skimage.feature.html#skimage.feature.haar_like_feature", "feature.haar_like_feature_coord()": "api/skimage.feature.html#skimage.feature.haar_like_feature_coord", "feature.hessian_matrix()": "api/skimage.feature.html#skimage.feature.hessian_matrix", "feature.hessian_matrix_det()": "api/skimage.feature.html#skimage.feature.hessian_matrix_det", "feature.hessian_matrix_eigvals()": "api/skimage.feature.html#skimage.feature.hessian_matrix_eigvals", "feature.hog()": "api/skimage.feature.html#skimage.feature.hog", "feature.learn_gmm()": "api/skimage.feature.html#skimage.feature.learn_gmm", "feature.local_binary_pattern()": "api/skimage.feature.html#skimage.feature.local_binary_pattern", "feature.match_descriptors()": "api/skimage.feature.html#skimage.feature.match_descriptors", "feature.match_template()": "api/skimage.feature.html#skimage.feature.match_template", "feature.multiblock_lbp()": "api/skimage.feature.html#skimage.feature.multiblock_lbp", "feature.multiscale_basic_features()": "api/skimage.feature.html#skimage.feature.multiscale_basic_features", "feature.ORB": "api/skimage.feature.html#skimage.feature.ORB", "feature.ORB.__init__()": "api/skimage.feature.html#skimage.feature.ORB.__init__", "feature.ORB.detect()": "api/skimage.feature.html#skimage.feature.ORB.detect", "feature.ORB.detect_and_extract()": "api/skimage.feature.html#skimage.feature.ORB.detect_and_extract", "feature.ORB.extract()": "api/skimage.feature.html#skimage.feature.ORB.extract", "feature.peak_local_max()": "api/skimage.feature.html#skimage.feature.peak_local_max", "feature.plot_matched_features()": "api/skimage.feature.html#skimage.feature.plot_matched_features", "feature.shape_index()": "api/skimage.feature.html#skimage.feature.shape_index", "feature.SIFT": "api/skimage.feature.html#skimage.feature.SIFT", "feature.SIFT.__init__()": "api/skimage.feature.html#skimage.feature.SIFT.__init__", "feature.SIFT.detect()": "api/skimage.feature.html#skimage.feature.SIFT.detect", "feature.SIFT.detect_and_extract()": "api/skimage.feature.html#skimage.feature.SIFT.detect_and_extract", "feature.SIFT.extract()": "api/skimage.feature.html#skimage.feature.SIFT.extract", "feature.structure_tensor()": "api/skimage.feature.html#skimage.feature.structure_tensor", "feature.structure_tensor_eigenvalues()": "api/skimage.feature.html#skimage.feature.structure_tensor_eigenvalues", "filters.apply_hysteresis_threshold()": "api/skimage.filters.html#skimage.filters.apply_hysteresis_threshold", "filters.butterworth()": "api/skimage.filters.html#skimage.filters.butterworth", "filters.correlate_sparse()": "api/skimage.filters.html#skimage.filters.correlate_sparse", "filters.difference_of_gaussians()": "api/skimage.filters.html#skimage.filters.difference_of_gaussians", "filters.farid()": "api/skimage.filters.html#skimage.filters.farid", "filters.farid_h()": "api/skimage.filters.html#skimage.filters.farid_h", "filters.farid_v()": "api/skimage.filters.html#skimage.filters.farid_v", "filters.filter_forward()": "api/skimage.filters.html#skimage.filters.filter_forward", "filters.filter_inverse()": "api/skimage.filters.html#skimage.filters.filter_inverse", "filters.frangi()": "api/skimage.filters.html#skimage.filters.frangi", "filters.gabor()": "api/skimage.filters.html#skimage.filters.gabor", "filters.gabor_kernel()": "api/skimage.filters.html#skimage.filters.gabor_kernel", "filters.gaussian()": "api/skimage.filters.html#skimage.filters.gaussian", "filters.hessian()": "api/skimage.filters.html#skimage.filters.hessian", "filters.laplace()": "api/skimage.filters.html#skimage.filters.laplace", "filters.LPIFilter2D": "api/skimage.filters.html#skimage.filters.LPIFilter2D", "filters.LPIFilter2D.__init__()": "api/skimage.filters.html#skimage.filters.LPIFilter2D.__init__", "filters.median()": "api/skimage.filters.html#skimage.filters.median", "filters.meijering()": "api/skimage.filters.html#skimage.filters.meijering", "filters.prewitt()": "api/skimage.filters.html#skimage.filters.prewitt", "filters.prewitt_h()": "api/skimage.filters.html#skimage.filters.prewitt_h", "filters.prewitt_v()": "api/skimage.filters.html#skimage.filters.prewitt_v", "filters.rank.autolevel()": "api/skimage.filters.rank.html#skimage.filters.rank.autolevel", "filters.rank.autolevel_percentile()": "api/skimage.filters.rank.html#skimage.filters.rank.autolevel_percentile", "filters.rank.enhance_contrast()": "api/skimage.filters.rank.html#skimage.filters.rank.enhance_contrast", "filters.rank.enhance_contrast_percentile()": "api/skimage.filters.rank.html#skimage.filters.rank.enhance_contrast_percentile", "filters.rank.entropy()": "api/skimage.filters.rank.html#skimage.filters.rank.entropy", "filters.rank.equalize()": "api/skimage.filters.rank.html#skimage.filters.rank.equalize", "filters.rank.geometric_mean()": "api/skimage.filters.rank.html#skimage.filters.rank.geometric_mean", "filters.rank.gradient()": "api/skimage.filters.rank.html#skimage.filters.rank.gradient", "filters.rank.gradient_percentile()": "api/skimage.filters.rank.html#skimage.filters.rank.gradient_percentile", "filters.rank.majority()": "api/skimage.filters.rank.html#skimage.filters.rank.majority", "filters.rank.maximum()": "api/skimage.filters.rank.html#skimage.filters.rank.maximum", "filters.rank.mean()": "api/skimage.filters.rank.html#skimage.filters.rank.mean", "filters.rank.mean_bilateral()": "api/skimage.filters.rank.html#skimage.filters.rank.mean_bilateral", "filters.rank.mean_percentile()": "api/skimage.filters.rank.html#skimage.filters.rank.mean_percentile", "filters.rank.median()": "api/skimage.filters.rank.html#skimage.filters.rank.median", "filters.rank.minimum()": "api/skimage.filters.rank.html#skimage.filters.rank.minimum", "filters.rank.modal()": "api/skimage.filters.rank.html#skimage.filters.rank.modal", "filters.rank.noise_filter()": "api/skimage.filters.rank.html#skimage.filters.rank.noise_filter", "filters.rank.otsu()": "api/skimage.filters.rank.html#skimage.filters.rank.otsu", "filters.rank.percentile()": "api/skimage.filters.rank.html#skimage.filters.rank.percentile", "filters.rank.pop()": "api/skimage.filters.rank.html#skimage.filters.rank.pop", "filters.rank.pop_bilateral()": "api/skimage.filters.rank.html#skimage.filters.rank.pop_bilateral", "filters.rank.pop_percentile()": "api/skimage.filters.rank.html#skimage.filters.rank.pop_percentile", "filters.rank.subtract_mean()": "api/skimage.filters.rank.html#skimage.filters.rank.subtract_mean", "filters.rank.subtract_mean_percentile()": "api/skimage.filters.rank.html#skimage.filters.rank.subtract_mean_percentile", "filters.rank.sum()": "api/skimage.filters.rank.html#skimage.filters.rank.sum", "filters.rank.sum_bilateral()": "api/skimage.filters.rank.html#skimage.filters.rank.sum_bilateral", "filters.rank.sum_percentile()": "api/skimage.filters.rank.html#skimage.filters.rank.sum_percentile", "filters.rank.threshold()": "api/skimage.filters.rank.html#skimage.filters.rank.threshold", "filters.rank.threshold_percentile()": "api/skimage.filters.rank.html#skimage.filters.rank.threshold_percentile", "filters.rank.windowed_histogram()": "api/skimage.filters.rank.html#skimage.filters.rank.windowed_histogram", "filters.rank_order()": "api/skimage.filters.html#skimage.filters.rank_order", "filters.roberts()": "api/skimage.filters.html#skimage.filters.roberts", "filters.roberts_neg_diag()": "api/skimage.filters.html#skimage.filters.roberts_neg_diag", "filters.roberts_pos_diag()": "api/skimage.filters.html#skimage.filters.roberts_pos_diag", "filters.sato()": "api/skimage.filters.html#skimage.filters.sato", "filters.scharr()": "api/skimage.filters.html#skimage.filters.scharr", "filters.scharr_h()": "api/skimage.filters.html#skimage.filters.scharr_h", "filters.scharr_v()": "api/skimage.filters.html#skimage.filters.scharr_v", "filters.sobel()": "api/skimage.filters.html#skimage.filters.sobel", "filters.sobel_h()": "api/skimage.filters.html#skimage.filters.sobel_h", "filters.sobel_v()": "api/skimage.filters.html#skimage.filters.sobel_v", "filters.threshold_isodata()": "api/skimage.filters.html#skimage.filters.threshold_isodata", "filters.threshold_li()": "api/skimage.filters.html#skimage.filters.threshold_li", "filters.threshold_local()": "api/skimage.filters.html#skimage.filters.threshold_local", "filters.threshold_mean()": "api/skimage.filters.html#skimage.filters.threshold_mean", "filters.threshold_minimum()": "api/skimage.filters.html#skimage.filters.threshold_minimum", "filters.threshold_multiotsu()": "api/skimage.filters.html#skimage.filters.threshold_multiotsu", "filters.threshold_niblack()": "api/skimage.filters.html#skimage.filters.threshold_niblack", "filters.threshold_otsu()": "api/skimage.filters.html#skimage.filters.threshold_otsu", "filters.threshold_sauvola()": "api/skimage.filters.html#skimage.filters.threshold_sauvola", "filters.threshold_triangle()": "api/skimage.filters.html#skimage.filters.threshold_triangle", "filters.threshold_yen()": "api/skimage.filters.html#skimage.filters.threshold_yen", "filters.try_all_threshold()": "api/skimage.filters.html#skimage.filters.try_all_threshold", "filters.unsharp_mask()": "api/skimage.filters.html#skimage.filters.unsharp_mask", "filters.wiener()": "api/skimage.filters.html#skimage.filters.wiener", "filters.window()": "api/skimage.filters.html#skimage.filters.window", "future.fit_segmenter()": "api/skimage.future.html#skimage.future.fit_segmenter", "future.manual_lasso_segmentation()": "api/skimage.future.html#skimage.future.manual_lasso_segmentation", "future.manual_polygon_segmentation()": "api/skimage.future.html#skimage.future.manual_polygon_segmentation", "future.predict_segmenter()": "api/skimage.future.html#skimage.future.predict_segmenter", "future.TrainableSegmenter": "api/skimage.future.html#skimage.future.TrainableSegmenter", "future.TrainableSegmenter.__init__()": "api/skimage.future.html#skimage.future.TrainableSegmenter.__init__", "future.TrainableSegmenter.compute_features()": "api/skimage.future.html#skimage.future.TrainableSegmenter.compute_features", "future.TrainableSegmenter.fit()": "api/skimage.future.html#skimage.future.TrainableSegmenter.fit", "future.TrainableSegmenter.predict()": "api/skimage.future.html#skimage.future.TrainableSegmenter.predict", "Glossary": "user_guide/glossary.html", "graph.central_pixel()": "api/skimage.graph.html#skimage.graph.central_pixel", "graph.cut_normalized()": "api/skimage.graph.html#skimage.graph.cut_normalized", "graph.cut_threshold()": "api/skimage.graph.html#skimage.graph.cut_threshold", "graph.MCP": "api/skimage.graph.html#skimage.graph.MCP", "graph.MCP.__init__()": "api/skimage.graph.html#skimage.graph.MCP.__init__", "graph.MCP.find_costs()": "api/skimage.graph.html#skimage.graph.MCP.find_costs", "graph.MCP.goal_reached()": "api/skimage.graph.html#skimage.graph.MCP.goal_reached", "graph.MCP.offsets": "api/skimage.graph.html#skimage.graph.MCP.offsets", "graph.MCP.traceback()": "api/skimage.graph.html#skimage.graph.MCP.traceback", "graph.MCP_Connect": "api/skimage.graph.html#skimage.graph.MCP_Connect", "graph.MCP_Connect.__init__()": "api/skimage.graph.html#skimage.graph.MCP_Connect.__init__", "graph.MCP_Connect.create_connection()": "api/skimage.graph.html#skimage.graph.MCP_Connect.create_connection", "graph.MCP_Connect.find_costs()": "api/skimage.graph.html#skimage.graph.MCP_Connect.find_costs", "graph.MCP_Connect.goal_reached()": "api/skimage.graph.html#skimage.graph.MCP_Connect.goal_reached", "graph.MCP_Connect.offsets": "api/skimage.graph.html#skimage.graph.MCP_Connect.offsets", "graph.MCP_Connect.traceback()": "api/skimage.graph.html#skimage.graph.MCP_Connect.traceback", "graph.MCP_Flexible": "api/skimage.graph.html#skimage.graph.MCP_Flexible", "graph.MCP_Flexible.__init__()": "api/skimage.graph.html#skimage.graph.MCP_Flexible.__init__", "graph.MCP_Flexible.examine_neighbor()": "api/skimage.graph.html#skimage.graph.MCP_Flexible.examine_neighbor", "graph.MCP_Flexible.find_costs()": "api/skimage.graph.html#skimage.graph.MCP_Flexible.find_costs", "graph.MCP_Flexible.goal_reached()": "api/skimage.graph.html#skimage.graph.MCP_Flexible.goal_reached", "graph.MCP_Flexible.offsets": "api/skimage.graph.html#skimage.graph.MCP_Flexible.offsets", "graph.MCP_Flexible.traceback()": "api/skimage.graph.html#skimage.graph.MCP_Flexible.traceback", "graph.MCP_Flexible.travel_cost()": "api/skimage.graph.html#skimage.graph.MCP_Flexible.travel_cost", "graph.MCP_Flexible.update_node()": "api/skimage.graph.html#skimage.graph.MCP_Flexible.update_node", "graph.MCP_Geometric": "api/skimage.graph.html#skimage.graph.MCP_Geometric", "graph.MCP_Geometric.__init__()": "api/skimage.graph.html#skimage.graph.MCP_Geometric.__init__", "graph.MCP_Geometric.find_costs()": "api/skimage.graph.html#skimage.graph.MCP_Geometric.find_costs", "graph.MCP_Geometric.goal_reached()": "api/skimage.graph.html#skimage.graph.MCP_Geometric.goal_reached", "graph.MCP_Geometric.offsets": "api/skimage.graph.html#skimage.graph.MCP_Geometric.offsets", "graph.MCP_Geometric.traceback()": "api/skimage.graph.html#skimage.graph.MCP_Geometric.traceback", "graph.merge_hierarchical()": "api/skimage.graph.html#skimage.graph.merge_hierarchical", "graph.pixel_graph()": "api/skimage.graph.html#skimage.graph.pixel_graph", "graph.RAG": "api/skimage.graph.html#skimage.graph.RAG", "graph.RAG.__init__()": "api/skimage.graph.html#skimage.graph.RAG.__init__", "graph.RAG.add_edge()": "api/skimage.graph.html#skimage.graph.RAG.add_edge", "graph.RAG.add_edges_from()": "api/skimage.graph.html#skimage.graph.RAG.add_edges_from", "graph.RAG.add_node()": "api/skimage.graph.html#skimage.graph.RAG.add_node", "graph.RAG.add_nodes_from()": "api/skimage.graph.html#skimage.graph.RAG.add_nodes_from", "graph.RAG.add_weighted_edges_from()": "api/skimage.graph.html#skimage.graph.RAG.add_weighted_edges_from", "graph.RAG.adjacency()": "api/skimage.graph.html#skimage.graph.RAG.adjacency", "graph.RAG.adjlist_inner_dict_factory": "api/skimage.graph.html#skimage.graph.RAG.adjlist_inner_dict_factory", "graph.RAG.adjlist_outer_dict_factory": "api/skimage.graph.html#skimage.graph.RAG.adjlist_outer_dict_factory", "graph.RAG.clear()": "api/skimage.graph.html#skimage.graph.RAG.clear", "graph.RAG.clear_edges()": "api/skimage.graph.html#skimage.graph.RAG.clear_edges", "graph.RAG.copy()": "api/skimage.graph.html#skimage.graph.RAG.copy", "graph.RAG.edge_attr_dict_factory": "api/skimage.graph.html#skimage.graph.RAG.edge_attr_dict_factory", "graph.RAG.edge_subgraph()": "api/skimage.graph.html#skimage.graph.RAG.edge_subgraph", "graph.RAG.fresh_copy()": "api/skimage.graph.html#skimage.graph.RAG.fresh_copy", "graph.RAG.get_edge_data()": "api/skimage.graph.html#skimage.graph.RAG.get_edge_data", "graph.RAG.graph_attr_dict_factory": "api/skimage.graph.html#skimage.graph.RAG.graph_attr_dict_factory", "graph.RAG.has_edge()": "api/skimage.graph.html#skimage.graph.RAG.has_edge", "graph.RAG.has_node()": "api/skimage.graph.html#skimage.graph.RAG.has_node", "graph.RAG.is_directed()": "api/skimage.graph.html#skimage.graph.RAG.is_directed", "graph.RAG.is_multigraph()": "api/skimage.graph.html#skimage.graph.RAG.is_multigraph", "graph.RAG.merge_nodes()": "api/skimage.graph.html#skimage.graph.RAG.merge_nodes", "graph.RAG.nbunch_iter()": "api/skimage.graph.html#skimage.graph.RAG.nbunch_iter", "graph.RAG.neighbors()": "api/skimage.graph.html#skimage.graph.RAG.neighbors", "graph.RAG.next_id()": "api/skimage.graph.html#skimage.graph.RAG.next_id", "graph.RAG.node_attr_dict_factory": "api/skimage.graph.html#skimage.graph.RAG.node_attr_dict_factory", "graph.RAG.node_dict_factory": "api/skimage.graph.html#skimage.graph.RAG.node_dict_factory", "graph.RAG.number_of_edges()": "api/skimage.graph.html#skimage.graph.RAG.number_of_edges", "graph.RAG.number_of_nodes()": "api/skimage.graph.html#skimage.graph.RAG.number_of_nodes", "graph.RAG.order()": "api/skimage.graph.html#skimage.graph.RAG.order", "graph.RAG.remove_edge()": "api/skimage.graph.html#skimage.graph.RAG.remove_edge", "graph.RAG.remove_edges_from()": "api/skimage.graph.html#skimage.graph.RAG.remove_edges_from", "graph.RAG.remove_node()": "api/skimage.graph.html#skimage.graph.RAG.remove_node", "graph.RAG.remove_nodes_from()": "api/skimage.graph.html#skimage.graph.RAG.remove_nodes_from", "graph.RAG.size()": "api/skimage.graph.html#skimage.graph.RAG.size", "graph.RAG.subgraph()": "api/skimage.graph.html#skimage.graph.RAG.subgraph", "graph.RAG.to_directed()": "api/skimage.graph.html#skimage.graph.RAG.to_directed", "graph.RAG.to_directed_class()": "api/skimage.graph.html#skimage.graph.RAG.to_directed_class", "graph.RAG.to_undirected()": "api/skimage.graph.html#skimage.graph.RAG.to_undirected", "graph.RAG.to_undirected_class()": "api/skimage.graph.html#skimage.graph.RAG.to_undirected_class", "graph.RAG.update()": "api/skimage.graph.html#skimage.graph.RAG.update", "graph.rag_boundary()": "api/skimage.graph.html#skimage.graph.rag_boundary", "graph.rag_mean_color()": "api/skimage.graph.html#skimage.graph.rag_mean_color", "graph.route_through_array()": "api/skimage.graph.html#skimage.graph.route_through_array", "graph.shortest_path()": "api/skimage.graph.html#skimage.graph.shortest_path", "graph.show_rag()": "api/skimage.graph.html#skimage.graph.show_rag", "io.concatenate_images()": "api/skimage.io.html#skimage.io.concatenate_images", "io.ImageCollection": "api/skimage.io.html#skimage.io.ImageCollection", "io.ImageCollection.__init__()": "api/skimage.io.html#skimage.io.ImageCollection.__init__", "io.ImageCollection.concatenate()": "api/skimage.io.html#skimage.io.ImageCollection.concatenate", "io.ImageCollection.reload()": "api/skimage.io.html#skimage.io.ImageCollection.reload", "io.imread()": "api/skimage.io.html#skimage.io.imread", "io.imread_collection()": "api/skimage.io.html#skimage.io.imread_collection", "io.imread_collection_wrapper()": "api/skimage.io.html#skimage.io.imread_collection_wrapper", "io.imsave()": "api/skimage.io.html#skimage.io.imsave", "io.load_sift()": "api/skimage.io.html#skimage.io.load_sift", "io.load_surf()": "api/skimage.io.html#skimage.io.load_surf", "io.MultiImage": "api/skimage.io.html#skimage.io.MultiImage", "io.MultiImage.__init__()": "api/skimage.io.html#skimage.io.MultiImage.__init__", "io.MultiImage.concatenate()": "api/skimage.io.html#skimage.io.MultiImage.concatenate", "io.MultiImage.reload()": "api/skimage.io.html#skimage.io.MultiImage.reload", "io.pop()": "api/skimage.io.html#skimage.io.pop", "io.push()": "api/skimage.io.html#skimage.io.push", "measure.approximate_polygon()": "api/skimage.measure.html#skimage.measure.approximate_polygon", "measure.block_reduce()": "api/skimage.measure.html#skimage.measure.block_reduce", "measure.blur_effect()": "api/skimage.measure.html#skimage.measure.blur_effect", "measure.centroid()": "api/skimage.measure.html#skimage.measure.centroid", "measure.CircleModel": "api/skimage.measure.html#skimage.measure.CircleModel", "measure.CircleModel.__init__()": "api/skimage.measure.html#skimage.measure.CircleModel.__init__", "measure.CircleModel.estimate()": "api/skimage.measure.html#skimage.measure.CircleModel.estimate", "measure.CircleModel.predict_xy()": "api/skimage.measure.html#skimage.measure.CircleModel.predict_xy", "measure.CircleModel.residuals()": "api/skimage.measure.html#skimage.measure.CircleModel.residuals", "measure.EllipseModel": "api/skimage.measure.html#skimage.measure.EllipseModel", "measure.EllipseModel.__init__()": "api/skimage.measure.html#skimage.measure.EllipseModel.__init__", "measure.EllipseModel.estimate()": "api/skimage.measure.html#skimage.measure.EllipseModel.estimate", "measure.EllipseModel.predict_xy()": "api/skimage.measure.html#skimage.measure.EllipseModel.predict_xy", "measure.EllipseModel.residuals()": "api/skimage.measure.html#skimage.measure.EllipseModel.residuals", "measure.euler_number()": "api/skimage.measure.html#skimage.measure.euler_number", "measure.find_contours()": "api/skimage.measure.html#skimage.measure.find_contours", "measure.grid_points_in_poly()": "api/skimage.measure.html#skimage.measure.grid_points_in_poly", "measure.inertia_tensor()": "api/skimage.measure.html#skimage.measure.inertia_tensor", "measure.inertia_tensor_eigvals()": "api/skimage.measure.html#skimage.measure.inertia_tensor_eigvals", "measure.intersection_coeff()": "api/skimage.measure.html#skimage.measure.intersection_coeff", "measure.label()": "api/skimage.measure.html#skimage.measure.label", "measure.LineModelND": "api/skimage.measure.html#skimage.measure.LineModelND", "measure.LineModelND.__init__()": "api/skimage.measure.html#skimage.measure.LineModelND.__init__", "measure.LineModelND.estimate()": "api/skimage.measure.html#skimage.measure.LineModelND.estimate", "measure.LineModelND.predict()": "api/skimage.measure.html#skimage.measure.LineModelND.predict", "measure.LineModelND.predict_x()": "api/skimage.measure.html#skimage.measure.LineModelND.predict_x", "measure.LineModelND.predict_y()": "api/skimage.measure.html#skimage.measure.LineModelND.predict_y", "measure.LineModelND.residuals()": "api/skimage.measure.html#skimage.measure.LineModelND.residuals", "measure.manders_coloc_coeff()": "api/skimage.measure.html#skimage.measure.manders_coloc_coeff", "measure.manders_overlap_coeff()": "api/skimage.measure.html#skimage.measure.manders_overlap_coeff", "measure.marching_cubes()": "api/skimage.measure.html#skimage.measure.marching_cubes", "measure.mesh_surface_area()": "api/skimage.measure.html#skimage.measure.mesh_surface_area", "measure.moments()": "api/skimage.measure.html#skimage.measure.moments", "measure.moments_central()": "api/skimage.measure.html#skimage.measure.moments_central", "measure.moments_coords()": "api/skimage.measure.html#skimage.measure.moments_coords", "measure.moments_coords_central()": "api/skimage.measure.html#skimage.measure.moments_coords_central", "measure.moments_hu()": "api/skimage.measure.html#skimage.measure.moments_hu", "measure.moments_normalized()": "api/skimage.measure.html#skimage.measure.moments_normalized", "measure.pearson_corr_coeff()": "api/skimage.measure.html#skimage.measure.pearson_corr_coeff", "measure.perimeter()": "api/skimage.measure.html#skimage.measure.perimeter", "measure.perimeter_crofton()": "api/skimage.measure.html#skimage.measure.perimeter_crofton", "measure.points_in_poly()": "api/skimage.measure.html#skimage.measure.points_in_poly", "measure.profile_line()": "api/skimage.measure.html#skimage.measure.profile_line", "measure.ransac()": "api/skimage.measure.html#skimage.measure.ransac", "measure.regionprops()": "api/skimage.measure.html#skimage.measure.regionprops", "measure.regionprops_table()": "api/skimage.measure.html#skimage.measure.regionprops_table", "measure.shannon_entropy()": "api/skimage.measure.html#skimage.measure.shannon_entropy", "measure.subdivide_polygon()": "api/skimage.measure.html#skimage.measure.subdivide_polygon", "metrics.adapted_rand_error()": "api/skimage.metrics.html#skimage.metrics.adapted_rand_error", "metrics.contingency_table()": "api/skimage.metrics.html#skimage.metrics.contingency_table", "metrics.hausdorff_distance()": "api/skimage.metrics.html#skimage.metrics.hausdorff_distance", "metrics.hausdorff_pair()": "api/skimage.metrics.html#skimage.metrics.hausdorff_pair", "metrics.mean_squared_error()": "api/skimage.metrics.html#skimage.metrics.mean_squared_error", "metrics.normalized_mutual_information()": "api/skimage.metrics.html#skimage.metrics.normalized_mutual_information", "metrics.normalized_root_mse()": "api/skimage.metrics.html#skimage.metrics.normalized_root_mse", "metrics.peak_signal_noise_ratio()": "api/skimage.metrics.html#skimage.metrics.peak_signal_noise_ratio", "metrics.structural_similarity()": "api/skimage.metrics.html#skimage.metrics.structural_similarity", "metrics.variation_of_information()": "api/skimage.metrics.html#skimage.metrics.variation_of_information", "morphology.area_closing()": "api/skimage.morphology.html#skimage.morphology.area_closing", "morphology.area_opening()": "api/skimage.morphology.html#skimage.morphology.area_opening", "morphology.ball()": "api/skimage.morphology.html#skimage.morphology.ball", "morphology.binary_closing()": "api/skimage.morphology.html#skimage.morphology.binary_closing", "morphology.binary_dilation()": "api/skimage.morphology.html#skimage.morphology.binary_dilation", "morphology.binary_erosion()": "api/skimage.morphology.html#skimage.morphology.binary_erosion", "morphology.binary_opening()": "api/skimage.morphology.html#skimage.morphology.binary_opening", "morphology.black_tophat()": "api/skimage.morphology.html#skimage.morphology.black_tophat", "morphology.closing()": "api/skimage.morphology.html#skimage.morphology.closing", "morphology.convex_hull_image()": "api/skimage.morphology.html#skimage.morphology.convex_hull_image", "morphology.convex_hull_object()": "api/skimage.morphology.html#skimage.morphology.convex_hull_object", "morphology.diameter_closing()": "api/skimage.morphology.html#skimage.morphology.diameter_closing", "morphology.diameter_opening()": "api/skimage.morphology.html#skimage.morphology.diameter_opening", "morphology.diamond()": "api/skimage.morphology.html#skimage.morphology.diamond", "morphology.dilation()": "api/skimage.morphology.html#skimage.morphology.dilation", "morphology.disk()": "api/skimage.morphology.html#skimage.morphology.disk", "morphology.ellipse()": "api/skimage.morphology.html#skimage.morphology.ellipse", "morphology.erosion()": "api/skimage.morphology.html#skimage.morphology.erosion", "morphology.flood()": "api/skimage.morphology.html#skimage.morphology.flood", "morphology.flood_fill()": "api/skimage.morphology.html#skimage.morphology.flood_fill", "morphology.footprint_from_sequence()": "api/skimage.morphology.html#skimage.morphology.footprint_from_sequence", "morphology.footprint_rectangle()": "api/skimage.morphology.html#skimage.morphology.footprint_rectangle", "morphology.h_maxima()": "api/skimage.morphology.html#skimage.morphology.h_maxima", "morphology.h_minima()": "api/skimage.morphology.html#skimage.morphology.h_minima", "morphology.isotropic_closing()": "api/skimage.morphology.html#skimage.morphology.isotropic_closing", "morphology.isotropic_dilation()": "api/skimage.morphology.html#skimage.morphology.isotropic_dilation", "morphology.isotropic_erosion()": "api/skimage.morphology.html#skimage.morphology.isotropic_erosion", "morphology.isotropic_opening()": "api/skimage.morphology.html#skimage.morphology.isotropic_opening", "morphology.label()": "api/skimage.morphology.html#skimage.morphology.label", "morphology.local_maxima()": "api/skimage.morphology.html#skimage.morphology.local_maxima", "morphology.local_minima()": "api/skimage.morphology.html#skimage.morphology.local_minima", "morphology.max_tree()": "api/skimage.morphology.html#skimage.morphology.max_tree", "morphology.max_tree_local_maxima()": "api/skimage.morphology.html#skimage.morphology.max_tree_local_maxima", "morphology.medial_axis()": "api/skimage.morphology.html#skimage.morphology.medial_axis", "morphology.mirror_footprint()": "api/skimage.morphology.html#skimage.morphology.mirror_footprint", "morphology.octagon()": "api/skimage.morphology.html#skimage.morphology.octagon", "morphology.octahedron()": "api/skimage.morphology.html#skimage.morphology.octahedron", "morphology.opening()": "api/skimage.morphology.html#skimage.morphology.opening", "morphology.pad_footprint()": "api/skimage.morphology.html#skimage.morphology.pad_footprint", "morphology.reconstruction()": "api/skimage.morphology.html#skimage.morphology.reconstruction", "morphology.remove_objects_by_distance()": "api/skimage.morphology.html#skimage.morphology.remove_objects_by_distance", "morphology.remove_small_holes()": "api/skimage.morphology.html#skimage.morphology.remove_small_holes", "morphology.remove_small_objects()": "api/skimage.morphology.html#skimage.morphology.remove_small_objects", "morphology.skeletonize()": "api/skimage.morphology.html#skimage.morphology.skeletonize", "morphology.star()": "api/skimage.morphology.html#skimage.morphology.star", "morphology.thin()": "api/skimage.morphology.html#skimage.morphology.thin", "morphology.white_tophat()": "api/skimage.morphology.html#skimage.morphology.white_tophat", "registration.optical_flow_ilk()": "api/skimage.registration.html#skimage.registration.optical_flow_ilk", "registration.optical_flow_tvl1()": "api/skimage.registration.html#skimage.registration.optical_flow_tvl1", "registration.phase_cross_correlation()": "api/skimage.registration.html#skimage.registration.phase_cross_correlation", "restoration.ball_kernel()": "api/skimage.restoration.html#skimage.restoration.ball_kernel", "restoration.calibrate_denoiser()": "api/skimage.restoration.html#skimage.restoration.calibrate_denoiser", "restoration.cycle_spin()": "api/skimage.restoration.html#skimage.restoration.cycle_spin", "restoration.denoise_bilateral()": "api/skimage.restoration.html#skimage.restoration.denoise_bilateral", "restoration.denoise_invariant()": "api/skimage.restoration.html#skimage.restoration.denoise_invariant", "restoration.denoise_nl_means()": "api/skimage.restoration.html#skimage.restoration.denoise_nl_means", "restoration.denoise_tv_bregman()": "api/skimage.restoration.html#skimage.restoration.denoise_tv_bregman", "restoration.denoise_tv_chambolle()": "api/skimage.restoration.html#skimage.restoration.denoise_tv_chambolle", "restoration.denoise_wavelet()": "api/skimage.restoration.html#skimage.restoration.denoise_wavelet", "restoration.ellipsoid_kernel()": "api/skimage.restoration.html#skimage.restoration.ellipsoid_kernel", "restoration.estimate_sigma()": "api/skimage.restoration.html#skimage.restoration.estimate_sigma", "restoration.inpaint_biharmonic()": "api/skimage.restoration.html#skimage.restoration.inpaint_biharmonic", "restoration.richardson_lucy()": "api/skimage.restoration.html#skimage.restoration.richardson_lucy", "restoration.rolling_ball()": "api/skimage.restoration.html#skimage.restoration.rolling_ball", "restoration.unsupervised_wiener()": "api/skimage.restoration.html#skimage.restoration.unsupervised_wiener", "restoration.unwrap_phase()": "api/skimage.restoration.html#skimage.restoration.unwrap_phase", "restoration.wiener()": "api/skimage.restoration.html#skimage.restoration.wiener", "segmentation.active_contour()": "api/skimage.segmentation.html#skimage.segmentation.active_contour", "segmentation.chan_vese()": "api/skimage.segmentation.html#skimage.segmentation.chan_vese", "segmentation.checkerboard_level_set()": "api/skimage.segmentation.html#skimage.segmentation.checkerboard_level_set", "segmentation.clear_border()": "api/skimage.segmentation.html#skimage.segmentation.clear_border", "segmentation.disk_level_set()": "api/skimage.segmentation.html#skimage.segmentation.disk_level_set", "segmentation.expand_labels()": "api/skimage.segmentation.html#skimage.segmentation.expand_labels", "segmentation.felzenszwalb()": "api/skimage.segmentation.html#skimage.segmentation.felzenszwalb", "segmentation.find_boundaries()": "api/skimage.segmentation.html#skimage.segmentation.find_boundaries", "segmentation.flood()": "api/skimage.segmentation.html#skimage.segmentation.flood", "segmentation.flood_fill()": "api/skimage.segmentation.html#skimage.segmentation.flood_fill", "segmentation.inverse_gaussian_gradient()": "api/skimage.segmentation.html#skimage.segmentation.inverse_gaussian_gradient", "segmentation.join_segmentations()": "api/skimage.segmentation.html#skimage.segmentation.join_segmentations", "segmentation.mark_boundaries()": "api/skimage.segmentation.html#skimage.segmentation.mark_boundaries", "segmentation.morphological_chan_vese()": "api/skimage.segmentation.html#skimage.segmentation.morphological_chan_vese", "segmentation.morphological_geodesic_active_contour()": "api/skimage.segmentation.html#skimage.segmentation.morphological_geodesic_active_contour", "segmentation.quickshift()": "api/skimage.segmentation.html#skimage.segmentation.quickshift", "segmentation.random_walker()": "api/skimage.segmentation.html#skimage.segmentation.random_walker", "segmentation.relabel_sequential()": "api/skimage.segmentation.html#skimage.segmentation.relabel_sequential", "segmentation.slic()": "api/skimage.segmentation.html#skimage.segmentation.slic", "segmentation.watershed()": "api/skimage.segmentation.html#skimage.segmentation.watershed", "skimage": "api/skimage.html", "skimage.color": "api/skimage.color.html", "skimage.data": "api/skimage.data.html", "skimage.draw": "api/skimage.draw.html", "skimage.exposure": "api/skimage.exposure.html", "skimage.feature": "api/skimage.feature.html", "skimage.filters": "api/skimage.filters.html", "skimage.filters.rank": "api/skimage.filters.rank.html", "skimage.future": "api/skimage.future.html", "skimage.graph": "api/skimage.graph.html", "skimage.io": "api/skimage.io.html", "skimage.measure": "api/skimage.measure.html", "skimage.metrics": "api/skimage.metrics.html", "skimage.morphology": "api/skimage.morphology.html", "skimage.registration": "api/skimage.registration.html", "skimage.restoration": "api/skimage.restoration.html", "skimage.segmentation": "api/skimage.segmentation.html", "skimage.transform": "api/skimage.transform.html", "skimage.util": "api/skimage.util.html", "transform.AffineTransform": "api/skimage.transform.html#skimage.transform.AffineTransform", "transform.AffineTransform.__init__()": "api/skimage.transform.html#skimage.transform.AffineTransform.__init__", "transform.AffineTransform.estimate()": "api/skimage.transform.html#skimage.transform.AffineTransform.estimate", "transform.AffineTransform.residuals()": "api/skimage.transform.html#skimage.transform.AffineTransform.residuals", "transform.downscale_local_mean()": "api/skimage.transform.html#skimage.transform.downscale_local_mean", "transform.EssentialMatrixTransform": "api/skimage.transform.html#skimage.transform.EssentialMatrixTransform", "transform.EssentialMatrixTransform.__init__()": "api/skimage.transform.html#skimage.transform.EssentialMatrixTransform.__init__", "transform.EssentialMatrixTransform.estimate()": "api/skimage.transform.html#skimage.transform.EssentialMatrixTransform.estimate", "transform.EssentialMatrixTransform.residuals()": "api/skimage.transform.html#skimage.transform.EssentialMatrixTransform.residuals", "transform.estimate_transform()": "api/skimage.transform.html#skimage.transform.estimate_transform", "transform.EuclideanTransform": "api/skimage.transform.html#skimage.transform.EuclideanTransform", "transform.EuclideanTransform.__init__()": "api/skimage.transform.html#skimage.transform.EuclideanTransform.__init__", "transform.EuclideanTransform.estimate()": "api/skimage.transform.html#skimage.transform.EuclideanTransform.estimate", "transform.EuclideanTransform.residuals()": "api/skimage.transform.html#skimage.transform.EuclideanTransform.residuals", "transform.frt2()": "api/skimage.transform.html#skimage.transform.frt2", "transform.FundamentalMatrixTransform": "api/skimage.transform.html#skimage.transform.FundamentalMatrixTransform", "transform.FundamentalMatrixTransform.__init__()": "api/skimage.transform.html#skimage.transform.FundamentalMatrixTransform.__init__", "transform.FundamentalMatrixTransform.estimate()": "api/skimage.transform.html#skimage.transform.FundamentalMatrixTransform.estimate", "transform.FundamentalMatrixTransform.residuals()": "api/skimage.transform.html#skimage.transform.FundamentalMatrixTransform.residuals", "transform.hough_circle()": "api/skimage.transform.html#skimage.transform.hough_circle", "transform.hough_circle_peaks()": "api/skimage.transform.html#skimage.transform.hough_circle_peaks", "transform.hough_ellipse()": "api/skimage.transform.html#skimage.transform.hough_ellipse", "transform.hough_line()": "api/skimage.transform.html#skimage.transform.hough_line", "transform.hough_line_peaks()": "api/skimage.transform.html#skimage.transform.hough_line_peaks", "transform.ifrt2()": "api/skimage.transform.html#skimage.transform.ifrt2", "transform.integral_image()": "api/skimage.transform.html#skimage.transform.integral_image", "transform.integrate()": "api/skimage.transform.html#skimage.transform.integrate", "transform.iradon()": "api/skimage.transform.html#skimage.transform.iradon", "transform.iradon_sart()": "api/skimage.transform.html#skimage.transform.iradon_sart", "transform.matrix_transform()": "api/skimage.transform.html#skimage.transform.matrix_transform", "transform.order_angles_golden_ratio()": "api/skimage.transform.html#skimage.transform.order_angles_golden_ratio", "transform.PiecewiseAffineTransform": "api/skimage.transform.html#skimage.transform.PiecewiseAffineTransform", "transform.PiecewiseAffineTransform.__init__()": "api/skimage.transform.html#skimage.transform.PiecewiseAffineTransform.__init__", "transform.PiecewiseAffineTransform.estimate()": "api/skimage.transform.html#skimage.transform.PiecewiseAffineTransform.estimate", "transform.PiecewiseAffineTransform.residuals()": "api/skimage.transform.html#skimage.transform.PiecewiseAffineTransform.residuals", "transform.PolynomialTransform": "api/skimage.transform.html#skimage.transform.PolynomialTransform", "transform.PolynomialTransform.__init__()": "api/skimage.transform.html#skimage.transform.PolynomialTransform.__init__", "transform.PolynomialTransform.estimate()": "api/skimage.transform.html#skimage.transform.PolynomialTransform.estimate", "transform.PolynomialTransform.residuals()": "api/skimage.transform.html#skimage.transform.PolynomialTransform.residuals", "transform.probabilistic_hough_line()": "api/skimage.transform.html#skimage.transform.probabilistic_hough_line", "transform.ProjectiveTransform": "api/skimage.transform.html#skimage.transform.ProjectiveTransform", "transform.ProjectiveTransform.__init__()": "api/skimage.transform.html#skimage.transform.ProjectiveTransform.__init__", "transform.ProjectiveTransform.estimate()": "api/skimage.transform.html#skimage.transform.ProjectiveTransform.estimate", "transform.ProjectiveTransform.residuals()": "api/skimage.transform.html#skimage.transform.ProjectiveTransform.residuals", "transform.pyramid_expand()": "api/skimage.transform.html#skimage.transform.pyramid_expand", "transform.pyramid_gaussian()": "api/skimage.transform.html#skimage.transform.pyramid_gaussian", "transform.pyramid_laplacian()": "api/skimage.transform.html#skimage.transform.pyramid_laplacian", "transform.pyramid_reduce()": "api/skimage.transform.html#skimage.transform.pyramid_reduce", "transform.radon()": "api/skimage.transform.html#skimage.transform.radon", "transform.rescale()": "api/skimage.transform.html#skimage.transform.rescale", "transform.resize()": "api/skimage.transform.html#skimage.transform.resize", "transform.resize_local_mean()": "api/skimage.transform.html#skimage.transform.resize_local_mean", "transform.rotate()": "api/skimage.transform.html#skimage.transform.rotate", "transform.SimilarityTransform": "api/skimage.transform.html#skimage.transform.SimilarityTransform", "transform.SimilarityTransform.__init__()": "api/skimage.transform.html#skimage.transform.SimilarityTransform.__init__", "transform.SimilarityTransform.estimate()": "api/skimage.transform.html#skimage.transform.SimilarityTransform.estimate", "transform.SimilarityTransform.residuals()": "api/skimage.transform.html#skimage.transform.SimilarityTransform.residuals", "transform.swirl()": "api/skimage.transform.html#skimage.transform.swirl", "transform.ThinPlateSplineTransform": "api/skimage.transform.html#skimage.transform.ThinPlateSplineTransform", "transform.ThinPlateSplineTransform.__init__()": "api/skimage.transform.html#skimage.transform.ThinPlateSplineTransform.__init__", "transform.ThinPlateSplineTransform.estimate()": "api/skimage.transform.html#skimage.transform.ThinPlateSplineTransform.estimate", "transform.warp()": "api/skimage.transform.html#skimage.transform.warp", "transform.warp_coords()": "api/skimage.transform.html#skimage.transform.warp_coords", "transform.warp_polar()": "api/skimage.transform.html#skimage.transform.warp_polar", "User guide": "user_guide/index.html", "util.apply_parallel()": "api/skimage.util.html#skimage.util.apply_parallel", "util.compare_images()": "api/skimage.util.html#skimage.util.compare_images", "util.crop()": "api/skimage.util.html#skimage.util.crop", "util.dtype_limits()": "api/skimage.util.html#skimage.util.dtype_limits", "util.img_as_bool()": "api/skimage.util.html#skimage.util.img_as_bool", "util.img_as_float()": "api/skimage.util.html#skimage.util.img_as_float", "util.img_as_float32()": "api/skimage.util.html#skimage.util.img_as_float32", "util.img_as_float64()": "api/skimage.util.html#skimage.util.img_as_float64", "util.img_as_int()": "api/skimage.util.html#skimage.util.img_as_int", "util.img_as_ubyte()": "api/skimage.util.html#skimage.util.img_as_ubyte", "util.img_as_uint()": "api/skimage.util.html#skimage.util.img_as_uint", "util.invert()": "api/skimage.util.html#skimage.util.invert", "util.label_points()": "api/skimage.util.html#skimage.util.label_points", "util.lookfor()": "api/skimage.util.html#skimage.util.lookfor", "util.map_array()": "api/skimage.util.html#skimage.util.map_array", "util.montage()": "api/skimage.util.html#skimage.util.montage", "util.random_noise()": "api/skimage.util.html#skimage.util.random_noise", "util.regular_grid()": "api/skimage.util.html#skimage.util.regular_grid", "util.regular_seeds()": "api/skimage.util.html#skimage.util.regular_seeds", "util.slice_along_axes()": "api/skimage.util.html#skimage.util.slice_along_axes", "util.unique_rows()": "api/skimage.util.html#skimage.util.unique_rows", "util.view_as_blocks()": "api/skimage.util.html#skimage.util.view_as_blocks", "util.view_as_windows()": "api/skimage.util.html#skimage.util.view_as_windows"}