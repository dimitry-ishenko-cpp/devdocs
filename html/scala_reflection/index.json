{"Aliases": "scala/reflect/macros/aliases.html", "Aliases.Expr()": "scala/reflect/macros/aliases.html#Expr", "Aliases.Modifiers()": "scala/reflect/macros/aliases.html#scala.reflect.macros.Aliases.Modifiers", "Aliases.Name()": "scala/reflect/macros/aliases.html#scala.reflect.macros.Aliases.Name", "Aliases.Position()": "scala/reflect/macros/aliases.html#scala.reflect.macros.Aliases.Position", "Aliases.Scope()": "scala/reflect/macros/aliases.html#scala.reflect.macros.Aliases.Scope", "Aliases.Symbol()": "scala/reflect/macros/aliases.html#scala.reflect.macros.Aliases.Symbol", "Aliases.symbolOf()": "scala/reflect/macros/aliases.html#symbolOf", "Aliases.TermName()": "scala/reflect/macros/aliases.html#scala.reflect.macros.Aliases.TermName", "Aliases.Tree()": "scala/reflect/macros/aliases.html#scala.reflect.macros.Aliases.Tree", "Aliases.Type()": "scala/reflect/macros/aliases.html#scala.reflect.macros.Aliases.Type", "Aliases.TypeName()": "scala/reflect/macros/aliases.html#scala.reflect.macros.Aliases.TypeName", "Aliases.typeOf()": "scala/reflect/macros/aliases.html#typeOf", "Aliases.TypeTag()": "scala/reflect/macros/aliases.html#TypeTag", "Aliases.typeTag()": "scala/reflect/macros/aliases.html#typeTag", "Aliases.weakTypeOf()": "scala/reflect/macros/aliases.html#weakTypeOf", "Aliases.WeakTypeTag()": "scala/reflect/macros/aliases.html#WeakTypeTag", "Aliases.weakTypeTag()": "scala/reflect/macros/aliases.html#weakTypeTag", "Annotations": "scala/reflect/api/annotations.html", "Annotations.Annotation": "scala/reflect/api/annotations$annotation.html", "Annotations.Annotation()": "scala/reflect/api/annotations.html#Annotation", "Annotations.Annotation.tree()": "scala/reflect/api/annotations$annotation.html#tree", "Annotations.AnnotationApi": "scala/reflect/api/annotations$annotationapi.html", "Annotations.AnnotationApi()": "scala/reflect/api/annotations.html#scala.reflect.api.Annotations.AnnotationApi", "Annotations.AnnotationApi.tree()": "scala/reflect/api/annotations$annotationapi.html#tree", "Annotations.AnnotationExtractor": "scala/reflect/api/annotations$annotationextractor.html", "Annotations.AnnotationExtractor()": "scala/reflect/api/annotations.html#scala.reflect.api.Annotations.AnnotationExtractor", "Annotations.AnnotationExtractor.AnnotationExtractor()": "scala/reflect/api/annotations$annotationextractor.html#<init>", "Annotations.AnnotationExtractor.apply()": "scala/reflect/api/annotations$annotationextractor.html#apply", "Annotations.annotationToTree()": "scala/reflect/api/annotations.html#annotationToTree", "Annotations.JavaArgument": "scala/reflect/api/annotations$javaargument.html", "Annotations.JavaArgument()": "scala/reflect/api/annotations.html#scala.reflect.api.Annotations.JavaArgument", "Annotations.JavaArgumentApi": "scala/reflect/api/annotations$javaargumentapi.html", "Annotations.JavaArgumentApi()": "scala/reflect/api/annotations.html#scala.reflect.api.Annotations.JavaArgumentApi", "Annotations.treeToAnnotation()": "scala/reflect/api/annotations.html#treeToAnnotation", "api": "scala/reflect/api/index.html", "api.Annotations()": "scala/reflect/api/index.html#scala.reflect.api.Annotations", "api.Constants()": "scala/reflect/api/index.html#scala.reflect.api.Constants", "api.Exprs()": "scala/reflect/api/index.html#scala.reflect.api.Exprs", "api.FlagSets()": "scala/reflect/api/index.html#scala.reflect.api.FlagSets", "api.ImplicitTags()": "scala/reflect/api/index.html#scala.reflect.api.ImplicitTags", "api.Internals()": "scala/reflect/api/index.html#scala.reflect.api.Internals", "api.JavaUniverse()": "scala/reflect/api/index.html#scala.reflect.api.JavaUniverse", "api.Liftables()": "scala/reflect/api/index.html#scala.reflect.api.Liftables", "api.Mirror()": "scala/reflect/api/index.html#scala.reflect.api.Mirror", "api.Mirrors()": "scala/reflect/api/index.html#scala.reflect.api.Mirrors", "api.Names()": "scala/reflect/api/index.html#scala.reflect.api.Names", "api.Position()": "scala/reflect/api/index.html#scala.reflect.api.Position", "api.Positions()": "scala/reflect/api/index.html#scala.reflect.api.Positions", "api.Printers()": "scala/reflect/api/index.html#scala.reflect.api.Printers", "api.Quasiquotes()": "scala/reflect/api/index.html#scala.reflect.api.Quasiquotes", "api.Scopes()": "scala/reflect/api/index.html#scala.reflect.api.Scopes", "api.StandardDefinitions()": "scala/reflect/api/index.html#scala.reflect.api.StandardDefinitions", "api.StandardLiftables()": "scala/reflect/api/index.html#scala.reflect.api.StandardLiftables", "api.StandardNames()": "scala/reflect/api/index.html#scala.reflect.api.StandardNames", "api.Symbols()": "scala/reflect/api/index.html#scala.reflect.api.Symbols", "api.TreeCreator()": "scala/reflect/api/index.html#scala.reflect.api.TreeCreator", "api.Trees()": "scala/reflect/api/index.html#scala.reflect.api.Trees", "api.TypeCreator()": "scala/reflect/api/index.html#scala.reflect.api.TypeCreator", "api.Types()": "scala/reflect/api/index.html#scala.reflect.api.Types", "api.TypeTags()": "scala/reflect/api/index.html#scala.reflect.api.TypeTags", "api.Universe()": "scala/reflect/api/index.html#scala.reflect.api.Universe", "Attachments": "scala/reflect/macros/attachments.html", "Attachments.all()": "scala/reflect/macros/attachments.html#all", "Attachments.Attachments()": "scala/reflect/macros/attachments.html#<init>", "Attachments.contains()": "scala/reflect/macros/attachments.html#contains", "Attachments.get()": "scala/reflect/macros/attachments.html#get", "Attachments.isEmpty()": "scala/reflect/macros/attachments.html#isEmpty", "Attachments.Pos()": "scala/reflect/macros/attachments.html#scala.reflect.macros.Attachments.Pos", "Attachments.pos()": "scala/reflect/macros/attachments.html#pos", "Attachments.remove()": "scala/reflect/macros/attachments.html#remove", "Attachments.update()": "scala/reflect/macros/attachments.html#update", "Attachments.withPos()": "scala/reflect/macros/attachments.html#withPos", "blackbox": "scala/reflect/macros/blackbox/index.html", "blackbox.Context()": "scala/reflect/macros/blackbox/index.html#scala.reflect.macros.blackbox.Context", "Constants": "scala/reflect/api/constants.html", "Constants.Constant": "scala/reflect/api/constants$constant.html", "Constants.Constant()": "scala/reflect/api/constants.html#Constant", "Constants.Constant.tpe()": "scala/reflect/api/constants$constant.html#tpe", "Constants.Constant.value()": "scala/reflect/api/constants$constant.html#value", "Constants.ConstantApi": "scala/reflect/api/constants$constantapi.html", "Constants.ConstantApi()": "scala/reflect/api/constants.html#scala.reflect.api.Constants.ConstantApi", "Constants.ConstantApi.ConstantApi()": "scala/reflect/api/constants$constantapi.html#<init>", "Constants.ConstantApi.tpe()": "scala/reflect/api/constants$constantapi.html#tpe", "Constants.ConstantApi.value()": "scala/reflect/api/constants$constantapi.html#value", "Constants.ConstantExtractor": "scala/reflect/api/constants$constantextractor.html", "Constants.ConstantExtractor()": "scala/reflect/api/constants.html#scala.reflect.api.Constants.ConstantExtractor", "Constants.ConstantExtractor.apply()": "scala/reflect/api/constants$constantextractor.html#apply", "Constants.ConstantExtractor.ConstantExtractor()": "scala/reflect/api/constants$constantextractor.html#<init>", "Constants.ConstantExtractor.unapply()": "scala/reflect/api/constants$constantextractor.html#unapply", "Context": "scala/reflect/macros/whitebox/context.html", "Context.enclosingImplicits()": "scala/reflect/macros/whitebox/context.html#enclosingImplicits", "Context.enclosingMacros()": "scala/reflect/macros/whitebox/context.html#enclosingMacros", "Context.ImplicitCandidate": "scala/reflect/macros/whitebox/context$implicitcandidate.html", "Context.ImplicitCandidate()": "scala/reflect/macros/whitebox/context.html#scala.reflect.macros.whitebox.Context.ImplicitCandidate", "Context.ImplicitCandidate.ImplicitCandidate()": "scala/reflect/macros/whitebox/context$implicitcandidate.html#<init>", "Context.ImplicitCandidate.pre()": "scala/reflect/macros/whitebox/context$implicitcandidate.html#pre", "Context.ImplicitCandidate.pt()": "scala/reflect/macros/whitebox/context$implicitcandidate.html#pt", "Context.ImplicitCandidate.sym()": "scala/reflect/macros/whitebox/context$implicitcandidate.html#sym", "Context.ImplicitCandidate.tree()": "scala/reflect/macros/whitebox/context$implicitcandidate.html#tree", "Context.mirror()": "scala/reflect/macros/blackbox/context.html#mirror", "Context.openImplicits()": "scala/reflect/macros/whitebox/context.html#openImplicits", "Context.openMacros()": "scala/reflect/macros/whitebox/context.html#openMacros", "Context.prefix()": "scala/reflect/macros/blackbox/context.html#prefix", "Context.PrefixType()": "scala/reflect/macros/blackbox/context.html#scala.reflect.macros.blackbox.Context.PrefixType", "Context.universe()": "scala/reflect/macros/blackbox/context.html#universe", "Enclosures": "scala/reflect/macros/enclosures.html", "Enclosures.enclosingMacros()": "scala/reflect/macros/enclosures.html#enclosingMacros", "Enclosures.enclosingPosition()": "scala/reflect/macros/enclosures.html#enclosingPosition", "Enclosures.EnclosureException": "scala/reflect/macros/enclosures$enclosureexception.html", "Enclosures.EnclosureException()": "scala/reflect/macros/enclosures.html#scala.reflect.macros.Enclosures.EnclosureException", "Enclosures.EnclosureException.enclosingTrees()": "scala/reflect/macros/enclosures$enclosureexception.html#enclosingTrees", "Enclosures.EnclosureException.EnclosureException()": "scala/reflect/macros/enclosures$enclosureexception.html#<init>", "Enclosures.EnclosureException.expected()": "scala/reflect/macros/enclosures$enclosureexception.html#expected", "Enclosures.macroApplication()": "scala/reflect/macros/enclosures.html#macroApplication", "Evals": "scala/reflect/macros/evals.html", "Evals.eval()": "scala/reflect/macros/evals.html#eval", "Exprs": "scala/reflect/api/exprs.html", "Exprs.Expr": "scala/reflect/api/exprs$expr.html", "Exprs.Expr$": "scala/reflect/api/exprs$expr$.html", "Exprs.Expr$.apply()": "scala/reflect/api/exprs$expr$.html#apply", "Exprs.Expr$.unapply()": "scala/reflect/api/exprs$expr$.html#unapply", "Exprs.Expr()": "scala/reflect/api/exprs.html#scala.reflect.api.Exprs.Expr", "Exprs.Expr.actualType()": "scala/reflect/api/exprs$expr.html#actualType", "Exprs.Expr.canEqual()": "scala/reflect/api/exprs$expr.html#canEqual", "Exprs.Expr.equals()": "scala/reflect/api/exprs$expr.html#equals", "Exprs.Expr.hashCode()": "scala/reflect/api/exprs$expr.html#hashCode", "Exprs.Expr.in()": "scala/reflect/api/exprs$expr.html#in", "Exprs.Expr.mirror()": "scala/reflect/api/exprs$expr.html#mirror", "Exprs.Expr.splice()": "scala/reflect/api/exprs$expr.html#splice", "Exprs.Expr.staticType()": "scala/reflect/api/exprs$expr.html#staticType", "Exprs.Expr.toString()": "scala/reflect/api/exprs$expr.html#toString", "Exprs.Expr.tree()": "scala/reflect/api/exprs$expr.html#tree", "Exprs.Expr.value()": "scala/reflect/api/exprs$expr.html#value", "ExprUtils": "scala/reflect/macros/exprutils.html", "FlagSets": "scala/reflect/api/flagsets.html", "FlagSets.addFlagOps()": "scala/reflect/api/flagsets.html#addFlagOps", "FlagSets.Flag()": "scala/reflect/api/flagsets.html#Flag", "FlagSets.FlagOps": "scala/reflect/api/flagsets$flagops.html", "FlagSets.FlagOps()": "scala/reflect/api/flagsets.html#scala.reflect.api.FlagSets.FlagOps", "FlagSets.FlagOps.|()": "scala/reflect/api/flagsets$flagops.html#|", "FlagSets.FlagSet": "scala/reflect/api/flagsets$flagset.html", "FlagSets.FlagSet()": "scala/reflect/api/flagsets.html#scala.reflect.api.FlagSets.FlagSet", "FlagSets.FlagValues": "scala/reflect/api/flagsets$flagvalues.html", "FlagSets.FlagValues()": "scala/reflect/api/flagsets.html#scala.reflect.api.FlagSets.FlagValues", "FlagSets.FlagValues.ABSOVERRIDE()": "scala/reflect/api/flagsets$flagvalues.html#ABSOVERRIDE", "FlagSets.FlagValues.ABSTRACT()": "scala/reflect/api/flagsets$flagvalues.html#ABSTRACT", "FlagSets.FlagValues.ARTIFACT()": "scala/reflect/api/flagsets$flagvalues.html#ARTIFACT", "FlagSets.FlagValues.BYNAMEPARAM()": "scala/reflect/api/flagsets$flagvalues.html#BYNAMEPARAM", "FlagSets.FlagValues.CASE()": "scala/reflect/api/flagsets$flagvalues.html#CASE", "FlagSets.FlagValues.CASEACCESSOR()": "scala/reflect/api/flagsets$flagvalues.html#CASEACCESSOR", "FlagSets.FlagValues.CONTRAVARIANT()": "scala/reflect/api/flagsets$flagvalues.html#CONTRAVARIANT", "FlagSets.FlagValues.COVARIANT()": "scala/reflect/api/flagsets$flagvalues.html#COVARIANT", "FlagSets.FlagValues.DEFAULTINIT()": "scala/reflect/api/flagsets$flagvalues.html#DEFAULTINIT", "FlagSets.FlagValues.DEFAULTPARAM()": "scala/reflect/api/flagsets$flagvalues.html#DEFAULTPARAM", "FlagSets.FlagValues.DEFERRED()": "scala/reflect/api/flagsets$flagvalues.html#DEFERRED", "FlagSets.FlagValues.FINAL()": "scala/reflect/api/flagsets$flagvalues.html#FINAL", "FlagSets.FlagValues.IMPLICIT()": "scala/reflect/api/flagsets$flagvalues.html#IMPLICIT", "FlagSets.FlagValues.INTERFACE()": "scala/reflect/api/flagsets$flagvalues.html#INTERFACE", "FlagSets.FlagValues.LAZY()": "scala/reflect/api/flagsets$flagvalues.html#LAZY", "FlagSets.FlagValues.LOCAL()": "scala/reflect/api/flagsets$flagvalues.html#LOCAL", "FlagSets.FlagValues.MACRO()": "scala/reflect/api/flagsets$flagvalues.html#MACRO", "FlagSets.FlagValues.MUTABLE()": "scala/reflect/api/flagsets$flagvalues.html#MUTABLE", "FlagSets.FlagValues.OVERRIDE()": "scala/reflect/api/flagsets$flagvalues.html#OVERRIDE", "FlagSets.FlagValues.PARAM()": "scala/reflect/api/flagsets$flagvalues.html#PARAM", "FlagSets.FlagValues.PARAMACCESSOR()": "scala/reflect/api/flagsets$flagvalues.html#PARAMACCESSOR", "FlagSets.FlagValues.PRESUPER()": "scala/reflect/api/flagsets$flagvalues.html#PRESUPER", "FlagSets.FlagValues.PRIVATE()": "scala/reflect/api/flagsets$flagvalues.html#PRIVATE", "FlagSets.FlagValues.PROTECTED()": "scala/reflect/api/flagsets$flagvalues.html#PROTECTED", "FlagSets.FlagValues.SEALED()": "scala/reflect/api/flagsets$flagvalues.html#SEALED", "FlagSets.FlagValues.STABLE()": "scala/reflect/api/flagsets$flagvalues.html#STABLE", "FlagSets.FlagValues.SYNTHETIC()": "scala/reflect/api/flagsets$flagvalues.html#SYNTHETIC", "FlagSets.FlagValues.TRAIT()": "scala/reflect/api/flagsets$flagvalues.html#TRAIT", "FlagSets.NoFlags()": "scala/reflect/api/flagsets.html#NoFlags", "FrontEnds": "scala/reflect/macros/frontends.html", "FrontEnds.abort()": "scala/reflect/macros/frontends.html#abort", "FrontEnds.echo()": "scala/reflect/macros/frontends.html#echo", "FrontEnds.error()": "scala/reflect/macros/frontends.html#error", "FrontEnds.hasErrors()": "scala/reflect/macros/frontends.html#hasErrors", "FrontEnds.hasWarnings()": "scala/reflect/macros/frontends.html#hasWarnings", "FrontEnds.info()": "scala/reflect/macros/frontends.html#info", "FrontEnds.warning()": "scala/reflect/macros/frontends.html#warning", "ImplicitTags": "scala/reflect/api/implicittags.html", "ImplicitTags.AlternativeTag()": "scala/reflect/api/implicittags.html#AlternativeTag", "ImplicitTags.AnnotatedTag()": "scala/reflect/api/implicittags.html#AnnotatedTag", "ImplicitTags.AnnotatedTypeTag()": "scala/reflect/api/implicittags.html#AnnotatedTypeTag", "ImplicitTags.AnnotationTag()": "scala/reflect/api/implicittags.html#AnnotationTag", "ImplicitTags.AppliedTypeTreeTag()": "scala/reflect/api/implicittags.html#AppliedTypeTreeTag", "ImplicitTags.ApplyTag()": "scala/reflect/api/implicittags.html#ApplyTag", "ImplicitTags.AssignTag()": "scala/reflect/api/implicittags.html#AssignTag", "ImplicitTags.BindTag()": "scala/reflect/api/implicittags.html#BindTag", "ImplicitTags.BlockTag()": "scala/reflect/api/implicittags.html#BlockTag", "ImplicitTags.BoundedWildcardTypeTag()": "scala/reflect/api/implicittags.html#BoundedWildcardTypeTag", "ImplicitTags.CaseDefTag()": "scala/reflect/api/implicittags.html#CaseDefTag", "ImplicitTags.ClassDefTag()": "scala/reflect/api/implicittags.html#ClassDefTag", "ImplicitTags.ClassInfoTypeTag()": "scala/reflect/api/implicittags.html#ClassInfoTypeTag", "ImplicitTags.ClassSymbolTag()": "scala/reflect/api/implicittags.html#ClassSymbolTag", "ImplicitTags.CompoundTypeTag()": "scala/reflect/api/implicittags.html#CompoundTypeTag", "ImplicitTags.CompoundTypeTreeTag()": "scala/reflect/api/implicittags.html#CompoundTypeTreeTag", "ImplicitTags.ConstantTag()": "scala/reflect/api/implicittags.html#ConstantTag", "ImplicitTags.ConstantTypeTag()": "scala/reflect/api/implicittags.html#ConstantTypeTag", "ImplicitTags.DefDefTag()": "scala/reflect/api/implicittags.html#DefDefTag", "ImplicitTags.DefTreeTag()": "scala/reflect/api/implicittags.html#DefTreeTag", "ImplicitTags.ExistentialTypeTag()": "scala/reflect/api/implicittags.html#ExistentialTypeTag", "ImplicitTags.ExistentialTypeTreeTag()": "scala/reflect/api/implicittags.html#ExistentialTypeTreeTag", "ImplicitTags.FlagSetTag()": "scala/reflect/api/implicittags.html#FlagSetTag", "ImplicitTags.FunctionTag()": "scala/reflect/api/implicittags.html#FunctionTag", "ImplicitTags.GenericApplyTag()": "scala/reflect/api/implicittags.html#GenericApplyTag", "ImplicitTags.IdentTag()": "scala/reflect/api/implicittags.html#IdentTag", "ImplicitTags.IfTag()": "scala/reflect/api/implicittags.html#IfTag", "ImplicitTags.ImplDefTag()": "scala/reflect/api/implicittags.html#ImplDefTag", "ImplicitTags.ImportSelectorTag()": "scala/reflect/api/implicittags.html#ImportSelectorTag", "ImplicitTags.ImportTag()": "scala/reflect/api/implicittags.html#ImportTag", "ImplicitTags.JavaArgumentTag()": "scala/reflect/api/implicittags.html#JavaArgumentTag", "ImplicitTags.LabelDefTag()": "scala/reflect/api/implicittags.html#LabelDefTag", "ImplicitTags.LiteralTag()": "scala/reflect/api/implicittags.html#LiteralTag", "ImplicitTags.MatchTag()": "scala/reflect/api/implicittags.html#MatchTag", "ImplicitTags.MemberDefTag()": "scala/reflect/api/implicittags.html#MemberDefTag", "ImplicitTags.MemberScopeTag()": "scala/reflect/api/implicittags.html#MemberScopeTag", "ImplicitTags.MethodSymbolTag()": "scala/reflect/api/implicittags.html#MethodSymbolTag", "ImplicitTags.MethodTypeTag()": "scala/reflect/api/implicittags.html#MethodTypeTag", "ImplicitTags.MirrorTag()": "scala/reflect/api/implicittags.html#MirrorTag", "ImplicitTags.ModifiersTag()": "scala/reflect/api/implicittags.html#ModifiersTag", "ImplicitTags.ModuleDefTag()": "scala/reflect/api/implicittags.html#ModuleDefTag", "ImplicitTags.ModuleSymbolTag()": "scala/reflect/api/implicittags.html#ModuleSymbolTag", "ImplicitTags.NamedArgTag()": "scala/reflect/api/implicittags.html#NamedArgTag", "ImplicitTags.NameTag()": "scala/reflect/api/implicittags.html#NameTag", "ImplicitTags.NameTreeTag()": "scala/reflect/api/implicittags.html#NameTreeTag", "ImplicitTags.NewTag()": "scala/reflect/api/implicittags.html#NewTag", "ImplicitTags.NullaryMethodTypeTag()": "scala/reflect/api/implicittags.html#NullaryMethodTypeTag", "ImplicitTags.PackageDefTag()": "scala/reflect/api/implicittags.html#PackageDefTag", "ImplicitTags.PolyTypeTag()": "scala/reflect/api/implicittags.html#PolyTypeTag", "ImplicitTags.PositionTag()": "scala/reflect/api/implicittags.html#PositionTag", "ImplicitTags.RefinedTypeTag()": "scala/reflect/api/implicittags.html#RefinedTypeTag", "ImplicitTags.RefTreeTag()": "scala/reflect/api/implicittags.html#RefTreeTag", "ImplicitTags.ReturnTag()": "scala/reflect/api/implicittags.html#ReturnTag", "ImplicitTags.RuntimeClassTag()": "scala/reflect/api/implicittags.html#RuntimeClassTag", "ImplicitTags.ScopeTag()": "scala/reflect/api/implicittags.html#ScopeTag", "ImplicitTags.SelectFromTypeTreeTag()": "scala/reflect/api/implicittags.html#SelectFromTypeTreeTag", "ImplicitTags.SelectTag()": "scala/reflect/api/implicittags.html#SelectTag", "ImplicitTags.SingletonTypeTag()": "scala/reflect/api/implicittags.html#SingletonTypeTag", "ImplicitTags.SingletonTypeTreeTag()": "scala/reflect/api/implicittags.html#SingletonTypeTreeTag", "ImplicitTags.SingleTypeTag()": "scala/reflect/api/implicittags.html#SingleTypeTag", "ImplicitTags.StarTag()": "scala/reflect/api/implicittags.html#StarTag", "ImplicitTags.SuperTag()": "scala/reflect/api/implicittags.html#SuperTag", "ImplicitTags.SuperTypeTag()": "scala/reflect/api/implicittags.html#SuperTypeTag", "ImplicitTags.SymbolTag()": "scala/reflect/api/implicittags.html#SymbolTag", "ImplicitTags.SymTreeTag()": "scala/reflect/api/implicittags.html#SymTreeTag", "ImplicitTags.TemplateTag()": "scala/reflect/api/implicittags.html#TemplateTag", "ImplicitTags.TermNameTag()": "scala/reflect/api/implicittags.html#TermNameTag", "ImplicitTags.TermSymbolTag()": "scala/reflect/api/implicittags.html#TermSymbolTag", "ImplicitTags.TermTreeTag()": "scala/reflect/api/implicittags.html#TermTreeTag", "ImplicitTags.ThisTag()": "scala/reflect/api/implicittags.html#ThisTag", "ImplicitTags.ThisTypeTag()": "scala/reflect/api/implicittags.html#ThisTypeTag", "ImplicitTags.ThrowTag()": "scala/reflect/api/implicittags.html#ThrowTag", "ImplicitTags.TreeCopierTag()": "scala/reflect/api/implicittags.html#TreeCopierTag", "ImplicitTags.TreeTag()": "scala/reflect/api/implicittags.html#TreeTag", "ImplicitTags.TryTag()": "scala/reflect/api/implicittags.html#TryTag", "ImplicitTags.TypeApplyTag()": "scala/reflect/api/implicittags.html#TypeApplyTag", "ImplicitTags.TypeBoundsTag()": "scala/reflect/api/implicittags.html#TypeBoundsTag", "ImplicitTags.TypeBoundsTreeTag()": "scala/reflect/api/implicittags.html#TypeBoundsTreeTag", "ImplicitTags.TypeDefTag()": "scala/reflect/api/implicittags.html#TypeDefTag", "ImplicitTags.TypedTag()": "scala/reflect/api/implicittags.html#TypedTag", "ImplicitTags.TypeNameTag()": "scala/reflect/api/implicittags.html#TypeNameTag", "ImplicitTags.TypeRefTag()": "scala/reflect/api/implicittags.html#TypeRefTag", "ImplicitTags.TypeSymbolTag()": "scala/reflect/api/implicittags.html#TypeSymbolTag", "ImplicitTags.TypeTagg()": "scala/reflect/api/implicittags.html#TypeTagg", "ImplicitTags.TypeTreeTag()": "scala/reflect/api/implicittags.html#TypeTreeTag", "ImplicitTags.TypTreeTag()": "scala/reflect/api/implicittags.html#TypTreeTag", "ImplicitTags.UnApplyTag()": "scala/reflect/api/implicittags.html#UnApplyTag", "ImplicitTags.ValDefTag()": "scala/reflect/api/implicittags.html#ValDefTag", "ImplicitTags.ValOrDefDefTag()": "scala/reflect/api/implicittags.html#ValOrDefDefTag", "Infrastructure": "scala/reflect/macros/infrastructure.html", "Infrastructure.classPath()": "scala/reflect/macros/infrastructure.html#classPath", "Infrastructure.compilerSettings()": "scala/reflect/macros/infrastructure.html#compilerSettings", "Infrastructure.settings()": "scala/reflect/macros/infrastructure.html#settings", "Internals": "scala/reflect/macros/internals.html", "Internals.CompatApi": "scala/reflect/api/internals$compatapi.html", "Internals.CompatApi()": "scala/reflect/api/internals.html#scala.reflect.api.Internals.CompatApi", "Internals.CompatApi.CompatibleBuildApi": "scala/reflect/api/internals$compatapi$compatiblebuildapi.html", "Internals.CompatApi.CompatibleBuildApi()": "scala/reflect/api/internals$compatapi.html#scala.reflect.api.Internals.CompatApi.CompatibleBuildApi", "Internals.CompatApi.CompatibleBuildApi.CompatibleBuildApi()": "scala/reflect/api/internals$compatapi$compatiblebuildapi.html#<init>", "Internals.CompatApi.CompatibleSymbol": "scala/reflect/api/internals$compatapi$compatiblesymbol.html", "Internals.CompatApi.CompatibleSymbol()": "scala/reflect/api/internals$compatapi.html#scala.reflect.api.Internals.CompatApi.CompatibleSymbol", "Internals.CompatApi.CompatibleSymbol.CompatibleSymbol()": "scala/reflect/api/internals$compatapi$compatiblesymbol.html#<init>", "Internals.CompatApi.CompatibleTree": "scala/reflect/api/internals$compatapi$compatibletree.html", "Internals.CompatApi.CompatibleTree()": "scala/reflect/api/internals$compatapi.html#scala.reflect.api.Internals.CompatApi.CompatibleTree", "Internals.CompatApi.CompatibleTree.CompatibleTree()": "scala/reflect/api/internals$compatapi$compatibletree.html#<init>", "Internals.CompatToken": "scala/reflect/api/internals$compattoken.html", "Internals.CompatToken()": "scala/reflect/api/internals.html#scala.reflect.api.Internals.CompatToken", "Internals.CompatToken.CompatToken()": "scala/reflect/api/internals$compattoken.html#<init>", "Internals.ContextInternalApi": "scala/reflect/macros/internals$contextinternalapi.html", "Internals.ContextInternalApi()": "scala/reflect/macros/internals.html#scala.reflect.macros.Internals.ContextInternalApi", "Internals.ContextInternalApi.enclosingOwner()": "scala/reflect/macros/internals$contextinternalapi.html#enclosingOwner", "Internals.ContextInternalApi.transform()": "scala/reflect/macros/internals$contextinternalapi.html#transform", "Internals.ContextInternalApi.TransformApi": "scala/reflect/macros/internals$contextinternalapi$transformapi.html", "Internals.ContextInternalApi.TransformApi()": "scala/reflect/macros/internals$contextinternalapi.html#scala.reflect.macros.Internals.ContextInternalApi.TransformApi", "Internals.ContextInternalApi.TransformApi.default()": "scala/reflect/macros/internals$contextinternalapi$transformapi.html#default", "Internals.ContextInternalApi.TransformApi.recur()": "scala/reflect/macros/internals$contextinternalapi$transformapi.html#recur", "Internals.ContextInternalApi.typingTransform()": "scala/reflect/macros/internals$contextinternalapi.html#typingTransform", "Internals.ContextInternalApi.TypingTransformApi": "scala/reflect/macros/internals$contextinternalapi$typingtransformapi.html", "Internals.ContextInternalApi.TypingTransformApi()": "scala/reflect/macros/internals$contextinternalapi.html#scala.reflect.macros.Internals.ContextInternalApi.TypingTransformApi", "Internals.ContextInternalApi.TypingTransformApi.atOwner()": "scala/reflect/macros/internals$contextinternalapi$typingtransformapi.html#atOwner", "Internals.ContextInternalApi.TypingTransformApi.currentOwner()": "scala/reflect/macros/internals$contextinternalapi$typingtransformapi.html#currentOwner", "Internals.ContextInternalApi.TypingTransformApi.typecheck()": "scala/reflect/macros/internals$contextinternalapi$typingtransformapi.html#typecheck", "Internals.FreeTermSymbol": "scala/reflect/api/internals$freetermsymbol.html", "Internals.FreeTermSymbol()": "scala/reflect/api/internals.html#scala.reflect.api.Internals.FreeTermSymbol", "Internals.FreeTermSymbol.origin()": "scala/reflect/api/internals$freetermsymbol.html#origin", "Internals.FreeTermSymbol.value()": "scala/reflect/api/internals$freetermsymbol.html#value", "Internals.FreeTermSymbolApi": "scala/reflect/api/internals$freetermsymbolapi.html", "Internals.FreeTermSymbolApi()": "scala/reflect/api/internals.html#scala.reflect.api.Internals.FreeTermSymbolApi", "Internals.FreeTermSymbolApi.origin()": "scala/reflect/api/internals$freetermsymbolapi.html#origin", "Internals.FreeTermSymbolApi.value()": "scala/reflect/api/internals$freetermsymbolapi.html#value", "Internals.FreeTermSymbolTag()": "scala/reflect/api/internals.html#FreeTermSymbolTag", "Internals.FreeTypeSymbol": "scala/reflect/api/internals$freetypesymbol.html", "Internals.FreeTypeSymbol()": "scala/reflect/api/internals.html#scala.reflect.api.Internals.FreeTypeSymbol", "Internals.FreeTypeSymbol.origin()": "scala/reflect/api/internals$freetypesymbol.html#origin", "Internals.FreeTypeSymbolApi": "scala/reflect/api/internals$freetypesymbolapi.html", "Internals.FreeTypeSymbolApi()": "scala/reflect/api/internals.html#scala.reflect.api.Internals.FreeTypeSymbolApi", "Internals.FreeTypeSymbolApi.origin()": "scala/reflect/api/internals$freetypesymbolapi.html#origin", "Internals.FreeTypeSymbolTag()": "scala/reflect/api/internals.html#FreeTypeSymbolTag", "Internals.Importer": "scala/reflect/api/internals$importer.html", "Internals.Importer()": "scala/reflect/api/internals.html#scala.reflect.api.Internals.Importer", "Internals.Importer.from()": "scala/reflect/api/internals$importer.html#from", "Internals.Importer.importPosition()": "scala/reflect/api/internals$importer.html#importPosition", "Internals.Importer.importSymbol()": "scala/reflect/api/internals$importer.html#importSymbol", "Internals.Importer.importTree()": "scala/reflect/api/internals$importer.html#importTree", "Internals.Importer.importType()": "scala/reflect/api/internals$importer.html#importType", "Internals.Importer.reverse()": "scala/reflect/api/internals$importer.html#reverse", "Internals.Internal()": "scala/reflect/api/internals.html#scala.reflect.api.Internals.Internal", "Internals.internal()": "scala/reflect/macros/internals.html#internal", "Internals.InternalApi": "scala/reflect/api/internals$internalapi.html", "Internals.InternalApi()": "scala/reflect/api/internals.html#scala.reflect.api.Internals.InternalApi", "Internals.InternalApi.annotatedType()": "scala/reflect/api/internals$internalapi.html#annotatedType", "Internals.InternalApi.asFreeTerm()": "scala/reflect/api/internals$internalapi.html#asFreeTerm", "Internals.InternalApi.asFreeType()": "scala/reflect/api/internals$internalapi.html#asFreeType", "Internals.InternalApi.boundedWildcardType()": "scala/reflect/api/internals$internalapi.html#boundedWildcardType", "Internals.InternalApi.classDef()": "scala/reflect/api/internals$internalapi.html#classDef", "Internals.InternalApi.classInfoType()": "scala/reflect/api/internals$internalapi.html#classInfoType", "Internals.InternalApi.constantType()": "scala/reflect/api/internals$internalapi.html#constantType", "Internals.InternalApi.createImporter()": "scala/reflect/api/internals$internalapi.html#createImporter", "Internals.InternalApi.DecoratorApi": "scala/reflect/api/internals$internalapi$decoratorapi.html", "Internals.InternalApi.DecoratorApi()": "scala/reflect/api/internals$internalapi.html#scala.reflect.api.Internals.InternalApi.DecoratorApi", "Internals.InternalApi.DecoratorApi.SymbolDecorator()": "scala/reflect/api/internals$internalapi$decoratorapi.html#scala.reflect.api.Internals.InternalApi.DecoratorApi.SymbolDecorator", "Internals.InternalApi.DecoratorApi.symbolDecorator()": "scala/reflect/api/internals$internalapi$decoratorapi.html#symbolDecorator", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi()": "scala/reflect/api/internals$internalapi$decoratorapi.html#scala.reflect.api.Internals.InternalApi.DecoratorApi.SymbolDecoratorApi", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.asFreeTerm()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#asFreeTerm", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.asFreeType()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#asFreeType", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.deSkolemize()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#deSkolemize", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.flags()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#flags", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.fullyInitialize()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#fullyInitialize", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.initialize()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#initialize", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.isErroneous()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#isErroneous", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.isFreeTerm()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#isFreeTerm", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.isFreeType()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#isFreeType", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.isSkolem()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#isSkolem", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.newClassSymbol()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#newClassSymbol", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.newMethodSymbol()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#newMethodSymbol", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.newModuleAndClassSymbol()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#newModuleAndClassSymbol", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.newTermSymbol()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#newTermSymbol", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.newTypeSymbol()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#newTypeSymbol", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.symbol()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#symbol", "Internals.InternalApi.DecoratorApi.SymbolDecoratorApi.SymbolDecoratorApi()": "scala/reflect/api/internals$internalapi$decoratorapi$symboldecoratorapi.html#<init>", "Internals.InternalApi.DecoratorApi.TreeDecorator()": "scala/reflect/api/internals$internalapi$decoratorapi.html#scala.reflect.api.Internals.InternalApi.DecoratorApi.TreeDecorator", "Internals.InternalApi.DecoratorApi.treeDecorator()": "scala/reflect/api/internals$internalapi$decoratorapi.html#treeDecorator", "Internals.InternalApi.DecoratorApi.TreeDecoratorApi": "scala/reflect/api/internals$internalapi$decoratorapi$treedecoratorapi.html", "Internals.InternalApi.DecoratorApi.TreeDecoratorApi()": "scala/reflect/api/internals$internalapi$decoratorapi.html#scala.reflect.api.Internals.InternalApi.DecoratorApi.TreeDecoratorApi", "Internals.InternalApi.DecoratorApi.TreeDecoratorApi.freeTerms()": "scala/reflect/api/internals$internalapi$decoratorapi$treedecoratorapi.html#freeTerms", "Internals.InternalApi.DecoratorApi.TreeDecoratorApi.freeTypes()": "scala/reflect/api/internals$internalapi$decoratorapi$treedecoratorapi.html#freeTypes", "Internals.InternalApi.DecoratorApi.TreeDecoratorApi.substituteSymbols()": "scala/reflect/api/internals$internalapi$decoratorapi$treedecoratorapi.html#substituteSymbols", "Internals.InternalApi.DecoratorApi.TreeDecoratorApi.substituteThis()": "scala/reflect/api/internals$internalapi$decoratorapi$treedecoratorapi.html#substituteThis", "Internals.InternalApi.DecoratorApi.TreeDecoratorApi.substituteTypes()": "scala/reflect/api/internals$internalapi$decoratorapi$treedecoratorapi.html#substituteTypes", "Internals.InternalApi.DecoratorApi.TreeDecoratorApi.tree()": "scala/reflect/api/internals$internalapi$decoratorapi$treedecoratorapi.html#tree", "Internals.InternalApi.DecoratorApi.TreeDecoratorApi.TreeDecoratorApi()": "scala/reflect/api/internals$internalapi$decoratorapi$treedecoratorapi.html#<init>", "Internals.InternalApi.DecoratorApi.TypeDecorator()": "scala/reflect/api/internals$internalapi$decoratorapi.html#scala.reflect.api.Internals.InternalApi.DecoratorApi.TypeDecorator", "Internals.InternalApi.DecoratorApi.typeDecorator()": "scala/reflect/api/internals$internalapi$decoratorapi.html#typeDecorator", "Internals.InternalApi.DecoratorApi.TypeDecoratorApi": "scala/reflect/api/internals$internalapi$decoratorapi$typedecoratorapi.html", "Internals.InternalApi.DecoratorApi.TypeDecoratorApi()": "scala/reflect/api/internals$internalapi$decoratorapi.html#scala.reflect.api.Internals.InternalApi.DecoratorApi.TypeDecoratorApi", "Internals.InternalApi.DecoratorApi.TypeDecoratorApi.fullyInitialize()": "scala/reflect/api/internals$internalapi$decoratorapi$typedecoratorapi.html#fullyInitialize", "Internals.InternalApi.DecoratorApi.TypeDecoratorApi.tp()": "scala/reflect/api/internals$internalapi$decoratorapi$typedecoratorapi.html#tp", "Internals.InternalApi.DecoratorApi.TypeDecoratorApi.TypeDecoratorApi()": "scala/reflect/api/internals$internalapi$decoratorapi$typedecoratorapi.html#<init>", "Internals.InternalApi.Decorators()": "scala/reflect/api/internals$internalapi.html#scala.reflect.api.Internals.InternalApi.Decorators", "Internals.InternalApi.decorators()": "scala/reflect/api/internals$internalapi.html#decorators", "Internals.InternalApi.defDef()": "scala/reflect/api/internals$internalapi.html#defDef", "Internals.InternalApi.deSkolemize()": "scala/reflect/api/internals$internalapi.html#deSkolemize", "Internals.InternalApi.existentialAbstraction()": "scala/reflect/api/internals$internalapi.html#existentialAbstraction", "Internals.InternalApi.existentialType()": "scala/reflect/api/internals$internalapi.html#existentialType", "Internals.InternalApi.flags()": "scala/reflect/api/internals$internalapi.html#flags", "Internals.InternalApi.freeTerms()": "scala/reflect/api/internals$internalapi.html#freeTerms", "Internals.InternalApi.freeTypes()": "scala/reflect/api/internals$internalapi.html#freeTypes", "Internals.InternalApi.fullyInitialize()": "scala/reflect/api/internals$internalapi.html#fullyInitialize", "Internals.InternalApi.initialize()": "scala/reflect/api/internals$internalapi.html#initialize", "Internals.InternalApi.intersectionType()": "scala/reflect/api/internals$internalapi.html#intersectionType", "Internals.InternalApi.isErroneous()": "scala/reflect/api/internals$internalapi.html#isErroneous", "Internals.InternalApi.isFreeTerm()": "scala/reflect/api/internals$internalapi.html#isFreeTerm", "Internals.InternalApi.isFreeType()": "scala/reflect/api/internals$internalapi.html#isFreeType", "Internals.InternalApi.isSkolem()": "scala/reflect/api/internals$internalapi.html#isSkolem", "Internals.InternalApi.labelDef()": "scala/reflect/api/internals$internalapi.html#labelDef", "Internals.InternalApi.manifestToTypeTag()": "scala/reflect/api/internals$internalapi.html#manifestToTypeTag", "Internals.InternalApi.methodType()": "scala/reflect/api/internals$internalapi.html#methodType", "Internals.InternalApi.moduleDef()": "scala/reflect/api/internals$internalapi.html#moduleDef", "Internals.InternalApi.newClassSymbol()": "scala/reflect/api/internals$internalapi.html#newClassSymbol", "Internals.InternalApi.newFreeTerm()": "scala/reflect/api/internals$internalapi.html#newFreeTerm", "Internals.InternalApi.newFreeType()": "scala/reflect/api/internals$internalapi.html#newFreeType", "Internals.InternalApi.newMethodSymbol()": "scala/reflect/api/internals$internalapi.html#newMethodSymbol", "Internals.InternalApi.newModuleAndClassSymbol()": "scala/reflect/api/internals$internalapi.html#newModuleAndClassSymbol", "Internals.InternalApi.newScopeWith()": "scala/reflect/api/internals$internalapi.html#newScopeWith", "Internals.InternalApi.newTermSymbol()": "scala/reflect/api/internals$internalapi.html#newTermSymbol", "Internals.InternalApi.newTypeSymbol()": "scala/reflect/api/internals$internalapi.html#newTypeSymbol", "Internals.InternalApi.nullaryMethodType()": "scala/reflect/api/internals$internalapi.html#nullaryMethodType", "Internals.InternalApi.polyType()": "scala/reflect/api/internals$internalapi.html#polyType", "Internals.InternalApi.refinedType()": "scala/reflect/api/internals$internalapi.html#refinedType", "Internals.InternalApi.reificationSupport()": "scala/reflect/api/internals$internalapi.html#reificationSupport", "Internals.InternalApi.singleType()": "scala/reflect/api/internals$internalapi.html#singleType", "Internals.InternalApi.substituteSymbols()": "scala/reflect/api/internals$internalapi.html#substituteSymbols", "Internals.InternalApi.substituteThis()": "scala/reflect/api/internals$internalapi.html#substituteThis", "Internals.InternalApi.substituteTypes()": "scala/reflect/api/internals$internalapi.html#substituteTypes", "Internals.InternalApi.superType()": "scala/reflect/api/internals$internalapi.html#superType", "Internals.InternalApi.thisType()": "scala/reflect/api/internals$internalapi.html#thisType", "Internals.InternalApi.typeBounds()": "scala/reflect/api/internals$internalapi.html#typeBounds", "Internals.InternalApi.typeDef()": "scala/reflect/api/internals$internalapi.html#typeDef", "Internals.InternalApi.typeRef()": "scala/reflect/api/internals$internalapi.html#typeRef", "Internals.InternalApi.typeTagToManifest()": "scala/reflect/api/internals$internalapi.html#typeTagToManifest", "Internals.InternalApi.valDef()": "scala/reflect/api/internals$internalapi.html#valDef", "Internals.ReferenceToBoxed": "scala/reflect/api/internals$referencetoboxed.html", "Internals.ReferenceToBoxed()": "scala/reflect/api/internals.html#ReferenceToBoxed", "Internals.ReferenceToBoxed.ident()": "scala/reflect/api/internals$referencetoboxed.html#ident", "Internals.ReferenceToBoxedApi": "scala/reflect/api/internals$referencetoboxedapi.html", "Internals.ReferenceToBoxedApi()": "scala/reflect/api/internals.html#scala.reflect.api.Internals.ReferenceToBoxedApi", "Internals.ReferenceToBoxedApi.ident()": "scala/reflect/api/internals$referencetoboxedapi.html#ident", "Internals.ReferenceToBoxedExtractor": "scala/reflect/api/internals$referencetoboxedextractor.html", "Internals.ReferenceToBoxedExtractor()": "scala/reflect/api/internals.html#scala.reflect.api.Internals.ReferenceToBoxedExtractor", "Internals.ReferenceToBoxedExtractor.apply()": "scala/reflect/api/internals$referencetoboxedextractor.html#apply", "Internals.ReferenceToBoxedExtractor.ReferenceToBoxedExtractor()": "scala/reflect/api/internals$referencetoboxedextractor.html#<init>", "Internals.ReferenceToBoxedExtractor.unapply()": "scala/reflect/api/internals$referencetoboxedextractor.html#unapply", "Internals.ReferenceToBoxedTag()": "scala/reflect/api/internals.html#ReferenceToBoxedTag", "Internals.ReificationSupportApi": "scala/reflect/api/internals$reificationsupportapi.html", "Internals.ReificationSupportApi()": "scala/reflect/api/internals.html#scala.reflect.api.Internals.ReificationSupportApi", "Internals.ReificationSupportApi.AnnotatedType()": "scala/reflect/api/internals$reificationsupportapi.html#AnnotatedType", "Internals.ReificationSupportApi.BoundedWildcardType()": "scala/reflect/api/internals$reificationsupportapi.html#BoundedWildcardType", "Internals.ReificationSupportApi.ClassInfoType()": "scala/reflect/api/internals$reificationsupportapi.html#ClassInfoType", "Internals.ReificationSupportApi.ConstantType()": "scala/reflect/api/internals$reificationsupportapi.html#ConstantType", "Internals.ReificationSupportApi.ExistentialType()": "scala/reflect/api/internals$reificationsupportapi.html#ExistentialType", "Internals.ReificationSupportApi.FlagsRepr()": "scala/reflect/api/internals$reificationsupportapi.html#FlagsRepr", "Internals.ReificationSupportApi.FlagsReprExtractor": "scala/reflect/api/internals$reificationsupportapi$flagsreprextractor.html", "Internals.ReificationSupportApi.FlagsReprExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.FlagsReprExtractor", "Internals.ReificationSupportApi.FlagsReprExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$flagsreprextractor.html#apply", "Internals.ReificationSupportApi.FlagsReprExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$flagsreprextractor.html#unapply", "Internals.ReificationSupportApi.freshTermName()": "scala/reflect/api/internals$reificationsupportapi.html#freshTermName", "Internals.ReificationSupportApi.freshTypeName()": "scala/reflect/api/internals$reificationsupportapi.html#freshTypeName", "Internals.ReificationSupportApi.ImplicitParams()": "scala/reflect/api/internals$reificationsupportapi.html#ImplicitParams", "Internals.ReificationSupportApi.ImplicitParamsExtractor": "scala/reflect/api/internals$reificationsupportapi$implicitparamsextractor.html", "Internals.ReificationSupportApi.ImplicitParamsExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.ImplicitParamsExtractor", "Internals.ReificationSupportApi.ImplicitParamsExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$implicitparamsextractor.html#apply", "Internals.ReificationSupportApi.ImplicitParamsExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$implicitparamsextractor.html#unapply", "Internals.ReificationSupportApi.MethodType()": "scala/reflect/api/internals$reificationsupportapi.html#MethodType", "Internals.ReificationSupportApi.mkAnnotation()": "scala/reflect/api/internals$reificationsupportapi.html#mkAnnotation", "Internals.ReificationSupportApi.mkEarlyDef()": "scala/reflect/api/internals$reificationsupportapi.html#mkEarlyDef", "Internals.ReificationSupportApi.mkIdent()": "scala/reflect/api/internals$reificationsupportapi.html#mkIdent", "Internals.ReificationSupportApi.mkPackageStat()": "scala/reflect/api/internals$reificationsupportapi.html#mkPackageStat", "Internals.ReificationSupportApi.mkRefineStat()": "scala/reflect/api/internals$reificationsupportapi.html#mkRefineStat", "Internals.ReificationSupportApi.mkRefTree()": "scala/reflect/api/internals$reificationsupportapi.html#mkRefTree", "Internals.ReificationSupportApi.mkSelect()": "scala/reflect/api/internals$reificationsupportapi.html#mkSelect", "Internals.ReificationSupportApi.mkThis()": "scala/reflect/api/internals$reificationsupportapi.html#mkThis", "Internals.ReificationSupportApi.mkTypeTree()": "scala/reflect/api/internals$reificationsupportapi.html#mkTypeTree", "Internals.ReificationSupportApi.newFreeTerm()": "scala/reflect/api/internals$reificationsupportapi.html#newFreeTerm", "Internals.ReificationSupportApi.newFreeType()": "scala/reflect/api/internals$reificationsupportapi.html#newFreeType", "Internals.ReificationSupportApi.newNestedSymbol()": "scala/reflect/api/internals$reificationsupportapi.html#newNestedSymbol", "Internals.ReificationSupportApi.newScopeWith()": "scala/reflect/api/internals$reificationsupportapi.html#newScopeWith", "Internals.ReificationSupportApi.NullaryMethodType()": "scala/reflect/api/internals$reificationsupportapi.html#NullaryMethodType", "Internals.ReificationSupportApi.PolyType()": "scala/reflect/api/internals$reificationsupportapi.html#PolyType", "Internals.ReificationSupportApi.RefinedType()": "scala/reflect/api/internals$reificationsupportapi.html#RefinedType", "Internals.ReificationSupportApi.ScalaDot()": "scala/reflect/api/internals$reificationsupportapi.html#ScalaDot", "Internals.ReificationSupportApi.ScalaDotExtractor": "scala/reflect/api/internals$reificationsupportapi$scaladotextractor.html", "Internals.ReificationSupportApi.ScalaDotExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.ScalaDotExtractor", "Internals.ReificationSupportApi.ScalaDotExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$scaladotextractor.html#apply", "Internals.ReificationSupportApi.ScalaDotExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$scaladotextractor.html#unapply", "Internals.ReificationSupportApi.selectOverloadedMethod()": "scala/reflect/api/internals$reificationsupportapi.html#selectOverloadedMethod", "Internals.ReificationSupportApi.selectTerm()": "scala/reflect/api/internals$reificationsupportapi.html#selectTerm", "Internals.ReificationSupportApi.selectType()": "scala/reflect/api/internals$reificationsupportapi.html#selectType", "Internals.ReificationSupportApi.setAnnotations()": "scala/reflect/api/internals$reificationsupportapi.html#setAnnotations", "Internals.ReificationSupportApi.setInfo()": "scala/reflect/api/internals$reificationsupportapi.html#setInfo", "Internals.ReificationSupportApi.setSymbol()": "scala/reflect/api/internals$reificationsupportapi.html#setSymbol", "Internals.ReificationSupportApi.setType()": "scala/reflect/api/internals$reificationsupportapi.html#setType", "Internals.ReificationSupportApi.SingleType()": "scala/reflect/api/internals$reificationsupportapi.html#SingleType", "Internals.ReificationSupportApi.SuperType()": "scala/reflect/api/internals$reificationsupportapi.html#SuperType", "Internals.ReificationSupportApi.SyntacitcSingletonTypeExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacitcsingletontypeextractor.html", "Internals.ReificationSupportApi.SyntacitcSingletonTypeExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacitcSingletonTypeExtractor", "Internals.ReificationSupportApi.SyntacitcSingletonTypeExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacitcsingletontypeextractor.html#apply", "Internals.ReificationSupportApi.SyntacitcSingletonTypeExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacitcsingletontypeextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticAnnotatedType()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticAnnotatedType", "Internals.ReificationSupportApi.SyntacticAnnotatedTypeExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticannotatedtypeextractor.html", "Internals.ReificationSupportApi.SyntacticAnnotatedTypeExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticAnnotatedTypeExtractor", "Internals.ReificationSupportApi.SyntacticAnnotatedTypeExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticannotatedtypeextractor.html#apply", "Internals.ReificationSupportApi.SyntacticAnnotatedTypeExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticannotatedtypeextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticApplied()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticApplied", "Internals.ReificationSupportApi.SyntacticAppliedExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticappliedextractor.html", "Internals.ReificationSupportApi.SyntacticAppliedExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticAppliedExtractor", "Internals.ReificationSupportApi.SyntacticAppliedExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticappliedextractor.html#apply", "Internals.ReificationSupportApi.SyntacticAppliedExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticappliedextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticAppliedType()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticAppliedType", "Internals.ReificationSupportApi.SyntacticAssign()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticAssign", "Internals.ReificationSupportApi.SyntacticAssignExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticassignextractor.html", "Internals.ReificationSupportApi.SyntacticAssignExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticAssignExtractor", "Internals.ReificationSupportApi.SyntacticAssignExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticassignextractor.html#apply", "Internals.ReificationSupportApi.SyntacticAssignExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticassignextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticBlock()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticBlock", "Internals.ReificationSupportApi.SyntacticBlockExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticblockextractor.html", "Internals.ReificationSupportApi.SyntacticBlockExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticBlockExtractor", "Internals.ReificationSupportApi.SyntacticBlockExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticblockextractor.html#apply", "Internals.ReificationSupportApi.SyntacticBlockExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticblockextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticClassDef()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticClassDef", "Internals.ReificationSupportApi.SyntacticClassDefExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticclassdefextractor.html", "Internals.ReificationSupportApi.SyntacticClassDefExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticClassDefExtractor", "Internals.ReificationSupportApi.SyntacticClassDefExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticclassdefextractor.html#apply", "Internals.ReificationSupportApi.SyntacticClassDefExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticclassdefextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticCompoundType()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticCompoundType", "Internals.ReificationSupportApi.SyntacticCompoundTypeExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticcompoundtypeextractor.html", "Internals.ReificationSupportApi.SyntacticCompoundTypeExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticCompoundTypeExtractor", "Internals.ReificationSupportApi.SyntacticCompoundTypeExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticcompoundtypeextractor.html#apply", "Internals.ReificationSupportApi.SyntacticCompoundTypeExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticcompoundtypeextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticDefDef()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticDefDef", "Internals.ReificationSupportApi.SyntacticDefDefExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticdefdefextractor.html", "Internals.ReificationSupportApi.SyntacticDefDefExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticDefDefExtractor", "Internals.ReificationSupportApi.SyntacticDefDefExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticdefdefextractor.html#apply", "Internals.ReificationSupportApi.SyntacticDefDefExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticdefdefextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticEmptyTypeTree()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticEmptyTypeTree", "Internals.ReificationSupportApi.SyntacticEmptyTypeTreeExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticemptytypetreeextractor.html", "Internals.ReificationSupportApi.SyntacticEmptyTypeTreeExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticEmptyTypeTreeExtractor", "Internals.ReificationSupportApi.SyntacticEmptyTypeTreeExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticemptytypetreeextractor.html#apply", "Internals.ReificationSupportApi.SyntacticEmptyTypeTreeExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticemptytypetreeextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticExistentialType()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticExistentialType", "Internals.ReificationSupportApi.SyntacticExistentialTypeExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticexistentialtypeextractor.html", "Internals.ReificationSupportApi.SyntacticExistentialTypeExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticExistentialTypeExtractor", "Internals.ReificationSupportApi.SyntacticExistentialTypeExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticexistentialtypeextractor.html#apply", "Internals.ReificationSupportApi.SyntacticExistentialTypeExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticexistentialtypeextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticFilter()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticFilter", "Internals.ReificationSupportApi.SyntacticFilterExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticfilterextractor.html", "Internals.ReificationSupportApi.SyntacticFilterExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticFilterExtractor", "Internals.ReificationSupportApi.SyntacticFilterExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticfilterextractor.html#apply", "Internals.ReificationSupportApi.SyntacticFilterExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticfilterextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticFor()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticFor", "Internals.ReificationSupportApi.SyntacticForExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticforextractor.html", "Internals.ReificationSupportApi.SyntacticForExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticForExtractor", "Internals.ReificationSupportApi.SyntacticForExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticforextractor.html#apply", "Internals.ReificationSupportApi.SyntacticForExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticforextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticForYield()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticForYield", "Internals.ReificationSupportApi.SyntacticFunction()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticFunction", "Internals.ReificationSupportApi.SyntacticFunctionExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticfunctionextractor.html", "Internals.ReificationSupportApi.SyntacticFunctionExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticFunctionExtractor", "Internals.ReificationSupportApi.SyntacticFunctionExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticfunctionextractor.html#apply", "Internals.ReificationSupportApi.SyntacticFunctionExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticfunctionextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticFunctionType()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticFunctionType", "Internals.ReificationSupportApi.SyntacticFunctionTypeExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticfunctiontypeextractor.html", "Internals.ReificationSupportApi.SyntacticFunctionTypeExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticFunctionTypeExtractor", "Internals.ReificationSupportApi.SyntacticFunctionTypeExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticfunctiontypeextractor.html#apply", "Internals.ReificationSupportApi.SyntacticFunctionTypeExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticfunctiontypeextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticImport()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticImport", "Internals.ReificationSupportApi.SyntacticImportExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticimportextractor.html", "Internals.ReificationSupportApi.SyntacticImportExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticImportExtractor", "Internals.ReificationSupportApi.SyntacticImportExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticimportextractor.html#apply", "Internals.ReificationSupportApi.SyntacticImportExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticimportextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticMatch()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticMatch", "Internals.ReificationSupportApi.SyntacticMatchExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticmatchextractor.html", "Internals.ReificationSupportApi.SyntacticMatchExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticMatchExtractor", "Internals.ReificationSupportApi.SyntacticMatchExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticmatchextractor.html#apply", "Internals.ReificationSupportApi.SyntacticMatchExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticmatchextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticNew()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticNew", "Internals.ReificationSupportApi.SyntacticNewExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticnewextractor.html", "Internals.ReificationSupportApi.SyntacticNewExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticNewExtractor", "Internals.ReificationSupportApi.SyntacticNewExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticnewextractor.html#apply", "Internals.ReificationSupportApi.SyntacticNewExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticnewextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticObjectDef()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticObjectDef", "Internals.ReificationSupportApi.SyntacticObjectDefExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticobjectdefextractor.html", "Internals.ReificationSupportApi.SyntacticObjectDefExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticObjectDefExtractor", "Internals.ReificationSupportApi.SyntacticObjectDefExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticobjectdefextractor.html#apply", "Internals.ReificationSupportApi.SyntacticObjectDefExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticobjectdefextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticPackageObjectDef()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticPackageObjectDef", "Internals.ReificationSupportApi.SyntacticPackageObjectDefExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticpackageobjectdefextractor.html", "Internals.ReificationSupportApi.SyntacticPackageObjectDefExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticPackageObjectDefExtractor", "Internals.ReificationSupportApi.SyntacticPackageObjectDefExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticpackageobjectdefextractor.html#apply", "Internals.ReificationSupportApi.SyntacticPackageObjectDefExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticpackageobjectdefextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticPartialFunction()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticPartialFunction", "Internals.ReificationSupportApi.SyntacticPartialFunctionExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticpartialfunctionextractor.html", "Internals.ReificationSupportApi.SyntacticPartialFunctionExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticPartialFunctionExtractor", "Internals.ReificationSupportApi.SyntacticPartialFunctionExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticpartialfunctionextractor.html#apply", "Internals.ReificationSupportApi.SyntacticPartialFunctionExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticpartialfunctionextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticPatDef()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticPatDef", "Internals.ReificationSupportApi.SyntacticPatDefExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticpatdefextractor.html", "Internals.ReificationSupportApi.SyntacticPatDefExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticPatDefExtractor", "Internals.ReificationSupportApi.SyntacticPatDefExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticpatdefextractor.html#apply", "Internals.ReificationSupportApi.SyntacticSelectTerm()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticSelectTerm", "Internals.ReificationSupportApi.SyntacticSelectTermExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticselecttermextractor.html", "Internals.ReificationSupportApi.SyntacticSelectTermExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticSelectTermExtractor", "Internals.ReificationSupportApi.SyntacticSelectTermExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticselecttermextractor.html#apply", "Internals.ReificationSupportApi.SyntacticSelectTermExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticselecttermextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticSelectType()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticSelectType", "Internals.ReificationSupportApi.SyntacticSelectTypeExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticselecttypeextractor.html", "Internals.ReificationSupportApi.SyntacticSelectTypeExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticSelectTypeExtractor", "Internals.ReificationSupportApi.SyntacticSelectTypeExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticselecttypeextractor.html#apply", "Internals.ReificationSupportApi.SyntacticSelectTypeExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticselecttypeextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticSingletonType()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticSingletonType", "Internals.ReificationSupportApi.SyntacticTermIdent()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticTermIdent", "Internals.ReificationSupportApi.SyntacticTermIdentExtractor": "scala/reflect/api/internals$reificationsupportapi$syntactictermidentextractor.html", "Internals.ReificationSupportApi.SyntacticTermIdentExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticTermIdentExtractor", "Internals.ReificationSupportApi.SyntacticTermIdentExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntactictermidentextractor.html#apply", "Internals.ReificationSupportApi.SyntacticTermIdentExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntactictermidentextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticTraitDef()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticTraitDef", "Internals.ReificationSupportApi.SyntacticTraitDefExtractor": "scala/reflect/api/internals$reificationsupportapi$syntactictraitdefextractor.html", "Internals.ReificationSupportApi.SyntacticTraitDefExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticTraitDefExtractor", "Internals.ReificationSupportApi.SyntacticTraitDefExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntactictraitdefextractor.html#apply", "Internals.ReificationSupportApi.SyntacticTraitDefExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntactictraitdefextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticTry()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticTry", "Internals.ReificationSupportApi.SyntacticTryExtractor": "scala/reflect/api/internals$reificationsupportapi$syntactictryextractor.html", "Internals.ReificationSupportApi.SyntacticTryExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticTryExtractor", "Internals.ReificationSupportApi.SyntacticTryExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntactictryextractor.html#apply", "Internals.ReificationSupportApi.SyntacticTryExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntactictryextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticTuple()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticTuple", "Internals.ReificationSupportApi.SyntacticTupleExtractor": "scala/reflect/api/internals$reificationsupportapi$syntactictupleextractor.html", "Internals.ReificationSupportApi.SyntacticTupleExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticTupleExtractor", "Internals.ReificationSupportApi.SyntacticTupleExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntactictupleextractor.html#apply", "Internals.ReificationSupportApi.SyntacticTupleExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntactictupleextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticTupleType()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticTupleType", "Internals.ReificationSupportApi.SyntacticTypeApplied()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticTypeApplied", "Internals.ReificationSupportApi.SyntacticTypeAppliedExtractor": "scala/reflect/api/internals$reificationsupportapi$syntactictypeappliedextractor.html", "Internals.ReificationSupportApi.SyntacticTypeAppliedExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticTypeAppliedExtractor", "Internals.ReificationSupportApi.SyntacticTypeAppliedExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntactictypeappliedextractor.html#apply", "Internals.ReificationSupportApi.SyntacticTypeAppliedExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntactictypeappliedextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticTypeIdent()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticTypeIdent", "Internals.ReificationSupportApi.SyntacticTypeIdentExtractor": "scala/reflect/api/internals$reificationsupportapi$syntactictypeidentextractor.html", "Internals.ReificationSupportApi.SyntacticTypeIdentExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticTypeIdentExtractor", "Internals.ReificationSupportApi.SyntacticTypeIdentExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntactictypeidentextractor.html#apply", "Internals.ReificationSupportApi.SyntacticTypeIdentExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntactictypeidentextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticTypeProjection()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticTypeProjection", "Internals.ReificationSupportApi.SyntacticTypeProjectionExtractor": "scala/reflect/api/internals$reificationsupportapi$syntactictypeprojectionextractor.html", "Internals.ReificationSupportApi.SyntacticTypeProjectionExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticTypeProjectionExtractor", "Internals.ReificationSupportApi.SyntacticTypeProjectionExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntactictypeprojectionextractor.html#apply", "Internals.ReificationSupportApi.SyntacticTypeProjectionExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntactictypeprojectionextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticValDef()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticValDef", "Internals.ReificationSupportApi.SyntacticValDefExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticvaldefextractor.html", "Internals.ReificationSupportApi.SyntacticValDefExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticValDefExtractor", "Internals.ReificationSupportApi.SyntacticValDefExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticvaldefextractor.html#apply", "Internals.ReificationSupportApi.SyntacticValDefExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticvaldefextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticValEq()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticValEq", "Internals.ReificationSupportApi.SyntacticValEqExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticvaleqextractor.html", "Internals.ReificationSupportApi.SyntacticValEqExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticValEqExtractor", "Internals.ReificationSupportApi.SyntacticValEqExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticvaleqextractor.html#apply", "Internals.ReificationSupportApi.SyntacticValEqExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticvaleqextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticValFrom()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticValFrom", "Internals.ReificationSupportApi.SyntacticValFromExtractor": "scala/reflect/api/internals$reificationsupportapi$syntacticvalfromextractor.html", "Internals.ReificationSupportApi.SyntacticValFromExtractor()": "scala/reflect/api/internals$reificationsupportapi.html#scala.reflect.api.Internals.ReificationSupportApi.SyntacticValFromExtractor", "Internals.ReificationSupportApi.SyntacticValFromExtractor.apply()": "scala/reflect/api/internals$reificationsupportapi$syntacticvalfromextractor.html#apply", "Internals.ReificationSupportApi.SyntacticValFromExtractor.unapply()": "scala/reflect/api/internals$reificationsupportapi$syntacticvalfromextractor.html#unapply", "Internals.ReificationSupportApi.SyntacticVarDef()": "scala/reflect/api/internals$reificationsupportapi.html#SyntacticVarDef", "Internals.ReificationSupportApi.thisPrefix()": "scala/reflect/api/internals$reificationsupportapi.html#thisPrefix", "Internals.ReificationSupportApi.ThisType()": "scala/reflect/api/internals$reificationsupportapi.html#ThisType", "Internals.ReificationSupportApi.toStats()": "scala/reflect/api/internals$reificationsupportapi.html#toStats", "Internals.ReificationSupportApi.TypeBounds()": "scala/reflect/api/internals$reificationsupportapi.html#TypeBounds", "Internals.ReificationSupportApi.TypeRef()": "scala/reflect/api/internals$reificationsupportapi.html#TypeRef", "Internals.ReificationSupportApi.UnliftListElementwise": "scala/reflect/api/internals$reificationsupportapi$unliftlistelementwise.html", "Internals.ReificationSupportApi.UnliftListElementwise()": "scala/reflect/api/internals$reificationsupportapi.html#UnliftListElementwise", "Internals.ReificationSupportApi.UnliftListElementwise.unapply()": "scala/reflect/api/internals$reificationsupportapi$unliftlistelementwise.html#unapply", "Internals.ReificationSupportApi.UnliftListOfListsElementwise": "scala/reflect/api/internals$reificationsupportapi$unliftlistoflistselementwise.html", "Internals.ReificationSupportApi.UnliftListOfListsElementwise()": "scala/reflect/api/internals$reificationsupportapi.html#UnliftListOfListsElementwise", "Internals.ReificationSupportApi.UnliftListOfListsElementwise.unapply()": "scala/reflect/api/internals$reificationsupportapi$unliftlistoflistselementwise.html#unapply", "JavaUniverse": "scala/reflect/runtime/javauniverse.html", "JavaUniverse.currentFreshNameCreator()": "scala/reflect/runtime/javauniverse.html#currentFreshNameCreator", "JavaUniverse.currentRun()": "scala/reflect/runtime/javauniverse.html#currentRun", "JavaUniverse.erasurePhase()": "scala/reflect/runtime/javauniverse.html#erasurePhase", "JavaUniverse.force()": "scala/reflect/runtime/javauniverse.html#force", "JavaUniverse.init()": "scala/reflect/runtime/javauniverse.html#init", "JavaUniverse.internal()": "scala/reflect/runtime/javauniverse.html#internal", "JavaUniverse.JavaMirror": "scala/reflect/api/javauniverse$javamirror.html", "JavaUniverse.JavaMirror()": "scala/reflect/api/javauniverse.html#scala.reflect.api.JavaUniverse.JavaMirror", "JavaUniverse.JavaMirror.classLoader()": "scala/reflect/api/javauniverse$javamirror.html#classLoader", "JavaUniverse.JavaMirror.toString()": "scala/reflect/api/javauniverse$javamirror.html#toString", "JavaUniverse.JavaUniverse()": "scala/reflect/runtime/javauniverse.html#<init>", "JavaUniverse.log()": "scala/reflect/runtime/javauniverse.html#log", "JavaUniverse.Mirror()": "scala/reflect/api/javauniverse.html#scala.reflect.api.JavaUniverse.Mirror", "JavaUniverse.newLazyTreeCopier()": "scala/reflect/runtime/javauniverse.html#newLazyTreeCopier", "JavaUniverse.newStrictTreeCopier()": "scala/reflect/runtime/javauniverse.html#newStrictTreeCopier", "JavaUniverse.PerRunReporting": "scala/reflect/runtime/javauniverse$perrunreporting.html", "JavaUniverse.PerRunReporting()": "scala/reflect/runtime/javauniverse.html#PerRunReporting", "JavaUniverse.PerRunReporting.deprecationWarning()": "scala/reflect/runtime/javauniverse$perrunreporting.html#deprecationWarning", "JavaUniverse.PerRunReporting.PerRunReporting()": "scala/reflect/runtime/javauniverse$perrunreporting.html#<init>", "JavaUniverse.picklerPhase()": "scala/reflect/runtime/javauniverse.html#picklerPhase", "JavaUniverse.reporter()": "scala/reflect/runtime/javauniverse.html#reporter", "JavaUniverse.RuntimeClass()": "scala/reflect/api/javauniverse.html#scala.reflect.api.JavaUniverse.RuntimeClass", "JavaUniverse.RuntimeClassTag()": "scala/reflect/api/javauniverse.html#RuntimeClassTag", "JavaUniverse.runtimeMirror()": "scala/reflect/api/javauniverse.html#runtimeMirror", "JavaUniverse.settings()": "scala/reflect/runtime/javauniverse.html#settings", "JavaUniverse.statistics()": "scala/reflect/runtime/javauniverse.html#statistics", "JavaUniverse.TreeCopier": "scala/reflect/runtime/javauniverse$treecopier.html", "JavaUniverse.TreeCopier()": "scala/reflect/runtime/javauniverse.html#scala.reflect.runtime.JavaUniverse.TreeCopier", "JavaUniverse.TreeCopierTag()": "scala/reflect/runtime/javauniverse.html#TreeCopierTag", "JavaUniverse.treeInfo$": "scala/reflect/runtime/javauniverse$treeinfo$.html", "JavaUniverse.treeInfo$.global()": "scala/reflect/runtime/javauniverse$treeinfo$.html#global", "JavaUniverse.treeInfo()": "scala/reflect/runtime/javauniverse.html#scala.reflect.runtime.JavaUniverse.treeInfo", "JavaUniverseForce": "scala/reflect/runtime/javauniverseforce.html", "JavaUniverseForce.force()": "scala/reflect/runtime/javauniverseforce.html#force", "Liftables": "scala/reflect/api/liftables.html", "Liftables.Liftable": "scala/reflect/api/liftables$liftable.html", "Liftables.Liftable$": "scala/reflect/api/liftables$liftable$.html", "Liftables.Liftable$.apply()": "scala/reflect/api/liftables$liftable$.html#apply", "Liftables.Liftable()": "scala/reflect/api/liftables.html#scala.reflect.api.Liftables.Liftable", "Liftables.Liftable.apply()": "scala/reflect/api/liftables$liftable.html#apply", "Liftables.Unliftable": "scala/reflect/api/liftables$unliftable.html", "Liftables.Unliftable$": "scala/reflect/api/liftables$unliftable$.html", "Liftables.Unliftable$.apply()": "scala/reflect/api/liftables$unliftable$.html#apply", "Liftables.Unliftable()": "scala/reflect/api/liftables.html#scala.reflect.api.Liftables.Unliftable", "Liftables.Unliftable.unapply()": "scala/reflect/api/liftables$unliftable.html#unapply", "macros": "scala/reflect/macros/index.html", "macros.Aliases()": "scala/reflect/macros/index.html#scala.reflect.macros.Aliases", "macros.Attachments()": "scala/reflect/macros/index.html#scala.reflect.macros.Attachments", "macros.Enclosures()": "scala/reflect/macros/index.html#scala.reflect.macros.Enclosures", "macros.Evals()": "scala/reflect/macros/index.html#scala.reflect.macros.Evals", "macros.ExprUtils()": "scala/reflect/macros/index.html#scala.reflect.macros.ExprUtils", "macros.FrontEnds()": "scala/reflect/macros/index.html#scala.reflect.macros.FrontEnds", "macros.Infrastructure()": "scala/reflect/macros/index.html#scala.reflect.macros.Infrastructure", "macros.Internals()": "scala/reflect/macros/index.html#scala.reflect.macros.Internals", "macros.Names()": "scala/reflect/macros/index.html#scala.reflect.macros.Names", "macros.ParseException()": "scala/reflect/macros/index.html#scala.reflect.macros.ParseException", "macros.Parsers()": "scala/reflect/macros/index.html#scala.reflect.macros.Parsers", "macros.ReificationException()": "scala/reflect/macros/index.html#scala.reflect.macros.ReificationException", "macros.Reifiers()": "scala/reflect/macros/index.html#scala.reflect.macros.Reifiers", "macros.TypecheckException()": "scala/reflect/macros/index.html#scala.reflect.macros.TypecheckException", "macros.Typers()": "scala/reflect/macros/index.html#scala.reflect.macros.Typers", "macros.UnexpectedReificationException()": "scala/reflect/macros/index.html#scala.reflect.macros.UnexpectedReificationException", "macros.Universe()": "scala/reflect/macros/index.html#scala.reflect.macros.Universe", "Mirror": "scala/reflect/api/mirror.html", "Mirror.EmptyPackage()": "scala/reflect/api/mirror.html#EmptyPackage", "Mirror.EmptyPackageClass()": "scala/reflect/api/mirror.html#EmptyPackageClass", "Mirror.Mirror()": "scala/reflect/api/mirror.html#<init>", "Mirror.RootClass()": "scala/reflect/api/mirror.html#RootClass", "Mirror.RootPackage()": "scala/reflect/api/mirror.html#RootPackage", "Mirror.staticClass()": "scala/reflect/api/mirror.html#staticClass", "Mirror.staticModule()": "scala/reflect/api/mirror.html#staticModule", "Mirror.staticPackage()": "scala/reflect/api/mirror.html#staticPackage", "Mirror.symbolOf()": "scala/reflect/api/mirror.html#symbolOf", "Mirror.typeOf()": "scala/reflect/api/mirror.html#typeOf", "Mirror.universe()": "scala/reflect/api/mirror.html#universe", "Mirror.weakTypeOf()": "scala/reflect/api/mirror.html#weakTypeOf", "Mirrors": "scala/reflect/api/mirrors.html", "Mirrors.ClassMirror": "scala/reflect/api/mirrors$classmirror.html", "Mirrors.ClassMirror()": "scala/reflect/api/mirrors.html#scala.reflect.api.Mirrors.ClassMirror", "Mirrors.ClassMirror.reflectConstructor()": "scala/reflect/api/mirrors$classmirror.html#reflectConstructor", "Mirrors.ClassMirror.symbol()": "scala/reflect/api/mirrors$classmirror.html#symbol", "Mirrors.FieldMirror": "scala/reflect/api/mirrors$fieldmirror.html", "Mirrors.FieldMirror()": "scala/reflect/api/mirrors.html#scala.reflect.api.Mirrors.FieldMirror", "Mirrors.FieldMirror.bind()": "scala/reflect/api/mirrors$fieldmirror.html#bind", "Mirrors.FieldMirror.get()": "scala/reflect/api/mirrors$fieldmirror.html#get", "Mirrors.FieldMirror.receiver()": "scala/reflect/api/mirrors$fieldmirror.html#receiver", "Mirrors.FieldMirror.set()": "scala/reflect/api/mirrors$fieldmirror.html#set", "Mirrors.FieldMirror.symbol()": "scala/reflect/api/mirrors$fieldmirror.html#symbol", "Mirrors.InstanceMirror": "scala/reflect/api/mirrors$instancemirror.html", "Mirrors.InstanceMirror()": "scala/reflect/api/mirrors.html#scala.reflect.api.Mirrors.InstanceMirror", "Mirrors.InstanceMirror.instance()": "scala/reflect/api/mirrors$instancemirror.html#instance", "Mirrors.InstanceMirror.reflectClass()": "scala/reflect/api/mirrors$instancemirror.html#reflectClass", "Mirrors.InstanceMirror.reflectField()": "scala/reflect/api/mirrors$instancemirror.html#reflectField", "Mirrors.InstanceMirror.reflectMethod()": "scala/reflect/api/mirrors$instancemirror.html#reflectMethod", "Mirrors.InstanceMirror.reflectModule()": "scala/reflect/api/mirrors$instancemirror.html#reflectModule", "Mirrors.InstanceMirror.symbol()": "scala/reflect/api/mirrors$instancemirror.html#symbol", "Mirrors.MethodMirror": "scala/reflect/api/mirrors$methodmirror.html", "Mirrors.MethodMirror()": "scala/reflect/api/mirrors.html#scala.reflect.api.Mirrors.MethodMirror", "Mirrors.MethodMirror.apply()": "scala/reflect/api/mirrors$methodmirror.html#apply", "Mirrors.MethodMirror.bind()": "scala/reflect/api/mirrors$methodmirror.html#bind", "Mirrors.MethodMirror.receiver()": "scala/reflect/api/mirrors$methodmirror.html#receiver", "Mirrors.MethodMirror.symbol()": "scala/reflect/api/mirrors$methodmirror.html#symbol", "Mirrors.Mirror()": "scala/reflect/api/mirrors.html#scala.reflect.api.Mirrors.Mirror", "Mirrors.ModuleMirror": "scala/reflect/api/mirrors$modulemirror.html", "Mirrors.ModuleMirror()": "scala/reflect/api/mirrors.html#scala.reflect.api.Mirrors.ModuleMirror", "Mirrors.ModuleMirror.instance()": "scala/reflect/api/mirrors$modulemirror.html#instance", "Mirrors.ModuleMirror.symbol()": "scala/reflect/api/mirrors$modulemirror.html#symbol", "Mirrors.ReflectiveMirror": "scala/reflect/api/mirrors$reflectivemirror.html", "Mirrors.ReflectiveMirror()": "scala/reflect/api/mirrors.html#scala.reflect.api.Mirrors.ReflectiveMirror", "Mirrors.ReflectiveMirror.reflect()": "scala/reflect/api/mirrors$reflectivemirror.html#reflect", "Mirrors.ReflectiveMirror.reflectClass()": "scala/reflect/api/mirrors$reflectivemirror.html#reflectClass", "Mirrors.ReflectiveMirror.reflectModule()": "scala/reflect/api/mirrors$reflectivemirror.html#reflectModule", "Mirrors.rootMirror()": "scala/reflect/api/mirrors.html#rootMirror", "Mirrors.RuntimeClass()": "scala/reflect/api/mirrors.html#scala.reflect.api.Mirrors.RuntimeClass", "Mirrors.RuntimeClassApi": "scala/reflect/api/mirrors$runtimeclassapi.html", "Mirrors.RuntimeClassApi()": "scala/reflect/api/mirrors.html#scala.reflect.api.Mirrors.RuntimeClassApi", "Mirrors.RuntimeMirror": "scala/reflect/api/mirrors$runtimemirror.html", "Mirrors.RuntimeMirror()": "scala/reflect/api/mirrors.html#scala.reflect.api.Mirrors.RuntimeMirror", "Mirrors.RuntimeMirror.classSymbol()": "scala/reflect/api/mirrors$runtimemirror.html#classSymbol", "Mirrors.RuntimeMirror.moduleSymbol()": "scala/reflect/api/mirrors$runtimemirror.html#moduleSymbol", "Mirrors.RuntimeMirror.runtimeClass()": "scala/reflect/api/mirrors$runtimemirror.html#runtimeClass", "Mirrors.TemplateMirror": "scala/reflect/api/mirrors$templatemirror.html", "Mirrors.TemplateMirror()": "scala/reflect/api/mirrors.html#scala.reflect.api.Mirrors.TemplateMirror", "Mirrors.TemplateMirror.isStatic()": "scala/reflect/api/mirrors$templatemirror.html#isStatic", "Mirrors.TemplateMirror.symbol()": "scala/reflect/api/mirrors$templatemirror.html#symbol", "Names": "scala/reflect/macros/names.html", "Names.freshName()": "scala/reflect/macros/names.html#freshName", "Names.Name()": "scala/reflect/api/names.html#scala.reflect.api.Names.Name", "Names.NameApi": "scala/reflect/api/names$nameapi.html", "Names.NameApi()": "scala/reflect/api/names.html#scala.reflect.api.Names.NameApi", "Names.NameApi.decodedName()": "scala/reflect/api/names$nameapi.html#decodedName", "Names.NameApi.encodedName()": "scala/reflect/api/names$nameapi.html#encodedName", "Names.NameApi.isTermName()": "scala/reflect/api/names$nameapi.html#isTermName", "Names.NameApi.isTypeName()": "scala/reflect/api/names$nameapi.html#isTypeName", "Names.NameApi.NameApi()": "scala/reflect/api/names$nameapi.html#<init>", "Names.NameApi.toTermName()": "scala/reflect/api/names$nameapi.html#toTermName", "Names.NameApi.toTypeName()": "scala/reflect/api/names$nameapi.html#toTypeName", "Names.TermName()": "scala/reflect/api/names.html#TermName", "Names.TermNameApi": "scala/reflect/api/names$termnameapi.html", "Names.TermNameApi()": "scala/reflect/api/names.html#scala.reflect.api.Names.TermNameApi", "Names.TermNameExtractor": "scala/reflect/api/names$termnameextractor.html", "Names.TermNameExtractor()": "scala/reflect/api/names.html#scala.reflect.api.Names.TermNameExtractor", "Names.TermNameExtractor.apply()": "scala/reflect/api/names$termnameextractor.html#apply", "Names.TermNameExtractor.TermNameExtractor()": "scala/reflect/api/names$termnameextractor.html#<init>", "Names.TermNameExtractor.unapply()": "scala/reflect/api/names$termnameextractor.html#unapply", "Names.TypeName()": "scala/reflect/api/names.html#TypeName", "Names.TypeNameApi": "scala/reflect/api/names$typenameapi.html", "Names.TypeNameApi()": "scala/reflect/api/names.html#scala.reflect.api.Names.TypeNameApi", "Names.TypeNameExtractor": "scala/reflect/api/names$typenameextractor.html", "Names.TypeNameExtractor()": "scala/reflect/api/names.html#scala.reflect.api.Names.TypeNameExtractor", "Names.TypeNameExtractor.apply()": "scala/reflect/api/names$typenameextractor.html#apply", "Names.TypeNameExtractor.TypeNameExtractor()": "scala/reflect/api/names$typenameextractor.html#<init>", "Names.TypeNameExtractor.unapply()": "scala/reflect/api/names$typenameextractor.html#unapply", "ParseException": "scala/reflect/macros/parseexception.html", "ParseException.msg()": "scala/reflect/macros/parseexception.html#msg", "ParseException.ParseException()": "scala/reflect/macros/parseexception.html#<init>", "ParseException.pos()": "scala/reflect/macros/parseexception.html#pos", "Parsers": "scala/reflect/macros/parsers.html", "Parsers.parse()": "scala/reflect/macros/parsers.html#parse", "Position": "scala/reflect/api/position.html", "Position.column()": "scala/reflect/api/position.html#column", "Position.end()": "scala/reflect/api/position.html#end", "Position.focus()": "scala/reflect/api/position.html#focus", "Position.isOpaqueRange()": "scala/reflect/api/position.html#isOpaqueRange", "Position.isRange()": "scala/reflect/api/position.html#isRange", "Position.isTransparent()": "scala/reflect/api/position.html#isTransparent", "Position.line()": "scala/reflect/api/position.html#line", "Position.makeTransparent()": "scala/reflect/api/position.html#makeTransparent", "Position.point()": "scala/reflect/api/position.html#point", "Position.Pos()": "scala/reflect/api/position.html#scala.reflect.api.Position.Pos", "Position.source()": "scala/reflect/api/position.html#source", "Position.start()": "scala/reflect/api/position.html#start", "Position.withEnd()": "scala/reflect/api/position.html#withEnd", "Position.withPoint()": "scala/reflect/api/position.html#withPoint", "Position.withStart()": "scala/reflect/api/position.html#withStart", "Positions": "scala/reflect/api/positions.html", "Positions.atPos()": "scala/reflect/api/positions.html#atPos", "Positions.NoPosition()": "scala/reflect/api/positions.html#NoPosition", "Positions.Position()": "scala/reflect/api/positions.html#scala.reflect.api.Positions.Position", "Positions.wrappingPos()": "scala/reflect/api/positions.html#wrappingPos", "Printers": "scala/reflect/api/printers.html", "Printers.BooleanFlag": "scala/reflect/api/printers$booleanflag.html", "Printers.BooleanFlag$": "scala/reflect/api/printers$booleanflag$.html", "Printers.BooleanFlag$.booleanToBooleanFlag()": "scala/reflect/api/printers$booleanflag$.html#booleanToBooleanFlag", "Printers.BooleanFlag$.optionToBooleanFlag()": "scala/reflect/api/printers$booleanflag$.html#optionToBooleanFlag", "Printers.BooleanFlag$.settingToBooleanFlag()": "scala/reflect/api/printers$booleanflag$.html#settingToBooleanFlag", "Printers.BooleanFlag()": "scala/reflect/api/printers.html#scala.reflect.api.Printers.BooleanFlag", "Printers.BooleanFlag.BooleanFlag()": "scala/reflect/api/printers$booleanflag.html#<init>", "Printers.BooleanFlag.value()": "scala/reflect/api/printers$booleanflag.html#value", "Printers.newCodePrinter()": "scala/reflect/api/printers.html#newCodePrinter", "Printers.newRawTreePrinter()": "scala/reflect/api/printers.html#newRawTreePrinter", "Printers.newTreePrinter()": "scala/reflect/api/printers.html#newTreePrinter", "Printers.render()": "scala/reflect/api/printers.html#render", "Printers.show()": "scala/reflect/api/printers.html#show", "Printers.showCode()": "scala/reflect/api/printers.html#showCode", "Printers.showDecl()": "scala/reflect/api/printers.html#showDecl", "Printers.showRaw()": "scala/reflect/api/printers.html#showRaw", "Printers.TreePrinter": "scala/reflect/api/printers$treeprinter.html", "Printers.TreePrinter()": "scala/reflect/api/printers.html#scala.reflect.api.Printers.TreePrinter", "Printers.TreePrinter.print()": "scala/reflect/api/printers$treeprinter.html#print", "Printers.TreePrinter.printIds()": "scala/reflect/api/printers$treeprinter.html#printIds", "Printers.TreePrinter.printKinds()": "scala/reflect/api/printers$treeprinter.html#printKinds", "Printers.TreePrinter.printMirrors()": "scala/reflect/api/printers$treeprinter.html#printMirrors", "Printers.TreePrinter.printOwners()": "scala/reflect/api/printers$treeprinter.html#printOwners", "Printers.TreePrinter.printPositions()": "scala/reflect/api/printers$treeprinter.html#printPositions", "Printers.TreePrinter.printTypes()": "scala/reflect/api/printers$treeprinter.html#printTypes", "Printers.TreePrinter.withIds()": "scala/reflect/api/printers$treeprinter.html#withIds", "Printers.TreePrinter.withKinds()": "scala/reflect/api/printers$treeprinter.html#withKinds", "Printers.TreePrinter.withMirrors()": "scala/reflect/api/printers$treeprinter.html#withMirrors", "Printers.TreePrinter.withoutIds()": "scala/reflect/api/printers$treeprinter.html#withoutIds", "Printers.TreePrinter.withoutKinds()": "scala/reflect/api/printers$treeprinter.html#withoutKinds", "Printers.TreePrinter.withoutMirrors()": "scala/reflect/api/printers$treeprinter.html#withoutMirrors", "Printers.TreePrinter.withoutOwners()": "scala/reflect/api/printers$treeprinter.html#withoutOwners", "Printers.TreePrinter.withoutPositions()": "scala/reflect/api/printers$treeprinter.html#withoutPositions", "Printers.TreePrinter.withoutTypes()": "scala/reflect/api/printers$treeprinter.html#withoutTypes", "Printers.TreePrinter.withOwners()": "scala/reflect/api/printers$treeprinter.html#withOwners", "Printers.TreePrinter.withPositions()": "scala/reflect/api/printers$treeprinter.html#withPositions", "Printers.TreePrinter.withTypes()": "scala/reflect/api/printers$treeprinter.html#withTypes", "Printers.treeToString()": "scala/reflect/api/printers.html#treeToString", "Quasiquotes": "scala/reflect/api/quasiquotes.html", "Quasiquotes.Quasiquote": "scala/reflect/api/quasiquotes$quasiquote.html", "Quasiquotes.Quasiquote()": "scala/reflect/api/quasiquotes.html#scala.reflect.api.Quasiquotes.Quasiquote", "Quasiquotes.Quasiquote.api": "scala/reflect/api/quasiquotes$quasiquote$api.html", "Quasiquotes.Quasiquote.api()": "scala/reflect/api/quasiquotes$quasiquote.html#scala.reflect.api.Quasiquotes.Quasiquote.api", "Quasiquotes.Quasiquote.api.apply()": "scala/reflect/api/quasiquotes$quasiquote$api.html#apply", "Quasiquotes.Quasiquote.api.unapply()": "scala/reflect/api/quasiquotes$quasiquote$api.html#unapply", "Quasiquotes.Quasiquote.cq$": "scala/reflect/api/quasiquotes$quasiquote$cq$.html", "Quasiquotes.Quasiquote.cq()": "scala/reflect/api/quasiquotes$quasiquote.html#scala.reflect.api.Quasiquotes.Quasiquote.cq", "Quasiquotes.Quasiquote.fq$": "scala/reflect/api/quasiquotes$quasiquote$fq$.html", "Quasiquotes.Quasiquote.fq()": "scala/reflect/api/quasiquotes$quasiquote.html#scala.reflect.api.Quasiquotes.Quasiquote.fq", "Quasiquotes.Quasiquote.pq$": "scala/reflect/api/quasiquotes$quasiquote$pq$.html", "Quasiquotes.Quasiquote.pq()": "scala/reflect/api/quasiquotes$quasiquote.html#scala.reflect.api.Quasiquotes.Quasiquote.pq", "Quasiquotes.Quasiquote.q$": "scala/reflect/api/quasiquotes$quasiquote$q$.html", "Quasiquotes.Quasiquote.q()": "scala/reflect/api/quasiquotes$quasiquote.html#scala.reflect.api.Quasiquotes.Quasiquote.q", "Quasiquotes.Quasiquote.Quasiquote()": "scala/reflect/api/quasiquotes$quasiquote.html#<init>", "Quasiquotes.Quasiquote.tq$": "scala/reflect/api/quasiquotes$quasiquote$tq$.html", "Quasiquotes.Quasiquote.tq()": "scala/reflect/api/quasiquotes$quasiquote.html#scala.reflect.api.Quasiquotes.Quasiquote.tq", "reflect": "scala/reflect/index.html", "reflect.classTag()": "scala/reflect/index.html#classTag", "reflect.ensureAccessible()": "scala/reflect/index.html#ensureAccessible", "ReflectionUtils$": "scala/reflect/runtime/reflectionutils$.html", "ReflectionUtils$.associatedFile()": "scala/reflect/runtime/reflectionutils$.html#associatedFile", "ReflectionUtils$.EnclosedIn": "scala/reflect/runtime/reflectionutils$$enclosedin.html", "ReflectionUtils$.EnclosedIn()": "scala/reflect/runtime/reflectionutils$.html#scala.reflect.runtime.ReflectionUtils.EnclosedIn", "ReflectionUtils$.EnclosedIn.EnclosedIn()": "scala/reflect/runtime/reflectionutils$$enclosedin.html#<init>", "ReflectionUtils$.EnclosedIn.unapply()": "scala/reflect/runtime/reflectionutils$$enclosedin.html#unapply", "ReflectionUtils$.EnclosedInClass$": "scala/reflect/runtime/reflectionutils$$enclosedinclass$.html", "ReflectionUtils$.EnclosedInClass()": "scala/reflect/runtime/reflectionutils$.html#scala.reflect.runtime.ReflectionUtils.EnclosedInClass", "ReflectionUtils$.EnclosedInConstructor$": "scala/reflect/runtime/reflectionutils$$enclosedinconstructor$.html", "ReflectionUtils$.EnclosedInConstructor()": "scala/reflect/runtime/reflectionutils$.html#scala.reflect.runtime.ReflectionUtils.EnclosedInConstructor", "ReflectionUtils$.EnclosedInMethod$": "scala/reflect/runtime/reflectionutils$$enclosedinmethod$.html", "ReflectionUtils$.EnclosedInMethod()": "scala/reflect/runtime/reflectionutils$.html#scala.reflect.runtime.ReflectionUtils.EnclosedInMethod", "ReflectionUtils$.EnclosedInPackage$": "scala/reflect/runtime/reflectionutils$$enclosedinpackage$.html", "ReflectionUtils$.EnclosedInPackage()": "scala/reflect/runtime/reflectionutils$.html#scala.reflect.runtime.ReflectionUtils.EnclosedInPackage", "ReflectionUtils$.innerSingletonInstance()": "scala/reflect/runtime/reflectionutils$.html#innerSingletonInstance", "ReflectionUtils$.PrimitiveOrArray$": "scala/reflect/runtime/reflectionutils$$primitiveorarray$.html", "ReflectionUtils$.PrimitiveOrArray$.unapply()": "scala/reflect/runtime/reflectionutils$$primitiveorarray$.html#unapply", "ReflectionUtils$.PrimitiveOrArray()": "scala/reflect/runtime/reflectionutils$.html#scala.reflect.runtime.ReflectionUtils.PrimitiveOrArray", "ReflectionUtils$.show()": "scala/reflect/runtime/reflectionutils$.html#show", "ReflectionUtils$.staticSingletonInstance()": "scala/reflect/runtime/reflectionutils$.html#staticSingletonInstance", "ReflectionUtils$.unwrapHandler()": "scala/reflect/runtime/reflectionutils$.html#unwrapHandler", "ReflectionUtils$.unwrapThrowable()": "scala/reflect/runtime/reflectionutils$.html#unwrapThrowable", "ReificationException": "scala/reflect/macros/reificationexception.html", "ReificationException.msg()": "scala/reflect/macros/reificationexception.html#msg", "ReificationException.pos()": "scala/reflect/macros/reificationexception.html#pos", "ReificationException.ReificationException()": "scala/reflect/macros/reificationexception.html#<init>", "Reifiers": "scala/reflect/macros/reifiers.html", "Reifiers.reifyEnclosingRuntimeClass()": "scala/reflect/macros/reifiers.html#reifyEnclosingRuntimeClass", "Reifiers.reifyRuntimeClass()": "scala/reflect/macros/reifiers.html#reifyRuntimeClass", "Reifiers.reifyTree()": "scala/reflect/macros/reifiers.html#reifyTree", "Reifiers.reifyType()": "scala/reflect/macros/reifiers.html#reifyType", "Reifiers.unreifyTree()": "scala/reflect/macros/reifiers.html#unreifyTree", "runtime": "scala/reflect/runtime/index.html", "runtime.currentMirror()": "scala/reflect/runtime/index.html#currentMirror", "runtime.JavaUniverse()": "scala/reflect/runtime/index.html#scala.reflect.runtime.JavaUniverse", "runtime.JavaUniverseForce()": "scala/reflect/runtime/index.html#scala.reflect.runtime.JavaUniverseForce", "runtime.ReflectionUtils()": "scala/reflect/runtime/index.html#scala.reflect.runtime.ReflectionUtils", "runtime.universe()": "scala/reflect/runtime/index.html#universe", "scala": "scala/index.html", "Scopes": "scala/reflect/api/scopes.html", "Scopes.MemberScope": "scala/reflect/api/scopes$memberscope.html", "Scopes.MemberScope()": "scala/reflect/api/scopes.html#scala.reflect.api.Scopes.MemberScope", "Scopes.MemberScope.sorted()": "scala/reflect/api/scopes$memberscope.html#sorted", "Scopes.MemberScopeApi": "scala/reflect/api/scopes$memberscopeapi.html", "Scopes.MemberScopeApi()": "scala/reflect/api/scopes.html#scala.reflect.api.Scopes.MemberScopeApi", "Scopes.MemberScopeApi.sorted()": "scala/reflect/api/scopes$memberscopeapi.html#sorted", "Scopes.Scope": "scala/reflect/api/scopes$scope.html", "Scopes.Scope()": "scala/reflect/api/scopes.html#scala.reflect.api.Scopes.Scope", "Scopes.ScopeApi": "scala/reflect/api/scopes$scopeapi.html", "Scopes.ScopeApi()": "scala/reflect/api/scopes.html#scala.reflect.api.Scopes.ScopeApi", "StandardDefinitions": "scala/reflect/api/standarddefinitions.html", "StandardDefinitions.definitions()": "scala/reflect/api/standarddefinitions.html#definitions", "StandardDefinitions.DefinitionsApi": "scala/reflect/api/standarddefinitions$definitionsapi.html", "StandardDefinitions.DefinitionsApi()": "scala/reflect/api/standarddefinitions.html#scala.reflect.api.StandardDefinitions.DefinitionsApi", "StandardDefinitions.DefinitionsApi.AnyClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#AnyClass", "StandardDefinitions.DefinitionsApi.AnyRefClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#AnyRefClass", "StandardDefinitions.DefinitionsApi.AnyValClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#AnyValClass", "StandardDefinitions.DefinitionsApi.ArrayClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#ArrayClass", "StandardDefinitions.DefinitionsApi.ArrayModule()": "scala/reflect/api/standarddefinitions$definitionsapi.html#ArrayModule", "StandardDefinitions.DefinitionsApi.ArrayModule_overloadedApply()": "scala/reflect/api/standarddefinitions$definitionsapi.html#ArrayModule_overloadedApply", "StandardDefinitions.DefinitionsApi.Array_apply()": "scala/reflect/api/standarddefinitions$definitionsapi.html#Array_apply", "StandardDefinitions.DefinitionsApi.Array_clone()": "scala/reflect/api/standarddefinitions$definitionsapi.html#Array_clone", "StandardDefinitions.DefinitionsApi.Array_length()": "scala/reflect/api/standarddefinitions$definitionsapi.html#Array_length", "StandardDefinitions.DefinitionsApi.Array_update()": "scala/reflect/api/standarddefinitions$definitionsapi.html#Array_update", "StandardDefinitions.DefinitionsApi.BooleanClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#BooleanClass", "StandardDefinitions.DefinitionsApi.ByNameParamClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#ByNameParamClass", "StandardDefinitions.DefinitionsApi.ByteClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#ByteClass", "StandardDefinitions.DefinitionsApi.CharClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#CharClass", "StandardDefinitions.DefinitionsApi.ClassClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#ClassClass", "StandardDefinitions.DefinitionsApi.DoubleClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#DoubleClass", "StandardDefinitions.DefinitionsApi.FloatClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#FloatClass", "StandardDefinitions.DefinitionsApi.FunctionClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#FunctionClass", "StandardDefinitions.DefinitionsApi.IntClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#IntClass", "StandardDefinitions.DefinitionsApi.JavaLangPackage()": "scala/reflect/api/standarddefinitions$definitionsapi.html#JavaLangPackage", "StandardDefinitions.DefinitionsApi.JavaLangPackageClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#JavaLangPackageClass", "StandardDefinitions.DefinitionsApi.JavaRepeatedParamClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#JavaRepeatedParamClass", "StandardDefinitions.DefinitionsApi.ListClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#ListClass", "StandardDefinitions.DefinitionsApi.ListModule()": "scala/reflect/api/standarddefinitions$definitionsapi.html#ListModule", "StandardDefinitions.DefinitionsApi.List_apply()": "scala/reflect/api/standarddefinitions$definitionsapi.html#List_apply", "StandardDefinitions.DefinitionsApi.LongClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#LongClass", "StandardDefinitions.DefinitionsApi.NilModule()": "scala/reflect/api/standarddefinitions$definitionsapi.html#NilModule", "StandardDefinitions.DefinitionsApi.NoneModule()": "scala/reflect/api/standarddefinitions$definitionsapi.html#NoneModule", "StandardDefinitions.DefinitionsApi.NothingClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#NothingClass", "StandardDefinitions.DefinitionsApi.NullClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#NullClass", "StandardDefinitions.DefinitionsApi.ObjectClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#ObjectClass", "StandardDefinitions.DefinitionsApi.OptionClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#OptionClass", "StandardDefinitions.DefinitionsApi.PredefModule()": "scala/reflect/api/standarddefinitions$definitionsapi.html#PredefModule", "StandardDefinitions.DefinitionsApi.ProductClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#ProductClass", "StandardDefinitions.DefinitionsApi.RepeatedParamClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#RepeatedParamClass", "StandardDefinitions.DefinitionsApi.ScalaNumericValueClasses()": "scala/reflect/api/standarddefinitions$definitionsapi.html#ScalaNumericValueClasses", "StandardDefinitions.DefinitionsApi.ScalaPackage()": "scala/reflect/api/standarddefinitions$definitionsapi.html#ScalaPackage", "StandardDefinitions.DefinitionsApi.ScalaPackageClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#ScalaPackageClass", "StandardDefinitions.DefinitionsApi.ScalaPrimitiveValueClasses()": "scala/reflect/api/standarddefinitions$definitionsapi.html#ScalaPrimitiveValueClasses", "StandardDefinitions.DefinitionsApi.ShortClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#ShortClass", "StandardDefinitions.DefinitionsApi.SomeModule()": "scala/reflect/api/standarddefinitions$definitionsapi.html#SomeModule", "StandardDefinitions.DefinitionsApi.StringClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#StringClass", "StandardDefinitions.DefinitionsApi.TupleClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#TupleClass", "StandardDefinitions.DefinitionsApi.UnitClass()": "scala/reflect/api/standarddefinitions$definitionsapi.html#UnitClass", "StandardDefinitions.DefinitionsApi.VarArityClassApi": "scala/reflect/api/standarddefinitions$definitionsapi$vararityclassapi.html", "StandardDefinitions.DefinitionsApi.VarArityClassApi()": "scala/reflect/api/standarddefinitions$definitionsapi.html#scala.reflect.api.StandardDefinitions.DefinitionsApi.VarArityClassApi", "StandardDefinitions.DefinitionsApi.VarArityClassApi.seq()": "scala/reflect/api/standarddefinitions$definitionsapi$vararityclassapi.html#seq", "StandardDefinitions.DefinitionsApi.VarArityClassApi.VarArityClassApi()": "scala/reflect/api/standarddefinitions$definitionsapi$vararityclassapi.html#<init>", "StandardDefinitions.StandardTypes": "scala/reflect/api/standarddefinitions$standardtypes.html", "StandardDefinitions.StandardTypes()": "scala/reflect/api/standarddefinitions.html#scala.reflect.api.StandardDefinitions.StandardTypes", "StandardDefinitions.StandardTypes.AnyRefTpe()": "scala/reflect/api/standarddefinitions$standardtypes.html#AnyRefTpe", "StandardDefinitions.StandardTypes.AnyTpe()": "scala/reflect/api/standarddefinitions$standardtypes.html#AnyTpe", "StandardDefinitions.StandardTypes.AnyValTpe()": "scala/reflect/api/standarddefinitions$standardtypes.html#AnyValTpe", "StandardDefinitions.StandardTypes.BooleanTpe()": "scala/reflect/api/standarddefinitions$standardtypes.html#BooleanTpe", "StandardDefinitions.StandardTypes.ByteTpe()": "scala/reflect/api/standarddefinitions$standardtypes.html#ByteTpe", "StandardDefinitions.StandardTypes.CharTpe()": "scala/reflect/api/standarddefinitions$standardtypes.html#CharTpe", "StandardDefinitions.StandardTypes.DoubleTpe()": "scala/reflect/api/standarddefinitions$standardtypes.html#DoubleTpe", "StandardDefinitions.StandardTypes.FloatTpe()": "scala/reflect/api/standarddefinitions$standardtypes.html#FloatTpe", "StandardDefinitions.StandardTypes.IntTpe()": "scala/reflect/api/standarddefinitions$standardtypes.html#IntTpe", "StandardDefinitions.StandardTypes.LongTpe()": "scala/reflect/api/standarddefinitions$standardtypes.html#LongTpe", "StandardDefinitions.StandardTypes.NothingTpe()": "scala/reflect/api/standarddefinitions$standardtypes.html#NothingTpe", "StandardDefinitions.StandardTypes.NullTpe()": "scala/reflect/api/standarddefinitions$standardtypes.html#NullTpe", "StandardDefinitions.StandardTypes.ObjectTpe()": "scala/reflect/api/standarddefinitions$standardtypes.html#ObjectTpe", "StandardDefinitions.StandardTypes.ShortTpe()": "scala/reflect/api/standarddefinitions$standardtypes.html#ShortTpe", "StandardDefinitions.StandardTypes.UnitTpe()": "scala/reflect/api/standarddefinitions$standardtypes.html#UnitTpe", "StandardLiftables": "scala/reflect/api/standardliftables.html", "StandardLiftables.StandardLiftableInstances": "scala/reflect/api/standardliftables$standardliftableinstances.html", "StandardLiftables.StandardLiftableInstances()": "scala/reflect/api/standardliftables.html#scala.reflect.api.StandardLiftables.StandardLiftableInstances", "StandardLiftables.StandardLiftableInstances.liftArray()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftArray", "StandardLiftables.StandardLiftableInstances.liftBoolean()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftBoolean", "StandardLiftables.StandardLiftableInstances.liftByte()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftByte", "StandardLiftables.StandardLiftableInstances.liftChar()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftChar", "StandardLiftables.StandardLiftableInstances.liftConstant()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftConstant", "StandardLiftables.StandardLiftableInstances.liftDouble()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftDouble", "StandardLiftables.StandardLiftableInstances.liftEither()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftEither", "StandardLiftables.StandardLiftableInstances.liftExpr()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftExpr", "StandardLiftables.StandardLiftableInstances.liftFloat()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftFloat", "StandardLiftables.StandardLiftableInstances.liftInt()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftInt", "StandardLiftables.StandardLiftableInstances.liftLeft()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftLeft", "StandardLiftables.StandardLiftableInstances.liftList()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftList", "StandardLiftables.StandardLiftableInstances.liftLong()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftLong", "StandardLiftables.StandardLiftableInstances.liftMap()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftMap", "StandardLiftables.StandardLiftableInstances.liftName()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftName", "StandardLiftables.StandardLiftableInstances.liftNil()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftNil", "StandardLiftables.StandardLiftableInstances.liftNone()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftNone", "StandardLiftables.StandardLiftableInstances.liftOption()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftOption", "StandardLiftables.StandardLiftableInstances.liftRight()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftRight", "StandardLiftables.StandardLiftableInstances.liftScalaSymbol()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftScalaSymbol", "StandardLiftables.StandardLiftableInstances.liftSet()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftSet", "StandardLiftables.StandardLiftableInstances.liftShort()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftShort", "StandardLiftables.StandardLiftableInstances.liftSome()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftSome", "StandardLiftables.StandardLiftableInstances.liftString()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftString", "StandardLiftables.StandardLiftableInstances.liftTree()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTree", "StandardLiftables.StandardLiftableInstances.liftTuple10()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple10", "StandardLiftables.StandardLiftableInstances.liftTuple11()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple11", "StandardLiftables.StandardLiftableInstances.liftTuple12()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple12", "StandardLiftables.StandardLiftableInstances.liftTuple13()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple13", "StandardLiftables.StandardLiftableInstances.liftTuple14()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple14", "StandardLiftables.StandardLiftableInstances.liftTuple15()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple15", "StandardLiftables.StandardLiftableInstances.liftTuple16()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple16", "StandardLiftables.StandardLiftableInstances.liftTuple17()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple17", "StandardLiftables.StandardLiftableInstances.liftTuple18()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple18", "StandardLiftables.StandardLiftableInstances.liftTuple19()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple19", "StandardLiftables.StandardLiftableInstances.liftTuple2()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple2", "StandardLiftables.StandardLiftableInstances.liftTuple20()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple20", "StandardLiftables.StandardLiftableInstances.liftTuple21()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple21", "StandardLiftables.StandardLiftableInstances.liftTuple22()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple22", "StandardLiftables.StandardLiftableInstances.liftTuple3()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple3", "StandardLiftables.StandardLiftableInstances.liftTuple4()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple4", "StandardLiftables.StandardLiftableInstances.liftTuple5()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple5", "StandardLiftables.StandardLiftableInstances.liftTuple6()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple6", "StandardLiftables.StandardLiftableInstances.liftTuple7()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple7", "StandardLiftables.StandardLiftableInstances.liftTuple8()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple8", "StandardLiftables.StandardLiftableInstances.liftTuple9()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTuple9", "StandardLiftables.StandardLiftableInstances.liftType()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftType", "StandardLiftables.StandardLiftableInstances.liftTypeTag()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftTypeTag", "StandardLiftables.StandardLiftableInstances.liftUnit()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftUnit", "StandardLiftables.StandardLiftableInstances.liftVector()": "scala/reflect/api/standardliftables$standardliftableinstances.html#liftVector", "StandardLiftables.StandardUnliftableInstances": "scala/reflect/api/standardliftables$standardunliftableinstances.html", "StandardLiftables.StandardUnliftableInstances()": "scala/reflect/api/standardliftables.html#scala.reflect.api.StandardLiftables.StandardUnliftableInstances", "StandardLiftables.StandardUnliftableInstances.unliftBoolean()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftBoolean", "StandardLiftables.StandardUnliftableInstances.unliftByte()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftByte", "StandardLiftables.StandardUnliftableInstances.unliftChar()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftChar", "StandardLiftables.StandardUnliftableInstances.unliftConstant()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftConstant", "StandardLiftables.StandardUnliftableInstances.unliftDouble()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftDouble", "StandardLiftables.StandardUnliftableInstances.unliftFloat()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftFloat", "StandardLiftables.StandardUnliftableInstances.unliftInt()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftInt", "StandardLiftables.StandardUnliftableInstances.unliftLong()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftLong", "StandardLiftables.StandardUnliftableInstances.unliftName()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftName", "StandardLiftables.StandardUnliftableInstances.unliftScalaSymbol()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftScalaSymbol", "StandardLiftables.StandardUnliftableInstances.unliftShort()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftShort", "StandardLiftables.StandardUnliftableInstances.unliftString()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftString", "StandardLiftables.StandardUnliftableInstances.unliftTuple10()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple10", "StandardLiftables.StandardUnliftableInstances.unliftTuple11()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple11", "StandardLiftables.StandardUnliftableInstances.unliftTuple12()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple12", "StandardLiftables.StandardUnliftableInstances.unliftTuple13()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple13", "StandardLiftables.StandardUnliftableInstances.unliftTuple14()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple14", "StandardLiftables.StandardUnliftableInstances.unliftTuple15()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple15", "StandardLiftables.StandardUnliftableInstances.unliftTuple16()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple16", "StandardLiftables.StandardUnliftableInstances.unliftTuple17()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple17", "StandardLiftables.StandardUnliftableInstances.unliftTuple18()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple18", "StandardLiftables.StandardUnliftableInstances.unliftTuple19()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple19", "StandardLiftables.StandardUnliftableInstances.unliftTuple2()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple2", "StandardLiftables.StandardUnliftableInstances.unliftTuple20()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple20", "StandardLiftables.StandardUnliftableInstances.unliftTuple21()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple21", "StandardLiftables.StandardUnliftableInstances.unliftTuple22()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple22", "StandardLiftables.StandardUnliftableInstances.unliftTuple3()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple3", "StandardLiftables.StandardUnliftableInstances.unliftTuple4()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple4", "StandardLiftables.StandardUnliftableInstances.unliftTuple5()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple5", "StandardLiftables.StandardUnliftableInstances.unliftTuple6()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple6", "StandardLiftables.StandardUnliftableInstances.unliftTuple7()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple7", "StandardLiftables.StandardUnliftableInstances.unliftTuple8()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple8", "StandardLiftables.StandardUnliftableInstances.unliftTuple9()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftTuple9", "StandardLiftables.StandardUnliftableInstances.unliftType()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftType", "StandardLiftables.StandardUnliftableInstances.unliftUnit()": "scala/reflect/api/standardliftables$standardunliftableinstances.html#unliftUnit", "StandardNames": "scala/reflect/api/standardnames.html", "StandardNames.NamesApi": "scala/reflect/api/standardnames$namesapi.html", "StandardNames.NamesApi()": "scala/reflect/api/standardnames.html#scala.reflect.api.StandardNames.NamesApi", "StandardNames.NamesApi.EMPTY()": "scala/reflect/api/standardnames$namesapi.html#EMPTY", "StandardNames.NamesApi.ERROR()": "scala/reflect/api/standardnames$namesapi.html#ERROR", "StandardNames.NamesApi.NameType()": "scala/reflect/api/standardnames$namesapi.html#scala.reflect.api.StandardNames.NamesApi.NameType", "StandardNames.NamesApi.PACKAGE()": "scala/reflect/api/standardnames$namesapi.html#PACKAGE", "StandardNames.NamesApi.WILDCARD()": "scala/reflect/api/standardnames$namesapi.html#WILDCARD", "StandardNames.termNames()": "scala/reflect/api/standardnames.html#termNames", "StandardNames.TermNamesApi": "scala/reflect/api/standardnames$termnamesapi.html", "StandardNames.TermNamesApi()": "scala/reflect/api/standardnames.html#scala.reflect.api.StandardNames.TermNamesApi", "StandardNames.TermNamesApi.CONSTRUCTOR()": "scala/reflect/api/standardnames$termnamesapi.html#CONSTRUCTOR", "StandardNames.TermNamesApi.EMPTY_PACKAGE_NAME()": "scala/reflect/api/standardnames$termnamesapi.html#EMPTY_PACKAGE_NAME", "StandardNames.TermNamesApi.LOCAL_SUFFIX_STRING()": "scala/reflect/api/standardnames$termnamesapi.html#LOCAL_SUFFIX_STRING", "StandardNames.TermNamesApi.NameType()": "scala/reflect/api/standardnames$termnamesapi.html#scala.reflect.api.StandardNames.TermNamesApi.NameType", "StandardNames.TermNamesApi.ROOTPKG()": "scala/reflect/api/standardnames$termnamesapi.html#ROOTPKG", "StandardNames.typeNames()": "scala/reflect/api/standardnames.html#typeNames", "StandardNames.TypeNamesApi": "scala/reflect/api/standardnames$typenamesapi.html", "StandardNames.TypeNamesApi()": "scala/reflect/api/standardnames.html#scala.reflect.api.StandardNames.TypeNamesApi", "StandardNames.TypeNamesApi.NameType()": "scala/reflect/api/standardnames$typenamesapi.html#scala.reflect.api.StandardNames.TypeNamesApi.NameType", "StandardNames.TypeNamesApi.WILDCARD_STAR()": "scala/reflect/api/standardnames$typenamesapi.html#WILDCARD_STAR", "Symbols": "scala/reflect/api/symbols.html", "Symbols.ClassSymbol": "scala/reflect/api/symbols$classsymbol.html", "Symbols.ClassSymbol()": "scala/reflect/api/symbols.html#scala.reflect.api.Symbols.ClassSymbol", "Symbols.ClassSymbol.asClass()": "scala/reflect/api/symbols$classsymbol.html#asClass", "Symbols.ClassSymbol.baseClasses()": "scala/reflect/api/symbols$classsymbol.html#baseClasses", "Symbols.ClassSymbol.isCaseClass()": "scala/reflect/api/symbols$classsymbol.html#isCaseClass", "Symbols.ClassSymbol.isClass()": "scala/reflect/api/symbols$classsymbol.html#isClass", "Symbols.ClassSymbol.isDerivedValueClass()": "scala/reflect/api/symbols$classsymbol.html#isDerivedValueClass", "Symbols.ClassSymbol.isNumeric()": "scala/reflect/api/symbols$classsymbol.html#isNumeric", "Symbols.ClassSymbol.isPrimitive()": "scala/reflect/api/symbols$classsymbol.html#isPrimitive", "Symbols.ClassSymbol.isSealed()": "scala/reflect/api/symbols$classsymbol.html#isSealed", "Symbols.ClassSymbol.isTrait()": "scala/reflect/api/symbols$classsymbol.html#isTrait", "Symbols.ClassSymbol.knownDirectSubclasses()": "scala/reflect/api/symbols$classsymbol.html#knownDirectSubclasses", "Symbols.ClassSymbol.module()": "scala/reflect/api/symbols$classsymbol.html#module", "Symbols.ClassSymbol.primaryConstructor()": "scala/reflect/api/symbols$classsymbol.html#primaryConstructor", "Symbols.ClassSymbol.selfType()": "scala/reflect/api/symbols$classsymbol.html#selfType", "Symbols.ClassSymbol.superPrefix()": "scala/reflect/api/symbols$classsymbol.html#superPrefix", "Symbols.ClassSymbol.thisPrefix()": "scala/reflect/api/symbols$classsymbol.html#thisPrefix", "Symbols.ClassSymbol.typeParams()": "scala/reflect/api/symbols$classsymbol.html#typeParams", "Symbols.ClassSymbolApi": "scala/reflect/api/symbols$classsymbolapi.html", "Symbols.ClassSymbolApi()": "scala/reflect/api/symbols.html#scala.reflect.api.Symbols.ClassSymbolApi", "Symbols.ClassSymbolApi.asClass()": "scala/reflect/api/symbols$classsymbolapi.html#asClass", "Symbols.ClassSymbolApi.baseClasses()": "scala/reflect/api/symbols$classsymbolapi.html#baseClasses", "Symbols.ClassSymbolApi.isCaseClass()": "scala/reflect/api/symbols$classsymbolapi.html#isCaseClass", "Symbols.ClassSymbolApi.isClass()": "scala/reflect/api/symbols$classsymbolapi.html#isClass", "Symbols.ClassSymbolApi.isDerivedValueClass()": "scala/reflect/api/symbols$classsymbolapi.html#isDerivedValueClass", "Symbols.ClassSymbolApi.isNumeric()": "scala/reflect/api/symbols$classsymbolapi.html#isNumeric", "Symbols.ClassSymbolApi.isPrimitive()": "scala/reflect/api/symbols$classsymbolapi.html#isPrimitive", "Symbols.ClassSymbolApi.isSealed()": "scala/reflect/api/symbols$classsymbolapi.html#isSealed", "Symbols.ClassSymbolApi.isTrait()": "scala/reflect/api/symbols$classsymbolapi.html#isTrait", "Symbols.ClassSymbolApi.knownDirectSubclasses()": "scala/reflect/api/symbols$classsymbolapi.html#knownDirectSubclasses", "Symbols.ClassSymbolApi.module()": "scala/reflect/api/symbols$classsymbolapi.html#module", "Symbols.ClassSymbolApi.primaryConstructor()": "scala/reflect/api/symbols$classsymbolapi.html#primaryConstructor", "Symbols.ClassSymbolApi.selfType()": "scala/reflect/api/symbols$classsymbolapi.html#selfType", "Symbols.ClassSymbolApi.superPrefix()": "scala/reflect/api/symbols$classsymbolapi.html#superPrefix", "Symbols.ClassSymbolApi.thisPrefix()": "scala/reflect/api/symbols$classsymbolapi.html#thisPrefix", "Symbols.ClassSymbolApi.typeParams()": "scala/reflect/api/symbols$classsymbolapi.html#typeParams", "Symbols.MethodSymbol": "scala/reflect/api/symbols$methodsymbol.html", "Symbols.MethodSymbol()": "scala/reflect/api/symbols.html#scala.reflect.api.Symbols.MethodSymbol", "Symbols.MethodSymbol.asMethod()": "scala/reflect/api/symbols$methodsymbol.html#asMethod", "Symbols.MethodSymbol.exceptions()": "scala/reflect/api/symbols$methodsymbol.html#exceptions", "Symbols.MethodSymbol.isMethod()": "scala/reflect/api/symbols$methodsymbol.html#isMethod", "Symbols.MethodSymbol.isPrimaryConstructor()": "scala/reflect/api/symbols$methodsymbol.html#isPrimaryConstructor", "Symbols.MethodSymbol.isVarargs()": "scala/reflect/api/symbols$methodsymbol.html#isVarargs", "Symbols.MethodSymbol.paramLists()": "scala/reflect/api/symbols$methodsymbol.html#paramLists", "Symbols.MethodSymbol.returnType()": "scala/reflect/api/symbols$methodsymbol.html#returnType", "Symbols.MethodSymbol.typeParams()": "scala/reflect/api/symbols$methodsymbol.html#typeParams", "Symbols.MethodSymbolApi": "scala/reflect/api/symbols$methodsymbolapi.html", "Symbols.MethodSymbolApi()": "scala/reflect/api/symbols.html#scala.reflect.api.Symbols.MethodSymbolApi", "Symbols.MethodSymbolApi.asMethod()": "scala/reflect/api/symbols$methodsymbolapi.html#asMethod", "Symbols.MethodSymbolApi.exceptions()": "scala/reflect/api/symbols$methodsymbolapi.html#exceptions", "Symbols.MethodSymbolApi.isMethod()": "scala/reflect/api/symbols$methodsymbolapi.html#isMethod", "Symbols.MethodSymbolApi.isPrimaryConstructor()": "scala/reflect/api/symbols$methodsymbolapi.html#isPrimaryConstructor", "Symbols.MethodSymbolApi.isVarargs()": "scala/reflect/api/symbols$methodsymbolapi.html#isVarargs", "Symbols.MethodSymbolApi.paramLists()": "scala/reflect/api/symbols$methodsymbolapi.html#paramLists", "Symbols.MethodSymbolApi.returnType()": "scala/reflect/api/symbols$methodsymbolapi.html#returnType", "Symbols.MethodSymbolApi.typeParams()": "scala/reflect/api/symbols$methodsymbolapi.html#typeParams", "Symbols.ModuleSymbol": "scala/reflect/api/symbols$modulesymbol.html", "Symbols.ModuleSymbol()": "scala/reflect/api/symbols.html#scala.reflect.api.Symbols.ModuleSymbol", "Symbols.ModuleSymbol.asModule()": "scala/reflect/api/symbols$modulesymbol.html#asModule", "Symbols.ModuleSymbol.isModule()": "scala/reflect/api/symbols$modulesymbol.html#isModule", "Symbols.ModuleSymbol.moduleClass()": "scala/reflect/api/symbols$modulesymbol.html#moduleClass", "Symbols.ModuleSymbolApi": "scala/reflect/api/symbols$modulesymbolapi.html", "Symbols.ModuleSymbolApi()": "scala/reflect/api/symbols.html#scala.reflect.api.Symbols.ModuleSymbolApi", "Symbols.ModuleSymbolApi.asModule()": "scala/reflect/api/symbols$modulesymbolapi.html#asModule", "Symbols.ModuleSymbolApi.isModule()": "scala/reflect/api/symbols$modulesymbolapi.html#isModule", "Symbols.ModuleSymbolApi.moduleClass()": "scala/reflect/api/symbols$modulesymbolapi.html#moduleClass", "Symbols.NoSymbol()": "scala/reflect/api/symbols.html#NoSymbol", "Symbols.Symbol": "scala/reflect/api/symbols$symbol.html", "Symbols.Symbol()": "scala/reflect/api/symbols.html#scala.reflect.api.Symbols.Symbol", "Symbols.Symbol.alternatives()": "scala/reflect/api/symbols$symbol.html#alternatives", "Symbols.Symbol.annotations()": "scala/reflect/api/symbols$symbol.html#annotations", "Symbols.Symbol.asClass()": "scala/reflect/api/symbols$symbol.html#asClass", "Symbols.Symbol.asMethod()": "scala/reflect/api/symbols$symbol.html#asMethod", "Symbols.Symbol.asModule()": "scala/reflect/api/symbols$symbol.html#asModule", "Symbols.Symbol.asTerm()": "scala/reflect/api/symbols$symbol.html#asTerm", "Symbols.Symbol.asType()": "scala/reflect/api/symbols$symbol.html#asType", "Symbols.Symbol.companion()": "scala/reflect/api/symbols$symbol.html#companion", "Symbols.Symbol.filter()": "scala/reflect/api/symbols$symbol.html#filter", "Symbols.Symbol.fullName()": "scala/reflect/api/symbols$symbol.html#fullName", "Symbols.Symbol.info()": "scala/reflect/api/symbols$symbol.html#info", "Symbols.Symbol.infoIn()": "scala/reflect/api/symbols$symbol.html#infoIn", "Symbols.Symbol.isAbstract()": "scala/reflect/api/symbols$symbol.html#isAbstract", "Symbols.Symbol.isAbstractOverride()": "scala/reflect/api/symbols$symbol.html#isAbstractOverride", "Symbols.Symbol.isClass()": "scala/reflect/api/symbols$symbol.html#isClass", "Symbols.Symbol.isConstructor()": "scala/reflect/api/symbols$symbol.html#isConstructor", "Symbols.Symbol.isFinal()": "scala/reflect/api/symbols$symbol.html#isFinal", "Symbols.Symbol.isImplementationArtifact()": "scala/reflect/api/symbols$symbol.html#isImplementationArtifact", "Symbols.Symbol.isImplicit()": "scala/reflect/api/symbols$symbol.html#isImplicit", "Symbols.Symbol.isJava()": "scala/reflect/api/symbols$symbol.html#isJava", "Symbols.Symbol.isJavaAnnotation()": "scala/reflect/api/symbols$symbol.html#isJavaAnnotation", "Symbols.Symbol.isJavaEnum()": "scala/reflect/api/symbols$symbol.html#isJavaEnum", "Symbols.Symbol.isMacro()": "scala/reflect/api/symbols$symbol.html#isMacro", "Symbols.Symbol.isMethod()": "scala/reflect/api/symbols$symbol.html#isMethod", "Symbols.Symbol.isModule()": "scala/reflect/api/symbols$symbol.html#isModule", "Symbols.Symbol.isModuleClass()": "scala/reflect/api/symbols$symbol.html#isModuleClass", "Symbols.Symbol.isOverloadedMethod()": "scala/reflect/api/symbols$symbol.html#isOverloadedMethod", "Symbols.Symbol.isPackage()": "scala/reflect/api/symbols$symbol.html#isPackage", "Symbols.Symbol.isPackageClass()": "scala/reflect/api/symbols$symbol.html#isPackageClass", "Symbols.Symbol.isParameter()": "scala/reflect/api/symbols$symbol.html#isParameter", "Symbols.Symbol.isPrivate()": "scala/reflect/api/symbols$symbol.html#isPrivate", "Symbols.Symbol.isPrivateThis()": "scala/reflect/api/symbols$symbol.html#isPrivateThis", "Symbols.Symbol.isProtected()": "scala/reflect/api/symbols$symbol.html#isProtected", "Symbols.Symbol.isProtectedThis()": "scala/reflect/api/symbols$symbol.html#isProtectedThis", "Symbols.Symbol.isPublic()": "scala/reflect/api/symbols$symbol.html#isPublic", "Symbols.Symbol.isSpecialized()": "scala/reflect/api/symbols$symbol.html#isSpecialized", "Symbols.Symbol.isStatic()": "scala/reflect/api/symbols$symbol.html#isStatic", "Symbols.Symbol.isSynthetic()": "scala/reflect/api/symbols$symbol.html#isSynthetic", "Symbols.Symbol.isTerm()": "scala/reflect/api/symbols$symbol.html#isTerm", "Symbols.Symbol.isType()": "scala/reflect/api/symbols$symbol.html#isType", "Symbols.Symbol.map()": "scala/reflect/api/symbols$symbol.html#map", "Symbols.Symbol.name()": "scala/reflect/api/symbols$symbol.html#name", "Symbols.Symbol.NameType()": "scala/reflect/api/symbols$symbol.html#scala.reflect.api.Symbols.SymbolApi.NameType", "Symbols.Symbol.orElse()": "scala/reflect/api/symbols$symbol.html#orElse", "Symbols.Symbol.overrides()": "scala/reflect/api/symbols$symbol.html#overrides", "Symbols.Symbol.owner()": "scala/reflect/api/symbols$symbol.html#owner", "Symbols.Symbol.pos()": "scala/reflect/api/symbols$symbol.html#pos", "Symbols.Symbol.privateWithin()": "scala/reflect/api/symbols$symbol.html#privateWithin", "Symbols.Symbol.suchThat()": "scala/reflect/api/symbols$symbol.html#suchThat", "Symbols.Symbol.typeSignature()": "scala/reflect/api/symbols$symbol.html#typeSignature", "Symbols.Symbol.typeSignatureIn()": "scala/reflect/api/symbols$symbol.html#typeSignatureIn", "Symbols.SymbolApi": "scala/reflect/api/symbols$symbolapi.html", "Symbols.SymbolApi()": "scala/reflect/api/symbols.html#scala.reflect.api.Symbols.SymbolApi", "Symbols.SymbolApi.alternatives()": "scala/reflect/api/symbols$symbolapi.html#alternatives", "Symbols.SymbolApi.annotations()": "scala/reflect/api/symbols$symbolapi.html#annotations", "Symbols.SymbolApi.asClass()": "scala/reflect/api/symbols$symbolapi.html#asClass", "Symbols.SymbolApi.asMethod()": "scala/reflect/api/symbols$symbolapi.html#asMethod", "Symbols.SymbolApi.asModule()": "scala/reflect/api/symbols$symbolapi.html#asModule", "Symbols.SymbolApi.asTerm()": "scala/reflect/api/symbols$symbolapi.html#asTerm", "Symbols.SymbolApi.asType()": "scala/reflect/api/symbols$symbolapi.html#asType", "Symbols.SymbolApi.companion()": "scala/reflect/api/symbols$symbolapi.html#companion", "Symbols.SymbolApi.filter()": "scala/reflect/api/symbols$symbolapi.html#filter", "Symbols.SymbolApi.fullName()": "scala/reflect/api/symbols$symbolapi.html#fullName", "Symbols.SymbolApi.info()": "scala/reflect/api/symbols$symbolapi.html#info", "Symbols.SymbolApi.infoIn()": "scala/reflect/api/symbols$symbolapi.html#infoIn", "Symbols.SymbolApi.isAbstract()": "scala/reflect/api/symbols$symbolapi.html#isAbstract", "Symbols.SymbolApi.isAbstractOverride()": "scala/reflect/api/symbols$symbolapi.html#isAbstractOverride", "Symbols.SymbolApi.isClass()": "scala/reflect/api/symbols$symbolapi.html#isClass", "Symbols.SymbolApi.isConstructor()": "scala/reflect/api/symbols$symbolapi.html#isConstructor", "Symbols.SymbolApi.isFinal()": "scala/reflect/api/symbols$symbolapi.html#isFinal", "Symbols.SymbolApi.isImplementationArtifact()": "scala/reflect/api/symbols$symbolapi.html#isImplementationArtifact", "Symbols.SymbolApi.isImplicit()": "scala/reflect/api/symbols$symbolapi.html#isImplicit", "Symbols.SymbolApi.isJava()": "scala/reflect/api/symbols$symbolapi.html#isJava", "Symbols.SymbolApi.isJavaAnnotation()": "scala/reflect/api/symbols$symbolapi.html#isJavaAnnotation", "Symbols.SymbolApi.isJavaEnum()": "scala/reflect/api/symbols$symbolapi.html#isJavaEnum", "Symbols.SymbolApi.isMacro()": "scala/reflect/api/symbols$symbolapi.html#isMacro", "Symbols.SymbolApi.isMethod()": "scala/reflect/api/symbols$symbolapi.html#isMethod", "Symbols.SymbolApi.isModule()": "scala/reflect/api/symbols$symbolapi.html#isModule", "Symbols.SymbolApi.isModuleClass()": "scala/reflect/api/symbols$symbolapi.html#isModuleClass", "Symbols.SymbolApi.isOverloadedMethod()": "scala/reflect/api/symbols$symbolapi.html#isOverloadedMethod", "Symbols.SymbolApi.isPackage()": "scala/reflect/api/symbols$symbolapi.html#isPackage", "Symbols.SymbolApi.isPackageClass()": "scala/reflect/api/symbols$symbolapi.html#isPackageClass", "Symbols.SymbolApi.isParameter()": "scala/reflect/api/symbols$symbolapi.html#isParameter", "Symbols.SymbolApi.isPrivate()": "scala/reflect/api/symbols$symbolapi.html#isPrivate", "Symbols.SymbolApi.isPrivateThis()": "scala/reflect/api/symbols$symbolapi.html#isPrivateThis", "Symbols.SymbolApi.isProtected()": "scala/reflect/api/symbols$symbolapi.html#isProtected", "Symbols.SymbolApi.isProtectedThis()": "scala/reflect/api/symbols$symbolapi.html#isProtectedThis", "Symbols.SymbolApi.isPublic()": "scala/reflect/api/symbols$symbolapi.html#isPublic", "Symbols.SymbolApi.isSpecialized()": "scala/reflect/api/symbols$symbolapi.html#isSpecialized", "Symbols.SymbolApi.isStatic()": "scala/reflect/api/symbols$symbolapi.html#isStatic", "Symbols.SymbolApi.isSynthetic()": "scala/reflect/api/symbols$symbolapi.html#isSynthetic", "Symbols.SymbolApi.isTerm()": "scala/reflect/api/symbols$symbolapi.html#isTerm", "Symbols.SymbolApi.isType()": "scala/reflect/api/symbols$symbolapi.html#isType", "Symbols.SymbolApi.map()": "scala/reflect/api/symbols$symbolapi.html#map", "Symbols.SymbolApi.name()": "scala/reflect/api/symbols$symbolapi.html#name", "Symbols.SymbolApi.NameType()": "scala/reflect/api/symbols$symbolapi.html#scala.reflect.api.Symbols.SymbolApi.NameType", "Symbols.SymbolApi.orElse()": "scala/reflect/api/symbols$symbolapi.html#orElse", "Symbols.SymbolApi.overrides()": "scala/reflect/api/symbols$symbolapi.html#overrides", "Symbols.SymbolApi.owner()": "scala/reflect/api/symbols$symbolapi.html#owner", "Symbols.SymbolApi.pos()": "scala/reflect/api/symbols$symbolapi.html#pos", "Symbols.SymbolApi.privateWithin()": "scala/reflect/api/symbols$symbolapi.html#privateWithin", "Symbols.SymbolApi.suchThat()": "scala/reflect/api/symbols$symbolapi.html#suchThat", "Symbols.SymbolApi.typeSignature()": "scala/reflect/api/symbols$symbolapi.html#typeSignature", "Symbols.SymbolApi.typeSignatureIn()": "scala/reflect/api/symbols$symbolapi.html#typeSignatureIn", "Symbols.TermSymbol": "scala/reflect/api/symbols$termsymbol.html", "Symbols.TermSymbol()": "scala/reflect/api/symbols.html#scala.reflect.api.Symbols.TermSymbol", "Symbols.TermSymbol.accessed()": "scala/reflect/api/symbols$termsymbol.html#accessed", "Symbols.TermSymbol.asTerm()": "scala/reflect/api/symbols$termsymbol.html#asTerm", "Symbols.TermSymbol.getter()": "scala/reflect/api/symbols$termsymbol.html#getter", "Symbols.TermSymbol.isAccessor()": "scala/reflect/api/symbols$termsymbol.html#isAccessor", "Symbols.TermSymbol.isByNameParam()": "scala/reflect/api/symbols$termsymbol.html#isByNameParam", "Symbols.TermSymbol.isCaseAccessor()": "scala/reflect/api/symbols$termsymbol.html#isCaseAccessor", "Symbols.TermSymbol.isGetter()": "scala/reflect/api/symbols$termsymbol.html#isGetter", "Symbols.TermSymbol.isLazy()": "scala/reflect/api/symbols$termsymbol.html#isLazy", "Symbols.TermSymbol.isOverloaded()": "scala/reflect/api/symbols$termsymbol.html#isOverloaded", "Symbols.TermSymbol.isOverloadedMethod()": "scala/reflect/api/symbols$termsymbol.html#isOverloadedMethod", "Symbols.TermSymbol.isParamAccessor()": "scala/reflect/api/symbols$termsymbol.html#isParamAccessor", "Symbols.TermSymbol.isParamWithDefault()": "scala/reflect/api/symbols$termsymbol.html#isParamWithDefault", "Symbols.TermSymbol.isSetter()": "scala/reflect/api/symbols$termsymbol.html#isSetter", "Symbols.TermSymbol.isStable()": "scala/reflect/api/symbols$termsymbol.html#isStable", "Symbols.TermSymbol.isTerm()": "scala/reflect/api/symbols$termsymbol.html#isTerm", "Symbols.TermSymbol.isVal()": "scala/reflect/api/symbols$termsymbol.html#isVal", "Symbols.TermSymbol.isVar()": "scala/reflect/api/symbols$termsymbol.html#isVar", "Symbols.TermSymbol.NameType()": "scala/reflect/api/symbols$termsymbol.html#scala.reflect.api.Symbols.TermSymbolApi.NameType", "Symbols.TermSymbol.setter()": "scala/reflect/api/symbols$termsymbol.html#setter", "Symbols.TermSymbolApi": "scala/reflect/api/symbols$termsymbolapi.html", "Symbols.TermSymbolApi()": "scala/reflect/api/symbols.html#scala.reflect.api.Symbols.TermSymbolApi", "Symbols.TermSymbolApi.accessed()": "scala/reflect/api/symbols$termsymbolapi.html#accessed", "Symbols.TermSymbolApi.asTerm()": "scala/reflect/api/symbols$termsymbolapi.html#asTerm", "Symbols.TermSymbolApi.getter()": "scala/reflect/api/symbols$termsymbolapi.html#getter", "Symbols.TermSymbolApi.isAccessor()": "scala/reflect/api/symbols$termsymbolapi.html#isAccessor", "Symbols.TermSymbolApi.isByNameParam()": "scala/reflect/api/symbols$termsymbolapi.html#isByNameParam", "Symbols.TermSymbolApi.isCaseAccessor()": "scala/reflect/api/symbols$termsymbolapi.html#isCaseAccessor", "Symbols.TermSymbolApi.isGetter()": "scala/reflect/api/symbols$termsymbolapi.html#isGetter", "Symbols.TermSymbolApi.isLazy()": "scala/reflect/api/symbols$termsymbolapi.html#isLazy", "Symbols.TermSymbolApi.isOverloaded()": "scala/reflect/api/symbols$termsymbolapi.html#isOverloaded", "Symbols.TermSymbolApi.isOverloadedMethod()": "scala/reflect/api/symbols$termsymbolapi.html#isOverloadedMethod", "Symbols.TermSymbolApi.isParamAccessor()": "scala/reflect/api/symbols$termsymbolapi.html#isParamAccessor", "Symbols.TermSymbolApi.isParamWithDefault()": "scala/reflect/api/symbols$termsymbolapi.html#isParamWithDefault", "Symbols.TermSymbolApi.isSetter()": "scala/reflect/api/symbols$termsymbolapi.html#isSetter", "Symbols.TermSymbolApi.isStable()": "scala/reflect/api/symbols$termsymbolapi.html#isStable", "Symbols.TermSymbolApi.isTerm()": "scala/reflect/api/symbols$termsymbolapi.html#isTerm", "Symbols.TermSymbolApi.isVal()": "scala/reflect/api/symbols$termsymbolapi.html#isVal", "Symbols.TermSymbolApi.isVar()": "scala/reflect/api/symbols$termsymbolapi.html#isVar", "Symbols.TermSymbolApi.NameType()": "scala/reflect/api/symbols$termsymbolapi.html#scala.reflect.api.Symbols.TermSymbolApi.NameType", "Symbols.TermSymbolApi.setter()": "scala/reflect/api/symbols$termsymbolapi.html#setter", "Symbols.TypeSymbol": "scala/reflect/api/symbols$typesymbol.html", "Symbols.TypeSymbol()": "scala/reflect/api/symbols.html#scala.reflect.api.Symbols.TypeSymbol", "Symbols.TypeSymbol.asType()": "scala/reflect/api/symbols$typesymbol.html#asType", "Symbols.TypeSymbol.isAliasType()": "scala/reflect/api/symbols$typesymbol.html#isAliasType", "Symbols.TypeSymbol.isContravariant()": "scala/reflect/api/symbols$typesymbol.html#isContravariant", "Symbols.TypeSymbol.isCovariant()": "scala/reflect/api/symbols$typesymbol.html#isCovariant", "Symbols.TypeSymbol.isExistential()": "scala/reflect/api/symbols$typesymbol.html#isExistential", "Symbols.TypeSymbol.isType()": "scala/reflect/api/symbols$typesymbol.html#isType", "Symbols.TypeSymbol.NameType()": "scala/reflect/api/symbols$typesymbol.html#scala.reflect.api.Symbols.TypeSymbolApi.NameType", "Symbols.TypeSymbol.toType()": "scala/reflect/api/symbols$typesymbol.html#toType", "Symbols.TypeSymbol.toTypeConstructor()": "scala/reflect/api/symbols$typesymbol.html#toTypeConstructor", "Symbols.TypeSymbol.toTypeIn()": "scala/reflect/api/symbols$typesymbol.html#toTypeIn", "Symbols.TypeSymbol.typeParams()": "scala/reflect/api/symbols$typesymbol.html#typeParams", "Symbols.TypeSymbolApi": "scala/reflect/api/symbols$typesymbolapi.html", "Symbols.TypeSymbolApi()": "scala/reflect/api/symbols.html#scala.reflect.api.Symbols.TypeSymbolApi", "Symbols.TypeSymbolApi.asType()": "scala/reflect/api/symbols$typesymbolapi.html#asType", "Symbols.TypeSymbolApi.isAliasType()": "scala/reflect/api/symbols$typesymbolapi.html#isAliasType", "Symbols.TypeSymbolApi.isContravariant()": "scala/reflect/api/symbols$typesymbolapi.html#isContravariant", "Symbols.TypeSymbolApi.isCovariant()": "scala/reflect/api/symbols$typesymbolapi.html#isCovariant", "Symbols.TypeSymbolApi.isExistential()": "scala/reflect/api/symbols$typesymbolapi.html#isExistential", "Symbols.TypeSymbolApi.isType()": "scala/reflect/api/symbols$typesymbolapi.html#isType", "Symbols.TypeSymbolApi.NameType()": "scala/reflect/api/symbols$typesymbolapi.html#scala.reflect.api.Symbols.TypeSymbolApi.NameType", "Symbols.TypeSymbolApi.toType()": "scala/reflect/api/symbols$typesymbolapi.html#toType", "Symbols.TypeSymbolApi.toTypeConstructor()": "scala/reflect/api/symbols$typesymbolapi.html#toTypeConstructor", "Symbols.TypeSymbolApi.toTypeIn()": "scala/reflect/api/symbols$typesymbolapi.html#toTypeIn", "Symbols.TypeSymbolApi.typeParams()": "scala/reflect/api/symbols$typesymbolapi.html#typeParams", "TreeCreator": "scala/reflect/api/treecreator.html", "TreeCreator.apply()": "scala/reflect/api/treecreator.html#apply", "TreeCreator.TreeCreator()": "scala/reflect/api/treecreator.html#<init>", "Trees": "scala/reflect/api/trees.html", "Trees.Alternative": "scala/reflect/api/trees$alternative.html", "Trees.Alternative()": "scala/reflect/api/trees.html#Alternative", "Trees.Alternative.trees()": "scala/reflect/api/trees$alternative.html#trees", "Trees.AlternativeApi": "scala/reflect/api/trees$alternativeapi.html", "Trees.AlternativeApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.AlternativeApi", "Trees.AlternativeApi.trees()": "scala/reflect/api/trees$alternativeapi.html#trees", "Trees.AlternativeExtractor": "scala/reflect/api/trees$alternativeextractor.html", "Trees.AlternativeExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.AlternativeExtractor", "Trees.AlternativeExtractor.AlternativeExtractor()": "scala/reflect/api/trees$alternativeextractor.html#<init>", "Trees.AlternativeExtractor.apply()": "scala/reflect/api/trees$alternativeextractor.html#apply", "Trees.AlternativeExtractor.unapply()": "scala/reflect/api/trees$alternativeextractor.html#unapply", "Trees.Annotated": "scala/reflect/api/trees$annotated.html", "Trees.Annotated()": "scala/reflect/api/trees.html#Annotated", "Trees.Annotated.annot()": "scala/reflect/api/trees$annotated.html#annot", "Trees.Annotated.arg()": "scala/reflect/api/trees$annotated.html#arg", "Trees.AnnotatedApi": "scala/reflect/api/trees$annotatedapi.html", "Trees.AnnotatedApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.AnnotatedApi", "Trees.AnnotatedApi.annot()": "scala/reflect/api/trees$annotatedapi.html#annot", "Trees.AnnotatedApi.arg()": "scala/reflect/api/trees$annotatedapi.html#arg", "Trees.AnnotatedExtractor": "scala/reflect/api/trees$annotatedextractor.html", "Trees.AnnotatedExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.AnnotatedExtractor", "Trees.AnnotatedExtractor.AnnotatedExtractor()": "scala/reflect/api/trees$annotatedextractor.html#<init>", "Trees.AnnotatedExtractor.apply()": "scala/reflect/api/trees$annotatedextractor.html#apply", "Trees.AnnotatedExtractor.unapply()": "scala/reflect/api/trees$annotatedextractor.html#unapply", "Trees.AppliedTypeTree": "scala/reflect/api/trees$appliedtypetree.html", "Trees.AppliedTypeTree()": "scala/reflect/api/trees.html#AppliedTypeTree", "Trees.AppliedTypeTree.args()": "scala/reflect/api/trees$appliedtypetree.html#args", "Trees.AppliedTypeTree.tpt()": "scala/reflect/api/trees$appliedtypetree.html#tpt", "Trees.AppliedTypeTreeApi": "scala/reflect/api/trees$appliedtypetreeapi.html", "Trees.AppliedTypeTreeApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.AppliedTypeTreeApi", "Trees.AppliedTypeTreeApi.args()": "scala/reflect/api/trees$appliedtypetreeapi.html#args", "Trees.AppliedTypeTreeApi.tpt()": "scala/reflect/api/trees$appliedtypetreeapi.html#tpt", "Trees.AppliedTypeTreeExtractor": "scala/reflect/api/trees$appliedtypetreeextractor.html", "Trees.AppliedTypeTreeExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.AppliedTypeTreeExtractor", "Trees.AppliedTypeTreeExtractor.AppliedTypeTreeExtractor()": "scala/reflect/api/trees$appliedtypetreeextractor.html#<init>", "Trees.AppliedTypeTreeExtractor.apply()": "scala/reflect/api/trees$appliedtypetreeextractor.html#apply", "Trees.AppliedTypeTreeExtractor.unapply()": "scala/reflect/api/trees$appliedtypetreeextractor.html#unapply", "Trees.Apply": "scala/reflect/api/trees$apply.html", "Trees.Apply()": "scala/reflect/api/trees.html#Apply", "Trees.ApplyApi": "scala/reflect/api/trees$applyapi.html", "Trees.ApplyApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ApplyApi", "Trees.ApplyExtractor": "scala/reflect/api/trees$applyextractor.html", "Trees.ApplyExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ApplyExtractor", "Trees.ApplyExtractor.apply()": "scala/reflect/api/trees$applyextractor.html#apply", "Trees.ApplyExtractor.ApplyExtractor()": "scala/reflect/api/trees$applyextractor.html#<init>", "Trees.ApplyExtractor.unapply()": "scala/reflect/api/trees$applyextractor.html#unapply", "Trees.Assign": "scala/reflect/api/trees$assign.html", "Trees.Assign()": "scala/reflect/api/trees.html#Assign", "Trees.Assign.lhs()": "scala/reflect/api/trees$assign.html#lhs", "Trees.Assign.rhs()": "scala/reflect/api/trees$assign.html#rhs", "Trees.AssignApi": "scala/reflect/api/trees$assignapi.html", "Trees.AssignApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.AssignApi", "Trees.AssignApi.lhs()": "scala/reflect/api/trees$assignapi.html#lhs", "Trees.AssignApi.rhs()": "scala/reflect/api/trees$assignapi.html#rhs", "Trees.AssignExtractor": "scala/reflect/api/trees$assignextractor.html", "Trees.AssignExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.AssignExtractor", "Trees.AssignExtractor.apply()": "scala/reflect/api/trees$assignextractor.html#apply", "Trees.AssignExtractor.AssignExtractor()": "scala/reflect/api/trees$assignextractor.html#<init>", "Trees.AssignExtractor.unapply()": "scala/reflect/api/trees$assignextractor.html#unapply", "Trees.Bind": "scala/reflect/api/trees$bind.html", "Trees.Bind()": "scala/reflect/api/trees.html#Bind", "Trees.Bind.body()": "scala/reflect/api/trees$bind.html#body", "Trees.Bind.name()": "scala/reflect/api/trees$bind.html#name", "Trees.BindApi": "scala/reflect/api/trees$bindapi.html", "Trees.BindApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.BindApi", "Trees.BindApi.body()": "scala/reflect/api/trees$bindapi.html#body", "Trees.BindApi.name()": "scala/reflect/api/trees$bindapi.html#name", "Trees.BindExtractor": "scala/reflect/api/trees$bindextractor.html", "Trees.BindExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.BindExtractor", "Trees.BindExtractor.apply()": "scala/reflect/api/trees$bindextractor.html#apply", "Trees.BindExtractor.BindExtractor()": "scala/reflect/api/trees$bindextractor.html#<init>", "Trees.BindExtractor.unapply()": "scala/reflect/api/trees$bindextractor.html#unapply", "Trees.Block": "scala/reflect/api/trees$block.html", "Trees.Block()": "scala/reflect/api/trees.html#Block", "Trees.Block.expr()": "scala/reflect/api/trees$block.html#expr", "Trees.Block.stats()": "scala/reflect/api/trees$block.html#stats", "Trees.BlockApi": "scala/reflect/api/trees$blockapi.html", "Trees.BlockApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.BlockApi", "Trees.BlockApi.expr()": "scala/reflect/api/trees$blockapi.html#expr", "Trees.BlockApi.stats()": "scala/reflect/api/trees$blockapi.html#stats", "Trees.BlockExtractor": "scala/reflect/api/trees$blockextractor.html", "Trees.BlockExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.BlockExtractor", "Trees.BlockExtractor.apply()": "scala/reflect/api/trees$blockextractor.html#apply", "Trees.BlockExtractor.BlockExtractor()": "scala/reflect/api/trees$blockextractor.html#<init>", "Trees.BlockExtractor.unapply()": "scala/reflect/api/trees$blockextractor.html#unapply", "Trees.CaseDef": "scala/reflect/api/trees$casedef.html", "Trees.CaseDef()": "scala/reflect/api/trees.html#CaseDef", "Trees.CaseDef.body()": "scala/reflect/api/trees$casedef.html#body", "Trees.CaseDef.guard()": "scala/reflect/api/trees$casedef.html#guard", "Trees.CaseDef.pat()": "scala/reflect/api/trees$casedef.html#pat", "Trees.CaseDefApi": "scala/reflect/api/trees$casedefapi.html", "Trees.CaseDefApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.CaseDefApi", "Trees.CaseDefApi.body()": "scala/reflect/api/trees$casedefapi.html#body", "Trees.CaseDefApi.guard()": "scala/reflect/api/trees$casedefapi.html#guard", "Trees.CaseDefApi.pat()": "scala/reflect/api/trees$casedefapi.html#pat", "Trees.CaseDefExtractor": "scala/reflect/api/trees$casedefextractor.html", "Trees.CaseDefExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.CaseDefExtractor", "Trees.CaseDefExtractor.apply()": "scala/reflect/api/trees$casedefextractor.html#apply", "Trees.CaseDefExtractor.CaseDefExtractor()": "scala/reflect/api/trees$casedefextractor.html#<init>", "Trees.CaseDefExtractor.unapply()": "scala/reflect/api/trees$casedefextractor.html#unapply", "Trees.ClassDef": "scala/reflect/api/trees$classdef.html", "Trees.ClassDef()": "scala/reflect/api/trees.html#ClassDef", "Trees.ClassDef.impl()": "scala/reflect/api/trees$classdef.html#impl", "Trees.ClassDef.mods()": "scala/reflect/api/trees$classdef.html#mods", "Trees.ClassDef.name()": "scala/reflect/api/trees$classdef.html#name", "Trees.ClassDef.tparams()": "scala/reflect/api/trees$classdef.html#tparams", "Trees.ClassDefApi": "scala/reflect/api/trees$classdefapi.html", "Trees.ClassDefApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ClassDefApi", "Trees.ClassDefApi.impl()": "scala/reflect/api/trees$classdefapi.html#impl", "Trees.ClassDefApi.mods()": "scala/reflect/api/trees$classdefapi.html#mods", "Trees.ClassDefApi.name()": "scala/reflect/api/trees$classdefapi.html#name", "Trees.ClassDefApi.tparams()": "scala/reflect/api/trees$classdefapi.html#tparams", "Trees.ClassDefExtractor": "scala/reflect/api/trees$classdefextractor.html", "Trees.ClassDefExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ClassDefExtractor", "Trees.ClassDefExtractor.apply()": "scala/reflect/api/trees$classdefextractor.html#apply", "Trees.ClassDefExtractor.ClassDefExtractor()": "scala/reflect/api/trees$classdefextractor.html#<init>", "Trees.ClassDefExtractor.unapply()": "scala/reflect/api/trees$classdefextractor.html#unapply", "Trees.CompoundTypeTree": "scala/reflect/api/trees$compoundtypetree.html", "Trees.CompoundTypeTree()": "scala/reflect/api/trees.html#CompoundTypeTree", "Trees.CompoundTypeTree.templ()": "scala/reflect/api/trees$compoundtypetree.html#templ", "Trees.CompoundTypeTreeApi": "scala/reflect/api/trees$compoundtypetreeapi.html", "Trees.CompoundTypeTreeApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.CompoundTypeTreeApi", "Trees.CompoundTypeTreeApi.templ()": "scala/reflect/api/trees$compoundtypetreeapi.html#templ", "Trees.CompoundTypeTreeExtractor": "scala/reflect/api/trees$compoundtypetreeextractor.html", "Trees.CompoundTypeTreeExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.CompoundTypeTreeExtractor", "Trees.CompoundTypeTreeExtractor.apply()": "scala/reflect/api/trees$compoundtypetreeextractor.html#apply", "Trees.CompoundTypeTreeExtractor.CompoundTypeTreeExtractor()": "scala/reflect/api/trees$compoundtypetreeextractor.html#<init>", "Trees.CompoundTypeTreeExtractor.unapply()": "scala/reflect/api/trees$compoundtypetreeextractor.html#unapply", "Trees.DefDef": "scala/reflect/api/trees$defdef.html", "Trees.DefDef()": "scala/reflect/api/trees.html#DefDef", "Trees.DefDef.mods()": "scala/reflect/api/trees$defdef.html#mods", "Trees.DefDef.name()": "scala/reflect/api/trees$defdef.html#name", "Trees.DefDef.rhs()": "scala/reflect/api/trees$defdef.html#rhs", "Trees.DefDef.tparams()": "scala/reflect/api/trees$defdef.html#tparams", "Trees.DefDef.tpt()": "scala/reflect/api/trees$defdef.html#tpt", "Trees.DefDef.vparamss()": "scala/reflect/api/trees$defdef.html#vparamss", "Trees.DefDefApi": "scala/reflect/api/trees$defdefapi.html", "Trees.DefDefApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.DefDefApi", "Trees.DefDefApi.mods()": "scala/reflect/api/trees$defdefapi.html#mods", "Trees.DefDefApi.name()": "scala/reflect/api/trees$defdefapi.html#name", "Trees.DefDefApi.rhs()": "scala/reflect/api/trees$defdefapi.html#rhs", "Trees.DefDefApi.tparams()": "scala/reflect/api/trees$defdefapi.html#tparams", "Trees.DefDefApi.tpt()": "scala/reflect/api/trees$defdefapi.html#tpt", "Trees.DefDefApi.vparamss()": "scala/reflect/api/trees$defdefapi.html#vparamss", "Trees.DefDefExtractor": "scala/reflect/api/trees$defdefextractor.html", "Trees.DefDefExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.DefDefExtractor", "Trees.DefDefExtractor.apply()": "scala/reflect/api/trees$defdefextractor.html#apply", "Trees.DefDefExtractor.DefDefExtractor()": "scala/reflect/api/trees$defdefextractor.html#<init>", "Trees.DefDefExtractor.unapply()": "scala/reflect/api/trees$defdefextractor.html#unapply", "Trees.DefTree": "scala/reflect/api/trees$deftree.html", "Trees.DefTree()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.DefTree", "Trees.DefTree.name()": "scala/reflect/api/trees$deftree.html#name", "Trees.DefTreeApi": "scala/reflect/api/trees$deftreeapi.html", "Trees.DefTreeApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.DefTreeApi", "Trees.DefTreeApi.name()": "scala/reflect/api/trees$deftreeapi.html#name", "Trees.EmptyTree()": "scala/reflect/api/trees.html#EmptyTree", "Trees.ExistentialTypeTree": "scala/reflect/api/trees$existentialtypetree.html", "Trees.ExistentialTypeTree()": "scala/reflect/api/trees.html#ExistentialTypeTree", "Trees.ExistentialTypeTree.tpt()": "scala/reflect/api/trees$existentialtypetree.html#tpt", "Trees.ExistentialTypeTree.whereClauses()": "scala/reflect/api/trees$existentialtypetree.html#whereClauses", "Trees.ExistentialTypeTreeApi": "scala/reflect/api/trees$existentialtypetreeapi.html", "Trees.ExistentialTypeTreeApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ExistentialTypeTreeApi", "Trees.ExistentialTypeTreeApi.tpt()": "scala/reflect/api/trees$existentialtypetreeapi.html#tpt", "Trees.ExistentialTypeTreeApi.whereClauses()": "scala/reflect/api/trees$existentialtypetreeapi.html#whereClauses", "Trees.ExistentialTypeTreeExtractor": "scala/reflect/api/trees$existentialtypetreeextractor.html", "Trees.ExistentialTypeTreeExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ExistentialTypeTreeExtractor", "Trees.ExistentialTypeTreeExtractor.apply()": "scala/reflect/api/trees$existentialtypetreeextractor.html#apply", "Trees.ExistentialTypeTreeExtractor.ExistentialTypeTreeExtractor()": "scala/reflect/api/trees$existentialtypetreeextractor.html#<init>", "Trees.ExistentialTypeTreeExtractor.unapply()": "scala/reflect/api/trees$existentialtypetreeextractor.html#unapply", "Trees.Function": "scala/reflect/api/trees$function.html", "Trees.Function()": "scala/reflect/api/trees.html#Function", "Trees.Function.body()": "scala/reflect/api/trees$function.html#body", "Trees.Function.vparams()": "scala/reflect/api/trees$function.html#vparams", "Trees.FunctionApi": "scala/reflect/api/trees$functionapi.html", "Trees.FunctionApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.FunctionApi", "Trees.FunctionApi.body()": "scala/reflect/api/trees$functionapi.html#body", "Trees.FunctionApi.vparams()": "scala/reflect/api/trees$functionapi.html#vparams", "Trees.FunctionExtractor": "scala/reflect/api/trees$functionextractor.html", "Trees.FunctionExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.FunctionExtractor", "Trees.FunctionExtractor.apply()": "scala/reflect/api/trees$functionextractor.html#apply", "Trees.FunctionExtractor.FunctionExtractor()": "scala/reflect/api/trees$functionextractor.html#<init>", "Trees.FunctionExtractor.unapply()": "scala/reflect/api/trees$functionextractor.html#unapply", "Trees.GenericApply": "scala/reflect/api/trees$genericapply.html", "Trees.GenericApply()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.GenericApply", "Trees.GenericApply.args()": "scala/reflect/api/trees$genericapply.html#args", "Trees.GenericApply.fun()": "scala/reflect/api/trees$genericapply.html#fun", "Trees.GenericApplyApi": "scala/reflect/api/trees$genericapplyapi.html", "Trees.GenericApplyApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.GenericApplyApi", "Trees.GenericApplyApi.args()": "scala/reflect/api/trees$genericapplyapi.html#args", "Trees.GenericApplyApi.fun()": "scala/reflect/api/trees$genericapplyapi.html#fun", "Trees.Ident": "scala/reflect/api/trees$ident.html", "Trees.Ident()": "scala/reflect/api/trees.html#Ident", "Trees.Ident.isBackquoted()": "scala/reflect/api/trees$ident.html#isBackquoted", "Trees.Ident.name()": "scala/reflect/api/trees$ident.html#name", "Trees.IdentApi": "scala/reflect/api/trees$identapi.html", "Trees.IdentApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.IdentApi", "Trees.IdentApi.isBackquoted()": "scala/reflect/api/trees$identapi.html#isBackquoted", "Trees.IdentApi.name()": "scala/reflect/api/trees$identapi.html#name", "Trees.IdentExtractor": "scala/reflect/api/trees$identextractor.html", "Trees.IdentExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.IdentExtractor", "Trees.IdentExtractor.apply()": "scala/reflect/api/trees$identextractor.html#apply", "Trees.IdentExtractor.IdentExtractor()": "scala/reflect/api/trees$identextractor.html#<init>", "Trees.IdentExtractor.unapply()": "scala/reflect/api/trees$identextractor.html#unapply", "Trees.If": "scala/reflect/api/trees$if.html", "Trees.If()": "scala/reflect/api/trees.html#If", "Trees.If.cond()": "scala/reflect/api/trees$if.html#cond", "Trees.If.elsep()": "scala/reflect/api/trees$if.html#elsep", "Trees.If.thenp()": "scala/reflect/api/trees$if.html#thenp", "Trees.IfApi": "scala/reflect/api/trees$ifapi.html", "Trees.IfApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.IfApi", "Trees.IfApi.cond()": "scala/reflect/api/trees$ifapi.html#cond", "Trees.IfApi.elsep()": "scala/reflect/api/trees$ifapi.html#elsep", "Trees.IfApi.thenp()": "scala/reflect/api/trees$ifapi.html#thenp", "Trees.IfExtractor": "scala/reflect/api/trees$ifextractor.html", "Trees.IfExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.IfExtractor", "Trees.IfExtractor.apply()": "scala/reflect/api/trees$ifextractor.html#apply", "Trees.IfExtractor.IfExtractor()": "scala/reflect/api/trees$ifextractor.html#<init>", "Trees.IfExtractor.unapply()": "scala/reflect/api/trees$ifextractor.html#unapply", "Trees.ImplDef": "scala/reflect/api/trees$impldef.html", "Trees.ImplDef()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ImplDef", "Trees.ImplDef.impl()": "scala/reflect/api/trees$impldef.html#impl", "Trees.ImplDefApi": "scala/reflect/api/trees$impldefapi.html", "Trees.ImplDefApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ImplDefApi", "Trees.ImplDefApi.impl()": "scala/reflect/api/trees$impldefapi.html#impl", "Trees.Import": "scala/reflect/api/trees$import.html", "Trees.Import()": "scala/reflect/api/trees.html#Import", "Trees.Import.expr()": "scala/reflect/api/trees$import.html#expr", "Trees.Import.selectors()": "scala/reflect/api/trees$import.html#selectors", "Trees.ImportApi": "scala/reflect/api/trees$importapi.html", "Trees.ImportApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ImportApi", "Trees.ImportApi.expr()": "scala/reflect/api/trees$importapi.html#expr", "Trees.ImportApi.selectors()": "scala/reflect/api/trees$importapi.html#selectors", "Trees.ImportExtractor": "scala/reflect/api/trees$importextractor.html", "Trees.ImportExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ImportExtractor", "Trees.ImportExtractor.apply()": "scala/reflect/api/trees$importextractor.html#apply", "Trees.ImportExtractor.ImportExtractor()": "scala/reflect/api/trees$importextractor.html#<init>", "Trees.ImportExtractor.unapply()": "scala/reflect/api/trees$importextractor.html#unapply", "Trees.ImportSelector": "scala/reflect/api/trees$importselector.html", "Trees.ImportSelector()": "scala/reflect/api/trees.html#ImportSelector", "Trees.ImportSelector.isMask()": "scala/reflect/api/trees$importselector.html#isMask", "Trees.ImportSelector.isRename()": "scala/reflect/api/trees$importselector.html#isRename", "Trees.ImportSelector.isSpecific()": "scala/reflect/api/trees$importselector.html#isSpecific", "Trees.ImportSelector.isWildcard()": "scala/reflect/api/trees$importselector.html#isWildcard", "Trees.ImportSelector.name()": "scala/reflect/api/trees$importselector.html#name", "Trees.ImportSelector.namePos()": "scala/reflect/api/trees$importselector.html#namePos", "Trees.ImportSelector.rename()": "scala/reflect/api/trees$importselector.html#rename", "Trees.ImportSelector.renamePos()": "scala/reflect/api/trees$importselector.html#renamePos", "Trees.ImportSelectorApi": "scala/reflect/api/trees$importselectorapi.html", "Trees.ImportSelectorApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ImportSelectorApi", "Trees.ImportSelectorApi.isMask()": "scala/reflect/api/trees$importselectorapi.html#isMask", "Trees.ImportSelectorApi.isRename()": "scala/reflect/api/trees$importselectorapi.html#isRename", "Trees.ImportSelectorApi.isSpecific()": "scala/reflect/api/trees$importselectorapi.html#isSpecific", "Trees.ImportSelectorApi.isWildcard()": "scala/reflect/api/trees$importselectorapi.html#isWildcard", "Trees.ImportSelectorApi.name()": "scala/reflect/api/trees$importselectorapi.html#name", "Trees.ImportSelectorApi.namePos()": "scala/reflect/api/trees$importselectorapi.html#namePos", "Trees.ImportSelectorApi.rename()": "scala/reflect/api/trees$importselectorapi.html#rename", "Trees.ImportSelectorApi.renamePos()": "scala/reflect/api/trees$importselectorapi.html#renamePos", "Trees.ImportSelectorExtractor": "scala/reflect/api/trees$importselectorextractor.html", "Trees.ImportSelectorExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ImportSelectorExtractor", "Trees.ImportSelectorExtractor.apply()": "scala/reflect/api/trees$importselectorextractor.html#apply", "Trees.ImportSelectorExtractor.ImportSelectorExtractor()": "scala/reflect/api/trees$importselectorextractor.html#<init>", "Trees.ImportSelectorExtractor.unapply()": "scala/reflect/api/trees$importselectorextractor.html#unapply", "Trees.itransform()": "scala/reflect/api/trees.html#itransform", "Trees.LabelDef": "scala/reflect/api/trees$labeldef.html", "Trees.LabelDef()": "scala/reflect/api/trees.html#LabelDef", "Trees.LabelDef.name()": "scala/reflect/api/trees$labeldef.html#name", "Trees.LabelDef.params()": "scala/reflect/api/trees$labeldef.html#params", "Trees.LabelDef.rhs()": "scala/reflect/api/trees$labeldef.html#rhs", "Trees.LabelDefApi": "scala/reflect/api/trees$labeldefapi.html", "Trees.LabelDefApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.LabelDefApi", "Trees.LabelDefApi.name()": "scala/reflect/api/trees$labeldefapi.html#name", "Trees.LabelDefApi.params()": "scala/reflect/api/trees$labeldefapi.html#params", "Trees.LabelDefApi.rhs()": "scala/reflect/api/trees$labeldefapi.html#rhs", "Trees.LabelDefExtractor": "scala/reflect/api/trees$labeldefextractor.html", "Trees.LabelDefExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.LabelDefExtractor", "Trees.LabelDefExtractor.apply()": "scala/reflect/api/trees$labeldefextractor.html#apply", "Trees.LabelDefExtractor.LabelDefExtractor()": "scala/reflect/api/trees$labeldefextractor.html#<init>", "Trees.LabelDefExtractor.unapply()": "scala/reflect/api/trees$labeldefextractor.html#unapply", "Trees.Literal": "scala/reflect/api/trees$literal.html", "Trees.Literal()": "scala/reflect/api/trees.html#Literal", "Trees.Literal.value()": "scala/reflect/api/trees$literal.html#value", "Trees.LiteralApi": "scala/reflect/api/trees$literalapi.html", "Trees.LiteralApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.LiteralApi", "Trees.LiteralApi.value()": "scala/reflect/api/trees$literalapi.html#value", "Trees.LiteralExtractor": "scala/reflect/api/trees$literalextractor.html", "Trees.LiteralExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.LiteralExtractor", "Trees.LiteralExtractor.apply()": "scala/reflect/api/trees$literalextractor.html#apply", "Trees.LiteralExtractor.LiteralExtractor()": "scala/reflect/api/trees$literalextractor.html#<init>", "Trees.LiteralExtractor.unapply()": "scala/reflect/api/trees$literalextractor.html#unapply", "Trees.Match": "scala/reflect/api/trees$match.html", "Trees.Match()": "scala/reflect/api/trees.html#Match", "Trees.Match.cases()": "scala/reflect/api/trees$match.html#cases", "Trees.Match.selector()": "scala/reflect/api/trees$match.html#selector", "Trees.MatchApi": "scala/reflect/api/trees$matchapi.html", "Trees.MatchApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.MatchApi", "Trees.MatchApi.cases()": "scala/reflect/api/trees$matchapi.html#cases", "Trees.MatchApi.selector()": "scala/reflect/api/trees$matchapi.html#selector", "Trees.MatchExtractor": "scala/reflect/api/trees$matchextractor.html", "Trees.MatchExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.MatchExtractor", "Trees.MatchExtractor.apply()": "scala/reflect/api/trees$matchextractor.html#apply", "Trees.MatchExtractor.MatchExtractor()": "scala/reflect/api/trees$matchextractor.html#<init>", "Trees.MatchExtractor.unapply()": "scala/reflect/api/trees$matchextractor.html#unapply", "Trees.MemberDef": "scala/reflect/api/trees$memberdef.html", "Trees.MemberDef()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.MemberDef", "Trees.MemberDef.mods()": "scala/reflect/api/trees$memberdef.html#mods", "Trees.MemberDefApi": "scala/reflect/api/trees$memberdefapi.html", "Trees.MemberDefApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.MemberDefApi", "Trees.MemberDefApi.mods()": "scala/reflect/api/trees$memberdefapi.html#mods", "Trees.Modifiers()": "scala/reflect/api/trees.html#Modifiers", "Trees.ModifiersApi": "scala/reflect/api/trees$modifiersapi.html", "Trees.ModifiersApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ModifiersApi", "Trees.ModifiersApi.annotations()": "scala/reflect/api/trees$modifiersapi.html#annotations", "Trees.ModifiersApi.flags()": "scala/reflect/api/trees$modifiersapi.html#flags", "Trees.ModifiersApi.hasFlag()": "scala/reflect/api/trees$modifiersapi.html#hasFlag", "Trees.ModifiersApi.mapAnnotations()": "scala/reflect/api/trees$modifiersapi.html#mapAnnotations", "Trees.ModifiersApi.ModifiersApi()": "scala/reflect/api/trees$modifiersapi.html#<init>", "Trees.ModifiersApi.privateWithin()": "scala/reflect/api/trees$modifiersapi.html#privateWithin", "Trees.ModifiersExtractor": "scala/reflect/api/trees$modifiersextractor.html", "Trees.ModifiersExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ModifiersExtractor", "Trees.ModifiersExtractor.apply()": "scala/reflect/api/trees$modifiersextractor.html#apply", "Trees.ModifiersExtractor.ModifiersExtractor()": "scala/reflect/api/trees$modifiersextractor.html#<init>", "Trees.ModifiersExtractor.unapply()": "scala/reflect/api/trees$modifiersextractor.html#unapply", "Trees.ModuleDef": "scala/reflect/api/trees$moduledef.html", "Trees.ModuleDef()": "scala/reflect/api/trees.html#ModuleDef", "Trees.ModuleDef.impl()": "scala/reflect/api/trees$moduledef.html#impl", "Trees.ModuleDef.mods()": "scala/reflect/api/trees$moduledef.html#mods", "Trees.ModuleDef.name()": "scala/reflect/api/trees$moduledef.html#name", "Trees.ModuleDefApi": "scala/reflect/api/trees$moduledefapi.html", "Trees.ModuleDefApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ModuleDefApi", "Trees.ModuleDefApi.impl()": "scala/reflect/api/trees$moduledefapi.html#impl", "Trees.ModuleDefApi.mods()": "scala/reflect/api/trees$moduledefapi.html#mods", "Trees.ModuleDefApi.name()": "scala/reflect/api/trees$moduledefapi.html#name", "Trees.ModuleDefExtractor": "scala/reflect/api/trees$moduledefextractor.html", "Trees.ModuleDefExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ModuleDefExtractor", "Trees.ModuleDefExtractor.apply()": "scala/reflect/api/trees$moduledefextractor.html#apply", "Trees.ModuleDefExtractor.ModuleDefExtractor()": "scala/reflect/api/trees$moduledefextractor.html#<init>", "Trees.ModuleDefExtractor.unapply()": "scala/reflect/api/trees$moduledefextractor.html#unapply", "Trees.NamedArg": "scala/reflect/api/trees$namedarg.html", "Trees.NamedArg()": "scala/reflect/api/trees.html#NamedArg", "Trees.NamedArg.lhs()": "scala/reflect/api/trees$namedarg.html#lhs", "Trees.NamedArg.rhs()": "scala/reflect/api/trees$namedarg.html#rhs", "Trees.NamedArgApi": "scala/reflect/api/trees$namedargapi.html", "Trees.NamedArgApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.NamedArgApi", "Trees.NamedArgApi.lhs()": "scala/reflect/api/trees$namedargapi.html#lhs", "Trees.NamedArgApi.rhs()": "scala/reflect/api/trees$namedargapi.html#rhs", "Trees.NamedArgExtractor": "scala/reflect/api/trees$namedargextractor.html", "Trees.NamedArgExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.NamedArgExtractor", "Trees.NamedArgExtractor.apply()": "scala/reflect/api/trees$namedargextractor.html#apply", "Trees.NamedArgExtractor.NamedArgExtractor()": "scala/reflect/api/trees$namedargextractor.html#<init>", "Trees.NamedArgExtractor.unapply()": "scala/reflect/api/trees$namedargextractor.html#unapply", "Trees.NameTree": "scala/reflect/api/trees$nametree.html", "Trees.NameTree()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.NameTree", "Trees.NameTree.name()": "scala/reflect/api/trees$nametree.html#name", "Trees.NameTreeApi": "scala/reflect/api/trees$nametreeapi.html", "Trees.NameTreeApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.NameTreeApi", "Trees.NameTreeApi.name()": "scala/reflect/api/trees$nametreeapi.html#name", "Trees.New": "scala/reflect/api/trees$new.html", "Trees.New()": "scala/reflect/api/trees.html#New", "Trees.New.tpt()": "scala/reflect/api/trees$new.html#tpt", "Trees.NewApi": "scala/reflect/api/trees$newapi.html", "Trees.NewApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.NewApi", "Trees.NewApi.tpt()": "scala/reflect/api/trees$newapi.html#tpt", "Trees.NewExtractor": "scala/reflect/api/trees$newextractor.html", "Trees.NewExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.NewExtractor", "Trees.NewExtractor.apply()": "scala/reflect/api/trees$newextractor.html#apply", "Trees.NewExtractor.NewExtractor()": "scala/reflect/api/trees$newextractor.html#<init>", "Trees.NewExtractor.unapply()": "scala/reflect/api/trees$newextractor.html#unapply", "Trees.newLazyTreeCopier()": "scala/reflect/api/trees.html#newLazyTreeCopier", "Trees.newStrictTreeCopier()": "scala/reflect/api/trees.html#newStrictTreeCopier", "Trees.NoMods()": "scala/reflect/api/trees.html#NoMods", "Trees.noSelfType()": "scala/reflect/api/trees.html#noSelfType", "Trees.PackageDef": "scala/reflect/api/trees$packagedef.html", "Trees.PackageDef()": "scala/reflect/api/trees.html#PackageDef", "Trees.PackageDef.pid()": "scala/reflect/api/trees$packagedef.html#pid", "Trees.PackageDef.stats()": "scala/reflect/api/trees$packagedef.html#stats", "Trees.PackageDefApi": "scala/reflect/api/trees$packagedefapi.html", "Trees.PackageDefApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.PackageDefApi", "Trees.PackageDefApi.pid()": "scala/reflect/api/trees$packagedefapi.html#pid", "Trees.PackageDefApi.stats()": "scala/reflect/api/trees$packagedefapi.html#stats", "Trees.PackageDefExtractor": "scala/reflect/api/trees$packagedefextractor.html", "Trees.PackageDefExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.PackageDefExtractor", "Trees.PackageDefExtractor.apply()": "scala/reflect/api/trees$packagedefextractor.html#apply", "Trees.PackageDefExtractor.PackageDefExtractor()": "scala/reflect/api/trees$packagedefextractor.html#<init>", "Trees.PackageDefExtractor.unapply()": "scala/reflect/api/trees$packagedefextractor.html#unapply", "Trees.pendingSuperCall()": "scala/reflect/api/trees.html#pendingSuperCall", "Trees.RefTree": "scala/reflect/api/trees$reftree.html", "Trees.RefTree()": "scala/reflect/api/trees.html#RefTree", "Trees.RefTree.name()": "scala/reflect/api/trees$reftree.html#name", "Trees.RefTree.qualifier()": "scala/reflect/api/trees$reftree.html#qualifier", "Trees.RefTreeApi": "scala/reflect/api/trees$reftreeapi.html", "Trees.RefTreeApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.RefTreeApi", "Trees.RefTreeApi.name()": "scala/reflect/api/trees$reftreeapi.html#name", "Trees.RefTreeApi.qualifier()": "scala/reflect/api/trees$reftreeapi.html#qualifier", "Trees.RefTreeExtractor": "scala/reflect/api/trees$reftreeextractor.html", "Trees.RefTreeExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.RefTreeExtractor", "Trees.RefTreeExtractor.apply()": "scala/reflect/api/trees$reftreeextractor.html#apply", "Trees.RefTreeExtractor.RefTreeExtractor()": "scala/reflect/api/trees$reftreeextractor.html#<init>", "Trees.RefTreeExtractor.unapply()": "scala/reflect/api/trees$reftreeextractor.html#unapply", "Trees.Return": "scala/reflect/api/trees$return.html", "Trees.Return()": "scala/reflect/api/trees.html#Return", "Trees.Return.expr()": "scala/reflect/api/trees$return.html#expr", "Trees.ReturnApi": "scala/reflect/api/trees$returnapi.html", "Trees.ReturnApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ReturnApi", "Trees.ReturnApi.expr()": "scala/reflect/api/trees$returnapi.html#expr", "Trees.ReturnExtractor": "scala/reflect/api/trees$returnextractor.html", "Trees.ReturnExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ReturnExtractor", "Trees.ReturnExtractor.apply()": "scala/reflect/api/trees$returnextractor.html#apply", "Trees.ReturnExtractor.ReturnExtractor()": "scala/reflect/api/trees$returnextractor.html#<init>", "Trees.ReturnExtractor.unapply()": "scala/reflect/api/trees$returnextractor.html#unapply", "Trees.Select": "scala/reflect/api/trees$select.html", "Trees.Select()": "scala/reflect/api/trees.html#Select", "Trees.Select.name()": "scala/reflect/api/trees$select.html#name", "Trees.Select.qualifier()": "scala/reflect/api/trees$select.html#qualifier", "Trees.SelectApi": "scala/reflect/api/trees$selectapi.html", "Trees.SelectApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.SelectApi", "Trees.SelectApi.name()": "scala/reflect/api/trees$selectapi.html#name", "Trees.SelectApi.qualifier()": "scala/reflect/api/trees$selectapi.html#qualifier", "Trees.SelectExtractor": "scala/reflect/api/trees$selectextractor.html", "Trees.SelectExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.SelectExtractor", "Trees.SelectExtractor.apply()": "scala/reflect/api/trees$selectextractor.html#apply", "Trees.SelectExtractor.SelectExtractor()": "scala/reflect/api/trees$selectextractor.html#<init>", "Trees.SelectExtractor.unapply()": "scala/reflect/api/trees$selectextractor.html#unapply", "Trees.SelectFromTypeTree": "scala/reflect/api/trees$selectfromtypetree.html", "Trees.SelectFromTypeTree()": "scala/reflect/api/trees.html#SelectFromTypeTree", "Trees.SelectFromTypeTree.name()": "scala/reflect/api/trees$selectfromtypetree.html#name", "Trees.SelectFromTypeTree.qualifier()": "scala/reflect/api/trees$selectfromtypetree.html#qualifier", "Trees.SelectFromTypeTreeApi": "scala/reflect/api/trees$selectfromtypetreeapi.html", "Trees.SelectFromTypeTreeApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.SelectFromTypeTreeApi", "Trees.SelectFromTypeTreeApi.name()": "scala/reflect/api/trees$selectfromtypetreeapi.html#name", "Trees.SelectFromTypeTreeApi.qualifier()": "scala/reflect/api/trees$selectfromtypetreeapi.html#qualifier", "Trees.SelectFromTypeTreeExtractor": "scala/reflect/api/trees$selectfromtypetreeextractor.html", "Trees.SelectFromTypeTreeExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.SelectFromTypeTreeExtractor", "Trees.SelectFromTypeTreeExtractor.apply()": "scala/reflect/api/trees$selectfromtypetreeextractor.html#apply", "Trees.SelectFromTypeTreeExtractor.SelectFromTypeTreeExtractor()": "scala/reflect/api/trees$selectfromtypetreeextractor.html#<init>", "Trees.SelectFromTypeTreeExtractor.unapply()": "scala/reflect/api/trees$selectfromtypetreeextractor.html#unapply", "Trees.SingletonTypeTree": "scala/reflect/api/trees$singletontypetree.html", "Trees.SingletonTypeTree()": "scala/reflect/api/trees.html#SingletonTypeTree", "Trees.SingletonTypeTree.ref()": "scala/reflect/api/trees$singletontypetree.html#ref", "Trees.SingletonTypeTreeApi": "scala/reflect/api/trees$singletontypetreeapi.html", "Trees.SingletonTypeTreeApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.SingletonTypeTreeApi", "Trees.SingletonTypeTreeApi.ref()": "scala/reflect/api/trees$singletontypetreeapi.html#ref", "Trees.SingletonTypeTreeExtractor": "scala/reflect/api/trees$singletontypetreeextractor.html", "Trees.SingletonTypeTreeExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.SingletonTypeTreeExtractor", "Trees.SingletonTypeTreeExtractor.apply()": "scala/reflect/api/trees$singletontypetreeextractor.html#apply", "Trees.SingletonTypeTreeExtractor.SingletonTypeTreeExtractor()": "scala/reflect/api/trees$singletontypetreeextractor.html#<init>", "Trees.SingletonTypeTreeExtractor.unapply()": "scala/reflect/api/trees$singletontypetreeextractor.html#unapply", "Trees.Star": "scala/reflect/api/trees$star.html", "Trees.Star()": "scala/reflect/api/trees.html#Star", "Trees.Star.elem()": "scala/reflect/api/trees$star.html#elem", "Trees.StarApi": "scala/reflect/api/trees$starapi.html", "Trees.StarApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.StarApi", "Trees.StarApi.elem()": "scala/reflect/api/trees$starapi.html#elem", "Trees.StarExtractor": "scala/reflect/api/trees$starextractor.html", "Trees.StarExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.StarExtractor", "Trees.StarExtractor.apply()": "scala/reflect/api/trees$starextractor.html#apply", "Trees.StarExtractor.StarExtractor()": "scala/reflect/api/trees$starextractor.html#<init>", "Trees.StarExtractor.unapply()": "scala/reflect/api/trees$starextractor.html#unapply", "Trees.Super": "scala/reflect/api/trees$super.html", "Trees.Super()": "scala/reflect/api/trees.html#Super", "Trees.Super.mix()": "scala/reflect/api/trees$super.html#mix", "Trees.Super.qual()": "scala/reflect/api/trees$super.html#qual", "Trees.SuperApi": "scala/reflect/api/trees$superapi.html", "Trees.SuperApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.SuperApi", "Trees.SuperApi.mix()": "scala/reflect/api/trees$superapi.html#mix", "Trees.SuperApi.qual()": "scala/reflect/api/trees$superapi.html#qual", "Trees.SuperExtractor": "scala/reflect/api/trees$superextractor.html", "Trees.SuperExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.SuperExtractor", "Trees.SuperExtractor.apply()": "scala/reflect/api/trees$superextractor.html#apply", "Trees.SuperExtractor.SuperExtractor()": "scala/reflect/api/trees$superextractor.html#<init>", "Trees.SuperExtractor.unapply()": "scala/reflect/api/trees$superextractor.html#unapply", "Trees.SymTree": "scala/reflect/api/trees$symtree.html", "Trees.SymTree()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.SymTree", "Trees.SymTree.symbol()": "scala/reflect/api/trees$symtree.html#symbol", "Trees.SymTreeApi": "scala/reflect/api/trees$symtreeapi.html", "Trees.SymTreeApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.SymTreeApi", "Trees.SymTreeApi.symbol()": "scala/reflect/api/trees$symtreeapi.html#symbol", "Trees.Template": "scala/reflect/api/trees$template.html", "Trees.Template()": "scala/reflect/api/trees.html#Template", "Trees.Template.body()": "scala/reflect/api/trees$template.html#body", "Trees.Template.parents()": "scala/reflect/api/trees$template.html#parents", "Trees.Template.self()": "scala/reflect/api/trees$template.html#self", "Trees.TemplateApi": "scala/reflect/api/trees$templateapi.html", "Trees.TemplateApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TemplateApi", "Trees.TemplateApi.body()": "scala/reflect/api/trees$templateapi.html#body", "Trees.TemplateApi.parents()": "scala/reflect/api/trees$templateapi.html#parents", "Trees.TemplateApi.self()": "scala/reflect/api/trees$templateapi.html#self", "Trees.TemplateExtractor": "scala/reflect/api/trees$templateextractor.html", "Trees.TemplateExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TemplateExtractor", "Trees.TemplateExtractor.apply()": "scala/reflect/api/trees$templateextractor.html#apply", "Trees.TemplateExtractor.TemplateExtractor()": "scala/reflect/api/trees$templateextractor.html#<init>", "Trees.TemplateExtractor.unapply()": "scala/reflect/api/trees$templateextractor.html#unapply", "Trees.TermTree": "scala/reflect/api/trees$termtree.html", "Trees.TermTree()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TermTree", "Trees.TermTreeApi": "scala/reflect/api/trees$termtreeapi.html", "Trees.TermTreeApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TermTreeApi", "Trees.This": "scala/reflect/api/trees$this.html", "Trees.This()": "scala/reflect/api/trees.html#This", "Trees.This.qual()": "scala/reflect/api/trees$this.html#qual", "Trees.ThisApi": "scala/reflect/api/trees$thisapi.html", "Trees.ThisApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ThisApi", "Trees.ThisApi.qual()": "scala/reflect/api/trees$thisapi.html#qual", "Trees.ThisExtractor": "scala/reflect/api/trees$thisextractor.html", "Trees.ThisExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ThisExtractor", "Trees.ThisExtractor.apply()": "scala/reflect/api/trees$thisextractor.html#apply", "Trees.ThisExtractor.ThisExtractor()": "scala/reflect/api/trees$thisextractor.html#<init>", "Trees.ThisExtractor.unapply()": "scala/reflect/api/trees$thisextractor.html#unapply", "Trees.Throw": "scala/reflect/api/trees$throw.html", "Trees.Throw()": "scala/reflect/api/trees.html#Throw", "Trees.Throw.expr()": "scala/reflect/api/trees$throw.html#expr", "Trees.ThrowApi": "scala/reflect/api/trees$throwapi.html", "Trees.ThrowApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ThrowApi", "Trees.ThrowApi.expr()": "scala/reflect/api/trees$throwapi.html#expr", "Trees.ThrowExtractor": "scala/reflect/api/trees$throwextractor.html", "Trees.ThrowExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ThrowExtractor", "Trees.ThrowExtractor.apply()": "scala/reflect/api/trees$throwextractor.html#apply", "Trees.ThrowExtractor.ThrowExtractor()": "scala/reflect/api/trees$throwextractor.html#<init>", "Trees.ThrowExtractor.unapply()": "scala/reflect/api/trees$throwextractor.html#unapply", "Trees.Transformer": "scala/reflect/api/trees$transformer.html", "Trees.Transformer()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.Transformer", "Trees.Transformer.atOwner()": "scala/reflect/api/trees$transformer.html#atOwner", "Trees.Transformer.currentClass()": "scala/reflect/api/trees$transformer.html#currentClass", "Trees.Transformer.currentMethod()": "scala/reflect/api/trees$transformer.html#currentMethod", "Trees.Transformer.currentOwner()": "scala/reflect/api/trees$transformer.html#currentOwner", "Trees.Transformer.transform()": "scala/reflect/api/trees$transformer.html#transform", "Trees.Transformer.transformCaseDefs()": "scala/reflect/api/trees$transformer.html#transformCaseDefs", "Trees.Transformer.Transformer()": "scala/reflect/api/trees$transformer.html#<init>", "Trees.Transformer.transformIdents()": "scala/reflect/api/trees$transformer.html#transformIdents", "Trees.Transformer.transformMemberDefs()": "scala/reflect/api/trees$transformer.html#transformMemberDefs", "Trees.Transformer.transformModifiers()": "scala/reflect/api/trees$transformer.html#transformModifiers", "Trees.Transformer.transformStats()": "scala/reflect/api/trees$transformer.html#transformStats", "Trees.Transformer.transformTemplate()": "scala/reflect/api/trees$transformer.html#transformTemplate", "Trees.Transformer.transformTrees()": "scala/reflect/api/trees$transformer.html#transformTrees", "Trees.Transformer.transformTypeDefs()": "scala/reflect/api/trees$transformer.html#transformTypeDefs", "Trees.Transformer.transformValDef()": "scala/reflect/api/trees$transformer.html#transformValDef", "Trees.Transformer.transformValDefs()": "scala/reflect/api/trees$transformer.html#transformValDefs", "Trees.Transformer.transformValDefss()": "scala/reflect/api/trees$transformer.html#transformValDefss", "Trees.Transformer.treeCopy()": "scala/reflect/api/trees$transformer.html#treeCopy", "Trees.Traverser": "scala/reflect/api/trees$traverser.html", "Trees.Traverser()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.Traverser", "Trees.Traverser.apply()": "scala/reflect/api/trees$traverser.html#apply", "Trees.Traverser.atOwner()": "scala/reflect/api/trees$traverser.html#atOwner", "Trees.Traverser.currentOwner()": "scala/reflect/api/trees$traverser.html#currentOwner", "Trees.Traverser.traverse()": "scala/reflect/api/trees$traverser.html#traverse", "Trees.Traverser.traverseAnnotations()": "scala/reflect/api/trees$traverser.html#traverseAnnotations", "Trees.Traverser.traverseCases()": "scala/reflect/api/trees$traverser.html#traverseCases", "Trees.Traverser.traverseConstant()": "scala/reflect/api/trees$traverser.html#traverseConstant", "Trees.Traverser.traverseGuard()": "scala/reflect/api/trees$traverser.html#traverseGuard", "Trees.Traverser.traverseImportSelector()": "scala/reflect/api/trees$traverser.html#traverseImportSelector", "Trees.Traverser.traverseModifiers()": "scala/reflect/api/trees$traverser.html#traverseModifiers", "Trees.Traverser.traverseName()": "scala/reflect/api/trees$traverser.html#traverseName", "Trees.Traverser.traverseParams()": "scala/reflect/api/trees$traverser.html#traverseParams", "Trees.Traverser.traverseParamss()": "scala/reflect/api/trees$traverser.html#traverseParamss", "Trees.Traverser.traverseParents()": "scala/reflect/api/trees$traverser.html#traverseParents", "Trees.Traverser.traversePattern()": "scala/reflect/api/trees$traverser.html#traversePattern", "Trees.Traverser.Traverser()": "scala/reflect/api/trees$traverser.html#<init>", "Trees.Traverser.traverseSelfType()": "scala/reflect/api/trees$traverser.html#traverseSelfType", "Trees.Traverser.traverseStats()": "scala/reflect/api/trees$traverser.html#traverseStats", "Trees.Traverser.traverseTrees()": "scala/reflect/api/trees$traverser.html#traverseTrees", "Trees.Traverser.traverseTreess()": "scala/reflect/api/trees$traverser.html#traverseTreess", "Trees.Traverser.traverseTypeArgs()": "scala/reflect/api/trees$traverser.html#traverseTypeArgs", "Trees.Traverser.traverseTypeAscription()": "scala/reflect/api/trees$traverser.html#traverseTypeAscription", "Trees.Tree": "scala/reflect/api/trees$tree.html", "Trees.Tree()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.Tree", "Trees.Tree.canHaveAttrs()": "scala/reflect/api/trees$tree.html#canHaveAttrs", "Trees.Tree.children()": "scala/reflect/api/trees$tree.html#children", "Trees.Tree.collect()": "scala/reflect/api/trees$tree.html#collect", "Trees.Tree.duplicate()": "scala/reflect/api/trees$tree.html#duplicate", "Trees.Tree.equalsStructure()": "scala/reflect/api/trees$tree.html#equalsStructure", "Trees.Tree.exists()": "scala/reflect/api/trees$tree.html#exists", "Trees.Tree.filter()": "scala/reflect/api/trees$tree.html#filter", "Trees.Tree.find()": "scala/reflect/api/trees$tree.html#find", "Trees.Tree.forAll()": "scala/reflect/api/trees$tree.html#forAll", "Trees.Tree.foreach()": "scala/reflect/api/trees$tree.html#foreach", "Trees.Tree.isDef()": "scala/reflect/api/trees$tree.html#isDef", "Trees.Tree.isEmpty()": "scala/reflect/api/trees$tree.html#isEmpty", "Trees.Tree.isTerm()": "scala/reflect/api/trees$tree.html#isTerm", "Trees.Tree.isType()": "scala/reflect/api/trees$tree.html#isType", "Trees.Tree.nonEmpty()": "scala/reflect/api/trees$tree.html#nonEmpty", "Trees.Tree.orElse()": "scala/reflect/api/trees$tree.html#orElse", "Trees.Tree.pos()": "scala/reflect/api/trees$tree.html#pos", "Trees.Tree.symbol()": "scala/reflect/api/trees$tree.html#symbol", "Trees.Tree.toString()": "scala/reflect/api/trees$tree.html#toString", "Trees.Tree.tpe()": "scala/reflect/api/trees$tree.html#tpe", "Trees.Tree.withFilter()": "scala/reflect/api/trees$tree.html#withFilter", "Trees.TreeApi": "scala/reflect/api/trees$treeapi.html", "Trees.TreeApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TreeApi", "Trees.TreeApi.canHaveAttrs()": "scala/reflect/api/trees$treeapi.html#canHaveAttrs", "Trees.TreeApi.children()": "scala/reflect/api/trees$treeapi.html#children", "Trees.TreeApi.collect()": "scala/reflect/api/trees$treeapi.html#collect", "Trees.TreeApi.duplicate()": "scala/reflect/api/trees$treeapi.html#duplicate", "Trees.TreeApi.equalsStructure()": "scala/reflect/api/trees$treeapi.html#equalsStructure", "Trees.TreeApi.exists()": "scala/reflect/api/trees$treeapi.html#exists", "Trees.TreeApi.filter()": "scala/reflect/api/trees$treeapi.html#filter", "Trees.TreeApi.find()": "scala/reflect/api/trees$treeapi.html#find", "Trees.TreeApi.forAll()": "scala/reflect/api/trees$treeapi.html#forAll", "Trees.TreeApi.foreach()": "scala/reflect/api/trees$treeapi.html#foreach", "Trees.TreeApi.isDef()": "scala/reflect/api/trees$treeapi.html#isDef", "Trees.TreeApi.isEmpty()": "scala/reflect/api/trees$treeapi.html#isEmpty", "Trees.TreeApi.isTerm()": "scala/reflect/api/trees$treeapi.html#isTerm", "Trees.TreeApi.isType()": "scala/reflect/api/trees$treeapi.html#isType", "Trees.TreeApi.nonEmpty()": "scala/reflect/api/trees$treeapi.html#nonEmpty", "Trees.TreeApi.orElse()": "scala/reflect/api/trees$treeapi.html#orElse", "Trees.TreeApi.pos()": "scala/reflect/api/trees$treeapi.html#pos", "Trees.TreeApi.symbol()": "scala/reflect/api/trees$treeapi.html#symbol", "Trees.TreeApi.toString()": "scala/reflect/api/trees$treeapi.html#toString", "Trees.TreeApi.tpe()": "scala/reflect/api/trees$treeapi.html#tpe", "Trees.TreeApi.withFilter()": "scala/reflect/api/trees$treeapi.html#withFilter", "Trees.TreeCopier": "scala/reflect/api/trees$treecopier.html", "Trees.TreeCopier()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TreeCopier", "Trees.TreeCopier.Alternative()": "scala/reflect/api/trees$treecopier.html#Alternative", "Trees.TreeCopier.Annotated()": "scala/reflect/api/trees$treecopier.html#Annotated", "Trees.TreeCopier.AppliedTypeTree()": "scala/reflect/api/trees$treecopier.html#AppliedTypeTree", "Trees.TreeCopier.Apply()": "scala/reflect/api/trees$treecopier.html#Apply", "Trees.TreeCopier.Assign()": "scala/reflect/api/trees$treecopier.html#Assign", "Trees.TreeCopier.Bind()": "scala/reflect/api/trees$treecopier.html#Bind", "Trees.TreeCopier.Block()": "scala/reflect/api/trees$treecopier.html#Block", "Trees.TreeCopier.CaseDef()": "scala/reflect/api/trees$treecopier.html#CaseDef", "Trees.TreeCopier.ClassDef()": "scala/reflect/api/trees$treecopier.html#ClassDef", "Trees.TreeCopier.CompoundTypeTree()": "scala/reflect/api/trees$treecopier.html#CompoundTypeTree", "Trees.TreeCopier.DefDef()": "scala/reflect/api/trees$treecopier.html#DefDef", "Trees.TreeCopier.ExistentialTypeTree()": "scala/reflect/api/trees$treecopier.html#ExistentialTypeTree", "Trees.TreeCopier.Function()": "scala/reflect/api/trees$treecopier.html#Function", "Trees.TreeCopier.Ident()": "scala/reflect/api/trees$treecopier.html#Ident", "Trees.TreeCopier.If()": "scala/reflect/api/trees$treecopier.html#If", "Trees.TreeCopier.Import()": "scala/reflect/api/trees$treecopier.html#Import", "Trees.TreeCopier.LabelDef()": "scala/reflect/api/trees$treecopier.html#LabelDef", "Trees.TreeCopier.Literal()": "scala/reflect/api/trees$treecopier.html#Literal", "Trees.TreeCopier.Match()": "scala/reflect/api/trees$treecopier.html#Match", "Trees.TreeCopier.ModuleDef()": "scala/reflect/api/trees$treecopier.html#ModuleDef", "Trees.TreeCopier.NamedArg()": "scala/reflect/api/trees$treecopier.html#NamedArg", "Trees.TreeCopier.New()": "scala/reflect/api/trees$treecopier.html#New", "Trees.TreeCopier.PackageDef()": "scala/reflect/api/trees$treecopier.html#PackageDef", "Trees.TreeCopier.ReferenceToBoxed()": "scala/reflect/api/trees$treecopier.html#ReferenceToBoxed", "Trees.TreeCopier.RefTree()": "scala/reflect/api/trees$treecopier.html#RefTree", "Trees.TreeCopier.Return()": "scala/reflect/api/trees$treecopier.html#Return", "Trees.TreeCopier.Select()": "scala/reflect/api/trees$treecopier.html#Select", "Trees.TreeCopier.SelectFromTypeTree()": "scala/reflect/api/trees$treecopier.html#SelectFromTypeTree", "Trees.TreeCopier.SingletonTypeTree()": "scala/reflect/api/trees$treecopier.html#SingletonTypeTree", "Trees.TreeCopier.Star()": "scala/reflect/api/trees$treecopier.html#Star", "Trees.TreeCopier.Super()": "scala/reflect/api/trees$treecopier.html#Super", "Trees.TreeCopier.Template()": "scala/reflect/api/trees$treecopier.html#Template", "Trees.TreeCopier.This()": "scala/reflect/api/trees$treecopier.html#This", "Trees.TreeCopier.Throw()": "scala/reflect/api/trees$treecopier.html#Throw", "Trees.TreeCopier.Try()": "scala/reflect/api/trees$treecopier.html#Try", "Trees.TreeCopier.TypeApply()": "scala/reflect/api/trees$treecopier.html#TypeApply", "Trees.TreeCopier.TypeBoundsTree()": "scala/reflect/api/trees$treecopier.html#TypeBoundsTree", "Trees.TreeCopier.Typed()": "scala/reflect/api/trees$treecopier.html#Typed", "Trees.TreeCopier.TypeDef()": "scala/reflect/api/trees$treecopier.html#TypeDef", "Trees.TreeCopier.TypeTree()": "scala/reflect/api/trees$treecopier.html#TypeTree", "Trees.TreeCopier.UnApply()": "scala/reflect/api/trees$treecopier.html#UnApply", "Trees.TreeCopier.ValDef()": "scala/reflect/api/trees$treecopier.html#ValDef", "Trees.TreeCopierOps": "scala/reflect/api/trees$treecopierops.html", "Trees.TreeCopierOps()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TreeCopierOps", "Trees.TreeCopierOps.Alternative()": "scala/reflect/api/trees$treecopierops.html#Alternative", "Trees.TreeCopierOps.Annotated()": "scala/reflect/api/trees$treecopierops.html#Annotated", "Trees.TreeCopierOps.AppliedTypeTree()": "scala/reflect/api/trees$treecopierops.html#AppliedTypeTree", "Trees.TreeCopierOps.Apply()": "scala/reflect/api/trees$treecopierops.html#Apply", "Trees.TreeCopierOps.Assign()": "scala/reflect/api/trees$treecopierops.html#Assign", "Trees.TreeCopierOps.Bind()": "scala/reflect/api/trees$treecopierops.html#Bind", "Trees.TreeCopierOps.Block()": "scala/reflect/api/trees$treecopierops.html#Block", "Trees.TreeCopierOps.CaseDef()": "scala/reflect/api/trees$treecopierops.html#CaseDef", "Trees.TreeCopierOps.ClassDef()": "scala/reflect/api/trees$treecopierops.html#ClassDef", "Trees.TreeCopierOps.CompoundTypeTree()": "scala/reflect/api/trees$treecopierops.html#CompoundTypeTree", "Trees.TreeCopierOps.DefDef()": "scala/reflect/api/trees$treecopierops.html#DefDef", "Trees.TreeCopierOps.ExistentialTypeTree()": "scala/reflect/api/trees$treecopierops.html#ExistentialTypeTree", "Trees.TreeCopierOps.Function()": "scala/reflect/api/trees$treecopierops.html#Function", "Trees.TreeCopierOps.Ident()": "scala/reflect/api/trees$treecopierops.html#Ident", "Trees.TreeCopierOps.If()": "scala/reflect/api/trees$treecopierops.html#If", "Trees.TreeCopierOps.Import()": "scala/reflect/api/trees$treecopierops.html#Import", "Trees.TreeCopierOps.LabelDef()": "scala/reflect/api/trees$treecopierops.html#LabelDef", "Trees.TreeCopierOps.Literal()": "scala/reflect/api/trees$treecopierops.html#Literal", "Trees.TreeCopierOps.Match()": "scala/reflect/api/trees$treecopierops.html#Match", "Trees.TreeCopierOps.ModuleDef()": "scala/reflect/api/trees$treecopierops.html#ModuleDef", "Trees.TreeCopierOps.NamedArg()": "scala/reflect/api/trees$treecopierops.html#NamedArg", "Trees.TreeCopierOps.New()": "scala/reflect/api/trees$treecopierops.html#New", "Trees.TreeCopierOps.PackageDef()": "scala/reflect/api/trees$treecopierops.html#PackageDef", "Trees.TreeCopierOps.ReferenceToBoxed()": "scala/reflect/api/trees$treecopierops.html#ReferenceToBoxed", "Trees.TreeCopierOps.RefTree()": "scala/reflect/api/trees$treecopierops.html#RefTree", "Trees.TreeCopierOps.Return()": "scala/reflect/api/trees$treecopierops.html#Return", "Trees.TreeCopierOps.Select()": "scala/reflect/api/trees$treecopierops.html#Select", "Trees.TreeCopierOps.SelectFromTypeTree()": "scala/reflect/api/trees$treecopierops.html#SelectFromTypeTree", "Trees.TreeCopierOps.SingletonTypeTree()": "scala/reflect/api/trees$treecopierops.html#SingletonTypeTree", "Trees.TreeCopierOps.Star()": "scala/reflect/api/trees$treecopierops.html#Star", "Trees.TreeCopierOps.Super()": "scala/reflect/api/trees$treecopierops.html#Super", "Trees.TreeCopierOps.Template()": "scala/reflect/api/trees$treecopierops.html#Template", "Trees.TreeCopierOps.This()": "scala/reflect/api/trees$treecopierops.html#This", "Trees.TreeCopierOps.Throw()": "scala/reflect/api/trees$treecopierops.html#Throw", "Trees.TreeCopierOps.TreeCopierOps()": "scala/reflect/api/trees$treecopierops.html#<init>", "Trees.TreeCopierOps.Try()": "scala/reflect/api/trees$treecopierops.html#Try", "Trees.TreeCopierOps.TypeApply()": "scala/reflect/api/trees$treecopierops.html#TypeApply", "Trees.TreeCopierOps.TypeBoundsTree()": "scala/reflect/api/trees$treecopierops.html#TypeBoundsTree", "Trees.TreeCopierOps.Typed()": "scala/reflect/api/trees$treecopierops.html#Typed", "Trees.TreeCopierOps.TypeDef()": "scala/reflect/api/trees$treecopierops.html#TypeDef", "Trees.TreeCopierOps.TypeTree()": "scala/reflect/api/trees$treecopierops.html#TypeTree", "Trees.TreeCopierOps.UnApply()": "scala/reflect/api/trees$treecopierops.html#UnApply", "Trees.TreeCopierOps.ValDef()": "scala/reflect/api/trees$treecopierops.html#ValDef", "Trees.treeCopy()": "scala/reflect/api/trees.html#treeCopy", "Trees.treeToString()": "scala/reflect/api/trees.html#treeToString", "Trees.Try": "scala/reflect/api/trees$try.html", "Trees.Try()": "scala/reflect/api/trees.html#Try", "Trees.Try.block()": "scala/reflect/api/trees$try.html#block", "Trees.Try.catches()": "scala/reflect/api/trees$try.html#catches", "Trees.Try.finalizer()": "scala/reflect/api/trees$try.html#finalizer", "Trees.TryApi": "scala/reflect/api/trees$tryapi.html", "Trees.TryApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TryApi", "Trees.TryApi.block()": "scala/reflect/api/trees$tryapi.html#block", "Trees.TryApi.catches()": "scala/reflect/api/trees$tryapi.html#catches", "Trees.TryApi.finalizer()": "scala/reflect/api/trees$tryapi.html#finalizer", "Trees.TryExtractor": "scala/reflect/api/trees$tryextractor.html", "Trees.TryExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TryExtractor", "Trees.TryExtractor.apply()": "scala/reflect/api/trees$tryextractor.html#apply", "Trees.TryExtractor.TryExtractor()": "scala/reflect/api/trees$tryextractor.html#<init>", "Trees.TryExtractor.unapply()": "scala/reflect/api/trees$tryextractor.html#unapply", "Trees.TypeApply": "scala/reflect/api/trees$typeapply.html", "Trees.TypeApply()": "scala/reflect/api/trees.html#TypeApply", "Trees.TypeApplyApi": "scala/reflect/api/trees$typeapplyapi.html", "Trees.TypeApplyApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TypeApplyApi", "Trees.TypeApplyExtractor": "scala/reflect/api/trees$typeapplyextractor.html", "Trees.TypeApplyExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TypeApplyExtractor", "Trees.TypeApplyExtractor.apply()": "scala/reflect/api/trees$typeapplyextractor.html#apply", "Trees.TypeApplyExtractor.TypeApplyExtractor()": "scala/reflect/api/trees$typeapplyextractor.html#<init>", "Trees.TypeApplyExtractor.unapply()": "scala/reflect/api/trees$typeapplyextractor.html#unapply", "Trees.TypeBoundsTree": "scala/reflect/api/trees$typeboundstree.html", "Trees.TypeBoundsTree()": "scala/reflect/api/trees.html#TypeBoundsTree", "Trees.TypeBoundsTree.hi()": "scala/reflect/api/trees$typeboundstree.html#hi", "Trees.TypeBoundsTree.lo()": "scala/reflect/api/trees$typeboundstree.html#lo", "Trees.TypeBoundsTreeApi": "scala/reflect/api/trees$typeboundstreeapi.html", "Trees.TypeBoundsTreeApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TypeBoundsTreeApi", "Trees.TypeBoundsTreeApi.hi()": "scala/reflect/api/trees$typeboundstreeapi.html#hi", "Trees.TypeBoundsTreeApi.lo()": "scala/reflect/api/trees$typeboundstreeapi.html#lo", "Trees.TypeBoundsTreeExtractor": "scala/reflect/api/trees$typeboundstreeextractor.html", "Trees.TypeBoundsTreeExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TypeBoundsTreeExtractor", "Trees.TypeBoundsTreeExtractor.apply()": "scala/reflect/api/trees$typeboundstreeextractor.html#apply", "Trees.TypeBoundsTreeExtractor.TypeBoundsTreeExtractor()": "scala/reflect/api/trees$typeboundstreeextractor.html#<init>", "Trees.TypeBoundsTreeExtractor.unapply()": "scala/reflect/api/trees$typeboundstreeextractor.html#unapply", "Trees.Typed": "scala/reflect/api/trees$typed.html", "Trees.Typed()": "scala/reflect/api/trees.html#Typed", "Trees.Typed.expr()": "scala/reflect/api/trees$typed.html#expr", "Trees.Typed.tpt()": "scala/reflect/api/trees$typed.html#tpt", "Trees.TypedApi": "scala/reflect/api/trees$typedapi.html", "Trees.TypedApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TypedApi", "Trees.TypedApi.expr()": "scala/reflect/api/trees$typedapi.html#expr", "Trees.TypedApi.tpt()": "scala/reflect/api/trees$typedapi.html#tpt", "Trees.TypeDef": "scala/reflect/api/trees$typedef.html", "Trees.TypeDef()": "scala/reflect/api/trees.html#TypeDef", "Trees.TypeDef.mods()": "scala/reflect/api/trees$typedef.html#mods", "Trees.TypeDef.name()": "scala/reflect/api/trees$typedef.html#name", "Trees.TypeDef.rhs()": "scala/reflect/api/trees$typedef.html#rhs", "Trees.TypeDef.tparams()": "scala/reflect/api/trees$typedef.html#tparams", "Trees.TypeDefApi": "scala/reflect/api/trees$typedefapi.html", "Trees.TypeDefApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TypeDefApi", "Trees.TypeDefApi.mods()": "scala/reflect/api/trees$typedefapi.html#mods", "Trees.TypeDefApi.name()": "scala/reflect/api/trees$typedefapi.html#name", "Trees.TypeDefApi.rhs()": "scala/reflect/api/trees$typedefapi.html#rhs", "Trees.TypeDefApi.tparams()": "scala/reflect/api/trees$typedefapi.html#tparams", "Trees.TypeDefExtractor": "scala/reflect/api/trees$typedefextractor.html", "Trees.TypeDefExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TypeDefExtractor", "Trees.TypeDefExtractor.apply()": "scala/reflect/api/trees$typedefextractor.html#apply", "Trees.TypeDefExtractor.TypeDefExtractor()": "scala/reflect/api/trees$typedefextractor.html#<init>", "Trees.TypeDefExtractor.unapply()": "scala/reflect/api/trees$typedefextractor.html#unapply", "Trees.TypedExtractor": "scala/reflect/api/trees$typedextractor.html", "Trees.TypedExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TypedExtractor", "Trees.TypedExtractor.apply()": "scala/reflect/api/trees$typedextractor.html#apply", "Trees.TypedExtractor.TypedExtractor()": "scala/reflect/api/trees$typedextractor.html#<init>", "Trees.TypedExtractor.unapply()": "scala/reflect/api/trees$typedextractor.html#unapply", "Trees.TypeTree": "scala/reflect/api/trees$typetree.html", "Trees.TypeTree()": "scala/reflect/api/trees.html#TypeTree", "Trees.TypeTree.original()": "scala/reflect/api/trees$typetree.html#original", "Trees.TypeTreeApi": "scala/reflect/api/trees$typetreeapi.html", "Trees.TypeTreeApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TypeTreeApi", "Trees.TypeTreeApi.original()": "scala/reflect/api/trees$typetreeapi.html#original", "Trees.TypeTreeExtractor": "scala/reflect/api/trees$typetreeextractor.html", "Trees.TypeTreeExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TypeTreeExtractor", "Trees.TypeTreeExtractor.apply()": "scala/reflect/api/trees$typetreeextractor.html#apply", "Trees.TypeTreeExtractor.TypeTreeExtractor()": "scala/reflect/api/trees$typetreeextractor.html#<init>", "Trees.TypeTreeExtractor.unapply()": "scala/reflect/api/trees$typetreeextractor.html#unapply", "Trees.TypTree": "scala/reflect/api/trees$typtree.html", "Trees.TypTree()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TypTree", "Trees.TypTreeApi": "scala/reflect/api/trees$typtreeapi.html", "Trees.TypTreeApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.TypTreeApi", "Trees.UnApply": "scala/reflect/api/trees$unapply.html", "Trees.UnApply()": "scala/reflect/api/trees.html#UnApply", "Trees.UnApply.args()": "scala/reflect/api/trees$unapply.html#args", "Trees.UnApply.fun()": "scala/reflect/api/trees$unapply.html#fun", "Trees.UnApplyApi": "scala/reflect/api/trees$unapplyapi.html", "Trees.UnApplyApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.UnApplyApi", "Trees.UnApplyApi.args()": "scala/reflect/api/trees$unapplyapi.html#args", "Trees.UnApplyApi.fun()": "scala/reflect/api/trees$unapplyapi.html#fun", "Trees.UnApplyExtractor": "scala/reflect/api/trees$unapplyextractor.html", "Trees.UnApplyExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.UnApplyExtractor", "Trees.UnApplyExtractor.apply()": "scala/reflect/api/trees$unapplyextractor.html#apply", "Trees.UnApplyExtractor.unapply()": "scala/reflect/api/trees$unapplyextractor.html#unapply", "Trees.UnApplyExtractor.UnApplyExtractor()": "scala/reflect/api/trees$unapplyextractor.html#<init>", "Trees.ValDef": "scala/reflect/api/trees$valdef.html", "Trees.ValDef()": "scala/reflect/api/trees.html#ValDef", "Trees.ValDef.mods()": "scala/reflect/api/trees$valdef.html#mods", "Trees.ValDef.name()": "scala/reflect/api/trees$valdef.html#name", "Trees.ValDef.rhs()": "scala/reflect/api/trees$valdef.html#rhs", "Trees.ValDef.tpt()": "scala/reflect/api/trees$valdef.html#tpt", "Trees.ValDefApi": "scala/reflect/api/trees$valdefapi.html", "Trees.ValDefApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ValDefApi", "Trees.ValDefApi.mods()": "scala/reflect/api/trees$valdefapi.html#mods", "Trees.ValDefApi.name()": "scala/reflect/api/trees$valdefapi.html#name", "Trees.ValDefApi.rhs()": "scala/reflect/api/trees$valdefapi.html#rhs", "Trees.ValDefApi.tpt()": "scala/reflect/api/trees$valdefapi.html#tpt", "Trees.ValDefExtractor": "scala/reflect/api/trees$valdefextractor.html", "Trees.ValDefExtractor()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ValDefExtractor", "Trees.ValDefExtractor.apply()": "scala/reflect/api/trees$valdefextractor.html#apply", "Trees.ValDefExtractor.unapply()": "scala/reflect/api/trees$valdefextractor.html#unapply", "Trees.ValDefExtractor.ValDefExtractor()": "scala/reflect/api/trees$valdefextractor.html#<init>", "Trees.ValOrDefDef": "scala/reflect/api/trees$valordefdef.html", "Trees.ValOrDefDef()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ValOrDefDef", "Trees.ValOrDefDef.name()": "scala/reflect/api/trees$valordefdef.html#name", "Trees.ValOrDefDef.rhs()": "scala/reflect/api/trees$valordefdef.html#rhs", "Trees.ValOrDefDef.tpt()": "scala/reflect/api/trees$valordefdef.html#tpt", "Trees.ValOrDefDefApi": "scala/reflect/api/trees$valordefdefapi.html", "Trees.ValOrDefDefApi()": "scala/reflect/api/trees.html#scala.reflect.api.Trees.ValOrDefDefApi", "Trees.ValOrDefDefApi.name()": "scala/reflect/api/trees$valordefdefapi.html#name", "Trees.ValOrDefDefApi.rhs()": "scala/reflect/api/trees$valordefdefapi.html#rhs", "Trees.ValOrDefDefApi.tpt()": "scala/reflect/api/trees$valordefdefapi.html#tpt", "Trees.xtransform()": "scala/reflect/api/trees.html#xtransform", "TypecheckException": "scala/reflect/macros/typecheckexception.html", "TypecheckException.msg()": "scala/reflect/macros/typecheckexception.html#msg", "TypecheckException.pos()": "scala/reflect/macros/typecheckexception.html#pos", "TypecheckException.TypecheckException()": "scala/reflect/macros/typecheckexception.html#<init>", "TypeCreator": "scala/reflect/api/typecreator.html", "TypeCreator.apply()": "scala/reflect/api/typecreator.html#apply", "TypeCreator.TypeCreator()": "scala/reflect/api/typecreator.html#<init>", "Typers": "scala/reflect/macros/typers.html", "Typers.inferImplicitValue()": "scala/reflect/macros/typers.html#inferImplicitValue", "Typers.inferImplicitView()": "scala/reflect/macros/typers.html#inferImplicitView", "Typers.openMacros()": "scala/reflect/macros/typers.html#openMacros", "Typers.PATTERNmode()": "scala/reflect/macros/typers.html#PATTERNmode", "Typers.TERMmode()": "scala/reflect/macros/typers.html#TERMmode", "Typers.typecheck()": "scala/reflect/macros/typers.html#typecheck", "Typers.TypecheckException()": "scala/reflect/macros/typers.html#TypecheckException", "Typers.TypecheckMode()": "scala/reflect/macros/typers.html#scala.reflect.macros.Typers.TypecheckMode", "Typers.TYPEmode()": "scala/reflect/macros/typers.html#TYPEmode", "Typers.untypecheck()": "scala/reflect/macros/typers.html#untypecheck", "Types": "scala/reflect/api/types.html", "Types.AnnotatedType": "scala/reflect/api/types$annotatedtype.html", "Types.AnnotatedType()": "scala/reflect/api/types.html#AnnotatedType", "Types.AnnotatedType.annotations()": "scala/reflect/api/types$annotatedtype.html#annotations", "Types.AnnotatedType.underlying()": "scala/reflect/api/types$annotatedtype.html#underlying", "Types.AnnotatedTypeApi": "scala/reflect/api/types$annotatedtypeapi.html", "Types.AnnotatedTypeApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.AnnotatedTypeApi", "Types.AnnotatedTypeApi.annotations()": "scala/reflect/api/types$annotatedtypeapi.html#annotations", "Types.AnnotatedTypeApi.underlying()": "scala/reflect/api/types$annotatedtypeapi.html#underlying", "Types.AnnotatedTypeExtractor": "scala/reflect/api/types$annotatedtypeextractor.html", "Types.AnnotatedTypeExtractor()": "scala/reflect/api/types.html#scala.reflect.api.Types.AnnotatedTypeExtractor", "Types.AnnotatedTypeExtractor.AnnotatedTypeExtractor()": "scala/reflect/api/types$annotatedtypeextractor.html#<init>", "Types.AnnotatedTypeExtractor.unapply()": "scala/reflect/api/types$annotatedtypeextractor.html#unapply", "Types.appliedType()": "scala/reflect/api/types.html#appliedType", "Types.BoundedWildcardType": "scala/reflect/api/types$boundedwildcardtype.html", "Types.BoundedWildcardType()": "scala/reflect/api/types.html#BoundedWildcardType", "Types.BoundedWildcardType.bounds()": "scala/reflect/api/types$boundedwildcardtype.html#bounds", "Types.BoundedWildcardTypeApi": "scala/reflect/api/types$boundedwildcardtypeapi.html", "Types.BoundedWildcardTypeApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.BoundedWildcardTypeApi", "Types.BoundedWildcardTypeApi.bounds()": "scala/reflect/api/types$boundedwildcardtypeapi.html#bounds", "Types.BoundedWildcardTypeExtractor": "scala/reflect/api/types$boundedwildcardtypeextractor.html", "Types.BoundedWildcardTypeExtractor()": "scala/reflect/api/types.html#scala.reflect.api.Types.BoundedWildcardTypeExtractor", "Types.BoundedWildcardTypeExtractor.BoundedWildcardTypeExtractor()": "scala/reflect/api/types$boundedwildcardtypeextractor.html#<init>", "Types.BoundedWildcardTypeExtractor.unapply()": "scala/reflect/api/types$boundedwildcardtypeextractor.html#unapply", "Types.ClassInfoType": "scala/reflect/api/types$classinfotype.html", "Types.ClassInfoType()": "scala/reflect/api/types.html#ClassInfoType", "Types.ClassInfoType.decls()": "scala/reflect/api/types$classinfotype.html#decls", "Types.ClassInfoType.parents()": "scala/reflect/api/types$classinfotype.html#parents", "Types.ClassInfoType.typeSymbol()": "scala/reflect/api/types$classinfotype.html#typeSymbol", "Types.ClassInfoTypeApi": "scala/reflect/api/types$classinfotypeapi.html", "Types.ClassInfoTypeApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.ClassInfoTypeApi", "Types.ClassInfoTypeApi.decls()": "scala/reflect/api/types$classinfotypeapi.html#decls", "Types.ClassInfoTypeApi.parents()": "scala/reflect/api/types$classinfotypeapi.html#parents", "Types.ClassInfoTypeApi.typeSymbol()": "scala/reflect/api/types$classinfotypeapi.html#typeSymbol", "Types.ClassInfoTypeExtractor": "scala/reflect/api/types$classinfotypeextractor.html", "Types.ClassInfoTypeExtractor()": "scala/reflect/api/types.html#scala.reflect.api.Types.ClassInfoTypeExtractor", "Types.ClassInfoTypeExtractor.ClassInfoTypeExtractor()": "scala/reflect/api/types$classinfotypeextractor.html#<init>", "Types.ClassInfoTypeExtractor.unapply()": "scala/reflect/api/types$classinfotypeextractor.html#unapply", "Types.CompoundType": "scala/reflect/api/types$compoundtype.html", "Types.CompoundType()": "scala/reflect/api/types.html#scala.reflect.api.Types.CompoundType", "Types.CompoundTypeApi": "scala/reflect/api/types$compoundtypeapi.html", "Types.CompoundTypeApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.CompoundTypeApi", "Types.ConstantType": "scala/reflect/api/types$constanttype.html", "Types.ConstantType()": "scala/reflect/api/types.html#ConstantType", "Types.ConstantType.value()": "scala/reflect/api/types$constanttype.html#value", "Types.ConstantTypeApi": "scala/reflect/api/types$constanttypeapi.html", "Types.ConstantTypeApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.ConstantTypeApi", "Types.ConstantTypeApi.value()": "scala/reflect/api/types$constanttypeapi.html#value", "Types.ConstantTypeExtractor": "scala/reflect/api/types$constanttypeextractor.html", "Types.ConstantTypeExtractor()": "scala/reflect/api/types.html#scala.reflect.api.Types.ConstantTypeExtractor", "Types.ConstantTypeExtractor.ConstantTypeExtractor()": "scala/reflect/api/types$constanttypeextractor.html#<init>", "Types.ConstantTypeExtractor.unapply()": "scala/reflect/api/types$constanttypeextractor.html#unapply", "Types.ExistentialType": "scala/reflect/api/types$existentialtype.html", "Types.ExistentialType()": "scala/reflect/api/types.html#ExistentialType", "Types.ExistentialType.quantified()": "scala/reflect/api/types$existentialtype.html#quantified", "Types.ExistentialType.underlying()": "scala/reflect/api/types$existentialtype.html#underlying", "Types.ExistentialTypeApi": "scala/reflect/api/types$existentialtypeapi.html", "Types.ExistentialTypeApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.ExistentialTypeApi", "Types.ExistentialTypeApi.quantified()": "scala/reflect/api/types$existentialtypeapi.html#quantified", "Types.ExistentialTypeApi.underlying()": "scala/reflect/api/types$existentialtypeapi.html#underlying", "Types.ExistentialTypeExtractor": "scala/reflect/api/types$existentialtypeextractor.html", "Types.ExistentialTypeExtractor()": "scala/reflect/api/types.html#scala.reflect.api.Types.ExistentialTypeExtractor", "Types.ExistentialTypeExtractor.ExistentialTypeExtractor()": "scala/reflect/api/types$existentialtypeextractor.html#<init>", "Types.ExistentialTypeExtractor.unapply()": "scala/reflect/api/types$existentialtypeextractor.html#unapply", "Types.glb()": "scala/reflect/api/types.html#glb", "Types.lub()": "scala/reflect/api/types.html#lub", "Types.MethodType": "scala/reflect/api/types$methodtype.html", "Types.MethodType()": "scala/reflect/api/types.html#MethodType", "Types.MethodType.params()": "scala/reflect/api/types$methodtype.html#params", "Types.MethodType.resultType()": "scala/reflect/api/types$methodtype.html#resultType", "Types.MethodTypeApi": "scala/reflect/api/types$methodtypeapi.html", "Types.MethodTypeApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.MethodTypeApi", "Types.MethodTypeApi.params()": "scala/reflect/api/types$methodtypeapi.html#params", "Types.MethodTypeApi.resultType()": "scala/reflect/api/types$methodtypeapi.html#resultType", "Types.MethodTypeExtractor": "scala/reflect/api/types$methodtypeextractor.html", "Types.MethodTypeExtractor()": "scala/reflect/api/types.html#scala.reflect.api.Types.MethodTypeExtractor", "Types.MethodTypeExtractor.MethodTypeExtractor()": "scala/reflect/api/types$methodtypeextractor.html#<init>", "Types.MethodTypeExtractor.unapply()": "scala/reflect/api/types$methodtypeextractor.html#unapply", "Types.NoPrefix()": "scala/reflect/api/types.html#NoPrefix", "Types.NoType()": "scala/reflect/api/types.html#NoType", "Types.NullaryMethodType": "scala/reflect/api/types$nullarymethodtype.html", "Types.NullaryMethodType()": "scala/reflect/api/types.html#NullaryMethodType", "Types.NullaryMethodType.resultType()": "scala/reflect/api/types$nullarymethodtype.html#resultType", "Types.NullaryMethodTypeApi": "scala/reflect/api/types$nullarymethodtypeapi.html", "Types.NullaryMethodTypeApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.NullaryMethodTypeApi", "Types.NullaryMethodTypeApi.resultType()": "scala/reflect/api/types$nullarymethodtypeapi.html#resultType", "Types.NullaryMethodTypeExtractor": "scala/reflect/api/types$nullarymethodtypeextractor.html", "Types.NullaryMethodTypeExtractor()": "scala/reflect/api/types.html#scala.reflect.api.Types.NullaryMethodTypeExtractor", "Types.NullaryMethodTypeExtractor.NullaryMethodTypeExtractor()": "scala/reflect/api/types$nullarymethodtypeextractor.html#<init>", "Types.NullaryMethodTypeExtractor.unapply()": "scala/reflect/api/types$nullarymethodtypeextractor.html#unapply", "Types.PolyType": "scala/reflect/api/types$polytype.html", "Types.PolyType()": "scala/reflect/api/types.html#PolyType", "Types.PolyType.resultType()": "scala/reflect/api/types$polytype.html#resultType", "Types.PolyType.typeParams()": "scala/reflect/api/types$polytype.html#typeParams", "Types.PolyTypeApi": "scala/reflect/api/types$polytypeapi.html", "Types.PolyTypeApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.PolyTypeApi", "Types.PolyTypeApi.resultType()": "scala/reflect/api/types$polytypeapi.html#resultType", "Types.PolyTypeApi.typeParams()": "scala/reflect/api/types$polytypeapi.html#typeParams", "Types.PolyTypeExtractor": "scala/reflect/api/types$polytypeextractor.html", "Types.PolyTypeExtractor()": "scala/reflect/api/types.html#scala.reflect.api.Types.PolyTypeExtractor", "Types.PolyTypeExtractor.PolyTypeExtractor()": "scala/reflect/api/types$polytypeextractor.html#<init>", "Types.PolyTypeExtractor.unapply()": "scala/reflect/api/types$polytypeextractor.html#unapply", "Types.RefinedType": "scala/reflect/api/types$refinedtype.html", "Types.RefinedType()": "scala/reflect/api/types.html#RefinedType", "Types.RefinedType.decls()": "scala/reflect/api/types$refinedtype.html#decls", "Types.RefinedType.parents()": "scala/reflect/api/types$refinedtype.html#parents", "Types.RefinedTypeApi": "scala/reflect/api/types$refinedtypeapi.html", "Types.RefinedTypeApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.RefinedTypeApi", "Types.RefinedTypeApi.decls()": "scala/reflect/api/types$refinedtypeapi.html#decls", "Types.RefinedTypeApi.parents()": "scala/reflect/api/types$refinedtypeapi.html#parents", "Types.RefinedTypeExtractor": "scala/reflect/api/types$refinedtypeextractor.html", "Types.RefinedTypeExtractor()": "scala/reflect/api/types.html#scala.reflect.api.Types.RefinedTypeExtractor", "Types.RefinedTypeExtractor.RefinedTypeExtractor()": "scala/reflect/api/types$refinedtypeextractor.html#<init>", "Types.RefinedTypeExtractor.unapply()": "scala/reflect/api/types$refinedtypeextractor.html#unapply", "Types.SingletonType": "scala/reflect/api/types$singletontype.html", "Types.SingletonType()": "scala/reflect/api/types.html#scala.reflect.api.Types.SingletonType", "Types.SingletonTypeApi": "scala/reflect/api/types$singletontypeapi.html", "Types.SingletonTypeApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.SingletonTypeApi", "Types.SingleType": "scala/reflect/api/types$singletype.html", "Types.SingleType()": "scala/reflect/api/types.html#SingleType", "Types.SingleType.pre()": "scala/reflect/api/types$singletype.html#pre", "Types.SingleType.sym()": "scala/reflect/api/types$singletype.html#sym", "Types.SingleTypeApi": "scala/reflect/api/types$singletypeapi.html", "Types.SingleTypeApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.SingleTypeApi", "Types.SingleTypeApi.pre()": "scala/reflect/api/types$singletypeapi.html#pre", "Types.SingleTypeApi.sym()": "scala/reflect/api/types$singletypeapi.html#sym", "Types.SingleTypeExtractor": "scala/reflect/api/types$singletypeextractor.html", "Types.SingleTypeExtractor()": "scala/reflect/api/types.html#scala.reflect.api.Types.SingleTypeExtractor", "Types.SingleTypeExtractor.SingleTypeExtractor()": "scala/reflect/api/types$singletypeextractor.html#<init>", "Types.SingleTypeExtractor.unapply()": "scala/reflect/api/types$singletypeextractor.html#unapply", "Types.SuperType": "scala/reflect/api/types$supertype.html", "Types.SuperType()": "scala/reflect/api/types.html#SuperType", "Types.SuperType.supertpe()": "scala/reflect/api/types$supertype.html#supertpe", "Types.SuperType.thistpe()": "scala/reflect/api/types$supertype.html#thistpe", "Types.SuperTypeApi": "scala/reflect/api/types$supertypeapi.html", "Types.SuperTypeApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.SuperTypeApi", "Types.SuperTypeApi.supertpe()": "scala/reflect/api/types$supertypeapi.html#supertpe", "Types.SuperTypeApi.thistpe()": "scala/reflect/api/types$supertypeapi.html#thistpe", "Types.SuperTypeExtractor": "scala/reflect/api/types$supertypeextractor.html", "Types.SuperTypeExtractor()": "scala/reflect/api/types.html#scala.reflect.api.Types.SuperTypeExtractor", "Types.SuperTypeExtractor.SuperTypeExtractor()": "scala/reflect/api/types$supertypeextractor.html#<init>", "Types.SuperTypeExtractor.unapply()": "scala/reflect/api/types$supertypeextractor.html#unapply", "Types.ThisType": "scala/reflect/api/types$thistype.html", "Types.ThisType()": "scala/reflect/api/types.html#ThisType", "Types.ThisType.sym()": "scala/reflect/api/types$thistype.html#sym", "Types.ThisTypeApi": "scala/reflect/api/types$thistypeapi.html", "Types.ThisTypeApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.ThisTypeApi", "Types.ThisTypeApi.sym()": "scala/reflect/api/types$thistypeapi.html#sym", "Types.ThisTypeExtractor": "scala/reflect/api/types$thistypeextractor.html", "Types.ThisTypeExtractor()": "scala/reflect/api/types.html#scala.reflect.api.Types.ThisTypeExtractor", "Types.ThisTypeExtractor.ThisTypeExtractor()": "scala/reflect/api/types$thistypeextractor.html#<init>", "Types.ThisTypeExtractor.unapply()": "scala/reflect/api/types$thistypeextractor.html#unapply", "Types.Type": "scala/reflect/api/types$type.html", "Types.Type()": "scala/reflect/api/types.html#scala.reflect.api.Types.Type", "Types.Type.<:<()": "scala/reflect/api/types$type.html#<:<", "Types.Type.=:=()": "scala/reflect/api/types$type.html#=:=", "Types.Type.asSeenFrom()": "scala/reflect/api/types$type.html#asSeenFrom", "Types.Type.baseClasses()": "scala/reflect/api/types$type.html#baseClasses", "Types.Type.baseType()": "scala/reflect/api/types$type.html#baseType", "Types.Type.companion()": "scala/reflect/api/types$type.html#companion", "Types.Type.contains()": "scala/reflect/api/types$type.html#contains", "Types.Type.dealias()": "scala/reflect/api/types$type.html#dealias", "Types.Type.decl()": "scala/reflect/api/types$type.html#decl", "Types.Type.decls()": "scala/reflect/api/types$type.html#decls", "Types.Type.erasure()": "scala/reflect/api/types$type.html#erasure", "Types.Type.etaExpand()": "scala/reflect/api/types$type.html#etaExpand", "Types.Type.exists()": "scala/reflect/api/types$type.html#exists", "Types.Type.finalResultType()": "scala/reflect/api/types$type.html#finalResultType", "Types.Type.find()": "scala/reflect/api/types$type.html#find", "Types.Type.foreach()": "scala/reflect/api/types$type.html#foreach", "Types.Type.map()": "scala/reflect/api/types$type.html#map", "Types.Type.member()": "scala/reflect/api/types$type.html#member", "Types.Type.members()": "scala/reflect/api/types$type.html#members", "Types.Type.orElse()": "scala/reflect/api/types$type.html#orElse", "Types.Type.paramLists()": "scala/reflect/api/types$type.html#paramLists", "Types.Type.resultType()": "scala/reflect/api/types$type.html#resultType", "Types.Type.substituteSymbols()": "scala/reflect/api/types$type.html#substituteSymbols", "Types.Type.substituteTypes()": "scala/reflect/api/types$type.html#substituteTypes", "Types.Type.takesTypeArgs()": "scala/reflect/api/types$type.html#takesTypeArgs", "Types.Type.termSymbol()": "scala/reflect/api/types$type.html#termSymbol", "Types.Type.typeArgs()": "scala/reflect/api/types$type.html#typeArgs", "Types.Type.typeConstructor()": "scala/reflect/api/types$type.html#typeConstructor", "Types.Type.typeParams()": "scala/reflect/api/types$type.html#typeParams", "Types.Type.typeSymbol()": "scala/reflect/api/types$type.html#typeSymbol", "Types.Type.weak_<:<()": "scala/reflect/api/types$type.html#weak_<:<", "Types.Type.widen()": "scala/reflect/api/types$type.html#widen", "Types.TypeApi": "scala/reflect/api/types$typeapi.html", "Types.TypeApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.TypeApi", "Types.TypeApi.<:<()": "scala/reflect/api/types$typeapi.html#<:<", "Types.TypeApi.=:=()": "scala/reflect/api/types$typeapi.html#=:=", "Types.TypeApi.asSeenFrom()": "scala/reflect/api/types$typeapi.html#asSeenFrom", "Types.TypeApi.baseClasses()": "scala/reflect/api/types$typeapi.html#baseClasses", "Types.TypeApi.baseType()": "scala/reflect/api/types$typeapi.html#baseType", "Types.TypeApi.companion()": "scala/reflect/api/types$typeapi.html#companion", "Types.TypeApi.contains()": "scala/reflect/api/types$typeapi.html#contains", "Types.TypeApi.dealias()": "scala/reflect/api/types$typeapi.html#dealias", "Types.TypeApi.decl()": "scala/reflect/api/types$typeapi.html#decl", "Types.TypeApi.decls()": "scala/reflect/api/types$typeapi.html#decls", "Types.TypeApi.erasure()": "scala/reflect/api/types$typeapi.html#erasure", "Types.TypeApi.etaExpand()": "scala/reflect/api/types$typeapi.html#etaExpand", "Types.TypeApi.exists()": "scala/reflect/api/types$typeapi.html#exists", "Types.TypeApi.finalResultType()": "scala/reflect/api/types$typeapi.html#finalResultType", "Types.TypeApi.find()": "scala/reflect/api/types$typeapi.html#find", "Types.TypeApi.foreach()": "scala/reflect/api/types$typeapi.html#foreach", "Types.TypeApi.map()": "scala/reflect/api/types$typeapi.html#map", "Types.TypeApi.member()": "scala/reflect/api/types$typeapi.html#member", "Types.TypeApi.members()": "scala/reflect/api/types$typeapi.html#members", "Types.TypeApi.orElse()": "scala/reflect/api/types$typeapi.html#orElse", "Types.TypeApi.paramLists()": "scala/reflect/api/types$typeapi.html#paramLists", "Types.TypeApi.resultType()": "scala/reflect/api/types$typeapi.html#resultType", "Types.TypeApi.substituteSymbols()": "scala/reflect/api/types$typeapi.html#substituteSymbols", "Types.TypeApi.substituteTypes()": "scala/reflect/api/types$typeapi.html#substituteTypes", "Types.TypeApi.takesTypeArgs()": "scala/reflect/api/types$typeapi.html#takesTypeArgs", "Types.TypeApi.termSymbol()": "scala/reflect/api/types$typeapi.html#termSymbol", "Types.TypeApi.TypeApi()": "scala/reflect/api/types$typeapi.html#<init>", "Types.TypeApi.typeArgs()": "scala/reflect/api/types$typeapi.html#typeArgs", "Types.TypeApi.typeConstructor()": "scala/reflect/api/types$typeapi.html#typeConstructor", "Types.TypeApi.typeParams()": "scala/reflect/api/types$typeapi.html#typeParams", "Types.TypeApi.typeSymbol()": "scala/reflect/api/types$typeapi.html#typeSymbol", "Types.TypeApi.weak_<:<()": "scala/reflect/api/types$typeapi.html#weak_<:<", "Types.TypeApi.widen()": "scala/reflect/api/types$typeapi.html#widen", "Types.TypeBounds": "scala/reflect/api/types$typebounds.html", "Types.TypeBounds()": "scala/reflect/api/types.html#TypeBounds", "Types.TypeBounds.hi()": "scala/reflect/api/types$typebounds.html#hi", "Types.TypeBounds.lo()": "scala/reflect/api/types$typebounds.html#lo", "Types.TypeBoundsApi": "scala/reflect/api/types$typeboundsapi.html", "Types.TypeBoundsApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.TypeBoundsApi", "Types.TypeBoundsApi.hi()": "scala/reflect/api/types$typeboundsapi.html#hi", "Types.TypeBoundsApi.lo()": "scala/reflect/api/types$typeboundsapi.html#lo", "Types.TypeBoundsExtractor": "scala/reflect/api/types$typeboundsextractor.html", "Types.TypeBoundsExtractor()": "scala/reflect/api/types.html#scala.reflect.api.Types.TypeBoundsExtractor", "Types.TypeBoundsExtractor.TypeBoundsExtractor()": "scala/reflect/api/types$typeboundsextractor.html#<init>", "Types.TypeBoundsExtractor.unapply()": "scala/reflect/api/types$typeboundsextractor.html#unapply", "Types.TypeRef": "scala/reflect/api/types$typeref.html", "Types.TypeRef()": "scala/reflect/api/types.html#TypeRef", "Types.TypeRef.args()": "scala/reflect/api/types$typeref.html#args", "Types.TypeRef.pre()": "scala/reflect/api/types$typeref.html#pre", "Types.TypeRef.sym()": "scala/reflect/api/types$typeref.html#sym", "Types.TypeRefApi": "scala/reflect/api/types$typerefapi.html", "Types.TypeRefApi()": "scala/reflect/api/types.html#scala.reflect.api.Types.TypeRefApi", "Types.TypeRefApi.args()": "scala/reflect/api/types$typerefapi.html#args", "Types.TypeRefApi.pre()": "scala/reflect/api/types$typerefapi.html#pre", "Types.TypeRefApi.sym()": "scala/reflect/api/types$typerefapi.html#sym", "Types.TypeRefExtractor": "scala/reflect/api/types$typerefextractor.html", "Types.TypeRefExtractor()": "scala/reflect/api/types.html#scala.reflect.api.Types.TypeRefExtractor", "Types.TypeRefExtractor.TypeRefExtractor()": "scala/reflect/api/types$typerefextractor.html#<init>", "Types.TypeRefExtractor.unapply()": "scala/reflect/api/types$typerefextractor.html#unapply", "Types.WildcardType()": "scala/reflect/api/types.html#WildcardType", "TypeTags": "scala/reflect/api/typetags.html", "TypeTags.symbolOf()": "scala/reflect/api/typetags.html#symbolOf", "TypeTags.typeOf()": "scala/reflect/api/typetags.html#typeOf", "TypeTags.TypeTag": "scala/reflect/api/typetags$typetag.html", "TypeTags.TypeTag$": "scala/reflect/api/typetags$typetag$.html", "TypeTags.TypeTag$.Any()": "scala/reflect/api/typetags$typetag$.html#Any", "TypeTags.TypeTag$.AnyRef()": "scala/reflect/api/typetags$typetag$.html#AnyRef", "TypeTags.TypeTag$.AnyVal()": "scala/reflect/api/typetags$typetag$.html#AnyVal", "TypeTags.TypeTag$.apply()": "scala/reflect/api/typetags$typetag$.html#apply", "TypeTags.TypeTag$.Boolean()": "scala/reflect/api/typetags$typetag$.html#Boolean", "TypeTags.TypeTag$.Byte()": "scala/reflect/api/typetags$typetag$.html#Byte", "TypeTags.TypeTag$.Char()": "scala/reflect/api/typetags$typetag$.html#Char", "TypeTags.TypeTag$.Double()": "scala/reflect/api/typetags$typetag$.html#Double", "TypeTags.TypeTag$.Float()": "scala/reflect/api/typetags$typetag$.html#Float", "TypeTags.TypeTag$.Int()": "scala/reflect/api/typetags$typetag$.html#Int", "TypeTags.TypeTag$.Long()": "scala/reflect/api/typetags$typetag$.html#Long", "TypeTags.TypeTag$.Nothing()": "scala/reflect/api/typetags$typetag$.html#Nothing", "TypeTags.TypeTag$.Null()": "scala/reflect/api/typetags$typetag$.html#Null", "TypeTags.TypeTag$.Object()": "scala/reflect/api/typetags$typetag$.html#Object", "TypeTags.TypeTag$.Short()": "scala/reflect/api/typetags$typetag$.html#Short", "TypeTags.TypeTag$.unapply()": "scala/reflect/api/typetags$typetag$.html#unapply", "TypeTags.TypeTag$.Unit()": "scala/reflect/api/typetags$typetag$.html#Unit", "TypeTags.TypeTag()": "scala/reflect/api/typetags.html#scala.reflect.api.TypeTags.TypeTag", "TypeTags.typeTag()": "scala/reflect/api/typetags.html#typeTag", "TypeTags.TypeTag.canEqual()": "scala/reflect/api/typetags$typetag.html#canEqual", "TypeTags.TypeTag.equals()": "scala/reflect/api/typetags$typetag.html#equals", "TypeTags.TypeTag.hashCode()": "scala/reflect/api/typetags$typetag.html#hashCode", "TypeTags.TypeTag.in()": "scala/reflect/api/typetags$typetag.html#in", "TypeTags.TypeTag.toString()": "scala/reflect/api/typetags$typetag.html#toString", "TypeTags.weakTypeOf()": "scala/reflect/api/typetags.html#weakTypeOf", "TypeTags.WeakTypeTag": "scala/reflect/api/typetags$weaktypetag.html", "TypeTags.WeakTypeTag$": "scala/reflect/api/typetags$weaktypetag$.html", "TypeTags.WeakTypeTag$.Any()": "scala/reflect/api/typetags$weaktypetag$.html#Any", "TypeTags.WeakTypeTag$.AnyRef()": "scala/reflect/api/typetags$weaktypetag$.html#AnyRef", "TypeTags.WeakTypeTag$.AnyVal()": "scala/reflect/api/typetags$weaktypetag$.html#AnyVal", "TypeTags.WeakTypeTag$.apply()": "scala/reflect/api/typetags$weaktypetag$.html#apply", "TypeTags.WeakTypeTag$.Boolean()": "scala/reflect/api/typetags$weaktypetag$.html#Boolean", "TypeTags.WeakTypeTag$.Byte()": "scala/reflect/api/typetags$weaktypetag$.html#Byte", "TypeTags.WeakTypeTag$.Char()": "scala/reflect/api/typetags$weaktypetag$.html#Char", "TypeTags.WeakTypeTag$.Double()": "scala/reflect/api/typetags$weaktypetag$.html#Double", "TypeTags.WeakTypeTag$.Float()": "scala/reflect/api/typetags$weaktypetag$.html#Float", "TypeTags.WeakTypeTag$.Int()": "scala/reflect/api/typetags$weaktypetag$.html#Int", "TypeTags.WeakTypeTag$.Long()": "scala/reflect/api/typetags$weaktypetag$.html#Long", "TypeTags.WeakTypeTag$.Nothing()": "scala/reflect/api/typetags$weaktypetag$.html#Nothing", "TypeTags.WeakTypeTag$.Null()": "scala/reflect/api/typetags$weaktypetag$.html#Null", "TypeTags.WeakTypeTag$.Object()": "scala/reflect/api/typetags$weaktypetag$.html#Object", "TypeTags.WeakTypeTag$.Short()": "scala/reflect/api/typetags$weaktypetag$.html#Short", "TypeTags.WeakTypeTag$.unapply()": "scala/reflect/api/typetags$weaktypetag$.html#unapply", "TypeTags.WeakTypeTag$.Unit()": "scala/reflect/api/typetags$weaktypetag$.html#Unit", "TypeTags.WeakTypeTag()": "scala/reflect/api/typetags.html#scala.reflect.api.TypeTags.WeakTypeTag", "TypeTags.weakTypeTag()": "scala/reflect/api/typetags.html#weakTypeTag", "TypeTags.WeakTypeTag.canEqual()": "scala/reflect/api/typetags$weaktypetag.html#canEqual", "TypeTags.WeakTypeTag.equals()": "scala/reflect/api/typetags$weaktypetag.html#equals", "TypeTags.WeakTypeTag.hashCode()": "scala/reflect/api/typetags$weaktypetag.html#hashCode", "TypeTags.WeakTypeTag.in()": "scala/reflect/api/typetags$weaktypetag.html#in", "TypeTags.WeakTypeTag.mirror()": "scala/reflect/api/typetags$weaktypetag.html#mirror", "TypeTags.WeakTypeTag.toString()": "scala/reflect/api/typetags$weaktypetag.html#toString", "TypeTags.WeakTypeTag.tpe()": "scala/reflect/api/typetags$weaktypetag.html#tpe", "UnexpectedReificationException": "scala/reflect/macros/unexpectedreificationexception.html", "UnexpectedReificationException.cause()": "scala/reflect/macros/unexpectedreificationexception.html#cause", "UnexpectedReificationException.msg()": "scala/reflect/macros/unexpectedreificationexception.html#msg", "UnexpectedReificationException.pos()": "scala/reflect/macros/unexpectedreificationexception.html#pos", "UnexpectedReificationException.UnexpectedReificationException()": "scala/reflect/macros/unexpectedreificationexception.html#<init>", "Universe": "scala/reflect/macros/universe.html", "Universe.CompilationUnit": "scala/reflect/macros/universe$compilationunit.html", "Universe.CompilationUnit()": "scala/reflect/macros/universe.html#scala.reflect.macros.Universe.CompilationUnit", "Universe.CompilationUnitContextApi": "scala/reflect/macros/universe$compilationunitcontextapi.html", "Universe.CompilationUnitContextApi()": "scala/reflect/macros/universe.html#scala.reflect.macros.Universe.CompilationUnitContextApi", "Universe.Internal()": "scala/reflect/macros/universe.html#scala.reflect.macros.Universe.Internal", "Universe.MacroCompatApi": "scala/reflect/macros/universe$macrocompatapi.html", "Universe.MacroCompatApi()": "scala/reflect/macros/universe.html#scala.reflect.macros.Universe.MacroCompatApi", "Universe.MacroCompatApi.CompatibleTypeTree": "scala/reflect/macros/universe$macrocompatapi$compatibletypetree.html", "Universe.MacroCompatApi.CompatibleTypeTree()": "scala/reflect/macros/universe$macrocompatapi.html#scala.reflect.macros.Universe.MacroCompatApi.CompatibleTypeTree", "Universe.MacroCompatApi.CompatibleTypeTree.CompatibleTypeTree()": "scala/reflect/macros/universe$macrocompatapi$compatibletypetree.html#<init>", "Universe.MacroCompatApi.MacroCompatibleSymbol": "scala/reflect/macros/universe$macrocompatapi$macrocompatiblesymbol.html", "Universe.MacroCompatApi.MacroCompatibleSymbol()": "scala/reflect/macros/universe$macrocompatapi.html#scala.reflect.macros.Universe.MacroCompatApi.MacroCompatibleSymbol", "Universe.MacroCompatApi.MacroCompatibleSymbol.MacroCompatibleSymbol()": "scala/reflect/macros/universe$macrocompatapi$macrocompatiblesymbol.html#<init>", "Universe.MacroCompatApi.MacroCompatibleTree": "scala/reflect/macros/universe$macrocompatapi$macrocompatibletree.html", "Universe.MacroCompatApi.MacroCompatibleTree()": "scala/reflect/macros/universe$macrocompatapi.html#scala.reflect.macros.Universe.MacroCompatApi.MacroCompatibleTree", "Universe.MacroCompatApi.MacroCompatibleTree.MacroCompatibleTree()": "scala/reflect/macros/universe$macrocompatapi$macrocompatibletree.html#<init>", "Universe.MacroInternalApi": "scala/reflect/macros/universe$macrointernalapi.html", "Universe.MacroInternalApi()": "scala/reflect/macros/universe.html#scala.reflect.macros.Universe.MacroInternalApi", "Universe.MacroInternalApi.attachments()": "scala/reflect/macros/universe$macrointernalapi.html#attachments", "Universe.MacroInternalApi.capturedVariableType()": "scala/reflect/macros/universe$macrointernalapi.html#capturedVariableType", "Universe.MacroInternalApi.captureVariable()": "scala/reflect/macros/universe$macrointernalapi.html#captureVariable", "Universe.MacroInternalApi.changeOwner()": "scala/reflect/macros/universe$macrointernalapi.html#changeOwner", "Universe.MacroInternalApi.Decorators()": "scala/reflect/macros/universe$macrointernalapi.html#scala.reflect.macros.Universe.MacroInternalApi.Decorators", "Universe.MacroInternalApi.defineType()": "scala/reflect/macros/universe$macrointernalapi.html#defineType", "Universe.MacroInternalApi.enter()": "scala/reflect/macros/universe$macrointernalapi.html#enter", "Universe.MacroInternalApi.gen()": "scala/reflect/macros/universe$macrointernalapi.html#gen", "Universe.MacroInternalApi.MacroDecoratorApi": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi.html", "Universe.MacroInternalApi.MacroDecoratorApi()": "scala/reflect/macros/universe$macrointernalapi.html#scala.reflect.macros.Universe.MacroInternalApi.MacroDecoratorApi", "Universe.MacroInternalApi.MacroDecoratorApi.MacroScopeDecoratorApi": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macroscopedecoratorapi.html", "Universe.MacroInternalApi.MacroDecoratorApi.MacroScopeDecoratorApi()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi.html#scala.reflect.macros.Universe.MacroInternalApi.MacroDecoratorApi.MacroScopeDecoratorApi", "Universe.MacroInternalApi.MacroDecoratorApi.MacroScopeDecoratorApi.enter()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macroscopedecoratorapi.html#enter", "Universe.MacroInternalApi.MacroDecoratorApi.MacroScopeDecoratorApi.MacroScopeDecoratorApi()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macroscopedecoratorapi.html#<init>", "Universe.MacroInternalApi.MacroDecoratorApi.MacroScopeDecoratorApi.scope()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macroscopedecoratorapi.html#scope", "Universe.MacroInternalApi.MacroDecoratorApi.MacroScopeDecoratorApi.unlink()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macroscopedecoratorapi.html#unlink", "Universe.MacroInternalApi.MacroDecoratorApi.MacroSymbolDecoratorApi": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrosymboldecoratorapi.html", "Universe.MacroInternalApi.MacroDecoratorApi.MacroSymbolDecoratorApi()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi.html#scala.reflect.macros.Universe.MacroInternalApi.MacroDecoratorApi.MacroSymbolDecoratorApi", "Universe.MacroInternalApi.MacroDecoratorApi.MacroSymbolDecoratorApi.attachments()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrosymboldecoratorapi.html#attachments", "Universe.MacroInternalApi.MacroDecoratorApi.MacroSymbolDecoratorApi.MacroSymbolDecoratorApi()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrosymboldecoratorapi.html#<init>", "Universe.MacroInternalApi.MacroDecoratorApi.MacroSymbolDecoratorApi.removeAttachment()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrosymboldecoratorapi.html#removeAttachment", "Universe.MacroInternalApi.MacroDecoratorApi.MacroSymbolDecoratorApi.resetFlag()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrosymboldecoratorapi.html#resetFlag", "Universe.MacroInternalApi.MacroDecoratorApi.MacroSymbolDecoratorApi.setAnnotations()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrosymboldecoratorapi.html#setAnnotations", "Universe.MacroInternalApi.MacroDecoratorApi.MacroSymbolDecoratorApi.setFlag()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrosymboldecoratorapi.html#setFlag", "Universe.MacroInternalApi.MacroDecoratorApi.MacroSymbolDecoratorApi.setInfo()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrosymboldecoratorapi.html#setInfo", "Universe.MacroInternalApi.MacroDecoratorApi.MacroSymbolDecoratorApi.setName()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrosymboldecoratorapi.html#setName", "Universe.MacroInternalApi.MacroDecoratorApi.MacroSymbolDecoratorApi.setOwner()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrosymboldecoratorapi.html#setOwner", "Universe.MacroInternalApi.MacroDecoratorApi.MacroSymbolDecoratorApi.setPrivateWithin()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrosymboldecoratorapi.html#setPrivateWithin", "Universe.MacroInternalApi.MacroDecoratorApi.MacroSymbolDecoratorApi.symbol()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrosymboldecoratorapi.html#symbol", "Universe.MacroInternalApi.MacroDecoratorApi.MacroSymbolDecoratorApi.updateAttachment()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrosymboldecoratorapi.html#updateAttachment", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTreeDecoratorApi": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrotreedecoratorapi.html", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTreeDecoratorApi()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi.html#scala.reflect.macros.Universe.MacroInternalApi.MacroDecoratorApi.MacroTreeDecoratorApi", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTreeDecoratorApi.attachments()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrotreedecoratorapi.html#attachments", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTreeDecoratorApi.changeOwner()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrotreedecoratorapi.html#changeOwner", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTreeDecoratorApi.defineType()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrotreedecoratorapi.html#defineType", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTreeDecoratorApi.MacroTreeDecoratorApi()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrotreedecoratorapi.html#<init>", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTreeDecoratorApi.removeAttachment()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrotreedecoratorapi.html#removeAttachment", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTreeDecoratorApi.setPos()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrotreedecoratorapi.html#setPos", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTreeDecoratorApi.setSymbol()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrotreedecoratorapi.html#setSymbol", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTreeDecoratorApi.setType()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrotreedecoratorapi.html#setType", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTreeDecoratorApi.tree()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrotreedecoratorapi.html#tree", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTreeDecoratorApi.updateAttachment()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrotreedecoratorapi.html#updateAttachment", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTypeTreeDecoratorApi": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrotypetreedecoratorapi.html", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTypeTreeDecoratorApi()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi.html#scala.reflect.macros.Universe.MacroInternalApi.MacroDecoratorApi.MacroTypeTreeDecoratorApi", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTypeTreeDecoratorApi.MacroTypeTreeDecoratorApi()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrotypetreedecoratorapi.html#<init>", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTypeTreeDecoratorApi.setOriginal()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrotypetreedecoratorapi.html#setOriginal", "Universe.MacroInternalApi.MacroDecoratorApi.MacroTypeTreeDecoratorApi.tt()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi$macrotypetreedecoratorapi.html#tt", "Universe.MacroInternalApi.MacroDecoratorApi.ScopeDecorator()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi.html#scala.reflect.macros.Universe.MacroInternalApi.MacroDecoratorApi.ScopeDecorator", "Universe.MacroInternalApi.MacroDecoratorApi.scopeDecorator()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi.html#scopeDecorator", "Universe.MacroInternalApi.MacroDecoratorApi.SymbolDecorator()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi.html#scala.reflect.macros.Universe.MacroInternalApi.MacroDecoratorApi.SymbolDecorator", "Universe.MacroInternalApi.MacroDecoratorApi.TreeDecorator()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi.html#scala.reflect.macros.Universe.MacroInternalApi.MacroDecoratorApi.TreeDecorator", "Universe.MacroInternalApi.MacroDecoratorApi.TypeTreeDecorator()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi.html#scala.reflect.macros.Universe.MacroInternalApi.MacroDecoratorApi.TypeTreeDecorator", "Universe.MacroInternalApi.MacroDecoratorApi.typeTreeDecorator()": "scala/reflect/macros/universe$macrointernalapi$macrodecoratorapi.html#typeTreeDecorator", "Universe.MacroInternalApi.referenceCapturedVariable()": "scala/reflect/macros/universe$macrointernalapi.html#referenceCapturedVariable", "Universe.MacroInternalApi.removeAttachment()": "scala/reflect/macros/universe$macrointernalapi.html#removeAttachment", "Universe.MacroInternalApi.resetFlag()": "scala/reflect/macros/universe$macrointernalapi.html#resetFlag", "Universe.MacroInternalApi.setAnnotations()": "scala/reflect/macros/universe$macrointernalapi.html#setAnnotations", "Universe.MacroInternalApi.setFlag()": "scala/reflect/macros/universe$macrointernalapi.html#setFlag", "Universe.MacroInternalApi.setInfo()": "scala/reflect/macros/universe$macrointernalapi.html#setInfo", "Universe.MacroInternalApi.setName()": "scala/reflect/macros/universe$macrointernalapi.html#setName", "Universe.MacroInternalApi.setOriginal()": "scala/reflect/macros/universe$macrointernalapi.html#setOriginal", "Universe.MacroInternalApi.setOwner()": "scala/reflect/macros/universe$macrointernalapi.html#setOwner", "Universe.MacroInternalApi.setPos()": "scala/reflect/macros/universe$macrointernalapi.html#setPos", "Universe.MacroInternalApi.setPrivateWithin()": "scala/reflect/macros/universe$macrointernalapi.html#setPrivateWithin", "Universe.MacroInternalApi.setSymbol()": "scala/reflect/macros/universe$macrointernalapi.html#setSymbol", "Universe.MacroInternalApi.setType()": "scala/reflect/macros/universe$macrointernalapi.html#setType", "Universe.MacroInternalApi.subpatterns()": "scala/reflect/macros/universe$macrointernalapi.html#subpatterns", "Universe.MacroInternalApi.unlink()": "scala/reflect/macros/universe$macrointernalapi.html#unlink", "Universe.MacroInternalApi.updateAttachment()": "scala/reflect/macros/universe$macrointernalapi.html#updateAttachment", "Universe.reify()": "scala/reflect/api/universe.html#reify", "Universe.Run": "scala/reflect/macros/universe$run.html", "Universe.Run()": "scala/reflect/macros/universe.html#scala.reflect.macros.Universe.Run", "Universe.RunContextApi": "scala/reflect/macros/universe$runcontextapi.html", "Universe.RunContextApi()": "scala/reflect/macros/universe.html#scala.reflect.macros.Universe.RunContextApi", "Universe.TreeGen": "scala/reflect/macros/universe$treegen.html", "Universe.TreeGen()": "scala/reflect/macros/universe.html#scala.reflect.macros.Universe.TreeGen", "Universe.TreeGen.mkAttributedIdent()": "scala/reflect/macros/universe$treegen.html#mkAttributedIdent", "Universe.TreeGen.mkAttributedQualifier()": "scala/reflect/macros/universe$treegen.html#mkAttributedQualifier", "Universe.TreeGen.mkAttributedRef()": "scala/reflect/macros/universe$treegen.html#mkAttributedRef", "Universe.TreeGen.mkAttributedSelect()": "scala/reflect/macros/universe$treegen.html#mkAttributedSelect", "Universe.TreeGen.mkAttributedStableRef()": "scala/reflect/macros/universe$treegen.html#mkAttributedStableRef", "Universe.TreeGen.mkAttributedThis()": "scala/reflect/macros/universe$treegen.html#mkAttributedThis", "Universe.TreeGen.mkCast()": "scala/reflect/macros/universe$treegen.html#mkCast", "Universe.TreeGen.mkMethodCall()": "scala/reflect/macros/universe$treegen.html#mkMethodCall", "Universe.TreeGen.mkNullaryCall()": "scala/reflect/macros/universe$treegen.html#mkNullaryCall", "Universe.TreeGen.mkRuntimeUniverseRef()": "scala/reflect/macros/universe$treegen.html#mkRuntimeUniverseRef", "Universe.TreeGen.mkUnattributedRef()": "scala/reflect/macros/universe$treegen.html#mkUnattributedRef", "Universe.TreeGen.mkZero()": "scala/reflect/macros/universe$treegen.html#mkZero", "Universe.TreeGen.stabilize()": "scala/reflect/macros/universe$treegen.html#stabilize", "Universe.Universe()": "scala/reflect/macros/universe.html#<init>", "whitebox": "scala/reflect/macros/whitebox/index.html", "whitebox.Context()": "scala/reflect/macros/whitebox/index.html#scala.reflect.macros.whitebox.Context"}