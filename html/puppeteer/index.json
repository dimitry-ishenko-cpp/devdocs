{"Accessibility": "index.html#class-accessibility", "accessibility.snapshot()": "index.html#accessibilitysnapshotoptions", "Browser": "index.html#class-browser", "Browser event: disconnected": "index.html#event-disconnected", "Browser event: targetchanged": "index.html#event-targetchanged", "Browser event: targetcreated": "index.html#event-targetcreated", "Browser event: targetdestroyed": "index.html#event-targetdestroyed", "browser.browserContexts()": "index.html#browserbrowsercontexts", "browser.close()": "index.html#browserclose", "browser.createIncognitoBrowserContext()": "index.html#browsercreateincognitobrowsercontext", "browser.defaultBrowserContext()": "index.html#browserdefaultbrowsercontext", "browser.disconnect()": "index.html#browserdisconnect", "browser.isConnected()": "index.html#browserisconnected", "browser.newPage()": "index.html#browsernewpage", "browser.pages()": "index.html#browserpages", "browser.process()": "index.html#browserprocess", "browser.target()": "index.html#browsertarget", "browser.targets()": "index.html#browsertargets", "browser.userAgent()": "index.html#browseruseragent", "browser.version()": "index.html#browserversion", "browser.waitForTarget()": "index.html#browserwaitfortargetpredicate-options", "browser.wsEndpoint()": "index.html#browserwsendpoint", "BrowserContext": "index.html#class-browsercontext", "BrowserContext event: targetchanged": "index.html#event-targetchanged-1", "BrowserContext event: targetcreated": "index.html#event-targetcreated-1", "BrowserContext event: targetdestroyed": "index.html#event-targetdestroyed-1", "browserContext.browser()": "index.html#browsercontextbrowser", "browserContext.clearPermissionOverrides()": "index.html#browsercontextclearpermissionoverrides", "browserContext.close()": "index.html#browsercontextclose", "browserContext.isIncognito()": "index.html#browsercontextisincognito", "browserContext.newPage()": "index.html#browsercontextnewpage", "browserContext.overridePermissions()": "index.html#browsercontextoverridepermissionsorigin-permissions", "browserContext.pages()": "index.html#browsercontextpages", "browserContext.targets()": "index.html#browsercontexttargets", "browserContext.waitForTarget()": "index.html#browsercontextwaitfortargetpredicate-options", "BrowserFetcher": "index.html#class-browserfetcher", "browserFetcher.canDownload()": "index.html#browserfetchercandownloadrevision", "browserFetcher.download()": "index.html#browserfetcherdownloadrevision-progresscallback", "browserFetcher.host()": "index.html#browserfetcherhost", "browserFetcher.localRevisions()": "index.html#browserfetcherlocalrevisions", "browserFetcher.platform()": "index.html#browserfetcherplatform", "browserFetcher.product()": "index.html#browserfetcherproduct", "browserFetcher.remove()": "index.html#browserfetcherremoverevision", "browserFetcher.revisionInfo()": "index.html#browserfetcherrevisioninforevision", "CDPSession": "index.html#class-cdpsession", "cdpSession.detach()": "index.html#cdpsessiondetach", "cdpSession.send()": "index.html#cdpsessionsendmethod-paramargs", "ConsoleMessage": "index.html#class-consolemessage", "consoleMessage.args()": "index.html#consolemessageargs", "consoleMessage.location()": "index.html#consolemessagelocation", "consoleMessage.stackTrace()": "index.html#consolemessagestacktrace", "consoleMessage.text()": "index.html#consolemessagetext", "consoleMessage.type()": "index.html#consolemessagetype", "Coverage": "index.html#class-coverage", "coverage.startCSSCoverage()": "index.html#coveragestartcsscoverageoptions", "coverage.startJSCoverage()": "index.html#coveragestartjscoverageoptions", "coverage.stopCSSCoverage()": "index.html#coveragestopcsscoverage", "coverage.stopJSCoverage()": "index.html#coveragestopjscoverage", "CustomQueryHandler": "index.html#interface-customqueryhandler", "Dialog": "index.html#class-dialog", "dialog.accept()": "index.html#dialogacceptprompttext", "dialog.defaultValue()": "index.html#dialogdefaultvalue", "dialog.dismiss()": "index.html#dialogdismiss", "dialog.message()": "index.html#dialogmessage", "dialog.type()": "index.html#dialogtype", "ElementHandle": "index.html#class-elementhandle", "elementHandle.$$()": "index.html#elementhandleselector-1", "elementHandle.$$eval()": "index.html#elementhandleevalselector-pagefunction-args", "elementHandle.$()": "index.html#elementhandleselector", "elementHandle.$eval()": "index.html#elementhandleevalselector-pagefunction-args-1", "elementHandle.$x()": "index.html#elementhandlexexpression", "elementHandle.asElement()": "index.html#elementhandleaselement", "elementHandle.boundingBox()": "index.html#elementhandleboundingbox", "elementHandle.boxModel()": "index.html#elementhandleboxmodel", "elementHandle.click()": "index.html#elementhandleclickoptions", "elementHandle.contentFrame()": "index.html#elementhandlecontentframe", "elementHandle.dispose()": "index.html#elementhandledispose", "elementHandle.evaluate()": "index.html#elementhandleevaluatepagefunction-args", "elementHandle.evaluateHandle()": "index.html#elementhandleevaluatehandlepagefunction-args", "elementHandle.executionContext()": "index.html#elementhandleexecutioncontext", "elementHandle.focus()": "index.html#elementhandlefocus", "elementHandle.getProperties()": "index.html#elementhandlegetproperties", "elementHandle.getProperty()": "index.html#elementhandlegetpropertypropertyname", "elementHandle.hover()": "index.html#elementhandlehover", "elementHandle.isIntersectingViewport()": "index.html#elementhandleisintersectingviewport", "elementHandle.jsonValue()": "index.html#elementhandlejsonvalue", "elementHandle.press()": "index.html#elementhandlepresskey-options", "elementHandle.screenshot()": "index.html#elementhandlescreenshotoptions", "elementHandle.select()": "index.html#elementhandleselectvalues", "elementHandle.tap()": "index.html#elementhandletap", "elementHandle.toString()": "index.html#elementhandletostring", "elementHandle.type()": "index.html#elementhandletypetext-options", "elementHandle.uploadFile()": "index.html#elementhandleuploadfilefilepaths", "Environment Variables": "index.html#environment-variables", "EventEmitter": "index.html#class-eventemitter", "eventEmitter.addListener()": "index.html#eventemitteraddlistenerevent-handler", "eventEmitter.emit()": "index.html#eventemitteremitevent-eventdata", "eventEmitter.listenerCount()": "index.html#eventemitterlistenercountevent", "eventEmitter.off()": "index.html#eventemitteroffevent-handler", "eventEmitter.on()": "index.html#eventemitteronevent-handler", "eventEmitter.once()": "index.html#eventemitteronceevent-handler", "eventEmitter.removeAllListeners()": "index.html#eventemitterremovealllistenersevent", "eventEmitter.removeListener()": "index.html#eventemitterremovelistenerevent-handler", "ExecutionContext": "index.html#class-executioncontext", "executionContext.evaluate()": "index.html#executioncontextevaluatepagefunction-args", "executionContext.evaluateHandle()": "index.html#executioncontextevaluatehandlepagefunction-args", "executionContext.frame()": "index.html#executioncontextframe", "executionContext.queryObjects()": "index.html#executioncontextqueryobjectsprototypehandle", "FileChooser": "index.html#class-filechooser", "fileChooser.accept()": "index.html#filechooseracceptfilepaths", "fileChooser.cancel()": "index.html#filechoosercancel", "fileChooser.isMultiple()": "index.html#filechooserismultiple", "Frame": "index.html#class-frame", "frame.$$()": "index.html#frameselector-1", "frame.$$eval()": "index.html#frameevalselector-pagefunction-args", "frame.$()": "index.html#frameselector", "frame.$eval()": "index.html#frameevalselector-pagefunction-args-1", "frame.$x()": "index.html#framexexpression", "frame.addScriptTag()": "index.html#frameaddscripttagoptions", "frame.addStyleTag()": "index.html#frameaddstyletagoptions", "frame.childFrames()": "index.html#framechildframes", "frame.click()": "index.html#frameclickselector-options", "frame.content()": "index.html#framecontent", "frame.evaluate()": "index.html#frameevaluatepagefunction-args", "frame.evaluateHandle()": "index.html#frameevaluatehandlepagefunction-args", "frame.executionContext()": "index.html#frameexecutioncontext", "frame.focus()": "index.html#framefocusselector", "frame.goto()": "index.html#framegotourl-options", "frame.hover()": "index.html#framehoverselector", "frame.isDetached()": "index.html#frameisdetached", "frame.name()": "index.html#framename", "frame.parentFrame()": "index.html#frameparentframe", "frame.select()": "index.html#frameselectselector-values", "frame.setContent()": "index.html#framesetcontenthtml-options", "frame.tap()": "index.html#frametapselector", "frame.title()": "index.html#frametitle", "frame.type()": "index.html#frametypeselector-text-options", "frame.url()": "index.html#frameurl", "frame.waitFor()": "index.html#framewaitforselectororfunctionortimeout-options-args", "frame.waitForFunction()": "index.html#framewaitforfunctionpagefunction-options-args", "frame.waitForNavigation()": "index.html#framewaitfornavigationoptions", "frame.waitForSelector()": "index.html#framewaitforselectorselector-options", "frame.waitForTimeout()": "index.html#framewaitfortimeoutmilliseconds", "frame.waitForXPath()": "index.html#framewaitforxpathxpath-options", "GeolocationOptions": "index.html#geolocationoptions", "HTTPRequest": "index.html#class-httprequest", "httpRequest.abort()": "index.html#httprequestaborterrorcode", "httpRequest.continue()": "index.html#httprequestcontinueoverrides", "httpRequest.failure()": "index.html#httprequestfailure", "httpRequest.frame()": "index.html#httprequestframe", "httpRequest.headers()": "index.html#httprequestheaders", "httpRequest.isNavigationRequest()": "index.html#httprequestisnavigationrequest", "httpRequest.method()": "index.html#httprequestmethod", "httpRequest.postData()": "index.html#httprequestpostdata", "httpRequest.redirectChain()": "index.html#httprequestredirectchain", "httpRequest.resourceType()": "index.html#httprequestresourcetype", "httpRequest.respond()": "index.html#httprequestrespondresponse", "httpRequest.response()": "index.html#httprequestresponse", "httpRequest.url()": "index.html#httprequesturl", "HTTPResponse": "index.html#class-httpresponse", "httpResponse.buffer()": "index.html#httpresponsebuffer", "httpResponse.frame()": "index.html#httpresponseframe", "httpResponse.fromCache()": "index.html#httpresponsefromcache", "httpResponse.fromServiceWorker()": "index.html#httpresponsefromserviceworker", "httpResponse.headers()": "index.html#httpresponseheaders", "httpResponse.json()": "index.html#httpresponsejson", "httpResponse.ok()": "index.html#httpresponseok", "httpResponse.remoteAddress()": "index.html#httpresponseremoteaddress", "httpResponse.request()": "index.html#httpresponserequest", "httpResponse.securityDetails()": "index.html#httpresponsesecuritydetails", "httpResponse.status()": "index.html#httpresponsestatus", "httpResponse.statusText()": "index.html#httpresponsestatustext", "httpResponse.text()": "index.html#httpresponsetext", "httpResponse.url()": "index.html#httpresponseurl", "JSHandle": "index.html#class-jshandle", "jsHandle.asElement()": "index.html#jshandleaselement", "jsHandle.dispose()": "index.html#jshandledispose", "jsHandle.evaluate()": "index.html#jshandleevaluatepagefunction-args", "jsHandle.evaluateHandle()": "index.html#jshandleevaluatehandlepagefunction-args", "jsHandle.executionContext()": "index.html#jshandleexecutioncontext", "jsHandle.getProperties()": "index.html#jshandlegetproperties", "jsHandle.getProperty()": "index.html#jshandlegetpropertypropertyname", "jsHandle.jsonValue()": "index.html#jshandlejsonvalue", "Keyboard": "index.html#class-keyboard", "keyboard.down()": "index.html#keyboarddownkey-options", "keyboard.press()": "index.html#keyboardpresskey-options", "keyboard.sendCharacter()": "index.html#keyboardsendcharacterchar", "keyboard.type()": "index.html#keyboardtypetext-options", "keyboard.up()": "index.html#keyboardupkey", "Mouse": "index.html#class-mouse", "mouse.click()": "index.html#mouseclickx-y-options", "mouse.down()": "index.html#mousedownoptions", "mouse.move()": "index.html#mousemovex-y-options", "mouse.up()": "index.html#mouseupoptions", "mouse.wheel()": "index.html#mousewheeloptions", "Overview": "index.html#overview", "Page": "index.html#class-page", "Page event: close": "index.html#event-close", "Page event: console": "index.html#event-console", "Page event: dialog": "index.html#event-dialog", "Page event: domcontentloaded": "index.html#event-domcontentloaded", "Page event: error": "index.html#event-error", "Page event: frameattached": "index.html#event-frameattached", "Page event: framedetached": "index.html#event-framedetached", "Page event: framenavigated": "index.html#event-framenavigated", "Page event: load": "index.html#event-load", "Page event: metrics": "index.html#event-metrics", "Page event: pageerror": "index.html#event-pageerror", "Page event: popup": "index.html#event-popup", "Page event: request": "index.html#event-request", "Page event: requestfailed": "index.html#event-requestfailed", "Page event: requestfinished": "index.html#event-requestfinished", "Page event: response": "index.html#event-response", "Page event: workercreated": "index.html#event-workercreated", "Page event: workerdestroyed": "index.html#event-workerdestroyed", "page.$$()": "index.html#pageselector-1", "page.$$eval()": "index.html#pageevalselector-pagefunction-args", "page.$()": "index.html#pageselector", "page.$eval()": "index.html#pageevalselector-pagefunction-args-1", "page.$x()": "index.html#pagexexpression", "page.accessibility": "index.html#pageaccessibility", "page.addScriptTag()": "index.html#pageaddscripttagoptions", "page.addStyleTag()": "index.html#pageaddstyletagoptions", "page.authenticate()": "index.html#pageauthenticatecredentials", "page.bringToFront()": "index.html#pagebringtofront", "page.browser()": "index.html#pagebrowser", "page.browserContext()": "index.html#pagebrowsercontext", "page.click()": "index.html#pageclickselector-options", "page.close()": "index.html#pagecloseoptions", "page.content()": "index.html#pagecontent", "page.cookies()": "index.html#pagecookiesurls", "page.coverage": "index.html#pagecoverage", "page.deleteCookie()": "index.html#pagedeletecookiecookies", "page.emulate()": "index.html#pageemulateoptions", "page.emulateIdleState()": "index.html#pageemulateidlestateoverrides", "page.emulateMediaFeatures()": "index.html#pageemulatemediafeaturesfeatures", "page.emulateMediaType()": "index.html#pageemulatemediatypetype", "page.emulateNetworkConditions()": "index.html#pageemulatenetworkconditionsnetworkconditions", "page.emulateTimezone()": "index.html#pageemulatetimezonetimezoneid", "page.emulateVisionDeficiency()": "index.html#pageemulatevisiondeficiencytype", "page.evaluate()": "index.html#pageevaluatepagefunction-args", "page.evaluateHandle()": "index.html#pageevaluatehandlepagefunction-args", "page.evaluateOnNewDocument()": "index.html#pageevaluateonnewdocumentpagefunction-args", "page.exposeFunction()": "index.html#pageexposefunctionname-puppeteerfunction", "page.focus()": "index.html#pagefocusselector", "page.frames()": "index.html#pageframes", "page.goBack()": "index.html#pagegobackoptions", "page.goForward()": "index.html#pagegoforwardoptions", "page.goto()": "index.html#pagegotourl-options", "page.hover()": "index.html#pagehoverselector", "page.isClosed()": "index.html#pageisclosed", "page.isJavaScriptEnabled()": "index.html#pageisjavascriptenabled", "page.keyboard": "index.html#pagekeyboard", "page.mainFrame()": "index.html#pagemainframe", "page.metrics()": "index.html#pagemetrics", "page.mouse": "index.html#pagemouse", "page.pdf()": "index.html#pagepdfoptions", "page.queryObjects()": "index.html#pagequeryobjectsprototypehandle", "page.reload()": "index.html#pagereloadoptions", "page.screenshot()": "index.html#pagescreenshotoptions", "page.select()": "index.html#pageselectselector-values", "page.setBypassCSP()": "index.html#pagesetbypasscspenabled", "page.setCacheEnabled()": "index.html#pagesetcacheenabledenabled", "page.setContent()": "index.html#pagesetcontenthtml-options", "page.setCookie()": "index.html#pagesetcookiecookies", "page.setDefaultNavigationTimeout()": "index.html#pagesetdefaultnavigationtimeouttimeout", "page.setDefaultTimeout()": "index.html#pagesetdefaulttimeouttimeout", "page.setExtraHTTPHeaders()": "index.html#pagesetextrahttpheadersheaders", "page.setGeolocation()": "index.html#pagesetgeolocationoptions", "page.setJavaScriptEnabled()": "index.html#pagesetjavascriptenabledenabled", "page.setOfflineMode()": "index.html#pagesetofflinemodeenabled", "page.setRequestInterception()": "index.html#pagesetrequestinterceptionvalue", "page.setUserAgent()": "index.html#pagesetuseragentuseragent", "page.setViewport()": "index.html#pagesetviewportviewport", "page.tap()": "index.html#pagetapselector", "page.target()": "index.html#pagetarget", "page.title()": "index.html#pagetitle", "page.touchscreen": "index.html#pagetouchscreen", "page.tracing": "index.html#pagetracing", "page.type()": "index.html#pagetypeselector-text-options", "page.url()": "index.html#pageurl", "page.viewport()": "index.html#pageviewport", "page.waitFor()": "index.html#pagewaitforselectororfunctionortimeout-options-args", "page.waitForFileChooser()": "index.html#pagewaitforfilechooseroptions", "page.waitForFunction()": "index.html#pagewaitforfunctionpagefunction-options-args", "page.waitForNavigation()": "index.html#pagewaitfornavigationoptions", "page.waitForRequest()": "index.html#pagewaitforrequesturlorpredicate-options", "page.waitForResponse()": "index.html#pagewaitforresponseurlorpredicate-options", "page.waitForSelector()": "index.html#pagewaitforselectorselector-options", "page.waitForTimeout()": "index.html#pagewaitfortimeoutmilliseconds", "page.waitForXPath()": "index.html#pagewaitforxpathxpath-options", "page.workers()": "index.html#pageworkers", "Puppeteer": "index.html#class-puppeteer", "puppeteer vs puppeteer-core": "index.html#puppeteer-vs-puppeteer-core", "puppeteer.clearCustomQueryHandlers()": "index.html#puppeteerclearcustomqueryhandlers", "puppeteer.connect()": "index.html#puppeteerconnectoptions", "puppeteer.createBrowserFetcher()": "index.html#puppeteercreatebrowserfetcheroptions", "puppeteer.customQueryHandlerNames()": "index.html#puppeteercustomqueryhandlernames", "puppeteer.defaultArgs()": "index.html#puppeteerdefaultargsoptions", "puppeteer.devices": "index.html#puppeteerdevices", "puppeteer.errors": "index.html#puppeteererrors", "puppeteer.executablePath()": "index.html#puppeteerexecutablepath", "puppeteer.launch()": "index.html#puppeteerlaunchoptions", "puppeteer.networkConditions": "index.html#puppeteernetworkconditions", "puppeteer.product": "index.html#puppeteerproduct", "puppeteer.registerCustomQueryHandler()": "index.html#puppeteerregistercustomqueryhandlername-queryhandler", "puppeteer.unregisterCustomQueryHandler()": "index.html#puppeteerunregistercustomqueryhandlername", "SecurityDetails": "index.html#class-securitydetails", "securityDetails.issuer()": "index.html#securitydetailsissuer", "securityDetails.protocol()": "index.html#securitydetailsprotocol", "securityDetails.subjectAlternativeNames()": "index.html#securitydetailssubjectalternativenames", "securityDetails.subjectName()": "index.html#securitydetailssubjectname", "securityDetails.validFrom()": "index.html#securitydetailsvalidfrom", "securityDetails.validTo()": "index.html#securitydetailsvalidto", "Target": "index.html#class-target", "target.browser()": "index.html#targetbrowser", "target.browserContext()": "index.html#targetbrowsercontext", "target.createCDPSession()": "index.html#targetcreatecdpsession", "target.opener()": "index.html#targetopener", "target.page()": "index.html#targetpage", "target.type()": "index.html#targettype", "target.url()": "index.html#targeturl", "target.worker()": "index.html#targetworker", "TimeoutError": "index.html#class-timeouterror", "Touchscreen": "index.html#class-touchscreen", "touchscreen.tap()": "index.html#touchscreentapx-y", "Tracing": "index.html#class-tracing", "tracing.start()": "index.html#tracingstartoptions", "tracing.stop()": "index.html#tracingstop", "WaitTimeoutOptions": "index.html#waittimeoutoptions", "WebWorker": "index.html#class-webworker", "webWorker.evaluate()": "index.html#webworkerevaluatepagefunction-args", "webWorker.evaluateHandle()": "index.html#webworkerevaluatehandlepagefunction-args", "webWorker.executionContext()": "index.html#webworkerexecutioncontext", "webWorker.url()": "index.html#webworkerurl", "Working with Chrome Extensions": "index.html#working-with-chrome-extensions"}