{"tf.AggregationMethod": "aggregationmethod.html", "tf.argsort": "argsort.html", "tf.audio": "audio.html", "tf.audio.decode_wav": "audio/decode_wav.html", "tf.audio.encode_wav": "audio/encode_wav.html", "tf.autodiff": "autodiff.html", "tf.autodiff.ForwardAccumulator": "autodiff/forwardaccumulator.html", "tf.autograph": "autograph.html", "tf.autograph.experimental": "autograph/experimental.html", "tf.autograph.experimental.do_not_convert": "autograph/experimental/do_not_convert.html", "tf.autograph.experimental.Feature": "autograph/experimental/feature.html", "tf.autograph.experimental.set_loop_options": "autograph/experimental/set_loop_options.html", "tf.autograph.set_verbosity": "autograph/set_verbosity.html", "tf.autograph.to_code": "autograph/to_code.html", "tf.autograph.to_graph": "autograph/to_graph.html", "tf.autograph.trace": "autograph/trace.html", "tf.batch_to_space": "batch_to_space.html", "tf.bitcast": "bitcast.html", "tf.bitwise": "bitwise.html", "tf.bitwise.bitwise_and": "bitwise/bitwise_and.html", "tf.bitwise.bitwise_or": "bitwise/bitwise_or.html", "tf.bitwise.bitwise_xor": "bitwise/bitwise_xor.html", "tf.bitwise.invert": "bitwise/invert.html", "tf.bitwise.left_shift": "bitwise/left_shift.html", "tf.bitwise.right_shift": "bitwise/right_shift.html", "tf.boolean_mask": "boolean_mask.html", "tf.broadcast_dynamic_shape": "broadcast_dynamic_shape.html", "tf.broadcast_static_shape": "broadcast_static_shape.html", "tf.broadcast_to": "broadcast_to.html", "tf.case": "case.html", "tf.cast": "cast.html", "tf.clip_by_global_norm": "clip_by_global_norm.html", "tf.clip_by_norm": "clip_by_norm.html", "tf.clip_by_value": "clip_by_value.html", "tf.compat": "compat.html", "tf.compat.as_bytes": "compat/as_bytes.html", "tf.compat.as_str": "compat/as_str.html", "tf.compat.as_str_any": "compat/as_str_any.html", "tf.compat.as_text": "compat/as_text.html", "tf.compat.dimension_at_index": "compat/dimension_at_index.html", "tf.compat.dimension_value": "compat/dimension_value.html", "tf.compat.forward_compatibility_horizon": "compat/forward_compatibility_horizon.html", "tf.compat.forward_compatible": "compat/forward_compatible.html", "tf.compat.path_to_str": "compat/path_to_str.html", "tf.compat.v1": "compat/v1.html", "tf.compat.v1.add_check_numerics_ops": "compat/v1/add_check_numerics_ops.html", "tf.compat.v1.add_to_collection": "compat/v1/add_to_collection.html", "tf.compat.v1.add_to_collections": "compat/v1/add_to_collections.html", "tf.compat.v1.all_variables": "compat/v1/all_variables.html", "tf.compat.v1.app": "compat/v1/app.html", "tf.compat.v1.app.run": "compat/v1/app/run.html", "tf.compat.v1.arg_max": "compat/v1/arg_max.html", "tf.compat.v1.arg_min": "compat/v1/arg_min.html", "tf.compat.v1.argmax": "compat/v1/argmax.html", "tf.compat.v1.argmin": "compat/v1/argmin.html", "tf.compat.v1.assert_equal": "compat/v1/assert_equal.html", "tf.compat.v1.assert_greater": "compat/v1/assert_greater.html", "tf.compat.v1.assert_greater_equal": "compat/v1/assert_greater_equal.html", "tf.compat.v1.assert_integer": "compat/v1/assert_integer.html", "tf.compat.v1.assert_less": "compat/v1/assert_less.html", "tf.compat.v1.assert_less_equal": "compat/v1/assert_less_equal.html", "tf.compat.v1.assert_near": "compat/v1/assert_near.html", "tf.compat.v1.assert_negative": "compat/v1/assert_negative.html", "tf.compat.v1.assert_non_negative": "compat/v1/assert_non_negative.html", "tf.compat.v1.assert_non_positive": "compat/v1/assert_non_positive.html", "tf.compat.v1.assert_none_equal": "compat/v1/assert_none_equal.html", "tf.compat.v1.assert_positive": "compat/v1/assert_positive.html", "tf.compat.v1.assert_rank": "compat/v1/assert_rank.html", "tf.compat.v1.assert_rank_at_least": "compat/v1/assert_rank_at_least.html", "tf.compat.v1.assert_rank_in": "compat/v1/assert_rank_in.html", "tf.compat.v1.assert_scalar": "compat/v1/assert_scalar.html", "tf.compat.v1.assert_type": "compat/v1/assert_type.html", "tf.compat.v1.assert_variables_initialized": "compat/v1/assert_variables_initialized.html", "tf.compat.v1.assign": "compat/v1/assign.html", "tf.compat.v1.assign_add": "compat/v1/assign_add.html", "tf.compat.v1.assign_sub": "compat/v1/assign_sub.html", "tf.compat.v1.AttrValue": "compat/v1/attrvalue.html", "tf.compat.v1.AttrValue.ListValue": "compat/v1/attrvalue/listvalue.html", "tf.compat.v1.audio": "compat/v1/audio.html", "tf.compat.v1.autograph": "compat/v1/autograph.html", "tf.compat.v1.autograph.experimental": "compat/v1/autograph/experimental.html", "tf.compat.v1.autograph.to_code": "compat/v1/autograph/to_code.html", "tf.compat.v1.autograph.to_graph": "compat/v1/autograph/to_graph.html", "tf.compat.v1.batch_gather": "compat/v1/batch_gather.html", "tf.compat.v1.batch_scatter_update": "compat/v1/batch_scatter_update.html", "tf.compat.v1.batch_to_space": "compat/v1/batch_to_space.html", "tf.compat.v1.batch_to_space_nd": "compat/v1/batch_to_space_nd.html", "tf.compat.v1.bincount": "compat/v1/bincount.html", "tf.compat.v1.bitwise": "compat/v1/bitwise.html", "tf.compat.v1.boolean_mask": "compat/v1/boolean_mask.html", "tf.compat.v1.case": "compat/v1/case.html", "tf.compat.v1.clip_by_average_norm": "compat/v1/clip_by_average_norm.html", "tf.compat.v1.colocate_with": "compat/v1/colocate_with.html", "tf.compat.v1.compat": "compat/v1/compat.html", "tf.compat.v1.cond": "compat/v1/cond.html", "tf.compat.v1.ConditionalAccumulator": "compat/v1/conditionalaccumulator.html", "tf.compat.v1.ConditionalAccumulatorBase": "compat/v1/conditionalaccumulatorbase.html", "tf.compat.v1.config": "compat/v1/config.html", "tf.compat.v1.config.experimental": "compat/v1/config/experimental.html", "tf.compat.v1.config.optimizer": "compat/v1/config/optimizer.html", "tf.compat.v1.config.threading": "compat/v1/config/threading.html", "tf.compat.v1.ConfigProto": "compat/v1/configproto.html", "tf.compat.v1.ConfigProto.DeviceCountEntry": "compat/v1/configproto/devicecountentry.html", "tf.compat.v1.ConfigProto.Experimental": "compat/v1/configproto/experimental.html", "tf.compat.v1.confusion_matrix": "compat/v1/confusion_matrix.html", "tf.compat.v1.constant": "compat/v1/constant.html", "tf.compat.v1.container": "compat/v1/container.html", "tf.compat.v1.control_flow_v2_enabled": "compat/v1/control_flow_v2_enabled.html", "tf.compat.v1.convert_to_tensor": "compat/v1/convert_to_tensor.html", "tf.compat.v1.convert_to_tensor_or_indexed_slices": "compat/v1/convert_to_tensor_or_indexed_slices.html", "tf.compat.v1.convert_to_tensor_or_sparse_tensor": "compat/v1/convert_to_tensor_or_sparse_tensor.html", "tf.compat.v1.count_nonzero": "compat/v1/count_nonzero.html", "tf.compat.v1.count_up_to": "compat/v1/count_up_to.html", "tf.compat.v1.create_partitioned_variables": "compat/v1/create_partitioned_variables.html", "tf.compat.v1.data": "compat/v1/data.html", "tf.compat.v1.data.Dataset": "compat/v1/data/dataset.html", "tf.compat.v1.data.experimental": "compat/v1/data/experimental.html", "tf.compat.v1.data.experimental.choose_from_datasets": "compat/v1/data/experimental/choose_from_datasets.html", "tf.compat.v1.data.experimental.Counter": "compat/v1/data/experimental/counter.html", "tf.compat.v1.data.experimental.CsvDataset": "compat/v1/data/experimental/csvdataset.html", "tf.compat.v1.data.experimental.make_batched_features_dataset": "compat/v1/data/experimental/make_batched_features_dataset.html", "tf.compat.v1.data.experimental.make_csv_dataset": "compat/v1/data/experimental/make_csv_dataset.html", "tf.compat.v1.data.experimental.map_and_batch_with_legacy_function": "compat/v1/data/experimental/map_and_batch_with_legacy_function.html", "tf.compat.v1.data.experimental.RaggedTensorStructure": "compat/v1/data/experimental/raggedtensorstructure.html", "tf.compat.v1.data.experimental.RandomDataset": "compat/v1/data/experimental/randomdataset.html", "tf.compat.v1.data.experimental.sample_from_datasets": "compat/v1/data/experimental/sample_from_datasets.html", "tf.compat.v1.data.experimental.service": "compat/v1/data/experimental/service.html", "tf.compat.v1.data.experimental.SparseTensorStructure": "compat/v1/data/experimental/sparsetensorstructure.html", "tf.compat.v1.data.experimental.SqlDataset": "compat/v1/data/experimental/sqldataset.html", "tf.compat.v1.data.experimental.TensorArrayStructure": "compat/v1/data/experimental/tensorarraystructure.html", "tf.compat.v1.data.experimental.TensorStructure": "compat/v1/data/experimental/tensorstructure.html", "tf.compat.v1.data.FixedLengthRecordDataset": "compat/v1/data/fixedlengthrecorddataset.html", "tf.compat.v1.data.get_output_classes": "compat/v1/data/get_output_classes.html", "tf.compat.v1.data.get_output_shapes": "compat/v1/data/get_output_shapes.html", "tf.compat.v1.data.get_output_types": "compat/v1/data/get_output_types.html", "tf.compat.v1.data.Iterator": "compat/v1/data/iterator.html", "tf.compat.v1.data.make_initializable_iterator": "compat/v1/data/make_initializable_iterator.html", "tf.compat.v1.data.make_one_shot_iterator": "compat/v1/data/make_one_shot_iterator.html", "tf.compat.v1.data.TextLineDataset": "compat/v1/data/textlinedataset.html", "tf.compat.v1.data.TFRecordDataset": "compat/v1/data/tfrecorddataset.html", "tf.compat.v1.debugging": "compat/v1/debugging.html", "tf.compat.v1.debugging.assert_shapes": "compat/v1/debugging/assert_shapes.html", "tf.compat.v1.debugging.experimental": "compat/v1/debugging/experimental.html", "tf.compat.v1.decode_csv": "compat/v1/decode_csv.html", "tf.compat.v1.decode_raw": "compat/v1/decode_raw.html", "tf.compat.v1.delete_session_tensor": "compat/v1/delete_session_tensor.html", "tf.compat.v1.depth_to_space": "compat/v1/depth_to_space.html", "tf.compat.v1.device": "compat/v1/device.html", "tf.compat.v1.DeviceSpec": "compat/v1/devicespec.html", "tf.compat.v1.Dimension": "compat/v1/dimension.html", "tf.compat.v1.disable_control_flow_v2": "compat/v1/disable_control_flow_v2.html", "tf.compat.v1.disable_eager_execution": "compat/v1/disable_eager_execution.html", "tf.compat.v1.disable_resource_variables": "compat/v1/disable_resource_variables.html", "tf.compat.v1.disable_tensor_equality": "compat/v1/disable_tensor_equality.html", "tf.compat.v1.disable_v2_behavior": "compat/v1/disable_v2_behavior.html", "tf.compat.v1.disable_v2_tensorshape": "compat/v1/disable_v2_tensorshape.html", "tf.compat.v1.distribute": "compat/v1/distribute.html", "tf.compat.v1.distribute.cluster_resolver": "compat/v1/distribute/cluster_resolver.html", "tf.compat.v1.distribute.experimental": "compat/v1/distribute/experimental.html", "tf.compat.v1.distribute.experimental.CentralStorageStrategy": "compat/v1/distribute/experimental/centralstoragestrategy.html", "tf.compat.v1.distribute.experimental.MultiWorkerMirroredStrategy": "compat/v1/distribute/experimental/multiworkermirroredstrategy.html", "tf.compat.v1.distribute.experimental.ParameterServerStrategy": "compat/v1/distribute/experimental/parameterserverstrategy.html", "tf.compat.v1.distribute.experimental.TPUStrategy": "compat/v1/distribute/experimental/tpustrategy.html", "tf.compat.v1.distribute.get_loss_reduction": "compat/v1/distribute/get_loss_reduction.html", "tf.compat.v1.distribute.MirroredStrategy": "compat/v1/distribute/mirroredstrategy.html", "tf.compat.v1.distribute.OneDeviceStrategy": "compat/v1/distribute/onedevicestrategy.html", "tf.compat.v1.distribute.ReplicaContext": "compat/v1/distribute/replicacontext.html", "tf.compat.v1.distribute.Strategy": "compat/v1/distribute/strategy.html", "tf.compat.v1.distribute.StrategyExtended": "compat/v1/distribute/strategyextended.html", "tf.compat.v1.distributions": "compat/v1/distributions.html", "tf.compat.v1.distributions.Bernoulli": "compat/v1/distributions/bernoulli.html", "tf.compat.v1.distributions.Beta": "compat/v1/distributions/beta.html", "tf.compat.v1.distributions.Categorical": "compat/v1/distributions/categorical.html", "tf.compat.v1.distributions.Dirichlet": "compat/v1/distributions/dirichlet.html", "tf.compat.v1.distributions.DirichletMultinomial": "compat/v1/distributions/dirichletmultinomial.html", "tf.compat.v1.distributions.Distribution": "compat/v1/distributions/distribution.html", "tf.compat.v1.distributions.Exponential": "compat/v1/distributions/exponential.html", "tf.compat.v1.distributions.Gamma": "compat/v1/distributions/gamma.html", "tf.compat.v1.distributions.kl_divergence": "compat/v1/distributions/kl_divergence.html", "tf.compat.v1.distributions.Laplace": "compat/v1/distributions/laplace.html", "tf.compat.v1.distributions.Multinomial": "compat/v1/distributions/multinomial.html", "tf.compat.v1.distributions.Normal": "compat/v1/distributions/normal.html", "tf.compat.v1.distributions.RegisterKL": "compat/v1/distributions/registerkl.html", "tf.compat.v1.distributions.ReparameterizationType": "compat/v1/distributions/reparameterizationtype.html", "tf.compat.v1.distributions.StudentT": "compat/v1/distributions/studentt.html", "tf.compat.v1.distributions.Uniform": "compat/v1/distributions/uniform.html", "tf.compat.v1.div": "compat/v1/div.html", "tf.compat.v1.dtypes": "compat/v1/dtypes.html", "tf.compat.v1.enable_control_flow_v2": "compat/v1/enable_control_flow_v2.html", "tf.compat.v1.enable_eager_execution": "compat/v1/enable_eager_execution.html", "tf.compat.v1.enable_resource_variables": "compat/v1/enable_resource_variables.html", "tf.compat.v1.enable_tensor_equality": "compat/v1/enable_tensor_equality.html", "tf.compat.v1.enable_v2_behavior": "compat/v1/enable_v2_behavior.html", "tf.compat.v1.enable_v2_tensorshape": "compat/v1/enable_v2_tensorshape.html", "tf.compat.v1.errors": "compat/v1/errors.html", "tf.compat.v1.errors.error_code_from_exception_type": "compat/v1/errors/error_code_from_exception_type.html", "tf.compat.v1.errors.exception_type_from_error_code": "compat/v1/errors/exception_type_from_error_code.html", "tf.compat.v1.errors.raise_exception_on_not_ok_status": "compat/v1/errors/raise_exception_on_not_ok_status.html", "tf.compat.v1.estimator": "compat/v1/estimator.html", "tf.compat.v1.estimator.BaselineClassifier": "compat/v1/estimator/baselineclassifier.html", "tf.compat.v1.estimator.BaselineEstimator": "compat/v1/estimator/baselineestimator.html", "tf.compat.v1.estimator.BaselineRegressor": "compat/v1/estimator/baselineregressor.html", "tf.compat.v1.estimator.classifier_parse_example_spec": "compat/v1/estimator/classifier_parse_example_spec.html", "tf.compat.v1.estimator.DNNClassifier": "compat/v1/estimator/dnnclassifier.html", "tf.compat.v1.estimator.DNNEstimator": "compat/v1/estimator/dnnestimator.html", "tf.compat.v1.estimator.DNNLinearCombinedClassifier": "compat/v1/estimator/dnnlinearcombinedclassifier.html", "tf.compat.v1.estimator.DNNLinearCombinedEstimator": "compat/v1/estimator/dnnlinearcombinedestimator.html", "tf.compat.v1.estimator.DNNLinearCombinedRegressor": "compat/v1/estimator/dnnlinearcombinedregressor.html", "tf.compat.v1.estimator.DNNRegressor": "compat/v1/estimator/dnnregressor.html", "tf.compat.v1.estimator.Estimator": "compat/v1/estimator/estimator.html", "tf.compat.v1.estimator.experimental": "compat/v1/estimator/experimental.html", "tf.compat.v1.estimator.experimental.dnn_logit_fn_builder": "compat/v1/estimator/experimental/dnn_logit_fn_builder.html", "tf.compat.v1.estimator.experimental.KMeans": "compat/v1/estimator/experimental/kmeans.html", "tf.compat.v1.estimator.experimental.linear_logit_fn_builder": "compat/v1/estimator/experimental/linear_logit_fn_builder.html", "tf.compat.v1.estimator.export": "compat/v1/estimator/export.html", "tf.compat.v1.estimator.inputs": "compat/v1/estimator/inputs.html", "tf.compat.v1.estimator.inputs.numpy_input_fn": "compat/v1/estimator/inputs/numpy_input_fn.html", "tf.compat.v1.estimator.inputs.pandas_input_fn": "compat/v1/estimator/inputs/pandas_input_fn.html", "tf.compat.v1.estimator.LinearClassifier": "compat/v1/estimator/linearclassifier.html", "tf.compat.v1.estimator.LinearEstimator": "compat/v1/estimator/linearestimator.html", "tf.compat.v1.estimator.LinearRegressor": "compat/v1/estimator/linearregressor.html", "tf.compat.v1.estimator.regressor_parse_example_spec": "compat/v1/estimator/regressor_parse_example_spec.html", "tf.compat.v1.estimator.tpu": "compat/v1/estimator/tpu.html", "tf.compat.v1.estimator.tpu.experimental": "compat/v1/estimator/tpu/experimental.html", "tf.compat.v1.estimator.tpu.experimental.EmbeddingConfigSpec": "compat/v1/estimator/tpu/experimental/embeddingconfigspec.html", "tf.compat.v1.estimator.tpu.InputPipelineConfig": "compat/v1/estimator/tpu/inputpipelineconfig.html", "tf.compat.v1.estimator.tpu.RunConfig": "compat/v1/estimator/tpu/runconfig.html", "tf.compat.v1.estimator.tpu.TPUConfig": "compat/v1/estimator/tpu/tpuconfig.html", "tf.compat.v1.estimator.tpu.TPUEstimator": "compat/v1/estimator/tpu/tpuestimator.html", "tf.compat.v1.estimator.tpu.TPUEstimatorSpec": "compat/v1/estimator/tpu/tpuestimatorspec.html", "tf.compat.v1.Event": "compat/v1/event.html", "tf.compat.v1.executing_eagerly": "compat/v1/executing_eagerly.html", "tf.compat.v1.executing_eagerly_outside_functions": "compat/v1/executing_eagerly_outside_functions.html", "tf.compat.v1.expand_dims": "compat/v1/expand_dims.html", "tf.compat.v1.experimental": "compat/v1/experimental.html", "tf.compat.v1.experimental.output_all_intermediates": "compat/v1/experimental/output_all_intermediates.html", "tf.compat.v1.extract_image_patches": "compat/v1/extract_image_patches.html", "tf.compat.v1.feature_column": "compat/v1/feature_column.html", "tf.compat.v1.feature_column.categorical_column_with_vocabulary_file": "compat/v1/feature_column/categorical_column_with_vocabulary_file.html", "tf.compat.v1.feature_column.input_layer": "compat/v1/feature_column/input_layer.html", "tf.compat.v1.feature_column.linear_model": "compat/v1/feature_column/linear_model.html", "tf.compat.v1.feature_column.make_parse_example_spec": "compat/v1/feature_column/make_parse_example_spec.html", "tf.compat.v1.feature_column.shared_embedding_columns": "compat/v1/feature_column/shared_embedding_columns.html", "tf.compat.v1.fixed_size_partitioner": "compat/v1/fixed_size_partitioner.html", "tf.compat.v1.FixedLengthRecordReader": "compat/v1/fixedlengthrecordreader.html", "tf.compat.v1.flags": "compat/v1/flags.html", "tf.compat.v1.flags.adopt_module_key_flags": "compat/v1/flags/adopt_module_key_flags.html", "tf.compat.v1.flags.ArgumentParser": "compat/v1/flags/argumentparser.html", "tf.compat.v1.flags.ArgumentSerializer": "compat/v1/flags/argumentserializer.html", "tf.compat.v1.flags.BaseListParser": "compat/v1/flags/baselistparser.html", "tf.compat.v1.flags.BooleanFlag": "compat/v1/flags/booleanflag.html", "tf.compat.v1.flags.BooleanParser": "compat/v1/flags/booleanparser.html", "tf.compat.v1.flags.CantOpenFlagFileError": "compat/v1/flags/cantopenflagfileerror.html", "tf.compat.v1.flags.CsvListSerializer": "compat/v1/flags/csvlistserializer.html", "tf.compat.v1.flags.declare_key_flag": "compat/v1/flags/declare_key_flag.html", "tf.compat.v1.flags.DEFINE": "compat/v1/flags/define.html", "tf.compat.v1.flags.DEFINE_alias": "compat/v1/flags/define_alias.html", "tf.compat.v1.flags.DEFINE_bool": "compat/v1/flags/define_bool.html", "tf.compat.v1.flags.DEFINE_enum": "compat/v1/flags/define_enum.html", "tf.compat.v1.flags.DEFINE_enum_class": "compat/v1/flags/define_enum_class.html", "tf.compat.v1.flags.DEFINE_flag": "compat/v1/flags/define_flag.html", "tf.compat.v1.flags.DEFINE_float": "compat/v1/flags/define_float.html", "tf.compat.v1.flags.DEFINE_integer": "compat/v1/flags/define_integer.html", "tf.compat.v1.flags.DEFINE_list": "compat/v1/flags/define_list.html", "tf.compat.v1.flags.DEFINE_multi": "compat/v1/flags/define_multi.html", "tf.compat.v1.flags.DEFINE_multi_enum": "compat/v1/flags/define_multi_enum.html", "tf.compat.v1.flags.DEFINE_multi_enum_class": "compat/v1/flags/define_multi_enum_class.html", "tf.compat.v1.flags.DEFINE_multi_float": "compat/v1/flags/define_multi_float.html", "tf.compat.v1.flags.DEFINE_multi_integer": "compat/v1/flags/define_multi_integer.html", "tf.compat.v1.flags.DEFINE_multi_string": "compat/v1/flags/define_multi_string.html", "tf.compat.v1.flags.DEFINE_spaceseplist": "compat/v1/flags/define_spaceseplist.html", "tf.compat.v1.flags.DEFINE_string": "compat/v1/flags/define_string.html", "tf.compat.v1.flags.disclaim_key_flags": "compat/v1/flags/disclaim_key_flags.html", "tf.compat.v1.flags.doc_to_help": "compat/v1/flags/doc_to_help.html", "tf.compat.v1.flags.DuplicateFlagError": "compat/v1/flags/duplicateflagerror.html", "tf.compat.v1.flags.EnumClassFlag": "compat/v1/flags/enumclassflag.html", "tf.compat.v1.flags.EnumClassListSerializer": "compat/v1/flags/enumclasslistserializer.html", "tf.compat.v1.flags.EnumClassParser": "compat/v1/flags/enumclassparser.html", "tf.compat.v1.flags.EnumClassSerializer": "compat/v1/flags/enumclassserializer.html", "tf.compat.v1.flags.EnumFlag": "compat/v1/flags/enumflag.html", "tf.compat.v1.flags.EnumParser": "compat/v1/flags/enumparser.html", "tf.compat.v1.flags.Error": "compat/v1/flags/error.html", "tf.compat.v1.flags.Flag": "compat/v1/flags/flag.html", "tf.compat.v1.flags.flag_dict_to_args": "compat/v1/flags/flag_dict_to_args.html", "tf.compat.v1.flags.FlagHolder": "compat/v1/flags/flagholder.html", "tf.compat.v1.flags.FlagNameConflictsWithMethodError": "compat/v1/flags/flagnameconflictswithmethoderror.html", "tf.compat.v1.flags.FLAGS": "compat/v1/flags/flags.html", "tf.compat.v1.flags.FlagValues": "compat/v1/flags/flagvalues.html", "tf.compat.v1.flags.FloatParser": "compat/v1/flags/floatparser.html", "tf.compat.v1.flags.get_help_width": "compat/v1/flags/get_help_width.html", "tf.compat.v1.flags.IllegalFlagValueError": "compat/v1/flags/illegalflagvalueerror.html", "tf.compat.v1.flags.IntegerParser": "compat/v1/flags/integerparser.html", "tf.compat.v1.flags.ListParser": "compat/v1/flags/listparser.html", "tf.compat.v1.flags.ListSerializer": "compat/v1/flags/listserializer.html", "tf.compat.v1.flags.mark_bool_flags_as_mutual_exclusive": "compat/v1/flags/mark_bool_flags_as_mutual_exclusive.html", "tf.compat.v1.flags.mark_flag_as_required": "compat/v1/flags/mark_flag_as_required.html", "tf.compat.v1.flags.mark_flags_as_mutual_exclusive": "compat/v1/flags/mark_flags_as_mutual_exclusive.html", "tf.compat.v1.flags.mark_flags_as_required": "compat/v1/flags/mark_flags_as_required.html", "tf.compat.v1.flags.multi_flags_validator": "compat/v1/flags/multi_flags_validator.html", "tf.compat.v1.flags.MultiEnumClassFlag": "compat/v1/flags/multienumclassflag.html", "tf.compat.v1.flags.MultiFlag": "compat/v1/flags/multiflag.html", "tf.compat.v1.flags.register_multi_flags_validator": "compat/v1/flags/register_multi_flags_validator.html", "tf.compat.v1.flags.register_validator": "compat/v1/flags/register_validator.html", "tf.compat.v1.flags.text_wrap": "compat/v1/flags/text_wrap.html", "tf.compat.v1.flags.UnparsedFlagAccessError": "compat/v1/flags/unparsedflagaccesserror.html", "tf.compat.v1.flags.UnrecognizedFlagError": "compat/v1/flags/unrecognizedflagerror.html", "tf.compat.v1.flags.ValidationError": "compat/v1/flags/validationerror.html", "tf.compat.v1.flags.validator": "compat/v1/flags/validator.html", "tf.compat.v1.flags.WhitespaceSeparatedListParser": "compat/v1/flags/whitespaceseparatedlistparser.html", "tf.compat.v1.floor_div": "compat/v1/floor_div.html", "tf.compat.v1.foldl": "compat/v1/foldl.html", "tf.compat.v1.foldr": "compat/v1/foldr.html", "tf.compat.v1.gather": "compat/v1/gather.html", "tf.compat.v1.gather_nd": "compat/v1/gather_nd.html", "tf.compat.v1.get_collection": "compat/v1/get_collection.html", "tf.compat.v1.get_collection_ref": "compat/v1/get_collection_ref.html", "tf.compat.v1.get_default_graph": "compat/v1/get_default_graph.html", "tf.compat.v1.get_default_session": "compat/v1/get_default_session.html", "tf.compat.v1.get_local_variable": "compat/v1/get_local_variable.html", "tf.compat.v1.get_seed": "compat/v1/get_seed.html", "tf.compat.v1.get_session_handle": "compat/v1/get_session_handle.html", "tf.compat.v1.get_session_tensor": "compat/v1/get_session_tensor.html", "tf.compat.v1.get_variable": "compat/v1/get_variable.html", "tf.compat.v1.get_variable_scope": "compat/v1/get_variable_scope.html", "tf.compat.v1.gfile": "compat/v1/gfile.html", "tf.compat.v1.gfile.Copy": "compat/v1/gfile/copy.html", "tf.compat.v1.gfile.DeleteRecursively": "compat/v1/gfile/deleterecursively.html", "tf.compat.v1.gfile.Exists": "compat/v1/gfile/exists.html", "tf.compat.v1.gfile.FastGFile": "compat/v1/gfile/fastgfile.html", "tf.compat.v1.gfile.Glob": "compat/v1/gfile/glob.html", "tf.compat.v1.gfile.IsDirectory": "compat/v1/gfile/isdirectory.html", "tf.compat.v1.gfile.ListDirectory": "compat/v1/gfile/listdirectory.html", "tf.compat.v1.gfile.MakeDirs": "compat/v1/gfile/makedirs.html", "tf.compat.v1.gfile.MkDir": "compat/v1/gfile/mkdir.html", "tf.compat.v1.gfile.Remove": "compat/v1/gfile/remove.html", "tf.compat.v1.gfile.Rename": "compat/v1/gfile/rename.html", "tf.compat.v1.gfile.Stat": "compat/v1/gfile/stat.html", "tf.compat.v1.gfile.Walk": "compat/v1/gfile/walk.html", "tf.compat.v1.global_variables": "compat/v1/global_variables.html", "tf.compat.v1.global_variables_initializer": "compat/v1/global_variables_initializer.html", "tf.compat.v1.GPUOptions": "compat/v1/gpuoptions.html", "tf.compat.v1.GPUOptions.Experimental": "compat/v1/gpuoptions/experimental.html", "tf.compat.v1.GPUOptions.Experimental.VirtualDevices": "compat/v1/gpuoptions/experimental/virtualdevices.html", "tf.compat.v1.gradients": "compat/v1/gradients.html", "tf.compat.v1.graph_util": "compat/v1/graph_util.html", "tf.compat.v1.graph_util.convert_variables_to_constants": "compat/v1/graph_util/convert_variables_to_constants.html", "tf.compat.v1.graph_util.extract_sub_graph": "compat/v1/graph_util/extract_sub_graph.html", "tf.compat.v1.graph_util.must_run_on_cpu": "compat/v1/graph_util/must_run_on_cpu.html", "tf.compat.v1.graph_util.remove_training_nodes": "compat/v1/graph_util/remove_training_nodes.html", "tf.compat.v1.graph_util.tensor_shape_from_node_def_name": "compat/v1/graph_util/tensor_shape_from_node_def_name.html", "tf.compat.v1.GraphDef": "compat/v1/graphdef.html", "tf.compat.v1.GraphKeys": "compat/v1/graphkeys.html", "tf.compat.v1.GraphOptions": "compat/v1/graphoptions.html", "tf.compat.v1.hessians": "compat/v1/hessians.html", "tf.compat.v1.HistogramProto": "compat/v1/histogramproto.html", "tf.compat.v1.IdentityReader": "compat/v1/identityreader.html", "tf.compat.v1.image": "compat/v1/image.html", "tf.compat.v1.image.crop_and_resize": "compat/v1/image/crop_and_resize.html", "tf.compat.v1.image.draw_bounding_boxes": "compat/v1/image/draw_bounding_boxes.html", "tf.compat.v1.image.extract_glimpse": "compat/v1/image/extract_glimpse.html", "tf.compat.v1.image.resize": "compat/v1/image/resize.html", "tf.compat.v1.image.resize_area": "compat/v1/image/resize_area.html", "tf.compat.v1.image.resize_bicubic": "compat/v1/image/resize_bicubic.html", "tf.compat.v1.image.resize_bilinear": "compat/v1/image/resize_bilinear.html", "tf.compat.v1.image.resize_image_with_pad": "compat/v1/image/resize_image_with_pad.html", "tf.compat.v1.image.resize_nearest_neighbor": "compat/v1/image/resize_nearest_neighbor.html", "tf.compat.v1.image.ResizeMethod": "compat/v1/image/resizemethod.html", "tf.compat.v1.image.sample_distorted_bounding_box": "compat/v1/image/sample_distorted_bounding_box.html", "tf.compat.v1.initialize_all_tables": "compat/v1/initialize_all_tables.html", "tf.compat.v1.initialize_all_variables": "compat/v1/initialize_all_variables.html", "tf.compat.v1.initialize_local_variables": "compat/v1/initialize_local_variables.html", "tf.compat.v1.initialize_variables": "compat/v1/initialize_variables.html", "tf.compat.v1.initializers": "compat/v1/initializers.html", "tf.compat.v1.initializers.he_normal": "compat/v1/initializers/he_normal.html", "tf.compat.v1.initializers.he_uniform": "compat/v1/initializers/he_uniform.html", "tf.compat.v1.initializers.lecun_normal": "compat/v1/initializers/lecun_normal.html", "tf.compat.v1.initializers.lecun_uniform": "compat/v1/initializers/lecun_uniform.html", "tf.compat.v1.InteractiveSession": "compat/v1/interactivesession.html", "tf.compat.v1.io": "compat/v1/io.html", "tf.compat.v1.io.gfile": "compat/v1/io/gfile.html", "tf.compat.v1.io.tf_record_iterator": "compat/v1/io/tf_record_iterator.html", "tf.compat.v1.io.TFRecordCompressionType": "compat/v1/io/tfrecordcompressiontype.html", "tf.compat.v1.is_variable_initialized": "compat/v1/is_variable_initialized.html", "tf.compat.v1.keras": "compat/v1/keras.html", "tf.compat.v1.keras.activations": "compat/v1/keras/activations.html", "tf.compat.v1.keras.applications": "compat/v1/keras/applications.html", "tf.compat.v1.keras.applications.densenet": "compat/v1/keras/applications/densenet.html", "tf.compat.v1.keras.applications.efficientnet": "compat/v1/keras/applications/efficientnet.html", "tf.compat.v1.keras.applications.efficientnet_v2": "compat/v1/keras/applications/efficientnet_v2.html", "tf.compat.v1.keras.applications.imagenet_utils": "compat/v1/keras/applications/imagenet_utils.html", "tf.compat.v1.keras.applications.inception_resnet_v2": "compat/v1/keras/applications/inception_resnet_v2.html", "tf.compat.v1.keras.applications.inception_v3": "compat/v1/keras/applications/inception_v3.html", "tf.compat.v1.keras.applications.mobilenet": "compat/v1/keras/applications/mobilenet.html", "tf.compat.v1.keras.applications.mobilenet_v2": "compat/v1/keras/applications/mobilenet_v2.html", "tf.compat.v1.keras.applications.mobilenet_v3": "compat/v1/keras/applications/mobilenet_v3.html", "tf.compat.v1.keras.applications.nasnet": "compat/v1/keras/applications/nasnet.html", "tf.compat.v1.keras.applications.regnet": "compat/v1/keras/applications/regnet.html", "tf.compat.v1.keras.applications.resnet": "compat/v1/keras/applications/resnet.html", "tf.compat.v1.keras.applications.resnet50": "compat/v1/keras/applications/resnet50.html", "tf.compat.v1.keras.applications.resnet_rs": "compat/v1/keras/applications/resnet_rs.html", "tf.compat.v1.keras.applications.resnet_v2": "compat/v1/keras/applications/resnet_v2.html", "tf.compat.v1.keras.applications.vgg16": "compat/v1/keras/applications/vgg16.html", "tf.compat.v1.keras.applications.vgg19": "compat/v1/keras/applications/vgg19.html", "tf.compat.v1.keras.applications.xception": "compat/v1/keras/applications/xception.html", "tf.compat.v1.keras.backend": "compat/v1/keras/backend.html", "tf.compat.v1.keras.backend.get_session": "compat/v1/keras/backend/get_session.html", "tf.compat.v1.keras.backend.name_scope": "compat/v1/keras/backend/name_scope.html", "tf.compat.v1.keras.backend.set_session": "compat/v1/keras/backend/set_session.html", "tf.compat.v1.keras.callbacks": "compat/v1/keras/callbacks.html", "tf.compat.v1.keras.callbacks.TensorBoard": "compat/v1/keras/callbacks/tensorboard.html", "tf.compat.v1.keras.constraints": "compat/v1/keras/constraints.html", "tf.compat.v1.keras.datasets": "compat/v1/keras/datasets.html", "tf.compat.v1.keras.datasets.boston_housing": "compat/v1/keras/datasets/boston_housing.html", "tf.compat.v1.keras.datasets.cifar10": "compat/v1/keras/datasets/cifar10.html", "tf.compat.v1.keras.datasets.cifar100": "compat/v1/keras/datasets/cifar100.html", "tf.compat.v1.keras.datasets.fashion_mnist": "compat/v1/keras/datasets/fashion_mnist.html", "tf.compat.v1.keras.datasets.imdb": "compat/v1/keras/datasets/imdb.html", "tf.compat.v1.keras.datasets.mnist": "compat/v1/keras/datasets/mnist.html", "tf.compat.v1.keras.datasets.reuters": "compat/v1/keras/datasets/reuters.html", "tf.compat.v1.keras.estimator": "compat/v1/keras/estimator.html", "tf.compat.v1.keras.estimator.model_to_estimator": "compat/v1/keras/estimator/model_to_estimator.html", "tf.compat.v1.keras.experimental": "compat/v1/keras/experimental.html", "tf.compat.v1.keras.experimental.export_saved_model": "compat/v1/keras/experimental/export_saved_model.html", "tf.compat.v1.keras.experimental.load_from_saved_model": "compat/v1/keras/experimental/load_from_saved_model.html", "tf.compat.v1.keras.initializers": "compat/v1/keras/initializers.html", "tf.compat.v1.keras.initializers.Constant": "compat/v1/keras/initializers/constant.html", "tf.compat.v1.keras.initializers.glorot_normal": "compat/v1/keras/initializers/glorot_normal.html", "tf.compat.v1.keras.initializers.glorot_uniform": "compat/v1/keras/initializers/glorot_uniform.html", "tf.compat.v1.keras.initializers.he_normal": "compat/v1/keras/initializers/he_normal.html", "tf.compat.v1.keras.initializers.he_uniform": "compat/v1/keras/initializers/he_uniform.html", "tf.compat.v1.keras.initializers.Identity": "compat/v1/keras/initializers/identity.html", "tf.compat.v1.keras.initializers.lecun_normal": "compat/v1/keras/initializers/lecun_normal.html", "tf.compat.v1.keras.initializers.lecun_uniform": "compat/v1/keras/initializers/lecun_uniform.html", "tf.compat.v1.keras.initializers.Ones": "compat/v1/keras/initializers/ones.html", "tf.compat.v1.keras.initializers.Orthogonal": "compat/v1/keras/initializers/orthogonal.html", "tf.compat.v1.keras.initializers.RandomNormal": "compat/v1/keras/initializers/randomnormal.html", "tf.compat.v1.keras.initializers.RandomUniform": "compat/v1/keras/initializers/randomuniform.html", "tf.compat.v1.keras.initializers.TruncatedNormal": "compat/v1/keras/initializers/truncatednormal.html", "tf.compat.v1.keras.initializers.VarianceScaling": "compat/v1/keras/initializers/variancescaling.html", "tf.compat.v1.keras.initializers.Zeros": "compat/v1/keras/initializers/zeros.html", "tf.compat.v1.keras.layers": "compat/v1/keras/layers.html", "tf.compat.v1.keras.layers.BatchNormalization": "compat/v1/keras/layers/batchnormalization.html", "tf.compat.v1.keras.layers.CuDNNGRU": "compat/v1/keras/layers/cudnngru.html", "tf.compat.v1.keras.layers.CuDNNLSTM": "compat/v1/keras/layers/cudnnlstm.html", "tf.compat.v1.keras.layers.DenseFeatures": "compat/v1/keras/layers/densefeatures.html", "tf.compat.v1.keras.layers.disable_v2_dtype_behavior": "compat/v1/keras/layers/disable_v2_dtype_behavior.html", "tf.compat.v1.keras.layers.enable_v2_dtype_behavior": "compat/v1/keras/layers/enable_v2_dtype_behavior.html", "tf.compat.v1.keras.layers.experimental": "compat/v1/keras/layers/experimental.html", "tf.compat.v1.keras.layers.experimental.preprocessing": "compat/v1/keras/layers/experimental/preprocessing.html", "tf.compat.v1.keras.layers.GRU": "compat/v1/keras/layers/gru.html", "tf.compat.v1.keras.layers.GRUCell": "compat/v1/keras/layers/grucell.html", "tf.compat.v1.keras.layers.LSTM": "compat/v1/keras/layers/lstm.html", "tf.compat.v1.keras.layers.LSTMCell": "compat/v1/keras/layers/lstmcell.html", "tf.compat.v1.keras.losses": "compat/v1/keras/losses.html", "tf.compat.v1.keras.metrics": "compat/v1/keras/metrics.html", "tf.compat.v1.keras.mixed_precision": "compat/v1/keras/mixed_precision.html", "tf.compat.v1.keras.models": "compat/v1/keras/models.html", "tf.compat.v1.keras.optimizers": "compat/v1/keras/optimizers.html", "tf.compat.v1.keras.optimizers.legacy": "compat/v1/keras/optimizers/legacy.html", "tf.compat.v1.keras.optimizers.schedules": "compat/v1/keras/optimizers/schedules.html", "tf.compat.v1.keras.preprocessing": "compat/v1/keras/preprocessing.html", "tf.compat.v1.keras.preprocessing.image": "compat/v1/keras/preprocessing/image.html", "tf.compat.v1.keras.preprocessing.sequence": "compat/v1/keras/preprocessing/sequence.html", "tf.compat.v1.keras.preprocessing.text": "compat/v1/keras/preprocessing/text.html", "tf.compat.v1.keras.regularizers": "compat/v1/keras/regularizers.html", "tf.compat.v1.keras.utils": "compat/v1/keras/utils.html", "tf.compat.v1.keras.utils.DeterministicRandomTestTool": "compat/v1/keras/utils/deterministicrandomtesttool.html", "tf.compat.v1.keras.utils.get_or_create_layer": "compat/v1/keras/utils/get_or_create_layer.html", "tf.compat.v1.keras.utils.track_tf1_style_variables": "compat/v1/keras/utils/track_tf1_style_variables.html", "tf.compat.v1.keras.wrappers": "compat/v1/keras/wrappers.html", "tf.compat.v1.keras.wrappers.scikit_learn": "compat/v1/keras/wrappers/scikit_learn.html", "tf.compat.v1.layers": "compat/v1/layers.html", "tf.compat.v1.layers.average_pooling1d": "compat/v1/layers/average_pooling1d.html", "tf.compat.v1.layers.average_pooling2d": "compat/v1/layers/average_pooling2d.html", "tf.compat.v1.layers.average_pooling3d": "compat/v1/layers/average_pooling3d.html", "tf.compat.v1.layers.AveragePooling1D": "compat/v1/layers/averagepooling1d.html", "tf.compat.v1.layers.AveragePooling2D": "compat/v1/layers/averagepooling2d.html", "tf.compat.v1.layers.AveragePooling3D": "compat/v1/layers/averagepooling3d.html", "tf.compat.v1.layers.batch_normalization": "compat/v1/layers/batch_normalization.html", "tf.compat.v1.layers.BatchNormalization": "compat/v1/layers/batchnormalization.html", "tf.compat.v1.layers.Conv1D": "compat/v1/layers/conv1d.html", "tf.compat.v1.layers.Conv2D": "compat/v1/layers/conv2d.html", "tf.compat.v1.layers.conv2d_transpose": "compat/v1/layers/conv2d_transpose.html", "tf.compat.v1.layers.Conv2DTranspose": "compat/v1/layers/conv2dtranspose.html", "tf.compat.v1.layers.Conv3D": "compat/v1/layers/conv3d.html", "tf.compat.v1.layers.conv3d_transpose": "compat/v1/layers/conv3d_transpose.html", "tf.compat.v1.layers.Conv3DTranspose": "compat/v1/layers/conv3dtranspose.html", "tf.compat.v1.layers.Dense": "compat/v1/layers/dense.html", "tf.compat.v1.layers.Dropout": "compat/v1/layers/dropout.html", "tf.compat.v1.layers.experimental": "compat/v1/layers/experimental.html", "tf.compat.v1.layers.experimental.keras_style_scope": "compat/v1/layers/experimental/keras_style_scope.html", "tf.compat.v1.layers.experimental.set_keras_style": "compat/v1/layers/experimental/set_keras_style.html", "tf.compat.v1.layers.Flatten": "compat/v1/layers/flatten.html", "tf.compat.v1.layers.Layer": "compat/v1/layers/layer.html", "tf.compat.v1.layers.max_pooling1d": "compat/v1/layers/max_pooling1d.html", "tf.compat.v1.layers.max_pooling2d": "compat/v1/layers/max_pooling2d.html", "tf.compat.v1.layers.max_pooling3d": "compat/v1/layers/max_pooling3d.html", "tf.compat.v1.layers.MaxPooling1D": "compat/v1/layers/maxpooling1d.html", "tf.compat.v1.layers.MaxPooling2D": "compat/v1/layers/maxpooling2d.html", "tf.compat.v1.layers.MaxPooling3D": "compat/v1/layers/maxpooling3d.html", "tf.compat.v1.layers.separable_conv1d": "compat/v1/layers/separable_conv1d.html", "tf.compat.v1.layers.separable_conv2d": "compat/v1/layers/separable_conv2d.html", "tf.compat.v1.layers.SeparableConv1D": "compat/v1/layers/separableconv1d.html", "tf.compat.v1.layers.SeparableConv2D": "compat/v1/layers/separableconv2d.html", "tf.compat.v1.linalg": "compat/v1/linalg.html", "tf.compat.v1.linalg.experimental": "compat/v1/linalg/experimental.html", "tf.compat.v1.lite": "compat/v1/lite.html", "tf.compat.v1.lite.constants": "compat/v1/lite/constants.html", "tf.compat.v1.lite.experimental": "compat/v1/lite/experimental.html", "tf.compat.v1.lite.experimental.authoring": "compat/v1/lite/experimental/authoring.html", "tf.compat.v1.lite.experimental.convert_op_hints_to_stubs": "compat/v1/lite/experimental/convert_op_hints_to_stubs.html", "tf.compat.v1.lite.OpHint": "compat/v1/lite/ophint.html", "tf.compat.v1.lite.OpHint.OpHintArgumentTracker": "compat/v1/lite/ophint/ophintargumenttracker.html", "tf.compat.v1.lite.TFLiteConverter": "compat/v1/lite/tfliteconverter.html", "tf.compat.v1.lite.toco_convert": "compat/v1/lite/toco_convert.html", "tf.compat.v1.lite.TocoConverter": "compat/v1/lite/tococonverter.html", "tf.compat.v1.LMDBReader": "compat/v1/lmdbreader.html", "tf.compat.v1.load_file_system_library": "compat/v1/load_file_system_library.html", "tf.compat.v1.local_variables": "compat/v1/local_variables.html", "tf.compat.v1.local_variables_initializer": "compat/v1/local_variables_initializer.html", "tf.compat.v1.logging": "compat/v1/logging.html", "tf.compat.v1.logging.debug": "compat/v1/logging/debug.html", "tf.compat.v1.logging.error": "compat/v1/logging/error.html", "tf.compat.v1.logging.fatal": "compat/v1/logging/fatal.html", "tf.compat.v1.logging.flush": "compat/v1/logging/flush.html", "tf.compat.v1.logging.get_verbosity": "compat/v1/logging/get_verbosity.html", "tf.compat.v1.logging.info": "compat/v1/logging/info.html", "tf.compat.v1.logging.log": "compat/v1/logging/log.html", "tf.compat.v1.logging.log_every_n": "compat/v1/logging/log_every_n.html", "tf.compat.v1.logging.log_first_n": "compat/v1/logging/log_first_n.html", "tf.compat.v1.logging.log_if": "compat/v1/logging/log_if.html", "tf.compat.v1.logging.set_verbosity": "compat/v1/logging/set_verbosity.html", "tf.compat.v1.logging.TaskLevelStatusMessage": "compat/v1/logging/tasklevelstatusmessage.html", "tf.compat.v1.logging.vlog": "compat/v1/logging/vlog.html", "tf.compat.v1.logging.warn": "compat/v1/logging/warn.html", "tf.compat.v1.logging.warning": "compat/v1/logging/warning.html", "tf.compat.v1.LogMessage": "compat/v1/logmessage.html", "tf.compat.v1.lookup": "compat/v1/lookup.html", "tf.compat.v1.lookup.experimental": "compat/v1/lookup/experimental.html", "tf.compat.v1.lookup.StaticHashTable": "compat/v1/lookup/statichashtable.html", "tf.compat.v1.lookup.StaticVocabularyTable": "compat/v1/lookup/staticvocabularytable.html", "tf.compat.v1.losses": "compat/v1/losses.html", "tf.compat.v1.losses.absolute_difference": "compat/v1/losses/absolute_difference.html", "tf.compat.v1.losses.add_loss": "compat/v1/losses/add_loss.html", "tf.compat.v1.losses.compute_weighted_loss": "compat/v1/losses/compute_weighted_loss.html", "tf.compat.v1.losses.cosine_distance": "compat/v1/losses/cosine_distance.html", "tf.compat.v1.losses.get_losses": "compat/v1/losses/get_losses.html", "tf.compat.v1.losses.get_regularization_loss": "compat/v1/losses/get_regularization_loss.html", "tf.compat.v1.losses.get_regularization_losses": "compat/v1/losses/get_regularization_losses.html", "tf.compat.v1.losses.get_total_loss": "compat/v1/losses/get_total_loss.html", "tf.compat.v1.losses.hinge_loss": "compat/v1/losses/hinge_loss.html", "tf.compat.v1.losses.huber_loss": "compat/v1/losses/huber_loss.html", "tf.compat.v1.losses.log_loss": "compat/v1/losses/log_loss.html", "tf.compat.v1.losses.mean_pairwise_squared_error": "compat/v1/losses/mean_pairwise_squared_error.html", "tf.compat.v1.losses.mean_squared_error": "compat/v1/losses/mean_squared_error.html", "tf.compat.v1.losses.Reduction": "compat/v1/losses/reduction.html", "tf.compat.v1.losses.sigmoid_cross_entropy": "compat/v1/losses/sigmoid_cross_entropy.html", "tf.compat.v1.losses.softmax_cross_entropy": "compat/v1/losses/softmax_cross_entropy.html", "tf.compat.v1.losses.sparse_softmax_cross_entropy": "compat/v1/losses/sparse_softmax_cross_entropy.html", "tf.compat.v1.make_template": "compat/v1/make_template.html", "tf.compat.v1.manip": "compat/v1/manip.html", "tf.compat.v1.map_fn": "compat/v1/map_fn.html", "tf.compat.v1.math": "compat/v1/math.html", "tf.compat.v1.math.in_top_k": "compat/v1/math/in_top_k.html", "tf.compat.v1.math.log_softmax": "compat/v1/math/log_softmax.html", "tf.compat.v1.math.softmax": "compat/v1/math/softmax.html", "tf.compat.v1.math.special": "compat/v1/math/special.html", "tf.compat.v1.MetaGraphDef": "compat/v1/metagraphdef.html", "tf.compat.v1.MetaGraphDef.CollectionDefEntry": "compat/v1/metagraphdef/collectiondefentry.html", "tf.compat.v1.MetaGraphDef.MetaInfoDef": "compat/v1/metagraphdef/metainfodef.html", "tf.compat.v1.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry": "compat/v1/metagraphdef/metainfodef/functionaliasesentry.html", "tf.compat.v1.MetaGraphDef.SignatureDefEntry": "compat/v1/metagraphdef/signaturedefentry.html", "tf.compat.v1.metrics": "compat/v1/metrics.html", "tf.compat.v1.metrics.accuracy": "compat/v1/metrics/accuracy.html", "tf.compat.v1.metrics.auc": "compat/v1/metrics/auc.html", "tf.compat.v1.metrics.average_precision_at_k": "compat/v1/metrics/average_precision_at_k.html", "tf.compat.v1.metrics.false_negatives": "compat/v1/metrics/false_negatives.html", "tf.compat.v1.metrics.false_negatives_at_thresholds": "compat/v1/metrics/false_negatives_at_thresholds.html", "tf.compat.v1.metrics.false_positives": "compat/v1/metrics/false_positives.html", "tf.compat.v1.metrics.false_positives_at_thresholds": "compat/v1/metrics/false_positives_at_thresholds.html", "tf.compat.v1.metrics.mean": "compat/v1/metrics/mean.html", "tf.compat.v1.metrics.mean_absolute_error": "compat/v1/metrics/mean_absolute_error.html", "tf.compat.v1.metrics.mean_cosine_distance": "compat/v1/metrics/mean_cosine_distance.html", "tf.compat.v1.metrics.mean_iou": "compat/v1/metrics/mean_iou.html", "tf.compat.v1.metrics.mean_per_class_accuracy": "compat/v1/metrics/mean_per_class_accuracy.html", "tf.compat.v1.metrics.mean_relative_error": "compat/v1/metrics/mean_relative_error.html", "tf.compat.v1.metrics.mean_squared_error": "compat/v1/metrics/mean_squared_error.html", "tf.compat.v1.metrics.mean_tensor": "compat/v1/metrics/mean_tensor.html", "tf.compat.v1.metrics.percentage_below": "compat/v1/metrics/percentage_below.html", "tf.compat.v1.metrics.precision": "compat/v1/metrics/precision.html", "tf.compat.v1.metrics.precision_at_k": "compat/v1/metrics/precision_at_k.html", "tf.compat.v1.metrics.precision_at_thresholds": "compat/v1/metrics/precision_at_thresholds.html", "tf.compat.v1.metrics.precision_at_top_k": "compat/v1/metrics/precision_at_top_k.html", "tf.compat.v1.metrics.recall": "compat/v1/metrics/recall.html", "tf.compat.v1.metrics.recall_at_k": "compat/v1/metrics/recall_at_k.html", "tf.compat.v1.metrics.recall_at_thresholds": "compat/v1/metrics/recall_at_thresholds.html", "tf.compat.v1.metrics.recall_at_top_k": "compat/v1/metrics/recall_at_top_k.html", "tf.compat.v1.metrics.root_mean_squared_error": "compat/v1/metrics/root_mean_squared_error.html", "tf.compat.v1.metrics.sensitivity_at_specificity": "compat/v1/metrics/sensitivity_at_specificity.html", "tf.compat.v1.metrics.sparse_average_precision_at_k": "compat/v1/metrics/sparse_average_precision_at_k.html", "tf.compat.v1.metrics.sparse_precision_at_k": "compat/v1/metrics/sparse_precision_at_k.html", "tf.compat.v1.metrics.specificity_at_sensitivity": "compat/v1/metrics/specificity_at_sensitivity.html", "tf.compat.v1.metrics.true_negatives": "compat/v1/metrics/true_negatives.html", "tf.compat.v1.metrics.true_negatives_at_thresholds": "compat/v1/metrics/true_negatives_at_thresholds.html", "tf.compat.v1.metrics.true_positives": "compat/v1/metrics/true_positives.html", "tf.compat.v1.metrics.true_positives_at_thresholds": "compat/v1/metrics/true_positives_at_thresholds.html", "tf.compat.v1.min_max_variable_partitioner": "compat/v1/min_max_variable_partitioner.html", "tf.compat.v1.mixed_precision": "compat/v1/mixed_precision.html", "tf.compat.v1.mixed_precision.disable_mixed_precision_graph_rewrite": "compat/v1/mixed_precision/disable_mixed_precision_graph_rewrite.html", "tf.compat.v1.mixed_precision.DynamicLossScale": "compat/v1/mixed_precision/dynamiclossscale.html", "tf.compat.v1.mixed_precision.enable_mixed_precision_graph_rewrite": "compat/v1/mixed_precision/enable_mixed_precision_graph_rewrite.html", "tf.compat.v1.mixed_precision.experimental": "compat/v1/mixed_precision/experimental.html", "tf.compat.v1.mixed_precision.FixedLossScale": "compat/v1/mixed_precision/fixedlossscale.html", "tf.compat.v1.mixed_precision.LossScale": "compat/v1/mixed_precision/lossscale.html", "tf.compat.v1.mixed_precision.MixedPrecisionLossScaleOptimizer": "compat/v1/mixed_precision/mixedprecisionlossscaleoptimizer.html", "tf.compat.v1.mlir": "compat/v1/mlir.html", "tf.compat.v1.mlir.experimental": "compat/v1/mlir/experimental.html", "tf.compat.v1.model_variables": "compat/v1/model_variables.html", "tf.compat.v1.moving_average_variables": "compat/v1/moving_average_variables.html", "tf.compat.v1.multinomial": "compat/v1/multinomial.html", "tf.compat.v1.NameAttrList": "compat/v1/nameattrlist.html", "tf.compat.v1.NameAttrList.AttrEntry": "compat/v1/nameattrlist/attrentry.html", "tf.compat.v1.nest": "compat/v1/nest.html", "tf.compat.v1.nn": "compat/v1/nn.html", "tf.compat.v1.nn.avg_pool": "compat/v1/nn/avg_pool.html", "tf.compat.v1.nn.batch_norm_with_global_normalization": "compat/v1/nn/batch_norm_with_global_normalization.html", "tf.compat.v1.nn.bidirectional_dynamic_rnn": "compat/v1/nn/bidirectional_dynamic_rnn.html", "tf.compat.v1.nn.conv1d": "compat/v1/nn/conv1d.html", "tf.compat.v1.nn.conv2d": "compat/v1/nn/conv2d.html", "tf.compat.v1.nn.conv2d_backprop_filter": "compat/v1/nn/conv2d_backprop_filter.html", "tf.compat.v1.nn.conv2d_backprop_input": "compat/v1/nn/conv2d_backprop_input.html", "tf.compat.v1.nn.conv2d_transpose": "compat/v1/nn/conv2d_transpose.html", "tf.compat.v1.nn.conv3d": "compat/v1/nn/conv3d.html", "tf.compat.v1.nn.conv3d_backprop_filter": "compat/v1/nn/conv3d_backprop_filter.html", "tf.compat.v1.nn.conv3d_transpose": "compat/v1/nn/conv3d_transpose.html", "tf.compat.v1.nn.convolution": "compat/v1/nn/convolution.html", "tf.compat.v1.nn.crelu": "compat/v1/nn/crelu.html", "tf.compat.v1.nn.ctc_beam_search_decoder": "compat/v1/nn/ctc_beam_search_decoder.html", "tf.compat.v1.nn.ctc_loss": "compat/v1/nn/ctc_loss.html", "tf.compat.v1.nn.ctc_loss_v2": "compat/v1/nn/ctc_loss_v2.html", "tf.compat.v1.nn.depthwise_conv2d": "compat/v1/nn/depthwise_conv2d.html", "tf.compat.v1.nn.depthwise_conv2d_native": "compat/v1/nn/depthwise_conv2d_native.html", "tf.compat.v1.nn.dilation2d": "compat/v1/nn/dilation2d.html", "tf.compat.v1.nn.dropout": "compat/v1/nn/dropout.html", "tf.compat.v1.nn.dynamic_rnn": "compat/v1/nn/dynamic_rnn.html", "tf.compat.v1.nn.embedding_lookup": "compat/v1/nn/embedding_lookup.html", "tf.compat.v1.nn.embedding_lookup_sparse": "compat/v1/nn/embedding_lookup_sparse.html", "tf.compat.v1.nn.erosion2d": "compat/v1/nn/erosion2d.html", "tf.compat.v1.nn.experimental": "compat/v1/nn/experimental.html", "tf.compat.v1.nn.fractional_avg_pool": "compat/v1/nn/fractional_avg_pool.html", "tf.compat.v1.nn.fractional_max_pool": "compat/v1/nn/fractional_max_pool.html", "tf.compat.v1.nn.fused_batch_norm": "compat/v1/nn/fused_batch_norm.html", "tf.compat.v1.nn.max_pool": "compat/v1/nn/max_pool.html", "tf.compat.v1.nn.max_pool_with_argmax": "compat/v1/nn/max_pool_with_argmax.html", "tf.compat.v1.nn.moments": "compat/v1/nn/moments.html", "tf.compat.v1.nn.nce_loss": "compat/v1/nn/nce_loss.html", "tf.compat.v1.nn.pool": "compat/v1/nn/pool.html", "tf.compat.v1.nn.quantized_avg_pool": "compat/v1/nn/quantized_avg_pool.html", "tf.compat.v1.nn.quantized_conv2d": "compat/v1/nn/quantized_conv2d.html", "tf.compat.v1.nn.quantized_max_pool": "compat/v1/nn/quantized_max_pool.html", "tf.compat.v1.nn.quantized_relu_x": "compat/v1/nn/quantized_relu_x.html", "tf.compat.v1.nn.raw_rnn": "compat/v1/nn/raw_rnn.html", "tf.compat.v1.nn.relu_layer": "compat/v1/nn/relu_layer.html", "tf.compat.v1.nn.rnn_cell": "compat/v1/nn/rnn_cell.html", "tf.compat.v1.nn.rnn_cell.BasicLSTMCell": "compat/v1/nn/rnn_cell/basiclstmcell.html", "tf.compat.v1.nn.rnn_cell.BasicRNNCell": "compat/v1/nn/rnn_cell/basicrnncell.html", "tf.compat.v1.nn.rnn_cell.DeviceWrapper": "compat/v1/nn/rnn_cell/devicewrapper.html", "tf.compat.v1.nn.rnn_cell.DropoutWrapper": "compat/v1/nn/rnn_cell/dropoutwrapper.html", "tf.compat.v1.nn.rnn_cell.GRUCell": "compat/v1/nn/rnn_cell/grucell.html", "tf.compat.v1.nn.rnn_cell.LSTMCell": "compat/v1/nn/rnn_cell/lstmcell.html", "tf.compat.v1.nn.rnn_cell.LSTMStateTuple": "compat/v1/nn/rnn_cell/lstmstatetuple.html", "tf.compat.v1.nn.rnn_cell.MultiRNNCell": "compat/v1/nn/rnn_cell/multirnncell.html", "tf.compat.v1.nn.rnn_cell.ResidualWrapper": "compat/v1/nn/rnn_cell/residualwrapper.html", "tf.compat.v1.nn.rnn_cell.RNNCell": "compat/v1/nn/rnn_cell/rnncell.html", "tf.compat.v1.nn.safe_embedding_lookup_sparse": "compat/v1/nn/safe_embedding_lookup_sparse.html", "tf.compat.v1.nn.sampled_softmax_loss": "compat/v1/nn/sampled_softmax_loss.html", "tf.compat.v1.nn.separable_conv2d": "compat/v1/nn/separable_conv2d.html", "tf.compat.v1.nn.sigmoid_cross_entropy_with_logits": "compat/v1/nn/sigmoid_cross_entropy_with_logits.html", "tf.compat.v1.nn.softmax_cross_entropy_with_logits": "compat/v1/nn/softmax_cross_entropy_with_logits.html", "tf.compat.v1.nn.softmax_cross_entropy_with_logits_v2": "compat/v1/nn/softmax_cross_entropy_with_logits_v2.html", "tf.compat.v1.nn.sparse_softmax_cross_entropy_with_logits": "compat/v1/nn/sparse_softmax_cross_entropy_with_logits.html", "tf.compat.v1.nn.static_bidirectional_rnn": "compat/v1/nn/static_bidirectional_rnn.html", "tf.compat.v1.nn.static_rnn": "compat/v1/nn/static_rnn.html", "tf.compat.v1.nn.static_state_saving_rnn": "compat/v1/nn/static_state_saving_rnn.html", "tf.compat.v1.nn.sufficient_statistics": "compat/v1/nn/sufficient_statistics.html", "tf.compat.v1.nn.weighted_cross_entropy_with_logits": "compat/v1/nn/weighted_cross_entropy_with_logits.html", "tf.compat.v1.nn.weighted_moments": "compat/v1/nn/weighted_moments.html", "tf.compat.v1.nn.xw_plus_b": "compat/v1/nn/xw_plus_b.html", "tf.compat.v1.no_regularizer": "compat/v1/no_regularizer.html", "tf.compat.v1.NodeDef": "compat/v1/nodedef.html", "tf.compat.v1.NodeDef.AttrEntry": "compat/v1/nodedef/attrentry.html", "tf.compat.v1.NodeDef.ExperimentalDebugInfo": "compat/v1/nodedef/experimentaldebuginfo.html", "tf.compat.v1.norm": "compat/v1/norm.html", "tf.compat.v1.ones_like": "compat/v1/ones_like.html", "tf.compat.v1.op_scope": "compat/v1/op_scope.html", "tf.compat.v1.OptimizerOptions": "compat/v1/optimizeroptions.html", "tf.compat.v1.pad": "compat/v1/pad.html", "tf.compat.v1.parse_example": "compat/v1/parse_example.html", "tf.compat.v1.parse_single_example": "compat/v1/parse_single_example.html", "tf.compat.v1.placeholder": "compat/v1/placeholder.html", "tf.compat.v1.placeholder_with_default": "compat/v1/placeholder_with_default.html", "tf.compat.v1.Print": "compat/v1/print.html", "tf.compat.v1.profiler": "compat/v1/profiler.html", "tf.compat.v1.profiler.AdviceProto": "compat/v1/profiler/adviceproto.html", "tf.compat.v1.profiler.AdviceProto.Checker": "compat/v1/profiler/adviceproto/checker.html", "tf.compat.v1.profiler.AdviceProto.CheckersEntry": "compat/v1/profiler/adviceproto/checkersentry.html", "tf.compat.v1.profiler.advise": "compat/v1/profiler/advise.html", "tf.compat.v1.profiler.GraphNodeProto": "compat/v1/profiler/graphnodeproto.html", "tf.compat.v1.profiler.GraphNodeProto.InputShapesEntry": "compat/v1/profiler/graphnodeproto/inputshapesentry.html", "tf.compat.v1.profiler.MultiGraphNodeProto": "compat/v1/profiler/multigraphnodeproto.html", "tf.compat.v1.profiler.OpLogProto": "compat/v1/profiler/oplogproto.html", "tf.compat.v1.profiler.OpLogProto.IdToStringEntry": "compat/v1/profiler/oplogproto/idtostringentry.html", "tf.compat.v1.profiler.profile": "compat/v1/profiler/profile.html", "tf.compat.v1.profiler.ProfileOptionBuilder": "compat/v1/profiler/profileoptionbuilder.html", "tf.compat.v1.profiler.Profiler": "compat/v1/profiler/profiler.html", "tf.compat.v1.profiler.write_op_log": "compat/v1/profiler/write_op_log.html", "tf.compat.v1.py_func": "compat/v1/py_func.html", "tf.compat.v1.python_io": "compat/v1/python_io.html", "tf.compat.v1.quantization": "compat/v1/quantization.html", "tf.compat.v1.quantize_v2": "compat/v1/quantize_v2.html", "tf.compat.v1.queue": "compat/v1/queue.html", "tf.compat.v1.ragged": "compat/v1/ragged.html", "tf.compat.v1.ragged.constant_value": "compat/v1/ragged/constant_value.html", "tf.compat.v1.ragged.placeholder": "compat/v1/ragged/placeholder.html", "tf.compat.v1.ragged.RaggedTensorValue": "compat/v1/ragged/raggedtensorvalue.html", "tf.compat.v1.random": "compat/v1/random.html", "tf.compat.v1.random.experimental": "compat/v1/random/experimental.html", "tf.compat.v1.random.stateless_multinomial": "compat/v1/random/stateless_multinomial.html", "tf.compat.v1.random_normal_initializer": "compat/v1/random_normal_initializer.html", "tf.compat.v1.random_poisson": "compat/v1/random_poisson.html", "tf.compat.v1.random_uniform_initializer": "compat/v1/random_uniform_initializer.html", "tf.compat.v1.raw_ops": "compat/v1/raw_ops.html", "tf.compat.v1.ReaderBase": "compat/v1/readerbase.html", "tf.compat.v1.reduce_all": "compat/v1/reduce_all.html", "tf.compat.v1.reduce_any": "compat/v1/reduce_any.html", "tf.compat.v1.reduce_join": "compat/v1/reduce_join.html", "tf.compat.v1.reduce_logsumexp": "compat/v1/reduce_logsumexp.html", "tf.compat.v1.reduce_max": "compat/v1/reduce_max.html", "tf.compat.v1.reduce_mean": "compat/v1/reduce_mean.html", "tf.compat.v1.reduce_min": "compat/v1/reduce_min.html", "tf.compat.v1.reduce_prod": "compat/v1/reduce_prod.html", "tf.compat.v1.reduce_sum": "compat/v1/reduce_sum.html", "tf.compat.v1.report_uninitialized_variables": "compat/v1/report_uninitialized_variables.html", "tf.compat.v1.reset_default_graph": "compat/v1/reset_default_graph.html", "tf.compat.v1.resource_loader": "compat/v1/resource_loader.html", "tf.compat.v1.resource_loader.get_data_files_path": "compat/v1/resource_loader/get_data_files_path.html", "tf.compat.v1.resource_loader.get_path_to_datafile": "compat/v1/resource_loader/get_path_to_datafile.html", "tf.compat.v1.resource_loader.get_root_dir_with_all_resources": "compat/v1/resource_loader/get_root_dir_with_all_resources.html", "tf.compat.v1.resource_loader.load_resource": "compat/v1/resource_loader/load_resource.html", "tf.compat.v1.resource_loader.readahead_file_path": "compat/v1/resource_loader/readahead_file_path.html", "tf.compat.v1.resource_variables_enabled": "compat/v1/resource_variables_enabled.html", "tf.compat.v1.reverse_sequence": "compat/v1/reverse_sequence.html", "tf.compat.v1.RunMetadata": "compat/v1/runmetadata.html", "tf.compat.v1.RunMetadata.FunctionGraphs": "compat/v1/runmetadata/functiongraphs.html", "tf.compat.v1.RunOptions": "compat/v1/runoptions.html", "tf.compat.v1.RunOptions.Experimental": "compat/v1/runoptions/experimental.html", "tf.compat.v1.RunOptions.Experimental.RunHandlerPoolOptions": "compat/v1/runoptions/experimental/runhandlerpooloptions.html", "tf.compat.v1.saved_model": "compat/v1/saved_model.html", "tf.compat.v1.saved_model.build_signature_def": "compat/v1/saved_model/build_signature_def.html", "tf.compat.v1.saved_model.build_tensor_info": "compat/v1/saved_model/build_tensor_info.html", "tf.compat.v1.saved_model.builder": "compat/v1/saved_model/builder.html", "tf.compat.v1.saved_model.classification_signature_def": "compat/v1/saved_model/classification_signature_def.html", "tf.compat.v1.saved_model.constants": "compat/v1/saved_model/constants.html", "tf.compat.v1.saved_model.contains_saved_model": "compat/v1/saved_model/contains_saved_model.html", "tf.compat.v1.saved_model.experimental": "compat/v1/saved_model/experimental.html", "tf.compat.v1.saved_model.get_tensor_from_tensor_info": "compat/v1/saved_model/get_tensor_from_tensor_info.html", "tf.compat.v1.saved_model.is_valid_signature": "compat/v1/saved_model/is_valid_signature.html", "tf.compat.v1.saved_model.load": "compat/v1/saved_model/load.html", "tf.compat.v1.saved_model.loader": "compat/v1/saved_model/loader.html", "tf.compat.v1.saved_model.main_op": "compat/v1/saved_model/main_op.html", "tf.compat.v1.saved_model.main_op.main_op": "compat/v1/saved_model/main_op/main_op.html", "tf.compat.v1.saved_model.main_op_with_restore": "compat/v1/saved_model/main_op_with_restore.html", "tf.compat.v1.saved_model.predict_signature_def": "compat/v1/saved_model/predict_signature_def.html", "tf.compat.v1.saved_model.regression_signature_def": "compat/v1/saved_model/regression_signature_def.html", "tf.compat.v1.saved_model.signature_constants": "compat/v1/saved_model/signature_constants.html", "tf.compat.v1.saved_model.signature_def_utils": "compat/v1/saved_model/signature_def_utils.html", "tf.compat.v1.saved_model.signature_def_utils.MethodNameUpdater": "compat/v1/saved_model/signature_def_utils/methodnameupdater.html", "tf.compat.v1.saved_model.simple_save": "compat/v1/saved_model/simple_save.html", "tf.compat.v1.saved_model.tag_constants": "compat/v1/saved_model/tag_constants.html", "tf.compat.v1.saved_model.utils": "compat/v1/saved_model/utils.html", "tf.compat.v1.scalar_mul": "compat/v1/scalar_mul.html", "tf.compat.v1.scan": "compat/v1/scan.html", "tf.compat.v1.scatter_add": "compat/v1/scatter_add.html", "tf.compat.v1.scatter_div": "compat/v1/scatter_div.html", "tf.compat.v1.scatter_max": "compat/v1/scatter_max.html", "tf.compat.v1.scatter_min": "compat/v1/scatter_min.html", "tf.compat.v1.scatter_mul": "compat/v1/scatter_mul.html", "tf.compat.v1.scatter_nd_add": "compat/v1/scatter_nd_add.html", "tf.compat.v1.scatter_nd_sub": "compat/v1/scatter_nd_sub.html", "tf.compat.v1.scatter_nd_update": "compat/v1/scatter_nd_update.html", "tf.compat.v1.scatter_sub": "compat/v1/scatter_sub.html", "tf.compat.v1.scatter_update": "compat/v1/scatter_update.html", "tf.compat.v1.serialize_many_sparse": "compat/v1/serialize_many_sparse.html", "tf.compat.v1.serialize_sparse": "compat/v1/serialize_sparse.html", "tf.compat.v1.Session": "compat/v1/session.html", "tf.compat.v1.SessionLog": "compat/v1/sessionlog.html", "tf.compat.v1.set_random_seed": "compat/v1/set_random_seed.html", "tf.compat.v1.setdiff1d": "compat/v1/setdiff1d.html", "tf.compat.v1.sets": "compat/v1/sets.html", "tf.compat.v1.shape": "compat/v1/shape.html", "tf.compat.v1.signal": "compat/v1/signal.html", "tf.compat.v1.size": "compat/v1/size.html", "tf.compat.v1.space_to_batch": "compat/v1/space_to_batch.html", "tf.compat.v1.space_to_depth": "compat/v1/space_to_depth.html", "tf.compat.v1.sparse": "compat/v1/sparse.html", "tf.compat.v1.sparse_add": "compat/v1/sparse_add.html", "tf.compat.v1.sparse_concat": "compat/v1/sparse_concat.html", "tf.compat.v1.sparse_matmul": "compat/v1/sparse_matmul.html", "tf.compat.v1.sparse_merge": "compat/v1/sparse_merge.html", "tf.compat.v1.sparse_placeholder": "compat/v1/sparse_placeholder.html", "tf.compat.v1.sparse_reduce_max": "compat/v1/sparse_reduce_max.html", "tf.compat.v1.sparse_reduce_max_sparse": "compat/v1/sparse_reduce_max_sparse.html", "tf.compat.v1.sparse_reduce_sum": "compat/v1/sparse_reduce_sum.html", "tf.compat.v1.sparse_reduce_sum_sparse": "compat/v1/sparse_reduce_sum_sparse.html", "tf.compat.v1.sparse_segment_mean": "compat/v1/sparse_segment_mean.html", "tf.compat.v1.sparse_segment_sqrt_n": "compat/v1/sparse_segment_sqrt_n.html", "tf.compat.v1.sparse_segment_sum": "compat/v1/sparse_segment_sum.html", "tf.compat.v1.sparse_split": "compat/v1/sparse_split.html", "tf.compat.v1.sparse_to_dense": "compat/v1/sparse_to_dense.html", "tf.compat.v1.SparseConditionalAccumulator": "compat/v1/sparseconditionalaccumulator.html", "tf.compat.v1.SparseTensorValue": "compat/v1/sparsetensorvalue.html", "tf.compat.v1.spectral": "compat/v1/spectral.html", "tf.compat.v1.squeeze": "compat/v1/squeeze.html", "tf.compat.v1.string_split": "compat/v1/string_split.html", "tf.compat.v1.string_to_hash_bucket": "compat/v1/string_to_hash_bucket.html", "tf.compat.v1.string_to_number": "compat/v1/string_to_number.html", "tf.compat.v1.strings": "compat/v1/strings.html", "tf.compat.v1.strings.length": "compat/v1/strings/length.html", "tf.compat.v1.strings.split": "compat/v1/strings/split.html", "tf.compat.v1.strings.substr": "compat/v1/strings/substr.html", "tf.compat.v1.substr": "compat/v1/substr.html", "tf.compat.v1.summary": "compat/v1/summary.html", "tf.compat.v1.summary.all_v2_summary_ops": "compat/v1/summary/all_v2_summary_ops.html", "tf.compat.v1.summary.audio": "compat/v1/summary/audio.html", "tf.compat.v1.summary.FileWriter": "compat/v1/summary/filewriter.html", "tf.compat.v1.summary.FileWriterCache": "compat/v1/summary/filewritercache.html", "tf.compat.v1.summary.get_summary_description": "compat/v1/summary/get_summary_description.html", "tf.compat.v1.summary.histogram": "compat/v1/summary/histogram.html", "tf.compat.v1.summary.image": "compat/v1/summary/image.html", "tf.compat.v1.summary.initialize": "compat/v1/summary/initialize.html", "tf.compat.v1.summary.merge": "compat/v1/summary/merge.html", "tf.compat.v1.summary.merge_all": "compat/v1/summary/merge_all.html", "tf.compat.v1.summary.scalar": "compat/v1/summary/scalar.html", "tf.compat.v1.summary.SummaryDescription": "compat/v1/summary/summarydescription.html", "tf.compat.v1.summary.TaggedRunMetadata": "compat/v1/summary/taggedrunmetadata.html", "tf.compat.v1.summary.tensor_summary": "compat/v1/summary/tensor_summary.html", "tf.compat.v1.summary.text": "compat/v1/summary/text.html", "tf.compat.v1.SummaryMetadata": "compat/v1/summarymetadata.html", "tf.compat.v1.SummaryMetadata.PluginData": "compat/v1/summarymetadata/plugindata.html", "tf.compat.v1.sysconfig": "compat/v1/sysconfig.html", "tf.compat.v1.tables_initializer": "compat/v1/tables_initializer.html", "tf.compat.v1.TensorInfo": "compat/v1/tensorinfo.html", "tf.compat.v1.TensorInfo.CompositeTensor": "compat/v1/tensorinfo/compositetensor.html", "tf.compat.v1.TensorInfo.CooSparse": "compat/v1/tensorinfo/coosparse.html", "tf.compat.v1.test": "compat/v1/test.html", "tf.compat.v1.test.assert_equal_graph_def": "compat/v1/test/assert_equal_graph_def.html", "tf.compat.v1.test.compute_gradient": "compat/v1/test/compute_gradient.html", "tf.compat.v1.test.compute_gradient_error": "compat/v1/test/compute_gradient_error.html", "tf.compat.v1.test.get_temp_dir": "compat/v1/test/get_temp_dir.html", "tf.compat.v1.test.StubOutForTesting": "compat/v1/test/stuboutfortesting.html", "tf.compat.v1.test.test_src_dir_path": "compat/v1/test/test_src_dir_path.html", "tf.compat.v1.TextLineReader": "compat/v1/textlinereader.html", "tf.compat.v1.TFRecordReader": "compat/v1/tfrecordreader.html", "tf.compat.v1.to_bfloat16": "compat/v1/to_bfloat16.html", "tf.compat.v1.to_complex128": "compat/v1/to_complex128.html", "tf.compat.v1.to_complex64": "compat/v1/to_complex64.html", "tf.compat.v1.to_double": "compat/v1/to_double.html", "tf.compat.v1.to_float": "compat/v1/to_float.html", "tf.compat.v1.to_int32": "compat/v1/to_int32.html", "tf.compat.v1.to_int64": "compat/v1/to_int64.html", "tf.compat.v1.tpu": "compat/v1/tpu.html", "tf.compat.v1.tpu.batch_parallel": "compat/v1/tpu/batch_parallel.html", "tf.compat.v1.tpu.bfloat16_scope": "compat/v1/tpu/bfloat16_scope.html", "tf.compat.v1.tpu.core": "compat/v1/tpu/core.html", "tf.compat.v1.tpu.cross_replica_sum": "compat/v1/tpu/cross_replica_sum.html", "tf.compat.v1.tpu.CrossShardOptimizer": "compat/v1/tpu/crossshardoptimizer.html", "tf.compat.v1.tpu.experimental": "compat/v1/tpu/experimental.html", "tf.compat.v1.tpu.experimental.AdagradParameters": "compat/v1/tpu/experimental/adagradparameters.html", "tf.compat.v1.tpu.experimental.AdamParameters": "compat/v1/tpu/experimental/adamparameters.html", "tf.compat.v1.tpu.experimental.embedding": "compat/v1/tpu/experimental/embedding.html", "tf.compat.v1.tpu.experimental.embedding_column": "compat/v1/tpu/experimental/embedding_column.html", "tf.compat.v1.tpu.experimental.FtrlParameters": "compat/v1/tpu/experimental/ftrlparameters.html", "tf.compat.v1.tpu.experimental.shared_embedding_columns": "compat/v1/tpu/experimental/shared_embedding_columns.html", "tf.compat.v1.tpu.experimental.StochasticGradientDescentParameters": "compat/v1/tpu/experimental/stochasticgradientdescentparameters.html", "tf.compat.v1.tpu.initialize_system": "compat/v1/tpu/initialize_system.html", "tf.compat.v1.tpu.outside_compilation": "compat/v1/tpu/outside_compilation.html", "tf.compat.v1.tpu.PaddingSpec": "compat/v1/tpu/paddingspec.html", "tf.compat.v1.tpu.replicate": "compat/v1/tpu/replicate.html", "tf.compat.v1.tpu.rewrite": "compat/v1/tpu/rewrite.html", "tf.compat.v1.tpu.shard": "compat/v1/tpu/shard.html", "tf.compat.v1.tpu.shutdown_system": "compat/v1/tpu/shutdown_system.html", "tf.compat.v1.train": "compat/v1/train.html", "tf.compat.v1.train.AdadeltaOptimizer": "compat/v1/train/adadeltaoptimizer.html", "tf.compat.v1.train.AdagradDAOptimizer": "compat/v1/train/adagraddaoptimizer.html", "tf.compat.v1.train.AdagradOptimizer": "compat/v1/train/adagradoptimizer.html", "tf.compat.v1.train.AdamOptimizer": "compat/v1/train/adamoptimizer.html", "tf.compat.v1.train.add_queue_runner": "compat/v1/train/add_queue_runner.html", "tf.compat.v1.train.assert_global_step": "compat/v1/train/assert_global_step.html", "tf.compat.v1.train.basic_train_loop": "compat/v1/train/basic_train_loop.html", "tf.compat.v1.train.batch": "compat/v1/train/batch.html", "tf.compat.v1.train.batch_join": "compat/v1/train/batch_join.html", "tf.compat.v1.train.Checkpoint": "compat/v1/train/checkpoint.html", "tf.compat.v1.train.checkpoint_exists": "compat/v1/train/checkpoint_exists.html", "tf.compat.v1.train.ChiefSessionCreator": "compat/v1/train/chiefsessioncreator.html", "tf.compat.v1.train.cosine_decay": "compat/v1/train/cosine_decay.html", "tf.compat.v1.train.cosine_decay_restarts": "compat/v1/train/cosine_decay_restarts.html", "tf.compat.v1.train.create_global_step": "compat/v1/train/create_global_step.html", "tf.compat.v1.train.do_quantize_training_on_graphdef": "compat/v1/train/do_quantize_training_on_graphdef.html", "tf.compat.v1.train.experimental": "compat/v1/train/experimental.html", "tf.compat.v1.train.exponential_decay": "compat/v1/train/exponential_decay.html", "tf.compat.v1.train.export_meta_graph": "compat/v1/train/export_meta_graph.html", "tf.compat.v1.train.FtrlOptimizer": "compat/v1/train/ftrloptimizer.html", "tf.compat.v1.train.generate_checkpoint_state_proto": "compat/v1/train/generate_checkpoint_state_proto.html", "tf.compat.v1.train.get_checkpoint_mtimes": "compat/v1/train/get_checkpoint_mtimes.html", "tf.compat.v1.train.get_global_step": "compat/v1/train/get_global_step.html", "tf.compat.v1.train.get_or_create_global_step": "compat/v1/train/get_or_create_global_step.html", "tf.compat.v1.train.global_step": "compat/v1/train/global_step.html", "tf.compat.v1.train.GradientDescentOptimizer": "compat/v1/train/gradientdescentoptimizer.html", "tf.compat.v1.train.import_meta_graph": "compat/v1/train/import_meta_graph.html", "tf.compat.v1.train.init_from_checkpoint": "compat/v1/train/init_from_checkpoint.html", "tf.compat.v1.train.input_producer": "compat/v1/train/input_producer.html", "tf.compat.v1.train.inverse_time_decay": "compat/v1/train/inverse_time_decay.html", "tf.compat.v1.train.limit_epochs": "compat/v1/train/limit_epochs.html", "tf.compat.v1.train.linear_cosine_decay": "compat/v1/train/linear_cosine_decay.html", "tf.compat.v1.train.LooperThread": "compat/v1/train/looperthread.html", "tf.compat.v1.train.maybe_batch": "compat/v1/train/maybe_batch.html", "tf.compat.v1.train.maybe_batch_join": "compat/v1/train/maybe_batch_join.html", "tf.compat.v1.train.maybe_shuffle_batch": "compat/v1/train/maybe_shuffle_batch.html", "tf.compat.v1.train.maybe_shuffle_batch_join": "compat/v1/train/maybe_shuffle_batch_join.html", "tf.compat.v1.train.MomentumOptimizer": "compat/v1/train/momentumoptimizer.html", "tf.compat.v1.train.MonitoredSession": "compat/v1/train/monitoredsession.html", "tf.compat.v1.train.MonitoredSession.StepContext": "compat/v1/train/monitoredsession/stepcontext.html", "tf.compat.v1.train.MonitoredTrainingSession": "compat/v1/train/monitoredtrainingsession.html", "tf.compat.v1.train.natural_exp_decay": "compat/v1/train/natural_exp_decay.html", "tf.compat.v1.train.NewCheckpointReader": "compat/v1/train/newcheckpointreader.html", "tf.compat.v1.train.noisy_linear_cosine_decay": "compat/v1/train/noisy_linear_cosine_decay.html", "tf.compat.v1.train.Optimizer": "compat/v1/train/optimizer.html", "tf.compat.v1.train.piecewise_constant": "compat/v1/train/piecewise_constant.html", "tf.compat.v1.train.polynomial_decay": "compat/v1/train/polynomial_decay.html", "tf.compat.v1.train.ProximalAdagradOptimizer": "compat/v1/train/proximaladagradoptimizer.html", "tf.compat.v1.train.ProximalGradientDescentOptimizer": "compat/v1/train/proximalgradientdescentoptimizer.html", "tf.compat.v1.train.queue_runner": "compat/v1/train/queue_runner.html", "tf.compat.v1.train.QueueRunner": "compat/v1/train/queuerunner.html", "tf.compat.v1.train.range_input_producer": "compat/v1/train/range_input_producer.html", "tf.compat.v1.train.remove_checkpoint": "compat/v1/train/remove_checkpoint.html", "tf.compat.v1.train.replica_device_setter": "compat/v1/train/replica_device_setter.html", "tf.compat.v1.train.RMSPropOptimizer": "compat/v1/train/rmspropoptimizer.html", "tf.compat.v1.train.Saver": "compat/v1/train/saver.html", "tf.compat.v1.train.SaverDef": "compat/v1/train/saverdef.html", "tf.compat.v1.train.Scaffold": "compat/v1/train/scaffold.html", "tf.compat.v1.train.sdca_fprint": "compat/v1/train/sdca_fprint.html", "tf.compat.v1.train.sdca_optimizer": "compat/v1/train/sdca_optimizer.html", "tf.compat.v1.train.sdca_shrink_l1": "compat/v1/train/sdca_shrink_l1.html", "tf.compat.v1.train.SessionCreator": "compat/v1/train/sessioncreator.html", "tf.compat.v1.train.SessionManager": "compat/v1/train/sessionmanager.html", "tf.compat.v1.train.shuffle_batch": "compat/v1/train/shuffle_batch.html", "tf.compat.v1.train.shuffle_batch_join": "compat/v1/train/shuffle_batch_join.html", "tf.compat.v1.train.SingularMonitoredSession": "compat/v1/train/singularmonitoredsession.html", "tf.compat.v1.train.slice_input_producer": "compat/v1/train/slice_input_producer.html", "tf.compat.v1.train.start_queue_runners": "compat/v1/train/start_queue_runners.html", "tf.compat.v1.train.string_input_producer": "compat/v1/train/string_input_producer.html", "tf.compat.v1.train.summary_iterator": "compat/v1/train/summary_iterator.html", "tf.compat.v1.train.Supervisor": "compat/v1/train/supervisor.html", "tf.compat.v1.train.SyncReplicasOptimizer": "compat/v1/train/syncreplicasoptimizer.html", "tf.compat.v1.train.update_checkpoint_state": "compat/v1/train/update_checkpoint_state.html", "tf.compat.v1.train.warm_start": "compat/v1/train/warm_start.html", "tf.compat.v1.train.WorkerSessionCreator": "compat/v1/train/workersessioncreator.html", "tf.compat.v1.trainable_variables": "compat/v1/trainable_variables.html", "tf.compat.v1.transpose": "compat/v1/transpose.html", "tf.compat.v1.truncated_normal_initializer": "compat/v1/truncated_normal_initializer.html", "tf.compat.v1.tuple": "compat/v1/tuple.html", "tf.compat.v1.types": "compat/v1/types.html", "tf.compat.v1.types.experimental": "compat/v1/types/experimental.html", "tf.compat.v1.uniform_unit_scaling_initializer": "compat/v1/uniform_unit_scaling_initializer.html", "tf.compat.v1.user_ops": "compat/v1/user_ops.html", "tf.compat.v1.user_ops.my_fact": "compat/v1/user_ops/my_fact.html", "tf.compat.v1.Variable": "compat/v1/variable.html", "tf.compat.v1.variable_axis_size_partitioner": "compat/v1/variable_axis_size_partitioner.html", "tf.compat.v1.variable_creator_scope": "compat/v1/variable_creator_scope.html", "tf.compat.v1.variable_op_scope": "compat/v1/variable_op_scope.html", "tf.compat.v1.variable_scope": "compat/v1/variable_scope.html", "tf.compat.v1.VariableAggregation": "compat/v1/variableaggregation.html", "tf.compat.v1.variables_initializer": "compat/v1/variables_initializer.html", "tf.compat.v1.VariableScope": "compat/v1/variablescope.html", "tf.compat.v1.verify_tensor_all_finite": "compat/v1/verify_tensor_all_finite.html", "tf.compat.v1.version": "compat/v1/version.html", "tf.compat.v1.where": "compat/v1/where.html", "tf.compat.v1.while_loop": "compat/v1/while_loop.html", "tf.compat.v1.WholeFileReader": "compat/v1/wholefilereader.html", "tf.compat.v1.wrap_function": "compat/v1/wrap_function.html", "tf.compat.v1.xla": "compat/v1/xla.html", "tf.compat.v1.xla.experimental": "compat/v1/xla/experimental.html", "tf.compat.v1.zeros_like": "compat/v1/zeros_like.html", "tf.concat": "concat.html", "tf.cond": "cond.html", "tf.config": "config.html", "tf.config.experimental": "config/experimental.html", "tf.config.experimental.ClusterDeviceFilters": "config/experimental/clusterdevicefilters.html", "tf.config.experimental.disable_mlir_bridge": "config/experimental/disable_mlir_bridge.html", "tf.config.experimental.disable_mlir_graph_optimization": "config/experimental/disable_mlir_graph_optimization.html", "tf.config.experimental.enable_mlir_bridge": "config/experimental/enable_mlir_bridge.html", "tf.config.experimental.enable_mlir_graph_optimization": "config/experimental/enable_mlir_graph_optimization.html", "tf.config.experimental.enable_op_determinism": "config/experimental/enable_op_determinism.html", "tf.config.experimental.enable_tensor_float_32_execution": "config/experimental/enable_tensor_float_32_execution.html", "tf.config.experimental.get_device_details": "config/experimental/get_device_details.html", "tf.config.experimental.get_device_policy": "config/experimental/get_device_policy.html", "tf.config.experimental.get_memory_growth": "config/experimental/get_memory_growth.html", "tf.config.experimental.get_memory_info": "config/experimental/get_memory_info.html", "tf.config.experimental.get_memory_usage": "config/experimental/get_memory_usage.html", "tf.config.experimental.get_synchronous_execution": "config/experimental/get_synchronous_execution.html", "tf.config.experimental.reset_memory_stats": "config/experimental/reset_memory_stats.html", "tf.config.experimental.set_device_policy": "config/experimental/set_device_policy.html", "tf.config.experimental.set_memory_growth": "config/experimental/set_memory_growth.html", "tf.config.experimental.set_synchronous_execution": "config/experimental/set_synchronous_execution.html", "tf.config.experimental.tensor_float_32_execution_enabled": "config/experimental/tensor_float_32_execution_enabled.html", "tf.config.experimental_connect_to_cluster": "config/experimental_connect_to_cluster.html", "tf.config.experimental_connect_to_host": "config/experimental_connect_to_host.html", "tf.config.experimental_functions_run_eagerly": "config/experimental_functions_run_eagerly.html", "tf.config.experimental_run_functions_eagerly": "config/experimental_run_functions_eagerly.html", "tf.config.functions_run_eagerly": "config/functions_run_eagerly.html", "tf.config.get_logical_device_configuration": "config/get_logical_device_configuration.html", "tf.config.get_soft_device_placement": "config/get_soft_device_placement.html", "tf.config.get_visible_devices": "config/get_visible_devices.html", "tf.config.list_logical_devices": "config/list_logical_devices.html", "tf.config.list_physical_devices": "config/list_physical_devices.html", "tf.config.LogicalDevice": "config/logicaldevice.html", "tf.config.LogicalDeviceConfiguration": "config/logicaldeviceconfiguration.html", "tf.config.optimizer": "config/optimizer.html", "tf.config.optimizer.get_experimental_options": "config/optimizer/get_experimental_options.html", "tf.config.optimizer.get_jit": "config/optimizer/get_jit.html", "tf.config.optimizer.set_experimental_options": "config/optimizer/set_experimental_options.html", "tf.config.optimizer.set_jit": "config/optimizer/set_jit.html", "tf.config.PhysicalDevice": "config/physicaldevice.html", "tf.config.run_functions_eagerly": "config/run_functions_eagerly.html", "tf.config.set_logical_device_configuration": "config/set_logical_device_configuration.html", "tf.config.set_soft_device_placement": "config/set_soft_device_placement.html", "tf.config.set_visible_devices": "config/set_visible_devices.html", "tf.config.threading": "config/threading.html", "tf.config.threading.get_inter_op_parallelism_threads": "config/threading/get_inter_op_parallelism_threads.html", "tf.config.threading.get_intra_op_parallelism_threads": "config/threading/get_intra_op_parallelism_threads.html", "tf.config.threading.set_inter_op_parallelism_threads": "config/threading/set_inter_op_parallelism_threads.html", "tf.config.threading.set_intra_op_parallelism_threads": "config/threading/set_intra_op_parallelism_threads.html", "tf.constant": "constant.html", "tf.constant_initializer": "constant_initializer.html", "tf.control_dependencies": "control_dependencies.html", "tf.convert_to_tensor": "convert_to_tensor.html", "tf.CriticalSection": "criticalsection.html", "tf.custom_gradient": "custom_gradient.html", "tf.data": "data.html", "tf.data.Dataset": "data/dataset.html", "tf.data.DatasetSpec": "data/datasetspec.html", "tf.data.experimental": "data/experimental.html", "tf.data.experimental.assert_cardinality": "data/experimental/assert_cardinality.html", "tf.data.experimental.AutoShardPolicy": "data/experimental/autoshardpolicy.html", "tf.data.experimental.AutotuneAlgorithm": "data/experimental/autotunealgorithm.html", "tf.data.experimental.AutotuneOptions": "data/experimental/autotuneoptions.html", "tf.data.experimental.bucket_by_sequence_length": "data/experimental/bucket_by_sequence_length.html", "tf.data.experimental.cardinality": "data/experimental/cardinality.html", "tf.data.experimental.CheckpointInputPipelineHook": "data/experimental/checkpointinputpipelinehook.html", "tf.data.experimental.choose_from_datasets": "data/experimental/choose_from_datasets.html", "tf.data.experimental.copy_to_device": "data/experimental/copy_to_device.html", "tf.data.experimental.Counter": "data/experimental/counter.html", "tf.data.experimental.CsvDataset": "data/experimental/csvdataset.html", "tf.data.experimental.DatasetInitializer": "data/experimental/datasetinitializer.html", "tf.data.experimental.dense_to_ragged_batch": "data/experimental/dense_to_ragged_batch.html", "tf.data.experimental.dense_to_sparse_batch": "data/experimental/dense_to_sparse_batch.html", "tf.data.experimental.DistributeOptions": "data/experimental/distributeoptions.html", "tf.data.experimental.enable_debug_mode": "data/experimental/enable_debug_mode.html", "tf.data.experimental.enumerate_dataset": "data/experimental/enumerate_dataset.html", "tf.data.experimental.ExternalStatePolicy": "data/experimental/externalstatepolicy.html", "tf.data.experimental.from_variant": "data/experimental/from_variant.html", "tf.data.experimental.get_next_as_optional": "data/experimental/get_next_as_optional.html", "tf.data.experimental.get_single_element": "data/experimental/get_single_element.html", "tf.data.experimental.get_structure": "data/experimental/get_structure.html", "tf.data.experimental.group_by_reducer": "data/experimental/group_by_reducer.html", "tf.data.experimental.group_by_window": "data/experimental/group_by_window.html", "tf.data.experimental.ignore_errors": "data/experimental/ignore_errors.html", "tf.data.experimental.index_table_from_dataset": "data/experimental/index_table_from_dataset.html", "tf.data.experimental.load": "data/experimental/load.html", "tf.data.experimental.make_batched_features_dataset": "data/experimental/make_batched_features_dataset.html", "tf.data.experimental.make_csv_dataset": "data/experimental/make_csv_dataset.html", "tf.data.experimental.make_saveable_from_iterator": "data/experimental/make_saveable_from_iterator.html", "tf.data.experimental.map_and_batch": "data/experimental/map_and_batch.html", "tf.data.experimental.OptimizationOptions": "data/experimental/optimizationoptions.html", "tf.data.experimental.parallel_interleave": "data/experimental/parallel_interleave.html", "tf.data.experimental.parse_example_dataset": "data/experimental/parse_example_dataset.html", "tf.data.experimental.prefetch_to_device": "data/experimental/prefetch_to_device.html", "tf.data.experimental.RandomDataset": "data/experimental/randomdataset.html", "tf.data.experimental.Reducer": "data/experimental/reducer.html", "tf.data.experimental.rejection_resample": "data/experimental/rejection_resample.html", "tf.data.experimental.sample_from_datasets": "data/experimental/sample_from_datasets.html", "tf.data.experimental.save": "data/experimental/save.html", "tf.data.experimental.scan": "data/experimental/scan.html", "tf.data.experimental.service": "data/experimental/service.html", "tf.data.experimental.service.DispatcherConfig": "data/experimental/service/dispatcherconfig.html", "tf.data.experimental.service.DispatchServer": "data/experimental/service/dispatchserver.html", "tf.data.experimental.service.distribute": "data/experimental/service/distribute.html", "tf.data.experimental.service.from_dataset_id": "data/experimental/service/from_dataset_id.html", "tf.data.experimental.service.register_dataset": "data/experimental/service/register_dataset.html", "tf.data.experimental.service.ShardingPolicy": "data/experimental/service/shardingpolicy.html", "tf.data.experimental.service.WorkerConfig": "data/experimental/service/workerconfig.html", "tf.data.experimental.service.WorkerServer": "data/experimental/service/workerserver.html", "tf.data.experimental.shuffle_and_repeat": "data/experimental/shuffle_and_repeat.html", "tf.data.experimental.snapshot": "data/experimental/snapshot.html", "tf.data.experimental.SqlDataset": "data/experimental/sqldataset.html", "tf.data.experimental.table_from_dataset": "data/experimental/table_from_dataset.html", "tf.data.experimental.take_while": "data/experimental/take_while.html", "tf.data.experimental.TFRecordWriter": "data/experimental/tfrecordwriter.html", "tf.data.experimental.to_variant": "data/experimental/to_variant.html", "tf.data.experimental.unbatch": "data/experimental/unbatch.html", "tf.data.experimental.unique": "data/experimental/unique.html", "tf.data.FixedLengthRecordDataset": "data/fixedlengthrecorddataset.html", "tf.data.Iterator": "data/iterator.html", "tf.data.IteratorSpec": "data/iteratorspec.html", "tf.data.Options": "data/options.html", "tf.data.TextLineDataset": "data/textlinedataset.html", "tf.data.TFRecordDataset": "data/tfrecorddataset.html", "tf.data.ThreadingOptions": "data/threadingoptions.html", "tf.debugging": "debugging.html", "tf.debugging.Assert": "debugging/assert.html", "tf.debugging.assert_all_finite": "debugging/assert_all_finite.html", "tf.debugging.assert_equal": "debugging/assert_equal.html", "tf.debugging.assert_greater": "debugging/assert_greater.html", "tf.debugging.assert_greater_equal": "debugging/assert_greater_equal.html", "tf.debugging.assert_integer": "debugging/assert_integer.html", "tf.debugging.assert_less": "debugging/assert_less.html", "tf.debugging.assert_less_equal": "debugging/assert_less_equal.html", "tf.debugging.assert_near": "debugging/assert_near.html", "tf.debugging.assert_negative": "debugging/assert_negative.html", "tf.debugging.assert_non_negative": "debugging/assert_non_negative.html", "tf.debugging.assert_non_positive": "debugging/assert_non_positive.html", "tf.debugging.assert_none_equal": "debugging/assert_none_equal.html", "tf.debugging.assert_positive": "debugging/assert_positive.html", "tf.debugging.assert_proper_iterable": "debugging/assert_proper_iterable.html", "tf.debugging.assert_rank": "debugging/assert_rank.html", "tf.debugging.assert_rank_at_least": "debugging/assert_rank_at_least.html", "tf.debugging.assert_rank_in": "debugging/assert_rank_in.html", "tf.debugging.assert_same_float_dtype": "debugging/assert_same_float_dtype.html", "tf.debugging.assert_scalar": "debugging/assert_scalar.html", "tf.debugging.assert_shapes": "debugging/assert_shapes.html", "tf.debugging.assert_type": "debugging/assert_type.html", "tf.debugging.check_numerics": "debugging/check_numerics.html", "tf.debugging.disable_check_numerics": "debugging/disable_check_numerics.html", "tf.debugging.disable_traceback_filtering": "debugging/disable_traceback_filtering.html", "tf.debugging.enable_check_numerics": "debugging/enable_check_numerics.html", "tf.debugging.enable_traceback_filtering": "debugging/enable_traceback_filtering.html", "tf.debugging.experimental": "debugging/experimental.html", "tf.debugging.experimental.disable_dump_debug_info": "debugging/experimental/disable_dump_debug_info.html", "tf.debugging.experimental.enable_dump_debug_info": "debugging/experimental/enable_dump_debug_info.html", "tf.debugging.get_log_device_placement": "debugging/get_log_device_placement.html", "tf.debugging.is_numeric_tensor": "debugging/is_numeric_tensor.html", "tf.debugging.is_traceback_filtering_enabled": "debugging/is_traceback_filtering_enabled.html", "tf.debugging.set_log_device_placement": "debugging/set_log_device_placement.html", "tf.device": "device.html", "tf.DeviceSpec": "devicespec.html", "tf.distribute": "distribute.html", "tf.distribute.cluster_resolver": "distribute/cluster_resolver.html", "tf.distribute.cluster_resolver.ClusterResolver": "distribute/cluster_resolver/clusterresolver.html", "tf.distribute.cluster_resolver.GCEClusterResolver": "distribute/cluster_resolver/gceclusterresolver.html", "tf.distribute.cluster_resolver.KubernetesClusterResolver": "distribute/cluster_resolver/kubernetesclusterresolver.html", "tf.distribute.cluster_resolver.SimpleClusterResolver": "distribute/cluster_resolver/simpleclusterresolver.html", "tf.distribute.cluster_resolver.SlurmClusterResolver": "distribute/cluster_resolver/slurmclusterresolver.html", "tf.distribute.cluster_resolver.TFConfigClusterResolver": "distribute/cluster_resolver/tfconfigclusterresolver.html", "tf.distribute.cluster_resolver.TPUClusterResolver": "distribute/cluster_resolver/tpuclusterresolver.html", "tf.distribute.cluster_resolver.UnionResolver": "distribute/cluster_resolver/unionresolver.html", "tf.distribute.coordinator": "distribute/coordinator.html", "tf.distribute.CrossDeviceOps": "distribute/crossdeviceops.html", "tf.distribute.DistributedDataset": "distribute/distributeddataset.html", "tf.distribute.DistributedIterator": "distribute/distributediterator.html", "tf.distribute.DistributedValues": "distribute/distributedvalues.html", "tf.distribute.experimental": "distribute/experimental.html", "tf.distribute.experimental.CentralStorageStrategy": "distribute/experimental/centralstoragestrategy.html", "tf.distribute.experimental.CollectiveHints": "distribute/experimental/collectivehints.html", "tf.distribute.experimental.CommunicationImplementation": "distribute/experimental/communicationimplementation.html", "tf.distribute.experimental.CommunicationOptions": "distribute/experimental/communicationoptions.html", "tf.distribute.experimental.coordinator": "distribute/experimental/coordinator.html", "tf.distribute.experimental.coordinator.ClusterCoordinator": "distribute/experimental/coordinator/clustercoordinator.html", "tf.distribute.experimental.coordinator.PerWorkerValues": "distribute/experimental/coordinator/perworkervalues.html", "tf.distribute.experimental.coordinator.RemoteValue": "distribute/experimental/coordinator/remotevalue.html", "tf.distribute.experimental.MultiWorkerMirroredStrategy": "distribute/experimental/multiworkermirroredstrategy.html", "tf.distribute.experimental.ParameterServerStrategy": "distribute/experimental/parameterserverstrategy.html", "tf.distribute.experimental.partitioners": "distribute/experimental/partitioners.html", "tf.distribute.experimental.partitioners.FixedShardsPartitioner": "distribute/experimental/partitioners/fixedshardspartitioner.html", "tf.distribute.experimental.partitioners.MaxSizePartitioner": "distribute/experimental/partitioners/maxsizepartitioner.html", "tf.distribute.experimental.partitioners.MinSizePartitioner": "distribute/experimental/partitioners/minsizepartitioner.html", "tf.distribute.experimental.partitioners.Partitioner": "distribute/experimental/partitioners/partitioner.html", "tf.distribute.experimental.rpc": "distribute/experimental/rpc.html", "tf.distribute.experimental.rpc.Client": "distribute/experimental/rpc/client.html", "tf.distribute.experimental.rpc.Server": "distribute/experimental/rpc/server.html", "tf.distribute.experimental.TPUStrategy": "distribute/experimental/tpustrategy.html", "tf.distribute.experimental.ValueContext": "distribute/experimental/valuecontext.html", "tf.distribute.experimental_set_strategy": "distribute/experimental_set_strategy.html", "tf.distribute.get_replica_context": "distribute/get_replica_context.html", "tf.distribute.get_strategy": "distribute/get_strategy.html", "tf.distribute.has_strategy": "distribute/has_strategy.html", "tf.distribute.HierarchicalCopyAllReduce": "distribute/hierarchicalcopyallreduce.html", "tf.distribute.in_cross_replica_context": "distribute/in_cross_replica_context.html", "tf.distribute.InputContext": "distribute/inputcontext.html", "tf.distribute.InputOptions": "distribute/inputoptions.html", "tf.distribute.InputReplicationMode": "distribute/inputreplicationmode.html", "tf.distribute.MirroredStrategy": "distribute/mirroredstrategy.html", "tf.distribute.MultiWorkerMirroredStrategy": "distribute/multiworkermirroredstrategy.html", "tf.distribute.NcclAllReduce": "distribute/ncclallreduce.html", "tf.distribute.OneDeviceStrategy": "distribute/onedevicestrategy.html", "tf.distribute.ReduceOp": "distribute/reduceop.html", "tf.distribute.ReductionToOneDevice": "distribute/reductiontoonedevice.html", "tf.distribute.ReplicaContext": "distribute/replicacontext.html", "tf.distribute.RunOptions": "distribute/runoptions.html", "tf.distribute.Server": "distribute/server.html", "tf.distribute.Strategy": "distribute/strategy.html", "tf.distribute.StrategyExtended": "distribute/strategyextended.html", "tf.distribute.TPUStrategy": "distribute/tpustrategy.html", "tf.dtypes": "dtypes.html", "tf.dtypes.as_dtype": "dtypes/as_dtype.html", "tf.dtypes.complex": "dtypes/complex.html", "tf.dtypes.DType": "dtypes/dtype.html", "tf.dtypes.saturate_cast": "dtypes/saturate_cast.html", "tf.dynamic_partition": "dynamic_partition.html", "tf.dynamic_stitch": "dynamic_stitch.html", "tf.edit_distance": "edit_distance.html", "tf.einsum": "einsum.html", "tf.ensure_shape": "ensure_shape.html", "tf.errors": "errors.html", "tf.errors.AbortedError": "errors/abortederror.html", "tf.errors.AlreadyExistsError": "errors/alreadyexistserror.html", "tf.errors.CancelledError": "errors/cancellederror.html", "tf.errors.DataLossError": "errors/datalosserror.html", "tf.errors.DeadlineExceededError": "errors/deadlineexceedederror.html", "tf.errors.FailedPreconditionError": "errors/failedpreconditionerror.html", "tf.errors.InternalError": "errors/internalerror.html", "tf.errors.InvalidArgumentError": "errors/invalidargumenterror.html", "tf.errors.NotFoundError": "errors/notfounderror.html", "tf.errors.OperatorNotAllowedInGraphError": "errors/operatornotallowedingrapherror.html", "tf.errors.OpError": "errors/operror.html", "tf.errors.OutOfRangeError": "errors/outofrangeerror.html", "tf.errors.PermissionDeniedError": "errors/permissiondeniederror.html", "tf.errors.ResourceExhaustedError": "errors/resourceexhaustederror.html", "tf.errors.UnauthenticatedError": "errors/unauthenticatederror.html", "tf.errors.UnavailableError": "errors/unavailableerror.html", "tf.errors.UnimplementedError": "errors/unimplementederror.html", "tf.errors.UnknownError": "errors/unknownerror.html", "tf.estimator": "estimator.html", "tf.estimator.add_metrics": "estimator/add_metrics.html", "tf.estimator.BaselineClassifier": "estimator/baselineclassifier.html", "tf.estimator.BaselineEstimator": "estimator/baselineestimator.html", "tf.estimator.BaselineRegressor": "estimator/baselineregressor.html", "tf.estimator.BestExporter": "estimator/bestexporter.html", "tf.estimator.BinaryClassHead": "estimator/binaryclasshead.html", "tf.estimator.CheckpointSaverHook": "estimator/checkpointsaverhook.html", "tf.estimator.CheckpointSaverListener": "estimator/checkpointsaverlistener.html", "tf.estimator.classifier_parse_example_spec": "estimator/classifier_parse_example_spec.html", "tf.estimator.DNNClassifier": "estimator/dnnclassifier.html", "tf.estimator.DNNEstimator": "estimator/dnnestimator.html", "tf.estimator.DNNLinearCombinedClassifier": "estimator/dnnlinearcombinedclassifier.html", "tf.estimator.DNNLinearCombinedEstimator": "estimator/dnnlinearcombinedestimator.html", "tf.estimator.DNNLinearCombinedRegressor": "estimator/dnnlinearcombinedregressor.html", "tf.estimator.DNNRegressor": "estimator/dnnregressor.html", "tf.estimator.Estimator": "estimator/estimator.html", "tf.estimator.EstimatorSpec": "estimator/estimatorspec.html", "tf.estimator.EvalSpec": "estimator/evalspec.html", "tf.estimator.experimental": "estimator/experimental.html", "tf.estimator.experimental.build_raw_supervised_input_receiver_fn": "estimator/experimental/build_raw_supervised_input_receiver_fn.html", "tf.estimator.experimental.call_logit_fn": "estimator/experimental/call_logit_fn.html", "tf.estimator.experimental.InMemoryEvaluatorHook": "estimator/experimental/inmemoryevaluatorhook.html", "tf.estimator.experimental.LinearSDCA": "estimator/experimental/linearsdca.html", "tf.estimator.experimental.make_early_stopping_hook": "estimator/experimental/make_early_stopping_hook.html", "tf.estimator.experimental.make_stop_at_checkpoint_step_hook": "estimator/experimental/make_stop_at_checkpoint_step_hook.html", "tf.estimator.experimental.RNNClassifier": "estimator/experimental/rnnclassifier.html", "tf.estimator.experimental.RNNEstimator": "estimator/experimental/rnnestimator.html", "tf.estimator.experimental.stop_if_higher_hook": "estimator/experimental/stop_if_higher_hook.html", "tf.estimator.experimental.stop_if_lower_hook": "estimator/experimental/stop_if_lower_hook.html", "tf.estimator.experimental.stop_if_no_decrease_hook": "estimator/experimental/stop_if_no_decrease_hook.html", "tf.estimator.experimental.stop_if_no_increase_hook": "estimator/experimental/stop_if_no_increase_hook.html", "tf.estimator.export": "estimator/export.html", "tf.estimator.export.build_parsing_serving_input_receiver_fn": "estimator/export/build_parsing_serving_input_receiver_fn.html", "tf.estimator.export.build_raw_serving_input_receiver_fn": "estimator/export/build_raw_serving_input_receiver_fn.html", "tf.estimator.export.ClassificationOutput": "estimator/export/classificationoutput.html", "tf.estimator.export.EvalOutput": "estimator/export/evaloutput.html", "tf.estimator.export.ExportOutput": "estimator/export/exportoutput.html", "tf.estimator.export.PredictOutput": "estimator/export/predictoutput.html", "tf.estimator.export.RegressionOutput": "estimator/export/regressionoutput.html", "tf.estimator.export.ServingInputReceiver": "estimator/export/servinginputreceiver.html", "tf.estimator.export.TensorServingInputReceiver": "estimator/export/tensorservinginputreceiver.html", "tf.estimator.Exporter": "estimator/exporter.html", "tf.estimator.FeedFnHook": "estimator/feedfnhook.html", "tf.estimator.FinalExporter": "estimator/finalexporter.html", "tf.estimator.FinalOpsHook": "estimator/finalopshook.html", "tf.estimator.GlobalStepWaiterHook": "estimator/globalstepwaiterhook.html", "tf.estimator.Head": "estimator/head.html", "tf.estimator.LatestExporter": "estimator/latestexporter.html", "tf.estimator.LinearClassifier": "estimator/linearclassifier.html", "tf.estimator.LinearEstimator": "estimator/linearestimator.html", "tf.estimator.LinearRegressor": "estimator/linearregressor.html", "tf.estimator.LoggingTensorHook": "estimator/loggingtensorhook.html", "tf.estimator.LogisticRegressionHead": "estimator/logisticregressionhead.html", "tf.estimator.ModeKeys": "estimator/modekeys.html", "tf.estimator.MultiClassHead": "estimator/multiclasshead.html", "tf.estimator.MultiHead": "estimator/multihead.html", "tf.estimator.MultiLabelHead": "estimator/multilabelhead.html", "tf.estimator.NanLossDuringTrainingError": "estimator/nanlossduringtrainingerror.html", "tf.estimator.NanTensorHook": "estimator/nantensorhook.html", "tf.estimator.PoissonRegressionHead": "estimator/poissonregressionhead.html", "tf.estimator.ProfilerHook": "estimator/profilerhook.html", "tf.estimator.RegressionHead": "estimator/regressionhead.html", "tf.estimator.regressor_parse_example_spec": "estimator/regressor_parse_example_spec.html", "tf.estimator.RunConfig": "estimator/runconfig.html", "tf.estimator.SecondOrStepTimer": "estimator/secondorsteptimer.html", "tf.estimator.SessionRunArgs": "estimator/sessionrunargs.html", "tf.estimator.SessionRunContext": "estimator/sessionruncontext.html", "tf.estimator.SessionRunHook": "estimator/sessionrunhook.html", "tf.estimator.SessionRunValues": "estimator/sessionrunvalues.html", "tf.estimator.StepCounterHook": "estimator/stepcounterhook.html", "tf.estimator.StopAtStepHook": "estimator/stopatstephook.html", "tf.estimator.SummarySaverHook": "estimator/summarysaverhook.html", "tf.estimator.train_and_evaluate": "estimator/train_and_evaluate.html", "tf.estimator.TrainSpec": "estimator/trainspec.html", "tf.estimator.VocabInfo": "estimator/vocabinfo.html", "tf.estimator.WarmStartSettings": "estimator/warmstartsettings.html", "tf.executing_eagerly": "executing_eagerly.html", "tf.expand_dims": "expand_dims.html", "tf.experimental": "experimental.html", "tf.experimental.async_clear_error": "experimental/async_clear_error.html", "tf.experimental.async_scope": "experimental/async_scope.html", "tf.experimental.BatchableExtensionType": "experimental/batchableextensiontype.html", "tf.experimental.dispatch_for_api": "experimental/dispatch_for_api.html", "tf.experimental.dispatch_for_binary_elementwise_apis": "experimental/dispatch_for_binary_elementwise_apis.html", "tf.experimental.dispatch_for_unary_elementwise_apis": "experimental/dispatch_for_unary_elementwise_apis.html", "tf.experimental.dlpack": "experimental/dlpack.html", "tf.experimental.dlpack.from_dlpack": "experimental/dlpack/from_dlpack.html", "tf.experimental.dlpack.to_dlpack": "experimental/dlpack/to_dlpack.html", "tf.experimental.dtensor": "experimental/dtensor.html", "tf.experimental.dtensor.call_with_layout": "experimental/dtensor/call_with_layout.html", "tf.experimental.dtensor.check_layout": "experimental/dtensor/check_layout.html", "tf.experimental.dtensor.client_id": "experimental/dtensor/client_id.html", "tf.experimental.dtensor.copy_to_mesh": "experimental/dtensor/copy_to_mesh.html", "tf.experimental.dtensor.create_distributed_mesh": "experimental/dtensor/create_distributed_mesh.html", "tf.experimental.dtensor.create_mesh": "experimental/dtensor/create_mesh.html", "tf.experimental.dtensor.device_name": "experimental/dtensor/device_name.html", "tf.experimental.dtensor.DTensorCheckpoint": "experimental/dtensor/dtensorcheckpoint.html", "tf.experimental.dtensor.DVariable": "experimental/dtensor/dvariable.html", "tf.experimental.dtensor.enable_save_as_bf16": "experimental/dtensor/enable_save_as_bf16.html", "tf.experimental.dtensor.fetch_layout": "experimental/dtensor/fetch_layout.html", "tf.experimental.dtensor.full_job_name": "experimental/dtensor/full_job_name.html", "tf.experimental.dtensor.heartbeat_enabled": "experimental/dtensor/heartbeat_enabled.html", "tf.experimental.dtensor.initialize_multi_client": "experimental/dtensor/initialize_multi_client.html", "tf.experimental.dtensor.initialize_tpu_system": "experimental/dtensor/initialize_tpu_system.html", "tf.experimental.dtensor.job_name": "experimental/dtensor/job_name.html", "tf.experimental.dtensor.jobs": "experimental/dtensor/jobs.html", "tf.experimental.dtensor.Layout": "experimental/dtensor/layout.html", "tf.experimental.dtensor.local_devices": "experimental/dtensor/local_devices.html", "tf.experimental.dtensor.Mesh": "experimental/dtensor/mesh.html", "tf.experimental.dtensor.name_based_restore": "experimental/dtensor/name_based_restore.html", "tf.experimental.dtensor.name_based_save": "experimental/dtensor/name_based_save.html", "tf.experimental.dtensor.num_clients": "experimental/dtensor/num_clients.html", "tf.experimental.dtensor.num_global_devices": "experimental/dtensor/num_global_devices.html", "tf.experimental.dtensor.num_local_devices": "experimental/dtensor/num_local_devices.html", "tf.experimental.dtensor.pack": "experimental/dtensor/pack.html", "tf.experimental.dtensor.relayout": "experimental/dtensor/relayout.html", "tf.experimental.dtensor.run_on": "experimental/dtensor/run_on.html", "tf.experimental.dtensor.sharded_save": "experimental/dtensor/sharded_save.html", "tf.experimental.dtensor.shutdown_tpu_system": "experimental/dtensor/shutdown_tpu_system.html", "tf.experimental.dtensor.unpack": "experimental/dtensor/unpack.html", "tf.experimental.DynamicRaggedShape": "experimental/dynamicraggedshape.html", "tf.experimental.DynamicRaggedShape.Spec": "experimental/dynamicraggedshape/spec.html", "tf.experimental.ExtensionType": "experimental/extensiontype.html", "tf.experimental.ExtensionTypeBatchEncoder": "experimental/extensiontypebatchencoder.html", "tf.experimental.function_executor_type": "experimental/function_executor_type.html", "tf.experimental.numpy": "experimental/numpy.html", "tf.experimental.numpy.abs": "experimental/numpy/abs.html", "tf.experimental.numpy.absolute": "experimental/numpy/absolute.html", "tf.experimental.numpy.add": "experimental/numpy/add.html", "tf.experimental.numpy.all": "experimental/numpy/all.html", "tf.experimental.numpy.allclose": "experimental/numpy/allclose.html", "tf.experimental.numpy.amax": "experimental/numpy/amax.html", "tf.experimental.numpy.amin": "experimental/numpy/amin.html", "tf.experimental.numpy.angle": "experimental/numpy/angle.html", "tf.experimental.numpy.any": "experimental/numpy/any.html", "tf.experimental.numpy.append": "experimental/numpy/append.html", "tf.experimental.numpy.arange": "experimental/numpy/arange.html", "tf.experimental.numpy.arccos": "experimental/numpy/arccos.html", "tf.experimental.numpy.arccosh": "experimental/numpy/arccosh.html", "tf.experimental.numpy.arcsin": "experimental/numpy/arcsin.html", "tf.experimental.numpy.arcsinh": "experimental/numpy/arcsinh.html", "tf.experimental.numpy.arctan": "experimental/numpy/arctan.html", "tf.experimental.numpy.arctan2": "experimental/numpy/arctan2.html", "tf.experimental.numpy.arctanh": "experimental/numpy/arctanh.html", "tf.experimental.numpy.argmax": "experimental/numpy/argmax.html", "tf.experimental.numpy.argmin": "experimental/numpy/argmin.html", "tf.experimental.numpy.argsort": "experimental/numpy/argsort.html", "tf.experimental.numpy.around": "experimental/numpy/around.html", "tf.experimental.numpy.array": "experimental/numpy/array.html", "tf.experimental.numpy.array_equal": "experimental/numpy/array_equal.html", "tf.experimental.numpy.asanyarray": "experimental/numpy/asanyarray.html", "tf.experimental.numpy.asarray": "experimental/numpy/asarray.html", "tf.experimental.numpy.ascontiguousarray": "experimental/numpy/ascontiguousarray.html", "tf.experimental.numpy.atleast_1d": "experimental/numpy/atleast_1d.html", "tf.experimental.numpy.atleast_2d": "experimental/numpy/atleast_2d.html", "tf.experimental.numpy.atleast_3d": "experimental/numpy/atleast_3d.html", "tf.experimental.numpy.average": "experimental/numpy/average.html", "tf.experimental.numpy.bitwise_and": "experimental/numpy/bitwise_and.html", "tf.experimental.numpy.bitwise_not": "experimental/numpy/bitwise_not.html", "tf.experimental.numpy.bitwise_or": "experimental/numpy/bitwise_or.html", "tf.experimental.numpy.bitwise_xor": "experimental/numpy/bitwise_xor.html", "tf.experimental.numpy.bool_": "experimental/numpy/bool_.html", "tf.experimental.numpy.broadcast_arrays": "experimental/numpy/broadcast_arrays.html", "tf.experimental.numpy.broadcast_to": "experimental/numpy/broadcast_to.html", "tf.experimental.numpy.cbrt": "experimental/numpy/cbrt.html", "tf.experimental.numpy.ceil": "experimental/numpy/ceil.html", "tf.experimental.numpy.clip": "experimental/numpy/clip.html", "tf.experimental.numpy.complex128": "experimental/numpy/complex128.html", "tf.experimental.numpy.complex64": "experimental/numpy/complex64.html", "tf.experimental.numpy.compress": "experimental/numpy/compress.html", "tf.experimental.numpy.concatenate": "experimental/numpy/concatenate.html", "tf.experimental.numpy.conj": "experimental/numpy/conj.html", "tf.experimental.numpy.conjugate": "experimental/numpy/conjugate.html", "tf.experimental.numpy.copy": "experimental/numpy/copy.html", "tf.experimental.numpy.cos": "experimental/numpy/cos.html", "tf.experimental.numpy.cosh": "experimental/numpy/cosh.html", "tf.experimental.numpy.count_nonzero": "experimental/numpy/count_nonzero.html", "tf.experimental.numpy.cross": "experimental/numpy/cross.html", "tf.experimental.numpy.cumprod": "experimental/numpy/cumprod.html", "tf.experimental.numpy.cumsum": "experimental/numpy/cumsum.html", "tf.experimental.numpy.deg2rad": "experimental/numpy/deg2rad.html", "tf.experimental.numpy.diag": "experimental/numpy/diag.html", "tf.experimental.numpy.diag_indices": "experimental/numpy/diag_indices.html", "tf.experimental.numpy.diagflat": "experimental/numpy/diagflat.html", "tf.experimental.numpy.diagonal": "experimental/numpy/diagonal.html", "tf.experimental.numpy.diff": "experimental/numpy/diff.html", "tf.experimental.numpy.divide": "experimental/numpy/divide.html", "tf.experimental.numpy.divmod": "experimental/numpy/divmod.html", "tf.experimental.numpy.dot": "experimental/numpy/dot.html", "tf.experimental.numpy.dsplit": "experimental/numpy/dsplit.html", "tf.experimental.numpy.dstack": "experimental/numpy/dstack.html", "tf.experimental.numpy.einsum": "experimental/numpy/einsum.html", "tf.experimental.numpy.empty": "experimental/numpy/empty.html", "tf.experimental.numpy.empty_like": "experimental/numpy/empty_like.html", "tf.experimental.numpy.equal": "experimental/numpy/equal.html", "tf.experimental.numpy.exp": "experimental/numpy/exp.html", "tf.experimental.numpy.exp2": "experimental/numpy/exp2.html", "tf.experimental.numpy.expand_dims": "experimental/numpy/expand_dims.html", "tf.experimental.numpy.experimental_enable_numpy_behavior": "experimental/numpy/experimental_enable_numpy_behavior.html", "tf.experimental.numpy.expm1": "experimental/numpy/expm1.html", "tf.experimental.numpy.eye": "experimental/numpy/eye.html", "tf.experimental.numpy.fabs": "experimental/numpy/fabs.html", "tf.experimental.numpy.finfo": "experimental/numpy/finfo.html", "tf.experimental.numpy.fix": "experimental/numpy/fix.html", "tf.experimental.numpy.flip": "experimental/numpy/flip.html", "tf.experimental.numpy.fliplr": "experimental/numpy/fliplr.html", "tf.experimental.numpy.flipud": "experimental/numpy/flipud.html", "tf.experimental.numpy.float16": "experimental/numpy/float16.html", "tf.experimental.numpy.float32": "experimental/numpy/float32.html", "tf.experimental.numpy.float64": "experimental/numpy/float64.html", "tf.experimental.numpy.float_power": "experimental/numpy/float_power.html", "tf.experimental.numpy.floor": "experimental/numpy/floor.html", "tf.experimental.numpy.floor_divide": "experimental/numpy/floor_divide.html", "tf.experimental.numpy.full": "experimental/numpy/full.html", "tf.experimental.numpy.full_like": "experimental/numpy/full_like.html", "tf.experimental.numpy.gcd": "experimental/numpy/gcd.html", "tf.experimental.numpy.geomspace": "experimental/numpy/geomspace.html", "tf.experimental.numpy.greater": "experimental/numpy/greater.html", "tf.experimental.numpy.greater_equal": "experimental/numpy/greater_equal.html", "tf.experimental.numpy.heaviside": "experimental/numpy/heaviside.html", "tf.experimental.numpy.hsplit": "experimental/numpy/hsplit.html", "tf.experimental.numpy.hstack": "experimental/numpy/hstack.html", "tf.experimental.numpy.hypot": "experimental/numpy/hypot.html", "tf.experimental.numpy.identity": "experimental/numpy/identity.html", "tf.experimental.numpy.iinfo": "experimental/numpy/iinfo.html", "tf.experimental.numpy.imag": "experimental/numpy/imag.html", "tf.experimental.numpy.inexact": "experimental/numpy/inexact.html", "tf.experimental.numpy.inner": "experimental/numpy/inner.html", "tf.experimental.numpy.int16": "experimental/numpy/int16.html", "tf.experimental.numpy.int32": "experimental/numpy/int32.html", "tf.experimental.numpy.int64": "experimental/numpy/int64.html", "tf.experimental.numpy.int8": "experimental/numpy/int8.html", "tf.experimental.numpy.isclose": "experimental/numpy/isclose.html", "tf.experimental.numpy.iscomplex": "experimental/numpy/iscomplex.html", "tf.experimental.numpy.iscomplexobj": "experimental/numpy/iscomplexobj.html", "tf.experimental.numpy.isfinite": "experimental/numpy/isfinite.html", "tf.experimental.numpy.isinf": "experimental/numpy/isinf.html", "tf.experimental.numpy.isnan": "experimental/numpy/isnan.html", "tf.experimental.numpy.isneginf": "experimental/numpy/isneginf.html", "tf.experimental.numpy.isposinf": "experimental/numpy/isposinf.html", "tf.experimental.numpy.isreal": "experimental/numpy/isreal.html", "tf.experimental.numpy.isrealobj": "experimental/numpy/isrealobj.html", "tf.experimental.numpy.isscalar": "experimental/numpy/isscalar.html", "tf.experimental.numpy.issubdtype": "experimental/numpy/issubdtype.html", "tf.experimental.numpy.ix_": "experimental/numpy/ix_.html", "tf.experimental.numpy.kron": "experimental/numpy/kron.html", "tf.experimental.numpy.lcm": "experimental/numpy/lcm.html", "tf.experimental.numpy.less": "experimental/numpy/less.html", "tf.experimental.numpy.less_equal": "experimental/numpy/less_equal.html", "tf.experimental.numpy.linspace": "experimental/numpy/linspace.html", "tf.experimental.numpy.log": "experimental/numpy/log.html", "tf.experimental.numpy.log10": "experimental/numpy/log10.html", "tf.experimental.numpy.log1p": "experimental/numpy/log1p.html", "tf.experimental.numpy.log2": "experimental/numpy/log2.html", "tf.experimental.numpy.logaddexp": "experimental/numpy/logaddexp.html", "tf.experimental.numpy.logaddexp2": "experimental/numpy/logaddexp2.html", "tf.experimental.numpy.logical_and": "experimental/numpy/logical_and.html", "tf.experimental.numpy.logical_not": "experimental/numpy/logical_not.html", "tf.experimental.numpy.logical_or": "experimental/numpy/logical_or.html", "tf.experimental.numpy.logical_xor": "experimental/numpy/logical_xor.html", "tf.experimental.numpy.logspace": "experimental/numpy/logspace.html", "tf.experimental.numpy.matmul": "experimental/numpy/matmul.html", "tf.experimental.numpy.max": "experimental/numpy/max.html", "tf.experimental.numpy.maximum": "experimental/numpy/maximum.html", "tf.experimental.numpy.mean": "experimental/numpy/mean.html", "tf.experimental.numpy.meshgrid": "experimental/numpy/meshgrid.html", "tf.experimental.numpy.min": "experimental/numpy/min.html", "tf.experimental.numpy.minimum": "experimental/numpy/minimum.html", "tf.experimental.numpy.mod": "experimental/numpy/mod.html", "tf.experimental.numpy.moveaxis": "experimental/numpy/moveaxis.html", "tf.experimental.numpy.multiply": "experimental/numpy/multiply.html", "tf.experimental.numpy.nanmean": "experimental/numpy/nanmean.html", "tf.experimental.numpy.nanprod": "experimental/numpy/nanprod.html", "tf.experimental.numpy.nansum": "experimental/numpy/nansum.html", "tf.experimental.numpy.ndim": "experimental/numpy/ndim.html", "tf.experimental.numpy.negative": "experimental/numpy/negative.html", "tf.experimental.numpy.nextafter": "experimental/numpy/nextafter.html", "tf.experimental.numpy.nonzero": "experimental/numpy/nonzero.html", "tf.experimental.numpy.not_equal": "experimental/numpy/not_equal.html", "tf.experimental.numpy.object_": "experimental/numpy/object_.html", "tf.experimental.numpy.ones": "experimental/numpy/ones.html", "tf.experimental.numpy.ones_like": "experimental/numpy/ones_like.html", "tf.experimental.numpy.outer": "experimental/numpy/outer.html", "tf.experimental.numpy.pad": "experimental/numpy/pad.html", "tf.experimental.numpy.polyval": "experimental/numpy/polyval.html", "tf.experimental.numpy.positive": "experimental/numpy/positive.html", "tf.experimental.numpy.power": "experimental/numpy/power.html", "tf.experimental.numpy.prod": "experimental/numpy/prod.html", "tf.experimental.numpy.promote_types": "experimental/numpy/promote_types.html", "tf.experimental.numpy.ptp": "experimental/numpy/ptp.html", "tf.experimental.numpy.rad2deg": "experimental/numpy/rad2deg.html", "tf.experimental.numpy.random": "experimental/numpy/random.html", "tf.experimental.numpy.random.poisson": "experimental/numpy/random/poisson.html", "tf.experimental.numpy.random.rand": "experimental/numpy/random/rand.html", "tf.experimental.numpy.random.randint": "experimental/numpy/random/randint.html", "tf.experimental.numpy.random.randn": "experimental/numpy/random/randn.html", "tf.experimental.numpy.random.random": "experimental/numpy/random/random.html", "tf.experimental.numpy.random.seed": "experimental/numpy/random/seed.html", "tf.experimental.numpy.random.standard_normal": "experimental/numpy/random/standard_normal.html", "tf.experimental.numpy.random.uniform": "experimental/numpy/random/uniform.html", "tf.experimental.numpy.ravel": "experimental/numpy/ravel.html", "tf.experimental.numpy.real": "experimental/numpy/real.html", "tf.experimental.numpy.reciprocal": "experimental/numpy/reciprocal.html", "tf.experimental.numpy.remainder": "experimental/numpy/remainder.html", "tf.experimental.numpy.repeat": "experimental/numpy/repeat.html", "tf.experimental.numpy.reshape": "experimental/numpy/reshape.html", "tf.experimental.numpy.result_type": "experimental/numpy/result_type.html", "tf.experimental.numpy.roll": "experimental/numpy/roll.html", "tf.experimental.numpy.rot90": "experimental/numpy/rot90.html", "tf.experimental.numpy.round": "experimental/numpy/round.html", "tf.experimental.numpy.select": "experimental/numpy/select.html", "tf.experimental.numpy.shape": "experimental/numpy/shape.html", "tf.experimental.numpy.sign": "experimental/numpy/sign.html", "tf.experimental.numpy.signbit": "experimental/numpy/signbit.html", "tf.experimental.numpy.sin": "experimental/numpy/sin.html", "tf.experimental.numpy.sinc": "experimental/numpy/sinc.html", "tf.experimental.numpy.sinh": "experimental/numpy/sinh.html", "tf.experimental.numpy.size": "experimental/numpy/size.html", "tf.experimental.numpy.sort": "experimental/numpy/sort.html", "tf.experimental.numpy.split": "experimental/numpy/split.html", "tf.experimental.numpy.sqrt": "experimental/numpy/sqrt.html", "tf.experimental.numpy.square": "experimental/numpy/square.html", "tf.experimental.numpy.squeeze": "experimental/numpy/squeeze.html", "tf.experimental.numpy.stack": "experimental/numpy/stack.html", "tf.experimental.numpy.std": "experimental/numpy/std.html", "tf.experimental.numpy.string_": "experimental/numpy/string_.html", "tf.experimental.numpy.subtract": "experimental/numpy/subtract.html", "tf.experimental.numpy.sum": "experimental/numpy/sum.html", "tf.experimental.numpy.swapaxes": "experimental/numpy/swapaxes.html", "tf.experimental.numpy.take": "experimental/numpy/take.html", "tf.experimental.numpy.take_along_axis": "experimental/numpy/take_along_axis.html", "tf.experimental.numpy.tan": "experimental/numpy/tan.html", "tf.experimental.numpy.tanh": "experimental/numpy/tanh.html", "tf.experimental.numpy.tensordot": "experimental/numpy/tensordot.html", "tf.experimental.numpy.tile": "experimental/numpy/tile.html", "tf.experimental.numpy.trace": "experimental/numpy/trace.html", "tf.experimental.numpy.transpose": "experimental/numpy/transpose.html", "tf.experimental.numpy.tri": "experimental/numpy/tri.html", "tf.experimental.numpy.tril": "experimental/numpy/tril.html", "tf.experimental.numpy.triu": "experimental/numpy/triu.html", "tf.experimental.numpy.true_divide": "experimental/numpy/true_divide.html", "tf.experimental.numpy.uint16": "experimental/numpy/uint16.html", "tf.experimental.numpy.uint32": "experimental/numpy/uint32.html", "tf.experimental.numpy.uint64": "experimental/numpy/uint64.html", "tf.experimental.numpy.uint8": "experimental/numpy/uint8.html", "tf.experimental.numpy.unicode_": "experimental/numpy/unicode_.html", "tf.experimental.numpy.vander": "experimental/numpy/vander.html", "tf.experimental.numpy.var": "experimental/numpy/var.html", "tf.experimental.numpy.vdot": "experimental/numpy/vdot.html", "tf.experimental.numpy.vsplit": "experimental/numpy/vsplit.html", "tf.experimental.numpy.vstack": "experimental/numpy/vstack.html", "tf.experimental.numpy.where": "experimental/numpy/where.html", "tf.experimental.numpy.zeros": "experimental/numpy/zeros.html", "tf.experimental.numpy.zeros_like": "experimental/numpy/zeros_like.html", "tf.experimental.Optional": "experimental/optional.html", "tf.experimental.register_filesystem_plugin": "experimental/register_filesystem_plugin.html", "tf.experimental.RowPartition": "experimental/rowpartition.html", "tf.experimental.tensorrt": "experimental/tensorrt.html", "tf.experimental.tensorrt.ConversionParams": "experimental/tensorrt/conversionparams.html", "tf.experimental.tensorrt.Converter": "experimental/tensorrt/converter.html", "tf.experimental.unregister_dispatch_for": "experimental/unregister_dispatch_for.html", "tf.extract_volume_patches": "extract_volume_patches.html", "tf.eye": "eye.html", "tf.feature_column": "feature_column.html", "tf.feature_column.bucketized_column": "feature_column/bucketized_column.html", "tf.feature_column.categorical_column_with_hash_bucket": "feature_column/categorical_column_with_hash_bucket.html", "tf.feature_column.categorical_column_with_identity": "feature_column/categorical_column_with_identity.html", "tf.feature_column.categorical_column_with_vocabulary_file": "feature_column/categorical_column_with_vocabulary_file.html", "tf.feature_column.categorical_column_with_vocabulary_list": "feature_column/categorical_column_with_vocabulary_list.html", "tf.feature_column.crossed_column": "feature_column/crossed_column.html", "tf.feature_column.embedding_column": "feature_column/embedding_column.html", "tf.feature_column.indicator_column": "feature_column/indicator_column.html", "tf.feature_column.make_parse_example_spec": "feature_column/make_parse_example_spec.html", "tf.feature_column.numeric_column": "feature_column/numeric_column.html", "tf.feature_column.sequence_categorical_column_with_hash_bucket": "feature_column/sequence_categorical_column_with_hash_bucket.html", "tf.feature_column.sequence_categorical_column_with_identity": "feature_column/sequence_categorical_column_with_identity.html", "tf.feature_column.sequence_categorical_column_with_vocabulary_file": "feature_column/sequence_categorical_column_with_vocabulary_file.html", "tf.feature_column.sequence_categorical_column_with_vocabulary_list": "feature_column/sequence_categorical_column_with_vocabulary_list.html", "tf.feature_column.sequence_numeric_column": "feature_column/sequence_numeric_column.html", "tf.feature_column.shared_embeddings": "feature_column/shared_embeddings.html", "tf.feature_column.weighted_categorical_column": "feature_column/weighted_categorical_column.html", "tf.fill": "fill.html", "tf.fingerprint": "fingerprint.html", "tf.foldl": "foldl.html", "tf.foldr": "foldr.html", "tf.function": "function.html", "tf.gather": "gather.html", "tf.gather_nd": "gather_nd.html", "tf.get_current_name_scope": "get_current_name_scope.html", "tf.get_logger": "get_logger.html", "tf.get_static_value": "get_static_value.html", "tf.grad_pass_through": "grad_pass_through.html", "tf.gradients": "gradients.html", "tf.GradientTape": "gradienttape.html", "tf.Graph": "graph.html", "tf.graph_util": "graph_util.html", "tf.graph_util.import_graph_def": "graph_util/import_graph_def.html", "tf.group": "group.html", "tf.guarantee_const": "guarantee_const.html", "tf.hessians": "hessians.html", "tf.histogram_fixed_width": "histogram_fixed_width.html", "tf.histogram_fixed_width_bins": "histogram_fixed_width_bins.html", "tf.identity": "identity.html", "tf.identity_n": "identity_n.html", "tf.image": "image.html", "tf.image.adjust_brightness": "image/adjust_brightness.html", "tf.image.adjust_contrast": "image/adjust_contrast.html", "tf.image.adjust_gamma": "image/adjust_gamma.html", "tf.image.adjust_hue": "image/adjust_hue.html", "tf.image.adjust_jpeg_quality": "image/adjust_jpeg_quality.html", "tf.image.adjust_saturation": "image/adjust_saturation.html", "tf.image.central_crop": "image/central_crop.html", "tf.image.combined_non_max_suppression": "image/combined_non_max_suppression.html", "tf.image.convert_image_dtype": "image/convert_image_dtype.html", "tf.image.crop_and_resize": "image/crop_and_resize.html", "tf.image.crop_to_bounding_box": "image/crop_to_bounding_box.html", "tf.image.draw_bounding_boxes": "image/draw_bounding_boxes.html", "tf.image.extract_glimpse": "image/extract_glimpse.html", "tf.image.extract_patches": "image/extract_patches.html", "tf.image.flip_left_right": "image/flip_left_right.html", "tf.image.flip_up_down": "image/flip_up_down.html", "tf.image.generate_bounding_box_proposals": "image/generate_bounding_box_proposals.html", "tf.image.grayscale_to_rgb": "image/grayscale_to_rgb.html", "tf.image.hsv_to_rgb": "image/hsv_to_rgb.html", "tf.image.image_gradients": "image/image_gradients.html", "tf.image.non_max_suppression": "image/non_max_suppression.html", "tf.image.non_max_suppression_overlaps": "image/non_max_suppression_overlaps.html", "tf.image.non_max_suppression_padded": "image/non_max_suppression_padded.html", "tf.image.non_max_suppression_with_scores": "image/non_max_suppression_with_scores.html", "tf.image.pad_to_bounding_box": "image/pad_to_bounding_box.html", "tf.image.per_image_standardization": "image/per_image_standardization.html", "tf.image.psnr": "image/psnr.html", "tf.image.random_brightness": "image/random_brightness.html", "tf.image.random_contrast": "image/random_contrast.html", "tf.image.random_crop": "image/random_crop.html", "tf.image.random_flip_left_right": "image/random_flip_left_right.html", "tf.image.random_flip_up_down": "image/random_flip_up_down.html", "tf.image.random_hue": "image/random_hue.html", "tf.image.random_jpeg_quality": "image/random_jpeg_quality.html", "tf.image.random_saturation": "image/random_saturation.html", "tf.image.resize": "image/resize.html", "tf.image.resize_with_crop_or_pad": "image/resize_with_crop_or_pad.html", "tf.image.resize_with_pad": "image/resize_with_pad.html", "tf.image.ResizeMethod": "image/resizemethod.html", "tf.image.rgb_to_grayscale": "image/rgb_to_grayscale.html", "tf.image.rgb_to_hsv": "image/rgb_to_hsv.html", "tf.image.rgb_to_yiq": "image/rgb_to_yiq.html", "tf.image.rgb_to_yuv": "image/rgb_to_yuv.html", "tf.image.rot90": "image/rot90.html", "tf.image.sample_distorted_bounding_box": "image/sample_distorted_bounding_box.html", "tf.image.sobel_edges": "image/sobel_edges.html", "tf.image.ssim": "image/ssim.html", "tf.image.ssim_multiscale": "image/ssim_multiscale.html", "tf.image.stateless_random_brightness": "image/stateless_random_brightness.html", "tf.image.stateless_random_contrast": "image/stateless_random_contrast.html", "tf.image.stateless_random_crop": "image/stateless_random_crop.html", "tf.image.stateless_random_flip_left_right": "image/stateless_random_flip_left_right.html", "tf.image.stateless_random_flip_up_down": "image/stateless_random_flip_up_down.html", "tf.image.stateless_random_hue": "image/stateless_random_hue.html", "tf.image.stateless_random_jpeg_quality": "image/stateless_random_jpeg_quality.html", "tf.image.stateless_random_saturation": "image/stateless_random_saturation.html", "tf.image.stateless_sample_distorted_bounding_box": "image/stateless_sample_distorted_bounding_box.html", "tf.image.total_variation": "image/total_variation.html", "tf.image.transpose": "image/transpose.html", "tf.image.yiq_to_rgb": "image/yiq_to_rgb.html", "tf.image.yuv_to_rgb": "image/yuv_to_rgb.html", "tf.IndexedSlices": "indexedslices.html", "tf.IndexedSlicesSpec": "indexedslicesspec.html", "tf.init_scope": "init_scope.html", "tf.inside_function": "inside_function.html", "tf.io": "io.html", "tf.io.decode_and_crop_jpeg": "io/decode_and_crop_jpeg.html", "tf.io.decode_base64": "io/decode_base64.html", "tf.io.decode_bmp": "io/decode_bmp.html", "tf.io.decode_compressed": "io/decode_compressed.html", "tf.io.decode_csv": "io/decode_csv.html", "tf.io.decode_gif": "io/decode_gif.html", "tf.io.decode_image": "io/decode_image.html", "tf.io.decode_jpeg": "io/decode_jpeg.html", "tf.io.decode_json_example": "io/decode_json_example.html", "tf.io.decode_png": "io/decode_png.html", "tf.io.decode_proto": "io/decode_proto.html", "tf.io.decode_raw": "io/decode_raw.html", "tf.io.deserialize_many_sparse": "io/deserialize_many_sparse.html", "tf.io.encode_base64": "io/encode_base64.html", "tf.io.encode_jpeg": "io/encode_jpeg.html", "tf.io.encode_png": "io/encode_png.html", "tf.io.encode_proto": "io/encode_proto.html", "tf.io.extract_jpeg_shape": "io/extract_jpeg_shape.html", "tf.io.FixedLenFeature": "io/fixedlenfeature.html", "tf.io.FixedLenSequenceFeature": "io/fixedlensequencefeature.html", "tf.io.gfile": "io/gfile.html", "tf.io.gfile.copy": "io/gfile/copy.html", "tf.io.gfile.exists": "io/gfile/exists.html", "tf.io.gfile.get_registered_schemes": "io/gfile/get_registered_schemes.html", "tf.io.gfile.GFile": "io/gfile/gfile.html", "tf.io.gfile.glob": "io/gfile/glob.html", "tf.io.gfile.isdir": "io/gfile/isdir.html", "tf.io.gfile.join": "io/gfile/join.html", "tf.io.gfile.listdir": "io/gfile/listdir.html", "tf.io.gfile.makedirs": "io/gfile/makedirs.html", "tf.io.gfile.mkdir": "io/gfile/mkdir.html", "tf.io.gfile.remove": "io/gfile/remove.html", "tf.io.gfile.rename": "io/gfile/rename.html", "tf.io.gfile.rmtree": "io/gfile/rmtree.html", "tf.io.gfile.stat": "io/gfile/stat.html", "tf.io.gfile.walk": "io/gfile/walk.html", "tf.io.is_jpeg": "io/is_jpeg.html", "tf.io.match_filenames_once": "io/match_filenames_once.html", "tf.io.matching_files": "io/matching_files.html", "tf.io.parse_example": "io/parse_example.html", "tf.io.parse_sequence_example": "io/parse_sequence_example.html", "tf.io.parse_single_example": "io/parse_single_example.html", "tf.io.parse_single_sequence_example": "io/parse_single_sequence_example.html", "tf.io.parse_tensor": "io/parse_tensor.html", "tf.io.RaggedFeature": "io/raggedfeature.html", "tf.io.RaggedFeature.RowLengths": "io/raggedfeature/rowlengths.html", "tf.io.RaggedFeature.RowLimits": "io/raggedfeature/rowlimits.html", "tf.io.RaggedFeature.RowSplits": "io/raggedfeature/rowsplits.html", "tf.io.RaggedFeature.RowStarts": "io/raggedfeature/rowstarts.html", "tf.io.RaggedFeature.UniformRowLength": "io/raggedfeature/uniformrowlength.html", "tf.io.RaggedFeature.ValueRowIds": "io/raggedfeature/valuerowids.html", "tf.io.read_file": "io/read_file.html", "tf.io.serialize_many_sparse": "io/serialize_many_sparse.html", "tf.io.serialize_sparse": "io/serialize_sparse.html", "tf.io.serialize_tensor": "io/serialize_tensor.html", "tf.io.SparseFeature": "io/sparsefeature.html", "tf.io.TFRecordOptions": "io/tfrecordoptions.html", "tf.io.TFRecordWriter": "io/tfrecordwriter.html", "tf.io.VarLenFeature": "io/varlenfeature.html", "tf.io.write_file": "io/write_file.html", "tf.io.write_graph": "io/write_graph.html", "tf.is_tensor": "is_tensor.html", "tf.keras": "keras.html", "tf.keras.activations": "keras/activations.html", "tf.keras.activations.deserialize": "keras/activations/deserialize.html", "tf.keras.activations.elu": "keras/activations/elu.html", "tf.keras.activations.exponential": "keras/activations/exponential.html", "tf.keras.activations.gelu": "keras/activations/gelu.html", "tf.keras.activations.get": "keras/activations/get.html", "tf.keras.activations.hard_sigmoid": "keras/activations/hard_sigmoid.html", "tf.keras.activations.linear": "keras/activations/linear.html", "tf.keras.activations.relu": "keras/activations/relu.html", "tf.keras.activations.selu": "keras/activations/selu.html", "tf.keras.activations.serialize": "keras/activations/serialize.html", "tf.keras.activations.sigmoid": "keras/activations/sigmoid.html", "tf.keras.activations.softmax": "keras/activations/softmax.html", "tf.keras.activations.softplus": "keras/activations/softplus.html", "tf.keras.activations.softsign": "keras/activations/softsign.html", "tf.keras.activations.swish": "keras/activations/swish.html", "tf.keras.activations.tanh": "keras/activations/tanh.html", "tf.keras.applications": "keras/applications.html", "tf.keras.applications.densenet": "keras/applications/densenet.html", "tf.keras.applications.densenet.decode_predictions": "keras/applications/densenet/decode_predictions.html", "tf.keras.applications.densenet.DenseNet121": "keras/applications/densenet/densenet121.html", "tf.keras.applications.densenet.DenseNet169": "keras/applications/densenet/densenet169.html", "tf.keras.applications.densenet.DenseNet201": "keras/applications/densenet/densenet201.html", "tf.keras.applications.densenet.preprocess_input": "keras/applications/densenet/preprocess_input.html", "tf.keras.applications.efficientnet": "keras/applications/efficientnet.html", "tf.keras.applications.efficientnet.decode_predictions": "keras/applications/efficientnet/decode_predictions.html", "tf.keras.applications.efficientnet.EfficientNetB0": "keras/applications/efficientnet/efficientnetb0.html", "tf.keras.applications.efficientnet.EfficientNetB1": "keras/applications/efficientnet/efficientnetb1.html", "tf.keras.applications.efficientnet.EfficientNetB2": "keras/applications/efficientnet/efficientnetb2.html", "tf.keras.applications.efficientnet.EfficientNetB3": "keras/applications/efficientnet/efficientnetb3.html", "tf.keras.applications.efficientnet.EfficientNetB4": "keras/applications/efficientnet/efficientnetb4.html", "tf.keras.applications.efficientnet.EfficientNetB5": "keras/applications/efficientnet/efficientnetb5.html", "tf.keras.applications.efficientnet.EfficientNetB6": "keras/applications/efficientnet/efficientnetb6.html", "tf.keras.applications.efficientnet.EfficientNetB7": "keras/applications/efficientnet/efficientnetb7.html", "tf.keras.applications.efficientnet.preprocess_input": "keras/applications/efficientnet/preprocess_input.html", "tf.keras.applications.efficientnet_v2": "keras/applications/efficientnet_v2.html", "tf.keras.applications.efficientnet_v2.decode_predictions": "keras/applications/efficientnet_v2/decode_predictions.html", "tf.keras.applications.efficientnet_v2.EfficientNetV2B0": "keras/applications/efficientnet_v2/efficientnetv2b0.html", "tf.keras.applications.efficientnet_v2.EfficientNetV2B1": "keras/applications/efficientnet_v2/efficientnetv2b1.html", "tf.keras.applications.efficientnet_v2.EfficientNetV2B2": "keras/applications/efficientnet_v2/efficientnetv2b2.html", "tf.keras.applications.efficientnet_v2.EfficientNetV2B3": "keras/applications/efficientnet_v2/efficientnetv2b3.html", "tf.keras.applications.efficientnet_v2.EfficientNetV2L": "keras/applications/efficientnet_v2/efficientnetv2l.html", "tf.keras.applications.efficientnet_v2.EfficientNetV2M": "keras/applications/efficientnet_v2/efficientnetv2m.html", "tf.keras.applications.efficientnet_v2.EfficientNetV2S": "keras/applications/efficientnet_v2/efficientnetv2s.html", "tf.keras.applications.efficientnet_v2.preprocess_input": "keras/applications/efficientnet_v2/preprocess_input.html", "tf.keras.applications.imagenet_utils": "keras/applications/imagenet_utils.html", "tf.keras.applications.imagenet_utils.decode_predictions": "keras/applications/imagenet_utils/decode_predictions.html", "tf.keras.applications.imagenet_utils.preprocess_input": "keras/applications/imagenet_utils/preprocess_input.html", "tf.keras.applications.inception_resnet_v2": "keras/applications/inception_resnet_v2.html", "tf.keras.applications.inception_resnet_v2.decode_predictions": "keras/applications/inception_resnet_v2/decode_predictions.html", "tf.keras.applications.inception_resnet_v2.InceptionResNetV2": "keras/applications/inception_resnet_v2/inceptionresnetv2.html", "tf.keras.applications.inception_resnet_v2.preprocess_input": "keras/applications/inception_resnet_v2/preprocess_input.html", "tf.keras.applications.inception_v3": "keras/applications/inception_v3.html", "tf.keras.applications.inception_v3.decode_predictions": "keras/applications/inception_v3/decode_predictions.html", "tf.keras.applications.inception_v3.InceptionV3": "keras/applications/inception_v3/inceptionv3.html", "tf.keras.applications.inception_v3.preprocess_input": "keras/applications/inception_v3/preprocess_input.html", "tf.keras.applications.mobilenet": "keras/applications/mobilenet.html", "tf.keras.applications.mobilenet.decode_predictions": "keras/applications/mobilenet/decode_predictions.html", "tf.keras.applications.mobilenet.MobileNet": "keras/applications/mobilenet/mobilenet.html", "tf.keras.applications.mobilenet.preprocess_input": "keras/applications/mobilenet/preprocess_input.html", "tf.keras.applications.mobilenet_v2": "keras/applications/mobilenet_v2.html", "tf.keras.applications.mobilenet_v2.decode_predictions": "keras/applications/mobilenet_v2/decode_predictions.html", "tf.keras.applications.mobilenet_v2.MobileNetV2": "keras/applications/mobilenet_v2/mobilenetv2.html", "tf.keras.applications.mobilenet_v2.preprocess_input": "keras/applications/mobilenet_v2/preprocess_input.html", "tf.keras.applications.mobilenet_v3": "keras/applications/mobilenet_v3.html", "tf.keras.applications.mobilenet_v3.decode_predictions": "keras/applications/mobilenet_v3/decode_predictions.html", "tf.keras.applications.mobilenet_v3.preprocess_input": "keras/applications/mobilenet_v3/preprocess_input.html", "tf.keras.applications.MobileNetV3Large": "keras/applications/mobilenetv3large.html", "tf.keras.applications.MobileNetV3Small": "keras/applications/mobilenetv3small.html", "tf.keras.applications.nasnet": "keras/applications/nasnet.html", "tf.keras.applications.nasnet.decode_predictions": "keras/applications/nasnet/decode_predictions.html", "tf.keras.applications.nasnet.NASNetLarge": "keras/applications/nasnet/nasnetlarge.html", "tf.keras.applications.nasnet.NASNetMobile": "keras/applications/nasnet/nasnetmobile.html", "tf.keras.applications.nasnet.preprocess_input": "keras/applications/nasnet/preprocess_input.html", "tf.keras.applications.regnet": "keras/applications/regnet.html", "tf.keras.applications.regnet.decode_predictions": "keras/applications/regnet/decode_predictions.html", "tf.keras.applications.regnet.preprocess_input": "keras/applications/regnet/preprocess_input.html", "tf.keras.applications.regnet.RegNetX002": "keras/applications/regnet/regnetx002.html", "tf.keras.applications.regnet.RegNetX004": "keras/applications/regnet/regnetx004.html", "tf.keras.applications.regnet.RegNetX006": "keras/applications/regnet/regnetx006.html", "tf.keras.applications.regnet.RegNetX008": "keras/applications/regnet/regnetx008.html", "tf.keras.applications.regnet.RegNetX016": "keras/applications/regnet/regnetx016.html", "tf.keras.applications.regnet.RegNetX032": "keras/applications/regnet/regnetx032.html", "tf.keras.applications.regnet.RegNetX040": "keras/applications/regnet/regnetx040.html", "tf.keras.applications.regnet.RegNetX064": "keras/applications/regnet/regnetx064.html", "tf.keras.applications.regnet.RegNetX080": "keras/applications/regnet/regnetx080.html", "tf.keras.applications.regnet.RegNetX120": "keras/applications/regnet/regnetx120.html", "tf.keras.applications.regnet.RegNetX160": "keras/applications/regnet/regnetx160.html", "tf.keras.applications.regnet.RegNetX320": "keras/applications/regnet/regnetx320.html", "tf.keras.applications.regnet.RegNetY002": "keras/applications/regnet/regnety002.html", "tf.keras.applications.regnet.RegNetY004": "keras/applications/regnet/regnety004.html", "tf.keras.applications.regnet.RegNetY006": "keras/applications/regnet/regnety006.html", "tf.keras.applications.regnet.RegNetY008": "keras/applications/regnet/regnety008.html", "tf.keras.applications.regnet.RegNetY016": "keras/applications/regnet/regnety016.html", "tf.keras.applications.regnet.RegNetY032": "keras/applications/regnet/regnety032.html", "tf.keras.applications.regnet.RegNetY040": "keras/applications/regnet/regnety040.html", "tf.keras.applications.regnet.RegNetY064": "keras/applications/regnet/regnety064.html", "tf.keras.applications.regnet.RegNetY080": "keras/applications/regnet/regnety080.html", "tf.keras.applications.regnet.RegNetY120": "keras/applications/regnet/regnety120.html", "tf.keras.applications.regnet.RegNetY160": "keras/applications/regnet/regnety160.html", "tf.keras.applications.regnet.RegNetY320": "keras/applications/regnet/regnety320.html", "tf.keras.applications.resnet": "keras/applications/resnet.html", "tf.keras.applications.resnet.ResNet101": "keras/applications/resnet/resnet101.html", "tf.keras.applications.resnet.ResNet152": "keras/applications/resnet/resnet152.html", "tf.keras.applications.resnet50": "keras/applications/resnet50.html", "tf.keras.applications.resnet50.decode_predictions": "keras/applications/resnet50/decode_predictions.html", "tf.keras.applications.resnet50.preprocess_input": "keras/applications/resnet50/preprocess_input.html", "tf.keras.applications.resnet50.ResNet50": "keras/applications/resnet50/resnet50.html", "tf.keras.applications.resnet_rs": "keras/applications/resnet_rs.html", "tf.keras.applications.resnet_rs.decode_predictions": "keras/applications/resnet_rs/decode_predictions.html", "tf.keras.applications.resnet_rs.preprocess_input": "keras/applications/resnet_rs/preprocess_input.html", "tf.keras.applications.resnet_rs.ResNetRS101": "keras/applications/resnet_rs/resnetrs101.html", "tf.keras.applications.resnet_rs.ResNetRS152": "keras/applications/resnet_rs/resnetrs152.html", "tf.keras.applications.resnet_rs.ResNetRS200": "keras/applications/resnet_rs/resnetrs200.html", "tf.keras.applications.resnet_rs.ResNetRS270": "keras/applications/resnet_rs/resnetrs270.html", "tf.keras.applications.resnet_rs.ResNetRS350": "keras/applications/resnet_rs/resnetrs350.html", "tf.keras.applications.resnet_rs.ResNetRS420": "keras/applications/resnet_rs/resnetrs420.html", "tf.keras.applications.resnet_rs.ResNetRS50": "keras/applications/resnet_rs/resnetrs50.html", "tf.keras.applications.resnet_v2": "keras/applications/resnet_v2.html", "tf.keras.applications.resnet_v2.decode_predictions": "keras/applications/resnet_v2/decode_predictions.html", "tf.keras.applications.resnet_v2.preprocess_input": "keras/applications/resnet_v2/preprocess_input.html", "tf.keras.applications.resnet_v2.ResNet101V2": "keras/applications/resnet_v2/resnet101v2.html", "tf.keras.applications.resnet_v2.ResNet152V2": "keras/applications/resnet_v2/resnet152v2.html", "tf.keras.applications.resnet_v2.ResNet50V2": "keras/applications/resnet_v2/resnet50v2.html", "tf.keras.applications.vgg16": "keras/applications/vgg16.html", "tf.keras.applications.vgg16.decode_predictions": "keras/applications/vgg16/decode_predictions.html", "tf.keras.applications.vgg16.preprocess_input": "keras/applications/vgg16/preprocess_input.html", "tf.keras.applications.vgg16.VGG16": "keras/applications/vgg16/vgg16.html", "tf.keras.applications.vgg19": "keras/applications/vgg19.html", "tf.keras.applications.vgg19.decode_predictions": "keras/applications/vgg19/decode_predictions.html", "tf.keras.applications.vgg19.preprocess_input": "keras/applications/vgg19/preprocess_input.html", "tf.keras.applications.vgg19.VGG19": "keras/applications/vgg19/vgg19.html", "tf.keras.applications.xception": "keras/applications/xception.html", "tf.keras.applications.xception.decode_predictions": "keras/applications/xception/decode_predictions.html", "tf.keras.applications.xception.preprocess_input": "keras/applications/xception/preprocess_input.html", "tf.keras.applications.xception.Xception": "keras/applications/xception/xception.html", "tf.keras.backend": "keras/backend.html", "tf.keras.backend.clear_session": "keras/backend/clear_session.html", "tf.keras.backend.epsilon": "keras/backend/epsilon.html", "tf.keras.backend.experimental": "keras/backend/experimental.html", "tf.keras.backend.experimental.disable_tf_random_generator": "keras/backend/experimental/disable_tf_random_generator.html", "tf.keras.backend.experimental.enable_tf_random_generator": "keras/backend/experimental/enable_tf_random_generator.html", "tf.keras.backend.experimental.is_tf_random_generator_enabled": "keras/backend/experimental/is_tf_random_generator_enabled.html", "tf.keras.backend.floatx": "keras/backend/floatx.html", "tf.keras.backend.get_uid": "keras/backend/get_uid.html", "tf.keras.backend.image_data_format": "keras/backend/image_data_format.html", "tf.keras.backend.is_keras_tensor": "keras/backend/is_keras_tensor.html", "tf.keras.backend.reset_uids": "keras/backend/reset_uids.html", "tf.keras.backend.rnn": "keras/backend/rnn.html", "tf.keras.backend.set_epsilon": "keras/backend/set_epsilon.html", "tf.keras.backend.set_floatx": "keras/backend/set_floatx.html", "tf.keras.backend.set_image_data_format": "keras/backend/set_image_data_format.html", "tf.keras.callbacks": "keras/callbacks.html", "tf.keras.callbacks.BackupAndRestore": "keras/callbacks/backupandrestore.html", "tf.keras.callbacks.BaseLogger": "keras/callbacks/baselogger.html", "tf.keras.callbacks.Callback": "keras/callbacks/callback.html", "tf.keras.callbacks.CallbackList": "keras/callbacks/callbacklist.html", "tf.keras.callbacks.CSVLogger": "keras/callbacks/csvlogger.html", "tf.keras.callbacks.EarlyStopping": "keras/callbacks/earlystopping.html", "tf.keras.callbacks.experimental": "keras/callbacks/experimental.html", "tf.keras.callbacks.experimental.BackupAndRestore": "keras/callbacks/experimental/backupandrestore.html", "tf.keras.callbacks.History": "keras/callbacks/history.html", "tf.keras.callbacks.LambdaCallback": "keras/callbacks/lambdacallback.html", "tf.keras.callbacks.LearningRateScheduler": "keras/callbacks/learningratescheduler.html", "tf.keras.callbacks.ModelCheckpoint": "keras/callbacks/modelcheckpoint.html", "tf.keras.callbacks.ProgbarLogger": "keras/callbacks/progbarlogger.html", "tf.keras.callbacks.ReduceLROnPlateau": "keras/callbacks/reducelronplateau.html", "tf.keras.callbacks.RemoteMonitor": "keras/callbacks/remotemonitor.html", "tf.keras.callbacks.TensorBoard": "keras/callbacks/tensorboard.html", "tf.keras.callbacks.TerminateOnNaN": "keras/callbacks/terminateonnan.html", "tf.keras.constraints": "keras/constraints.html", "tf.keras.constraints.Constraint": "keras/constraints/constraint.html", "tf.keras.constraints.deserialize": "keras/constraints/deserialize.html", "tf.keras.constraints.get": "keras/constraints/get.html", "tf.keras.constraints.MaxNorm": "keras/constraints/maxnorm.html", "tf.keras.constraints.MinMaxNorm": "keras/constraints/minmaxnorm.html", "tf.keras.constraints.NonNeg": "keras/constraints/nonneg.html", "tf.keras.constraints.RadialConstraint": "keras/constraints/radialconstraint.html", "tf.keras.constraints.serialize": "keras/constraints/serialize.html", "tf.keras.constraints.UnitNorm": "keras/constraints/unitnorm.html", "tf.keras.datasets": "keras/datasets.html", "tf.keras.datasets.boston_housing": "keras/datasets/boston_housing.html", "tf.keras.datasets.boston_housing.load_data": "keras/datasets/boston_housing/load_data.html", "tf.keras.datasets.cifar10": "keras/datasets/cifar10.html", "tf.keras.datasets.cifar10.load_data": "keras/datasets/cifar10/load_data.html", "tf.keras.datasets.cifar100": "keras/datasets/cifar100.html", "tf.keras.datasets.cifar100.load_data": "keras/datasets/cifar100/load_data.html", "tf.keras.datasets.fashion_mnist": "keras/datasets/fashion_mnist.html", "tf.keras.datasets.fashion_mnist.load_data": "keras/datasets/fashion_mnist/load_data.html", "tf.keras.datasets.imdb": "keras/datasets/imdb.html", "tf.keras.datasets.imdb.get_word_index": "keras/datasets/imdb/get_word_index.html", "tf.keras.datasets.imdb.load_data": "keras/datasets/imdb/load_data.html", "tf.keras.datasets.mnist": "keras/datasets/mnist.html", "tf.keras.datasets.mnist.load_data": "keras/datasets/mnist/load_data.html", "tf.keras.datasets.reuters": "keras/datasets/reuters.html", "tf.keras.datasets.reuters.get_word_index": "keras/datasets/reuters/get_word_index.html", "tf.keras.datasets.reuters.load_data": "keras/datasets/reuters/load_data.html", "tf.keras.dtensor": "keras/dtensor.html", "tf.keras.dtensor.experimental": "keras/dtensor/experimental.html", "tf.keras.dtensor.experimental.layout_map_scope": "keras/dtensor/experimental/layout_map_scope.html", "tf.keras.dtensor.experimental.LayoutMap": "keras/dtensor/experimental/layoutmap.html", "tf.keras.dtensor.experimental.optimizers": "keras/dtensor/experimental/optimizers.html", "tf.keras.dtensor.experimental.optimizers.Adadelta": "keras/dtensor/experimental/optimizers/adadelta.html", "tf.keras.dtensor.experimental.optimizers.Adagrad": "keras/dtensor/experimental/optimizers/adagrad.html", "tf.keras.dtensor.experimental.optimizers.Adam": "keras/dtensor/experimental/optimizers/adam.html", "tf.keras.dtensor.experimental.optimizers.RMSprop": "keras/dtensor/experimental/optimizers/rmsprop.html", "tf.keras.dtensor.experimental.optimizers.SGD": "keras/dtensor/experimental/optimizers/sgd.html", "tf.keras.estimator": "keras/estimator.html", "tf.keras.estimator.model_to_estimator": "keras/estimator/model_to_estimator.html", "tf.keras.experimental": "keras/experimental.html", "tf.keras.experimental.LinearModel": "keras/experimental/linearmodel.html", "tf.keras.experimental.SequenceFeatures": "keras/experimental/sequencefeatures.html", "tf.keras.experimental.SidecarEvaluator": "keras/experimental/sidecarevaluator.html", "tf.keras.experimental.WideDeepModel": "keras/experimental/widedeepmodel.html", "tf.keras.initializers": "keras/initializers.html", "tf.keras.initializers.Constant": "keras/initializers/constant.html", "tf.keras.initializers.deserialize": "keras/initializers/deserialize.html", "tf.keras.initializers.get": "keras/initializers/get.html", "tf.keras.initializers.GlorotNormal": "keras/initializers/glorotnormal.html", "tf.keras.initializers.GlorotUniform": "keras/initializers/glorotuniform.html", "tf.keras.initializers.HeNormal": "keras/initializers/henormal.html", "tf.keras.initializers.HeUniform": "keras/initializers/heuniform.html", "tf.keras.initializers.Identity": "keras/initializers/identity.html", "tf.keras.initializers.Initializer": "keras/initializers/initializer.html", "tf.keras.initializers.LecunNormal": "keras/initializers/lecunnormal.html", "tf.keras.initializers.LecunUniform": "keras/initializers/lecununiform.html", "tf.keras.initializers.Ones": "keras/initializers/ones.html", "tf.keras.initializers.Orthogonal": "keras/initializers/orthogonal.html", "tf.keras.initializers.RandomNormal": "keras/initializers/randomnormal.html", "tf.keras.initializers.RandomUniform": "keras/initializers/randomuniform.html", "tf.keras.initializers.serialize": "keras/initializers/serialize.html", "tf.keras.initializers.TruncatedNormal": "keras/initializers/truncatednormal.html", "tf.keras.initializers.VarianceScaling": "keras/initializers/variancescaling.html", "tf.keras.initializers.Zeros": "keras/initializers/zeros.html", "tf.keras.Input": "keras/input.html", "tf.keras.layers": "keras/layers.html", "tf.keras.layers.AbstractRNNCell": "keras/layers/abstractrnncell.html", "tf.keras.layers.Activation": "keras/layers/activation.html", "tf.keras.layers.ActivityRegularization": "keras/layers/activityregularization.html", "tf.keras.layers.Add": "keras/layers/add.html", "tf.keras.layers.AdditiveAttention": "keras/layers/additiveattention.html", "tf.keras.layers.AlphaDropout": "keras/layers/alphadropout.html", "tf.keras.layers.Attention": "keras/layers/attention.html", "tf.keras.layers.Average": "keras/layers/average.html", "tf.keras.layers.AveragePooling1D": "keras/layers/averagepooling1d.html", "tf.keras.layers.AveragePooling2D": "keras/layers/averagepooling2d.html", "tf.keras.layers.AveragePooling3D": "keras/layers/averagepooling3d.html", "tf.keras.layers.BatchNormalization": "keras/layers/batchnormalization.html", "tf.keras.layers.Bidirectional": "keras/layers/bidirectional.html", "tf.keras.layers.CategoryEncoding": "keras/layers/categoryencoding.html", "tf.keras.layers.CenterCrop": "keras/layers/centercrop.html", "tf.keras.layers.Concatenate": "keras/layers/concatenate.html", "tf.keras.layers.Conv1D": "keras/layers/conv1d.html", "tf.keras.layers.Conv1DTranspose": "keras/layers/conv1dtranspose.html", "tf.keras.layers.Conv2D": "keras/layers/conv2d.html", "tf.keras.layers.Conv2DTranspose": "keras/layers/conv2dtranspose.html", "tf.keras.layers.Conv3D": "keras/layers/conv3d.html", "tf.keras.layers.Conv3DTranspose": "keras/layers/conv3dtranspose.html", "tf.keras.layers.ConvLSTM1D": "keras/layers/convlstm1d.html", "tf.keras.layers.ConvLSTM2D": "keras/layers/convlstm2d.html", "tf.keras.layers.ConvLSTM3D": "keras/layers/convlstm3d.html", "tf.keras.layers.Cropping1D": "keras/layers/cropping1d.html", "tf.keras.layers.Cropping2D": "keras/layers/cropping2d.html", "tf.keras.layers.Cropping3D": "keras/layers/cropping3d.html", "tf.keras.layers.Dense": "keras/layers/dense.html", "tf.keras.layers.DenseFeatures": "keras/layers/densefeatures.html", "tf.keras.layers.DepthwiseConv1D": "keras/layers/depthwiseconv1d.html", "tf.keras.layers.DepthwiseConv2D": "keras/layers/depthwiseconv2d.html", "tf.keras.layers.deserialize": "keras/layers/deserialize.html", "tf.keras.layers.Discretization": "keras/layers/discretization.html", "tf.keras.layers.Dot": "keras/layers/dot.html", "tf.keras.layers.Dropout": "keras/layers/dropout.html", "tf.keras.layers.ELU": "keras/layers/elu.html", "tf.keras.layers.Embedding": "keras/layers/embedding.html", "tf.keras.layers.experimental": "keras/layers/experimental.html", "tf.keras.layers.experimental.EinsumDense": "keras/layers/experimental/einsumdense.html", "tf.keras.layers.experimental.preprocessing": "keras/layers/experimental/preprocessing.html", "tf.keras.layers.experimental.preprocessing.HashedCrossing": "keras/layers/experimental/preprocessing/hashedcrossing.html", "tf.keras.layers.experimental.preprocessing.PreprocessingLayer": "keras/layers/experimental/preprocessing/preprocessinglayer.html", "tf.keras.layers.experimental.RandomFourierFeatures": "keras/layers/experimental/randomfourierfeatures.html", "tf.keras.layers.experimental.SyncBatchNormalization": "keras/layers/experimental/syncbatchnormalization.html", "tf.keras.layers.Flatten": "keras/layers/flatten.html", "tf.keras.layers.GaussianDropout": "keras/layers/gaussiandropout.html", "tf.keras.layers.GaussianNoise": "keras/layers/gaussiannoise.html", "tf.keras.layers.GlobalAveragePooling1D": "keras/layers/globalaveragepooling1d.html", "tf.keras.layers.GlobalAveragePooling2D": "keras/layers/globalaveragepooling2d.html", "tf.keras.layers.GlobalAveragePooling3D": "keras/layers/globalaveragepooling3d.html", "tf.keras.layers.GlobalMaxPool1D": "keras/layers/globalmaxpool1d.html", "tf.keras.layers.GlobalMaxPool2D": "keras/layers/globalmaxpool2d.html", "tf.keras.layers.GlobalMaxPool3D": "keras/layers/globalmaxpool3d.html", "tf.keras.layers.GRU": "keras/layers/gru.html", "tf.keras.layers.GRUCell": "keras/layers/grucell.html", "tf.keras.layers.Hashing": "keras/layers/hashing.html", "tf.keras.layers.InputLayer": "keras/layers/inputlayer.html", "tf.keras.layers.InputSpec": "keras/layers/inputspec.html", "tf.keras.layers.IntegerLookup": "keras/layers/integerlookup.html", "tf.keras.layers.Lambda": "keras/layers/lambda.html", "tf.keras.layers.Layer": "keras/layers/layer.html", "tf.keras.layers.LayerNormalization": "keras/layers/layernormalization.html", "tf.keras.layers.LeakyReLU": "keras/layers/leakyrelu.html", "tf.keras.layers.LocallyConnected1D": "keras/layers/locallyconnected1d.html", "tf.keras.layers.LocallyConnected2D": "keras/layers/locallyconnected2d.html", "tf.keras.layers.LSTM": "keras/layers/lstm.html", "tf.keras.layers.LSTMCell": "keras/layers/lstmcell.html", "tf.keras.layers.Masking": "keras/layers/masking.html", "tf.keras.layers.Maximum": "keras/layers/maximum.html", "tf.keras.layers.MaxPool1D": "keras/layers/maxpool1d.html", "tf.keras.layers.MaxPool2D": "keras/layers/maxpool2d.html", "tf.keras.layers.MaxPool3D": "keras/layers/maxpool3d.html", "tf.keras.layers.Minimum": "keras/layers/minimum.html", "tf.keras.layers.MultiHeadAttention": "keras/layers/multiheadattention.html", "tf.keras.layers.Multiply": "keras/layers/multiply.html", "tf.keras.layers.Normalization": "keras/layers/normalization.html", "tf.keras.layers.Permute": "keras/layers/permute.html", "tf.keras.layers.PReLU": "keras/layers/prelu.html", "tf.keras.layers.RandomBrightness": "keras/layers/randombrightness.html", "tf.keras.layers.RandomContrast": "keras/layers/randomcontrast.html", "tf.keras.layers.RandomCrop": "keras/layers/randomcrop.html", "tf.keras.layers.RandomFlip": "keras/layers/randomflip.html", "tf.keras.layers.RandomHeight": "keras/layers/randomheight.html", "tf.keras.layers.RandomRotation": "keras/layers/randomrotation.html", "tf.keras.layers.RandomTranslation": "keras/layers/randomtranslation.html", "tf.keras.layers.RandomWidth": "keras/layers/randomwidth.html", "tf.keras.layers.RandomZoom": "keras/layers/randomzoom.html", "tf.keras.layers.ReLU": "keras/layers/relu.html", "tf.keras.layers.RepeatVector": "keras/layers/repeatvector.html", "tf.keras.layers.Rescaling": "keras/layers/rescaling.html", "tf.keras.layers.Reshape": "keras/layers/reshape.html", "tf.keras.layers.Resizing": "keras/layers/resizing.html", "tf.keras.layers.RNN": "keras/layers/rnn.html", "tf.keras.layers.SeparableConv1D": "keras/layers/separableconv1d.html", "tf.keras.layers.SeparableConv2D": "keras/layers/separableconv2d.html", "tf.keras.layers.serialize": "keras/layers/serialize.html", "tf.keras.layers.SimpleRNN": "keras/layers/simplernn.html", "tf.keras.layers.SimpleRNNCell": "keras/layers/simplernncell.html", "tf.keras.layers.Softmax": "keras/layers/softmax.html", "tf.keras.layers.SpatialDropout1D": "keras/layers/spatialdropout1d.html", "tf.keras.layers.SpatialDropout2D": "keras/layers/spatialdropout2d.html", "tf.keras.layers.SpatialDropout3D": "keras/layers/spatialdropout3d.html", "tf.keras.layers.StackedRNNCells": "keras/layers/stackedrnncells.html", "tf.keras.layers.StringLookup": "keras/layers/stringlookup.html", "tf.keras.layers.Subtract": "keras/layers/subtract.html", "tf.keras.layers.TextVectorization": "keras/layers/textvectorization.html", "tf.keras.layers.ThresholdedReLU": "keras/layers/thresholdedrelu.html", "tf.keras.layers.TimeDistributed": "keras/layers/timedistributed.html", "tf.keras.layers.UnitNormalization": "keras/layers/unitnormalization.html", "tf.keras.layers.UpSampling1D": "keras/layers/upsampling1d.html", "tf.keras.layers.UpSampling2D": "keras/layers/upsampling2d.html", "tf.keras.layers.UpSampling3D": "keras/layers/upsampling3d.html", "tf.keras.layers.Wrapper": "keras/layers/wrapper.html", "tf.keras.layers.ZeroPadding1D": "keras/layers/zeropadding1d.html", "tf.keras.layers.ZeroPadding2D": "keras/layers/zeropadding2d.html", "tf.keras.layers.ZeroPadding3D": "keras/layers/zeropadding3d.html", "tf.keras.losses": "keras/losses.html", "tf.keras.losses.BinaryCrossentropy": "keras/losses/binarycrossentropy.html", "tf.keras.losses.BinaryFocalCrossentropy": "keras/losses/binaryfocalcrossentropy.html", "tf.keras.losses.categorical_hinge": "keras/losses/categorical_hinge.html", "tf.keras.losses.CategoricalCrossentropy": "keras/losses/categoricalcrossentropy.html", "tf.keras.losses.CategoricalHinge": "keras/losses/categoricalhinge.html", "tf.keras.losses.cosine_similarity": "keras/losses/cosine_similarity.html", "tf.keras.losses.CosineSimilarity": "keras/losses/cosinesimilarity.html", "tf.keras.losses.deserialize": "keras/losses/deserialize.html", "tf.keras.losses.get": "keras/losses/get.html", "tf.keras.losses.Hinge": "keras/losses/hinge.html", "tf.keras.losses.Huber": "keras/losses/huber.html", "tf.keras.losses.KLDivergence": "keras/losses/kldivergence.html", "tf.keras.losses.log_cosh": "keras/losses/log_cosh.html", "tf.keras.losses.LogCosh": "keras/losses/logcosh.html", "tf.keras.losses.Loss": "keras/losses/loss.html", "tf.keras.losses.MeanAbsoluteError": "keras/losses/meanabsoluteerror.html", "tf.keras.losses.MeanAbsolutePercentageError": "keras/losses/meanabsolutepercentageerror.html", "tf.keras.losses.MeanSquaredError": "keras/losses/meansquarederror.html", "tf.keras.losses.MeanSquaredLogarithmicError": "keras/losses/meansquaredlogarithmicerror.html", "tf.keras.losses.Poisson": "keras/losses/poisson.html", "tf.keras.losses.Reduction": "keras/losses/reduction.html", "tf.keras.losses.serialize": "keras/losses/serialize.html", "tf.keras.losses.SparseCategoricalCrossentropy": "keras/losses/sparsecategoricalcrossentropy.html", "tf.keras.losses.SquaredHinge": "keras/losses/squaredhinge.html", "tf.keras.metrics": "keras/metrics.html", "tf.keras.metrics.Accuracy": "keras/metrics/accuracy.html", "tf.keras.metrics.AUC": "keras/metrics/auc.html", "tf.keras.metrics.binary_accuracy": "keras/metrics/binary_accuracy.html", "tf.keras.metrics.binary_crossentropy": "keras/metrics/binary_crossentropy.html", "tf.keras.metrics.binary_focal_crossentropy": "keras/metrics/binary_focal_crossentropy.html", "tf.keras.metrics.BinaryAccuracy": "keras/metrics/binaryaccuracy.html", "tf.keras.metrics.BinaryCrossentropy": "keras/metrics/binarycrossentropy.html", "tf.keras.metrics.BinaryIoU": "keras/metrics/binaryiou.html", "tf.keras.metrics.categorical_accuracy": "keras/metrics/categorical_accuracy.html", "tf.keras.metrics.categorical_crossentropy": "keras/metrics/categorical_crossentropy.html", "tf.keras.metrics.CategoricalAccuracy": "keras/metrics/categoricalaccuracy.html", "tf.keras.metrics.CategoricalCrossentropy": "keras/metrics/categoricalcrossentropy.html", "tf.keras.metrics.CategoricalHinge": "keras/metrics/categoricalhinge.html", "tf.keras.metrics.CosineSimilarity": "keras/metrics/cosinesimilarity.html", "tf.keras.metrics.deserialize": "keras/metrics/deserialize.html", "tf.keras.metrics.FalseNegatives": "keras/metrics/falsenegatives.html", "tf.keras.metrics.FalsePositives": "keras/metrics/falsepositives.html", "tf.keras.metrics.get": "keras/metrics/get.html", "tf.keras.metrics.Hinge": "keras/metrics/hinge.html", "tf.keras.metrics.IoU": "keras/metrics/iou.html", "tf.keras.metrics.kl_divergence": "keras/metrics/kl_divergence.html", "tf.keras.metrics.KLDivergence": "keras/metrics/kldivergence.html", "tf.keras.metrics.LogCoshError": "keras/metrics/logcosherror.html", "tf.keras.metrics.Mean": "keras/metrics/mean.html", "tf.keras.metrics.mean_absolute_error": "keras/metrics/mean_absolute_error.html", "tf.keras.metrics.mean_absolute_percentage_error": "keras/metrics/mean_absolute_percentage_error.html", "tf.keras.metrics.mean_squared_error": "keras/metrics/mean_squared_error.html", "tf.keras.metrics.mean_squared_logarithmic_error": "keras/metrics/mean_squared_logarithmic_error.html", "tf.keras.metrics.MeanAbsoluteError": "keras/metrics/meanabsoluteerror.html", "tf.keras.metrics.MeanAbsolutePercentageError": "keras/metrics/meanabsolutepercentageerror.html", "tf.keras.metrics.MeanIoU": "keras/metrics/meaniou.html", "tf.keras.metrics.MeanMetricWrapper": "keras/metrics/meanmetricwrapper.html", "tf.keras.metrics.MeanRelativeError": "keras/metrics/meanrelativeerror.html", "tf.keras.metrics.MeanSquaredError": "keras/metrics/meansquarederror.html", "tf.keras.metrics.MeanSquaredLogarithmicError": "keras/metrics/meansquaredlogarithmicerror.html", "tf.keras.metrics.MeanTensor": "keras/metrics/meantensor.html", "tf.keras.metrics.Metric": "keras/metrics/metric.html", "tf.keras.metrics.OneHotIoU": "keras/metrics/onehotiou.html", "tf.keras.metrics.OneHotMeanIoU": "keras/metrics/onehotmeaniou.html", "tf.keras.metrics.Poisson": "keras/metrics/poisson.html", "tf.keras.metrics.Precision": "keras/metrics/precision.html", "tf.keras.metrics.PrecisionAtRecall": "keras/metrics/precisionatrecall.html", "tf.keras.metrics.Recall": "keras/metrics/recall.html", "tf.keras.metrics.RecallAtPrecision": "keras/metrics/recallatprecision.html", "tf.keras.metrics.RootMeanSquaredError": "keras/metrics/rootmeansquarederror.html", "tf.keras.metrics.SensitivityAtSpecificity": "keras/metrics/sensitivityatspecificity.html", "tf.keras.metrics.serialize": "keras/metrics/serialize.html", "tf.keras.metrics.sparse_categorical_accuracy": "keras/metrics/sparse_categorical_accuracy.html", "tf.keras.metrics.sparse_categorical_crossentropy": "keras/metrics/sparse_categorical_crossentropy.html", "tf.keras.metrics.sparse_top_k_categorical_accuracy": "keras/metrics/sparse_top_k_categorical_accuracy.html", "tf.keras.metrics.SparseCategoricalAccuracy": "keras/metrics/sparsecategoricalaccuracy.html", "tf.keras.metrics.SparseCategoricalCrossentropy": "keras/metrics/sparsecategoricalcrossentropy.html", "tf.keras.metrics.SparseTopKCategoricalAccuracy": "keras/metrics/sparsetopkcategoricalaccuracy.html", "tf.keras.metrics.SpecificityAtSensitivity": "keras/metrics/specificityatsensitivity.html", "tf.keras.metrics.squared_hinge": "keras/metrics/squared_hinge.html", "tf.keras.metrics.SquaredHinge": "keras/metrics/squaredhinge.html", "tf.keras.metrics.Sum": "keras/metrics/sum.html", "tf.keras.metrics.top_k_categorical_accuracy": "keras/metrics/top_k_categorical_accuracy.html", "tf.keras.metrics.TopKCategoricalAccuracy": "keras/metrics/topkcategoricalaccuracy.html", "tf.keras.metrics.TrueNegatives": "keras/metrics/truenegatives.html", "tf.keras.metrics.TruePositives": "keras/metrics/truepositives.html", "tf.keras.mixed_precision": "keras/mixed_precision.html", "tf.keras.mixed_precision.global_policy": "keras/mixed_precision/global_policy.html", "tf.keras.mixed_precision.LossScaleOptimizer": "keras/mixed_precision/lossscaleoptimizer.html", "tf.keras.mixed_precision.Policy": "keras/mixed_precision/policy.html", "tf.keras.mixed_precision.set_global_policy": "keras/mixed_precision/set_global_policy.html", "tf.keras.Model": "keras/model.html", "tf.keras.models": "keras/models.html", "tf.keras.models.clone_model": "keras/models/clone_model.html", "tf.keras.models.load_model": "keras/models/load_model.html", "tf.keras.models.model_from_config": "keras/models/model_from_config.html", "tf.keras.models.model_from_json": "keras/models/model_from_json.html", "tf.keras.models.model_from_yaml": "keras/models/model_from_yaml.html", "tf.keras.models.save_model": "keras/models/save_model.html", "tf.keras.optimizers": "keras/optimizers.html", "tf.keras.optimizers.Adadelta": "keras/optimizers/adadelta.html", "tf.keras.optimizers.Adagrad": "keras/optimizers/adagrad.html", "tf.keras.optimizers.Adam": "keras/optimizers/adam.html", "tf.keras.optimizers.Adamax": "keras/optimizers/adamax.html", "tf.keras.optimizers.deserialize": "keras/optimizers/deserialize.html", "tf.keras.optimizers.experimental": "keras/optimizers/experimental.html", "tf.keras.optimizers.experimental.Adadelta": "keras/optimizers/experimental/adadelta.html", "tf.keras.optimizers.experimental.Adagrad": "keras/optimizers/experimental/adagrad.html", "tf.keras.optimizers.experimental.Adam": "keras/optimizers/experimental/adam.html", "tf.keras.optimizers.experimental.Adamax": "keras/optimizers/experimental/adamax.html", "tf.keras.optimizers.experimental.AdamW": "keras/optimizers/experimental/adamw.html", "tf.keras.optimizers.experimental.Ftrl": "keras/optimizers/experimental/ftrl.html", "tf.keras.optimizers.experimental.Nadam": "keras/optimizers/experimental/nadam.html", "tf.keras.optimizers.experimental.Optimizer": "keras/optimizers/experimental/optimizer.html", "tf.keras.optimizers.experimental.RMSprop": "keras/optimizers/experimental/rmsprop.html", "tf.keras.optimizers.experimental.SGD": "keras/optimizers/experimental/sgd.html", "tf.keras.optimizers.Ftrl": "keras/optimizers/ftrl.html", "tf.keras.optimizers.get": "keras/optimizers/get.html", "tf.keras.optimizers.legacy": "keras/optimizers/legacy.html", "tf.keras.optimizers.legacy.Adadelta": "keras/optimizers/legacy/adadelta.html", "tf.keras.optimizers.legacy.Adagrad": "keras/optimizers/legacy/adagrad.html", "tf.keras.optimizers.legacy.Adam": "keras/optimizers/legacy/adam.html", "tf.keras.optimizers.legacy.Adamax": "keras/optimizers/legacy/adamax.html", "tf.keras.optimizers.legacy.Ftrl": "keras/optimizers/legacy/ftrl.html", "tf.keras.optimizers.legacy.Nadam": "keras/optimizers/legacy/nadam.html", "tf.keras.optimizers.legacy.Optimizer": "keras/optimizers/legacy/optimizer.html", "tf.keras.optimizers.legacy.RMSprop": "keras/optimizers/legacy/rmsprop.html", "tf.keras.optimizers.legacy.SGD": "keras/optimizers/legacy/sgd.html", "tf.keras.optimizers.Nadam": "keras/optimizers/nadam.html", "tf.keras.optimizers.Optimizer": "keras/optimizers/optimizer.html", "tf.keras.optimizers.RMSprop": "keras/optimizers/rmsprop.html", "tf.keras.optimizers.schedules": "keras/optimizers/schedules.html", "tf.keras.optimizers.schedules.CosineDecay": "keras/optimizers/schedules/cosinedecay.html", "tf.keras.optimizers.schedules.CosineDecayRestarts": "keras/optimizers/schedules/cosinedecayrestarts.html", "tf.keras.optimizers.schedules.deserialize": "keras/optimizers/schedules/deserialize.html", "tf.keras.optimizers.schedules.ExponentialDecay": "keras/optimizers/schedules/exponentialdecay.html", "tf.keras.optimizers.schedules.InverseTimeDecay": "keras/optimizers/schedules/inversetimedecay.html", "tf.keras.optimizers.schedules.LearningRateSchedule": "keras/optimizers/schedules/learningrateschedule.html", "tf.keras.optimizers.schedules.PiecewiseConstantDecay": "keras/optimizers/schedules/piecewiseconstantdecay.html", "tf.keras.optimizers.schedules.PolynomialDecay": "keras/optimizers/schedules/polynomialdecay.html", "tf.keras.optimizers.schedules.serialize": "keras/optimizers/schedules/serialize.html", "tf.keras.optimizers.serialize": "keras/optimizers/serialize.html", "tf.keras.optimizers.SGD": "keras/optimizers/sgd.html", "tf.keras.preprocessing": "keras/preprocessing.html", "tf.keras.preprocessing.image": "keras/preprocessing/image.html", "tf.keras.preprocessing.image.apply_affine_transform": "keras/preprocessing/image/apply_affine_transform.html", "tf.keras.preprocessing.image.apply_brightness_shift": "keras/preprocessing/image/apply_brightness_shift.html", "tf.keras.preprocessing.image.apply_channel_shift": "keras/preprocessing/image/apply_channel_shift.html", "tf.keras.preprocessing.image.DirectoryIterator": "keras/preprocessing/image/directoryiterator.html", "tf.keras.preprocessing.image.ImageDataGenerator": "keras/preprocessing/image/imagedatagenerator.html", "tf.keras.preprocessing.image.Iterator": "keras/preprocessing/image/iterator.html", "tf.keras.preprocessing.image.NumpyArrayIterator": "keras/preprocessing/image/numpyarrayiterator.html", "tf.keras.preprocessing.image.random_brightness": "keras/preprocessing/image/random_brightness.html", "tf.keras.preprocessing.image.random_channel_shift": "keras/preprocessing/image/random_channel_shift.html", "tf.keras.preprocessing.image.random_rotation": "keras/preprocessing/image/random_rotation.html", "tf.keras.preprocessing.image.random_shear": "keras/preprocessing/image/random_shear.html", "tf.keras.preprocessing.image.random_shift": "keras/preprocessing/image/random_shift.html", "tf.keras.preprocessing.image.random_zoom": "keras/preprocessing/image/random_zoom.html", "tf.keras.preprocessing.image.smart_resize": "keras/preprocessing/image/smart_resize.html", "tf.keras.preprocessing.sequence": "keras/preprocessing/sequence.html", "tf.keras.preprocessing.sequence.make_sampling_table": "keras/preprocessing/sequence/make_sampling_table.html", "tf.keras.preprocessing.sequence.skipgrams": "keras/preprocessing/sequence/skipgrams.html", "tf.keras.preprocessing.sequence.TimeseriesGenerator": "keras/preprocessing/sequence/timeseriesgenerator.html", "tf.keras.preprocessing.text": "keras/preprocessing/text.html", "tf.keras.preprocessing.text.hashing_trick": "keras/preprocessing/text/hashing_trick.html", "tf.keras.preprocessing.text.one_hot": "keras/preprocessing/text/one_hot.html", "tf.keras.preprocessing.text.text_to_word_sequence": "keras/preprocessing/text/text_to_word_sequence.html", "tf.keras.preprocessing.text.Tokenizer": "keras/preprocessing/text/tokenizer.html", "tf.keras.preprocessing.text.tokenizer_from_json": "keras/preprocessing/text/tokenizer_from_json.html", "tf.keras.regularizers": "keras/regularizers.html", "tf.keras.regularizers.deserialize": "keras/regularizers/deserialize.html", "tf.keras.regularizers.get": "keras/regularizers/get.html", "tf.keras.regularizers.L1": "keras/regularizers/l1.html", "tf.keras.regularizers.l1_l2": "keras/regularizers/l1_l2.html", "tf.keras.regularizers.L1L2": "keras/regularizers/l1l2.html", "tf.keras.regularizers.L2": "keras/regularizers/l2.html", "tf.keras.regularizers.OrthogonalRegularizer": "keras/regularizers/orthogonalregularizer.html", "tf.keras.regularizers.Regularizer": "keras/regularizers/regularizer.html", "tf.keras.regularizers.serialize": "keras/regularizers/serialize.html", "tf.keras.Sequential": "keras/sequential.html", "tf.keras.utils": "keras/utils.html", "tf.keras.utils.array_to_img": "keras/utils/array_to_img.html", "tf.keras.utils.custom_object_scope": "keras/utils/custom_object_scope.html", "tf.keras.utils.deserialize_keras_object": "keras/utils/deserialize_keras_object.html", "tf.keras.utils.disable_interactive_logging": "keras/utils/disable_interactive_logging.html", "tf.keras.utils.enable_interactive_logging": "keras/utils/enable_interactive_logging.html", "tf.keras.utils.experimental": "keras/utils/experimental.html", "tf.keras.utils.experimental.DatasetCreator": "keras/utils/experimental/datasetcreator.html", "tf.keras.utils.GeneratorEnqueuer": "keras/utils/generatorenqueuer.html", "tf.keras.utils.get_custom_objects": "keras/utils/get_custom_objects.html", "tf.keras.utils.get_file": "keras/utils/get_file.html", "tf.keras.utils.get_registered_name": "keras/utils/get_registered_name.html", "tf.keras.utils.get_registered_object": "keras/utils/get_registered_object.html", "tf.keras.utils.get_source_inputs": "keras/utils/get_source_inputs.html", "tf.keras.utils.image_dataset_from_directory": "keras/utils/image_dataset_from_directory.html", "tf.keras.utils.img_to_array": "keras/utils/img_to_array.html", "tf.keras.utils.is_interactive_logging_enabled": "keras/utils/is_interactive_logging_enabled.html", "tf.keras.utils.load_img": "keras/utils/load_img.html", "tf.keras.utils.model_to_dot": "keras/utils/model_to_dot.html", "tf.keras.utils.normalize": "keras/utils/normalize.html", "tf.keras.utils.OrderedEnqueuer": "keras/utils/orderedenqueuer.html", "tf.keras.utils.pack_x_y_sample_weight": "keras/utils/pack_x_y_sample_weight.html", "tf.keras.utils.pad_sequences": "keras/utils/pad_sequences.html", "tf.keras.utils.plot_model": "keras/utils/plot_model.html", "tf.keras.utils.Progbar": "keras/utils/progbar.html", "tf.keras.utils.register_keras_serializable": "keras/utils/register_keras_serializable.html", "tf.keras.utils.save_img": "keras/utils/save_img.html", "tf.keras.utils.Sequence": "keras/utils/sequence.html", "tf.keras.utils.SequenceEnqueuer": "keras/utils/sequenceenqueuer.html", "tf.keras.utils.serialize_keras_object": "keras/utils/serialize_keras_object.html", "tf.keras.utils.set_random_seed": "keras/utils/set_random_seed.html", "tf.keras.utils.SidecarEvaluator": "keras/utils/sidecarevaluator.html", "tf.keras.utils.text_dataset_from_directory": "keras/utils/text_dataset_from_directory.html", "tf.keras.utils.timeseries_dataset_from_array": "keras/utils/timeseries_dataset_from_array.html", "tf.keras.utils.to_categorical": "keras/utils/to_categorical.html", "tf.keras.utils.unpack_x_y_sample_weight": "keras/utils/unpack_x_y_sample_weight.html", "tf.keras.wrappers": "keras/wrappers.html", "tf.keras.wrappers.scikit_learn": "keras/wrappers/scikit_learn.html", "tf.linalg": "linalg.html", "tf.linalg.adjoint": "linalg/adjoint.html", "tf.linalg.band_part": "linalg/band_part.html", "tf.linalg.banded_triangular_solve": "linalg/banded_triangular_solve.html", "tf.linalg.cholesky": "linalg/cholesky.html", "tf.linalg.cholesky_solve": "linalg/cholesky_solve.html", "tf.linalg.cross": "linalg/cross.html", "tf.linalg.det": "linalg/det.html", "tf.linalg.diag": "linalg/diag.html", "tf.linalg.diag_part": "linalg/diag_part.html", "tf.linalg.eig": "linalg/eig.html", "tf.linalg.eigh": "linalg/eigh.html", "tf.linalg.eigh_tridiagonal": "linalg/eigh_tridiagonal.html", "tf.linalg.eigvals": "linalg/eigvals.html", "tf.linalg.eigvalsh": "linalg/eigvalsh.html", "tf.linalg.experimental": "linalg/experimental.html", "tf.linalg.experimental.conjugate_gradient": "linalg/experimental/conjugate_gradient.html", "tf.linalg.expm": "linalg/expm.html", "tf.linalg.global_norm": "linalg/global_norm.html", "tf.linalg.inv": "linalg/inv.html", "tf.linalg.LinearOperator": "linalg/linearoperator.html", "tf.linalg.LinearOperatorAdjoint": "linalg/linearoperatoradjoint.html", "tf.linalg.LinearOperatorBlockDiag": "linalg/linearoperatorblockdiag.html", "tf.linalg.LinearOperatorBlockLowerTriangular": "linalg/linearoperatorblocklowertriangular.html", "tf.linalg.LinearOperatorCirculant": "linalg/linearoperatorcirculant.html", "tf.linalg.LinearOperatorCirculant2D": "linalg/linearoperatorcirculant2d.html", "tf.linalg.LinearOperatorCirculant3D": "linalg/linearoperatorcirculant3d.html", "tf.linalg.LinearOperatorComposition": "linalg/linearoperatorcomposition.html", "tf.linalg.LinearOperatorDiag": "linalg/linearoperatordiag.html", "tf.linalg.LinearOperatorFullMatrix": "linalg/linearoperatorfullmatrix.html", "tf.linalg.LinearOperatorHouseholder": "linalg/linearoperatorhouseholder.html", "tf.linalg.LinearOperatorIdentity": "linalg/linearoperatoridentity.html", "tf.linalg.LinearOperatorInversion": "linalg/linearoperatorinversion.html", "tf.linalg.LinearOperatorKronecker": "linalg/linearoperatorkronecker.html", "tf.linalg.LinearOperatorLowerTriangular": "linalg/linearoperatorlowertriangular.html", "tf.linalg.LinearOperatorLowRankUpdate": "linalg/linearoperatorlowrankupdate.html", "tf.linalg.LinearOperatorPermutation": "linalg/linearoperatorpermutation.html", "tf.linalg.LinearOperatorScaledIdentity": "linalg/linearoperatorscaledidentity.html", "tf.linalg.LinearOperatorToeplitz": "linalg/linearoperatortoeplitz.html", "tf.linalg.LinearOperatorTridiag": "linalg/linearoperatortridiag.html", "tf.linalg.LinearOperatorZeros": "linalg/linearoperatorzeros.html", "tf.linalg.logdet": "linalg/logdet.html", "tf.linalg.logm": "linalg/logm.html", "tf.linalg.lstsq": "linalg/lstsq.html", "tf.linalg.lu": "linalg/lu.html", "tf.linalg.lu_matrix_inverse": "linalg/lu_matrix_inverse.html", "tf.linalg.lu_reconstruct": "linalg/lu_reconstruct.html", "tf.linalg.lu_solve": "linalg/lu_solve.html", "tf.linalg.matmul": "linalg/matmul.html", "tf.linalg.matrix_rank": "linalg/matrix_rank.html", "tf.linalg.matrix_transpose": "linalg/matrix_transpose.html", "tf.linalg.matvec": "linalg/matvec.html", "tf.linalg.normalize": "linalg/normalize.html", "tf.linalg.pinv": "linalg/pinv.html", "tf.linalg.qr": "linalg/qr.html", "tf.linalg.set_diag": "linalg/set_diag.html", "tf.linalg.slogdet": "linalg/slogdet.html", "tf.linalg.solve": "linalg/solve.html", "tf.linalg.sqrtm": "linalg/sqrtm.html", "tf.linalg.svd": "linalg/svd.html", "tf.linalg.tensor_diag": "linalg/tensor_diag.html", "tf.linalg.tensor_diag_part": "linalg/tensor_diag_part.html", "tf.linalg.trace": "linalg/trace.html", "tf.linalg.triangular_solve": "linalg/triangular_solve.html", "tf.linalg.tridiagonal_matmul": "linalg/tridiagonal_matmul.html", "tf.linalg.tridiagonal_solve": "linalg/tridiagonal_solve.html", "tf.linspace": "linspace.html", "tf.lite": "lite.html", "tf.lite.experimental": "lite/experimental.html", "tf.lite.experimental.Analyzer": "lite/experimental/analyzer.html", "tf.lite.experimental.authoring": "lite/experimental/authoring.html", "tf.lite.experimental.authoring.compatible": "lite/experimental/authoring/compatible.html", "tf.lite.experimental.load_delegate": "lite/experimental/load_delegate.html", "tf.lite.experimental.OpResolverType": "lite/experimental/opresolvertype.html", "tf.lite.experimental.QuantizationDebugger": "lite/experimental/quantizationdebugger.html", "tf.lite.experimental.QuantizationDebugOptions": "lite/experimental/quantizationdebugoptions.html", "tf.lite.Interpreter": "lite/interpreter.html", "tf.lite.OpsSet": "lite/opsset.html", "tf.lite.Optimize": "lite/optimize.html", "tf.lite.RepresentativeDataset": "lite/representativedataset.html", "tf.lite.TargetSpec": "lite/targetspec.html", "tf.lite.TFLiteConverter": "lite/tfliteconverter.html", "tf.load_library": "load_library.html", "tf.load_op_library": "load_op_library.html", "tf.lookup": "lookup.html", "tf.lookup.experimental": "lookup/experimental.html", "tf.lookup.experimental.DenseHashTable": "lookup/experimental/densehashtable.html", "tf.lookup.experimental.MutableHashTable": "lookup/experimental/mutablehashtable.html", "tf.lookup.KeyValueTensorInitializer": "lookup/keyvaluetensorinitializer.html", "tf.lookup.StaticHashTable": "lookup/statichashtable.html", "tf.lookup.StaticVocabularyTable": "lookup/staticvocabularytable.html", "tf.lookup.TextFileIndex": "lookup/textfileindex.html", "tf.lookup.TextFileInitializer": "lookup/textfileinitializer.html", "tf.make_ndarray": "make_ndarray.html", "tf.make_tensor_proto": "make_tensor_proto.html", "tf.map_fn": "map_fn.html", "tf.math": "math.html", "tf.math.abs": "math/abs.html", "tf.math.accumulate_n": "math/accumulate_n.html", "tf.math.acos": "math/acos.html", "tf.math.acosh": "math/acosh.html", "tf.math.add": "math/add.html", "tf.math.add_n": "math/add_n.html", "tf.math.angle": "math/angle.html", "tf.math.argmax": "math/argmax.html", "tf.math.argmin": "math/argmin.html", "tf.math.asin": "math/asin.html", "tf.math.asinh": "math/asinh.html", "tf.math.atan": "math/atan.html", "tf.math.atan2": "math/atan2.html", "tf.math.atanh": "math/atanh.html", "tf.math.bessel_i0": "math/bessel_i0.html", "tf.math.bessel_i0e": "math/bessel_i0e.html", "tf.math.bessel_i1": "math/bessel_i1.html", "tf.math.bessel_i1e": "math/bessel_i1e.html", "tf.math.betainc": "math/betainc.html", "tf.math.bincount": "math/bincount.html", "tf.math.ceil": "math/ceil.html", "tf.math.confusion_matrix": "math/confusion_matrix.html", "tf.math.conj": "math/conj.html", "tf.math.cos": "math/cos.html", "tf.math.cosh": "math/cosh.html", "tf.math.count_nonzero": "math/count_nonzero.html", "tf.math.cumprod": "math/cumprod.html", "tf.math.cumsum": "math/cumsum.html", "tf.math.cumulative_logsumexp": "math/cumulative_logsumexp.html", "tf.math.digamma": "math/digamma.html", "tf.math.divide": "math/divide.html", "tf.math.divide_no_nan": "math/divide_no_nan.html", "tf.math.equal": "math/equal.html", "tf.math.erf": "math/erf.html", "tf.math.erfc": "math/erfc.html", "tf.math.erfcinv": "math/erfcinv.html", "tf.math.erfinv": "math/erfinv.html", "tf.math.exp": "math/exp.html", "tf.math.expm1": "math/expm1.html", "tf.math.floor": "math/floor.html", "tf.math.floordiv": "math/floordiv.html", "tf.math.floormod": "math/floormod.html", "tf.math.greater": "math/greater.html", "tf.math.greater_equal": "math/greater_equal.html", "tf.math.igamma": "math/igamma.html", "tf.math.igammac": "math/igammac.html", "tf.math.imag": "math/imag.html", "tf.math.in_top_k": "math/in_top_k.html", "tf.math.invert_permutation": "math/invert_permutation.html", "tf.math.is_finite": "math/is_finite.html", "tf.math.is_inf": "math/is_inf.html", "tf.math.is_nan": "math/is_nan.html", "tf.math.is_non_decreasing": "math/is_non_decreasing.html", "tf.math.is_strictly_increasing": "math/is_strictly_increasing.html", "tf.math.l2_normalize": "math/l2_normalize.html", "tf.math.lbeta": "math/lbeta.html", "tf.math.less": "math/less.html", "tf.math.less_equal": "math/less_equal.html", "tf.math.lgamma": "math/lgamma.html", "tf.math.log": "math/log.html", "tf.math.log1p": "math/log1p.html", "tf.math.log_sigmoid": "math/log_sigmoid.html", "tf.math.logical_and": "math/logical_and.html", "tf.math.logical_not": "math/logical_not.html", "tf.math.logical_or": "math/logical_or.html", "tf.math.logical_xor": "math/logical_xor.html", "tf.math.maximum": "math/maximum.html", "tf.math.minimum": "math/minimum.html", "tf.math.multiply": "math/multiply.html", "tf.math.multiply_no_nan": "math/multiply_no_nan.html", "tf.math.ndtri": "math/ndtri.html", "tf.math.negative": "math/negative.html", "tf.math.nextafter": "math/nextafter.html", "tf.math.not_equal": "math/not_equal.html", "tf.math.polygamma": "math/polygamma.html", "tf.math.polyval": "math/polyval.html", "tf.math.pow": "math/pow.html", "tf.math.real": "math/real.html", "tf.math.reciprocal": "math/reciprocal.html", "tf.math.reciprocal_no_nan": "math/reciprocal_no_nan.html", "tf.math.reduce_all": "math/reduce_all.html", "tf.math.reduce_any": "math/reduce_any.html", "tf.math.reduce_euclidean_norm": "math/reduce_euclidean_norm.html", "tf.math.reduce_logsumexp": "math/reduce_logsumexp.html", "tf.math.reduce_max": "math/reduce_max.html", "tf.math.reduce_mean": "math/reduce_mean.html", "tf.math.reduce_min": "math/reduce_min.html", "tf.math.reduce_prod": "math/reduce_prod.html", "tf.math.reduce_std": "math/reduce_std.html", "tf.math.reduce_sum": "math/reduce_sum.html", "tf.math.reduce_variance": "math/reduce_variance.html", "tf.math.rint": "math/rint.html", "tf.math.round": "math/round.html", "tf.math.rsqrt": "math/rsqrt.html", "tf.math.scalar_mul": "math/scalar_mul.html", "tf.math.segment_max": "math/segment_max.html", "tf.math.segment_mean": "math/segment_mean.html", "tf.math.segment_min": "math/segment_min.html", "tf.math.segment_prod": "math/segment_prod.html", "tf.math.segment_sum": "math/segment_sum.html", "tf.math.sigmoid": "math/sigmoid.html", "tf.math.sign": "math/sign.html", "tf.math.sin": "math/sin.html", "tf.math.sinh": "math/sinh.html", "tf.math.sobol_sample": "math/sobol_sample.html", "tf.math.softplus": "math/softplus.html", "tf.math.special": "math/special.html", "tf.math.special.bessel_j0": "math/special/bessel_j0.html", "tf.math.special.bessel_j1": "math/special/bessel_j1.html", "tf.math.special.bessel_k0": "math/special/bessel_k0.html", "tf.math.special.bessel_k0e": "math/special/bessel_k0e.html", "tf.math.special.bessel_k1": "math/special/bessel_k1.html", "tf.math.special.bessel_k1e": "math/special/bessel_k1e.html", "tf.math.special.bessel_y0": "math/special/bessel_y0.html", "tf.math.special.bessel_y1": "math/special/bessel_y1.html", "tf.math.special.dawsn": "math/special/dawsn.html", "tf.math.special.expint": "math/special/expint.html", "tf.math.special.fresnel_cos": "math/special/fresnel_cos.html", "tf.math.special.fresnel_sin": "math/special/fresnel_sin.html", "tf.math.special.spence": "math/special/spence.html", "tf.math.sqrt": "math/sqrt.html", "tf.math.square": "math/square.html", "tf.math.squared_difference": "math/squared_difference.html", "tf.math.subtract": "math/subtract.html", "tf.math.tan": "math/tan.html", "tf.math.tanh": "math/tanh.html", "tf.math.top_k": "math/top_k.html", "tf.math.truediv": "math/truediv.html", "tf.math.unsorted_segment_max": "math/unsorted_segment_max.html", "tf.math.unsorted_segment_mean": "math/unsorted_segment_mean.html", "tf.math.unsorted_segment_min": "math/unsorted_segment_min.html", "tf.math.unsorted_segment_prod": "math/unsorted_segment_prod.html", "tf.math.unsorted_segment_sqrt_n": "math/unsorted_segment_sqrt_n.html", "tf.math.unsorted_segment_sum": "math/unsorted_segment_sum.html", "tf.math.xdivy": "math/xdivy.html", "tf.math.xlog1py": "math/xlog1py.html", "tf.math.xlogy": "math/xlogy.html", "tf.math.zero_fraction": "math/zero_fraction.html", "tf.math.zeta": "math/zeta.html", "tf.meshgrid": "meshgrid.html", "tf.mlir": "mlir.html", "tf.mlir.experimental": "mlir/experimental.html", "tf.mlir.experimental.convert_function": "mlir/experimental/convert_function.html", "tf.mlir.experimental.convert_graph_def": "mlir/experimental/convert_graph_def.html", "tf.Module": "module.html", "tf.name_scope": "name_scope.html", "tf.nest": "nest.html", "tf.nest.assert_same_structure": "nest/assert_same_structure.html", "tf.nest.flatten": "nest/flatten.html", "tf.nest.is_nested": "nest/is_nested.html", "tf.nest.map_structure": "nest/map_structure.html", "tf.nest.pack_sequence_as": "nest/pack_sequence_as.html", "tf.nn": "nn.html", "tf.nn.atrous_conv2d": "nn/atrous_conv2d.html", "tf.nn.atrous_conv2d_transpose": "nn/atrous_conv2d_transpose.html", "tf.nn.avg_pool": "nn/avg_pool.html", "tf.nn.avg_pool1d": "nn/avg_pool1d.html", "tf.nn.avg_pool2d": "nn/avg_pool2d.html", "tf.nn.avg_pool3d": "nn/avg_pool3d.html", "tf.nn.batch_norm_with_global_normalization": "nn/batch_norm_with_global_normalization.html", "tf.nn.batch_normalization": "nn/batch_normalization.html", "tf.nn.bias_add": "nn/bias_add.html", "tf.nn.collapse_repeated": "nn/collapse_repeated.html", "tf.nn.compute_accidental_hits": "nn/compute_accidental_hits.html", "tf.nn.compute_average_loss": "nn/compute_average_loss.html", "tf.nn.conv1d": "nn/conv1d.html", "tf.nn.conv1d_transpose": "nn/conv1d_transpose.html", "tf.nn.conv2d": "nn/conv2d.html", "tf.nn.conv2d_transpose": "nn/conv2d_transpose.html", "tf.nn.conv3d": "nn/conv3d.html", "tf.nn.conv3d_transpose": "nn/conv3d_transpose.html", "tf.nn.conv_transpose": "nn/conv_transpose.html", "tf.nn.convolution": "nn/convolution.html", "tf.nn.crelu": "nn/crelu.html", "tf.nn.ctc_beam_search_decoder": "nn/ctc_beam_search_decoder.html", "tf.nn.ctc_greedy_decoder": "nn/ctc_greedy_decoder.html", "tf.nn.ctc_loss": "nn/ctc_loss.html", "tf.nn.ctc_unique_labels": "nn/ctc_unique_labels.html", "tf.nn.depth_to_space": "nn/depth_to_space.html", "tf.nn.depthwise_conv2d": "nn/depthwise_conv2d.html", "tf.nn.depthwise_conv2d_backprop_filter": "nn/depthwise_conv2d_backprop_filter.html", "tf.nn.depthwise_conv2d_backprop_input": "nn/depthwise_conv2d_backprop_input.html", "tf.nn.dilation2d": "nn/dilation2d.html", "tf.nn.dropout": "nn/dropout.html", "tf.nn.elu": "nn/elu.html", "tf.nn.embedding_lookup": "nn/embedding_lookup.html", "tf.nn.embedding_lookup_sparse": "nn/embedding_lookup_sparse.html", "tf.nn.erosion2d": "nn/erosion2d.html", "tf.nn.experimental": "nn/experimental.html", "tf.nn.experimental.stateless_dropout": "nn/experimental/stateless_dropout.html", "tf.nn.fractional_avg_pool": "nn/fractional_avg_pool.html", "tf.nn.fractional_max_pool": "nn/fractional_max_pool.html", "tf.nn.gelu": "nn/gelu.html", "tf.nn.isotonic_regression": "nn/isotonic_regression.html", "tf.nn.l2_loss": "nn/l2_loss.html", "tf.nn.leaky_relu": "nn/leaky_relu.html", "tf.nn.local_response_normalization": "nn/local_response_normalization.html", "tf.nn.log_poisson_loss": "nn/log_poisson_loss.html", "tf.nn.log_softmax": "nn/log_softmax.html", "tf.nn.max_pool": "nn/max_pool.html", "tf.nn.max_pool1d": "nn/max_pool1d.html", "tf.nn.max_pool2d": "nn/max_pool2d.html", "tf.nn.max_pool3d": "nn/max_pool3d.html", "tf.nn.max_pool_with_argmax": "nn/max_pool_with_argmax.html", "tf.nn.moments": "nn/moments.html", "tf.nn.nce_loss": "nn/nce_loss.html", "tf.nn.normalize_moments": "nn/normalize_moments.html", "tf.nn.pool": "nn/pool.html", "tf.nn.relu": "nn/relu.html", "tf.nn.relu6": "nn/relu6.html", "tf.nn.RNNCellDeviceWrapper": "nn/rnncelldevicewrapper.html", "tf.nn.RNNCellDropoutWrapper": "nn/rnncelldropoutwrapper.html", "tf.nn.RNNCellResidualWrapper": "nn/rnncellresidualwrapper.html", "tf.nn.safe_embedding_lookup_sparse": "nn/safe_embedding_lookup_sparse.html", "tf.nn.sampled_softmax_loss": "nn/sampled_softmax_loss.html", "tf.nn.scale_regularization_loss": "nn/scale_regularization_loss.html", "tf.nn.selu": "nn/selu.html", "tf.nn.separable_conv2d": "nn/separable_conv2d.html", "tf.nn.sigmoid_cross_entropy_with_logits": "nn/sigmoid_cross_entropy_with_logits.html", "tf.nn.silu": "nn/silu.html", "tf.nn.softmax": "nn/softmax.html", "tf.nn.softmax_cross_entropy_with_logits": "nn/softmax_cross_entropy_with_logits.html", "tf.nn.softsign": "nn/softsign.html", "tf.nn.space_to_depth": "nn/space_to_depth.html", "tf.nn.sparse_softmax_cross_entropy_with_logits": "nn/sparse_softmax_cross_entropy_with_logits.html", "tf.nn.sufficient_statistics": "nn/sufficient_statistics.html", "tf.nn.weighted_cross_entropy_with_logits": "nn/weighted_cross_entropy_with_logits.html", "tf.nn.weighted_moments": "nn/weighted_moments.html", "tf.nn.with_space_to_batch": "nn/with_space_to_batch.html", "tf.no_gradient": "no_gradient.html", "tf.no_op": "no_op.html", "tf.nondifferentiable_batch_function": "nondifferentiable_batch_function.html", "tf.norm": "norm.html", "tf.numpy_function": "numpy_function.html", "tf.one_hot": "one_hot.html", "tf.ones": "ones.html", "tf.ones_initializer": "ones_initializer.html", "tf.ones_like": "ones_like.html", "tf.Operation": "operation.html", "tf.OptionalSpec": "optionalspec.html", "tf.pad": "pad.html", "tf.parallel_stack": "parallel_stack.html", "tf.print": "print.html", "tf.profiler": "profiler.html", "tf.profiler.experimental": "profiler/experimental.html", "tf.profiler.experimental.client": "profiler/experimental/client.html", "tf.profiler.experimental.client.monitor": "profiler/experimental/client/monitor.html", "tf.profiler.experimental.client.trace": "profiler/experimental/client/trace.html", "tf.profiler.experimental.Profile": "profiler/experimental/profile.html", "tf.profiler.experimental.ProfilerOptions": "profiler/experimental/profileroptions.html", "tf.profiler.experimental.server": "profiler/experimental/server.html", "tf.profiler.experimental.server.start": "profiler/experimental/server/start.html", "tf.profiler.experimental.start": "profiler/experimental/start.html", "tf.profiler.experimental.stop": "profiler/experimental/stop.html", "tf.profiler.experimental.Trace": "profiler/experimental/trace.html", "tf.py_function": "py_function.html", "tf.quantization": "quantization.html", "tf.quantization.dequantize": "quantization/dequantize.html", "tf.quantization.fake_quant_with_min_max_args": "quantization/fake_quant_with_min_max_args.html", "tf.quantization.fake_quant_with_min_max_args_gradient": "quantization/fake_quant_with_min_max_args_gradient.html", "tf.quantization.fake_quant_with_min_max_vars": "quantization/fake_quant_with_min_max_vars.html", "tf.quantization.fake_quant_with_min_max_vars_gradient": "quantization/fake_quant_with_min_max_vars_gradient.html", "tf.quantization.fake_quant_with_min_max_vars_per_channel": "quantization/fake_quant_with_min_max_vars_per_channel.html", "tf.quantization.fake_quant_with_min_max_vars_per_channel_gradient": "quantization/fake_quant_with_min_max_vars_per_channel_gradient.html", "tf.quantization.quantize": "quantization/quantize.html", "tf.quantization.quantize_and_dequantize": "quantization/quantize_and_dequantize.html", "tf.quantization.quantize_and_dequantize_v2": "quantization/quantize_and_dequantize_v2.html", "tf.quantization.quantized_concat": "quantization/quantized_concat.html", "tf.queue": "queue.html", "tf.queue.FIFOQueue": "queue/fifoqueue.html", "tf.queue.PaddingFIFOQueue": "queue/paddingfifoqueue.html", "tf.queue.PriorityQueue": "queue/priorityqueue.html", "tf.queue.QueueBase": "queue/queuebase.html", "tf.queue.RandomShuffleQueue": "queue/randomshufflequeue.html", "tf.ragged": "ragged.html", "tf.ragged.boolean_mask": "ragged/boolean_mask.html", "tf.ragged.constant": "ragged/constant.html", "tf.ragged.cross": "ragged/cross.html", "tf.ragged.cross_hashed": "ragged/cross_hashed.html", "tf.ragged.map_flat_values": "ragged/map_flat_values.html", "tf.ragged.range": "ragged/range.html", "tf.ragged.row_splits_to_segment_ids": "ragged/row_splits_to_segment_ids.html", "tf.ragged.segment_ids_to_row_splits": "ragged/segment_ids_to_row_splits.html", "tf.ragged.stack": "ragged/stack.html", "tf.ragged.stack_dynamic_partitions": "ragged/stack_dynamic_partitions.html", "tf.RaggedTensor": "raggedtensor.html", "tf.RaggedTensorSpec": "raggedtensorspec.html", "tf.random": "random.html", "tf.random.Algorithm": "random/algorithm.html", "tf.random.all_candidate_sampler": "random/all_candidate_sampler.html", "tf.random.categorical": "random/categorical.html", "tf.random.create_rng_state": "random/create_rng_state.html", "tf.random.experimental": "random/experimental.html", "tf.random.experimental.index_shuffle": "random/experimental/index_shuffle.html", "tf.random.experimental.stateless_fold_in": "random/experimental/stateless_fold_in.html", "tf.random.experimental.stateless_split": "random/experimental/stateless_split.html", "tf.random.fixed_unigram_candidate_sampler": "random/fixed_unigram_candidate_sampler.html", "tf.random.gamma": "random/gamma.html", "tf.random.Generator": "random/generator.html", "tf.random.get_global_generator": "random/get_global_generator.html", "tf.random.learned_unigram_candidate_sampler": "random/learned_unigram_candidate_sampler.html", "tf.random.log_uniform_candidate_sampler": "random/log_uniform_candidate_sampler.html", "tf.random.normal": "random/normal.html", "tf.random.poisson": "random/poisson.html", "tf.random.set_global_generator": "random/set_global_generator.html", "tf.random.set_seed": "random/set_seed.html", "tf.random.shuffle": "random/shuffle.html", "tf.random.stateless_binomial": "random/stateless_binomial.html", "tf.random.stateless_categorical": "random/stateless_categorical.html", "tf.random.stateless_gamma": "random/stateless_gamma.html", "tf.random.stateless_normal": "random/stateless_normal.html", "tf.random.stateless_parameterized_truncated_normal": "random/stateless_parameterized_truncated_normal.html", "tf.random.stateless_poisson": "random/stateless_poisson.html", "tf.random.stateless_truncated_normal": "random/stateless_truncated_normal.html", "tf.random.stateless_uniform": "random/stateless_uniform.html", "tf.random.truncated_normal": "random/truncated_normal.html", "tf.random.uniform": "random/uniform.html", "tf.random.uniform_candidate_sampler": "random/uniform_candidate_sampler.html", "tf.random_index_shuffle": "random_index_shuffle.html", "tf.random_normal_initializer": "random_normal_initializer.html", "tf.random_uniform_initializer": "random_uniform_initializer.html", "tf.range": "range.html", "tf.rank": "rank.html", "tf.raw_ops": "raw_ops.html", "tf.raw_ops.Abort": "raw_ops/abort.html", "tf.raw_ops.Abs": "raw_ops/abs.html", "tf.raw_ops.AccumulateNV2": "raw_ops/accumulatenv2.html", "tf.raw_ops.AccumulatorApplyGradient": "raw_ops/accumulatorapplygradient.html", "tf.raw_ops.AccumulatorNumAccumulated": "raw_ops/accumulatornumaccumulated.html", "tf.raw_ops.AccumulatorSetGlobalStep": "raw_ops/accumulatorsetglobalstep.html", "tf.raw_ops.AccumulatorTakeGradient": "raw_ops/accumulatortakegradient.html", "tf.raw_ops.Acos": "raw_ops/acos.html", "tf.raw_ops.Acosh": "raw_ops/acosh.html", "tf.raw_ops.Add": "raw_ops/add.html", "tf.raw_ops.AddManySparseToTensorsMap": "raw_ops/addmanysparsetotensorsmap.html", "tf.raw_ops.AddN": "raw_ops/addn.html", "tf.raw_ops.AddSparseToTensorsMap": "raw_ops/addsparsetotensorsmap.html", "tf.raw_ops.AddV2": "raw_ops/addv2.html", "tf.raw_ops.AdjustContrast": "raw_ops/adjustcontrast.html", "tf.raw_ops.AdjustContrastv2": "raw_ops/adjustcontrastv2.html", "tf.raw_ops.AdjustHue": "raw_ops/adjusthue.html", "tf.raw_ops.AdjustSaturation": "raw_ops/adjustsaturation.html", "tf.raw_ops.All": "raw_ops/all.html", "tf.raw_ops.AllCandidateSampler": "raw_ops/allcandidatesampler.html", "tf.raw_ops.AllToAll": "raw_ops/alltoall.html", "tf.raw_ops.Angle": "raw_ops/angle.html", "tf.raw_ops.AnonymousHashTable": "raw_ops/anonymoushashtable.html", "tf.raw_ops.AnonymousIterator": "raw_ops/anonymousiterator.html", "tf.raw_ops.AnonymousIteratorV2": "raw_ops/anonymousiteratorv2.html", "tf.raw_ops.AnonymousIteratorV3": "raw_ops/anonymousiteratorv3.html", "tf.raw_ops.AnonymousMemoryCache": "raw_ops/anonymousmemorycache.html", "tf.raw_ops.AnonymousMultiDeviceIterator": "raw_ops/anonymousmultideviceiterator.html", "tf.raw_ops.AnonymousMultiDeviceIteratorV3": "raw_ops/anonymousmultideviceiteratorv3.html", "tf.raw_ops.AnonymousMutableDenseHashTable": "raw_ops/anonymousmutabledensehashtable.html", "tf.raw_ops.AnonymousMutableHashTable": "raw_ops/anonymousmutablehashtable.html", "tf.raw_ops.AnonymousMutableHashTableOfTensors": "raw_ops/anonymousmutablehashtableoftensors.html", "tf.raw_ops.AnonymousRandomSeedGenerator": "raw_ops/anonymousrandomseedgenerator.html", "tf.raw_ops.AnonymousSeedGenerator": "raw_ops/anonymousseedgenerator.html", "tf.raw_ops.Any": "raw_ops/any.html", "tf.raw_ops.ApplyAdadelta": "raw_ops/applyadadelta.html", "tf.raw_ops.ApplyAdagrad": "raw_ops/applyadagrad.html", "tf.raw_ops.ApplyAdagradDA": "raw_ops/applyadagradda.html", "tf.raw_ops.ApplyAdagradV2": "raw_ops/applyadagradv2.html", "tf.raw_ops.ApplyAdam": "raw_ops/applyadam.html", "tf.raw_ops.ApplyAdaMax": "raw_ops/applyadamax.html", "tf.raw_ops.ApplyAddSign": "raw_ops/applyaddsign.html", "tf.raw_ops.ApplyCenteredRMSProp": "raw_ops/applycenteredrmsprop.html", "tf.raw_ops.ApplyFtrl": "raw_ops/applyftrl.html", "tf.raw_ops.ApplyFtrlV2": "raw_ops/applyftrlv2.html", "tf.raw_ops.ApplyGradientDescent": "raw_ops/applygradientdescent.html", "tf.raw_ops.ApplyMomentum": "raw_ops/applymomentum.html", "tf.raw_ops.ApplyPowerSign": "raw_ops/applypowersign.html", "tf.raw_ops.ApplyProximalAdagrad": "raw_ops/applyproximaladagrad.html", "tf.raw_ops.ApplyProximalGradientDescent": "raw_ops/applyproximalgradientdescent.html", "tf.raw_ops.ApplyRMSProp": "raw_ops/applyrmsprop.html", "tf.raw_ops.ApproximateEqual": "raw_ops/approximateequal.html", "tf.raw_ops.ArgMax": "raw_ops/argmax.html", "tf.raw_ops.ArgMin": "raw_ops/argmin.html", "tf.raw_ops.Asin": "raw_ops/asin.html", "tf.raw_ops.Asinh": "raw_ops/asinh.html", "tf.raw_ops.Assert": "raw_ops/assert.html", "tf.raw_ops.AssertCardinalityDataset": "raw_ops/assertcardinalitydataset.html", "tf.raw_ops.AssertNextDataset": "raw_ops/assertnextdataset.html", "tf.raw_ops.AssertPrevDataset": "raw_ops/assertprevdataset.html", "tf.raw_ops.Assign": "raw_ops/assign.html", "tf.raw_ops.AssignAdd": "raw_ops/assignadd.html", "tf.raw_ops.AssignAddVariableOp": "raw_ops/assignaddvariableop.html", "tf.raw_ops.AssignSub": "raw_ops/assignsub.html", "tf.raw_ops.AssignSubVariableOp": "raw_ops/assignsubvariableop.html", "tf.raw_ops.AssignVariableOp": "raw_ops/assignvariableop.html", "tf.raw_ops.AssignVariableXlaConcatND": "raw_ops/assignvariablexlaconcatnd.html", "tf.raw_ops.AsString": "raw_ops/asstring.html", "tf.raw_ops.Atan": "raw_ops/atan.html", "tf.raw_ops.Atan2": "raw_ops/atan2.html", "tf.raw_ops.Atanh": "raw_ops/atanh.html", "tf.raw_ops.AudioSpectrogram": "raw_ops/audiospectrogram.html", "tf.raw_ops.AudioSummary": "raw_ops/audiosummary.html", "tf.raw_ops.AudioSummaryV2": "raw_ops/audiosummaryv2.html", "tf.raw_ops.AutoShardDataset": "raw_ops/autosharddataset.html", "tf.raw_ops.AvgPool": "raw_ops/avgpool.html", "tf.raw_ops.AvgPool3D": "raw_ops/avgpool3d.html", "tf.raw_ops.AvgPool3DGrad": "raw_ops/avgpool3dgrad.html", "tf.raw_ops.AvgPoolGrad": "raw_ops/avgpoolgrad.html", "tf.raw_ops.BandedTriangularSolve": "raw_ops/bandedtriangularsolve.html", "tf.raw_ops.Barrier": "raw_ops/barrier.html", "tf.raw_ops.BarrierClose": "raw_ops/barrierclose.html", "tf.raw_ops.BarrierIncompleteSize": "raw_ops/barrierincompletesize.html", "tf.raw_ops.BarrierInsertMany": "raw_ops/barrierinsertmany.html", "tf.raw_ops.BarrierReadySize": "raw_ops/barrierreadysize.html", "tf.raw_ops.BarrierTakeMany": "raw_ops/barriertakemany.html", "tf.raw_ops.Batch": "raw_ops/batch.html", "tf.raw_ops.BatchCholesky": "raw_ops/batchcholesky.html", "tf.raw_ops.BatchCholeskyGrad": "raw_ops/batchcholeskygrad.html", "tf.raw_ops.BatchDataset": "raw_ops/batchdataset.html", "tf.raw_ops.BatchDatasetV2": "raw_ops/batchdatasetv2.html", "tf.raw_ops.BatchFFT": "raw_ops/batchfft.html", "tf.raw_ops.BatchFFT2D": "raw_ops/batchfft2d.html", "tf.raw_ops.BatchFFT3D": "raw_ops/batchfft3d.html", "tf.raw_ops.BatchFunction": "raw_ops/batchfunction.html", "tf.raw_ops.BatchIFFT": "raw_ops/batchifft.html", "tf.raw_ops.BatchIFFT2D": "raw_ops/batchifft2d.html", "tf.raw_ops.BatchIFFT3D": "raw_ops/batchifft3d.html", "tf.raw_ops.BatchMatMul": "raw_ops/batchmatmul.html", "tf.raw_ops.BatchMatMulV2": "raw_ops/batchmatmulv2.html", "tf.raw_ops.BatchMatMulV3": "raw_ops/batchmatmulv3.html", "tf.raw_ops.BatchMatrixBandPart": "raw_ops/batchmatrixbandpart.html", "tf.raw_ops.BatchMatrixDeterminant": "raw_ops/batchmatrixdeterminant.html", "tf.raw_ops.BatchMatrixDiag": "raw_ops/batchmatrixdiag.html", "tf.raw_ops.BatchMatrixDiagPart": "raw_ops/batchmatrixdiagpart.html", "tf.raw_ops.BatchMatrixInverse": "raw_ops/batchmatrixinverse.html", "tf.raw_ops.BatchMatrixSetDiag": "raw_ops/batchmatrixsetdiag.html", "tf.raw_ops.BatchMatrixSolve": "raw_ops/batchmatrixsolve.html", "tf.raw_ops.BatchMatrixSolveLs": "raw_ops/batchmatrixsolvels.html", "tf.raw_ops.BatchMatrixTriangularSolve": "raw_ops/batchmatrixtriangularsolve.html", "tf.raw_ops.BatchNormWithGlobalNormalization": "raw_ops/batchnormwithglobalnormalization.html", "tf.raw_ops.BatchNormWithGlobalNormalizationGrad": "raw_ops/batchnormwithglobalnormalizationgrad.html", "tf.raw_ops.BatchSelfAdjointEig": "raw_ops/batchselfadjointeig.html", "tf.raw_ops.BatchSelfAdjointEigV2": "raw_ops/batchselfadjointeigv2.html", "tf.raw_ops.BatchSvd": "raw_ops/batchsvd.html", "tf.raw_ops.BatchToSpace": "raw_ops/batchtospace.html", "tf.raw_ops.BatchToSpaceND": "raw_ops/batchtospacend.html", "tf.raw_ops.BesselI0": "raw_ops/besseli0.html", "tf.raw_ops.BesselI0e": "raw_ops/besseli0e.html", "tf.raw_ops.BesselI1": "raw_ops/besseli1.html", "tf.raw_ops.BesselI1e": "raw_ops/besseli1e.html", "tf.raw_ops.BesselJ0": "raw_ops/besselj0.html", "tf.raw_ops.BesselJ1": "raw_ops/besselj1.html", "tf.raw_ops.BesselK0": "raw_ops/besselk0.html", "tf.raw_ops.BesselK0e": "raw_ops/besselk0e.html", "tf.raw_ops.BesselK1": "raw_ops/besselk1.html", "tf.raw_ops.BesselK1e": "raw_ops/besselk1e.html", "tf.raw_ops.BesselY0": "raw_ops/bessely0.html", "tf.raw_ops.BesselY1": "raw_ops/bessely1.html", "tf.raw_ops.Betainc": "raw_ops/betainc.html", "tf.raw_ops.BiasAdd": "raw_ops/biasadd.html", "tf.raw_ops.BiasAddGrad": "raw_ops/biasaddgrad.html", "tf.raw_ops.BiasAddV1": "raw_ops/biasaddv1.html", "tf.raw_ops.Bincount": "raw_ops/bincount.html", "tf.raw_ops.Bitcast": "raw_ops/bitcast.html", "tf.raw_ops.BitwiseAnd": "raw_ops/bitwiseand.html", "tf.raw_ops.BitwiseOr": "raw_ops/bitwiseor.html", "tf.raw_ops.BitwiseXor": "raw_ops/bitwisexor.html", "tf.raw_ops.BlockLSTM": "raw_ops/blocklstm.html", "tf.raw_ops.BlockLSTMGrad": "raw_ops/blocklstmgrad.html", "tf.raw_ops.BlockLSTMGradV2": "raw_ops/blocklstmgradv2.html", "tf.raw_ops.BlockLSTMV2": "raw_ops/blocklstmv2.html", "tf.raw_ops.BoostedTreesAggregateStats": "raw_ops/boostedtreesaggregatestats.html", "tf.raw_ops.BoostedTreesBucketize": "raw_ops/boostedtreesbucketize.html", "tf.raw_ops.BoostedTreesCalculateBestFeatureSplit": "raw_ops/boostedtreescalculatebestfeaturesplit.html", "tf.raw_ops.BoostedTreesCalculateBestFeatureSplitV2": "raw_ops/boostedtreescalculatebestfeaturesplitv2.html", "tf.raw_ops.BoostedTreesCalculateBestGainsPerFeature": "raw_ops/boostedtreescalculatebestgainsperfeature.html", "tf.raw_ops.BoostedTreesCenterBias": "raw_ops/boostedtreescenterbias.html", "tf.raw_ops.BoostedTreesCreateEnsemble": "raw_ops/boostedtreescreateensemble.html", "tf.raw_ops.BoostedTreesCreateQuantileStreamResource": "raw_ops/boostedtreescreatequantilestreamresource.html", "tf.raw_ops.BoostedTreesDeserializeEnsemble": "raw_ops/boostedtreesdeserializeensemble.html", "tf.raw_ops.BoostedTreesEnsembleResourceHandleOp": "raw_ops/boostedtreesensembleresourcehandleop.html", "tf.raw_ops.BoostedTreesExampleDebugOutputs": "raw_ops/boostedtreesexampledebugoutputs.html", "tf.raw_ops.BoostedTreesFlushQuantileSummaries": "raw_ops/boostedtreesflushquantilesummaries.html", "tf.raw_ops.BoostedTreesGetEnsembleStates": "raw_ops/boostedtreesgetensemblestates.html", "tf.raw_ops.BoostedTreesMakeQuantileSummaries": "raw_ops/boostedtreesmakequantilesummaries.html", "tf.raw_ops.BoostedTreesMakeStatsSummary": "raw_ops/boostedtreesmakestatssummary.html", "tf.raw_ops.BoostedTreesPredict": "raw_ops/boostedtreespredict.html", "tf.raw_ops.BoostedTreesQuantileStreamResourceAddSummaries": "raw_ops/boostedtreesquantilestreamresourceaddsummaries.html", "tf.raw_ops.BoostedTreesQuantileStreamResourceDeserialize": "raw_ops/boostedtreesquantilestreamresourcedeserialize.html", "tf.raw_ops.BoostedTreesQuantileStreamResourceFlush": "raw_ops/boostedtreesquantilestreamresourceflush.html", "tf.raw_ops.BoostedTreesQuantileStreamResourceGetBucketBoundaries": "raw_ops/boostedtreesquantilestreamresourcegetbucketboundaries.html", "tf.raw_ops.BoostedTreesQuantileStreamResourceHandleOp": "raw_ops/boostedtreesquantilestreamresourcehandleop.html", "tf.raw_ops.BoostedTreesSerializeEnsemble": "raw_ops/boostedtreesserializeensemble.html", "tf.raw_ops.BoostedTreesSparseAggregateStats": "raw_ops/boostedtreessparseaggregatestats.html", "tf.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit": "raw_ops/boostedtreessparsecalculatebestfeaturesplit.html", "tf.raw_ops.BoostedTreesTrainingPredict": "raw_ops/boostedtreestrainingpredict.html", "tf.raw_ops.BoostedTreesUpdateEnsemble": "raw_ops/boostedtreesupdateensemble.html", "tf.raw_ops.BoostedTreesUpdateEnsembleV2": "raw_ops/boostedtreesupdateensemblev2.html", "tf.raw_ops.BroadcastArgs": "raw_ops/broadcastargs.html", "tf.raw_ops.BroadcastGradientArgs": "raw_ops/broadcastgradientargs.html", "tf.raw_ops.BroadcastTo": "raw_ops/broadcastto.html", "tf.raw_ops.Bucketize": "raw_ops/bucketize.html", "tf.raw_ops.BytesProducedStatsDataset": "raw_ops/bytesproducedstatsdataset.html", "tf.raw_ops.CacheDataset": "raw_ops/cachedataset.html", "tf.raw_ops.CacheDatasetV2": "raw_ops/cachedatasetv2.html", "tf.raw_ops.Case": "raw_ops/case.html", "tf.raw_ops.Cast": "raw_ops/cast.html", "tf.raw_ops.Ceil": "raw_ops/ceil.html", "tf.raw_ops.CheckNumerics": "raw_ops/checknumerics.html", "tf.raw_ops.CheckNumericsV2": "raw_ops/checknumericsv2.html", "tf.raw_ops.Cholesky": "raw_ops/cholesky.html", "tf.raw_ops.CholeskyGrad": "raw_ops/choleskygrad.html", "tf.raw_ops.ChooseFastestBranchDataset": "raw_ops/choosefastestbranchdataset.html", "tf.raw_ops.ChooseFastestDataset": "raw_ops/choosefastestdataset.html", "tf.raw_ops.ClipByValue": "raw_ops/clipbyvalue.html", "tf.raw_ops.CloseSummaryWriter": "raw_ops/closesummarywriter.html", "tf.raw_ops.CollectiveAllToAllV3": "raw_ops/collectivealltoallv3.html", "tf.raw_ops.CollectiveAssignGroupV2": "raw_ops/collectiveassigngroupv2.html", "tf.raw_ops.CollectiveBcastRecv": "raw_ops/collectivebcastrecv.html", "tf.raw_ops.CollectiveBcastRecvV2": "raw_ops/collectivebcastrecvv2.html", "tf.raw_ops.CollectiveBcastSend": "raw_ops/collectivebcastsend.html", "tf.raw_ops.CollectiveBcastSendV2": "raw_ops/collectivebcastsendv2.html", "tf.raw_ops.CollectiveGather": "raw_ops/collectivegather.html", "tf.raw_ops.CollectiveGatherV2": "raw_ops/collectivegatherv2.html", "tf.raw_ops.CollectiveInitializeCommunicator": "raw_ops/collectiveinitializecommunicator.html", "tf.raw_ops.CollectivePermute": "raw_ops/collectivepermute.html", "tf.raw_ops.CollectiveReduce": "raw_ops/collectivereduce.html", "tf.raw_ops.CollectiveReduceV2": "raw_ops/collectivereducev2.html", "tf.raw_ops.CollectiveReduceV3": "raw_ops/collectivereducev3.html", "tf.raw_ops.CombinedNonMaxSuppression": "raw_ops/combinednonmaxsuppression.html", "tf.raw_ops.Complex": "raw_ops/complex.html", "tf.raw_ops.ComplexAbs": "raw_ops/complexabs.html", "tf.raw_ops.CompositeTensorVariantFromComponents": "raw_ops/compositetensorvariantfromcomponents.html", "tf.raw_ops.CompositeTensorVariantToComponents": "raw_ops/compositetensorvarianttocomponents.html", "tf.raw_ops.CompressElement": "raw_ops/compresselement.html", "tf.raw_ops.ComputeAccidentalHits": "raw_ops/computeaccidentalhits.html", "tf.raw_ops.ComputeBatchSize": "raw_ops/computebatchsize.html", "tf.raw_ops.Concat": "raw_ops/concat.html", "tf.raw_ops.ConcatenateDataset": "raw_ops/concatenatedataset.html", "tf.raw_ops.ConcatOffset": "raw_ops/concatoffset.html", "tf.raw_ops.ConcatV2": "raw_ops/concatv2.html", "tf.raw_ops.ConditionalAccumulator": "raw_ops/conditionalaccumulator.html", "tf.raw_ops.ConfigureDistributedTPU": "raw_ops/configuredistributedtpu.html", "tf.raw_ops.ConfigureTPUEmbedding": "raw_ops/configuretpuembedding.html", "tf.raw_ops.Conj": "raw_ops/conj.html", "tf.raw_ops.ConjugateTranspose": "raw_ops/conjugatetranspose.html", "tf.raw_ops.Const": "raw_ops/const.html", "tf.raw_ops.ConsumeMutexLock": "raw_ops/consumemutexlock.html", "tf.raw_ops.ControlTrigger": "raw_ops/controltrigger.html", "tf.raw_ops.Conv2D": "raw_ops/conv2d.html", "tf.raw_ops.Conv2DBackpropFilter": "raw_ops/conv2dbackpropfilter.html", "tf.raw_ops.Conv2DBackpropInput": "raw_ops/conv2dbackpropinput.html", "tf.raw_ops.Conv3D": "raw_ops/conv3d.html", "tf.raw_ops.Conv3DBackpropFilter": "raw_ops/conv3dbackpropfilter.html", "tf.raw_ops.Conv3DBackpropFilterV2": "raw_ops/conv3dbackpropfilterv2.html", "tf.raw_ops.Conv3DBackpropInput": "raw_ops/conv3dbackpropinput.html", "tf.raw_ops.Conv3DBackpropInputV2": "raw_ops/conv3dbackpropinputv2.html", "tf.raw_ops.Copy": "raw_ops/copy.html", "tf.raw_ops.CopyHost": "raw_ops/copyhost.html", "tf.raw_ops.Cos": "raw_ops/cos.html", "tf.raw_ops.Cosh": "raw_ops/cosh.html", "tf.raw_ops.CountUpTo": "raw_ops/countupto.html", "tf.raw_ops.CreateSummaryDbWriter": "raw_ops/createsummarydbwriter.html", "tf.raw_ops.CreateSummaryFileWriter": "raw_ops/createsummaryfilewriter.html", "tf.raw_ops.CropAndResize": "raw_ops/cropandresize.html", "tf.raw_ops.CropAndResizeGradBoxes": "raw_ops/cropandresizegradboxes.html", "tf.raw_ops.CropAndResizeGradImage": "raw_ops/cropandresizegradimage.html", "tf.raw_ops.Cross": "raw_ops/cross.html", "tf.raw_ops.CrossReplicaSum": "raw_ops/crossreplicasum.html", "tf.raw_ops.CSRSparseMatrixComponents": "raw_ops/csrsparsematrixcomponents.html", "tf.raw_ops.CSRSparseMatrixToDense": "raw_ops/csrsparsematrixtodense.html", "tf.raw_ops.CSRSparseMatrixToSparseTensor": "raw_ops/csrsparsematrixtosparsetensor.html", "tf.raw_ops.CSVDataset": "raw_ops/csvdataset.html", "tf.raw_ops.CSVDatasetV2": "raw_ops/csvdatasetv2.html", "tf.raw_ops.CTCBeamSearchDecoder": "raw_ops/ctcbeamsearchdecoder.html", "tf.raw_ops.CTCGreedyDecoder": "raw_ops/ctcgreedydecoder.html", "tf.raw_ops.CTCLoss": "raw_ops/ctcloss.html", "tf.raw_ops.CTCLossV2": "raw_ops/ctclossv2.html", "tf.raw_ops.CudnnRNN": "raw_ops/cudnnrnn.html", "tf.raw_ops.CudnnRNNBackprop": "raw_ops/cudnnrnnbackprop.html", "tf.raw_ops.CudnnRNNBackpropV2": "raw_ops/cudnnrnnbackpropv2.html", "tf.raw_ops.CudnnRNNBackpropV3": "raw_ops/cudnnrnnbackpropv3.html", "tf.raw_ops.CudnnRNNCanonicalToParams": "raw_ops/cudnnrnncanonicaltoparams.html", "tf.raw_ops.CudnnRNNCanonicalToParamsV2": "raw_ops/cudnnrnncanonicaltoparamsv2.html", "tf.raw_ops.CudnnRNNParamsSize": "raw_ops/cudnnrnnparamssize.html", "tf.raw_ops.CudnnRNNParamsToCanonical": "raw_ops/cudnnrnnparamstocanonical.html", "tf.raw_ops.CudnnRNNParamsToCanonicalV2": "raw_ops/cudnnrnnparamstocanonicalv2.html", "tf.raw_ops.CudnnRNNV2": "raw_ops/cudnnrnnv2.html", "tf.raw_ops.CudnnRNNV3": "raw_ops/cudnnrnnv3.html", "tf.raw_ops.Cumprod": "raw_ops/cumprod.html", "tf.raw_ops.Cumsum": "raw_ops/cumsum.html", "tf.raw_ops.CumulativeLogsumexp": "raw_ops/cumulativelogsumexp.html", "tf.raw_ops.DataFormatDimMap": "raw_ops/dataformatdimmap.html", "tf.raw_ops.DataFormatVecPermute": "raw_ops/dataformatvecpermute.html", "tf.raw_ops.DataServiceDataset": "raw_ops/dataservicedataset.html", "tf.raw_ops.DataServiceDatasetV2": "raw_ops/dataservicedatasetv2.html", "tf.raw_ops.DataServiceDatasetV3": "raw_ops/dataservicedatasetv3.html", "tf.raw_ops.DatasetCardinality": "raw_ops/datasetcardinality.html", "tf.raw_ops.DatasetFromGraph": "raw_ops/datasetfromgraph.html", "tf.raw_ops.DatasetToGraph": "raw_ops/datasettograph.html", "tf.raw_ops.DatasetToGraphV2": "raw_ops/datasettographv2.html", "tf.raw_ops.DatasetToSingleElement": "raw_ops/datasettosingleelement.html", "tf.raw_ops.DatasetToTFRecord": "raw_ops/datasettotfrecord.html", "tf.raw_ops.Dawsn": "raw_ops/dawsn.html", "tf.raw_ops.DebugGradientIdentity": "raw_ops/debuggradientidentity.html", "tf.raw_ops.DebugGradientRefIdentity": "raw_ops/debuggradientrefidentity.html", "tf.raw_ops.DebugIdentity": "raw_ops/debugidentity.html", "tf.raw_ops.DebugIdentityV2": "raw_ops/debugidentityv2.html", "tf.raw_ops.DebugNanCount": "raw_ops/debugnancount.html", "tf.raw_ops.DebugNumericSummary": "raw_ops/debugnumericsummary.html", "tf.raw_ops.DebugNumericSummaryV2": "raw_ops/debugnumericsummaryv2.html", "tf.raw_ops.DecodeAndCropJpeg": "raw_ops/decodeandcropjpeg.html", "tf.raw_ops.DecodeBase64": "raw_ops/decodebase64.html", "tf.raw_ops.DecodeBmp": "raw_ops/decodebmp.html", "tf.raw_ops.DecodeCompressed": "raw_ops/decodecompressed.html", "tf.raw_ops.DecodeCSV": "raw_ops/decodecsv.html", "tf.raw_ops.DecodeGif": "raw_ops/decodegif.html", "tf.raw_ops.DecodeImage": "raw_ops/decodeimage.html", "tf.raw_ops.DecodeJpeg": "raw_ops/decodejpeg.html", "tf.raw_ops.DecodeJSONExample": "raw_ops/decodejsonexample.html", "tf.raw_ops.DecodePaddedRaw": "raw_ops/decodepaddedraw.html", "tf.raw_ops.DecodePng": "raw_ops/decodepng.html", "tf.raw_ops.DecodeProtoV2": "raw_ops/decodeprotov2.html", "tf.raw_ops.DecodeRaw": "raw_ops/decoderaw.html", "tf.raw_ops.DecodeWav": "raw_ops/decodewav.html", "tf.raw_ops.DeepCopy": "raw_ops/deepcopy.html", "tf.raw_ops.DeleteIterator": "raw_ops/deleteiterator.html", "tf.raw_ops.DeleteMemoryCache": "raw_ops/deletememorycache.html", "tf.raw_ops.DeleteMultiDeviceIterator": "raw_ops/deletemultideviceiterator.html", "tf.raw_ops.DeleteRandomSeedGenerator": "raw_ops/deleterandomseedgenerator.html", "tf.raw_ops.DeleteSeedGenerator": "raw_ops/deleteseedgenerator.html", "tf.raw_ops.DeleteSessionTensor": "raw_ops/deletesessiontensor.html", "tf.raw_ops.DenseBincount": "raw_ops/densebincount.html", "tf.raw_ops.DenseCountSparseOutput": "raw_ops/densecountsparseoutput.html", "tf.raw_ops.DenseToCSRSparseMatrix": "raw_ops/densetocsrsparsematrix.html", "tf.raw_ops.DenseToDenseSetOperation": "raw_ops/densetodensesetoperation.html", "tf.raw_ops.DenseToSparseBatchDataset": "raw_ops/densetosparsebatchdataset.html", "tf.raw_ops.DenseToSparseSetOperation": "raw_ops/densetosparsesetoperation.html", "tf.raw_ops.DepthToSpace": "raw_ops/depthtospace.html", "tf.raw_ops.DepthwiseConv2dNative": "raw_ops/depthwiseconv2dnative.html", "tf.raw_ops.DepthwiseConv2dNativeBackpropFilter": "raw_ops/depthwiseconv2dnativebackpropfilter.html", "tf.raw_ops.DepthwiseConv2dNativeBackpropInput": "raw_ops/depthwiseconv2dnativebackpropinput.html", "tf.raw_ops.Dequantize": "raw_ops/dequantize.html", "tf.raw_ops.DeserializeIterator": "raw_ops/deserializeiterator.html", "tf.raw_ops.DeserializeManySparse": "raw_ops/deserializemanysparse.html", "tf.raw_ops.DeserializeSparse": "raw_ops/deserializesparse.html", "tf.raw_ops.DestroyResourceOp": "raw_ops/destroyresourceop.html", "tf.raw_ops.DestroyTemporaryVariable": "raw_ops/destroytemporaryvariable.html", "tf.raw_ops.DeviceIndex": "raw_ops/deviceindex.html", "tf.raw_ops.Diag": "raw_ops/diag.html", "tf.raw_ops.DiagPart": "raw_ops/diagpart.html", "tf.raw_ops.Digamma": "raw_ops/digamma.html", "tf.raw_ops.Dilation2D": "raw_ops/dilation2d.html", "tf.raw_ops.Dilation2DBackpropFilter": "raw_ops/dilation2dbackpropfilter.html", "tf.raw_ops.Dilation2DBackpropInput": "raw_ops/dilation2dbackpropinput.html", "tf.raw_ops.DirectedInterleaveDataset": "raw_ops/directedinterleavedataset.html", "tf.raw_ops.Div": "raw_ops/div.html", "tf.raw_ops.DivNoNan": "raw_ops/divnonan.html", "tf.raw_ops.DrawBoundingBoxes": "raw_ops/drawboundingboxes.html", "tf.raw_ops.DrawBoundingBoxesV2": "raw_ops/drawboundingboxesv2.html", "tf.raw_ops.DummyIterationCounter": "raw_ops/dummyiterationcounter.html", "tf.raw_ops.DummyMemoryCache": "raw_ops/dummymemorycache.html", "tf.raw_ops.DummySeedGenerator": "raw_ops/dummyseedgenerator.html", "tf.raw_ops.DynamicEnqueueTPUEmbeddingArbitraryTensorBatch": "raw_ops/dynamicenqueuetpuembeddingarbitrarytensorbatch.html", "tf.raw_ops.DynamicPartition": "raw_ops/dynamicpartition.html", "tf.raw_ops.DynamicStitch": "raw_ops/dynamicstitch.html", "tf.raw_ops.EagerPyFunc": "raw_ops/eagerpyfunc.html", "tf.raw_ops.EditDistance": "raw_ops/editdistance.html", "tf.raw_ops.Eig": "raw_ops/eig.html", "tf.raw_ops.Einsum": "raw_ops/einsum.html", "tf.raw_ops.Elu": "raw_ops/elu.html", "tf.raw_ops.EluGrad": "raw_ops/elugrad.html", "tf.raw_ops.Empty": "raw_ops/empty.html", "tf.raw_ops.EmptyTensorList": "raw_ops/emptytensorlist.html", "tf.raw_ops.EncodeBase64": "raw_ops/encodebase64.html", "tf.raw_ops.EncodeJpeg": "raw_ops/encodejpeg.html", "tf.raw_ops.EncodeJpegVariableQuality": "raw_ops/encodejpegvariablequality.html", "tf.raw_ops.EncodePng": "raw_ops/encodepng.html", "tf.raw_ops.EncodeProto": "raw_ops/encodeproto.html", "tf.raw_ops.EncodeWav": "raw_ops/encodewav.html", "tf.raw_ops.EnqueueTPUEmbeddingArbitraryTensorBatch": "raw_ops/enqueuetpuembeddingarbitrarytensorbatch.html", "tf.raw_ops.EnqueueTPUEmbeddingIntegerBatch": "raw_ops/enqueuetpuembeddingintegerbatch.html", "tf.raw_ops.EnqueueTPUEmbeddingRaggedTensorBatch": "raw_ops/enqueuetpuembeddingraggedtensorbatch.html", "tf.raw_ops.EnqueueTPUEmbeddingSparseBatch": "raw_ops/enqueuetpuembeddingsparsebatch.html", "tf.raw_ops.EnqueueTPUEmbeddingSparseTensorBatch": "raw_ops/enqueuetpuembeddingsparsetensorbatch.html", "tf.raw_ops.EnsureShape": "raw_ops/ensureshape.html", "tf.raw_ops.Enter": "raw_ops/enter.html", "tf.raw_ops.Equal": "raw_ops/equal.html", "tf.raw_ops.Erf": "raw_ops/erf.html", "tf.raw_ops.Erfc": "raw_ops/erfc.html", "tf.raw_ops.Erfinv": "raw_ops/erfinv.html", "tf.raw_ops.EuclideanNorm": "raw_ops/euclideannorm.html", "tf.raw_ops.Exit": "raw_ops/exit.html", "tf.raw_ops.Exp": "raw_ops/exp.html", "tf.raw_ops.ExpandDims": "raw_ops/expanddims.html", "tf.raw_ops.ExperimentalAssertNextDataset": "raw_ops/experimentalassertnextdataset.html", "tf.raw_ops.ExperimentalAutoShardDataset": "raw_ops/experimentalautosharddataset.html", "tf.raw_ops.ExperimentalBytesProducedStatsDataset": "raw_ops/experimentalbytesproducedstatsdataset.html", "tf.raw_ops.ExperimentalChooseFastestDataset": "raw_ops/experimentalchoosefastestdataset.html", "tf.raw_ops.ExperimentalCSVDataset": "raw_ops/experimentalcsvdataset.html", "tf.raw_ops.ExperimentalDatasetCardinality": "raw_ops/experimentaldatasetcardinality.html", "tf.raw_ops.ExperimentalDatasetToTFRecord": "raw_ops/experimentaldatasettotfrecord.html", "tf.raw_ops.ExperimentalDenseToSparseBatchDataset": "raw_ops/experimentaldensetosparsebatchdataset.html", "tf.raw_ops.ExperimentalDirectedInterleaveDataset": "raw_ops/experimentaldirectedinterleavedataset.html", "tf.raw_ops.ExperimentalGroupByReducerDataset": "raw_ops/experimentalgroupbyreducerdataset.html", "tf.raw_ops.ExperimentalGroupByWindowDataset": "raw_ops/experimentalgroupbywindowdataset.html", "tf.raw_ops.ExperimentalIgnoreErrorsDataset": "raw_ops/experimentalignoreerrorsdataset.html", "tf.raw_ops.ExperimentalIteratorGetDevice": "raw_ops/experimentaliteratorgetdevice.html", "tf.raw_ops.ExperimentalLatencyStatsDataset": "raw_ops/experimentallatencystatsdataset.html", "tf.raw_ops.ExperimentalLMDBDataset": "raw_ops/experimentallmdbdataset.html", "tf.raw_ops.ExperimentalMapAndBatchDataset": "raw_ops/experimentalmapandbatchdataset.html", "tf.raw_ops.ExperimentalMapDataset": "raw_ops/experimentalmapdataset.html", "tf.raw_ops.ExperimentalMatchingFilesDataset": "raw_ops/experimentalmatchingfilesdataset.html", "tf.raw_ops.ExperimentalMaxIntraOpParallelismDataset": "raw_ops/experimentalmaxintraopparallelismdataset.html", "tf.raw_ops.ExperimentalNonSerializableDataset": "raw_ops/experimentalnonserializabledataset.html", "tf.raw_ops.ExperimentalParallelInterleaveDataset": "raw_ops/experimentalparallelinterleavedataset.html", "tf.raw_ops.ExperimentalParseExampleDataset": "raw_ops/experimentalparseexampledataset.html", "tf.raw_ops.ExperimentalPrivateThreadPoolDataset": "raw_ops/experimentalprivatethreadpooldataset.html", "tf.raw_ops.ExperimentalRandomDataset": "raw_ops/experimentalrandomdataset.html", "tf.raw_ops.ExperimentalRebatchDataset": "raw_ops/experimentalrebatchdataset.html", "tf.raw_ops.ExperimentalScanDataset": "raw_ops/experimentalscandataset.html", "tf.raw_ops.ExperimentalSetStatsAggregatorDataset": "raw_ops/experimentalsetstatsaggregatordataset.html", "tf.raw_ops.ExperimentalSleepDataset": "raw_ops/experimentalsleepdataset.html", "tf.raw_ops.ExperimentalSlidingWindowDataset": "raw_ops/experimentalslidingwindowdataset.html", "tf.raw_ops.ExperimentalSqlDataset": "raw_ops/experimentalsqldataset.html", "tf.raw_ops.ExperimentalStatsAggregatorHandle": "raw_ops/experimentalstatsaggregatorhandle.html", "tf.raw_ops.ExperimentalStatsAggregatorSummary": "raw_ops/experimentalstatsaggregatorsummary.html", "tf.raw_ops.ExperimentalTakeWhileDataset": "raw_ops/experimentaltakewhiledataset.html", "tf.raw_ops.ExperimentalThreadPoolDataset": "raw_ops/experimentalthreadpooldataset.html", "tf.raw_ops.ExperimentalThreadPoolHandle": "raw_ops/experimentalthreadpoolhandle.html", "tf.raw_ops.ExperimentalUnbatchDataset": "raw_ops/experimentalunbatchdataset.html", "tf.raw_ops.ExperimentalUniqueDataset": "raw_ops/experimentaluniquedataset.html", "tf.raw_ops.Expint": "raw_ops/expint.html", "tf.raw_ops.Expm1": "raw_ops/expm1.html", "tf.raw_ops.ExtractGlimpse": "raw_ops/extractglimpse.html", "tf.raw_ops.ExtractGlimpseV2": "raw_ops/extractglimpsev2.html", "tf.raw_ops.ExtractImagePatches": "raw_ops/extractimagepatches.html", "tf.raw_ops.ExtractJpegShape": "raw_ops/extractjpegshape.html", "tf.raw_ops.ExtractVolumePatches": "raw_ops/extractvolumepatches.html", "tf.raw_ops.Fact": "raw_ops/fact.html", "tf.raw_ops.FakeParam": "raw_ops/fakeparam.html", "tf.raw_ops.FakeQuantWithMinMaxArgs": "raw_ops/fakequantwithminmaxargs.html", "tf.raw_ops.FakeQuantWithMinMaxArgsGradient": "raw_ops/fakequantwithminmaxargsgradient.html", "tf.raw_ops.FakeQuantWithMinMaxVars": "raw_ops/fakequantwithminmaxvars.html", "tf.raw_ops.FakeQuantWithMinMaxVarsGradient": "raw_ops/fakequantwithminmaxvarsgradient.html", "tf.raw_ops.FakeQuantWithMinMaxVarsPerChannel": "raw_ops/fakequantwithminmaxvarsperchannel.html", "tf.raw_ops.FakeQuantWithMinMaxVarsPerChannelGradient": "raw_ops/fakequantwithminmaxvarsperchannelgradient.html", "tf.raw_ops.FakeQueue": "raw_ops/fakequeue.html", "tf.raw_ops.FFT": "raw_ops/fft.html", "tf.raw_ops.FFT2D": "raw_ops/fft2d.html", "tf.raw_ops.FFT3D": "raw_ops/fft3d.html", "tf.raw_ops.FIFOQueue": "raw_ops/fifoqueue.html", "tf.raw_ops.FIFOQueueV2": "raw_ops/fifoqueuev2.html", "tf.raw_ops.Fill": "raw_ops/fill.html", "tf.raw_ops.FilterByLastComponentDataset": "raw_ops/filterbylastcomponentdataset.html", "tf.raw_ops.FilterDataset": "raw_ops/filterdataset.html", "tf.raw_ops.FinalizeDataset": "raw_ops/finalizedataset.html", "tf.raw_ops.Fingerprint": "raw_ops/fingerprint.html", "tf.raw_ops.FixedLengthRecordDataset": "raw_ops/fixedlengthrecorddataset.html", "tf.raw_ops.FixedLengthRecordDatasetV2": "raw_ops/fixedlengthrecorddatasetv2.html", "tf.raw_ops.FixedLengthRecordReader": "raw_ops/fixedlengthrecordreader.html", "tf.raw_ops.FixedLengthRecordReaderV2": "raw_ops/fixedlengthrecordreaderv2.html", "tf.raw_ops.FixedUnigramCandidateSampler": "raw_ops/fixedunigramcandidatesampler.html", "tf.raw_ops.FlatMapDataset": "raw_ops/flatmapdataset.html", "tf.raw_ops.Floor": "raw_ops/floor.html", "tf.raw_ops.FloorDiv": "raw_ops/floordiv.html", "tf.raw_ops.FloorMod": "raw_ops/floormod.html", "tf.raw_ops.FlushSummaryWriter": "raw_ops/flushsummarywriter.html", "tf.raw_ops.For": "raw_ops/for.html", "tf.raw_ops.FractionalAvgPool": "raw_ops/fractionalavgpool.html", "tf.raw_ops.FractionalAvgPoolGrad": "raw_ops/fractionalavgpoolgrad.html", "tf.raw_ops.FractionalMaxPool": "raw_ops/fractionalmaxpool.html", "tf.raw_ops.FractionalMaxPoolGrad": "raw_ops/fractionalmaxpoolgrad.html", "tf.raw_ops.FresnelCos": "raw_ops/fresnelcos.html", "tf.raw_ops.FresnelSin": "raw_ops/fresnelsin.html", "tf.raw_ops.FusedBatchNorm": "raw_ops/fusedbatchnorm.html", "tf.raw_ops.FusedBatchNormGrad": "raw_ops/fusedbatchnormgrad.html", "tf.raw_ops.FusedBatchNormGradV2": "raw_ops/fusedbatchnormgradv2.html", "tf.raw_ops.FusedBatchNormGradV3": "raw_ops/fusedbatchnormgradv3.html", "tf.raw_ops.FusedBatchNormV2": "raw_ops/fusedbatchnormv2.html", "tf.raw_ops.FusedBatchNormV3": "raw_ops/fusedbatchnormv3.html", "tf.raw_ops.FusedPadConv2D": "raw_ops/fusedpadconv2d.html", "tf.raw_ops.FusedResizeAndPadConv2D": "raw_ops/fusedresizeandpadconv2d.html", "tf.raw_ops.Gather": "raw_ops/gather.html", "tf.raw_ops.GatherNd": "raw_ops/gathernd.html", "tf.raw_ops.GatherV2": "raw_ops/gatherv2.html", "tf.raw_ops.GenerateBoundingBoxProposals": "raw_ops/generateboundingboxproposals.html", "tf.raw_ops.GenerateVocabRemapping": "raw_ops/generatevocabremapping.html", "tf.raw_ops.GeneratorDataset": "raw_ops/generatordataset.html", "tf.raw_ops.GetElementAtIndex": "raw_ops/getelementatindex.html", "tf.raw_ops.GetOptions": "raw_ops/getoptions.html", "tf.raw_ops.GetSessionHandle": "raw_ops/getsessionhandle.html", "tf.raw_ops.GetSessionHandleV2": "raw_ops/getsessionhandlev2.html", "tf.raw_ops.GetSessionTensor": "raw_ops/getsessiontensor.html", "tf.raw_ops.Greater": "raw_ops/greater.html", "tf.raw_ops.GreaterEqual": "raw_ops/greaterequal.html", "tf.raw_ops.GroupByReducerDataset": "raw_ops/groupbyreducerdataset.html", "tf.raw_ops.GroupByWindowDataset": "raw_ops/groupbywindowdataset.html", "tf.raw_ops.GRUBlockCell": "raw_ops/grublockcell.html", "tf.raw_ops.GRUBlockCellGrad": "raw_ops/grublockcellgrad.html", "tf.raw_ops.GuaranteeConst": "raw_ops/guaranteeconst.html", "tf.raw_ops.HashTable": "raw_ops/hashtable.html", "tf.raw_ops.HashTableV2": "raw_ops/hashtablev2.html", "tf.raw_ops.HistogramFixedWidth": "raw_ops/histogramfixedwidth.html", "tf.raw_ops.HistogramSummary": "raw_ops/histogramsummary.html", "tf.raw_ops.HSVToRGB": "raw_ops/hsvtorgb.html", "tf.raw_ops.Identity": "raw_ops/identity.html", "tf.raw_ops.IdentityN": "raw_ops/identityn.html", "tf.raw_ops.IdentityReader": "raw_ops/identityreader.html", "tf.raw_ops.IdentityReaderV2": "raw_ops/identityreaderv2.html", "tf.raw_ops.If": "raw_ops/if.html", "tf.raw_ops.IFFT": "raw_ops/ifft.html", "tf.raw_ops.IFFT2D": "raw_ops/ifft2d.html", "tf.raw_ops.IFFT3D": "raw_ops/ifft3d.html", "tf.raw_ops.Igamma": "raw_ops/igamma.html", "tf.raw_ops.Igammac": "raw_ops/igammac.html", "tf.raw_ops.IgammaGradA": "raw_ops/igammagrada.html", "tf.raw_ops.IgnoreErrorsDataset": "raw_ops/ignoreerrorsdataset.html", "tf.raw_ops.Imag": "raw_ops/imag.html", "tf.raw_ops.ImageProjectiveTransformV2": "raw_ops/imageprojectivetransformv2.html", "tf.raw_ops.ImageProjectiveTransformV3": "raw_ops/imageprojectivetransformv3.html", "tf.raw_ops.ImageSummary": "raw_ops/imagesummary.html", "tf.raw_ops.ImmutableConst": "raw_ops/immutableconst.html", "tf.raw_ops.ImportEvent": "raw_ops/importevent.html", "tf.raw_ops.InfeedDequeue": "raw_ops/infeeddequeue.html", "tf.raw_ops.InfeedDequeueTuple": "raw_ops/infeeddequeuetuple.html", "tf.raw_ops.InfeedEnqueue": "raw_ops/infeedenqueue.html", "tf.raw_ops.InfeedEnqueuePrelinearizedBuffer": "raw_ops/infeedenqueueprelinearizedbuffer.html", "tf.raw_ops.InfeedEnqueueTuple": "raw_ops/infeedenqueuetuple.html", "tf.raw_ops.InitializeTable": "raw_ops/initializetable.html", "tf.raw_ops.InitializeTableFromDataset": "raw_ops/initializetablefromdataset.html", "tf.raw_ops.InitializeTableFromTextFile": "raw_ops/initializetablefromtextfile.html", "tf.raw_ops.InitializeTableFromTextFileV2": "raw_ops/initializetablefromtextfilev2.html", "tf.raw_ops.InitializeTableV2": "raw_ops/initializetablev2.html", "tf.raw_ops.InplaceAdd": "raw_ops/inplaceadd.html", "tf.raw_ops.InplaceSub": "raw_ops/inplacesub.html", "tf.raw_ops.InplaceUpdate": "raw_ops/inplaceupdate.html", "tf.raw_ops.InterleaveDataset": "raw_ops/interleavedataset.html", "tf.raw_ops.InTopK": "raw_ops/intopk.html", "tf.raw_ops.InTopKV2": "raw_ops/intopkv2.html", "tf.raw_ops.Inv": "raw_ops/inv.html", "tf.raw_ops.Invert": "raw_ops/invert.html", "tf.raw_ops.InvertPermutation": "raw_ops/invertpermutation.html", "tf.raw_ops.InvGrad": "raw_ops/invgrad.html", "tf.raw_ops.IRFFT": "raw_ops/irfft.html", "tf.raw_ops.IRFFT2D": "raw_ops/irfft2d.html", "tf.raw_ops.IRFFT3D": "raw_ops/irfft3d.html", "tf.raw_ops.IsBoostedTreesEnsembleInitialized": "raw_ops/isboostedtreesensembleinitialized.html", "tf.raw_ops.IsBoostedTreesQuantileStreamResourceInitialized": "raw_ops/isboostedtreesquantilestreamresourceinitialized.html", "tf.raw_ops.IsFinite": "raw_ops/isfinite.html", "tf.raw_ops.IsInf": "raw_ops/isinf.html", "tf.raw_ops.IsNan": "raw_ops/isnan.html", "tf.raw_ops.IsotonicRegression": "raw_ops/isotonicregression.html", "tf.raw_ops.IsTPUEmbeddingInitialized": "raw_ops/istpuembeddinginitialized.html", "tf.raw_ops.IsVariableInitialized": "raw_ops/isvariableinitialized.html", "tf.raw_ops.Iterator": "raw_ops/iterator.html", "tf.raw_ops.IteratorFromStringHandle": "raw_ops/iteratorfromstringhandle.html", "tf.raw_ops.IteratorFromStringHandleV2": "raw_ops/iteratorfromstringhandlev2.html", "tf.raw_ops.IteratorGetDevice": "raw_ops/iteratorgetdevice.html", "tf.raw_ops.IteratorGetNext": "raw_ops/iteratorgetnext.html", "tf.raw_ops.IteratorGetNextAsOptional": "raw_ops/iteratorgetnextasoptional.html", "tf.raw_ops.IteratorGetNextSync": "raw_ops/iteratorgetnextsync.html", "tf.raw_ops.IteratorToStringHandle": "raw_ops/iteratortostringhandle.html", "tf.raw_ops.IteratorV2": "raw_ops/iteratorv2.html", "tf.raw_ops.L2Loss": "raw_ops/l2loss.html", "tf.raw_ops.LatencyStatsDataset": "raw_ops/latencystatsdataset.html", "tf.raw_ops.LeakyRelu": "raw_ops/leakyrelu.html", "tf.raw_ops.LeakyReluGrad": "raw_ops/leakyrelugrad.html", "tf.raw_ops.LearnedUnigramCandidateSampler": "raw_ops/learnedunigramcandidatesampler.html", "tf.raw_ops.LeftShift": "raw_ops/leftshift.html", "tf.raw_ops.LegacyParallelInterleaveDatasetV2": "raw_ops/legacyparallelinterleavedatasetv2.html", "tf.raw_ops.Less": "raw_ops/less.html", "tf.raw_ops.LessEqual": "raw_ops/lessequal.html", "tf.raw_ops.Lgamma": "raw_ops/lgamma.html", "tf.raw_ops.LinSpace": "raw_ops/linspace.html", "tf.raw_ops.ListDiff": "raw_ops/listdiff.html", "tf.raw_ops.LMDBDataset": "raw_ops/lmdbdataset.html", "tf.raw_ops.LMDBReader": "raw_ops/lmdbreader.html", "tf.raw_ops.LoadAndRemapMatrix": "raw_ops/loadandremapmatrix.html", "tf.raw_ops.LoadDataset": "raw_ops/loaddataset.html", "tf.raw_ops.LoadTPUEmbeddingAdadeltaParameters": "raw_ops/loadtpuembeddingadadeltaparameters.html", "tf.raw_ops.LoadTPUEmbeddingAdagradMomentumParameters": "raw_ops/loadtpuembeddingadagradmomentumparameters.html", "tf.raw_ops.LoadTPUEmbeddingAdagradParameters": "raw_ops/loadtpuembeddingadagradparameters.html", "tf.raw_ops.LoadTPUEmbeddingADAMParameters": "raw_ops/loadtpuembeddingadamparameters.html", "tf.raw_ops.LoadTPUEmbeddingCenteredRMSPropParameters": "raw_ops/loadtpuembeddingcenteredrmspropparameters.html", "tf.raw_ops.LoadTPUEmbeddingFrequencyEstimatorParameters": "raw_ops/loadtpuembeddingfrequencyestimatorparameters.html", "tf.raw_ops.LoadTPUEmbeddingFTRLParameters": "raw_ops/loadtpuembeddingftrlparameters.html", "tf.raw_ops.LoadTPUEmbeddingMDLAdagradLightParameters": "raw_ops/loadtpuembeddingmdladagradlightparameters.html", "tf.raw_ops.LoadTPUEmbeddingMomentumParameters": "raw_ops/loadtpuembeddingmomentumparameters.html", "tf.raw_ops.LoadTPUEmbeddingProximalAdagradParameters": "raw_ops/loadtpuembeddingproximaladagradparameters.html", "tf.raw_ops.LoadTPUEmbeddingProximalYogiParameters": "raw_ops/loadtpuembeddingproximalyogiparameters.html", "tf.raw_ops.LoadTPUEmbeddingRMSPropParameters": "raw_ops/loadtpuembeddingrmspropparameters.html", "tf.raw_ops.LoadTPUEmbeddingStochasticGradientDescentParameters": "raw_ops/loadtpuembeddingstochasticgradientdescentparameters.html", "tf.raw_ops.Log": "raw_ops/log.html", "tf.raw_ops.Log1p": "raw_ops/log1p.html", "tf.raw_ops.LogicalAnd": "raw_ops/logicaland.html", "tf.raw_ops.LogicalNot": "raw_ops/logicalnot.html", "tf.raw_ops.LogicalOr": "raw_ops/logicalor.html", "tf.raw_ops.LogMatrixDeterminant": "raw_ops/logmatrixdeterminant.html", "tf.raw_ops.LogSoftmax": "raw_ops/logsoftmax.html", "tf.raw_ops.LogUniformCandidateSampler": "raw_ops/loguniformcandidatesampler.html", "tf.raw_ops.LookupTableExport": "raw_ops/lookuptableexport.html", "tf.raw_ops.LookupTableExportV2": "raw_ops/lookuptableexportv2.html", "tf.raw_ops.LookupTableFind": "raw_ops/lookuptablefind.html", "tf.raw_ops.LookupTableFindV2": "raw_ops/lookuptablefindv2.html", "tf.raw_ops.LookupTableImport": "raw_ops/lookuptableimport.html", "tf.raw_ops.LookupTableImportV2": "raw_ops/lookuptableimportv2.html", "tf.raw_ops.LookupTableInsert": "raw_ops/lookuptableinsert.html", "tf.raw_ops.LookupTableInsertV2": "raw_ops/lookuptableinsertv2.html", "tf.raw_ops.LookupTableRemoveV2": "raw_ops/lookuptableremovev2.html", "tf.raw_ops.LookupTableSize": "raw_ops/lookuptablesize.html", "tf.raw_ops.LookupTableSizeV2": "raw_ops/lookuptablesizev2.html", "tf.raw_ops.LoopCond": "raw_ops/loopcond.html", "tf.raw_ops.LowerBound": "raw_ops/lowerbound.html", "tf.raw_ops.LRN": "raw_ops/lrn.html", "tf.raw_ops.LRNGrad": "raw_ops/lrngrad.html", "tf.raw_ops.LSTMBlockCell": "raw_ops/lstmblockcell.html", "tf.raw_ops.LSTMBlockCellGrad": "raw_ops/lstmblockcellgrad.html", "tf.raw_ops.Lu": "raw_ops/lu.html", "tf.raw_ops.MakeIterator": "raw_ops/makeiterator.html", "tf.raw_ops.MapAndBatchDataset": "raw_ops/mapandbatchdataset.html", "tf.raw_ops.MapClear": "raw_ops/mapclear.html", "tf.raw_ops.MapDataset": "raw_ops/mapdataset.html", "tf.raw_ops.MapDefun": "raw_ops/mapdefun.html", "tf.raw_ops.MapIncompleteSize": "raw_ops/mapincompletesize.html", "tf.raw_ops.MapPeek": "raw_ops/mappeek.html", "tf.raw_ops.MapSize": "raw_ops/mapsize.html", "tf.raw_ops.MapStage": "raw_ops/mapstage.html", "tf.raw_ops.MapUnstage": "raw_ops/mapunstage.html", "tf.raw_ops.MapUnstageNoKey": "raw_ops/mapunstagenokey.html", "tf.raw_ops.MatchingFiles": "raw_ops/matchingfiles.html", "tf.raw_ops.MatchingFilesDataset": "raw_ops/matchingfilesdataset.html", "tf.raw_ops.MatMul": "raw_ops/matmul.html", "tf.raw_ops.MatrixBandPart": "raw_ops/matrixbandpart.html", "tf.raw_ops.MatrixDeterminant": "raw_ops/matrixdeterminant.html", "tf.raw_ops.MatrixDiag": "raw_ops/matrixdiag.html", "tf.raw_ops.MatrixDiagPart": "raw_ops/matrixdiagpart.html", "tf.raw_ops.MatrixDiagPartV2": "raw_ops/matrixdiagpartv2.html", "tf.raw_ops.MatrixDiagPartV3": "raw_ops/matrixdiagpartv3.html", "tf.raw_ops.MatrixDiagV2": "raw_ops/matrixdiagv2.html", "tf.raw_ops.MatrixDiagV3": "raw_ops/matrixdiagv3.html", "tf.raw_ops.MatrixExponential": "raw_ops/matrixexponential.html", "tf.raw_ops.MatrixInverse": "raw_ops/matrixinverse.html", "tf.raw_ops.MatrixLogarithm": "raw_ops/matrixlogarithm.html", "tf.raw_ops.MatrixSetDiag": "raw_ops/matrixsetdiag.html", "tf.raw_ops.MatrixSetDiagV2": "raw_ops/matrixsetdiagv2.html", "tf.raw_ops.MatrixSetDiagV3": "raw_ops/matrixsetdiagv3.html", "tf.raw_ops.MatrixSolve": "raw_ops/matrixsolve.html", "tf.raw_ops.MatrixSolveLs": "raw_ops/matrixsolvels.html", "tf.raw_ops.MatrixSquareRoot": "raw_ops/matrixsquareroot.html", "tf.raw_ops.MatrixTriangularSolve": "raw_ops/matrixtriangularsolve.html", "tf.raw_ops.Max": "raw_ops/max.html", "tf.raw_ops.Maximum": "raw_ops/maximum.html", "tf.raw_ops.MaxIntraOpParallelismDataset": "raw_ops/maxintraopparallelismdataset.html", "tf.raw_ops.MaxPool": "raw_ops/maxpool.html", "tf.raw_ops.MaxPool3D": "raw_ops/maxpool3d.html", "tf.raw_ops.MaxPool3DGrad": "raw_ops/maxpool3dgrad.html", "tf.raw_ops.MaxPool3DGradGrad": "raw_ops/maxpool3dgradgrad.html", "tf.raw_ops.MaxPoolGrad": "raw_ops/maxpoolgrad.html", "tf.raw_ops.MaxPoolGradGrad": "raw_ops/maxpoolgradgrad.html", "tf.raw_ops.MaxPoolGradGradV2": "raw_ops/maxpoolgradgradv2.html", "tf.raw_ops.MaxPoolGradGradWithArgmax": "raw_ops/maxpoolgradgradwithargmax.html", "tf.raw_ops.MaxPoolGradV2": "raw_ops/maxpoolgradv2.html", "tf.raw_ops.MaxPoolGradWithArgmax": "raw_ops/maxpoolgradwithargmax.html", "tf.raw_ops.MaxPoolV2": "raw_ops/maxpoolv2.html", "tf.raw_ops.MaxPoolWithArgmax": "raw_ops/maxpoolwithargmax.html", "tf.raw_ops.Mean": "raw_ops/mean.html", "tf.raw_ops.Merge": "raw_ops/merge.html", "tf.raw_ops.MergeSummary": "raw_ops/mergesummary.html", "tf.raw_ops.MergeV2Checkpoints": "raw_ops/mergev2checkpoints.html", "tf.raw_ops.Mfcc": "raw_ops/mfcc.html", "tf.raw_ops.Min": "raw_ops/min.html", "tf.raw_ops.Minimum": "raw_ops/minimum.html", "tf.raw_ops.MirrorPad": "raw_ops/mirrorpad.html", "tf.raw_ops.MirrorPadGrad": "raw_ops/mirrorpadgrad.html", "tf.raw_ops.Mod": "raw_ops/mod.html", "tf.raw_ops.ModelDataset": "raw_ops/modeldataset.html", "tf.raw_ops.Mul": "raw_ops/mul.html", "tf.raw_ops.MulNoNan": "raw_ops/mulnonan.html", "tf.raw_ops.MultiDeviceIterator": "raw_ops/multideviceiterator.html", "tf.raw_ops.MultiDeviceIteratorFromStringHandle": "raw_ops/multideviceiteratorfromstringhandle.html", "tf.raw_ops.MultiDeviceIteratorGetNextFromShard": "raw_ops/multideviceiteratorgetnextfromshard.html", "tf.raw_ops.MultiDeviceIteratorInit": "raw_ops/multideviceiteratorinit.html", "tf.raw_ops.MultiDeviceIteratorToStringHandle": "raw_ops/multideviceiteratortostringhandle.html", "tf.raw_ops.Multinomial": "raw_ops/multinomial.html", "tf.raw_ops.MutableDenseHashTable": "raw_ops/mutabledensehashtable.html", "tf.raw_ops.MutableDenseHashTableV2": "raw_ops/mutabledensehashtablev2.html", "tf.raw_ops.MutableHashTable": "raw_ops/mutablehashtable.html", "tf.raw_ops.MutableHashTableOfTensors": "raw_ops/mutablehashtableoftensors.html", "tf.raw_ops.MutableHashTableOfTensorsV2": "raw_ops/mutablehashtableoftensorsv2.html", "tf.raw_ops.MutableHashTableV2": "raw_ops/mutablehashtablev2.html", "tf.raw_ops.MutexLock": "raw_ops/mutexlock.html", "tf.raw_ops.MutexV2": "raw_ops/mutexv2.html", "tf.raw_ops.NcclAllReduce": "raw_ops/ncclallreduce.html", "tf.raw_ops.NcclBroadcast": "raw_ops/ncclbroadcast.html", "tf.raw_ops.NcclReduce": "raw_ops/ncclreduce.html", "tf.raw_ops.Ndtri": "raw_ops/ndtri.html", "tf.raw_ops.Neg": "raw_ops/neg.html", "tf.raw_ops.NextAfter": "raw_ops/nextafter.html", "tf.raw_ops.NextIteration": "raw_ops/nextiteration.html", "tf.raw_ops.NonDeterministicInts": "raw_ops/nondeterministicints.html", "tf.raw_ops.NonMaxSuppression": "raw_ops/nonmaxsuppression.html", "tf.raw_ops.NonMaxSuppressionV2": "raw_ops/nonmaxsuppressionv2.html", "tf.raw_ops.NonMaxSuppressionV3": "raw_ops/nonmaxsuppressionv3.html", "tf.raw_ops.NonMaxSuppressionV4": "raw_ops/nonmaxsuppressionv4.html", "tf.raw_ops.NonMaxSuppressionV5": "raw_ops/nonmaxsuppressionv5.html", "tf.raw_ops.NonMaxSuppressionWithOverlaps": "raw_ops/nonmaxsuppressionwithoverlaps.html", "tf.raw_ops.NonSerializableDataset": "raw_ops/nonserializabledataset.html", "tf.raw_ops.NoOp": "raw_ops/noop.html", "tf.raw_ops.NotEqual": "raw_ops/notequal.html", "tf.raw_ops.NthElement": "raw_ops/nthelement.html", "tf.raw_ops.OneHot": "raw_ops/onehot.html", "tf.raw_ops.OneShotIterator": "raw_ops/oneshotiterator.html", "tf.raw_ops.OnesLike": "raw_ops/oneslike.html", "tf.raw_ops.OptimizeDataset": "raw_ops/optimizedataset.html", "tf.raw_ops.OptimizeDatasetV2": "raw_ops/optimizedatasetv2.html", "tf.raw_ops.OptionalFromValue": "raw_ops/optionalfromvalue.html", "tf.raw_ops.OptionalGetValue": "raw_ops/optionalgetvalue.html", "tf.raw_ops.OptionalHasValue": "raw_ops/optionalhasvalue.html", "tf.raw_ops.OptionalNone": "raw_ops/optionalnone.html", "tf.raw_ops.OptionsDataset": "raw_ops/optionsdataset.html", "tf.raw_ops.OrderedMapClear": "raw_ops/orderedmapclear.html", "tf.raw_ops.OrderedMapIncompleteSize": "raw_ops/orderedmapincompletesize.html", "tf.raw_ops.OrderedMapPeek": "raw_ops/orderedmappeek.html", "tf.raw_ops.OrderedMapSize": "raw_ops/orderedmapsize.html", "tf.raw_ops.OrderedMapStage": "raw_ops/orderedmapstage.html", "tf.raw_ops.OrderedMapUnstage": "raw_ops/orderedmapunstage.html", "tf.raw_ops.OrderedMapUnstageNoKey": "raw_ops/orderedmapunstagenokey.html", "tf.raw_ops.OutfeedDequeue": "raw_ops/outfeeddequeue.html", "tf.raw_ops.OutfeedDequeueTuple": "raw_ops/outfeeddequeuetuple.html", "tf.raw_ops.OutfeedDequeueTupleV2": "raw_ops/outfeeddequeuetuplev2.html", "tf.raw_ops.OutfeedDequeueV2": "raw_ops/outfeeddequeuev2.html", "tf.raw_ops.OutfeedEnqueue": "raw_ops/outfeedenqueue.html", "tf.raw_ops.OutfeedEnqueueTuple": "raw_ops/outfeedenqueuetuple.html", "tf.raw_ops.Pack": "raw_ops/pack.html", "tf.raw_ops.Pad": "raw_ops/pad.html", "tf.raw_ops.PaddedBatchDataset": "raw_ops/paddedbatchdataset.html", "tf.raw_ops.PaddedBatchDatasetV2": "raw_ops/paddedbatchdatasetv2.html", "tf.raw_ops.PaddingFIFOQueue": "raw_ops/paddingfifoqueue.html", "tf.raw_ops.PaddingFIFOQueueV2": "raw_ops/paddingfifoqueuev2.html", "tf.raw_ops.PadV2": "raw_ops/padv2.html", "tf.raw_ops.ParallelBatchDataset": "raw_ops/parallelbatchdataset.html", "tf.raw_ops.ParallelConcat": "raw_ops/parallelconcat.html", "tf.raw_ops.ParallelDynamicStitch": "raw_ops/paralleldynamicstitch.html", "tf.raw_ops.ParallelFilterDataset": "raw_ops/parallelfilterdataset.html", "tf.raw_ops.ParallelInterleaveDataset": "raw_ops/parallelinterleavedataset.html", "tf.raw_ops.ParallelInterleaveDatasetV2": "raw_ops/parallelinterleavedatasetv2.html", "tf.raw_ops.ParallelInterleaveDatasetV3": "raw_ops/parallelinterleavedatasetv3.html", "tf.raw_ops.ParallelInterleaveDatasetV4": "raw_ops/parallelinterleavedatasetv4.html", "tf.raw_ops.ParallelMapDataset": "raw_ops/parallelmapdataset.html", "tf.raw_ops.ParallelMapDatasetV2": "raw_ops/parallelmapdatasetv2.html", "tf.raw_ops.ParameterizedTruncatedNormal": "raw_ops/parameterizedtruncatednormal.html", "tf.raw_ops.ParseExample": "raw_ops/parseexample.html", "tf.raw_ops.ParseExampleDataset": "raw_ops/parseexampledataset.html", "tf.raw_ops.ParseExampleDatasetV2": "raw_ops/parseexampledatasetv2.html", "tf.raw_ops.ParseExampleV2": "raw_ops/parseexamplev2.html", "tf.raw_ops.ParseSequenceExample": "raw_ops/parsesequenceexample.html", "tf.raw_ops.ParseSequenceExampleV2": "raw_ops/parsesequenceexamplev2.html", "tf.raw_ops.ParseSingleExample": "raw_ops/parsesingleexample.html", "tf.raw_ops.ParseSingleSequenceExample": "raw_ops/parsesinglesequenceexample.html", "tf.raw_ops.ParseTensor": "raw_ops/parsetensor.html", "tf.raw_ops.PartitionedCall": "raw_ops/partitionedcall.html", "tf.raw_ops.Placeholder": "raw_ops/placeholder.html", "tf.raw_ops.PlaceholderV2": "raw_ops/placeholderv2.html", "tf.raw_ops.PlaceholderWithDefault": "raw_ops/placeholderwithdefault.html", "tf.raw_ops.Polygamma": "raw_ops/polygamma.html", "tf.raw_ops.PopulationCount": "raw_ops/populationcount.html", "tf.raw_ops.Pow": "raw_ops/pow.html", "tf.raw_ops.PrefetchDataset": "raw_ops/prefetchdataset.html", "tf.raw_ops.Prelinearize": "raw_ops/prelinearize.html", "tf.raw_ops.PrelinearizeTuple": "raw_ops/prelinearizetuple.html", "tf.raw_ops.PreventGradient": "raw_ops/preventgradient.html", "tf.raw_ops.Print": "raw_ops/print.html", "tf.raw_ops.PrintV2": "raw_ops/printv2.html", "tf.raw_ops.PriorityQueue": "raw_ops/priorityqueue.html", "tf.raw_ops.PriorityQueueV2": "raw_ops/priorityqueuev2.html", "tf.raw_ops.PrivateThreadPoolDataset": "raw_ops/privatethreadpooldataset.html", "tf.raw_ops.Prod": "raw_ops/prod.html", "tf.raw_ops.PyFunc": "raw_ops/pyfunc.html", "tf.raw_ops.PyFuncStateless": "raw_ops/pyfuncstateless.html", "tf.raw_ops.Qr": "raw_ops/qr.html", "tf.raw_ops.QuantizeAndDequantize": "raw_ops/quantizeanddequantize.html", "tf.raw_ops.QuantizeAndDequantizeV2": "raw_ops/quantizeanddequantizev2.html", "tf.raw_ops.QuantizeAndDequantizeV3": "raw_ops/quantizeanddequantizev3.html", "tf.raw_ops.QuantizeAndDequantizeV4": "raw_ops/quantizeanddequantizev4.html", "tf.raw_ops.QuantizeAndDequantizeV4Grad": "raw_ops/quantizeanddequantizev4grad.html", "tf.raw_ops.QuantizedAdd": "raw_ops/quantizedadd.html", "tf.raw_ops.QuantizedAvgPool": "raw_ops/quantizedavgpool.html", "tf.raw_ops.QuantizedBatchNormWithGlobalNormalization": "raw_ops/quantizedbatchnormwithglobalnormalization.html", "tf.raw_ops.QuantizedBiasAdd": "raw_ops/quantizedbiasadd.html", "tf.raw_ops.QuantizedConcat": "raw_ops/quantizedconcat.html", "tf.raw_ops.QuantizedConv2D": "raw_ops/quantizedconv2d.html", "tf.raw_ops.QuantizedConv2DAndRelu": "raw_ops/quantizedconv2dandrelu.html", "tf.raw_ops.QuantizedConv2DAndReluAndRequantize": "raw_ops/quantizedconv2dandreluandrequantize.html", "tf.raw_ops.QuantizedConv2DAndRequantize": "raw_ops/quantizedconv2dandrequantize.html", "tf.raw_ops.QuantizedConv2DPerChannel": "raw_ops/quantizedconv2dperchannel.html", "tf.raw_ops.QuantizedConv2DWithBias": "raw_ops/quantizedconv2dwithbias.html", "tf.raw_ops.QuantizedConv2DWithBiasAndRelu": "raw_ops/quantizedconv2dwithbiasandrelu.html", "tf.raw_ops.QuantizedConv2DWithBiasAndReluAndRequantize": "raw_ops/quantizedconv2dwithbiasandreluandrequantize.html", "tf.raw_ops.QuantizedConv2DWithBiasAndRequantize": "raw_ops/quantizedconv2dwithbiasandrequantize.html", "tf.raw_ops.QuantizedConv2DWithBiasSignedSumAndReluAndRequantize": "raw_ops/quantizedconv2dwithbiassignedsumandreluandrequantize.html", "tf.raw_ops.QuantizedConv2DWithBiasSumAndRelu": "raw_ops/quantizedconv2dwithbiassumandrelu.html", "tf.raw_ops.QuantizedConv2DWithBiasSumAndReluAndRequantize": "raw_ops/quantizedconv2dwithbiassumandreluandrequantize.html", "tf.raw_ops.QuantizedDepthwiseConv2D": "raw_ops/quantizeddepthwiseconv2d.html", "tf.raw_ops.QuantizedDepthwiseConv2DWithBias": "raw_ops/quantizeddepthwiseconv2dwithbias.html", "tf.raw_ops.QuantizedDepthwiseConv2DWithBiasAndRelu": "raw_ops/quantizeddepthwiseconv2dwithbiasandrelu.html", "tf.raw_ops.QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize": "raw_ops/quantizeddepthwiseconv2dwithbiasandreluandrequantize.html", "tf.raw_ops.QuantizedInstanceNorm": "raw_ops/quantizedinstancenorm.html", "tf.raw_ops.QuantizedMatMul": "raw_ops/quantizedmatmul.html", "tf.raw_ops.QuantizedMatMulWithBias": "raw_ops/quantizedmatmulwithbias.html", "tf.raw_ops.QuantizedMatMulWithBiasAndDequantize": "raw_ops/quantizedmatmulwithbiasanddequantize.html", "tf.raw_ops.QuantizedMatMulWithBiasAndRelu": "raw_ops/quantizedmatmulwithbiasandrelu.html", "tf.raw_ops.QuantizedMatMulWithBiasAndReluAndRequantize": "raw_ops/quantizedmatmulwithbiasandreluandrequantize.html", "tf.raw_ops.QuantizedMatMulWithBiasAndRequantize": "raw_ops/quantizedmatmulwithbiasandrequantize.html", "tf.raw_ops.QuantizedMaxPool": "raw_ops/quantizedmaxpool.html", "tf.raw_ops.QuantizedMul": "raw_ops/quantizedmul.html", "tf.raw_ops.QuantizeDownAndShrinkRange": "raw_ops/quantizedownandshrinkrange.html", "tf.raw_ops.QuantizedRelu": "raw_ops/quantizedrelu.html", "tf.raw_ops.QuantizedRelu6": "raw_ops/quantizedrelu6.html", "tf.raw_ops.QuantizedReluX": "raw_ops/quantizedrelux.html", "tf.raw_ops.QuantizedReshape": "raw_ops/quantizedreshape.html", "tf.raw_ops.QuantizedResizeBilinear": "raw_ops/quantizedresizebilinear.html", "tf.raw_ops.QuantizeV2": "raw_ops/quantizev2.html", "tf.raw_ops.QueueClose": "raw_ops/queueclose.html", "tf.raw_ops.QueueCloseV2": "raw_ops/queueclosev2.html", "tf.raw_ops.QueueDequeue": "raw_ops/queuedequeue.html", "tf.raw_ops.QueueDequeueMany": "raw_ops/queuedequeuemany.html", "tf.raw_ops.QueueDequeueManyV2": "raw_ops/queuedequeuemanyv2.html", "tf.raw_ops.QueueDequeueUpTo": "raw_ops/queuedequeueupto.html", "tf.raw_ops.QueueDequeueUpToV2": "raw_ops/queuedequeueuptov2.html", "tf.raw_ops.QueueDequeueV2": "raw_ops/queuedequeuev2.html", "tf.raw_ops.QueueEnqueue": "raw_ops/queueenqueue.html", "tf.raw_ops.QueueEnqueueMany": "raw_ops/queueenqueuemany.html", "tf.raw_ops.QueueEnqueueManyV2": "raw_ops/queueenqueuemanyv2.html", "tf.raw_ops.QueueEnqueueV2": "raw_ops/queueenqueuev2.html", "tf.raw_ops.QueueIsClosed": "raw_ops/queueisclosed.html", "tf.raw_ops.QueueIsClosedV2": "raw_ops/queueisclosedv2.html", "tf.raw_ops.QueueSize": "raw_ops/queuesize.html", "tf.raw_ops.QueueSizeV2": "raw_ops/queuesizev2.html", "tf.raw_ops.RaggedBincount": "raw_ops/raggedbincount.html", "tf.raw_ops.RaggedCountSparseOutput": "raw_ops/raggedcountsparseoutput.html", "tf.raw_ops.RaggedCross": "raw_ops/raggedcross.html", "tf.raw_ops.RaggedGather": "raw_ops/raggedgather.html", "tf.raw_ops.RaggedRange": "raw_ops/raggedrange.html", "tf.raw_ops.RaggedTensorFromVariant": "raw_ops/raggedtensorfromvariant.html", "tf.raw_ops.RaggedTensorToSparse": "raw_ops/raggedtensortosparse.html", "tf.raw_ops.RaggedTensorToTensor": "raw_ops/raggedtensortotensor.html", "tf.raw_ops.RaggedTensorToVariant": "raw_ops/raggedtensortovariant.html", "tf.raw_ops.RaggedTensorToVariantGradient": "raw_ops/raggedtensortovariantgradient.html", "tf.raw_ops.RandomCrop": "raw_ops/randomcrop.html", "tf.raw_ops.RandomDataset": "raw_ops/randomdataset.html", "tf.raw_ops.RandomGamma": "raw_ops/randomgamma.html", "tf.raw_ops.RandomGammaGrad": "raw_ops/randomgammagrad.html", "tf.raw_ops.RandomIndexShuffle": "raw_ops/randomindexshuffle.html", "tf.raw_ops.RandomPoisson": "raw_ops/randompoisson.html", "tf.raw_ops.RandomPoissonV2": "raw_ops/randompoissonv2.html", "tf.raw_ops.RandomShuffle": "raw_ops/randomshuffle.html", "tf.raw_ops.RandomShuffleQueue": "raw_ops/randomshufflequeue.html", "tf.raw_ops.RandomShuffleQueueV2": "raw_ops/randomshufflequeuev2.html", "tf.raw_ops.RandomStandardNormal": "raw_ops/randomstandardnormal.html", "tf.raw_ops.RandomUniform": "raw_ops/randomuniform.html", "tf.raw_ops.RandomUniformInt": "raw_ops/randomuniformint.html", "tf.raw_ops.Range": "raw_ops/range.html", "tf.raw_ops.RangeDataset": "raw_ops/rangedataset.html", "tf.raw_ops.Rank": "raw_ops/rank.html", "tf.raw_ops.ReaderNumRecordsProduced": "raw_ops/readernumrecordsproduced.html", "tf.raw_ops.ReaderNumRecordsProducedV2": "raw_ops/readernumrecordsproducedv2.html", "tf.raw_ops.ReaderNumWorkUnitsCompleted": "raw_ops/readernumworkunitscompleted.html", "tf.raw_ops.ReaderNumWorkUnitsCompletedV2": "raw_ops/readernumworkunitscompletedv2.html", "tf.raw_ops.ReaderRead": "raw_ops/readerread.html", "tf.raw_ops.ReaderReadUpTo": "raw_ops/readerreadupto.html", "tf.raw_ops.ReaderReadUpToV2": "raw_ops/readerreaduptov2.html", "tf.raw_ops.ReaderReadV2": "raw_ops/readerreadv2.html", "tf.raw_ops.ReaderReset": "raw_ops/readerreset.html", "tf.raw_ops.ReaderResetV2": "raw_ops/readerresetv2.html", "tf.raw_ops.ReaderRestoreState": "raw_ops/readerrestorestate.html", "tf.raw_ops.ReaderRestoreStateV2": "raw_ops/readerrestorestatev2.html", "tf.raw_ops.ReaderSerializeState": "raw_ops/readerserializestate.html", "tf.raw_ops.ReaderSerializeStateV2": "raw_ops/readerserializestatev2.html", "tf.raw_ops.ReadFile": "raw_ops/readfile.html", "tf.raw_ops.ReadVariableOp": "raw_ops/readvariableop.html", "tf.raw_ops.ReadVariableXlaSplitND": "raw_ops/readvariablexlasplitnd.html", "tf.raw_ops.Real": "raw_ops/real.html", "tf.raw_ops.RealDiv": "raw_ops/realdiv.html", "tf.raw_ops.RebatchDataset": "raw_ops/rebatchdataset.html", "tf.raw_ops.RebatchDatasetV2": "raw_ops/rebatchdatasetv2.html", "tf.raw_ops.Reciprocal": "raw_ops/reciprocal.html", "tf.raw_ops.ReciprocalGrad": "raw_ops/reciprocalgrad.html", "tf.raw_ops.RecordInput": "raw_ops/recordinput.html", "tf.raw_ops.Recv": "raw_ops/recv.html", "tf.raw_ops.RecvTPUEmbeddingActivations": "raw_ops/recvtpuembeddingactivations.html", "tf.raw_ops.ReduceDataset": "raw_ops/reducedataset.html", "tf.raw_ops.ReduceJoin": "raw_ops/reducejoin.html", "tf.raw_ops.RefEnter": "raw_ops/refenter.html", "tf.raw_ops.RefExit": "raw_ops/refexit.html", "tf.raw_ops.RefIdentity": "raw_ops/refidentity.html", "tf.raw_ops.RefMerge": "raw_ops/refmerge.html", "tf.raw_ops.RefNextIteration": "raw_ops/refnextiteration.html", "tf.raw_ops.RefSelect": "raw_ops/refselect.html", "tf.raw_ops.RefSwitch": "raw_ops/refswitch.html", "tf.raw_ops.RegexFullMatch": "raw_ops/regexfullmatch.html", "tf.raw_ops.RegexReplace": "raw_ops/regexreplace.html", "tf.raw_ops.RegisterDataset": "raw_ops/registerdataset.html", "tf.raw_ops.Relu": "raw_ops/relu.html", "tf.raw_ops.Relu6": "raw_ops/relu6.html", "tf.raw_ops.Relu6Grad": "raw_ops/relu6grad.html", "tf.raw_ops.ReluGrad": "raw_ops/relugrad.html", "tf.raw_ops.RemoteCall": "raw_ops/remotecall.html", "tf.raw_ops.RepeatDataset": "raw_ops/repeatdataset.html", "tf.raw_ops.RequantizationRange": "raw_ops/requantizationrange.html", "tf.raw_ops.RequantizationRangePerChannel": "raw_ops/requantizationrangeperchannel.html", "tf.raw_ops.Requantize": "raw_ops/requantize.html", "tf.raw_ops.RequantizePerChannel": "raw_ops/requantizeperchannel.html", "tf.raw_ops.Reshape": "raw_ops/reshape.html", "tf.raw_ops.ResizeArea": "raw_ops/resizearea.html", "tf.raw_ops.ResizeBicubic": "raw_ops/resizebicubic.html", "tf.raw_ops.ResizeBicubicGrad": "raw_ops/resizebicubicgrad.html", "tf.raw_ops.ResizeBilinear": "raw_ops/resizebilinear.html", "tf.raw_ops.ResizeBilinearGrad": "raw_ops/resizebilineargrad.html", "tf.raw_ops.ResizeNearestNeighbor": "raw_ops/resizenearestneighbor.html", "tf.raw_ops.ResizeNearestNeighborGrad": "raw_ops/resizenearestneighborgrad.html", "tf.raw_ops.ResourceAccumulatorApplyGradient": "raw_ops/resourceaccumulatorapplygradient.html", "tf.raw_ops.ResourceAccumulatorNumAccumulated": "raw_ops/resourceaccumulatornumaccumulated.html", "tf.raw_ops.ResourceAccumulatorSetGlobalStep": "raw_ops/resourceaccumulatorsetglobalstep.html", "tf.raw_ops.ResourceAccumulatorTakeGradient": "raw_ops/resourceaccumulatortakegradient.html", "tf.raw_ops.ResourceApplyAdadelta": "raw_ops/resourceapplyadadelta.html", "tf.raw_ops.ResourceApplyAdagrad": "raw_ops/resourceapplyadagrad.html", "tf.raw_ops.ResourceApplyAdagradDA": "raw_ops/resourceapplyadagradda.html", "tf.raw_ops.ResourceApplyAdagradV2": "raw_ops/resourceapplyadagradv2.html", "tf.raw_ops.ResourceApplyAdam": "raw_ops/resourceapplyadam.html", "tf.raw_ops.ResourceApplyAdaMax": "raw_ops/resourceapplyadamax.html", "tf.raw_ops.ResourceApplyAdamWithAmsgrad": "raw_ops/resourceapplyadamwithamsgrad.html", "tf.raw_ops.ResourceApplyAddSign": "raw_ops/resourceapplyaddsign.html", "tf.raw_ops.ResourceApplyCenteredRMSProp": "raw_ops/resourceapplycenteredrmsprop.html", "tf.raw_ops.ResourceApplyFtrl": "raw_ops/resourceapplyftrl.html", "tf.raw_ops.ResourceApplyFtrlV2": "raw_ops/resourceapplyftrlv2.html", "tf.raw_ops.ResourceApplyGradientDescent": "raw_ops/resourceapplygradientdescent.html", "tf.raw_ops.ResourceApplyKerasMomentum": "raw_ops/resourceapplykerasmomentum.html", "tf.raw_ops.ResourceApplyMomentum": "raw_ops/resourceapplymomentum.html", "tf.raw_ops.ResourceApplyPowerSign": "raw_ops/resourceapplypowersign.html", "tf.raw_ops.ResourceApplyProximalAdagrad": "raw_ops/resourceapplyproximaladagrad.html", "tf.raw_ops.ResourceApplyProximalGradientDescent": "raw_ops/resourceapplyproximalgradientdescent.html", "tf.raw_ops.ResourceApplyRMSProp": "raw_ops/resourceapplyrmsprop.html", "tf.raw_ops.ResourceConditionalAccumulator": "raw_ops/resourceconditionalaccumulator.html", "tf.raw_ops.ResourceCountUpTo": "raw_ops/resourcecountupto.html", "tf.raw_ops.ResourceGather": "raw_ops/resourcegather.html", "tf.raw_ops.ResourceGatherNd": "raw_ops/resourcegathernd.html", "tf.raw_ops.ResourceScatterAdd": "raw_ops/resourcescatteradd.html", "tf.raw_ops.ResourceScatterDiv": "raw_ops/resourcescatterdiv.html", "tf.raw_ops.ResourceScatterMax": "raw_ops/resourcescattermax.html", "tf.raw_ops.ResourceScatterMin": "raw_ops/resourcescattermin.html", "tf.raw_ops.ResourceScatterMul": "raw_ops/resourcescattermul.html", "tf.raw_ops.ResourceScatterNdAdd": "raw_ops/resourcescatterndadd.html", "tf.raw_ops.ResourceScatterNdMax": "raw_ops/resourcescatterndmax.html", "tf.raw_ops.ResourceScatterNdMin": "raw_ops/resourcescatterndmin.html", "tf.raw_ops.ResourceScatterNdSub": "raw_ops/resourcescatterndsub.html", "tf.raw_ops.ResourceScatterNdUpdate": "raw_ops/resourcescatterndupdate.html", "tf.raw_ops.ResourceScatterSub": "raw_ops/resourcescattersub.html", "tf.raw_ops.ResourceScatterUpdate": "raw_ops/resourcescatterupdate.html", "tf.raw_ops.ResourceSparseApplyAdadelta": "raw_ops/resourcesparseapplyadadelta.html", "tf.raw_ops.ResourceSparseApplyAdagrad": "raw_ops/resourcesparseapplyadagrad.html", "tf.raw_ops.ResourceSparseApplyAdagradDA": "raw_ops/resourcesparseapplyadagradda.html", "tf.raw_ops.ResourceSparseApplyAdagradV2": "raw_ops/resourcesparseapplyadagradv2.html", "tf.raw_ops.ResourceSparseApplyCenteredRMSProp": "raw_ops/resourcesparseapplycenteredrmsprop.html", "tf.raw_ops.ResourceSparseApplyFtrl": "raw_ops/resourcesparseapplyftrl.html", "tf.raw_ops.ResourceSparseApplyFtrlV2": "raw_ops/resourcesparseapplyftrlv2.html", "tf.raw_ops.ResourceSparseApplyKerasMomentum": "raw_ops/resourcesparseapplykerasmomentum.html", "tf.raw_ops.ResourceSparseApplyMomentum": "raw_ops/resourcesparseapplymomentum.html", "tf.raw_ops.ResourceSparseApplyProximalAdagrad": "raw_ops/resourcesparseapplyproximaladagrad.html", "tf.raw_ops.ResourceSparseApplyProximalGradientDescent": "raw_ops/resourcesparseapplyproximalgradientdescent.html", "tf.raw_ops.ResourceSparseApplyRMSProp": "raw_ops/resourcesparseapplyrmsprop.html", "tf.raw_ops.ResourceStridedSliceAssign": "raw_ops/resourcestridedsliceassign.html", "tf.raw_ops.Restore": "raw_ops/restore.html", "tf.raw_ops.RestoreSlice": "raw_ops/restoreslice.html", "tf.raw_ops.RestoreV2": "raw_ops/restorev2.html", "tf.raw_ops.RetrieveTPUEmbeddingAdadeltaParameters": "raw_ops/retrievetpuembeddingadadeltaparameters.html", "tf.raw_ops.RetrieveTPUEmbeddingAdagradMomentumParameters": "raw_ops/retrievetpuembeddingadagradmomentumparameters.html", "tf.raw_ops.RetrieveTPUEmbeddingAdagradParameters": "raw_ops/retrievetpuembeddingadagradparameters.html", "tf.raw_ops.RetrieveTPUEmbeddingADAMParameters": "raw_ops/retrievetpuembeddingadamparameters.html", "tf.raw_ops.RetrieveTPUEmbeddingCenteredRMSPropParameters": "raw_ops/retrievetpuembeddingcenteredrmspropparameters.html", "tf.raw_ops.RetrieveTPUEmbeddingFrequencyEstimatorParameters": "raw_ops/retrievetpuembeddingfrequencyestimatorparameters.html", "tf.raw_ops.RetrieveTPUEmbeddingFTRLParameters": "raw_ops/retrievetpuembeddingftrlparameters.html", "tf.raw_ops.RetrieveTPUEmbeddingMDLAdagradLightParameters": "raw_ops/retrievetpuembeddingmdladagradlightparameters.html", "tf.raw_ops.RetrieveTPUEmbeddingMomentumParameters": "raw_ops/retrievetpuembeddingmomentumparameters.html", "tf.raw_ops.RetrieveTPUEmbeddingProximalAdagradParameters": "raw_ops/retrievetpuembeddingproximaladagradparameters.html", "tf.raw_ops.RetrieveTPUEmbeddingProximalYogiParameters": "raw_ops/retrievetpuembeddingproximalyogiparameters.html", "tf.raw_ops.RetrieveTPUEmbeddingRMSPropParameters": "raw_ops/retrievetpuembeddingrmspropparameters.html", "tf.raw_ops.RetrieveTPUEmbeddingStochasticGradientDescentParameters": "raw_ops/retrievetpuembeddingstochasticgradientdescentparameters.html", "tf.raw_ops.Reverse": "raw_ops/reverse.html", "tf.raw_ops.ReverseSequence": "raw_ops/reversesequence.html", "tf.raw_ops.ReverseV2": "raw_ops/reversev2.html", "tf.raw_ops.RFFT": "raw_ops/rfft.html", "tf.raw_ops.RFFT2D": "raw_ops/rfft2d.html", "tf.raw_ops.RFFT3D": "raw_ops/rfft3d.html", "tf.raw_ops.RGBToHSV": "raw_ops/rgbtohsv.html", "tf.raw_ops.RightShift": "raw_ops/rightshift.html", "tf.raw_ops.Rint": "raw_ops/rint.html", "tf.raw_ops.RngReadAndSkip": "raw_ops/rngreadandskip.html", "tf.raw_ops.RngSkip": "raw_ops/rngskip.html", "tf.raw_ops.Roll": "raw_ops/roll.html", "tf.raw_ops.Round": "raw_ops/round.html", "tf.raw_ops.Rsqrt": "raw_ops/rsqrt.html", "tf.raw_ops.RsqrtGrad": "raw_ops/rsqrtgrad.html", "tf.raw_ops.SampleDistortedBoundingBox": "raw_ops/sampledistortedboundingbox.html", "tf.raw_ops.SampleDistortedBoundingBoxV2": "raw_ops/sampledistortedboundingboxv2.html", "tf.raw_ops.SamplingDataset": "raw_ops/samplingdataset.html", "tf.raw_ops.Save": "raw_ops/save.html", "tf.raw_ops.SaveDataset": "raw_ops/savedataset.html", "tf.raw_ops.SaveDatasetV2": "raw_ops/savedatasetv2.html", "tf.raw_ops.SaveSlices": "raw_ops/saveslices.html", "tf.raw_ops.SaveV2": "raw_ops/savev2.html", "tf.raw_ops.ScalarSummary": "raw_ops/scalarsummary.html", "tf.raw_ops.ScaleAndTranslate": "raw_ops/scaleandtranslate.html", "tf.raw_ops.ScaleAndTranslateGrad": "raw_ops/scaleandtranslategrad.html", "tf.raw_ops.ScanDataset": "raw_ops/scandataset.html", "tf.raw_ops.ScatterAdd": "raw_ops/scatteradd.html", "tf.raw_ops.ScatterDiv": "raw_ops/scatterdiv.html", "tf.raw_ops.ScatterMax": "raw_ops/scattermax.html", "tf.raw_ops.ScatterMin": "raw_ops/scattermin.html", "tf.raw_ops.ScatterMul": "raw_ops/scattermul.html", "tf.raw_ops.ScatterNd": "raw_ops/scatternd.html", "tf.raw_ops.ScatterNdAdd": "raw_ops/scatterndadd.html", "tf.raw_ops.ScatterNdMax": "raw_ops/scatterndmax.html", "tf.raw_ops.ScatterNdMin": "raw_ops/scatterndmin.html", "tf.raw_ops.ScatterNdNonAliasingAdd": "raw_ops/scatterndnonaliasingadd.html", "tf.raw_ops.ScatterNdSub": "raw_ops/scatterndsub.html", "tf.raw_ops.ScatterNdUpdate": "raw_ops/scatterndupdate.html", "tf.raw_ops.ScatterSub": "raw_ops/scattersub.html", "tf.raw_ops.ScatterUpdate": "raw_ops/scatterupdate.html", "tf.raw_ops.SdcaFprint": "raw_ops/sdcafprint.html", "tf.raw_ops.SdcaOptimizer": "raw_ops/sdcaoptimizer.html", "tf.raw_ops.SdcaOptimizerV2": "raw_ops/sdcaoptimizerv2.html", "tf.raw_ops.SdcaShrinkL1": "raw_ops/sdcashrinkl1.html", "tf.raw_ops.SegmentMax": "raw_ops/segmentmax.html", "tf.raw_ops.SegmentMean": "raw_ops/segmentmean.html", "tf.raw_ops.SegmentMin": "raw_ops/segmentmin.html", "tf.raw_ops.SegmentProd": "raw_ops/segmentprod.html", "tf.raw_ops.SegmentSum": "raw_ops/segmentsum.html", "tf.raw_ops.Select": "raw_ops/select.html", "tf.raw_ops.SelectV2": "raw_ops/selectv2.html", "tf.raw_ops.SelfAdjointEig": "raw_ops/selfadjointeig.html", "tf.raw_ops.SelfAdjointEigV2": "raw_ops/selfadjointeigv2.html", "tf.raw_ops.Selu": "raw_ops/selu.html", "tf.raw_ops.SeluGrad": "raw_ops/selugrad.html", "tf.raw_ops.Send": "raw_ops/send.html", "tf.raw_ops.SendTPUEmbeddingGradients": "raw_ops/sendtpuembeddinggradients.html", "tf.raw_ops.SerializeIterator": "raw_ops/serializeiterator.html", "tf.raw_ops.SerializeManySparse": "raw_ops/serializemanysparse.html", "tf.raw_ops.SerializeSparse": "raw_ops/serializesparse.html", "tf.raw_ops.SerializeTensor": "raw_ops/serializetensor.html", "tf.raw_ops.SetSize": "raw_ops/setsize.html", "tf.raw_ops.SetStatsAggregatorDataset": "raw_ops/setstatsaggregatordataset.html", "tf.raw_ops.Shape": "raw_ops/shape.html", "tf.raw_ops.ShapeN": "raw_ops/shapen.html", "tf.raw_ops.ShardDataset": "raw_ops/sharddataset.html", "tf.raw_ops.ShardedFilename": "raw_ops/shardedfilename.html", "tf.raw_ops.ShardedFilespec": "raw_ops/shardedfilespec.html", "tf.raw_ops.ShuffleAndRepeatDataset": "raw_ops/shuffleandrepeatdataset.html", "tf.raw_ops.ShuffleAndRepeatDatasetV2": "raw_ops/shuffleandrepeatdatasetv2.html", "tf.raw_ops.ShuffleDataset": "raw_ops/shuffledataset.html", "tf.raw_ops.ShuffleDatasetV2": "raw_ops/shuffledatasetv2.html", "tf.raw_ops.ShuffleDatasetV3": "raw_ops/shuffledatasetv3.html", "tf.raw_ops.ShutdownDistributedTPU": "raw_ops/shutdowndistributedtpu.html", "tf.raw_ops.Sigmoid": "raw_ops/sigmoid.html", "tf.raw_ops.SigmoidGrad": "raw_ops/sigmoidgrad.html", "tf.raw_ops.Sign": "raw_ops/sign.html", "tf.raw_ops.Sin": "raw_ops/sin.html", "tf.raw_ops.Sinh": "raw_ops/sinh.html", "tf.raw_ops.Size": "raw_ops/size.html", "tf.raw_ops.SkipDataset": "raw_ops/skipdataset.html", "tf.raw_ops.SleepDataset": "raw_ops/sleepdataset.html", "tf.raw_ops.Slice": "raw_ops/slice.html", "tf.raw_ops.SlidingWindowDataset": "raw_ops/slidingwindowdataset.html", "tf.raw_ops.Snapshot": "raw_ops/snapshot.html", "tf.raw_ops.SnapshotDataset": "raw_ops/snapshotdataset.html", "tf.raw_ops.SnapshotDatasetReader": "raw_ops/snapshotdatasetreader.html", "tf.raw_ops.SnapshotDatasetV2": "raw_ops/snapshotdatasetv2.html", "tf.raw_ops.SnapshotNestedDatasetReader": "raw_ops/snapshotnesteddatasetreader.html", "tf.raw_ops.SobolSample": "raw_ops/sobolsample.html", "tf.raw_ops.Softmax": "raw_ops/softmax.html", "tf.raw_ops.SoftmaxCrossEntropyWithLogits": "raw_ops/softmaxcrossentropywithlogits.html", "tf.raw_ops.Softplus": "raw_ops/softplus.html", "tf.raw_ops.SoftplusGrad": "raw_ops/softplusgrad.html", "tf.raw_ops.Softsign": "raw_ops/softsign.html", "tf.raw_ops.SoftsignGrad": "raw_ops/softsigngrad.html", "tf.raw_ops.SpaceToBatch": "raw_ops/spacetobatch.html", "tf.raw_ops.SpaceToBatchND": "raw_ops/spacetobatchnd.html", "tf.raw_ops.SpaceToDepth": "raw_ops/spacetodepth.html", "tf.raw_ops.SparseAccumulatorApplyGradient": "raw_ops/sparseaccumulatorapplygradient.html", "tf.raw_ops.SparseAccumulatorTakeGradient": "raw_ops/sparseaccumulatortakegradient.html", "tf.raw_ops.SparseAdd": "raw_ops/sparseadd.html", "tf.raw_ops.SparseAddGrad": "raw_ops/sparseaddgrad.html", "tf.raw_ops.SparseApplyAdadelta": "raw_ops/sparseapplyadadelta.html", "tf.raw_ops.SparseApplyAdagrad": "raw_ops/sparseapplyadagrad.html", "tf.raw_ops.SparseApplyAdagradDA": "raw_ops/sparseapplyadagradda.html", "tf.raw_ops.SparseApplyAdagradV2": "raw_ops/sparseapplyadagradv2.html", "tf.raw_ops.SparseApplyCenteredRMSProp": "raw_ops/sparseapplycenteredrmsprop.html", "tf.raw_ops.SparseApplyFtrl": "raw_ops/sparseapplyftrl.html", "tf.raw_ops.SparseApplyFtrlV2": "raw_ops/sparseapplyftrlv2.html", "tf.raw_ops.SparseApplyMomentum": "raw_ops/sparseapplymomentum.html", "tf.raw_ops.SparseApplyProximalAdagrad": "raw_ops/sparseapplyproximaladagrad.html", "tf.raw_ops.SparseApplyProximalGradientDescent": "raw_ops/sparseapplyproximalgradientdescent.html", "tf.raw_ops.SparseApplyRMSProp": "raw_ops/sparseapplyrmsprop.html", "tf.raw_ops.SparseBincount": "raw_ops/sparsebincount.html", "tf.raw_ops.SparseConcat": "raw_ops/sparseconcat.html", "tf.raw_ops.SparseConditionalAccumulator": "raw_ops/sparseconditionalaccumulator.html", "tf.raw_ops.SparseCountSparseOutput": "raw_ops/sparsecountsparseoutput.html", "tf.raw_ops.SparseCross": "raw_ops/sparsecross.html", "tf.raw_ops.SparseCrossHashed": "raw_ops/sparsecrosshashed.html", "tf.raw_ops.SparseCrossV2": "raw_ops/sparsecrossv2.html", "tf.raw_ops.SparseDenseCwiseAdd": "raw_ops/sparsedensecwiseadd.html", "tf.raw_ops.SparseDenseCwiseDiv": "raw_ops/sparsedensecwisediv.html", "tf.raw_ops.SparseDenseCwiseMul": "raw_ops/sparsedensecwisemul.html", "tf.raw_ops.SparseFillEmptyRows": "raw_ops/sparsefillemptyrows.html", "tf.raw_ops.SparseFillEmptyRowsGrad": "raw_ops/sparsefillemptyrowsgrad.html", "tf.raw_ops.SparseMatMul": "raw_ops/sparsematmul.html", "tf.raw_ops.SparseMatrixAdd": "raw_ops/sparsematrixadd.html", "tf.raw_ops.SparseMatrixMatMul": "raw_ops/sparsematrixmatmul.html", "tf.raw_ops.SparseMatrixMul": "raw_ops/sparsematrixmul.html", "tf.raw_ops.SparseMatrixNNZ": "raw_ops/sparsematrixnnz.html", "tf.raw_ops.SparseMatrixOrderingAMD": "raw_ops/sparsematrixorderingamd.html", "tf.raw_ops.SparseMatrixSoftmax": "raw_ops/sparsematrixsoftmax.html", "tf.raw_ops.SparseMatrixSoftmaxGrad": "raw_ops/sparsematrixsoftmaxgrad.html", "tf.raw_ops.SparseMatrixSparseCholesky": "raw_ops/sparsematrixsparsecholesky.html", "tf.raw_ops.SparseMatrixSparseMatMul": "raw_ops/sparsematrixsparsematmul.html", "tf.raw_ops.SparseMatrixTranspose": "raw_ops/sparsematrixtranspose.html", "tf.raw_ops.SparseMatrixZeros": "raw_ops/sparsematrixzeros.html", "tf.raw_ops.SparseReduceMax": "raw_ops/sparsereducemax.html", "tf.raw_ops.SparseReduceMaxSparse": "raw_ops/sparsereducemaxsparse.html", "tf.raw_ops.SparseReduceSum": "raw_ops/sparsereducesum.html", "tf.raw_ops.SparseReduceSumSparse": "raw_ops/sparsereducesumsparse.html", "tf.raw_ops.SparseReorder": "raw_ops/sparsereorder.html", "tf.raw_ops.SparseReshape": "raw_ops/sparsereshape.html", "tf.raw_ops.SparseSegmentMean": "raw_ops/sparsesegmentmean.html", "tf.raw_ops.SparseSegmentMeanGrad": "raw_ops/sparsesegmentmeangrad.html", "tf.raw_ops.SparseSegmentMeanWithNumSegments": "raw_ops/sparsesegmentmeanwithnumsegments.html", "tf.raw_ops.SparseSegmentSqrtN": "raw_ops/sparsesegmentsqrtn.html", "tf.raw_ops.SparseSegmentSqrtNGrad": "raw_ops/sparsesegmentsqrtngrad.html", "tf.raw_ops.SparseSegmentSqrtNWithNumSegments": "raw_ops/sparsesegmentsqrtnwithnumsegments.html", "tf.raw_ops.SparseSegmentSum": "raw_ops/sparsesegmentsum.html", "tf.raw_ops.SparseSegmentSumGrad": "raw_ops/sparsesegmentsumgrad.html", "tf.raw_ops.SparseSegmentSumWithNumSegments": "raw_ops/sparsesegmentsumwithnumsegments.html", "tf.raw_ops.SparseSlice": "raw_ops/sparseslice.html", "tf.raw_ops.SparseSliceGrad": "raw_ops/sparseslicegrad.html", "tf.raw_ops.SparseSoftmax": "raw_ops/sparsesoftmax.html", "tf.raw_ops.SparseSoftmaxCrossEntropyWithLogits": "raw_ops/sparsesoftmaxcrossentropywithlogits.html", "tf.raw_ops.SparseSparseMaximum": "raw_ops/sparsesparsemaximum.html", "tf.raw_ops.SparseSparseMinimum": "raw_ops/sparsesparseminimum.html", "tf.raw_ops.SparseSplit": "raw_ops/sparsesplit.html", "tf.raw_ops.SparseTensorDenseAdd": "raw_ops/sparsetensordenseadd.html", "tf.raw_ops.SparseTensorDenseMatMul": "raw_ops/sparsetensordensematmul.html", "tf.raw_ops.SparseTensorSliceDataset": "raw_ops/sparsetensorslicedataset.html", "tf.raw_ops.SparseTensorToCSRSparseMatrix": "raw_ops/sparsetensortocsrsparsematrix.html", "tf.raw_ops.SparseToDense": "raw_ops/sparsetodense.html", "tf.raw_ops.SparseToSparseSetOperation": "raw_ops/sparsetosparsesetoperation.html", "tf.raw_ops.Spence": "raw_ops/spence.html", "tf.raw_ops.Split": "raw_ops/split.html", "tf.raw_ops.SplitV": "raw_ops/splitv.html", "tf.raw_ops.SqlDataset": "raw_ops/sqldataset.html", "tf.raw_ops.Sqrt": "raw_ops/sqrt.html", "tf.raw_ops.SqrtGrad": "raw_ops/sqrtgrad.html", "tf.raw_ops.Square": "raw_ops/square.html", "tf.raw_ops.SquaredDifference": "raw_ops/squareddifference.html", "tf.raw_ops.Squeeze": "raw_ops/squeeze.html", "tf.raw_ops.Stack": "raw_ops/stack.html", "tf.raw_ops.StackClose": "raw_ops/stackclose.html", "tf.raw_ops.StackCloseV2": "raw_ops/stackclosev2.html", "tf.raw_ops.StackPop": "raw_ops/stackpop.html", "tf.raw_ops.StackPopV2": "raw_ops/stackpopv2.html", "tf.raw_ops.StackPush": "raw_ops/stackpush.html", "tf.raw_ops.StackPushV2": "raw_ops/stackpushv2.html", "tf.raw_ops.StackV2": "raw_ops/stackv2.html", "tf.raw_ops.Stage": "raw_ops/stage.html", "tf.raw_ops.StageClear": "raw_ops/stageclear.html", "tf.raw_ops.StagePeek": "raw_ops/stagepeek.html", "tf.raw_ops.StageSize": "raw_ops/stagesize.html", "tf.raw_ops.StatefulPartitionedCall": "raw_ops/statefulpartitionedcall.html", "tf.raw_ops.StatefulRandomBinomial": "raw_ops/statefulrandombinomial.html", "tf.raw_ops.StatefulStandardNormal": "raw_ops/statefulstandardnormal.html", "tf.raw_ops.StatefulStandardNormalV2": "raw_ops/statefulstandardnormalv2.html", "tf.raw_ops.StatefulTruncatedNormal": "raw_ops/statefultruncatednormal.html", "tf.raw_ops.StatefulUniform": "raw_ops/statefuluniform.html", "tf.raw_ops.StatefulUniformFullInt": "raw_ops/statefuluniformfullint.html", "tf.raw_ops.StatefulUniformInt": "raw_ops/statefuluniformint.html", "tf.raw_ops.StatelessCase": "raw_ops/statelesscase.html", "tf.raw_ops.StatelessIf": "raw_ops/statelessif.html", "tf.raw_ops.StatelessMultinomial": "raw_ops/statelessmultinomial.html", "tf.raw_ops.StatelessParameterizedTruncatedNormal": "raw_ops/statelessparameterizedtruncatednormal.html", "tf.raw_ops.StatelessRandomBinomial": "raw_ops/statelessrandombinomial.html", "tf.raw_ops.StatelessRandomGammaV2": "raw_ops/statelessrandomgammav2.html", "tf.raw_ops.StatelessRandomGetAlg": "raw_ops/statelessrandomgetalg.html", "tf.raw_ops.StatelessRandomGetKeyCounter": "raw_ops/statelessrandomgetkeycounter.html", "tf.raw_ops.StatelessRandomGetKeyCounterAlg": "raw_ops/statelessrandomgetkeycounteralg.html", "tf.raw_ops.StatelessRandomNormal": "raw_ops/statelessrandomnormal.html", "tf.raw_ops.StatelessRandomNormalV2": "raw_ops/statelessrandomnormalv2.html", "tf.raw_ops.StatelessRandomPoisson": "raw_ops/statelessrandompoisson.html", "tf.raw_ops.StatelessRandomUniform": "raw_ops/statelessrandomuniform.html", "tf.raw_ops.StatelessRandomUniformFullInt": "raw_ops/statelessrandomuniformfullint.html", "tf.raw_ops.StatelessRandomUniformFullIntV2": "raw_ops/statelessrandomuniformfullintv2.html", "tf.raw_ops.StatelessRandomUniformInt": "raw_ops/statelessrandomuniformint.html", "tf.raw_ops.StatelessRandomUniformIntV2": "raw_ops/statelessrandomuniformintv2.html", "tf.raw_ops.StatelessRandomUniformV2": "raw_ops/statelessrandomuniformv2.html", "tf.raw_ops.StatelessSampleDistortedBoundingBox": "raw_ops/statelesssampledistortedboundingbox.html", "tf.raw_ops.StatelessTruncatedNormal": "raw_ops/statelesstruncatednormal.html", "tf.raw_ops.StatelessTruncatedNormalV2": "raw_ops/statelesstruncatednormalv2.html", "tf.raw_ops.StatelessWhile": "raw_ops/statelesswhile.html", "tf.raw_ops.StaticRegexFullMatch": "raw_ops/staticregexfullmatch.html", "tf.raw_ops.StaticRegexReplace": "raw_ops/staticregexreplace.html", "tf.raw_ops.StatsAggregatorHandle": "raw_ops/statsaggregatorhandle.html", "tf.raw_ops.StatsAggregatorHandleV2": "raw_ops/statsaggregatorhandlev2.html", "tf.raw_ops.StatsAggregatorSetSummaryWriter": "raw_ops/statsaggregatorsetsummarywriter.html", "tf.raw_ops.StatsAggregatorSummary": "raw_ops/statsaggregatorsummary.html", "tf.raw_ops.StopGradient": "raw_ops/stopgradient.html", "tf.raw_ops.StridedSlice": "raw_ops/stridedslice.html", "tf.raw_ops.StridedSliceAssign": "raw_ops/stridedsliceassign.html", "tf.raw_ops.StridedSliceGrad": "raw_ops/stridedslicegrad.html", "tf.raw_ops.StringFormat": "raw_ops/stringformat.html", "tf.raw_ops.StringJoin": "raw_ops/stringjoin.html", "tf.raw_ops.StringLength": "raw_ops/stringlength.html", "tf.raw_ops.StringLower": "raw_ops/stringlower.html", "tf.raw_ops.StringNGrams": "raw_ops/stringngrams.html", "tf.raw_ops.StringSplit": "raw_ops/stringsplit.html", "tf.raw_ops.StringSplitV2": "raw_ops/stringsplitv2.html", "tf.raw_ops.StringStrip": "raw_ops/stringstrip.html", "tf.raw_ops.StringToHashBucket": "raw_ops/stringtohashbucket.html", "tf.raw_ops.StringToHashBucketFast": "raw_ops/stringtohashbucketfast.html", "tf.raw_ops.StringToHashBucketStrong": "raw_ops/stringtohashbucketstrong.html", "tf.raw_ops.StringToNumber": "raw_ops/stringtonumber.html", "tf.raw_ops.StringUpper": "raw_ops/stringupper.html", "tf.raw_ops.Sub": "raw_ops/sub.html", "tf.raw_ops.Substr": "raw_ops/substr.html", "tf.raw_ops.Sum": "raw_ops/sum.html", "tf.raw_ops.SummaryWriter": "raw_ops/summarywriter.html", "tf.raw_ops.Svd": "raw_ops/svd.html", "tf.raw_ops.Switch": "raw_ops/switch.html", "tf.raw_ops.SymbolicGradient": "raw_ops/symbolicgradient.html", "tf.raw_ops.TakeDataset": "raw_ops/takedataset.html", "tf.raw_ops.TakeManySparseFromTensorsMap": "raw_ops/takemanysparsefromtensorsmap.html", "tf.raw_ops.TakeWhileDataset": "raw_ops/takewhiledataset.html", "tf.raw_ops.Tan": "raw_ops/tan.html", "tf.raw_ops.Tanh": "raw_ops/tanh.html", "tf.raw_ops.TanhGrad": "raw_ops/tanhgrad.html", "tf.raw_ops.TemporaryVariable": "raw_ops/temporaryvariable.html", "tf.raw_ops.TensorArray": "raw_ops/tensorarray.html", "tf.raw_ops.TensorArrayClose": "raw_ops/tensorarrayclose.html", "tf.raw_ops.TensorArrayCloseV2": "raw_ops/tensorarrayclosev2.html", "tf.raw_ops.TensorArrayCloseV3": "raw_ops/tensorarrayclosev3.html", "tf.raw_ops.TensorArrayConcat": "raw_ops/tensorarrayconcat.html", "tf.raw_ops.TensorArrayConcatV2": "raw_ops/tensorarrayconcatv2.html", "tf.raw_ops.TensorArrayConcatV3": "raw_ops/tensorarrayconcatv3.html", "tf.raw_ops.TensorArrayGather": "raw_ops/tensorarraygather.html", "tf.raw_ops.TensorArrayGatherV2": "raw_ops/tensorarraygatherv2.html", "tf.raw_ops.TensorArrayGatherV3": "raw_ops/tensorarraygatherv3.html", "tf.raw_ops.TensorArrayGrad": "raw_ops/tensorarraygrad.html", "tf.raw_ops.TensorArrayGradV2": "raw_ops/tensorarraygradv2.html", "tf.raw_ops.TensorArrayGradV3": "raw_ops/tensorarraygradv3.html", "tf.raw_ops.TensorArrayGradWithShape": "raw_ops/tensorarraygradwithshape.html", "tf.raw_ops.TensorArrayPack": "raw_ops/tensorarraypack.html", "tf.raw_ops.TensorArrayRead": "raw_ops/tensorarrayread.html", "tf.raw_ops.TensorArrayReadV2": "raw_ops/tensorarrayreadv2.html", "tf.raw_ops.TensorArrayReadV3": "raw_ops/tensorarrayreadv3.html", "tf.raw_ops.TensorArrayScatter": "raw_ops/tensorarrayscatter.html", "tf.raw_ops.TensorArrayScatterV2": "raw_ops/tensorarrayscatterv2.html", "tf.raw_ops.TensorArrayScatterV3": "raw_ops/tensorarrayscatterv3.html", "tf.raw_ops.TensorArraySize": "raw_ops/tensorarraysize.html", "tf.raw_ops.TensorArraySizeV2": "raw_ops/tensorarraysizev2.html", "tf.raw_ops.TensorArraySizeV3": "raw_ops/tensorarraysizev3.html", "tf.raw_ops.TensorArraySplit": "raw_ops/tensorarraysplit.html", "tf.raw_ops.TensorArraySplitV2": "raw_ops/tensorarraysplitv2.html", "tf.raw_ops.TensorArraySplitV3": "raw_ops/tensorarraysplitv3.html", "tf.raw_ops.TensorArrayUnpack": "raw_ops/tensorarrayunpack.html", "tf.raw_ops.TensorArrayV2": "raw_ops/tensorarrayv2.html", "tf.raw_ops.TensorArrayV3": "raw_ops/tensorarrayv3.html", "tf.raw_ops.TensorArrayWrite": "raw_ops/tensorarraywrite.html", "tf.raw_ops.TensorArrayWriteV2": "raw_ops/tensorarraywritev2.html", "tf.raw_ops.TensorArrayWriteV3": "raw_ops/tensorarraywritev3.html", "tf.raw_ops.TensorDataset": "raw_ops/tensordataset.html", "tf.raw_ops.TensorListConcat": "raw_ops/tensorlistconcat.html", "tf.raw_ops.TensorListConcatLists": "raw_ops/tensorlistconcatlists.html", "tf.raw_ops.TensorListConcatV2": "raw_ops/tensorlistconcatv2.html", "tf.raw_ops.TensorListElementShape": "raw_ops/tensorlistelementshape.html", "tf.raw_ops.TensorListFromTensor": "raw_ops/tensorlistfromtensor.html", "tf.raw_ops.TensorListGather": "raw_ops/tensorlistgather.html", "tf.raw_ops.TensorListGetItem": "raw_ops/tensorlistgetitem.html", "tf.raw_ops.TensorListLength": "raw_ops/tensorlistlength.html", "tf.raw_ops.TensorListPopBack": "raw_ops/tensorlistpopback.html", "tf.raw_ops.TensorListPushBack": "raw_ops/tensorlistpushback.html", "tf.raw_ops.TensorListPushBackBatch": "raw_ops/tensorlistpushbackbatch.html", "tf.raw_ops.TensorListReserve": "raw_ops/tensorlistreserve.html", "tf.raw_ops.TensorListResize": "raw_ops/tensorlistresize.html", "tf.raw_ops.TensorListScatter": "raw_ops/tensorlistscatter.html", "tf.raw_ops.TensorListScatterIntoExistingList": "raw_ops/tensorlistscatterintoexistinglist.html", "tf.raw_ops.TensorListScatterV2": "raw_ops/tensorlistscatterv2.html", "tf.raw_ops.TensorListSetItem": "raw_ops/tensorlistsetitem.html", "tf.raw_ops.TensorListSplit": "raw_ops/tensorlistsplit.html", "tf.raw_ops.TensorListStack": "raw_ops/tensorliststack.html", "tf.raw_ops.TensorScatterAdd": "raw_ops/tensorscatteradd.html", "tf.raw_ops.TensorScatterMax": "raw_ops/tensorscattermax.html", "tf.raw_ops.TensorScatterMin": "raw_ops/tensorscattermin.html", "tf.raw_ops.TensorScatterSub": "raw_ops/tensorscattersub.html", "tf.raw_ops.TensorScatterUpdate": "raw_ops/tensorscatterupdate.html", "tf.raw_ops.TensorSliceDataset": "raw_ops/tensorslicedataset.html", "tf.raw_ops.TensorStridedSliceUpdate": "raw_ops/tensorstridedsliceupdate.html", "tf.raw_ops.TensorSummary": "raw_ops/tensorsummary.html", "tf.raw_ops.TensorSummaryV2": "raw_ops/tensorsummaryv2.html", "tf.raw_ops.TextLineDataset": "raw_ops/textlinedataset.html", "tf.raw_ops.TextLineReader": "raw_ops/textlinereader.html", "tf.raw_ops.TextLineReaderV2": "raw_ops/textlinereaderv2.html", "tf.raw_ops.TFRecordDataset": "raw_ops/tfrecorddataset.html", "tf.raw_ops.TFRecordReader": "raw_ops/tfrecordreader.html", "tf.raw_ops.TFRecordReaderV2": "raw_ops/tfrecordreaderv2.html", "tf.raw_ops.ThreadPoolDataset": "raw_ops/threadpooldataset.html", "tf.raw_ops.ThreadPoolHandle": "raw_ops/threadpoolhandle.html", "tf.raw_ops.ThreadUnsafeUnigramCandidateSampler": "raw_ops/threadunsafeunigramcandidatesampler.html", "tf.raw_ops.Tile": "raw_ops/tile.html", "tf.raw_ops.TileGrad": "raw_ops/tilegrad.html", "tf.raw_ops.Timestamp": "raw_ops/timestamp.html", "tf.raw_ops.ToBool": "raw_ops/tobool.html", "tf.raw_ops.TopK": "raw_ops/topk.html", "tf.raw_ops.TopKV2": "raw_ops/topkv2.html", "tf.raw_ops.TPUCompilationResult": "raw_ops/tpucompilationresult.html", "tf.raw_ops.TPUEmbeddingActivations": "raw_ops/tpuembeddingactivations.html", "tf.raw_ops.TPUOrdinalSelector": "raw_ops/tpuordinalselector.html", "tf.raw_ops.TPUPartitionedCall": "raw_ops/tpupartitionedcall.html", "tf.raw_ops.TPUPartitionedInput": "raw_ops/tpupartitionedinput.html", "tf.raw_ops.TPUPartitionedOutput": "raw_ops/tpupartitionedoutput.html", "tf.raw_ops.TPUReplicatedInput": "raw_ops/tpureplicatedinput.html", "tf.raw_ops.TPUReplicatedOutput": "raw_ops/tpureplicatedoutput.html", "tf.raw_ops.TPUReplicateMetadata": "raw_ops/tpureplicatemetadata.html", "tf.raw_ops.Transpose": "raw_ops/transpose.html", "tf.raw_ops.TridiagonalMatMul": "raw_ops/tridiagonalmatmul.html", "tf.raw_ops.TridiagonalSolve": "raw_ops/tridiagonalsolve.html", "tf.raw_ops.TruncateDiv": "raw_ops/truncatediv.html", "tf.raw_ops.TruncatedNormal": "raw_ops/truncatednormal.html", "tf.raw_ops.TruncateMod": "raw_ops/truncatemod.html", "tf.raw_ops.Unbatch": "raw_ops/unbatch.html", "tf.raw_ops.UnbatchDataset": "raw_ops/unbatchdataset.html", "tf.raw_ops.UnbatchGrad": "raw_ops/unbatchgrad.html", "tf.raw_ops.UncompressElement": "raw_ops/uncompresselement.html", "tf.raw_ops.UnicodeDecode": "raw_ops/unicodedecode.html", "tf.raw_ops.UnicodeDecodeWithOffsets": "raw_ops/unicodedecodewithoffsets.html", "tf.raw_ops.UnicodeEncode": "raw_ops/unicodeencode.html", "tf.raw_ops.UnicodeScript": "raw_ops/unicodescript.html", "tf.raw_ops.UnicodeTranscode": "raw_ops/unicodetranscode.html", "tf.raw_ops.UniformCandidateSampler": "raw_ops/uniformcandidatesampler.html", "tf.raw_ops.Unique": "raw_ops/unique.html", "tf.raw_ops.UniqueDataset": "raw_ops/uniquedataset.html", "tf.raw_ops.UniqueV2": "raw_ops/uniquev2.html", "tf.raw_ops.UniqueWithCounts": "raw_ops/uniquewithcounts.html", "tf.raw_ops.UniqueWithCountsV2": "raw_ops/uniquewithcountsv2.html", "tf.raw_ops.Unpack": "raw_ops/unpack.html", "tf.raw_ops.UnravelIndex": "raw_ops/unravelindex.html", "tf.raw_ops.UnsortedSegmentJoin": "raw_ops/unsortedsegmentjoin.html", "tf.raw_ops.UnsortedSegmentMax": "raw_ops/unsortedsegmentmax.html", "tf.raw_ops.UnsortedSegmentMin": "raw_ops/unsortedsegmentmin.html", "tf.raw_ops.UnsortedSegmentProd": "raw_ops/unsortedsegmentprod.html", "tf.raw_ops.UnsortedSegmentSum": "raw_ops/unsortedsegmentsum.html", "tf.raw_ops.Unstage": "raw_ops/unstage.html", "tf.raw_ops.UnwrapDatasetVariant": "raw_ops/unwrapdatasetvariant.html", "tf.raw_ops.UpperBound": "raw_ops/upperbound.html", "tf.raw_ops.VarHandleOp": "raw_ops/varhandleop.html", "tf.raw_ops.Variable": "raw_ops/variable.html", "tf.raw_ops.VariableShape": "raw_ops/variableshape.html", "tf.raw_ops.VariableV2": "raw_ops/variablev2.html", "tf.raw_ops.VarIsInitializedOp": "raw_ops/varisinitializedop.html", "tf.raw_ops.Where": "raw_ops/where.html", "tf.raw_ops.While": "raw_ops/while.html", "tf.raw_ops.WholeFileReader": "raw_ops/wholefilereader.html", "tf.raw_ops.WholeFileReaderV2": "raw_ops/wholefilereaderv2.html", "tf.raw_ops.WindowDataset": "raw_ops/windowdataset.html", "tf.raw_ops.WindowOp": "raw_ops/windowop.html", "tf.raw_ops.WorkerHeartbeat": "raw_ops/workerheartbeat.html", "tf.raw_ops.WrapDatasetVariant": "raw_ops/wrapdatasetvariant.html", "tf.raw_ops.WriteAudioSummary": "raw_ops/writeaudiosummary.html", "tf.raw_ops.WriteFile": "raw_ops/writefile.html", "tf.raw_ops.WriteGraphSummary": "raw_ops/writegraphsummary.html", "tf.raw_ops.WriteHistogramSummary": "raw_ops/writehistogramsummary.html", "tf.raw_ops.WriteImageSummary": "raw_ops/writeimagesummary.html", "tf.raw_ops.WriteRawProtoSummary": "raw_ops/writerawprotosummary.html", "tf.raw_ops.WriteScalarSummary": "raw_ops/writescalarsummary.html", "tf.raw_ops.WriteSummary": "raw_ops/writesummary.html", "tf.raw_ops.Xdivy": "raw_ops/xdivy.html", "tf.raw_ops.XlaConcatND": "raw_ops/xlaconcatnd.html", "tf.raw_ops.XlaSplitND": "raw_ops/xlasplitnd.html", "tf.raw_ops.Xlog1py": "raw_ops/xlog1py.html", "tf.raw_ops.Xlogy": "raw_ops/xlogy.html", "tf.raw_ops.ZerosLike": "raw_ops/zeroslike.html", "tf.raw_ops.Zeta": "raw_ops/zeta.html", "tf.raw_ops.ZipDataset": "raw_ops/zipdataset.html", "tf.realdiv": "realdiv.html", "tf.recompute_grad": "recompute_grad.html", "tf.register_tensor_conversion_function": "register_tensor_conversion_function.html", "tf.RegisterGradient": "registergradient.html", "tf.repeat": "repeat.html", "tf.required_space_to_batch_paddings": "required_space_to_batch_paddings.html", "tf.reshape": "reshape.html", "tf.reverse": "reverse.html", "tf.reverse_sequence": "reverse_sequence.html", "tf.roll": "roll.html", "tf.saved_model": "saved_model.html", "tf.saved_model.Asset": "saved_model/asset.html", "tf.saved_model.contains_saved_model": "saved_model/contains_saved_model.html", "tf.saved_model.experimental": "saved_model/experimental.html", "tf.saved_model.experimental.TrackableResource": "saved_model/experimental/trackableresource.html", "tf.saved_model.experimental.VariablePolicy": "saved_model/experimental/variablepolicy.html", "tf.saved_model.load": "saved_model/load.html", "tf.saved_model.LoadOptions": "saved_model/loadoptions.html", "tf.saved_model.save": "saved_model/save.html", "tf.saved_model.SaveOptions": "saved_model/saveoptions.html", "tf.scan": "scan.html", "tf.scatter_nd": "scatter_nd.html", "tf.searchsorted": "searchsorted.html", "tf.sequence_mask": "sequence_mask.html", "tf.sets": "sets.html", "tf.sets.difference": "sets/difference.html", "tf.sets.intersection": "sets/intersection.html", "tf.sets.size": "sets/size.html", "tf.sets.union": "sets/union.html", "tf.shape": "shape.html", "tf.shape_n": "shape_n.html", "tf.signal": "signal.html", "tf.signal.dct": "signal/dct.html", "tf.signal.fft": "signal/fft.html", "tf.signal.fft2d": "signal/fft2d.html", "tf.signal.fft3d": "signal/fft3d.html", "tf.signal.fftshift": "signal/fftshift.html", "tf.signal.frame": "signal/frame.html", "tf.signal.hamming_window": "signal/hamming_window.html", "tf.signal.hann_window": "signal/hann_window.html", "tf.signal.idct": "signal/idct.html", "tf.signal.ifft": "signal/ifft.html", "tf.signal.ifft2d": "signal/ifft2d.html", "tf.signal.ifft3d": "signal/ifft3d.html", "tf.signal.ifftshift": "signal/ifftshift.html", "tf.signal.inverse_mdct": "signal/inverse_mdct.html", "tf.signal.inverse_stft": "signal/inverse_stft.html", "tf.signal.inverse_stft_window_fn": "signal/inverse_stft_window_fn.html", "tf.signal.irfft": "signal/irfft.html", "tf.signal.irfft2d": "signal/irfft2d.html", "tf.signal.irfft3d": "signal/irfft3d.html", "tf.signal.kaiser_bessel_derived_window": "signal/kaiser_bessel_derived_window.html", "tf.signal.kaiser_window": "signal/kaiser_window.html", "tf.signal.linear_to_mel_weight_matrix": "signal/linear_to_mel_weight_matrix.html", "tf.signal.mdct": "signal/mdct.html", "tf.signal.mfccs_from_log_mel_spectrograms": "signal/mfccs_from_log_mel_spectrograms.html", "tf.signal.overlap_and_add": "signal/overlap_and_add.html", "tf.signal.rfft": "signal/rfft.html", "tf.signal.rfft2d": "signal/rfft2d.html", "tf.signal.rfft3d": "signal/rfft3d.html", "tf.signal.stft": "signal/stft.html", "tf.signal.vorbis_window": "signal/vorbis_window.html", "tf.size": "size.html", "tf.slice": "slice.html", "tf.sort": "sort.html", "tf.space_to_batch": "space_to_batch.html", "tf.space_to_batch_nd": "space_to_batch_nd.html", "tf.sparse": "sparse.html", "tf.sparse.add": "sparse/add.html", "tf.sparse.bincount": "sparse/bincount.html", "tf.sparse.concat": "sparse/concat.html", "tf.sparse.cross": "sparse/cross.html", "tf.sparse.cross_hashed": "sparse/cross_hashed.html", "tf.sparse.expand_dims": "sparse/expand_dims.html", "tf.sparse.eye": "sparse/eye.html", "tf.sparse.fill_empty_rows": "sparse/fill_empty_rows.html", "tf.sparse.from_dense": "sparse/from_dense.html", "tf.sparse.map_values": "sparse/map_values.html", "tf.sparse.mask": "sparse/mask.html", "tf.sparse.maximum": "sparse/maximum.html", "tf.sparse.minimum": "sparse/minimum.html", "tf.sparse.reduce_max": "sparse/reduce_max.html", "tf.sparse.reduce_sum": "sparse/reduce_sum.html", "tf.sparse.reorder": "sparse/reorder.html", "tf.sparse.reset_shape": "sparse/reset_shape.html", "tf.sparse.reshape": "sparse/reshape.html", "tf.sparse.retain": "sparse/retain.html", "tf.sparse.segment_mean": "sparse/segment_mean.html", "tf.sparse.segment_sqrt_n": "sparse/segment_sqrt_n.html", "tf.sparse.segment_sum": "sparse/segment_sum.html", "tf.sparse.slice": "sparse/slice.html", "tf.sparse.softmax": "sparse/softmax.html", "tf.sparse.sparse_dense_matmul": "sparse/sparse_dense_matmul.html", "tf.sparse.SparseTensor": "sparse/sparsetensor.html", "tf.sparse.split": "sparse/split.html", "tf.sparse.to_dense": "sparse/to_dense.html", "tf.sparse.to_indicator": "sparse/to_indicator.html", "tf.sparse.transpose": "sparse/transpose.html", "tf.SparseTensorSpec": "sparsetensorspec.html", "tf.split": "split.html", "tf.squeeze": "squeeze.html", "tf.stack": "stack.html", "tf.stop_gradient": "stop_gradient.html", "tf.strided_slice": "strided_slice.html", "tf.strings": "strings.html", "tf.strings.as_string": "strings/as_string.html", "tf.strings.bytes_split": "strings/bytes_split.html", "tf.strings.format": "strings/format.html", "tf.strings.join": "strings/join.html", "tf.strings.length": "strings/length.html", "tf.strings.lower": "strings/lower.html", "tf.strings.ngrams": "strings/ngrams.html", "tf.strings.reduce_join": "strings/reduce_join.html", "tf.strings.regex_full_match": "strings/regex_full_match.html", "tf.strings.regex_replace": "strings/regex_replace.html", "tf.strings.split": "strings/split.html", "tf.strings.strip": "strings/strip.html", "tf.strings.substr": "strings/substr.html", "tf.strings.to_hash_bucket": "strings/to_hash_bucket.html", "tf.strings.to_hash_bucket_fast": "strings/to_hash_bucket_fast.html", "tf.strings.to_hash_bucket_strong": "strings/to_hash_bucket_strong.html", "tf.strings.to_number": "strings/to_number.html", "tf.strings.unicode_decode": "strings/unicode_decode.html", "tf.strings.unicode_decode_with_offsets": "strings/unicode_decode_with_offsets.html", "tf.strings.unicode_encode": "strings/unicode_encode.html", "tf.strings.unicode_script": "strings/unicode_script.html", "tf.strings.unicode_split": "strings/unicode_split.html", "tf.strings.unicode_split_with_offsets": "strings/unicode_split_with_offsets.html", "tf.strings.unicode_transcode": "strings/unicode_transcode.html", "tf.strings.unsorted_segment_join": "strings/unsorted_segment_join.html", "tf.strings.upper": "strings/upper.html", "tf.summary": "summary.html", "tf.summary.audio": "summary/audio.html", "tf.summary.create_file_writer": "summary/create_file_writer.html", "tf.summary.create_noop_writer": "summary/create_noop_writer.html", "tf.summary.flush": "summary/flush.html", "tf.summary.graph": "summary/graph.html", "tf.summary.histogram": "summary/histogram.html", "tf.summary.image": "summary/image.html", "tf.summary.record_if": "summary/record_if.html", "tf.summary.scalar": "summary/scalar.html", "tf.summary.should_record_summaries": "summary/should_record_summaries.html", "tf.summary.SummaryWriter": "summary/summarywriter.html", "tf.summary.text": "summary/text.html", "tf.summary.trace_export": "summary/trace_export.html", "tf.summary.trace_off": "summary/trace_off.html", "tf.summary.trace_on": "summary/trace_on.html", "tf.summary.write": "summary/write.html", "tf.switch_case": "switch_case.html", "tf.sysconfig": "sysconfig.html", "tf.sysconfig.get_build_info": "sysconfig/get_build_info.html", "tf.sysconfig.get_compile_flags": "sysconfig/get_compile_flags.html", "tf.sysconfig.get_include": "sysconfig/get_include.html", "tf.sysconfig.get_lib": "sysconfig/get_lib.html", "tf.sysconfig.get_link_flags": "sysconfig/get_link_flags.html", "tf.Tensor": "tensor.html", "tf.tensor_scatter_nd_add": "tensor_scatter_nd_add.html", "tf.tensor_scatter_nd_max": "tensor_scatter_nd_max.html", "tf.tensor_scatter_nd_min": "tensor_scatter_nd_min.html", "tf.tensor_scatter_nd_sub": "tensor_scatter_nd_sub.html", "tf.tensor_scatter_nd_update": "tensor_scatter_nd_update.html", "tf.TensorArray": "tensorarray.html", "tf.TensorArraySpec": "tensorarrayspec.html", "tf.tensordot": "tensordot.html", "tf.TensorShape": "tensorshape.html", "tf.TensorSpec": "tensorspec.html", "tf.test": "test.html", "tf.test.assert_equal_graph_def": "test/assert_equal_graph_def.html", "tf.test.Benchmark": "test/benchmark.html", "tf.test.benchmark_config": "test/benchmark_config.html", "tf.test.compute_gradient": "test/compute_gradient.html", "tf.test.create_local_cluster": "test/create_local_cluster.html", "tf.test.disable_with_predicate": "test/disable_with_predicate.html", "tf.test.gpu_device_name": "test/gpu_device_name.html", "tf.test.is_built_with_cuda": "test/is_built_with_cuda.html", "tf.test.is_built_with_gpu_support": "test/is_built_with_gpu_support.html", "tf.test.is_built_with_rocm": "test/is_built_with_rocm.html", "tf.test.is_built_with_xla": "test/is_built_with_xla.html", "tf.test.is_gpu_available": "test/is_gpu_available.html", "tf.test.main": "test/main.html", "tf.test.TestCase": "test/testcase.html", "tf.test.TestCase.failureException": "test/testcase/failureexception.html", "tf.test.with_eager_op_as_function": "test/with_eager_op_as_function.html", "tf.tile": "tile.html", "tf.timestamp": "timestamp.html", "tf.tpu": "tpu.html", "tf.tpu.experimental": "tpu/experimental.html", "tf.tpu.experimental.DeviceAssignment": "tpu/experimental/deviceassignment.html", "tf.tpu.experimental.embedding": "tpu/experimental/embedding.html", "tf.tpu.experimental.embedding.Adagrad": "tpu/experimental/embedding/adagrad.html", "tf.tpu.experimental.embedding.AdagradMomentum": "tpu/experimental/embedding/adagradmomentum.html", "tf.tpu.experimental.embedding.Adam": "tpu/experimental/embedding/adam.html", "tf.tpu.experimental.embedding.FeatureConfig": "tpu/experimental/embedding/featureconfig.html", "tf.tpu.experimental.embedding.FTRL": "tpu/experimental/embedding/ftrl.html", "tf.tpu.experimental.embedding.serving_embedding_lookup": "tpu/experimental/embedding/serving_embedding_lookup.html", "tf.tpu.experimental.embedding.SGD": "tpu/experimental/embedding/sgd.html", "tf.tpu.experimental.embedding.TableConfig": "tpu/experimental/embedding/tableconfig.html", "tf.tpu.experimental.embedding.TPUEmbedding": "tpu/experimental/embedding/tpuembedding.html", "tf.tpu.experimental.embedding.TPUEmbeddingForServing": "tpu/experimental/embedding/tpuembeddingforserving.html", "tf.tpu.experimental.embedding.TPUEmbeddingV0": "tpu/experimental/embedding/tpuembeddingv0.html", "tf.tpu.experimental.HardwareFeature": "tpu/experimental/hardwarefeature.html", "tf.tpu.experimental.HardwareFeature.EmbeddingFeature": "tpu/experimental/hardwarefeature/embeddingfeature.html", "tf.tpu.experimental.initialize_tpu_system": "tpu/experimental/initialize_tpu_system.html", "tf.tpu.experimental.shutdown_tpu_system": "tpu/experimental/shutdown_tpu_system.html", "tf.tpu.experimental.Topology": "tpu/experimental/topology.html", "tf.tpu.experimental.TPUSystemMetadata": "tpu/experimental/tpusystemmetadata.html", "tf.tpu.XLAOptions": "tpu/xlaoptions.html", "tf.train": "train.html", "tf.train.BytesList": "train/byteslist.html", "tf.train.Checkpoint": "train/checkpoint.html", "tf.train.CheckpointManager": "train/checkpointmanager.html", "tf.train.CheckpointOptions": "train/checkpointoptions.html", "tf.train.checkpoints_iterator": "train/checkpoints_iterator.html", "tf.train.ClusterDef": "train/clusterdef.html", "tf.train.ClusterSpec": "train/clusterspec.html", "tf.train.Coordinator": "train/coordinator.html", "tf.train.Example": "train/example.html", "tf.train.experimental": "train/experimental.html", "tf.train.experimental.PythonState": "train/experimental/pythonstate.html", "tf.train.ExponentialMovingAverage": "train/exponentialmovingaverage.html", "tf.train.Feature": "train/feature.html", "tf.train.FeatureList": "train/featurelist.html", "tf.train.FeatureLists": "train/featurelists.html", "tf.train.FeatureLists.FeatureListEntry": "train/featurelists/featurelistentry.html", "tf.train.Features": "train/features.html", "tf.train.Features.FeatureEntry": "train/features/featureentry.html", "tf.train.FloatList": "train/floatlist.html", "tf.train.get_checkpoint_state": "train/get_checkpoint_state.html", "tf.train.Int64List": "train/int64list.html", "tf.train.JobDef": "train/jobdef.html", "tf.train.JobDef.TasksEntry": "train/jobdef/tasksentry.html", "tf.train.latest_checkpoint": "train/latest_checkpoint.html", "tf.train.list_variables": "train/list_variables.html", "tf.train.load_checkpoint": "train/load_checkpoint.html", "tf.train.load_variable": "train/load_variable.html", "tf.train.SequenceExample": "train/sequenceexample.html", "tf.train.ServerDef": "train/serverdef.html", "tf.transpose": "transpose.html", "tf.truncatediv": "truncatediv.html", "tf.truncatemod": "truncatemod.html", "tf.tuple": "tuple.html", "tf.type_spec_from_value": "type_spec_from_value.html", "tf.types": "types.html", "tf.types.experimental": "types/experimental.html", "tf.types.experimental.Callable": "types/experimental/callable.html", "tf.types.experimental.ConcreteFunction": "types/experimental/concretefunction.html", "tf.types.experimental.GenericFunction": "types/experimental/genericfunction.html", "tf.types.experimental.SupportsTracingProtocol": "types/experimental/supportstracingprotocol.html", "tf.types.experimental.TensorLike": "types/experimental/tensorlike.html", "tf.types.experimental.TraceType": "types/experimental/tracetype.html", "tf.types.experimental.TracingContext": "types/experimental/tracingcontext.html", "tf.TypeSpec": "typespec.html", "tf.UnconnectedGradients": "unconnectedgradients.html", "tf.unique": "unique.html", "tf.unique_with_counts": "unique_with_counts.html", "tf.unravel_index": "unravel_index.html", "tf.unstack": "unstack.html", "tf.Variable": "variable.html", "tf.Variable.SaveSliceInfo": "variable/savesliceinfo.html", "tf.variable_creator_scope": "variable_creator_scope.html", "tf.VariableAggregation": "variableaggregation.html", "tf.VariableSynchronization": "variablesynchronization.html", "tf.vectorized_map": "vectorized_map.html", "tf.version": "version.html", "tf.where": "where.html", "tf.while_loop": "while_loop.html", "tf.xla": "xla.html", "tf.xla.experimental": "xla/experimental.html", "tf.xla.experimental.compile": "xla/experimental/compile.html", "tf.xla.experimental.jit_scope": "xla/experimental/jit_scope.html", "tf.zeros": "zeros.html", "tf.zeros_initializer": "zeros_initializer.html", "tf.zeros_like": "zeros_like.html"}