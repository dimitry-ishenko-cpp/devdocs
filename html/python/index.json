{"1. Command line and environment": "using/cmdline.html", "1. Introduction": "reference/introduction.html", "1. Whetting Your Appetite": "tutorial/appetite.html", "1.1. Alternate Implementations": "reference/introduction.html#alternate-implementations", "1.1. Command line": "using/cmdline.html#command-line", "1.2. Environment variables": "using/cmdline.html#environment-variables", "1.2. Notation": "reference/introduction.html#notation", "2. Lexical analysis": "reference/lexical_analysis.html", "2. Using Python on Unix platforms": "using/unix.html", "2. Using the Python Interpreter": "tutorial/interpreter.html", "2.1. Getting and installing the latest version of Python": "using/unix.html#getting-and-installing-the-latest-version-of-python", "2.1. Invoking the Interpreter": "tutorial/interpreter.html#invoking-the-interpreter", "2.1. Line structure": "reference/lexical_analysis.html#line-structure", "2.2. Building Python": "using/unix.html#building-python", "2.2. Other tokens": "reference/lexical_analysis.html#other-tokens", "2.2. The Interpreter and Its Environment": "tutorial/interpreter.html#the-interpreter-and-its-environment", "2.3. Identifiers and keywords": "reference/lexical_analysis.html#identifiers", "2.3. Python-related paths and files": "using/unix.html#python-related-paths-and-files", "2.4. Literals": "reference/lexical_analysis.html#literals", "2.4. Miscellaneous": "using/unix.html#miscellaneous", "2.5. Custom OpenSSL": "using/unix.html#custom-openssl", "2.5. Operators": "reference/lexical_analysis.html#operators", "2.6. Delimiters": "reference/lexical_analysis.html#delimiters", "3. An Informal Introduction to Python": "tutorial/introduction.html", "3. Configure Python": "using/configure.html", "3. Data model": "reference/datamodel.html", "3.1. Build Requirements": "using/configure.html#build-requirements", "3.1. Objects, values and types": "reference/datamodel.html#objects-values-and-types", "3.1. Using Python as a Calculator": "tutorial/introduction.html#using-python-as-a-calculator", "3.2. First Steps Towards Programming": "tutorial/introduction.html#first-steps-towards-programming", "3.2. Generated files": "using/configure.html#generated-files", "3.2. The standard type hierarchy": "reference/datamodel.html#the-standard-type-hierarchy", "3.3. Configure Options": "using/configure.html#configure-options", "3.3. Special method names": "reference/datamodel.html#special-method-names", "3.4. Coroutines": "reference/datamodel.html#coroutines", "3.4. Python Build System": "using/configure.html#python-build-system", "3.5. Compiler and linker flags": "using/configure.html#compiler-and-linker-flags", "4. Execution model": "reference/executionmodel.html", "4. More Control Flow Tools": "tutorial/controlflow.html", "4. Using Python on Windows": "using/windows.html", "4.1. Structure of a program": "reference/executionmodel.html#structure-of-a-program", "4.1. The full installer": "using/windows.html#the-full-installer", "4.1. if Statements": "tutorial/controlflow.html#if-statements", "4.2. Naming and binding": "reference/executionmodel.html#naming-and-binding", "4.2. The Microsoft Store package": "using/windows.html#the-microsoft-store-package", "4.2. for Statements": "tutorial/controlflow.html#for-statements", "4.3. Exceptions": "reference/executionmodel.html#exceptions", "4.3. The nuget.org packages": "using/windows.html#the-nuget-org-packages", "4.3. The range() Function": "tutorial/controlflow.html#the-range-function", "4.4. The embeddable package": "using/windows.html#the-embeddable-package", "4.4. break and continue Statements, and else Clauses on Loops": "tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops", "4.5. Alternative bundles": "using/windows.html#alternative-bundles", "4.5. pass Statements": "tutorial/controlflow.html#pass-statements", "4.6. Configuring Python": "using/windows.html#configuring-python", "4.6. match Statements": "tutorial/controlflow.html#match-statements", "4.7. Defining Functions": "tutorial/controlflow.html#defining-functions", "4.7. UTF-8 mode": "using/windows.html#utf-8-mode", "4.8. More on Defining Functions": "tutorial/controlflow.html#more-on-defining-functions", "4.8. Python Launcher for Windows": "using/windows.html#python-launcher-for-windows", "4.9. Finding modules": "using/windows.html#finding-modules", "4.9. Intermezzo: Coding Style": "tutorial/controlflow.html#intermezzo-coding-style", "4.10. Additional modules": "using/windows.html#additional-modules", "4.11. Compiling Python on Windows": "using/windows.html#compiling-python-on-windows", "4.12. Other Platforms": "using/windows.html#other-platforms", "5. Data Structures": "tutorial/datastructures.html", "5. The import system": "reference/import.html", "5. Using Python on a Mac": "using/mac.html", "5.1. Getting and Installing Python": "using/mac.html#getting-and-installing-python", "5.1. More on Lists": "tutorial/datastructures.html#more-on-lists", "5.1. importlib": "reference/import.html#importlib", "5.2. Packages": "reference/import.html#packages", "5.2. The IDE": "using/mac.html#the-ide", "5.2. The del statement": "tutorial/datastructures.html#the-del-statement", "5.3. Installing Additional Python Packages": "using/mac.html#installing-additional-python-packages", "5.3. Searching": "reference/import.html#searching", "5.3. Tuples and Sequences": "tutorial/datastructures.html#tuples-and-sequences", "5.4. GUI Programming": "using/mac.html#gui-programming", "5.4. Loading": "reference/import.html#loading", "5.4. Sets": "tutorial/datastructures.html#sets", "5.5. Dictionaries": "tutorial/datastructures.html#dictionaries", "5.5. Distributing Python Applications": "using/mac.html#distributing-python-applications", "5.5. The Path Based Finder": "reference/import.html#the-path-based-finder", "5.6. Looping Techniques": "tutorial/datastructures.html#looping-techniques", "5.6. Other Resources": "using/mac.html#other-resources", "5.6. Replacing the standard import system": "reference/import.html#replacing-the-standard-import-system", "5.7. More on Conditions": "tutorial/datastructures.html#more-on-conditions", "5.7. Package Relative Imports": "reference/import.html#package-relative-imports", "5.8. Comparing Sequences and Other Types": "tutorial/datastructures.html#comparing-sequences-and-other-types", "5.8. Special considerations for __main__": "reference/import.html#special-considerations-for-main", "5.9. References": "reference/import.html#references", "6. Expressions": "reference/expressions.html", "6. Modules": "tutorial/modules.html", "6. Using Python on iOS": "using/ios.html", "6.1. Arithmetic conversions": "reference/expressions.html#arithmetic-conversions", "6.1. More on Modules": "tutorial/modules.html#more-on-modules", "6.1. Python at runtime on iOS": "using/ios.html#python-at-runtime-on-ios", "6.2. Atoms": "reference/expressions.html#atoms", "6.2. Installing Python on iOS": "using/ios.html#installing-python-on-ios", "6.2. Standard Modules": "tutorial/modules.html#standard-modules", "6.3. App Store Compliance": "using/ios.html#app-store-compliance", "6.3. Primaries": "reference/expressions.html#primaries", "6.3. The dir() Function": "tutorial/modules.html#the-dir-function", "6.4. Await expression": "reference/expressions.html#await-expression", "6.4. Packages": "tutorial/modules.html#packages", "6.5. The power operator": "reference/expressions.html#the-power-operator", "6.6. Unary arithmetic and bitwise operations": "reference/expressions.html#unary-arithmetic-and-bitwise-operations", "6.7. Binary arithmetic operations": "reference/expressions.html#binary-arithmetic-operations", "6.8. Shifting operations": "reference/expressions.html#shifting-operations", "6.9. Binary bitwise operations": "reference/expressions.html#binary-bitwise-operations", "6.10. Comparisons": "reference/expressions.html#comparisons", "6.11. Boolean operations": "reference/expressions.html#boolean-operations", "6.12. Assignment expressions": "reference/expressions.html#assignment-expressions", "6.13. Conditional expressions": "reference/expressions.html#conditional-expressions", "6.14. Lambdas": "reference/expressions.html#lambda", "6.15. Expression lists": "reference/expressions.html#expression-lists", "6.16. Evaluation order": "reference/expressions.html#evaluation-order", "6.17. Operator precedence": "reference/expressions.html#operator-precedence", "7. Editors and IDEs": "using/editors.html", "7. Input and Output": "tutorial/inputoutput.html", "7. Simple statements": "reference/simple_stmts.html", "7.1. Expression statements": "reference/simple_stmts.html#expression-statements", "7.1. Fancier Output Formatting": "tutorial/inputoutput.html#fancier-output-formatting", "7.2. Assignment statements": "reference/simple_stmts.html#assignment-statements", "7.2. Reading and Writing Files": "tutorial/inputoutput.html#reading-and-writing-files", "7.3. The assert statement": "reference/simple_stmts.html#the-assert-statement", "7.4. The pass statement": "reference/simple_stmts.html#the-pass-statement", "7.5. The del statement": "reference/simple_stmts.html#the-del-statement", "7.6. The return statement": "reference/simple_stmts.html#the-return-statement", "7.7. The yield statement": "reference/simple_stmts.html#the-yield-statement", "7.8. The raise statement": "reference/simple_stmts.html#the-raise-statement", "7.9. The break statement": "reference/simple_stmts.html#the-break-statement", "7.10. The continue statement": "reference/simple_stmts.html#the-continue-statement", "7.11. The import statement": "reference/simple_stmts.html#the-import-statement", "7.12. The global statement": "reference/simple_stmts.html#the-global-statement", "7.13. The nonlocal statement": "reference/simple_stmts.html#the-nonlocal-statement", "7.14. The type statement": "reference/simple_stmts.html#the-type-statement", "8. Compound statements": "reference/compound_stmts.html", "8. Errors and Exceptions": "tutorial/errors.html", "8.1. Syntax Errors": "tutorial/errors.html#syntax-errors", "8.1. The if statement": "reference/compound_stmts.html#the-if-statement", "8.2. Exceptions": "tutorial/errors.html#exceptions", "8.2. The while statement": "reference/compound_stmts.html#the-while-statement", "8.3. Handling Exceptions": "tutorial/errors.html#handling-exceptions", "8.3. The for statement": "reference/compound_stmts.html#the-for-statement", "8.4. Raising Exceptions": "tutorial/errors.html#raising-exceptions", "8.4. The try statement": "reference/compound_stmts.html#the-try-statement", "8.5. Exception Chaining": "tutorial/errors.html#exception-chaining", "8.5. The with statement": "reference/compound_stmts.html#the-with-statement", "8.6. The match statement": "reference/compound_stmts.html#the-match-statement", "8.6. User-defined Exceptions": "tutorial/errors.html#user-defined-exceptions", "8.7. Defining Clean-up Actions": "tutorial/errors.html#defining-clean-up-actions", "8.7. Function definitions": "reference/compound_stmts.html#function-definitions", "8.8. Class definitions": "reference/compound_stmts.html#class-definitions", "8.8. Predefined Clean-up Actions": "tutorial/errors.html#predefined-clean-up-actions", "8.9. Coroutines": "reference/compound_stmts.html#coroutines", "8.9. Raising and Handling Multiple Unrelated Exceptions": "tutorial/errors.html#raising-and-handling-multiple-unrelated-exceptions", "8.10. Enriching Exceptions with Notes": "tutorial/errors.html#enriching-exceptions-with-notes", "8.10. Type parameter lists": "reference/compound_stmts.html#type-parameter-lists", "9. Classes": "tutorial/classes.html", "9. Top-level components": "reference/toplevel_components.html", "9.1. A Word About Names and Objects": "tutorial/classes.html#a-word-about-names-and-objects", "9.1. Complete Python programs": "reference/toplevel_components.html#complete-python-programs", "9.2. File input": "reference/toplevel_components.html#file-input", "9.2. Python Scopes and Namespaces": "tutorial/classes.html#python-scopes-and-namespaces", "9.3. A First Look at Classes": "tutorial/classes.html#a-first-look-at-classes", "9.3. Interactive input": "reference/toplevel_components.html#interactive-input", "9.4. Expression input": "reference/toplevel_components.html#expression-input", "9.4. Random Remarks": "tutorial/classes.html#random-remarks", "9.5. Inheritance": "tutorial/classes.html#inheritance", "9.6. Private Variables": "tutorial/classes.html#private-variables", "9.7. Odds and Ends": "tutorial/classes.html#odds-and-ends", "9.8. Iterators": "tutorial/classes.html#iterators", "9.9. Generators": "tutorial/classes.html#generators", "9.10. Generator Expressions": "tutorial/classes.html#generator-expressions", "10. Brief Tour of the Standard Library": "tutorial/stdlib.html", "10. Full Grammar specification": "reference/grammar.html", "10.1. Operating System Interface": "tutorial/stdlib.html#operating-system-interface", "10.2. File Wildcards": "tutorial/stdlib.html#file-wildcards", "10.3. Command Line Arguments": "tutorial/stdlib.html#command-line-arguments", "10.4. Error Output Redirection and Program Termination": "tutorial/stdlib.html#error-output-redirection-and-program-termination", "10.5. String Pattern Matching": "tutorial/stdlib.html#string-pattern-matching", "10.6. Mathematics": "tutorial/stdlib.html#mathematics", "10.7. Internet Access": "tutorial/stdlib.html#internet-access", "10.8. Dates and Times": "tutorial/stdlib.html#dates-and-times", "10.9. Data Compression": "tutorial/stdlib.html#data-compression", "10.10. Performance Measurement": "tutorial/stdlib.html#performance-measurement", "10.11. Quality Control": "tutorial/stdlib.html#quality-control", "10.12. Batteries Included": "tutorial/stdlib.html#batteries-included", "11. Brief Tour of the Standard Library": "tutorial/stdlib2.html", "11.1. Output Formatting": "tutorial/stdlib2.html#output-formatting", "11.2. Templating": "tutorial/stdlib2.html#templating", "11.3. Working with Binary Data Record Layouts": "tutorial/stdlib2.html#working-with-binary-data-record-layouts", "11.4. Multi-threading": "tutorial/stdlib2.html#multi-threading", "11.5. Logging": "tutorial/stdlib2.html#logging", "11.6. Weak References": "tutorial/stdlib2.html#weak-references", "11.7. Tools for Working with Lists": "tutorial/stdlib2.html#tools-for-working-with-lists", "11.8. Decimal Floating-Point Arithmetic": "tutorial/stdlib2.html#decimal-floating-point-arithmetic", "12. Virtual Environments and Packages": "tutorial/venv.html", "12.1. Introduction": "tutorial/venv.html#introduction", "12.2. Creating Virtual Environments": "tutorial/venv.html#creating-virtual-environments", "12.3. Managing Packages with pip": "tutorial/venv.html#managing-packages-with-pip", "13. What Now?": "tutorial/whatnow.html", "14. Interactive Input Editing and History Substitution": "tutorial/interactive.html", "14.1. Tab Completion and History Editing": "tutorial/interactive.html#tab-completion-and-history-editing", "14.2. Alternatives to the Interactive Interpreter": "tutorial/interactive.html#alternatives-to-the-interactive-interpreter", "15. Floating-Point Arithmetic: Issues and Limitations": "tutorial/floatingpoint.html", "15.1. Representation Error": "tutorial/floatingpoint.html#representation-error", "16. Appendix": "tutorial/appendix.html", "16.1. Interactive Mode": "tutorial/appendix.html#interactive-mode", "! (exclamation) (in a command interpreter)": "library/cmd.html#index-0", "! (exclamation) (in curses module)": "library/curses.ascii.html#index-0", "! (exclamation) (in formatted string literal)": "reference/lexical_analysis.html#index-25", "! (exclamation) (in glob-style wildcards)": "library/fnmatch.html#index-2", "! (exclamation) (in string formatting)": "library/string.html#index-2", "! (exclamation) (in struct format strings)": "library/struct.html#index-1", "!= (operator)": "library/stdtypes.html#index-7", "\" (double quote) (string literal)": "reference/lexical_analysis.html#index-17", "\"\"\" (string literal)": "reference/lexical_analysis.html#index-18", "# (hash) (comment)": "library/site.html#index-2", "# (hash) (in doctests)": "library/doctest.html#index-4", "# (hash) (in printf-style formatting)": "library/stdtypes.html#index-37", "# (hash) (in regular expressions)": "library/re.html#index-38", "# (hash) (in string formatting)": "library/string.html#index-7", "# (hash) (source encoding declaration)": "reference/lexical_analysis.html#index-5", "$ (dollar) (environment variables expansion)": "library/os.path.html#index-9", "$ (dollar) (in regular expressions)": "library/re.html#index-2", "$ (dollar) (in template strings)": "library/string.html#index-13", "$ (dollar) (interpolation in configuration files)": "library/configparser.html#index-2", "% (percent) (datetime format)": "library/datetime.html#index-0", "% (percent) (environment variables expansion (Windows))": "library/os.path.html#index-9", "% (percent) (interpolation in configuration files)": "library/configparser.html#index-1", "% (percent) (operator)": "library/stdtypes.html#index-13", "% (percent) (printf-style formatting)": "library/stdtypes.html#index-35", "%= (augmented assignment)": "reference/simple_stmts.html#index-14", "& (ampersand) (operator)": "library/stdtypes.html#index-16", "&= (augmented assignment)": "reference/simple_stmts.html#index-14", "' (single quote) (string literal)": "reference/lexical_analysis.html#index-17", "''' (string literal)": "reference/lexical_analysis.html#index-18", "() (parentheses) (call)": "reference/expressions.html#index-47", "() (parentheses) (class definition)": "reference/compound_stmts.html#index-42", "() (parentheses) (function definition)": "reference/compound_stmts.html#index-28", "() (parentheses) (generator expression)": "reference/expressions.html#index-22", "() (parentheses) (in assignment target list)": "reference/simple_stmts.html#index-6", "() (parentheses) (in printf-style formatting)": "library/stdtypes.html#index-36", "() (parentheses) (in regular expressions)": "library/re.html#index-15", "() (parentheses) (tuple display)": "reference/expressions.html#index-8", "(? (in regular expressions)": "library/re.html#index-16", "(?! (in regular expressions)": "library/re.html#index-22", "(?# (in regular expressions)": "library/re.html#index-20", "(?( (in regular expressions)": "library/re.html#index-25", "(?: (in regular expressions)": "library/re.html#index-17", "(?<! (in regular expressions)": "library/re.html#index-24", "(?<= (in regular expressions)": "library/re.html#index-23", "(?= (in regular expressions)": "library/re.html#index-21", "(?P< (in regular expressions)": "library/re.html#index-18", "(?P= (in regular expressions)": "library/re.html#index-19", "(De)compression of files (bz2)": "library/bz2.html#de-compression-of-files", "* (asterisk) (function definition)": "reference/compound_stmts.html#index-32", "* (asterisk) (import statement)": "reference/simple_stmts.html#index-37", "* (asterisk) (in argparse module)": "library/argparse.html#index-1", "* (asterisk) (in assignment target list)": "reference/simple_stmts.html#index-6", "* (asterisk) (in AST grammar)": "library/ast.html#index-1", "* (asterisk) (in expression lists)": "reference/expressions.html#index-93", "* (asterisk) (in function calls)": "reference/expressions.html#index-49", "* (asterisk) (in glob-style wildcards)": "library/fnmatch.html#index-2", "* (asterisk) (in printf-style formatting)": "library/stdtypes.html#index-36", "* (asterisk) (in regular expressions)": "library/re.html#index-3", "* (asterisk) (operator)": "library/stdtypes.html#index-13", "** (function definition)": "reference/compound_stmts.html#index-32", "** (in dictionary displays)": "reference/expressions.html#index-18", "** (in function calls)": "reference/expressions.html#index-50", "** (in glob-style wildcards)": "library/glob.html#index-2", "** (operator)": "library/stdtypes.html#index-13", "**= (augmented assignment)": "reference/simple_stmts.html#index-14", "*+ (in regular expressions)": "library/re.html#index-7", "*= (augmented assignment)": "reference/simple_stmts.html#index-14", "*? (in regular expressions)": "library/re.html#index-6", "+ (plus) (binary operator)": "library/stdtypes.html#index-13", "+ (plus) (in argparse module)": "library/argparse.html#index-2", "+ (plus) (in doctests)": "library/doctest.html#index-4", "+ (plus) (in printf-style formatting)": "library/stdtypes.html#index-37", "+ (plus) (in regular expressions)": "library/re.html#index-4", "+ (plus) (in string formatting)": "library/string.html#index-4", "+ (plus) (unary operator)": "library/stdtypes.html#index-13", "++ (in regular expressions)": "library/re.html#index-7", "+= (augmented assignment)": "reference/simple_stmts.html#index-14", "+? (in regular expressions)": "library/re.html#index-6", "- (minus) (binary operator)": "library/stdtypes.html#index-13", "- (minus) (in doctests)": "library/doctest.html#index-4", "- (minus) (in glob-style wildcards)": "library/fnmatch.html#index-2", "- (minus) (in printf-style formatting)": "library/stdtypes.html#index-37", "- (minus) (in regular expressions)": "library/re.html#index-11", "- (minus) (in string formatting)": "library/string.html#index-4", "- (minus) (unary operator)": "library/stdtypes.html#index-13", "- (python--m-py_compile command line option)": "library/py_compile.html#cmdoption-python-m-py_compile", "-= (augmented assignment)": "reference/simple_stmts.html#index-14", "-> (function annotations)": "reference/compound_stmts.html#index-34", "-? (command line option)": "using/cmdline.html#cmdoption-0", ". (dot) (attribute reference)": "reference/expressions.html#index-39", ". (dot) (in glob-style wildcards)": "library/glob.html#index-1", ". (dot) (in numeric literal)": "reference/lexical_analysis.html#index-29", ". (dot) (in pathnames)": "library/os.html#index-47", ". (dot) (in printf-style formatting)": "library/stdtypes.html#index-36", ". (dot) (in regular expressions)": "library/re.html#index-0", ". (dot) (in string formatting)": "library/string.html#index-2", ".. (in pathnames)": "library/os.html#index-48", "...": "glossary.html#term-...", ".ini (file)": "library/configparser.html#index-0", ".pdbrc (file)": "library/pdb.html#index-3", "/ (slash) (function definition)": "reference/compound_stmts.html#index-32", "/ (slash) (in pathnames)": "library/os.html#index-49", "/ (slash) (operator)": "library/stdtypes.html#index-13", "// (operator)": "library/stdtypes.html#index-13", "//= (augmented assignment)": "reference/simple_stmts.html#index-14", "/= (augmented assignment)": "reference/simple_stmts.html#index-14", "/dev/poll Polling Objects (select)": "library/select.html#dev-poll-polling-objects", ": (colon) (annotated variable)": "reference/simple_stmts.html#index-15", ": (colon) (compound statement)": "reference/compound_stmts.html#index-16", ": (colon) (function annotations)": "reference/compound_stmts.html#index-34", ": (colon) (in dictionary expressions)": "reference/expressions.html#index-17", ": (colon) (in formatted string literal)": "reference/lexical_analysis.html#index-25", ": (colon) (in SQL statements)": "library/sqlite3.html#index-7", ": (colon) (in string formatting)": "library/string.html#index-2", ": (colon) (lambda expression)": "reference/expressions.html#index-90", ": (colon) (path separator (POSIX))": "library/os.html#index-53", ": (colon) (slicing)": "reference/expressions.html#index-44", "< (less) (in string formatting)": "library/string.html#index-3", "< (less) (in struct format strings)": "library/struct.html#index-1", "< (less) (operator)": "library/stdtypes.html#index-7", "<< (operator)": "library/stdtypes.html#index-16", "<<= (augmented assignment)": "reference/simple_stmts.html#index-14", "<= (operator)": "library/stdtypes.html#index-7", "<file> (python--m-py_compile command line option)": "library/py_compile.html#cmdoption-python-m-py_compile-arg-file", "= (equals) (assignment statement)": "reference/simple_stmts.html#index-4", "= (equals) (class definition)": "reference/datamodel.html#index-86", "= (equals) (for help in debugging using string literals)": "reference/lexical_analysis.html#index-25", "= (equals) (function definition)": "reference/compound_stmts.html#index-31", "= (equals) (in function calls)": "reference/expressions.html#index-47", "= (equals) (in string formatting)": "library/string.html#index-3", "= (equals) (in struct format strings)": "library/struct.html#index-1", "== (operator)": "library/stdtypes.html#index-7", "> (greater) (in string formatting)": "library/string.html#index-3", "> (greater) (in struct format strings)": "library/struct.html#index-1", "> (greater) (operator)": "library/stdtypes.html#index-7", ">= (operator)": "library/stdtypes.html#index-7", ">> (operator)": "library/stdtypes.html#index-16", ">>= (augmented assignment)": "reference/simple_stmts.html#index-14", ">>>": "glossary.html#term-0", "? (question mark) (in a command interpreter)": "library/cmd.html#index-0", "? (question mark) (in argparse module)": "library/argparse.html#index-0", "? (question mark) (in AST grammar)": "library/ast.html#index-0", "? (question mark) (in glob-style wildcards)": "library/fnmatch.html#index-2", "? (question mark) (in regular expressions)": "library/re.html#index-5", "? (question mark) (in SQL statements)": "library/sqlite3.html#index-6", "? (question mark) (in struct format strings)": "library/struct.html#index-2", "? (question mark) (replacement character)": "library/codecs.html#index-1", "?+ (in regular expressions)": "library/re.html#index-7", "?? (in regular expressions)": "library/re.html#index-6", "@ (at) (class definition)": "reference/compound_stmts.html#index-43", "@ (at) (function definition)": "reference/compound_stmts.html#index-29", "@ (at) (in struct format strings)": "library/struct.html#index-1", "@ (at) (operator)": "reference/expressions.html#index-66", "[] (square brackets) (in assignment target list)": "reference/simple_stmts.html#index-6", "[] (square brackets) (in glob-style wildcards)": "library/fnmatch.html#index-2", "[] (square brackets) (in regular expressions)": "library/re.html#index-10", "[] (square brackets) (in string formatting)": "library/string.html#index-2", "[] (square brackets) (list expression)": "reference/expressions.html#index-15", "[] (square brackets) (subscription)": "reference/expressions.html#index-41", "\\ (backslash) (escape sequence)": "library/codecs.html#index-1", "\\ (backslash) (in pathnames (Windows))": "library/os.html#index-50", "\\ (backslash) (in regular expressions)": "library/re.html#index-12", "\\\\ (escape sequence)": "reference/lexical_analysis.html#index-23", "\\\\ (in regular expressions)": "library/re.html#index-37", "\\a (escape sequence)": "reference/lexical_analysis.html#index-23", "\\a (in regular expressions)": "library/re.html#index-37", "\\A (in regular expressions)": "library/re.html#index-27", "\\b (escape sequence)": "reference/lexical_analysis.html#index-23", "\\B (in regular expressions)": "library/re.html#index-29", "\\b (in regular expressions)": "library/re.html#index-28", "\\D (in regular expressions)": "library/re.html#index-31", "\\d (in regular expressions)": "library/re.html#index-30", "\\f (escape sequence)": "reference/lexical_analysis.html#index-23", "\\f (in regular expressions)": "library/re.html#index-37", "\\g (in regular expressions)": "library/re.html#index-39", "\\n (escape sequence)": "reference/lexical_analysis.html#index-23", "\\N (escape sequence)": "library/codecs.html#index-3", "\\N (in regular expressions)": "library/re.html#index-37", "\\n (in regular expressions)": "library/re.html#index-37", "\\r (escape sequence)": "reference/lexical_analysis.html#index-23", "\\r (in regular expressions)": "library/re.html#index-37", "\\s (in regular expressions)": "library/re.html#index-32", "\\S (in regular expressions)": "library/re.html#index-33", "\\t (escape sequence)": "reference/lexical_analysis.html#index-23", "\\t (in regular expressions)": "library/re.html#index-37", "\\u (escape sequence)": "library/codecs.html#index-1", "\\U (escape sequence)": "library/codecs.html#index-1", "\\U (in regular expressions)": "library/re.html#index-37", "\\u (in regular expressions)": "library/re.html#index-37", "\\v (escape sequence)": "reference/lexical_analysis.html#index-23", "\\v (in regular expressions)": "library/re.html#index-37", "\\w (in regular expressions)": "library/re.html#index-34", "\\W (in regular expressions)": "library/re.html#index-35", "\\x (escape sequence)": "library/codecs.html#index-1", "\\x (in regular expressions)": "library/re.html#index-37", "\\Z (in regular expressions)": "library/re.html#index-36", "^ (caret) (in curses module)": "library/curses.ascii.html#index-0", "^ (caret) (in regular expressions)": "library/re.html#index-1", "^ (caret) (in string formatting)": "library/string.html#index-3", "^ (caret) (marker)": "library/doctest.html#index-1", "^ (caret) (operator)": "library/stdtypes.html#index-16", "^= (augmented assignment)": "reference/simple_stmts.html#index-14", "__future__": "library/__future__.html", "__main__": "library/__main__.html", "__main__.py in Python Packages (__main__)": "library/__main__.html#main-py-in-python-packages", "__name__ == '__main__' (__main__)": "library/__main__.html#name-main", "__slots__": "glossary.html#term-__slots__", "_pth files (The initialization of the sys.path module search path)": "library/sys_path_init.html#pth-files", "_thread": "library/_thread.html", "A command-line interface to difflib (difflib)": "library/difflib.html#a-command-line-interface-to-difflib", "abc": "library/abc.html", "abc.ABC": "library/abc.html#abc.ABC", "abc.ABCMeta": "library/abc.html#abc.ABCMeta", "abc.ABCMeta.__subclasshook__()": "library/abc.html#abc.ABCMeta.__subclasshook__", "abc.ABCMeta.register()": "library/abc.html#abc.ABCMeta.register", "abc.abstractclassmethod()": "library/abc.html#abc.abstractclassmethod", "abc.abstractmethod()": "library/abc.html#abc.abstractmethod", "abc.abstractproperty()": "library/abc.html#abc.abstractproperty", "abc.abstractstaticmethod()": "library/abc.html#abc.abstractstaticmethod", "abc.get_cache_token()": "library/abc.html#abc.get_cache_token", "abc.update_abstractmethods()": "library/abc.html#abc.update_abstractmethods", "About these documents": "about.html", "abs()": "library/functions.html#abs", "abstract base class": "glossary.html#term-abstract-base-class", "Abstract Grammar (ast)": "library/ast.html#abstract-grammar", "Abstract Objects Layer": "c-api/abstract.html", "AbstractBasicAuthHandler Objects (urllib.request)": "library/urllib.request.html#abstractbasicauthhandler-objects", "AbstractDigestAuthHandler Objects (urllib.request)": "library/urllib.request.html#abstractdigestauthhandler-objects", "Access to message catalogs (locale)": "library/locale.html#access-to-message-catalogs", "Acknowledgements (gettext)": "library/gettext.html#acknowledgements", "Additional notes (email.parser: Parsing email messages)": "library/email.parser.html#additional-notes", "Additional Utility Classes and Functions (types)": "library/types.html#additional-utility-classes-and-functions", "Advanced API (doctest)": "library/doctest.html#advanced-api", "agen.__anext__()": "reference/expressions.html#agen.__anext__", "agen.aclose()": "reference/expressions.html#agen.aclose", "agen.asend()": "reference/expressions.html#agen.asend", "agen.athrow()": "reference/expressions.html#agen.athrow", "aiter()": "library/functions.html#aiter", "All Platforms (Platform Support)": "library/asyncio-platforms.html#all-platforms", "all()": "library/functions.html#all", "Allocating Objects on the Heap": "c-api/allocation.html", "Alternative Generator (random)": "library/random.html#alternative-generator", "An example of extending EnvBuilder (venv)": "library/venv.html#an-example-of-extending-envbuilder", "An introduction to the ipaddress module": "howto/ipaddress.html", "Analysis functions (dis)": "library/dis.html#analysis-functions", "Android Platform (platform)": "library/platform.html#android-platform", "anext()": "library/functions.html#anext", "Angular conversion (math)": "library/math.html#angular-conversion", "annotated (assignment)": "reference/simple_stmts.html#index-15", "Annotating callable objects (typing)": "library/typing.html#annotating-callable-objects", "Annotating tuples (typing)": "library/typing.html#annotating-tuples", "annotation": "glossary.html#term-annotation", "annotations (function)": "reference/compound_stmts.html#index-34", "Annotations Best Practices": "howto/annotations.html", "any()": "library/functions.html#any", "API (tracemalloc)": "library/tracemalloc.html#api", "API (venv)": "library/venv.html#api", "API and ABI Versioning": "c-api/apiabiversion.html", "Applications (struct)": "library/struct.html#applications", "Architecture (tkinter)": "library/tkinter.html#architecture", "Archiving operations (shutil)": "library/shutil.html#archiving-operations", "argparse": "library/argparse.html", "Argparse Tutorial": "howto/argparse.html", "argparse.Action": "library/argparse.html#argparse.Action", "argparse.ArgumentDefaultsHelpFormatter": "library/argparse.html#argparse.ArgumentDefaultsHelpFormatter", "argparse.ArgumentError": "library/argparse.html#argparse.ArgumentError", "argparse.ArgumentParser": "library/argparse.html#argparse.ArgumentParser", "argparse.ArgumentParser.add_argument()": "library/argparse.html#argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument_group()": "library/argparse.html#argparse.ArgumentParser.add_argument_group", "argparse.ArgumentParser.add_mutually_exclusive_group()": "library/argparse.html#argparse.ArgumentParser.add_mutually_exclusive_group", "argparse.ArgumentParser.add_subparsers()": "library/argparse.html#argparse.ArgumentParser.add_subparsers", "argparse.ArgumentParser.convert_arg_line_to_args()": "library/argparse.html#argparse.ArgumentParser.convert_arg_line_to_args", "argparse.ArgumentParser.error()": "library/argparse.html#argparse.ArgumentParser.error", "argparse.ArgumentParser.exit()": "library/argparse.html#argparse.ArgumentParser.exit", "argparse.ArgumentParser.format_help()": "library/argparse.html#argparse.ArgumentParser.format_help", "argparse.ArgumentParser.format_usage()": "library/argparse.html#argparse.ArgumentParser.format_usage", "argparse.ArgumentParser.get_default()": "library/argparse.html#argparse.ArgumentParser.get_default", "argparse.ArgumentParser.parse_args()": "library/argparse.html#argparse.ArgumentParser.parse_args", "argparse.ArgumentParser.parse_intermixed_args()": "library/argparse.html#argparse.ArgumentParser.parse_intermixed_args", "argparse.ArgumentParser.parse_known_args()": "library/argparse.html#argparse.ArgumentParser.parse_known_args", "argparse.ArgumentParser.parse_known_intermixed_args()": "library/argparse.html#argparse.ArgumentParser.parse_known_intermixed_args", "argparse.ArgumentParser.print_help()": "library/argparse.html#argparse.ArgumentParser.print_help", "argparse.ArgumentParser.print_usage()": "library/argparse.html#argparse.ArgumentParser.print_usage", "argparse.ArgumentParser.set_defaults()": "library/argparse.html#argparse.ArgumentParser.set_defaults", "argparse.ArgumentTypeError": "library/argparse.html#argparse.ArgumentTypeError", "argparse.FileType": "library/argparse.html#argparse.FileType", "argparse.MetavarTypeHelpFormatter": "library/argparse.html#argparse.MetavarTypeHelpFormatter", "argparse.Namespace": "library/argparse.html#argparse.Namespace", "argparse.RawDescriptionHelpFormatter": "library/argparse.html#argparse.RawDescriptionHelpFormatter", "argparse.RawTextHelpFormatter": "library/argparse.html#argparse.RawTextHelpFormatter", "argument": "glossary.html#term-argument", "ArgumentParser objects (argparse)": "library/argparse.html#argumentparser-objects", "ArithmeticError": "library/exceptions.html#ArithmeticError", "array": "library/array.html", "array.array": "library/array.html#array.array", "array.array.append()": "library/array.html#array.array.append", "array.array.buffer_info()": "library/array.html#array.array.buffer_info", "array.array.byteswap()": "library/array.html#array.array.byteswap", "array.array.clear()": "library/array.html#array.array.clear", "array.array.count()": "library/array.html#array.array.count", "array.array.extend()": "library/array.html#array.array.extend", "array.array.frombytes()": "library/array.html#array.array.frombytes", "array.array.fromfile()": "library/array.html#array.array.fromfile", "array.array.fromlist()": "library/array.html#array.array.fromlist", "array.array.fromunicode()": "library/array.html#array.array.fromunicode", "array.array.index()": "library/array.html#array.array.index", "array.array.insert()": "library/array.html#array.array.insert", "array.array.itemsize": "library/array.html#array.array.itemsize", "array.array.pop()": "library/array.html#array.array.pop", "array.array.remove()": "library/array.html#array.array.remove", "array.array.reverse()": "library/array.html#array.array.reverse", "array.array.tobytes()": "library/array.html#array.array.tobytes", "array.array.tofile()": "library/array.html#array.array.tofile", "array.array.tolist()": "library/array.html#array.array.tolist", "array.array.tounicode()": "library/array.html#array.array.tounicode", "array.array.typecode": "library/array.html#array.array.typecode", "array.typecodes": "library/array.html#array.typecodes", "as (except clause)": "reference/compound_stmts.html#index-10", "as (import statement)": "reference/simple_stmts.html#index-35", "as (keyword)": "reference/compound_stmts.html#index-16", "as (match statement)": "reference/compound_stmts.html#index-18", "as (with statement)": "reference/compound_stmts.html#index-16", "ascii()": "library/functions.html#ascii", "assert (statement)": "reference/simple_stmts.html#index-18", "AssertionError": "library/exceptions.html#AssertionError", "assertions (debugging)": "reference/simple_stmts.html#index-18", "assignment (annotated)": "reference/simple_stmts.html#index-15", "assignment (attribute)": "reference/simple_stmts.html#index-4", "assignment (augmented)": "reference/simple_stmts.html#index-14", "assignment (slicing)": "reference/simple_stmts.html#index-12", "assignment (subscription)": "reference/simple_stmts.html#index-9", "assignment (target list)": "reference/simple_stmts.html#index-6", "ast": "library/ast.html", "ast Helpers (ast)": "library/ast.html#ast-helpers", "ast.Add": "library/ast.html#ast.Add", "ast.alias": "library/ast.html#ast.alias", "ast.And": "library/ast.html#ast.And", "ast.AnnAssign": "library/ast.html#ast.AnnAssign", "ast.arg": "library/ast.html#ast.arg", "ast.arg.type_comment": "library/ast.html#ast.arg.type_comment", "ast.arguments": "library/ast.html#ast.arguments", "ast.Assert": "library/ast.html#ast.Assert", "ast.Assign": "library/ast.html#ast.Assign", "ast.Assign.type_comment": "library/ast.html#ast.Assign.type_comment", "ast.AST": "library/ast.html#ast.AST", "ast.AST._field_types": "library/ast.html#ast.AST._field_types", "ast.AST._fields": "library/ast.html#ast.AST._fields", "ast.AST.col_offset": "library/ast.html#ast.AST.col_offset", "ast.AST.end_col_offset": "library/ast.html#ast.AST.end_col_offset", "ast.AST.end_lineno": "library/ast.html#ast.AST.end_lineno", "ast.AST.lineno": "library/ast.html#ast.AST.lineno", "ast.AsyncFor": "library/ast.html#ast.AsyncFor", "ast.AsyncFunctionDef": "library/ast.html#ast.AsyncFunctionDef", "ast.AsyncWith": "library/ast.html#ast.AsyncWith", "ast.Attribute": "library/ast.html#ast.Attribute", "ast.AugAssign": "library/ast.html#ast.AugAssign", "ast.Await": "library/ast.html#ast.Await", "ast.BinOp": "library/ast.html#ast.BinOp", "ast.BitAnd": "library/ast.html#ast.BitAnd", "ast.BitOr": "library/ast.html#ast.BitOr", "ast.BitXor": "library/ast.html#ast.BitXor", "ast.BoolOp": "library/ast.html#ast.BoolOp", "ast.Break": "library/ast.html#ast.Break", "ast.Call": "library/ast.html#ast.Call", "ast.ClassDef": "library/ast.html#ast.ClassDef", "ast.Compare": "library/ast.html#ast.Compare", "ast.comprehension": "library/ast.html#ast.comprehension", "ast.Constant": "library/ast.html#ast.Constant", "ast.Continue": "library/ast.html#ast.Continue", "ast.copy_location()": "library/ast.html#ast.copy_location", "ast.Del": "library/ast.html#ast.Del", "ast.Delete": "library/ast.html#ast.Delete", "ast.Dict": "library/ast.html#ast.Dict", "ast.DictComp": "library/ast.html#ast.DictComp", "ast.Div": "library/ast.html#ast.Div", "ast.dump()": "library/ast.html#ast.dump", "ast.Eq": "library/ast.html#ast.Eq", "ast.ExceptHandler": "library/ast.html#ast.ExceptHandler", "ast.Expr": "library/ast.html#ast.Expr", "ast.Expression": "library/ast.html#ast.Expression", "ast.fix_missing_locations()": "library/ast.html#ast.fix_missing_locations", "ast.FloorDiv": "library/ast.html#ast.FloorDiv", "ast.For": "library/ast.html#ast.For", "ast.For.type_comment": "library/ast.html#ast.For.type_comment", "ast.FormattedValue": "library/ast.html#ast.FormattedValue", "ast.FunctionDef": "library/ast.html#ast.FunctionDef", "ast.FunctionDef.type_comment": "library/ast.html#ast.FunctionDef.type_comment", "ast.FunctionType": "library/ast.html#ast.FunctionType", "ast.GeneratorExp": "library/ast.html#ast.GeneratorExp", "ast.get_docstring()": "library/ast.html#ast.get_docstring", "ast.get_source_segment()": "library/ast.html#ast.get_source_segment", "ast.Global": "library/ast.html#ast.Global", "ast.Gt": "library/ast.html#ast.Gt", "ast.GtE": "library/ast.html#ast.GtE", "ast.If": "library/ast.html#ast.If", "ast.IfExp": "library/ast.html#ast.IfExp", "ast.Import": "library/ast.html#ast.Import", "ast.ImportFrom": "library/ast.html#ast.ImportFrom", "ast.In": "library/ast.html#ast.In", "ast.increment_lineno()": "library/ast.html#ast.increment_lineno", "ast.Interactive": "library/ast.html#ast.Interactive", "ast.Invert": "library/ast.html#ast.Invert", "ast.Is": "library/ast.html#ast.Is", "ast.IsNot": "library/ast.html#ast.IsNot", "ast.iter_child_nodes()": "library/ast.html#ast.iter_child_nodes", "ast.iter_fields()": "library/ast.html#ast.iter_fields", "ast.JoinedStr": "library/ast.html#ast.JoinedStr", "ast.keyword": "library/ast.html#ast.keyword", "ast.Lambda": "library/ast.html#ast.Lambda", "ast.List": "library/ast.html#ast.List", "ast.ListComp": "library/ast.html#ast.ListComp", "ast.literal_eval()": "library/ast.html#ast.literal_eval", "ast.Load": "library/ast.html#ast.Load", "ast.LShift": "library/ast.html#ast.LShift", "ast.Lt": "library/ast.html#ast.Lt", "ast.LtE": "library/ast.html#ast.LtE", "ast.Match": "library/ast.html#ast.Match", "ast.match_case": "library/ast.html#ast.match_case", "ast.MatchAs": "library/ast.html#ast.MatchAs", "ast.MatchClass": "library/ast.html#ast.MatchClass", "ast.MatchMapping": "library/ast.html#ast.MatchMapping", "ast.MatchOr": "library/ast.html#ast.MatchOr", "ast.MatchSequence": "library/ast.html#ast.MatchSequence", "ast.MatchSingleton": "library/ast.html#ast.MatchSingleton", "ast.MatchStar": "library/ast.html#ast.MatchStar", "ast.MatchValue": "library/ast.html#ast.MatchValue", "ast.MatMult": "library/ast.html#ast.MatMult", "ast.Mod": "library/ast.html#ast.Mod", "ast.Module": "library/ast.html#ast.Module", "ast.Mult": "library/ast.html#ast.Mult", "ast.Name": "library/ast.html#ast.Name", "ast.NamedExpr": "library/ast.html#ast.NamedExpr", "ast.NodeTransformer": "library/ast.html#ast.NodeTransformer", "ast.NodeVisitor": "library/ast.html#ast.NodeVisitor", "ast.NodeVisitor.generic_visit()": "library/ast.html#ast.NodeVisitor.generic_visit", "ast.NodeVisitor.visit()": "library/ast.html#ast.NodeVisitor.visit", "ast.NodeVisitor.visit_Constant()": "library/ast.html#ast.NodeVisitor.visit_Constant", "ast.Nonlocal": "library/ast.html#ast.Nonlocal", "ast.Not": "library/ast.html#ast.Not", "ast.NotEq": "library/ast.html#ast.NotEq", "ast.NotIn": "library/ast.html#ast.NotIn", "ast.Or": "library/ast.html#ast.Or", "ast.ParamSpec": "library/ast.html#ast.ParamSpec", "ast.parse()": "library/ast.html#ast.parse", "ast.Pass": "library/ast.html#ast.Pass", "ast.Pow": "library/ast.html#ast.Pow", "ast.PyCF_ALLOW_TOP_LEVEL_AWAIT": "library/ast.html#ast.PyCF_ALLOW_TOP_LEVEL_AWAIT", "ast.PyCF_ONLY_AST": "library/ast.html#ast.PyCF_ONLY_AST", "ast.PyCF_OPTIMIZED_AST": "library/ast.html#ast.PyCF_OPTIMIZED_AST", "ast.PyCF_TYPE_COMMENTS": "library/ast.html#ast.PyCF_TYPE_COMMENTS", "ast.Raise": "library/ast.html#ast.Raise", "ast.Return": "library/ast.html#ast.Return", "ast.RShift": "library/ast.html#ast.RShift", "ast.Set": "library/ast.html#ast.Set", "ast.SetComp": "library/ast.html#ast.SetComp", "ast.Slice": "library/ast.html#ast.Slice", "ast.Starred": "library/ast.html#ast.Starred", "ast.Store": "library/ast.html#ast.Store", "ast.Sub": "library/ast.html#ast.Sub", "ast.Subscript": "library/ast.html#ast.Subscript", "ast.Try": "library/ast.html#ast.Try", "ast.TryStar": "library/ast.html#ast.TryStar", "ast.Tuple": "library/ast.html#ast.Tuple", "ast.TypeAlias": "library/ast.html#ast.TypeAlias", "ast.TypeVar": "library/ast.html#ast.TypeVar", "ast.TypeVarTuple": "library/ast.html#ast.TypeVarTuple", "ast.UAdd": "library/ast.html#ast.UAdd", "ast.UnaryOp": "library/ast.html#ast.UnaryOp", "ast.unparse()": "library/ast.html#ast.unparse", "ast.USub": "library/ast.html#ast.USub", "ast.walk()": "library/ast.html#ast.walk", "ast.While": "library/ast.html#ast.While", "ast.With": "library/ast.html#ast.With", "ast.With.type_comment": "library/ast.html#ast.With.type_comment", "ast.withitem": "library/ast.html#ast.withitem", "ast.Yield": "library/ast.html#ast.Yield", "ast.YieldFrom": "library/ast.html#ast.YieldFrom", "async (keyword)": "reference/compound_stmts.html#index-49", "async def (statement)": "reference/compound_stmts.html#index-48", "async for (statement)": "reference/compound_stmts.html#index-50", "async with (statement)": "reference/compound_stmts.html#index-51", "asynchronous context manager": "glossary.html#term-asynchronous-context-manager", "asynchronous generator": "glossary.html#term-asynchronous-generator", "asynchronous generator iterator": "glossary.html#term-asynchronous-generator-iterator", "asynchronous iterable": "glossary.html#term-asynchronous-iterable", "asynchronous iterator": "glossary.html#term-asynchronous-iterator", "asyncio": "library/asyncio.html", "asyncio support (contextvars)": "library/contextvars.html#asyncio-support", "asyncio._enter_task()": "library/asyncio-extending.html#asyncio._enter_task", "asyncio._leave_task()": "library/asyncio-extending.html#asyncio._leave_task", "asyncio._register_task()": "library/asyncio-extending.html#asyncio._register_task", "asyncio._unregister_task()": "library/asyncio-extending.html#asyncio._unregister_task", "asyncio.AbstractChildWatcher": "library/asyncio-policy.html#asyncio.AbstractChildWatcher", "asyncio.AbstractChildWatcher.add_child_handler()": "library/asyncio-policy.html#asyncio.AbstractChildWatcher.add_child_handler", "asyncio.AbstractChildWatcher.attach_loop()": "library/asyncio-policy.html#asyncio.AbstractChildWatcher.attach_loop", "asyncio.AbstractChildWatcher.close()": "library/asyncio-policy.html#asyncio.AbstractChildWatcher.close", "asyncio.AbstractChildWatcher.is_active()": "library/asyncio-policy.html#asyncio.AbstractChildWatcher.is_active", "asyncio.AbstractChildWatcher.remove_child_handler()": "library/asyncio-policy.html#asyncio.AbstractChildWatcher.remove_child_handler", "asyncio.AbstractEventLoop": "library/asyncio-eventloop.html#asyncio.AbstractEventLoop", "asyncio.AbstractEventLoopPolicy": "library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy", "asyncio.AbstractEventLoopPolicy.get_child_watcher()": "library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy.get_child_watcher", "asyncio.AbstractEventLoopPolicy.get_event_loop()": "library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy.get_event_loop", "asyncio.AbstractEventLoopPolicy.new_event_loop()": "library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy.new_event_loop", "asyncio.AbstractEventLoopPolicy.set_child_watcher()": "library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy.set_child_watcher", "asyncio.AbstractEventLoopPolicy.set_event_loop()": "library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy.set_event_loop", "asyncio.ALL_COMPLETED": "library/asyncio-task.html#asyncio.ALL_COMPLETED", "asyncio.all_tasks()": "library/asyncio-task.html#asyncio.all_tasks", "asyncio.as_completed()": "library/asyncio-task.html#asyncio.as_completed", "asyncio.Barrier": "library/asyncio-sync.html#asyncio.Barrier", "asyncio.Barrier.abort()": "library/asyncio-sync.html#asyncio.Barrier.abort", "asyncio.Barrier.broken": "library/asyncio-sync.html#asyncio.Barrier.broken", "asyncio.Barrier.n_waiting": "library/asyncio-sync.html#asyncio.Barrier.n_waiting", "asyncio.Barrier.parties": "library/asyncio-sync.html#asyncio.Barrier.parties", "asyncio.Barrier.reset()": "library/asyncio-sync.html#asyncio.Barrier.reset", "asyncio.Barrier.wait()": "library/asyncio-sync.html#asyncio.Barrier.wait", "asyncio.BaseProtocol": "library/asyncio-protocol.html#asyncio.BaseProtocol", "asyncio.BaseProtocol.connection_lost()": "library/asyncio-protocol.html#asyncio.BaseProtocol.connection_lost", "asyncio.BaseProtocol.connection_made()": "library/asyncio-protocol.html#asyncio.BaseProtocol.connection_made", "asyncio.BaseProtocol.pause_writing()": "library/asyncio-protocol.html#asyncio.BaseProtocol.pause_writing", "asyncio.BaseProtocol.resume_writing()": "library/asyncio-protocol.html#asyncio.BaseProtocol.resume_writing", "asyncio.BaseTransport": "library/asyncio-protocol.html#asyncio.BaseTransport", "asyncio.BaseTransport.close()": "library/asyncio-protocol.html#asyncio.BaseTransport.close", "asyncio.BaseTransport.get_extra_info()": "library/asyncio-protocol.html#asyncio.BaseTransport.get_extra_info", "asyncio.BaseTransport.get_protocol()": "library/asyncio-protocol.html#asyncio.BaseTransport.get_protocol", "asyncio.BaseTransport.is_closing()": "library/asyncio-protocol.html#asyncio.BaseTransport.is_closing", "asyncio.BaseTransport.set_protocol()": "library/asyncio-protocol.html#asyncio.BaseTransport.set_protocol", "asyncio.BoundedSemaphore": "library/asyncio-sync.html#asyncio.BoundedSemaphore", "asyncio.BrokenBarrierError": "library/asyncio-sync.html#asyncio.BrokenBarrierError", "asyncio.BufferedProtocol": "library/asyncio-protocol.html#asyncio.BufferedProtocol", "asyncio.BufferedProtocol.buffer_updated()": "library/asyncio-protocol.html#asyncio.BufferedProtocol.buffer_updated", "asyncio.BufferedProtocol.eof_received()": "library/asyncio-protocol.html#asyncio.BufferedProtocol.eof_received", "asyncio.BufferedProtocol.get_buffer()": "library/asyncio-protocol.html#asyncio.BufferedProtocol.get_buffer", "asyncio.CancelledError": "library/asyncio-exceptions.html#asyncio.CancelledError", "asyncio.Condition": "library/asyncio-sync.html#asyncio.Condition", "asyncio.Condition.acquire()": "library/asyncio-sync.html#asyncio.Condition.acquire", "asyncio.Condition.locked()": "library/asyncio-sync.html#asyncio.Condition.locked", "asyncio.Condition.notify()": "library/asyncio-sync.html#asyncio.Condition.notify", "asyncio.Condition.notify_all()": "library/asyncio-sync.html#asyncio.Condition.notify_all", "asyncio.Condition.release()": "library/asyncio-sync.html#asyncio.Condition.release", "asyncio.Condition.wait()": "library/asyncio-sync.html#asyncio.Condition.wait", "asyncio.Condition.wait_for()": "library/asyncio-sync.html#asyncio.Condition.wait_for", "asyncio.create_eager_task_factory()": "library/asyncio-task.html#asyncio.create_eager_task_factory", "asyncio.create_subprocess_exec()": "library/asyncio-subprocess.html#asyncio.create_subprocess_exec", "asyncio.create_subprocess_shell()": "library/asyncio-subprocess.html#asyncio.create_subprocess_shell", "asyncio.create_task()": "library/asyncio-task.html#asyncio.create_task", "asyncio.current_task()": "library/asyncio-task.html#asyncio.current_task", "asyncio.DatagramProtocol": "library/asyncio-protocol.html#asyncio.DatagramProtocol", "asyncio.DatagramProtocol.datagram_received()": "library/asyncio-protocol.html#asyncio.DatagramProtocol.datagram_received", "asyncio.DatagramProtocol.error_received()": "library/asyncio-protocol.html#asyncio.DatagramProtocol.error_received", "asyncio.DatagramTransport": "library/asyncio-protocol.html#asyncio.DatagramTransport", "asyncio.DatagramTransport.abort()": "library/asyncio-protocol.html#asyncio.DatagramTransport.abort", "asyncio.DatagramTransport.sendto()": "library/asyncio-protocol.html#asyncio.DatagramTransport.sendto", "asyncio.DefaultEventLoopPolicy": "library/asyncio-policy.html#asyncio.DefaultEventLoopPolicy", "asyncio.eager_task_factory()": "library/asyncio-task.html#asyncio.eager_task_factory", "asyncio.ensure_future()": "library/asyncio-future.html#asyncio.ensure_future", "asyncio.Event": "library/asyncio-sync.html#asyncio.Event", "asyncio.Event.clear()": "library/asyncio-sync.html#asyncio.Event.clear", "asyncio.Event.is_set()": "library/asyncio-sync.html#asyncio.Event.is_set", "asyncio.Event.set()": "library/asyncio-sync.html#asyncio.Event.set", "asyncio.Event.wait()": "library/asyncio-sync.html#asyncio.Event.wait", "asyncio.EventLoop": "library/asyncio-eventloop.html#asyncio.EventLoop", "asyncio.FastChildWatcher": "library/asyncio-policy.html#asyncio.FastChildWatcher", "asyncio.FIRST_COMPLETED": "library/asyncio-task.html#asyncio.FIRST_COMPLETED", "asyncio.FIRST_EXCEPTION": "library/asyncio-task.html#asyncio.FIRST_EXCEPTION", "asyncio.Future": "library/asyncio-future.html#asyncio.Future", "asyncio.Future.__init__()": "library/asyncio-extending.html#asyncio.Future.__init__", "asyncio.Future.add_done_callback()": "library/asyncio-future.html#asyncio.Future.add_done_callback", "asyncio.Future.cancel()": "library/asyncio-future.html#asyncio.Future.cancel", "asyncio.Future.cancelled()": "library/asyncio-future.html#asyncio.Future.cancelled", "asyncio.Future.done()": "library/asyncio-future.html#asyncio.Future.done", "asyncio.Future.exception()": "library/asyncio-future.html#asyncio.Future.exception", "asyncio.Future.get_loop()": "library/asyncio-future.html#asyncio.Future.get_loop", "asyncio.Future.remove_done_callback()": "library/asyncio-future.html#asyncio.Future.remove_done_callback", "asyncio.Future.result()": "library/asyncio-future.html#asyncio.Future.result", "asyncio.Future.set_exception()": "library/asyncio-future.html#asyncio.Future.set_exception", "asyncio.Future.set_result()": "library/asyncio-future.html#asyncio.Future.set_result", "asyncio.gather()": "library/asyncio-task.html#asyncio.gather", "asyncio.get_child_watcher()": "library/asyncio-policy.html#asyncio.get_child_watcher", "asyncio.get_event_loop()": "library/asyncio-eventloop.html#asyncio.get_event_loop", "asyncio.get_event_loop_policy()": "library/asyncio-policy.html#asyncio.get_event_loop_policy", "asyncio.get_running_loop()": "library/asyncio-eventloop.html#asyncio.get_running_loop", "asyncio.Handle": "library/asyncio-eventloop.html#asyncio.Handle", "asyncio.Handle.cancel()": "library/asyncio-eventloop.html#asyncio.Handle.cancel", "asyncio.Handle.cancelled()": "library/asyncio-eventloop.html#asyncio.Handle.cancelled", "asyncio.Handle.get_context()": "library/asyncio-eventloop.html#asyncio.Handle.get_context", "asyncio.IncompleteReadError": "library/asyncio-exceptions.html#asyncio.IncompleteReadError", "asyncio.IncompleteReadError.expected": "library/asyncio-exceptions.html#asyncio.IncompleteReadError.expected", "asyncio.IncompleteReadError.partial": "library/asyncio-exceptions.html#asyncio.IncompleteReadError.partial", "asyncio.InvalidStateError": "library/asyncio-exceptions.html#asyncio.InvalidStateError", "asyncio.iscoroutine()": "library/asyncio-task.html#asyncio.iscoroutine", "asyncio.isfuture()": "library/asyncio-future.html#asyncio.isfuture", "asyncio.LifoQueue": "library/asyncio-queue.html#asyncio.LifoQueue", "asyncio.LimitOverrunError": "library/asyncio-exceptions.html#asyncio.LimitOverrunError", "asyncio.LimitOverrunError.consumed": "library/asyncio-exceptions.html#asyncio.LimitOverrunError.consumed", "asyncio.Lock": "library/asyncio-sync.html#asyncio.Lock", "asyncio.Lock.acquire()": "library/asyncio-sync.html#asyncio.Lock.acquire", "asyncio.Lock.locked()": "library/asyncio-sync.html#asyncio.Lock.locked", "asyncio.Lock.release()": "library/asyncio-sync.html#asyncio.Lock.release", "asyncio.loop.add_reader()": "library/asyncio-eventloop.html#asyncio.loop.add_reader", "asyncio.loop.add_signal_handler()": "library/asyncio-eventloop.html#asyncio.loop.add_signal_handler", "asyncio.loop.add_writer()": "library/asyncio-eventloop.html#asyncio.loop.add_writer", "asyncio.loop.call_at()": "library/asyncio-eventloop.html#asyncio.loop.call_at", "asyncio.loop.call_exception_handler()": "library/asyncio-eventloop.html#asyncio.loop.call_exception_handler", "asyncio.loop.call_later()": "library/asyncio-eventloop.html#asyncio.loop.call_later", "asyncio.loop.call_soon()": "library/asyncio-eventloop.html#asyncio.loop.call_soon", "asyncio.loop.call_soon_threadsafe()": "library/asyncio-eventloop.html#asyncio.loop.call_soon_threadsafe", "asyncio.loop.close()": "library/asyncio-eventloop.html#asyncio.loop.close", "asyncio.loop.connect_accepted_socket()": "library/asyncio-eventloop.html#asyncio.loop.connect_accepted_socket", "asyncio.loop.connect_read_pipe()": "library/asyncio-eventloop.html#asyncio.loop.connect_read_pipe", "asyncio.loop.connect_write_pipe()": "library/asyncio-eventloop.html#asyncio.loop.connect_write_pipe", "asyncio.loop.create_connection()": "library/asyncio-eventloop.html#asyncio.loop.create_connection", "asyncio.loop.create_datagram_endpoint()": "library/asyncio-eventloop.html#asyncio.loop.create_datagram_endpoint", "asyncio.loop.create_future()": "library/asyncio-eventloop.html#asyncio.loop.create_future", "asyncio.loop.create_server()": "library/asyncio-eventloop.html#asyncio.loop.create_server", "asyncio.loop.create_task()": "library/asyncio-eventloop.html#asyncio.loop.create_task", "asyncio.loop.create_unix_connection()": "library/asyncio-eventloop.html#asyncio.loop.create_unix_connection", "asyncio.loop.create_unix_server()": "library/asyncio-eventloop.html#asyncio.loop.create_unix_server", "asyncio.loop.default_exception_handler()": "library/asyncio-eventloop.html#asyncio.loop.default_exception_handler", "asyncio.loop.get_debug()": "library/asyncio-eventloop.html#asyncio.loop.get_debug", "asyncio.loop.get_exception_handler()": "library/asyncio-eventloop.html#asyncio.loop.get_exception_handler", "asyncio.loop.get_task_factory()": "library/asyncio-eventloop.html#asyncio.loop.get_task_factory", "asyncio.loop.getaddrinfo()": "library/asyncio-eventloop.html#asyncio.loop.getaddrinfo", "asyncio.loop.getnameinfo()": "library/asyncio-eventloop.html#asyncio.loop.getnameinfo", "asyncio.loop.is_closed()": "library/asyncio-eventloop.html#asyncio.loop.is_closed", "asyncio.loop.is_running()": "library/asyncio-eventloop.html#asyncio.loop.is_running", "asyncio.loop.remove_reader()": "library/asyncio-eventloop.html#asyncio.loop.remove_reader", "asyncio.loop.remove_signal_handler()": "library/asyncio-eventloop.html#asyncio.loop.remove_signal_handler", "asyncio.loop.remove_writer()": "library/asyncio-eventloop.html#asyncio.loop.remove_writer", "asyncio.loop.run_forever()": "library/asyncio-eventloop.html#asyncio.loop.run_forever", "asyncio.loop.run_in_executor()": "library/asyncio-eventloop.html#asyncio.loop.run_in_executor", "asyncio.loop.run_until_complete()": "library/asyncio-eventloop.html#asyncio.loop.run_until_complete", "asyncio.loop.sendfile()": "library/asyncio-eventloop.html#asyncio.loop.sendfile", "asyncio.loop.set_debug()": "library/asyncio-eventloop.html#asyncio.loop.set_debug", "asyncio.loop.set_default_executor()": "library/asyncio-eventloop.html#asyncio.loop.set_default_executor", "asyncio.loop.set_exception_handler()": "library/asyncio-eventloop.html#asyncio.loop.set_exception_handler", "asyncio.loop.set_task_factory()": "library/asyncio-eventloop.html#asyncio.loop.set_task_factory", "asyncio.loop.shutdown_asyncgens()": "library/asyncio-eventloop.html#asyncio.loop.shutdown_asyncgens", "asyncio.loop.shutdown_default_executor()": "library/asyncio-eventloop.html#asyncio.loop.shutdown_default_executor", "asyncio.loop.slow_callback_duration": "library/asyncio-eventloop.html#asyncio.loop.slow_callback_duration", "asyncio.loop.sock_accept()": "library/asyncio-eventloop.html#asyncio.loop.sock_accept", "asyncio.loop.sock_connect()": "library/asyncio-eventloop.html#asyncio.loop.sock_connect", "asyncio.loop.sock_recv()": "library/asyncio-eventloop.html#asyncio.loop.sock_recv", "asyncio.loop.sock_recv_into()": "library/asyncio-eventloop.html#asyncio.loop.sock_recv_into", "asyncio.loop.sock_recvfrom()": "library/asyncio-eventloop.html#asyncio.loop.sock_recvfrom", "asyncio.loop.sock_recvfrom_into()": "library/asyncio-eventloop.html#asyncio.loop.sock_recvfrom_into", "asyncio.loop.sock_sendall()": "library/asyncio-eventloop.html#asyncio.loop.sock_sendall", "asyncio.loop.sock_sendfile()": "library/asyncio-eventloop.html#asyncio.loop.sock_sendfile", "asyncio.loop.sock_sendto()": "library/asyncio-eventloop.html#asyncio.loop.sock_sendto", "asyncio.loop.start_tls()": "library/asyncio-eventloop.html#asyncio.loop.start_tls", "asyncio.loop.stop()": "library/asyncio-eventloop.html#asyncio.loop.stop", "asyncio.loop.subprocess_exec()": "library/asyncio-eventloop.html#asyncio.loop.subprocess_exec", "asyncio.loop.subprocess_shell()": "library/asyncio-eventloop.html#asyncio.loop.subprocess_shell", "asyncio.loop.time()": "library/asyncio-eventloop.html#asyncio.loop.time", "asyncio.MultiLoopChildWatcher": "library/asyncio-policy.html#asyncio.MultiLoopChildWatcher", "asyncio.new_event_loop()": "library/asyncio-eventloop.html#asyncio.new_event_loop", "asyncio.open_connection()": "library/asyncio-stream.html#asyncio.open_connection", "asyncio.open_unix_connection()": "library/asyncio-stream.html#asyncio.open_unix_connection", "asyncio.PidfdChildWatcher": "library/asyncio-policy.html#asyncio.PidfdChildWatcher", "asyncio.PriorityQueue": "library/asyncio-queue.html#asyncio.PriorityQueue", "asyncio.ProactorEventLoop": "library/asyncio-eventloop.html#asyncio.ProactorEventLoop", "asyncio.Protocol": "library/asyncio-protocol.html#asyncio.Protocol", "asyncio.Protocol.data_received()": "library/asyncio-protocol.html#asyncio.Protocol.data_received", "asyncio.Protocol.eof_received()": "library/asyncio-protocol.html#asyncio.Protocol.eof_received", "asyncio.Queue": "library/asyncio-queue.html#asyncio.Queue", "asyncio.Queue.empty()": "library/asyncio-queue.html#asyncio.Queue.empty", "asyncio.Queue.full()": "library/asyncio-queue.html#asyncio.Queue.full", "asyncio.Queue.get()": "library/asyncio-queue.html#asyncio.Queue.get", "asyncio.Queue.get_nowait()": "library/asyncio-queue.html#asyncio.Queue.get_nowait", "asyncio.Queue.join()": "library/asyncio-queue.html#asyncio.Queue.join", "asyncio.Queue.maxsize": "library/asyncio-queue.html#asyncio.Queue.maxsize", "asyncio.Queue.put()": "library/asyncio-queue.html#asyncio.Queue.put", "asyncio.Queue.put_nowait()": "library/asyncio-queue.html#asyncio.Queue.put_nowait", "asyncio.Queue.qsize()": "library/asyncio-queue.html#asyncio.Queue.qsize", "asyncio.Queue.shutdown()": "library/asyncio-queue.html#asyncio.Queue.shutdown", "asyncio.Queue.task_done()": "library/asyncio-queue.html#asyncio.Queue.task_done", "asyncio.QueueEmpty": "library/asyncio-queue.html#asyncio.QueueEmpty", "asyncio.QueueFull": "library/asyncio-queue.html#asyncio.QueueFull", "asyncio.QueueShutDown": "library/asyncio-queue.html#asyncio.QueueShutDown", "asyncio.ReadTransport": "library/asyncio-protocol.html#asyncio.ReadTransport", "asyncio.ReadTransport.is_reading()": "library/asyncio-protocol.html#asyncio.ReadTransport.is_reading", "asyncio.ReadTransport.pause_reading()": "library/asyncio-protocol.html#asyncio.ReadTransport.pause_reading", "asyncio.ReadTransport.resume_reading()": "library/asyncio-protocol.html#asyncio.ReadTransport.resume_reading", "asyncio.run()": "library/asyncio-runner.html#asyncio.run", "asyncio.run_coroutine_threadsafe()": "library/asyncio-task.html#asyncio.run_coroutine_threadsafe", "asyncio.Runner": "library/asyncio-runner.html#asyncio.Runner", "asyncio.Runner.close()": "library/asyncio-runner.html#asyncio.Runner.close", "asyncio.Runner.get_loop()": "library/asyncio-runner.html#asyncio.Runner.get_loop", "asyncio.Runner.run()": "library/asyncio-runner.html#asyncio.Runner.run", "asyncio.SafeChildWatcher": "library/asyncio-policy.html#asyncio.SafeChildWatcher", "asyncio.SelectorEventLoop": "library/asyncio-eventloop.html#asyncio.SelectorEventLoop", "asyncio.Semaphore": "library/asyncio-sync.html#asyncio.Semaphore", "asyncio.Semaphore.acquire()": "library/asyncio-sync.html#asyncio.Semaphore.acquire", "asyncio.Semaphore.locked()": "library/asyncio-sync.html#asyncio.Semaphore.locked", "asyncio.Semaphore.release()": "library/asyncio-sync.html#asyncio.Semaphore.release", "asyncio.SendfileNotAvailableError": "library/asyncio-exceptions.html#asyncio.SendfileNotAvailableError", "asyncio.Server": "library/asyncio-eventloop.html#asyncio.Server", "asyncio.Server.abort_clients()": "library/asyncio-eventloop.html#asyncio.Server.abort_clients", "asyncio.Server.close()": "library/asyncio-eventloop.html#asyncio.Server.close", "asyncio.Server.close_clients()": "library/asyncio-eventloop.html#asyncio.Server.close_clients", "asyncio.Server.get_loop()": "library/asyncio-eventloop.html#asyncio.Server.get_loop", "asyncio.Server.is_serving()": "library/asyncio-eventloop.html#asyncio.Server.is_serving", "asyncio.Server.serve_forever()": "library/asyncio-eventloop.html#asyncio.Server.serve_forever", "asyncio.Server.sockets": "library/asyncio-eventloop.html#asyncio.Server.sockets", "asyncio.Server.start_serving()": "library/asyncio-eventloop.html#asyncio.Server.start_serving", "asyncio.Server.wait_closed()": "library/asyncio-eventloop.html#asyncio.Server.wait_closed", "asyncio.set_child_watcher()": "library/asyncio-policy.html#asyncio.set_child_watcher", "asyncio.set_event_loop()": "library/asyncio-eventloop.html#asyncio.set_event_loop", "asyncio.set_event_loop_policy()": "library/asyncio-policy.html#asyncio.set_event_loop_policy", "asyncio.shield()": "library/asyncio-task.html#asyncio.shield", "asyncio.sleep()": "library/asyncio-task.html#asyncio.sleep", "asyncio.start_server()": "library/asyncio-stream.html#asyncio.start_server", "asyncio.start_unix_server()": "library/asyncio-stream.html#asyncio.start_unix_server", "asyncio.StreamReader": "library/asyncio-stream.html#asyncio.StreamReader", "asyncio.StreamReader.at_eof()": "library/asyncio-stream.html#asyncio.StreamReader.at_eof", "asyncio.StreamReader.feed_eof()": "library/asyncio-stream.html#asyncio.StreamReader.feed_eof", "asyncio.StreamReader.read()": "library/asyncio-stream.html#asyncio.StreamReader.read", "asyncio.StreamReader.readexactly()": "library/asyncio-stream.html#asyncio.StreamReader.readexactly", "asyncio.StreamReader.readline()": "library/asyncio-stream.html#asyncio.StreamReader.readline", "asyncio.StreamReader.readuntil()": "library/asyncio-stream.html#asyncio.StreamReader.readuntil", "asyncio.StreamWriter": "library/asyncio-stream.html#asyncio.StreamWriter", "asyncio.StreamWriter.can_write_eof()": "library/asyncio-stream.html#asyncio.StreamWriter.can_write_eof", "asyncio.StreamWriter.close()": "library/asyncio-stream.html#asyncio.StreamWriter.close", "asyncio.StreamWriter.drain()": "library/asyncio-stream.html#asyncio.StreamWriter.drain", "asyncio.StreamWriter.get_extra_info()": "library/asyncio-stream.html#asyncio.StreamWriter.get_extra_info", "asyncio.StreamWriter.is_closing()": "library/asyncio-stream.html#asyncio.StreamWriter.is_closing", "asyncio.StreamWriter.start_tls()": "library/asyncio-stream.html#asyncio.StreamWriter.start_tls", "asyncio.StreamWriter.transport": "library/asyncio-stream.html#asyncio.StreamWriter.transport", "asyncio.StreamWriter.wait_closed()": "library/asyncio-stream.html#asyncio.StreamWriter.wait_closed", "asyncio.StreamWriter.write()": "library/asyncio-stream.html#asyncio.StreamWriter.write", "asyncio.StreamWriter.write_eof()": "library/asyncio-stream.html#asyncio.StreamWriter.write_eof", "asyncio.StreamWriter.writelines()": "library/asyncio-stream.html#asyncio.StreamWriter.writelines", "asyncio.subprocess.DEVNULL": "library/asyncio-subprocess.html#asyncio.subprocess.DEVNULL", "asyncio.subprocess.PIPE": "library/asyncio-subprocess.html#asyncio.subprocess.PIPE", "asyncio.subprocess.Process": "library/asyncio-subprocess.html#asyncio.subprocess.Process", "asyncio.subprocess.Process.communicate()": "library/asyncio-subprocess.html#asyncio.subprocess.Process.communicate", "asyncio.subprocess.Process.kill()": "library/asyncio-subprocess.html#asyncio.subprocess.Process.kill", "asyncio.subprocess.Process.pid": "library/asyncio-subprocess.html#asyncio.subprocess.Process.pid", "asyncio.subprocess.Process.returncode": "library/asyncio-subprocess.html#asyncio.subprocess.Process.returncode", "asyncio.subprocess.Process.send_signal()": "library/asyncio-subprocess.html#asyncio.subprocess.Process.send_signal", "asyncio.subprocess.Process.stderr": "library/asyncio-subprocess.html#asyncio.subprocess.Process.stderr", "asyncio.subprocess.Process.stdin": "library/asyncio-subprocess.html#asyncio.subprocess.Process.stdin", "asyncio.subprocess.Process.stdout": "library/asyncio-subprocess.html#asyncio.subprocess.Process.stdout", "asyncio.subprocess.Process.terminate()": "library/asyncio-subprocess.html#asyncio.subprocess.Process.terminate", "asyncio.subprocess.Process.wait()": "library/asyncio-subprocess.html#asyncio.subprocess.Process.wait", "asyncio.subprocess.STDOUT": "library/asyncio-subprocess.html#asyncio.subprocess.STDOUT", "asyncio.SubprocessProtocol": "library/asyncio-protocol.html#asyncio.SubprocessProtocol", "asyncio.SubprocessProtocol.pipe_connection_lost()": "library/asyncio-protocol.html#asyncio.SubprocessProtocol.pipe_connection_lost", "asyncio.SubprocessProtocol.pipe_data_received()": "library/asyncio-protocol.html#asyncio.SubprocessProtocol.pipe_data_received", "asyncio.SubprocessProtocol.process_exited()": "library/asyncio-protocol.html#asyncio.SubprocessProtocol.process_exited", "asyncio.SubprocessTransport": "library/asyncio-protocol.html#asyncio.SubprocessTransport", "asyncio.SubprocessTransport.close()": "library/asyncio-protocol.html#asyncio.SubprocessTransport.close", "asyncio.SubprocessTransport.get_pid()": "library/asyncio-protocol.html#asyncio.SubprocessTransport.get_pid", "asyncio.SubprocessTransport.get_pipe_transport()": "library/asyncio-protocol.html#asyncio.SubprocessTransport.get_pipe_transport", "asyncio.SubprocessTransport.get_returncode()": "library/asyncio-protocol.html#asyncio.SubprocessTransport.get_returncode", "asyncio.SubprocessTransport.kill()": "library/asyncio-protocol.html#asyncio.SubprocessTransport.kill", "asyncio.SubprocessTransport.send_signal()": "library/asyncio-protocol.html#asyncio.SubprocessTransport.send_signal", "asyncio.SubprocessTransport.terminate()": "library/asyncio-protocol.html#asyncio.SubprocessTransport.terminate", "asyncio.Task": "library/asyncio-task.html#asyncio.Task", "asyncio.Task.__init__()": "library/asyncio-extending.html#asyncio.Task.__init__", "asyncio.Task.add_done_callback()": "library/asyncio-task.html#asyncio.Task.add_done_callback", "asyncio.Task.cancel()": "library/asyncio-task.html#asyncio.Task.cancel", "asyncio.Task.cancelled()": "library/asyncio-task.html#asyncio.Task.cancelled", "asyncio.Task.cancelling()": "library/asyncio-task.html#asyncio.Task.cancelling", "asyncio.Task.done()": "library/asyncio-task.html#asyncio.Task.done", "asyncio.Task.exception()": "library/asyncio-task.html#asyncio.Task.exception", "asyncio.Task.get_context()": "library/asyncio-task.html#asyncio.Task.get_context", "asyncio.Task.get_coro()": "library/asyncio-task.html#asyncio.Task.get_coro", "asyncio.Task.get_name()": "library/asyncio-task.html#asyncio.Task.get_name", "asyncio.Task.get_stack()": "library/asyncio-task.html#asyncio.Task.get_stack", "asyncio.Task.print_stack()": "library/asyncio-task.html#asyncio.Task.print_stack", "asyncio.Task.remove_done_callback()": "library/asyncio-task.html#asyncio.Task.remove_done_callback", "asyncio.Task.result()": "library/asyncio-task.html#asyncio.Task.result", "asyncio.Task.set_name()": "library/asyncio-task.html#asyncio.Task.set_name", "asyncio.Task.uncancel()": "library/asyncio-task.html#asyncio.Task.uncancel", "asyncio.TaskGroup": "library/asyncio-task.html#asyncio.TaskGroup", "asyncio.TaskGroup.create_task()": "library/asyncio-task.html#asyncio.TaskGroup.create_task", "asyncio.ThreadedChildWatcher": "library/asyncio-policy.html#asyncio.ThreadedChildWatcher", "asyncio.Timeout": "library/asyncio-task.html#asyncio.Timeout", "asyncio.timeout()": "library/asyncio-task.html#asyncio.timeout", "asyncio.Timeout.expired()": "library/asyncio-task.html#asyncio.Timeout.expired", "asyncio.Timeout.reschedule()": "library/asyncio-task.html#asyncio.Timeout.reschedule", "asyncio.Timeout.when()": "library/asyncio-task.html#asyncio.Timeout.when", "asyncio.timeout_at()": "library/asyncio-task.html#asyncio.timeout_at", "asyncio.TimeoutError": "library/asyncio-exceptions.html#asyncio.TimeoutError", "asyncio.TimerHandle": "library/asyncio-eventloop.html#asyncio.TimerHandle", "asyncio.TimerHandle.when()": "library/asyncio-eventloop.html#asyncio.TimerHandle.when", "asyncio.to_thread()": "library/asyncio-task.html#asyncio.to_thread", "asyncio.Transport": "library/asyncio-protocol.html#asyncio.Transport", "asyncio.wait()": "library/asyncio-task.html#asyncio.wait", "asyncio.wait_for()": "library/asyncio-task.html#asyncio.wait_for", "asyncio.WindowsProactorEventLoopPolicy": "library/asyncio-policy.html#asyncio.WindowsProactorEventLoopPolicy", "asyncio.WindowsSelectorEventLoopPolicy": "library/asyncio-policy.html#asyncio.WindowsSelectorEventLoopPolicy", "asyncio.wrap_future()": "library/asyncio-future.html#asyncio.wrap_future", "asyncio.WriteTransport": "library/asyncio-protocol.html#asyncio.WriteTransport", "asyncio.WriteTransport.abort()": "library/asyncio-protocol.html#asyncio.WriteTransport.abort", "asyncio.WriteTransport.can_write_eof()": "library/asyncio-protocol.html#asyncio.WriteTransport.can_write_eof", "asyncio.WriteTransport.get_write_buffer_limits()": "library/asyncio-protocol.html#asyncio.WriteTransport.get_write_buffer_limits", "asyncio.WriteTransport.get_write_buffer_size()": "library/asyncio-protocol.html#asyncio.WriteTransport.get_write_buffer_size", "asyncio.WriteTransport.set_write_buffer_limits()": "library/asyncio-protocol.html#asyncio.WriteTransport.set_write_buffer_limits", "asyncio.WriteTransport.write()": "library/asyncio-protocol.html#asyncio.WriteTransport.write", "asyncio.WriteTransport.write_eof()": "library/asyncio-protocol.html#asyncio.WriteTransport.write_eof", "asyncio.WriteTransport.writelines()": "library/asyncio-protocol.html#asyncio.WriteTransport.writelines", "atexit": "library/atexit.html", "atexit Example (atexit)": "library/atexit.html#atexit-example", "atexit.register()": "library/atexit.html#atexit.register", "atexit.unregister()": "library/atexit.html#atexit.unregister", "attribute": "glossary.html#term-attribute", "AttributeError": "library/exceptions.html#AttributeError", "Attributes (hashlib)": "library/hashlib.html#attributes", "Audit events table": "library/audit_events.html", "augmented (assignment)": "reference/simple_stmts.html#index-14", "Available Context Managers (warnings)": "library/warnings.html#available-context-managers", "Available Functions (warnings)": "library/warnings.html#available-functions", "Available Types (datetime)": "library/datetime.html#available-types", "Averages and measures of central location (statistics)": "library/statistics.html#averages-and-measures-of-central-location", "await (keyword)": "reference/compound_stmts.html#index-49", "awaitable": "glossary.html#term-awaitable", "Awaitables (Coroutines and Tasks)": "library/asyncio-task.html#awaitables", "Aware and Naive Objects (datetime)": "library/datetime.html#aware-and-naive-objects", "Background, details, hints, tips and caveats (locale)": "library/locale.html#background-details-hints-tips-and-caveats", "Bad file descriptor error example (Python Development Mode)": "library/devmode.html#bad-file-descriptor-error-example", "Barrier (Synchronization Primitives)": "library/asyncio-sync.html#barrier", "Barrier Objects (threading)": "library/threading.html#barrier-objects", "Base classes (Exceptions)": "library/exceptions.html#base-classes", "base64": "library/base64.html", "base64.a85decode()": "library/base64.html#base64.a85decode", "base64.a85encode()": "library/base64.html#base64.a85encode", "base64.b16decode()": "library/base64.html#base64.b16decode", "base64.b16encode()": "library/base64.html#base64.b16encode", "base64.b32decode()": "library/base64.html#base64.b32decode", "base64.b32encode()": "library/base64.html#base64.b32encode", "base64.b32hexdecode()": "library/base64.html#base64.b32hexdecode", "base64.b32hexencode()": "library/base64.html#base64.b32hexencode", "base64.b64decode()": "library/base64.html#base64.b64decode", "base64.b64encode()": "library/base64.html#base64.b64encode", "base64.b85decode()": "library/base64.html#base64.b85decode", "base64.b85encode()": "library/base64.html#base64.b85encode", "base64.decode()": "library/base64.html#base64.decode", "base64.decodebytes()": "library/base64.html#base64.decodebytes", "base64.encode()": "library/base64.html#base64.encode", "base64.encodebytes()": "library/base64.html#base64.encodebytes", "base64.standard_b64decode()": "library/base64.html#base64.standard_b64decode", "base64.standard_b64encode()": "library/base64.html#base64.standard_b64encode", "base64.urlsafe_b64decode()": "library/base64.html#base64.urlsafe_b64decode", "base64.urlsafe_b64encode()": "library/base64.html#base64.urlsafe_b64encode", "base64.z85decode()": "library/base64.html#base64.z85decode", "base64.z85encode()": "library/base64.html#base64.z85encode", "BaseException": "library/exceptions.html#BaseException", "BaseException.__cause__": "library/exceptions.html#BaseException.__cause__", "BaseException.__context__": "library/exceptions.html#BaseException.__context__", "BaseException.__notes__": "library/exceptions.html#BaseException.__notes__", "BaseException.__suppress_context__": "library/exceptions.html#BaseException.__suppress_context__", "BaseException.__traceback__": "library/exceptions.html#BaseException.__traceback__", "BaseException.add_note()": "library/exceptions.html#BaseException.add_note", "BaseException.args": "library/exceptions.html#BaseException.args", "BaseException.with_traceback()": "library/exceptions.html#BaseException.with_traceback", "BaseExceptionGroup": "library/exceptions.html#BaseExceptionGroup", "BaseExceptionGroup.derive()": "library/exceptions.html#BaseExceptionGroup.derive", "BaseExceptionGroup.exceptions": "library/exceptions.html#BaseExceptionGroup.exceptions", "BaseExceptionGroup.message": "library/exceptions.html#BaseExceptionGroup.message", "BaseExceptionGroup.split()": "library/exceptions.html#BaseExceptionGroup.split", "BaseExceptionGroup.subgroup()": "library/exceptions.html#BaseExceptionGroup.subgroup", "BaseHandler Objects (urllib.request)": "library/urllib.request.html#basehandler-objects", "BaseRotatingHandler (logging.handlers)": "library/logging.handlers.html#baserotatinghandler", "Basic API (doctest)": "library/doctest.html#basic-api", "Basic example (unittest)": "library/unittest.html#basic-example", "Basic Example (zipapp)": "library/zipapp.html#basic-example", "Basic Examples (heapq)": "library/heapq.html#basic-examples", "Basic Examples (timeit)": "library/timeit.html#basic-examples", "Basic Usage (json)": "library/json.html#basic-usage", "Basic use (pathlib)": "library/pathlib.html#basic-use", "bdb": "library/bdb.html", "bdb.Bdb": "library/bdb.html#bdb.Bdb", "bdb.Bdb.break_anywhere()": "library/bdb.html#bdb.Bdb.break_anywhere", "bdb.Bdb.break_here()": "library/bdb.html#bdb.Bdb.break_here", "bdb.Bdb.canonic()": "library/bdb.html#bdb.Bdb.canonic", "bdb.Bdb.clear_all_breaks()": "library/bdb.html#bdb.Bdb.clear_all_breaks", "bdb.Bdb.clear_all_file_breaks()": "library/bdb.html#bdb.Bdb.clear_all_file_breaks", "bdb.Bdb.clear_bpbynumber()": "library/bdb.html#bdb.Bdb.clear_bpbynumber", "bdb.Bdb.clear_break()": "library/bdb.html#bdb.Bdb.clear_break", "bdb.Bdb.dispatch_call()": "library/bdb.html#bdb.Bdb.dispatch_call", "bdb.Bdb.dispatch_exception()": "library/bdb.html#bdb.Bdb.dispatch_exception", "bdb.Bdb.dispatch_line()": "library/bdb.html#bdb.Bdb.dispatch_line", "bdb.Bdb.dispatch_return()": "library/bdb.html#bdb.Bdb.dispatch_return", "bdb.Bdb.do_clear()": "library/bdb.html#bdb.Bdb.do_clear", "bdb.Bdb.format_stack_entry()": "library/bdb.html#bdb.Bdb.format_stack_entry", "bdb.Bdb.get_all_breaks()": "library/bdb.html#bdb.Bdb.get_all_breaks", "bdb.Bdb.get_bpbynumber()": "library/bdb.html#bdb.Bdb.get_bpbynumber", "bdb.Bdb.get_break()": "library/bdb.html#bdb.Bdb.get_break", "bdb.Bdb.get_breaks()": "library/bdb.html#bdb.Bdb.get_breaks", "bdb.Bdb.get_file_breaks()": "library/bdb.html#bdb.Bdb.get_file_breaks", "bdb.Bdb.get_stack()": "library/bdb.html#bdb.Bdb.get_stack", "bdb.Bdb.is_skipped_line()": "library/bdb.html#bdb.Bdb.is_skipped_line", "bdb.Bdb.reset()": "library/bdb.html#bdb.Bdb.reset", "bdb.Bdb.run()": "library/bdb.html#bdb.Bdb.run", "bdb.Bdb.runcall()": "library/bdb.html#bdb.Bdb.runcall", "bdb.Bdb.runctx()": "library/bdb.html#bdb.Bdb.runctx", "bdb.Bdb.runeval()": "library/bdb.html#bdb.Bdb.runeval", "bdb.Bdb.set_break()": "library/bdb.html#bdb.Bdb.set_break", "bdb.Bdb.set_continue()": "library/bdb.html#bdb.Bdb.set_continue", "bdb.Bdb.set_next()": "library/bdb.html#bdb.Bdb.set_next", "bdb.Bdb.set_quit()": "library/bdb.html#bdb.Bdb.set_quit", "bdb.Bdb.set_return()": "library/bdb.html#bdb.Bdb.set_return", "bdb.Bdb.set_step()": "library/bdb.html#bdb.Bdb.set_step", "bdb.Bdb.set_trace()": "library/bdb.html#bdb.Bdb.set_trace", "bdb.Bdb.set_until()": "library/bdb.html#bdb.Bdb.set_until", "bdb.Bdb.stop_here()": "library/bdb.html#bdb.Bdb.stop_here", "bdb.Bdb.trace_dispatch()": "library/bdb.html#bdb.Bdb.trace_dispatch", "bdb.Bdb.user_call()": "library/bdb.html#bdb.Bdb.user_call", "bdb.Bdb.user_exception()": "library/bdb.html#bdb.Bdb.user_exception", "bdb.Bdb.user_line()": "library/bdb.html#bdb.Bdb.user_line", "bdb.Bdb.user_return()": "library/bdb.html#bdb.Bdb.user_return", "bdb.BdbQuit": "library/bdb.html#bdb.BdbQuit", "bdb.Breakpoint": "library/bdb.html#bdb.Breakpoint", "bdb.Breakpoint.bpbynumber": "library/bdb.html#bdb.Breakpoint.bpbynumber", "bdb.Breakpoint.bpformat()": "library/bdb.html#bdb.Breakpoint.bpformat", "bdb.Breakpoint.bplist": "library/bdb.html#bdb.Breakpoint.bplist", "bdb.Breakpoint.bpprint()": "library/bdb.html#bdb.Breakpoint.bpprint", "bdb.Breakpoint.cond": "library/bdb.html#bdb.Breakpoint.cond", "bdb.Breakpoint.deleteMe()": "library/bdb.html#bdb.Breakpoint.deleteMe", "bdb.Breakpoint.disable()": "library/bdb.html#bdb.Breakpoint.disable", "bdb.Breakpoint.enable()": "library/bdb.html#bdb.Breakpoint.enable", "bdb.Breakpoint.enabled": "library/bdb.html#bdb.Breakpoint.enabled", "bdb.Breakpoint.file": "library/bdb.html#bdb.Breakpoint.file", "bdb.Breakpoint.funcname": "library/bdb.html#bdb.Breakpoint.funcname", "bdb.Breakpoint.hits": "library/bdb.html#bdb.Breakpoint.hits", "bdb.Breakpoint.ignore": "library/bdb.html#bdb.Breakpoint.ignore", "bdb.Breakpoint.line": "library/bdb.html#bdb.Breakpoint.line", "bdb.Breakpoint.temporary": "library/bdb.html#bdb.Breakpoint.temporary", "bdb.checkfuncname()": "library/bdb.html#bdb.checkfuncname", "bdb.effective()": "library/bdb.html#bdb.effective", "bdb.set_trace()": "library/bdb.html#bdb.set_trace", "BDFL": "glossary.html#term-BDFL", "bin()": "library/functions.html#bin", "Binary Data Services": "library/binary.html", "binary file": "glossary.html#term-binary-file", "Binary Objects (xmlrpc.client)": "library/xmlrpc.client.html#binary-objects", "Binary Sequence Types \u2014 bytes, bytearray, memoryview (Types)": "library/stdtypes.html#binary-sequence-types-bytes-bytearray-memoryview", "binascii": "library/binascii.html", "binascii.a2b_base64()": "library/binascii.html#binascii.a2b_base64", "binascii.a2b_hex()": "library/binascii.html#binascii.a2b_hex", "binascii.a2b_qp()": "library/binascii.html#binascii.a2b_qp", "binascii.a2b_uu()": "library/binascii.html#binascii.a2b_uu", "binascii.b2a_base64()": "library/binascii.html#binascii.b2a_base64", "binascii.b2a_hex()": "library/binascii.html#binascii.b2a_hex", "binascii.b2a_qp()": "library/binascii.html#binascii.b2a_qp", "binascii.b2a_uu()": "library/binascii.html#binascii.b2a_uu", "binascii.crc32()": "library/binascii.html#binascii.crc32", "binascii.crc_hqx()": "library/binascii.html#binascii.crc_hqx", "binascii.Error": "library/binascii.html#binascii.Error", "binascii.hexlify()": "library/binascii.html#binascii.hexlify", "binascii.Incomplete": "library/binascii.html#binascii.Incomplete", "binascii.unhexlify()": "library/binascii.html#binascii.unhexlify", "binding (global name)": "reference/simple_stmts.html#index-43", "binding (name)": "reference/compound_stmts.html#index-28", "bisect": "library/bisect.html", "bisect.bisect()": "library/bisect.html#bisect.bisect", "bisect.bisect_left()": "library/bisect.html#bisect.bisect_left", "bisect.bisect_right()": "library/bisect.html#bisect.bisect_right", "bisect.insort()": "library/bisect.html#bisect.insort", "bisect.insort_left()": "library/bisect.html#bisect.insort_left", "bisect.insort_right()": "library/bisect.html#bisect.insort_right", "BLAKE2 (hashlib)": "library/hashlib.html#blake2", "BlockingIOError": "library/exceptions.html#BlockingIOError", "BlockingIOError.characters_written": "library/exceptions.html#BlockingIOError.characters_written", "Bookkeeping functions (random)": "library/random.html#bookkeeping-functions", "bool": "library/functions.html#bool", "Boolean Objects": "c-api/bool.html", "Boolean Operations \u2014 and, or, not (Types)": "library/stdtypes.html#boolean-operations-and-or-not", "Boolean Type - bool (Types)": "library/stdtypes.html#boolean-type-bool", "borrowed reference": "glossary.html#term-borrowed-reference", "BoundedSemaphore (Synchronization Primitives)": "library/asyncio-sync.html#boundedsemaphore", "break (statement)": "reference/simple_stmts.html#index-30", "breakpoint()": "library/functions.html#breakpoint", "BrokenPipeError": "library/exceptions.html#BrokenPipeError", "Browser Controller Objects (webbrowser)": "library/webbrowser.html#browser-controller-objects", "Buffer flags (inspect)": "library/inspect.html#buffer-flags", "Buffer Protocol": "c-api/buffer.html", "BufferError": "library/exceptions.html#BufferError", "Building C and C++ Extensions": "extending/building.html", "Building C and C++ Extensions on Windows": "extending/windows.html", "built-in function (range)": "reference/compound_stmts.html#index-8", "builtins": "library/builtins.html", "Byte Array Objects": "c-api/bytearray.html", "bytearray": "library/stdtypes.html#bytearray", "bytearray.capitalize()": "library/stdtypes.html#bytearray.capitalize", "bytearray.center()": "library/stdtypes.html#bytearray.center", "bytearray.count()": "library/stdtypes.html#bytearray.count", "bytearray.decode()": "library/stdtypes.html#bytearray.decode", "bytearray.endswith()": "library/stdtypes.html#bytearray.endswith", "bytearray.expandtabs()": "library/stdtypes.html#bytearray.expandtabs", "bytearray.find()": "library/stdtypes.html#bytearray.find", "bytearray.fromhex()": "library/stdtypes.html#bytearray.fromhex", "bytearray.hex()": "library/stdtypes.html#bytearray.hex", "bytearray.index()": "library/stdtypes.html#bytearray.index", "bytearray.isalnum()": "library/stdtypes.html#bytearray.isalnum", "bytearray.isalpha()": "library/stdtypes.html#bytearray.isalpha", "bytearray.isascii()": "library/stdtypes.html#bytearray.isascii", "bytearray.isdigit()": "library/stdtypes.html#bytearray.isdigit", "bytearray.islower()": "library/stdtypes.html#bytearray.islower", "bytearray.isspace()": "library/stdtypes.html#bytearray.isspace", "bytearray.istitle()": "library/stdtypes.html#bytearray.istitle", "bytearray.isupper()": "library/stdtypes.html#bytearray.isupper", "bytearray.join()": "library/stdtypes.html#bytearray.join", "bytearray.ljust()": "library/stdtypes.html#bytearray.ljust", "bytearray.lower()": "library/stdtypes.html#bytearray.lower", "bytearray.lstrip()": "library/stdtypes.html#bytearray.lstrip", "bytearray.maketrans()": "library/stdtypes.html#bytearray.maketrans", "bytearray.partition()": "library/stdtypes.html#bytearray.partition", "bytearray.removeprefix()": "library/stdtypes.html#bytearray.removeprefix", "bytearray.removesuffix()": "library/stdtypes.html#bytearray.removesuffix", "bytearray.replace()": "library/stdtypes.html#bytearray.replace", "bytearray.rfind()": "library/stdtypes.html#bytearray.rfind", "bytearray.rindex()": "library/stdtypes.html#bytearray.rindex", "bytearray.rjust()": "library/stdtypes.html#bytearray.rjust", "bytearray.rpartition()": "library/stdtypes.html#bytearray.rpartition", "bytearray.rsplit()": "library/stdtypes.html#bytearray.rsplit", "bytearray.rstrip()": "library/stdtypes.html#bytearray.rstrip", "bytearray.split()": "library/stdtypes.html#bytearray.split", "bytearray.splitlines()": "library/stdtypes.html#bytearray.splitlines", "bytearray.startswith()": "library/stdtypes.html#bytearray.startswith", "bytearray.strip()": "library/stdtypes.html#bytearray.strip", "bytearray.swapcase()": "library/stdtypes.html#bytearray.swapcase", "bytearray.title()": "library/stdtypes.html#bytearray.title", "bytearray.translate()": "library/stdtypes.html#bytearray.translate", "bytearray.upper()": "library/stdtypes.html#bytearray.upper", "bytearray.zfill()": "library/stdtypes.html#bytearray.zfill", "bytecode": "glossary.html#term-bytecode", "Bytecode analysis (dis)": "library/dis.html#bytecode-analysis", "bytes": "library/stdtypes.html#bytes", "Bytes Objects": "c-api/bytes.html", "bytes-like object": "glossary.html#term-bytes-like-object", "bytes.capitalize()": "library/stdtypes.html#bytes.capitalize", "bytes.center()": "library/stdtypes.html#bytes.center", "bytes.count()": "library/stdtypes.html#bytes.count", "bytes.decode()": "library/stdtypes.html#bytes.decode", "bytes.endswith()": "library/stdtypes.html#bytes.endswith", "bytes.expandtabs()": "library/stdtypes.html#bytes.expandtabs", "bytes.find()": "library/stdtypes.html#bytes.find", "bytes.fromhex()": "library/stdtypes.html#bytes.fromhex", "bytes.hex()": "library/stdtypes.html#bytes.hex", "bytes.index()": "library/stdtypes.html#bytes.index", "bytes.isalnum()": "library/stdtypes.html#bytes.isalnum", "bytes.isalpha()": "library/stdtypes.html#bytes.isalpha", "bytes.isascii()": "library/stdtypes.html#bytes.isascii", "bytes.isdigit()": "library/stdtypes.html#bytes.isdigit", "bytes.islower()": "library/stdtypes.html#bytes.islower", "bytes.isspace()": "library/stdtypes.html#bytes.isspace", "bytes.istitle()": "library/stdtypes.html#bytes.istitle", "bytes.isupper()": "library/stdtypes.html#bytes.isupper", "bytes.join()": "library/stdtypes.html#bytes.join", "bytes.ljust()": "library/stdtypes.html#bytes.ljust", "bytes.lower()": "library/stdtypes.html#bytes.lower", "bytes.lstrip()": "library/stdtypes.html#bytes.lstrip", "bytes.maketrans()": "library/stdtypes.html#bytes.maketrans", "bytes.partition()": "library/stdtypes.html#bytes.partition", "bytes.removeprefix()": "library/stdtypes.html#bytes.removeprefix", "bytes.removesuffix()": "library/stdtypes.html#bytes.removesuffix", "bytes.replace()": "library/stdtypes.html#bytes.replace", "bytes.rfind()": "library/stdtypes.html#bytes.rfind", "bytes.rindex()": "library/stdtypes.html#bytes.rindex", "bytes.rjust()": "library/stdtypes.html#bytes.rjust", "bytes.rpartition()": "library/stdtypes.html#bytes.rpartition", "bytes.rsplit()": "library/stdtypes.html#bytes.rsplit", "bytes.rstrip()": "library/stdtypes.html#bytes.rstrip", "bytes.split()": "library/stdtypes.html#bytes.split", "bytes.splitlines()": "library/stdtypes.html#bytes.splitlines", "bytes.startswith()": "library/stdtypes.html#bytes.startswith", "bytes.strip()": "library/stdtypes.html#bytes.strip", "bytes.swapcase()": "library/stdtypes.html#bytes.swapcase", "bytes.title()": "library/stdtypes.html#bytes.title", "bytes.translate()": "library/stdtypes.html#bytes.translate", "bytes.upper()": "library/stdtypes.html#bytes.upper", "bytes.zfill()": "library/stdtypes.html#bytes.zfill", "BytesWarning": "library/exceptions.html#BytesWarning", "bz2": "library/bz2.html", "bz2.BZ2Compressor": "library/bz2.html#bz2.BZ2Compressor", "bz2.BZ2Compressor.compress()": "library/bz2.html#bz2.BZ2Compressor.compress", "bz2.BZ2Compressor.flush()": "library/bz2.html#bz2.BZ2Compressor.flush", "bz2.BZ2Decompressor": "library/bz2.html#bz2.BZ2Decompressor", "bz2.BZ2Decompressor.decompress()": "library/bz2.html#bz2.BZ2Decompressor.decompress", "bz2.BZ2Decompressor.eof": "library/bz2.html#bz2.BZ2Decompressor.eof", "bz2.BZ2Decompressor.needs_input": "library/bz2.html#bz2.BZ2Decompressor.needs_input", "bz2.BZ2Decompressor.unused_data": "library/bz2.html#bz2.BZ2Decompressor.unused_data", "bz2.BZ2File": "library/bz2.html#bz2.BZ2File", "bz2.BZ2File.fileno()": "library/bz2.html#bz2.BZ2File.fileno", "bz2.BZ2File.mode": "library/bz2.html#bz2.BZ2File.mode", "bz2.BZ2File.name": "library/bz2.html#bz2.BZ2File.name", "bz2.BZ2File.peek()": "library/bz2.html#bz2.BZ2File.peek", "bz2.BZ2File.read1()": "library/bz2.html#bz2.BZ2File.read1", "bz2.BZ2File.readable()": "library/bz2.html#bz2.BZ2File.readable", "bz2.BZ2File.readinto()": "library/bz2.html#bz2.BZ2File.readinto", "bz2.BZ2File.seekable()": "library/bz2.html#bz2.BZ2File.seekable", "bz2.BZ2File.writable()": "library/bz2.html#bz2.BZ2File.writable", "bz2.compress()": "library/bz2.html#bz2.compress", "bz2.decompress()": "library/bz2.html#bz2.decompress", "bz2.open()": "library/bz2.html#bz2.open", "C API Extension Support for Free Threading": "howto/free-threading-extensions.html", "C API Stability": "c-api/stable.html", "c._Py_c_diff()": "c-api/complex.html#c._Py_c_diff", "c._Py_c_neg()": "c-api/complex.html#c._Py_c_neg", "c._Py_c_pow()": "c-api/complex.html#c._Py_c_pow", "c._Py_c_prod()": "c-api/complex.html#c._Py_c_prod", "c._Py_c_quot()": "c-api/complex.html#c._Py_c_quot", "c._Py_c_sum()": "c-api/complex.html#c._Py_c_sum", "c._Py_InitializeMain()": "c-api/init_config.html#c._Py_InitializeMain", "c._PyBytes_Resize()": "c-api/bytes.html#c._PyBytes_Resize", "c._PyInterpreterState_GetEvalFrameFunc()": "c-api/init.html#c._PyInterpreterState_GetEvalFrameFunc", "c._PyInterpreterState_SetEvalFrameFunc()": "c-api/init.html#c._PyInterpreterState_SetEvalFrameFunc", "c._PyObject_GetDictPtr()": "c-api/object.html#c._PyObject_GetDictPtr", "c._PyObject_New()": "c-api/allocation.html#c._PyObject_New", "c._PyObject_NewVar()": "c-api/allocation.html#c._PyObject_NewVar", "c._PyTuple_Resize()": "c-api/tuple.html#c._PyTuple_Resize", "c.Py_AddPendingCall()": "c-api/init.html#c.Py_AddPendingCall", "c.Py_AtExit()": "c-api/sys.html#c.Py_AtExit", "c.Py_BuildValue()": "c-api/arg.html#c.Py_BuildValue", "c.Py_BytesMain()": "c-api/veryhigh.html#c.Py_BytesMain", "c.Py_CLEAR()": "c-api/refcounting.html#c.Py_CLEAR", "c.Py_CompileString()": "c-api/veryhigh.html#c.Py_CompileString", "c.Py_CompileStringExFlags()": "c-api/veryhigh.html#c.Py_CompileStringExFlags", "c.Py_CompileStringFlags()": "c-api/veryhigh.html#c.Py_CompileStringFlags", "c.Py_CompileStringObject()": "c-api/veryhigh.html#c.Py_CompileStringObject", "c.Py_DecodeLocale()": "c-api/sys.html#c.Py_DecodeLocale", "c.Py_DECREF()": "c-api/refcounting.html#c.Py_DECREF", "c.Py_DecRef()": "c-api/refcounting.html#c.Py_DecRef", "c.Py_EncodeLocale()": "c-api/sys.html#c.Py_EncodeLocale", "c.Py_EndInterpreter()": "c-api/init.html#c.Py_EndInterpreter", "c.Py_EnterRecursiveCall()": "c-api/exceptions.html#c.Py_EnterRecursiveCall", "c.Py_Exit()": "c-api/sys.html#c.Py_Exit", "c.Py_ExitStatusException()": "c-api/init_config.html#c.Py_ExitStatusException", "c.Py_FatalError()": "c-api/sys.html#c.Py_FatalError", "c.Py_FdIsInteractive()": "c-api/sys.html#c.Py_FdIsInteractive", "c.Py_Finalize()": "c-api/init.html#c.Py_Finalize", "c.Py_FinalizeEx()": "c-api/init.html#c.Py_FinalizeEx", "c.Py_GenericAlias()": "c-api/typehints.html#c.Py_GenericAlias", "c.Py_GetArgcArgv()": "c-api/init_config.html#c.Py_GetArgcArgv", "c.Py_GetBuildInfo()": "c-api/init.html#c.Py_GetBuildInfo", "c.Py_GetCompiler()": "c-api/init.html#c.Py_GetCompiler", "c.Py_GetConstant()": "c-api/object.html#c.Py_GetConstant", "c.Py_GetConstantBorrowed()": "c-api/object.html#c.Py_GetConstantBorrowed", "c.Py_GetCopyright()": "c-api/init.html#c.Py_GetCopyright", "c.Py_GetExecPrefix()": "c-api/init.html#c.Py_GetExecPrefix", "c.Py_GetPath()": "c-api/init.html#c.Py_GetPath", "c.Py_GetPlatform()": "c-api/init.html#c.Py_GetPlatform", "c.Py_GetPrefix()": "c-api/init.html#c.Py_GetPrefix", "c.Py_GetProgramFullPath()": "c-api/init.html#c.Py_GetProgramFullPath", "c.Py_GetProgramName()": "c-api/init.html#c.Py_GetProgramName", "c.Py_GetPythonHome()": "c-api/init.html#c.Py_GetPythonHome", "c.Py_GetVersion()": "c-api/init.html#c.Py_GetVersion", "c.Py_HashPointer()": "c-api/hash.html#c.Py_HashPointer", "c.Py_INCREF()": "c-api/refcounting.html#c.Py_INCREF", "c.Py_IncRef()": "c-api/refcounting.html#c.Py_IncRef", "c.Py_Initialize()": "c-api/init.html#c.Py_Initialize", "c.Py_InitializeEx()": "c-api/init.html#c.Py_InitializeEx", "c.Py_InitializeFromConfig()": "c-api/init_config.html#c.Py_InitializeFromConfig", "c.Py_Is()": "c-api/structures.html#c.Py_Is", "c.Py_IS_TYPE()": "c-api/structures.html#c.Py_IS_TYPE", "c.Py_IsFalse()": "c-api/structures.html#c.Py_IsFalse", "c.Py_IsFinalizing()": "c-api/init.html#c.Py_IsFinalizing", "c.Py_IsInitialized()": "c-api/init.html#c.Py_IsInitialized", "c.Py_IsNone()": "c-api/structures.html#c.Py_IsNone", "c.Py_IsTrue()": "c-api/structures.html#c.Py_IsTrue", "c.Py_LeaveRecursiveCall()": "c-api/exceptions.html#c.Py_LeaveRecursiveCall", "c.Py_Main()": "c-api/veryhigh.html#c.Py_Main", "c.Py_mod_create.create_module()": "c-api/module.html#c.Py_mod_create.create_module", "c.Py_mod_exec.exec_module()": "c-api/module.html#c.Py_mod_exec.exec_module", "c.Py_NewInterpreter()": "c-api/init.html#c.Py_NewInterpreter", "c.Py_NewInterpreterFromConfig()": "c-api/init.html#c.Py_NewInterpreterFromConfig", "c.Py_NewRef()": "c-api/refcounting.html#c.Py_NewRef", "c.Py_PreInitialize()": "c-api/init_config.html#c.Py_PreInitialize", "c.Py_PreInitializeFromArgs()": "c-api/init_config.html#c.Py_PreInitializeFromArgs", "c.Py_PreInitializeFromBytesArgs()": "c-api/init_config.html#c.Py_PreInitializeFromBytesArgs", "c.Py_REFCNT()": "c-api/refcounting.html#c.Py_REFCNT", "c.Py_ReprEnter()": "c-api/exceptions.html#c.Py_ReprEnter", "c.Py_ReprLeave()": "c-api/exceptions.html#c.Py_ReprLeave", "c.Py_RunMain()": "c-api/init_config.html#c.Py_RunMain", "c.Py_SET_REFCNT()": "c-api/refcounting.html#c.Py_SET_REFCNT", "c.Py_SET_SIZE()": "c-api/structures.html#c.Py_SET_SIZE", "c.Py_SET_TYPE()": "c-api/structures.html#c.Py_SET_TYPE", "c.Py_SetProgramName()": "c-api/init.html#c.Py_SetProgramName", "c.Py_SetPythonHome()": "c-api/init.html#c.Py_SetPythonHome", "c.Py_SIZE()": "c-api/structures.html#c.Py_SIZE", "c.Py_TYPE()": "c-api/structures.html#c.Py_TYPE", "c.Py_UNICODE_IS_HIGH_SURROGATE()": "c-api/unicode.html#c.Py_UNICODE_IS_HIGH_SURROGATE", "c.Py_UNICODE_IS_LOW_SURROGATE()": "c-api/unicode.html#c.Py_UNICODE_IS_LOW_SURROGATE", "c.Py_UNICODE_IS_SURROGATE()": "c-api/unicode.html#c.Py_UNICODE_IS_SURROGATE", "c.Py_UNICODE_ISALNUM()": "c-api/unicode.html#c.Py_UNICODE_ISALNUM", "c.Py_UNICODE_ISALPHA()": "c-api/unicode.html#c.Py_UNICODE_ISALPHA", "c.Py_UNICODE_ISDECIMAL()": "c-api/unicode.html#c.Py_UNICODE_ISDECIMAL", "c.Py_UNICODE_ISDIGIT()": "c-api/unicode.html#c.Py_UNICODE_ISDIGIT", "c.Py_UNICODE_ISLINEBREAK()": "c-api/unicode.html#c.Py_UNICODE_ISLINEBREAK", "c.Py_UNICODE_ISLOWER()": "c-api/unicode.html#c.Py_UNICODE_ISLOWER", "c.Py_UNICODE_ISNUMERIC()": "c-api/unicode.html#c.Py_UNICODE_ISNUMERIC", "c.Py_UNICODE_ISPRINTABLE()": "c-api/unicode.html#c.Py_UNICODE_ISPRINTABLE", "c.Py_UNICODE_ISSPACE()": "c-api/unicode.html#c.Py_UNICODE_ISSPACE", "c.Py_UNICODE_ISTITLE()": "c-api/unicode.html#c.Py_UNICODE_ISTITLE", "c.Py_UNICODE_ISUPPER()": "c-api/unicode.html#c.Py_UNICODE_ISUPPER", "c.Py_UNICODE_JOIN_SURROGATES()": "c-api/unicode.html#c.Py_UNICODE_JOIN_SURROGATES", "c.Py_UNICODE_TODECIMAL()": "c-api/unicode.html#c.Py_UNICODE_TODECIMAL", "c.Py_UNICODE_TODIGIT()": "c-api/unicode.html#c.Py_UNICODE_TODIGIT", "c.Py_UNICODE_TOLOWER()": "c-api/unicode.html#c.Py_UNICODE_TOLOWER", "c.Py_UNICODE_TONUMERIC()": "c-api/unicode.html#c.Py_UNICODE_TONUMERIC", "c.Py_UNICODE_TOTITLE()": "c-api/unicode.html#c.Py_UNICODE_TOTITLE", "c.Py_UNICODE_TOUPPER()": "c-api/unicode.html#c.Py_UNICODE_TOUPPER", "c.Py_VaBuildValue()": "c-api/arg.html#c.Py_VaBuildValue", "c.Py_VISIT()": "c-api/gcsupport.html#c.Py_VISIT", "c.Py_XDECREF()": "c-api/refcounting.html#c.Py_XDECREF", "c.Py_XINCREF()": "c-api/refcounting.html#c.Py_XINCREF", "c.Py_XNewRef()": "c-api/refcounting.html#c.Py_XNewRef", "c.PyAIter_Check()": "c-api/iter.html#c.PyAIter_Check", "c.PyAnySet_Check()": "c-api/set.html#c.PyAnySet_Check", "c.PyAnySet_CheckExact()": "c-api/set.html#c.PyAnySet_CheckExact", "c.PyArg_Parse()": "c-api/arg.html#c.PyArg_Parse", "c.PyArg_ParseTuple()": "c-api/arg.html#c.PyArg_ParseTuple", "c.PyArg_ParseTupleAndKeywords()": "c-api/arg.html#c.PyArg_ParseTupleAndKeywords", "c.PyArg_UnpackTuple()": "c-api/arg.html#c.PyArg_UnpackTuple", "c.PyArg_ValidateKeywordArguments()": "c-api/arg.html#c.PyArg_ValidateKeywordArguments", "c.PyArg_VaParse()": "c-api/arg.html#c.PyArg_VaParse", "c.PyArg_VaParseTupleAndKeywords()": "c-api/arg.html#c.PyArg_VaParseTupleAndKeywords", "c.PyBool_Check()": "c-api/bool.html#c.PyBool_Check", "c.PyBool_FromLong()": "c-api/bool.html#c.PyBool_FromLong", "c.PyBuffer_FillContiguousStrides()": "c-api/buffer.html#c.PyBuffer_FillContiguousStrides", "c.PyBuffer_FillInfo()": "c-api/buffer.html#c.PyBuffer_FillInfo", "c.PyBuffer_FromContiguous()": "c-api/buffer.html#c.PyBuffer_FromContiguous", "c.PyBuffer_GetPointer()": "c-api/buffer.html#c.PyBuffer_GetPointer", "c.PyBuffer_IsContiguous()": "c-api/buffer.html#c.PyBuffer_IsContiguous", "c.PyBuffer_Release()": "c-api/buffer.html#c.PyBuffer_Release", "c.PyBuffer_SizeFromFormat()": "c-api/buffer.html#c.PyBuffer_SizeFromFormat", "c.PyBuffer_ToContiguous()": "c-api/buffer.html#c.PyBuffer_ToContiguous", "c.PyByteArray_AS_STRING()": "c-api/bytearray.html#c.PyByteArray_AS_STRING", "c.PyByteArray_AsString()": "c-api/bytearray.html#c.PyByteArray_AsString", "c.PyByteArray_Check()": "c-api/bytearray.html#c.PyByteArray_Check", "c.PyByteArray_CheckExact()": "c-api/bytearray.html#c.PyByteArray_CheckExact", "c.PyByteArray_Concat()": "c-api/bytearray.html#c.PyByteArray_Concat", "c.PyByteArray_FromObject()": "c-api/bytearray.html#c.PyByteArray_FromObject", "c.PyByteArray_FromStringAndSize()": "c-api/bytearray.html#c.PyByteArray_FromStringAndSize", "c.PyByteArray_GET_SIZE()": "c-api/bytearray.html#c.PyByteArray_GET_SIZE", "c.PyByteArray_Resize()": "c-api/bytearray.html#c.PyByteArray_Resize", "c.PyByteArray_Size()": "c-api/bytearray.html#c.PyByteArray_Size", "c.PyBytes_AS_STRING()": "c-api/bytes.html#c.PyBytes_AS_STRING", "c.PyBytes_AsString()": "c-api/bytes.html#c.PyBytes_AsString", "c.PyBytes_AsStringAndSize()": "c-api/bytes.html#c.PyBytes_AsStringAndSize", "c.PyBytes_Check()": "c-api/bytes.html#c.PyBytes_Check", "c.PyBytes_CheckExact()": "c-api/bytes.html#c.PyBytes_CheckExact", "c.PyBytes_Concat()": "c-api/bytes.html#c.PyBytes_Concat", "c.PyBytes_ConcatAndDel()": "c-api/bytes.html#c.PyBytes_ConcatAndDel", "c.PyBytes_FromFormat()": "c-api/bytes.html#c.PyBytes_FromFormat", "c.PyBytes_FromFormatV()": "c-api/bytes.html#c.PyBytes_FromFormatV", "c.PyBytes_FromObject()": "c-api/bytes.html#c.PyBytes_FromObject", "c.PyBytes_FromString()": "c-api/bytes.html#c.PyBytes_FromString", "c.PyBytes_FromStringAndSize()": "c-api/bytes.html#c.PyBytes_FromStringAndSize", "c.PyBytes_GET_SIZE()": "c-api/bytes.html#c.PyBytes_GET_SIZE", "c.PyBytes_Size()": "c-api/bytes.html#c.PyBytes_Size", "c.PyCallable_Check()": "c-api/call.html#c.PyCallable_Check", "c.PyCallIter_Check()": "c-api/iterator.html#c.PyCallIter_Check", "c.PyCallIter_New()": "c-api/iterator.html#c.PyCallIter_New", "c.PyCapsule_CheckExact()": "c-api/capsule.html#c.PyCapsule_CheckExact", "c.PyCapsule_GetContext()": "c-api/capsule.html#c.PyCapsule_GetContext", "c.PyCapsule_GetDestructor()": "c-api/capsule.html#c.PyCapsule_GetDestructor", "c.PyCapsule_GetName()": "c-api/capsule.html#c.PyCapsule_GetName", "c.PyCapsule_GetPointer()": "c-api/capsule.html#c.PyCapsule_GetPointer", "c.PyCapsule_Import()": "c-api/capsule.html#c.PyCapsule_Import", "c.PyCapsule_IsValid()": "c-api/capsule.html#c.PyCapsule_IsValid", "c.PyCapsule_New()": "c-api/capsule.html#c.PyCapsule_New", "c.PyCapsule_SetContext()": "c-api/capsule.html#c.PyCapsule_SetContext", "c.PyCapsule_SetDestructor()": "c-api/capsule.html#c.PyCapsule_SetDestructor", "c.PyCapsule_SetName()": "c-api/capsule.html#c.PyCapsule_SetName", "c.PyCapsule_SetPointer()": "c-api/capsule.html#c.PyCapsule_SetPointer", "c.PyCell_Check()": "c-api/cell.html#c.PyCell_Check", "c.PyCell_GET()": "c-api/cell.html#c.PyCell_GET", "c.PyCell_Get()": "c-api/cell.html#c.PyCell_Get", "c.PyCell_New()": "c-api/cell.html#c.PyCell_New", "c.PyCell_SET()": "c-api/cell.html#c.PyCell_SET", "c.PyCell_Set()": "c-api/cell.html#c.PyCell_Set", "c.PyCFunction_New()": "c-api/structures.html#c.PyCFunction_New", "c.PyCFunction_NewEx()": "c-api/structures.html#c.PyCFunction_NewEx", "c.PyCMethod_New()": "c-api/structures.html#c.PyCMethod_New", "c.PyCode_Addr2Line()": "c-api/code.html#c.PyCode_Addr2Line", "c.PyCode_Addr2Location()": "c-api/code.html#c.PyCode_Addr2Location", "c.PyCode_AddWatcher()": "c-api/code.html#c.PyCode_AddWatcher", "c.PyCode_Check()": "c-api/code.html#c.PyCode_Check", "c.PyCode_ClearWatcher()": "c-api/code.html#c.PyCode_ClearWatcher", "c.PyCode_GetCellvars()": "c-api/code.html#c.PyCode_GetCellvars", "c.PyCode_GetCode()": "c-api/code.html#c.PyCode_GetCode", "c.PyCode_GetFreevars()": "c-api/code.html#c.PyCode_GetFreevars", "c.PyCode_GetNumFree()": "c-api/code.html#c.PyCode_GetNumFree", "c.PyCode_GetVarnames()": "c-api/code.html#c.PyCode_GetVarnames", "c.PyCode_NewEmpty()": "c-api/code.html#c.PyCode_NewEmpty", "c.PyCodec_BackslashReplaceErrors()": "c-api/codec.html#c.PyCodec_BackslashReplaceErrors", "c.PyCodec_Decode()": "c-api/codec.html#c.PyCodec_Decode", "c.PyCodec_Decoder()": "c-api/codec.html#c.PyCodec_Decoder", "c.PyCodec_Encode()": "c-api/codec.html#c.PyCodec_Encode", "c.PyCodec_Encoder()": "c-api/codec.html#c.PyCodec_Encoder", "c.PyCodec_IgnoreErrors()": "c-api/codec.html#c.PyCodec_IgnoreErrors", "c.PyCodec_IncrementalDecoder()": "c-api/codec.html#c.PyCodec_IncrementalDecoder", "c.PyCodec_IncrementalEncoder()": "c-api/codec.html#c.PyCodec_IncrementalEncoder", "c.PyCodec_KnownEncoding()": "c-api/codec.html#c.PyCodec_KnownEncoding", "c.PyCodec_LookupError()": "c-api/codec.html#c.PyCodec_LookupError", "c.PyCodec_NameReplaceErrors()": "c-api/codec.html#c.PyCodec_NameReplaceErrors", "c.PyCodec_Register()": "c-api/codec.html#c.PyCodec_Register", "c.PyCodec_RegisterError()": "c-api/codec.html#c.PyCodec_RegisterError", "c.PyCodec_ReplaceErrors()": "c-api/codec.html#c.PyCodec_ReplaceErrors", "c.PyCodec_StreamReader()": "c-api/codec.html#c.PyCodec_StreamReader", "c.PyCodec_StreamWriter()": "c-api/codec.html#c.PyCodec_StreamWriter", "c.PyCodec_StrictErrors()": "c-api/codec.html#c.PyCodec_StrictErrors", "c.PyCodec_Unregister()": "c-api/codec.html#c.PyCodec_Unregister", "c.PyCodec_XMLCharRefReplaceErrors()": "c-api/codec.html#c.PyCodec_XMLCharRefReplaceErrors", "c.PyComplex_AsCComplex()": "c-api/complex.html#c.PyComplex_AsCComplex", "c.PyComplex_Check()": "c-api/complex.html#c.PyComplex_Check", "c.PyComplex_CheckExact()": "c-api/complex.html#c.PyComplex_CheckExact", "c.PyComplex_FromCComplex()": "c-api/complex.html#c.PyComplex_FromCComplex", "c.PyComplex_FromDoubles()": "c-api/complex.html#c.PyComplex_FromDoubles", "c.PyComplex_ImagAsDouble()": "c-api/complex.html#c.PyComplex_ImagAsDouble", "c.PyComplex_RealAsDouble()": "c-api/complex.html#c.PyComplex_RealAsDouble", "c.PyConfig_Clear()": "c-api/init_config.html#c.PyConfig_Clear", "c.PyConfig_InitIsolatedConfig()": "c-api/init_config.html#c.PyConfig_InitIsolatedConfig", "c.PyConfig_InitPythonConfig()": "c-api/init_config.html#c.PyConfig_InitPythonConfig", "c.PyConfig_Read()": "c-api/init_config.html#c.PyConfig_Read", "c.PyConfig_SetArgv()": "c-api/init_config.html#c.PyConfig_SetArgv", "c.PyConfig_SetBytesArgv()": "c-api/init_config.html#c.PyConfig_SetBytesArgv", "c.PyConfig_SetBytesString()": "c-api/init_config.html#c.PyConfig_SetBytesString", "c.PyConfig_SetString()": "c-api/init_config.html#c.PyConfig_SetString", "c.PyConfig_SetWideStringList()": "c-api/init_config.html#c.PyConfig_SetWideStringList", "c.PyContext_CheckExact()": "c-api/contextvars.html#c.PyContext_CheckExact", "c.PyContext_Copy()": "c-api/contextvars.html#c.PyContext_Copy", "c.PyContext_CopyCurrent()": "c-api/contextvars.html#c.PyContext_CopyCurrent", "c.PyContext_Enter()": "c-api/contextvars.html#c.PyContext_Enter", "c.PyContext_Exit()": "c-api/contextvars.html#c.PyContext_Exit", "c.PyContext_New()": "c-api/contextvars.html#c.PyContext_New", "c.PyContextToken_CheckExact()": "c-api/contextvars.html#c.PyContextToken_CheckExact", "c.PyContextVar_CheckExact()": "c-api/contextvars.html#c.PyContextVar_CheckExact", "c.PyContextVar_Get()": "c-api/contextvars.html#c.PyContextVar_Get", "c.PyContextVar_New()": "c-api/contextvars.html#c.PyContextVar_New", "c.PyContextVar_Reset()": "c-api/contextvars.html#c.PyContextVar_Reset", "c.PyContextVar_Set()": "c-api/contextvars.html#c.PyContextVar_Set", "c.PyCoro_CheckExact()": "c-api/coro.html#c.PyCoro_CheckExact", "c.PyCoro_New()": "c-api/coro.html#c.PyCoro_New", "c.PyDate_Check()": "c-api/datetime.html#c.PyDate_Check", "c.PyDate_CheckExact()": "c-api/datetime.html#c.PyDate_CheckExact", "c.PyDate_FromDate()": "c-api/datetime.html#c.PyDate_FromDate", "c.PyDate_FromTimestamp()": "c-api/datetime.html#c.PyDate_FromTimestamp", "c.PyDateTime_Check()": "c-api/datetime.html#c.PyDateTime_Check", "c.PyDateTime_CheckExact()": "c-api/datetime.html#c.PyDateTime_CheckExact", "c.PyDateTime_DATE_GET_FOLD()": "c-api/datetime.html#c.PyDateTime_DATE_GET_FOLD", "c.PyDateTime_DATE_GET_HOUR()": "c-api/datetime.html#c.PyDateTime_DATE_GET_HOUR", "c.PyDateTime_DATE_GET_MICROSECOND()": "c-api/datetime.html#c.PyDateTime_DATE_GET_MICROSECOND", "c.PyDateTime_DATE_GET_MINUTE()": "c-api/datetime.html#c.PyDateTime_DATE_GET_MINUTE", "c.PyDateTime_DATE_GET_SECOND()": "c-api/datetime.html#c.PyDateTime_DATE_GET_SECOND", "c.PyDateTime_DATE_GET_TZINFO()": "c-api/datetime.html#c.PyDateTime_DATE_GET_TZINFO", "c.PyDateTime_DELTA_GET_DAYS()": "c-api/datetime.html#c.PyDateTime_DELTA_GET_DAYS", "c.PyDateTime_DELTA_GET_MICROSECONDS()": "c-api/datetime.html#c.PyDateTime_DELTA_GET_MICROSECONDS", "c.PyDateTime_DELTA_GET_SECONDS()": "c-api/datetime.html#c.PyDateTime_DELTA_GET_SECONDS", "c.PyDateTime_FromDateAndTime()": "c-api/datetime.html#c.PyDateTime_FromDateAndTime", "c.PyDateTime_FromDateAndTimeAndFold()": "c-api/datetime.html#c.PyDateTime_FromDateAndTimeAndFold", "c.PyDateTime_FromTimestamp()": "c-api/datetime.html#c.PyDateTime_FromTimestamp", "c.PyDateTime_GET_DAY()": "c-api/datetime.html#c.PyDateTime_GET_DAY", "c.PyDateTime_GET_MONTH()": "c-api/datetime.html#c.PyDateTime_GET_MONTH", "c.PyDateTime_GET_YEAR()": "c-api/datetime.html#c.PyDateTime_GET_YEAR", "c.PyDateTime_TIME_GET_FOLD()": "c-api/datetime.html#c.PyDateTime_TIME_GET_FOLD", "c.PyDateTime_TIME_GET_HOUR()": "c-api/datetime.html#c.PyDateTime_TIME_GET_HOUR", "c.PyDateTime_TIME_GET_MICROSECOND()": "c-api/datetime.html#c.PyDateTime_TIME_GET_MICROSECOND", "c.PyDateTime_TIME_GET_MINUTE()": "c-api/datetime.html#c.PyDateTime_TIME_GET_MINUTE", "c.PyDateTime_TIME_GET_SECOND()": "c-api/datetime.html#c.PyDateTime_TIME_GET_SECOND", "c.PyDateTime_TIME_GET_TZINFO()": "c-api/datetime.html#c.PyDateTime_TIME_GET_TZINFO", "c.PyDelta_Check()": "c-api/datetime.html#c.PyDelta_Check", "c.PyDelta_CheckExact()": "c-api/datetime.html#c.PyDelta_CheckExact", "c.PyDelta_FromDSU()": "c-api/datetime.html#c.PyDelta_FromDSU", "c.PyDescr_IsData()": "c-api/descriptor.html#c.PyDescr_IsData", "c.PyDescr_NewClassMethod()": "c-api/descriptor.html#c.PyDescr_NewClassMethod", "c.PyDescr_NewGetSet()": "c-api/descriptor.html#c.PyDescr_NewGetSet", "c.PyDescr_NewMember()": "c-api/descriptor.html#c.PyDescr_NewMember", "c.PyDescr_NewMethod()": "c-api/descriptor.html#c.PyDescr_NewMethod", "c.PyDescr_NewWrapper()": "c-api/descriptor.html#c.PyDescr_NewWrapper", "c.PyDict_AddWatcher()": "c-api/dict.html#c.PyDict_AddWatcher", "c.PyDict_Check()": "c-api/dict.html#c.PyDict_Check", "c.PyDict_CheckExact()": "c-api/dict.html#c.PyDict_CheckExact", "c.PyDict_Clear()": "c-api/dict.html#c.PyDict_Clear", "c.PyDict_ClearWatcher()": "c-api/dict.html#c.PyDict_ClearWatcher", "c.PyDict_Contains()": "c-api/dict.html#c.PyDict_Contains", "c.PyDict_ContainsString()": "c-api/dict.html#c.PyDict_ContainsString", "c.PyDict_Copy()": "c-api/dict.html#c.PyDict_Copy", "c.PyDict_DelItem()": "c-api/dict.html#c.PyDict_DelItem", "c.PyDict_DelItemString()": "c-api/dict.html#c.PyDict_DelItemString", "c.PyDict_GetItem()": "c-api/dict.html#c.PyDict_GetItem", "c.PyDict_GetItemRef()": "c-api/dict.html#c.PyDict_GetItemRef", "c.PyDict_GetItemString()": "c-api/dict.html#c.PyDict_GetItemString", "c.PyDict_GetItemStringRef()": "c-api/dict.html#c.PyDict_GetItemStringRef", "c.PyDict_GetItemWithError()": "c-api/dict.html#c.PyDict_GetItemWithError", "c.PyDict_Items()": "c-api/dict.html#c.PyDict_Items", "c.PyDict_Keys()": "c-api/dict.html#c.PyDict_Keys", "c.PyDict_Merge()": "c-api/dict.html#c.PyDict_Merge", "c.PyDict_MergeFromSeq2()": "c-api/dict.html#c.PyDict_MergeFromSeq2", "c.PyDict_New()": "c-api/dict.html#c.PyDict_New", "c.PyDict_Next()": "c-api/dict.html#c.PyDict_Next", "c.PyDict_Pop()": "c-api/dict.html#c.PyDict_Pop", "c.PyDict_PopString()": "c-api/dict.html#c.PyDict_PopString", "c.PyDict_SetDefault()": "c-api/dict.html#c.PyDict_SetDefault", "c.PyDict_SetDefaultRef()": "c-api/dict.html#c.PyDict_SetDefaultRef", "c.PyDict_SetItem()": "c-api/dict.html#c.PyDict_SetItem", "c.PyDict_SetItemString()": "c-api/dict.html#c.PyDict_SetItemString", "c.PyDict_Size()": "c-api/dict.html#c.PyDict_Size", "c.PyDict_Unwatch()": "c-api/dict.html#c.PyDict_Unwatch", "c.PyDict_Update()": "c-api/dict.html#c.PyDict_Update", "c.PyDict_Values()": "c-api/dict.html#c.PyDict_Values", "c.PyDict_Watch()": "c-api/dict.html#c.PyDict_Watch", "c.PyDictProxy_New()": "c-api/dict.html#c.PyDictProxy_New", "c.PyErr_BadArgument()": "c-api/exceptions.html#c.PyErr_BadArgument", "c.PyErr_BadInternalCall()": "c-api/exceptions.html#c.PyErr_BadInternalCall", "c.PyErr_CheckSignals()": "c-api/exceptions.html#c.PyErr_CheckSignals", "c.PyErr_Clear()": "c-api/exceptions.html#c.PyErr_Clear", "c.PyErr_DisplayException()": "c-api/exceptions.html#c.PyErr_DisplayException", "c.PyErr_ExceptionMatches()": "c-api/exceptions.html#c.PyErr_ExceptionMatches", "c.PyErr_Fetch()": "c-api/exceptions.html#c.PyErr_Fetch", "c.PyErr_Format()": "c-api/exceptions.html#c.PyErr_Format", "c.PyErr_FormatUnraisable()": "c-api/exceptions.html#c.PyErr_FormatUnraisable", "c.PyErr_FormatV()": "c-api/exceptions.html#c.PyErr_FormatV", "c.PyErr_GetExcInfo()": "c-api/exceptions.html#c.PyErr_GetExcInfo", "c.PyErr_GetHandledException()": "c-api/exceptions.html#c.PyErr_GetHandledException", "c.PyErr_GetRaisedException()": "c-api/exceptions.html#c.PyErr_GetRaisedException", "c.PyErr_GivenExceptionMatches()": "c-api/exceptions.html#c.PyErr_GivenExceptionMatches", "c.PyErr_NewException()": "c-api/exceptions.html#c.PyErr_NewException", "c.PyErr_NewExceptionWithDoc()": "c-api/exceptions.html#c.PyErr_NewExceptionWithDoc", "c.PyErr_NoMemory()": "c-api/exceptions.html#c.PyErr_NoMemory", "c.PyErr_NormalizeException()": "c-api/exceptions.html#c.PyErr_NormalizeException", "c.PyErr_Occurred()": "c-api/exceptions.html#c.PyErr_Occurred", "c.PyErr_Print()": "c-api/exceptions.html#c.PyErr_Print", "c.PyErr_PrintEx()": "c-api/exceptions.html#c.PyErr_PrintEx", "c.PyErr_ResourceWarning()": "c-api/exceptions.html#c.PyErr_ResourceWarning", "c.PyErr_Restore()": "c-api/exceptions.html#c.PyErr_Restore", "c.PyErr_SetExcFromWindowsErr()": "c-api/exceptions.html#c.PyErr_SetExcFromWindowsErr", "c.PyErr_SetExcFromWindowsErrWithFilename()": "c-api/exceptions.html#c.PyErr_SetExcFromWindowsErrWithFilename", "c.PyErr_SetExcFromWindowsErrWithFilenameObject()": "c-api/exceptions.html#c.PyErr_SetExcFromWindowsErrWithFilenameObject", "c.PyErr_SetExcFromWindowsErrWithFilenameObjects()": "c-api/exceptions.html#c.PyErr_SetExcFromWindowsErrWithFilenameObjects", "c.PyErr_SetExcInfo()": "c-api/exceptions.html#c.PyErr_SetExcInfo", "c.PyErr_SetFromErrno()": "c-api/exceptions.html#c.PyErr_SetFromErrno", "c.PyErr_SetFromErrnoWithFilename()": "c-api/exceptions.html#c.PyErr_SetFromErrnoWithFilename", "c.PyErr_SetFromErrnoWithFilenameObject()": "c-api/exceptions.html#c.PyErr_SetFromErrnoWithFilenameObject", "c.PyErr_SetFromErrnoWithFilenameObjects()": "c-api/exceptions.html#c.PyErr_SetFromErrnoWithFilenameObjects", "c.PyErr_SetFromWindowsErr()": "c-api/exceptions.html#c.PyErr_SetFromWindowsErr", "c.PyErr_SetFromWindowsErrWithFilename()": "c-api/exceptions.html#c.PyErr_SetFromWindowsErrWithFilename", "c.PyErr_SetHandledException()": "c-api/exceptions.html#c.PyErr_SetHandledException", "c.PyErr_SetImportError()": "c-api/exceptions.html#c.PyErr_SetImportError", "c.PyErr_SetImportErrorSubclass()": "c-api/exceptions.html#c.PyErr_SetImportErrorSubclass", "c.PyErr_SetInterrupt()": "c-api/exceptions.html#c.PyErr_SetInterrupt", "c.PyErr_SetInterruptEx()": "c-api/exceptions.html#c.PyErr_SetInterruptEx", "c.PyErr_SetNone()": "c-api/exceptions.html#c.PyErr_SetNone", "c.PyErr_SetObject()": "c-api/exceptions.html#c.PyErr_SetObject", "c.PyErr_SetRaisedException()": "c-api/exceptions.html#c.PyErr_SetRaisedException", "c.PyErr_SetString()": "c-api/exceptions.html#c.PyErr_SetString", "c.PyErr_SyntaxLocation()": "c-api/exceptions.html#c.PyErr_SyntaxLocation", "c.PyErr_SyntaxLocationEx()": "c-api/exceptions.html#c.PyErr_SyntaxLocationEx", "c.PyErr_SyntaxLocationObject()": "c-api/exceptions.html#c.PyErr_SyntaxLocationObject", "c.PyErr_WarnEx()": "c-api/exceptions.html#c.PyErr_WarnEx", "c.PyErr_WarnExplicit()": "c-api/exceptions.html#c.PyErr_WarnExplicit", "c.PyErr_WarnExplicitObject()": "c-api/exceptions.html#c.PyErr_WarnExplicitObject", "c.PyErr_WarnFormat()": "c-api/exceptions.html#c.PyErr_WarnFormat", "c.PyErr_WriteUnraisable()": "c-api/exceptions.html#c.PyErr_WriteUnraisable", "c.PyEval_AcquireThread()": "c-api/init.html#c.PyEval_AcquireThread", "c.PyEval_EvalCode()": "c-api/veryhigh.html#c.PyEval_EvalCode", "c.PyEval_EvalCodeEx()": "c-api/veryhigh.html#c.PyEval_EvalCodeEx", "c.PyEval_EvalFrame()": "c-api/veryhigh.html#c.PyEval_EvalFrame", "c.PyEval_EvalFrameEx()": "c-api/veryhigh.html#c.PyEval_EvalFrameEx", "c.PyEval_GetBuiltins()": "c-api/reflection.html#c.PyEval_GetBuiltins", "c.PyEval_GetFrame()": "c-api/reflection.html#c.PyEval_GetFrame", "c.PyEval_GetFrameBuiltins()": "c-api/reflection.html#c.PyEval_GetFrameBuiltins", "c.PyEval_GetFrameGlobals()": "c-api/reflection.html#c.PyEval_GetFrameGlobals", "c.PyEval_GetFrameLocals()": "c-api/reflection.html#c.PyEval_GetFrameLocals", "c.PyEval_GetFuncDesc()": "c-api/reflection.html#c.PyEval_GetFuncDesc", "c.PyEval_GetFuncName()": "c-api/reflection.html#c.PyEval_GetFuncName", "c.PyEval_GetGlobals()": "c-api/reflection.html#c.PyEval_GetGlobals", "c.PyEval_GetLocals()": "c-api/reflection.html#c.PyEval_GetLocals", "c.PyEval_InitThreads()": "c-api/init.html#c.PyEval_InitThreads", "c.PyEval_MergeCompilerFlags()": "c-api/veryhigh.html#c.PyEval_MergeCompilerFlags", "c.PyEval_ReleaseThread()": "c-api/init.html#c.PyEval_ReleaseThread", "c.PyEval_RestoreThread()": "c-api/init.html#c.PyEval_RestoreThread", "c.PyEval_SaveThread()": "c-api/init.html#c.PyEval_SaveThread", "c.PyEval_SetProfile()": "c-api/init.html#c.PyEval_SetProfile", "c.PyEval_SetProfileAllThreads()": "c-api/init.html#c.PyEval_SetProfileAllThreads", "c.PyEval_SetTrace()": "c-api/init.html#c.PyEval_SetTrace", "c.PyEval_SetTraceAllThreads()": "c-api/init.html#c.PyEval_SetTraceAllThreads", "c.PyException_GetArgs()": "c-api/exceptions.html#c.PyException_GetArgs", "c.PyException_GetCause()": "c-api/exceptions.html#c.PyException_GetCause", "c.PyException_GetContext()": "c-api/exceptions.html#c.PyException_GetContext", "c.PyException_GetTraceback()": "c-api/exceptions.html#c.PyException_GetTraceback", "c.PyException_SetArgs()": "c-api/exceptions.html#c.PyException_SetArgs", "c.PyException_SetCause()": "c-api/exceptions.html#c.PyException_SetCause", "c.PyException_SetContext()": "c-api/exceptions.html#c.PyException_SetContext", "c.PyException_SetTraceback()": "c-api/exceptions.html#c.PyException_SetTraceback", "c.PyFile_FromFd()": "c-api/file.html#c.PyFile_FromFd", "c.PyFile_GetLine()": "c-api/file.html#c.PyFile_GetLine", "c.PyFile_SetOpenCodeHook()": "c-api/file.html#c.PyFile_SetOpenCodeHook", "c.PyFile_WriteObject()": "c-api/file.html#c.PyFile_WriteObject", "c.PyFile_WriteString()": "c-api/file.html#c.PyFile_WriteString", "c.PyFloat_AS_DOUBLE()": "c-api/float.html#c.PyFloat_AS_DOUBLE", "c.PyFloat_AsDouble()": "c-api/float.html#c.PyFloat_AsDouble", "c.PyFloat_Check()": "c-api/float.html#c.PyFloat_Check", "c.PyFloat_CheckExact()": "c-api/float.html#c.PyFloat_CheckExact", "c.PyFloat_FromDouble()": "c-api/float.html#c.PyFloat_FromDouble", "c.PyFloat_FromString()": "c-api/float.html#c.PyFloat_FromString", "c.PyFloat_GetInfo()": "c-api/float.html#c.PyFloat_GetInfo", "c.PyFloat_GetMax()": "c-api/float.html#c.PyFloat_GetMax", "c.PyFloat_GetMin()": "c-api/float.html#c.PyFloat_GetMin", "c.PyFloat_Pack2()": "c-api/float.html#c.PyFloat_Pack2", "c.PyFloat_Pack4()": "c-api/float.html#c.PyFloat_Pack4", "c.PyFloat_Pack8()": "c-api/float.html#c.PyFloat_Pack8", "c.PyFloat_Unpack2()": "c-api/float.html#c.PyFloat_Unpack2", "c.PyFloat_Unpack4()": "c-api/float.html#c.PyFloat_Unpack4", "c.PyFloat_Unpack8()": "c-api/float.html#c.PyFloat_Unpack8", "c.PyFrame_Check()": "c-api/frame.html#c.PyFrame_Check", "c.PyFrame_GetBack()": "c-api/frame.html#c.PyFrame_GetBack", "c.PyFrame_GetBuiltins()": "c-api/frame.html#c.PyFrame_GetBuiltins", "c.PyFrame_GetCode()": "c-api/frame.html#c.PyFrame_GetCode", "c.PyFrame_GetGenerator()": "c-api/frame.html#c.PyFrame_GetGenerator", "c.PyFrame_GetGlobals()": "c-api/frame.html#c.PyFrame_GetGlobals", "c.PyFrame_GetLasti()": "c-api/frame.html#c.PyFrame_GetLasti", "c.PyFrame_GetLineNumber()": "c-api/frame.html#c.PyFrame_GetLineNumber", "c.PyFrame_GetLocals()": "c-api/frame.html#c.PyFrame_GetLocals", "c.PyFrame_GetVar()": "c-api/frame.html#c.PyFrame_GetVar", "c.PyFrame_GetVarString()": "c-api/frame.html#c.PyFrame_GetVarString", "c.PyFrozenSet_Check()": "c-api/set.html#c.PyFrozenSet_Check", "c.PyFrozenSet_CheckExact()": "c-api/set.html#c.PyFrozenSet_CheckExact", "c.PyFrozenSet_New()": "c-api/set.html#c.PyFrozenSet_New", "c.PyFunction_AddWatcher()": "c-api/function.html#c.PyFunction_AddWatcher", "c.PyFunction_Check()": "c-api/function.html#c.PyFunction_Check", "c.PyFunction_ClearWatcher()": "c-api/function.html#c.PyFunction_ClearWatcher", "c.PyFunction_GetAnnotations()": "c-api/function.html#c.PyFunction_GetAnnotations", "c.PyFunction_GetClosure()": "c-api/function.html#c.PyFunction_GetClosure", "c.PyFunction_GetCode()": "c-api/function.html#c.PyFunction_GetCode", "c.PyFunction_GetDefaults()": "c-api/function.html#c.PyFunction_GetDefaults", "c.PyFunction_GetGlobals()": "c-api/function.html#c.PyFunction_GetGlobals", "c.PyFunction_GetModule()": "c-api/function.html#c.PyFunction_GetModule", "c.PyFunction_New()": "c-api/function.html#c.PyFunction_New", "c.PyFunction_NewWithQualName()": "c-api/function.html#c.PyFunction_NewWithQualName", "c.PyFunction_SetAnnotations()": "c-api/function.html#c.PyFunction_SetAnnotations", "c.PyFunction_SetClosure()": "c-api/function.html#c.PyFunction_SetClosure", "c.PyFunction_SetDefaults()": "c-api/function.html#c.PyFunction_SetDefaults", "c.PyFunction_SetVectorcall()": "c-api/function.html#c.PyFunction_SetVectorcall", "c.PyGC_Collect()": "c-api/gcsupport.html#c.PyGC_Collect", "c.PyGC_Disable()": "c-api/gcsupport.html#c.PyGC_Disable", "c.PyGC_Enable()": "c-api/gcsupport.html#c.PyGC_Enable", "c.PyGC_IsEnabled()": "c-api/gcsupport.html#c.PyGC_IsEnabled", "c.PyGen_Check()": "c-api/gen.html#c.PyGen_Check", "c.PyGen_CheckExact()": "c-api/gen.html#c.PyGen_CheckExact", "c.PyGen_New()": "c-api/gen.html#c.PyGen_New", "c.PyGen_NewWithQualName()": "c-api/gen.html#c.PyGen_NewWithQualName", "c.PyGILState_Check()": "c-api/init.html#c.PyGILState_Check", "c.PyGILState_Ensure()": "c-api/init.html#c.PyGILState_Ensure", "c.PyGILState_GetThisThreadState()": "c-api/init.html#c.PyGILState_GetThisThreadState", "c.PyGILState_Release()": "c-api/init.html#c.PyGILState_Release", "c.PyHash_GetFuncDef()": "c-api/hash.html#c.PyHash_GetFuncDef", "c.PyImport_AddModule()": "c-api/import.html#c.PyImport_AddModule", "c.PyImport_AddModuleObject()": "c-api/import.html#c.PyImport_AddModuleObject", "c.PyImport_AddModuleRef()": "c-api/import.html#c.PyImport_AddModuleRef", "c.PyImport_AppendInittab()": "c-api/import.html#c.PyImport_AppendInittab", "c.PyImport_ExecCodeModule()": "c-api/import.html#c.PyImport_ExecCodeModule", "c.PyImport_ExecCodeModuleEx()": "c-api/import.html#c.PyImport_ExecCodeModuleEx", "c.PyImport_ExecCodeModuleObject()": "c-api/import.html#c.PyImport_ExecCodeModuleObject", "c.PyImport_ExecCodeModuleWithPathnames()": "c-api/import.html#c.PyImport_ExecCodeModuleWithPathnames", "c.PyImport_ExtendInittab()": "c-api/import.html#c.PyImport_ExtendInittab", "c.PyImport_GetImporter()": "c-api/import.html#c.PyImport_GetImporter", "c.PyImport_GetMagicNumber()": "c-api/import.html#c.PyImport_GetMagicNumber", "c.PyImport_GetMagicTag()": "c-api/import.html#c.PyImport_GetMagicTag", "c.PyImport_GetModule()": "c-api/import.html#c.PyImport_GetModule", "c.PyImport_GetModuleDict()": "c-api/import.html#c.PyImport_GetModuleDict", "c.PyImport_Import()": "c-api/import.html#c.PyImport_Import", "c.PyImport_ImportFrozenModule()": "c-api/import.html#c.PyImport_ImportFrozenModule", "c.PyImport_ImportFrozenModuleObject()": "c-api/import.html#c.PyImport_ImportFrozenModuleObject", "c.PyImport_ImportModule()": "c-api/import.html#c.PyImport_ImportModule", "c.PyImport_ImportModuleEx()": "c-api/import.html#c.PyImport_ImportModuleEx", "c.PyImport_ImportModuleLevel()": "c-api/import.html#c.PyImport_ImportModuleLevel", "c.PyImport_ImportModuleLevelObject()": "c-api/import.html#c.PyImport_ImportModuleLevelObject", "c.PyImport_ImportModuleNoBlock()": "c-api/import.html#c.PyImport_ImportModuleNoBlock", "c.PyImport_ReloadModule()": "c-api/import.html#c.PyImport_ReloadModule", "c.PyIndex_Check()": "c-api/number.html#c.PyIndex_Check", "c.PyInit_modulename()": "extending/building.html#c.PyInit_modulename", "c.PyInstanceMethod_Check()": "c-api/method.html#c.PyInstanceMethod_Check", "c.PyInstanceMethod_Function()": "c-api/method.html#c.PyInstanceMethod_Function", "c.PyInstanceMethod_GET_FUNCTION()": "c-api/method.html#c.PyInstanceMethod_GET_FUNCTION", "c.PyInstanceMethod_New()": "c-api/method.html#c.PyInstanceMethod_New", "c.PyInterpreterState_Clear()": "c-api/init.html#c.PyInterpreterState_Clear", "c.PyInterpreterState_Delete()": "c-api/init.html#c.PyInterpreterState_Delete", "c.PyInterpreterState_Get()": "c-api/init.html#c.PyInterpreterState_Get", "c.PyInterpreterState_GetDict()": "c-api/init.html#c.PyInterpreterState_GetDict", "c.PyInterpreterState_GetID()": "c-api/init.html#c.PyInterpreterState_GetID", "c.PyInterpreterState_Head()": "c-api/init.html#c.PyInterpreterState_Head", "c.PyInterpreterState_Main()": "c-api/init.html#c.PyInterpreterState_Main", "c.PyInterpreterState_New()": "c-api/init.html#c.PyInterpreterState_New", "c.PyInterpreterState_Next()": "c-api/init.html#c.PyInterpreterState_Next", "c.PyInterpreterState_ThreadHead()": "c-api/init.html#c.PyInterpreterState_ThreadHead", "c.PyIter_Check()": "c-api/iter.html#c.PyIter_Check", "c.PyIter_Next()": "c-api/iter.html#c.PyIter_Next", "c.PyIter_Send()": "c-api/iter.html#c.PyIter_Send", "c.PyList_Append()": "c-api/list.html#c.PyList_Append", "c.PyList_AsTuple()": "c-api/list.html#c.PyList_AsTuple", "c.PyList_Check()": "c-api/list.html#c.PyList_Check", "c.PyList_CheckExact()": "c-api/list.html#c.PyList_CheckExact", "c.PyList_Clear()": "c-api/list.html#c.PyList_Clear", "c.PyList_Extend()": "c-api/list.html#c.PyList_Extend", "c.PyList_GET_ITEM()": "c-api/list.html#c.PyList_GET_ITEM", "c.PyList_GET_SIZE()": "c-api/list.html#c.PyList_GET_SIZE", "c.PyList_GetItem()": "c-api/list.html#c.PyList_GetItem", "c.PyList_GetItemRef()": "c-api/list.html#c.PyList_GetItemRef", "c.PyList_GetSlice()": "c-api/list.html#c.PyList_GetSlice", "c.PyList_Insert()": "c-api/list.html#c.PyList_Insert", "c.PyList_New()": "c-api/list.html#c.PyList_New", "c.PyList_Reverse()": "c-api/list.html#c.PyList_Reverse", "c.PyList_SET_ITEM()": "c-api/list.html#c.PyList_SET_ITEM", "c.PyList_SetItem()": "c-api/list.html#c.PyList_SetItem", "c.PyList_SetSlice()": "c-api/list.html#c.PyList_SetSlice", "c.PyList_Size()": "c-api/list.html#c.PyList_Size", "c.PyList_Sort()": "c-api/list.html#c.PyList_Sort", "c.PyLong_AsDouble()": "c-api/long.html#c.PyLong_AsDouble", "c.PyLong_AsInt()": "c-api/long.html#c.PyLong_AsInt", "c.PyLong_AsLong()": "c-api/long.html#c.PyLong_AsLong", "c.PyLong_AsLongAndOverflow()": "c-api/long.html#c.PyLong_AsLongAndOverflow", "c.PyLong_AsLongLong()": "c-api/long.html#c.PyLong_AsLongLong", "c.PyLong_AsLongLongAndOverflow()": "c-api/long.html#c.PyLong_AsLongLongAndOverflow", "c.PyLong_AsNativeBytes()": "c-api/long.html#c.PyLong_AsNativeBytes", "c.PyLong_AsSize_t()": "c-api/long.html#c.PyLong_AsSize_t", "c.PyLong_AsSsize_t()": "c-api/long.html#c.PyLong_AsSsize_t", "c.PyLong_AsUnsignedLong()": "c-api/long.html#c.PyLong_AsUnsignedLong", "c.PyLong_AsUnsignedLongLong()": "c-api/long.html#c.PyLong_AsUnsignedLongLong", "c.PyLong_AsUnsignedLongLongMask()": "c-api/long.html#c.PyLong_AsUnsignedLongLongMask", "c.PyLong_AsUnsignedLongMask()": "c-api/long.html#c.PyLong_AsUnsignedLongMask", "c.PyLong_AsVoidPtr()": "c-api/long.html#c.PyLong_AsVoidPtr", "c.PyLong_Check()": "c-api/long.html#c.PyLong_Check", "c.PyLong_CheckExact()": "c-api/long.html#c.PyLong_CheckExact", "c.PyLong_FromDouble()": "c-api/long.html#c.PyLong_FromDouble", "c.PyLong_FromLong()": "c-api/long.html#c.PyLong_FromLong", "c.PyLong_FromLongLong()": "c-api/long.html#c.PyLong_FromLongLong", "c.PyLong_FromNativeBytes()": "c-api/long.html#c.PyLong_FromNativeBytes", "c.PyLong_FromSize_t()": "c-api/long.html#c.PyLong_FromSize_t", "c.PyLong_FromSsize_t()": "c-api/long.html#c.PyLong_FromSsize_t", "c.PyLong_FromString()": "c-api/long.html#c.PyLong_FromString", "c.PyLong_FromUnicodeObject()": "c-api/long.html#c.PyLong_FromUnicodeObject", "c.PyLong_FromUnsignedLong()": "c-api/long.html#c.PyLong_FromUnsignedLong", "c.PyLong_FromUnsignedLongLong()": "c-api/long.html#c.PyLong_FromUnsignedLongLong", "c.PyLong_FromUnsignedNativeBytes()": "c-api/long.html#c.PyLong_FromUnsignedNativeBytes", "c.PyLong_FromVoidPtr()": "c-api/long.html#c.PyLong_FromVoidPtr", "c.PyLong_GetInfo()": "c-api/long.html#c.PyLong_GetInfo", "c.PyMapping_Check()": "c-api/mapping.html#c.PyMapping_Check", "c.PyMapping_DelItem()": "c-api/mapping.html#c.PyMapping_DelItem", "c.PyMapping_DelItemString()": "c-api/mapping.html#c.PyMapping_DelItemString", "c.PyMapping_GetItemString()": "c-api/mapping.html#c.PyMapping_GetItemString", "c.PyMapping_GetOptionalItem()": "c-api/mapping.html#c.PyMapping_GetOptionalItem", "c.PyMapping_GetOptionalItemString()": "c-api/mapping.html#c.PyMapping_GetOptionalItemString", "c.PyMapping_HasKey()": "c-api/mapping.html#c.PyMapping_HasKey", "c.PyMapping_HasKeyString()": "c-api/mapping.html#c.PyMapping_HasKeyString", "c.PyMapping_HasKeyStringWithError()": "c-api/mapping.html#c.PyMapping_HasKeyStringWithError", "c.PyMapping_HasKeyWithError()": "c-api/mapping.html#c.PyMapping_HasKeyWithError", "c.PyMapping_Items()": "c-api/mapping.html#c.PyMapping_Items", "c.PyMapping_Keys()": "c-api/mapping.html#c.PyMapping_Keys", "c.PyMapping_Length()": "c-api/mapping.html#c.PyMapping_Length", "c.PyMapping_SetItemString()": "c-api/mapping.html#c.PyMapping_SetItemString", "c.PyMapping_Size()": "c-api/mapping.html#c.PyMapping_Size", "c.PyMapping_Values()": "c-api/mapping.html#c.PyMapping_Values", "c.PyMarshal_ReadLastObjectFromFile()": "c-api/marshal.html#c.PyMarshal_ReadLastObjectFromFile", "c.PyMarshal_ReadLongFromFile()": "c-api/marshal.html#c.PyMarshal_ReadLongFromFile", "c.PyMarshal_ReadObjectFromFile()": "c-api/marshal.html#c.PyMarshal_ReadObjectFromFile", "c.PyMarshal_ReadObjectFromString()": "c-api/marshal.html#c.PyMarshal_ReadObjectFromString", "c.PyMarshal_ReadShortFromFile()": "c-api/marshal.html#c.PyMarshal_ReadShortFromFile", "c.PyMarshal_WriteLongToFile()": "c-api/marshal.html#c.PyMarshal_WriteLongToFile", "c.PyMarshal_WriteObjectToFile()": "c-api/marshal.html#c.PyMarshal_WriteObjectToFile", "c.PyMarshal_WriteObjectToString()": "c-api/marshal.html#c.PyMarshal_WriteObjectToString", "c.PyMem_Calloc()": "c-api/memory.html#c.PyMem_Calloc", "c.PyMem_Del()": "c-api/memory.html#c.PyMem_Del", "c.PyMem_Free()": "c-api/memory.html#c.PyMem_Free", "c.PyMem_GetAllocator()": "c-api/memory.html#c.PyMem_GetAllocator", "c.PyMem_Malloc()": "c-api/memory.html#c.PyMem_Malloc", "c.PyMem_RawCalloc()": "c-api/memory.html#c.PyMem_RawCalloc", "c.PyMem_RawFree()": "c-api/memory.html#c.PyMem_RawFree", "c.PyMem_RawMalloc()": "c-api/memory.html#c.PyMem_RawMalloc", "c.PyMem_RawRealloc()": "c-api/memory.html#c.PyMem_RawRealloc", "c.PyMem_Realloc()": "c-api/memory.html#c.PyMem_Realloc", "c.PyMem_SetAllocator()": "c-api/memory.html#c.PyMem_SetAllocator", "c.PyMem_SetupDebugHooks()": "c-api/memory.html#c.PyMem_SetupDebugHooks", "c.PyMember_GetOne()": "c-api/structures.html#c.PyMember_GetOne", "c.PyMember_SetOne()": "c-api/structures.html#c.PyMember_SetOne", "c.PyMemoryView_Check()": "c-api/memoryview.html#c.PyMemoryView_Check", "c.PyMemoryView_FromBuffer()": "c-api/memoryview.html#c.PyMemoryView_FromBuffer", "c.PyMemoryView_FromMemory()": "c-api/memoryview.html#c.PyMemoryView_FromMemory", "c.PyMemoryView_FromObject()": "c-api/memoryview.html#c.PyMemoryView_FromObject", "c.PyMemoryView_GET_BASE()": "c-api/memoryview.html#c.PyMemoryView_GET_BASE", "c.PyMemoryView_GET_BUFFER()": "c-api/memoryview.html#c.PyMemoryView_GET_BUFFER", "c.PyMemoryView_GetContiguous()": "c-api/memoryview.html#c.PyMemoryView_GetContiguous", "c.PyMethod_Check()": "c-api/method.html#c.PyMethod_Check", "c.PyMethod_Function()": "c-api/method.html#c.PyMethod_Function", "c.PyMethod_GET_FUNCTION()": "c-api/method.html#c.PyMethod_GET_FUNCTION", "c.PyMethod_GET_SELF()": "c-api/method.html#c.PyMethod_GET_SELF", "c.PyMethod_New()": "c-api/method.html#c.PyMethod_New", "c.PyMethod_Self()": "c-api/method.html#c.PyMethod_Self", "c.PyModule_Add()": "c-api/module.html#c.PyModule_Add", "c.PyModule_AddFunctions()": "c-api/module.html#c.PyModule_AddFunctions", "c.PyModule_AddIntConstant()": "c-api/module.html#c.PyModule_AddIntConstant", "c.PyModule_AddObject()": "c-api/module.html#c.PyModule_AddObject", "c.PyModule_AddObjectRef()": "c-api/module.html#c.PyModule_AddObjectRef", "c.PyModule_AddStringConstant()": "c-api/module.html#c.PyModule_AddStringConstant", "c.PyModule_AddType()": "c-api/module.html#c.PyModule_AddType", "c.PyModule_Check()": "c-api/module.html#c.PyModule_Check", "c.PyModule_CheckExact()": "c-api/module.html#c.PyModule_CheckExact", "c.PyModule_Create()": "c-api/module.html#c.PyModule_Create", "c.PyModule_Create2()": "c-api/module.html#c.PyModule_Create2", "c.PyModule_ExecDef()": "c-api/module.html#c.PyModule_ExecDef", "c.PyModule_FromDefAndSpec()": "c-api/module.html#c.PyModule_FromDefAndSpec", "c.PyModule_FromDefAndSpec2()": "c-api/module.html#c.PyModule_FromDefAndSpec2", "c.PyModule_GetDef()": "c-api/module.html#c.PyModule_GetDef", "c.PyModule_GetDict()": "c-api/module.html#c.PyModule_GetDict", "c.PyModule_GetFilename()": "c-api/module.html#c.PyModule_GetFilename", "c.PyModule_GetFilenameObject()": "c-api/module.html#c.PyModule_GetFilenameObject", "c.PyModule_GetName()": "c-api/module.html#c.PyModule_GetName", "c.PyModule_GetNameObject()": "c-api/module.html#c.PyModule_GetNameObject", "c.PyModule_GetState()": "c-api/module.html#c.PyModule_GetState", "c.PyModule_New()": "c-api/module.html#c.PyModule_New", "c.PyModule_NewObject()": "c-api/module.html#c.PyModule_NewObject", "c.PyModule_SetDocString()": "c-api/module.html#c.PyModule_SetDocString", "c.PyModuleDef_Init()": "c-api/module.html#c.PyModuleDef_Init", "c.PyMonitoring_FireBranchEvent()": "c-api/monitoring.html#c.PyMonitoring_FireBranchEvent", "c.PyMonitoring_FireCallEvent()": "c-api/monitoring.html#c.PyMonitoring_FireCallEvent", "c.PyMonitoring_FireCRaiseEvent()": "c-api/monitoring.html#c.PyMonitoring_FireCRaiseEvent", "c.PyMonitoring_FireCReturnEvent()": "c-api/monitoring.html#c.PyMonitoring_FireCReturnEvent", "c.PyMonitoring_FireExceptionHandledEvent()": "c-api/monitoring.html#c.PyMonitoring_FireExceptionHandledEvent", "c.PyMonitoring_FireJumpEvent()": "c-api/monitoring.html#c.PyMonitoring_FireJumpEvent", "c.PyMonitoring_FireLineEvent()": "c-api/monitoring.html#c.PyMonitoring_FireLineEvent", "c.PyMonitoring_FirePyResumeEvent()": "c-api/monitoring.html#c.PyMonitoring_FirePyResumeEvent", "c.PyMonitoring_FirePyReturnEvent()": "c-api/monitoring.html#c.PyMonitoring_FirePyReturnEvent", "c.PyMonitoring_FirePyStartEvent()": "c-api/monitoring.html#c.PyMonitoring_FirePyStartEvent", "c.PyMonitoring_FirePyThrowEvent()": "c-api/monitoring.html#c.PyMonitoring_FirePyThrowEvent", "c.PyMonitoring_FirePyUnwindEvent()": "c-api/monitoring.html#c.PyMonitoring_FirePyUnwindEvent", "c.PyMonitoring_FirePyYieldEvent()": "c-api/monitoring.html#c.PyMonitoring_FirePyYieldEvent", "c.PyMonitoring_FireRaiseEvent()": "c-api/monitoring.html#c.PyMonitoring_FireRaiseEvent", "c.PyMonitoring_FireReraiseEvent()": "c-api/monitoring.html#c.PyMonitoring_FireReraiseEvent", "c.PyMonitoring_FireStopIterationEvent()": "c-api/monitoring.html#c.PyMonitoring_FireStopIterationEvent", "c.PyMutex_Lock()": "c-api/init.html#c.PyMutex_Lock", "c.PyMutex_Unlock()": "c-api/init.html#c.PyMutex_Unlock", "c.PyNumber_Absolute()": "c-api/number.html#c.PyNumber_Absolute", "c.PyNumber_Add()": "c-api/number.html#c.PyNumber_Add", "c.PyNumber_And()": "c-api/number.html#c.PyNumber_And", "c.PyNumber_AsSsize_t()": "c-api/number.html#c.PyNumber_AsSsize_t", "c.PyNumber_Check()": "c-api/number.html#c.PyNumber_Check", "c.PyNumber_Divmod()": "c-api/number.html#c.PyNumber_Divmod", "c.PyNumber_Float()": "c-api/number.html#c.PyNumber_Float", "c.PyNumber_FloorDivide()": "c-api/number.html#c.PyNumber_FloorDivide", "c.PyNumber_Index()": "c-api/number.html#c.PyNumber_Index", "c.PyNumber_InPlaceAdd()": "c-api/number.html#c.PyNumber_InPlaceAdd", "c.PyNumber_InPlaceAnd()": "c-api/number.html#c.PyNumber_InPlaceAnd", "c.PyNumber_InPlaceFloorDivide()": "c-api/number.html#c.PyNumber_InPlaceFloorDivide", "c.PyNumber_InPlaceLshift()": "c-api/number.html#c.PyNumber_InPlaceLshift", "c.PyNumber_InPlaceMatrixMultiply()": "c-api/number.html#c.PyNumber_InPlaceMatrixMultiply", "c.PyNumber_InPlaceMultiply()": "c-api/number.html#c.PyNumber_InPlaceMultiply", "c.PyNumber_InPlaceOr()": "c-api/number.html#c.PyNumber_InPlaceOr", "c.PyNumber_InPlacePower()": "c-api/number.html#c.PyNumber_InPlacePower", "c.PyNumber_InPlaceRemainder()": "c-api/number.html#c.PyNumber_InPlaceRemainder", "c.PyNumber_InPlaceRshift()": "c-api/number.html#c.PyNumber_InPlaceRshift", "c.PyNumber_InPlaceSubtract()": "c-api/number.html#c.PyNumber_InPlaceSubtract", "c.PyNumber_InPlaceTrueDivide()": "c-api/number.html#c.PyNumber_InPlaceTrueDivide", "c.PyNumber_InPlaceXor()": "c-api/number.html#c.PyNumber_InPlaceXor", "c.PyNumber_Invert()": "c-api/number.html#c.PyNumber_Invert", "c.PyNumber_Long()": "c-api/number.html#c.PyNumber_Long", "c.PyNumber_Lshift()": "c-api/number.html#c.PyNumber_Lshift", "c.PyNumber_MatrixMultiply()": "c-api/number.html#c.PyNumber_MatrixMultiply", "c.PyNumber_Multiply()": "c-api/number.html#c.PyNumber_Multiply", "c.PyNumber_Negative()": "c-api/number.html#c.PyNumber_Negative", "c.PyNumber_Or()": "c-api/number.html#c.PyNumber_Or", "c.PyNumber_Positive()": "c-api/number.html#c.PyNumber_Positive", "c.PyNumber_Power()": "c-api/number.html#c.PyNumber_Power", "c.PyNumber_Remainder()": "c-api/number.html#c.PyNumber_Remainder", "c.PyNumber_Rshift()": "c-api/number.html#c.PyNumber_Rshift", "c.PyNumber_Subtract()": "c-api/number.html#c.PyNumber_Subtract", "c.PyNumber_ToBase()": "c-api/number.html#c.PyNumber_ToBase", "c.PyNumber_TrueDivide()": "c-api/number.html#c.PyNumber_TrueDivide", "c.PyNumber_Xor()": "c-api/number.html#c.PyNumber_Xor", "c.PyObject_ASCII()": "c-api/object.html#c.PyObject_ASCII", "c.PyObject_AsFileDescriptor()": "c-api/file.html#c.PyObject_AsFileDescriptor", "c.PyObject_Bytes()": "c-api/object.html#c.PyObject_Bytes", "c.PyObject_Call()": "c-api/call.html#c.PyObject_Call", "c.PyObject_CallFunction()": "c-api/call.html#c.PyObject_CallFunction", "c.PyObject_CallFunctionObjArgs()": "c-api/call.html#c.PyObject_CallFunctionObjArgs", "c.PyObject_CallMethod()": "c-api/call.html#c.PyObject_CallMethod", "c.PyObject_CallMethodNoArgs()": "c-api/call.html#c.PyObject_CallMethodNoArgs", "c.PyObject_CallMethodObjArgs()": "c-api/call.html#c.PyObject_CallMethodObjArgs", "c.PyObject_CallMethodOneArg()": "c-api/call.html#c.PyObject_CallMethodOneArg", "c.PyObject_CallNoArgs()": "c-api/call.html#c.PyObject_CallNoArgs", "c.PyObject_CallObject()": "c-api/call.html#c.PyObject_CallObject", "c.PyObject_Calloc()": "c-api/memory.html#c.PyObject_Calloc", "c.PyObject_CallOneArg()": "c-api/call.html#c.PyObject_CallOneArg", "c.PyObject_CheckBuffer()": "c-api/buffer.html#c.PyObject_CheckBuffer", "c.PyObject_ClearManagedDict()": "c-api/object.html#c.PyObject_ClearManagedDict", "c.PyObject_ClearWeakRefs()": "c-api/weakref.html#c.PyObject_ClearWeakRefs", "c.PyObject_CopyData()": "c-api/buffer.html#c.PyObject_CopyData", "c.PyObject_Del()": "c-api/allocation.html#c.PyObject_Del", "c.PyObject_DelAttr()": "c-api/object.html#c.PyObject_DelAttr", "c.PyObject_DelAttrString()": "c-api/object.html#c.PyObject_DelAttrString", "c.PyObject_DelItem()": "c-api/object.html#c.PyObject_DelItem", "c.PyObject_Dir()": "c-api/object.html#c.PyObject_Dir", "c.PyObject_Format()": "c-api/object.html#c.PyObject_Format", "c.PyObject_Free()": "c-api/memory.html#c.PyObject_Free", "c.PyObject_GC_Del()": "c-api/gcsupport.html#c.PyObject_GC_Del", "c.PyObject_GC_IsFinalized()": "c-api/gcsupport.html#c.PyObject_GC_IsFinalized", "c.PyObject_GC_IsTracked()": "c-api/gcsupport.html#c.PyObject_GC_IsTracked", "c.PyObject_GC_Track()": "c-api/gcsupport.html#c.PyObject_GC_Track", "c.PyObject_GC_UnTrack()": "c-api/gcsupport.html#c.PyObject_GC_UnTrack", "c.PyObject_GenericGetAttr()": "c-api/object.html#c.PyObject_GenericGetAttr", "c.PyObject_GenericGetDict()": "c-api/object.html#c.PyObject_GenericGetDict", "c.PyObject_GenericHash()": "c-api/hash.html#c.PyObject_GenericHash", "c.PyObject_GenericSetAttr()": "c-api/object.html#c.PyObject_GenericSetAttr", "c.PyObject_GenericSetDict()": "c-api/object.html#c.PyObject_GenericSetDict", "c.PyObject_GetAIter()": "c-api/object.html#c.PyObject_GetAIter", "c.PyObject_GetArenaAllocator()": "c-api/memory.html#c.PyObject_GetArenaAllocator", "c.PyObject_GetAttr()": "c-api/object.html#c.PyObject_GetAttr", "c.PyObject_GetAttrString()": "c-api/object.html#c.PyObject_GetAttrString", "c.PyObject_GetBuffer()": "c-api/buffer.html#c.PyObject_GetBuffer", "c.PyObject_GetItem()": "c-api/object.html#c.PyObject_GetItem", "c.PyObject_GetItemData()": "c-api/object.html#c.PyObject_GetItemData", "c.PyObject_GetIter()": "c-api/object.html#c.PyObject_GetIter", "c.PyObject_GetOptionalAttr()": "c-api/object.html#c.PyObject_GetOptionalAttr", "c.PyObject_GetOptionalAttrString()": "c-api/object.html#c.PyObject_GetOptionalAttrString", "c.PyObject_GetTypeData()": "c-api/object.html#c.PyObject_GetTypeData", "c.PyObject_HasAttr()": "c-api/object.html#c.PyObject_HasAttr", "c.PyObject_HasAttrString()": "c-api/object.html#c.PyObject_HasAttrString", "c.PyObject_HasAttrStringWithError()": "c-api/object.html#c.PyObject_HasAttrStringWithError", "c.PyObject_HasAttrWithError()": "c-api/object.html#c.PyObject_HasAttrWithError", "c.PyObject_Hash()": "c-api/object.html#c.PyObject_Hash", "c.PyObject_HashNotImplemented()": "c-api/object.html#c.PyObject_HashNotImplemented", "c.PyObject_Init()": "c-api/allocation.html#c.PyObject_Init", "c.PyObject_InitVar()": "c-api/allocation.html#c.PyObject_InitVar", "c.PyObject_IS_GC()": "c-api/gcsupport.html#c.PyObject_IS_GC", "c.PyObject_IsInstance()": "c-api/object.html#c.PyObject_IsInstance", "c.PyObject_IsSubclass()": "c-api/object.html#c.PyObject_IsSubclass", "c.PyObject_IsTrue()": "c-api/object.html#c.PyObject_IsTrue", "c.PyObject_Length()": "c-api/object.html#c.PyObject_Length", "c.PyObject_LengthHint()": "c-api/object.html#c.PyObject_LengthHint", "c.PyObject_Malloc()": "c-api/memory.html#c.PyObject_Malloc", "c.PyObject_Not()": "c-api/object.html#c.PyObject_Not", "c.PyObject_Print()": "c-api/object.html#c.PyObject_Print", "c.PyObject_Realloc()": "c-api/memory.html#c.PyObject_Realloc", "c.PyObject_Repr()": "c-api/object.html#c.PyObject_Repr", "c.PyObject_RichCompare()": "c-api/object.html#c.PyObject_RichCompare", "c.PyObject_RichCompareBool()": "c-api/object.html#c.PyObject_RichCompareBool", "c.PyObject_SetArenaAllocator()": "c-api/memory.html#c.PyObject_SetArenaAllocator", "c.PyObject_SetAttr()": "c-api/object.html#c.PyObject_SetAttr", "c.PyObject_SetAttrString()": "c-api/object.html#c.PyObject_SetAttrString", "c.PyObject_SetItem()": "c-api/object.html#c.PyObject_SetItem", "c.PyObject_Size()": "c-api/object.html#c.PyObject_Size", "c.PyObject_Str()": "c-api/object.html#c.PyObject_Str", "c.PyObject_Type()": "c-api/object.html#c.PyObject_Type", "c.PyObject_TypeCheck()": "c-api/object.html#c.PyObject_TypeCheck", "c.PyObject_Vectorcall()": "c-api/call.html#c.PyObject_Vectorcall", "c.PyObject_VectorcallDict()": "c-api/call.html#c.PyObject_VectorcallDict", "c.PyObject_VectorcallMethod()": "c-api/call.html#c.PyObject_VectorcallMethod", "c.PyObject_VisitManagedDict()": "c-api/object.html#c.PyObject_VisitManagedDict", "c.PyOS_AfterFork()": "c-api/sys.html#c.PyOS_AfterFork", "c.PyOS_AfterFork_Child()": "c-api/sys.html#c.PyOS_AfterFork_Child", "c.PyOS_AfterFork_Parent()": "c-api/sys.html#c.PyOS_AfterFork_Parent", "c.PyOS_BeforeFork()": "c-api/sys.html#c.PyOS_BeforeFork", "c.PyOS_CheckStack()": "c-api/sys.html#c.PyOS_CheckStack", "c.PyOS_double_to_string()": "c-api/conversion.html#c.PyOS_double_to_string", "c.PyOS_FSPath()": "c-api/sys.html#c.PyOS_FSPath", "c.PyOS_getsig()": "c-api/sys.html#c.PyOS_getsig", "c.PyOS_setsig()": "c-api/sys.html#c.PyOS_setsig", "c.PyOS_snprintf()": "c-api/conversion.html#c.PyOS_snprintf", "c.PyOS_stricmp()": "c-api/conversion.html#c.PyOS_stricmp", "c.PyOS_string_to_double()": "c-api/conversion.html#c.PyOS_string_to_double", "c.PyOS_strnicmp()": "c-api/conversion.html#c.PyOS_strnicmp", "c.PyOS_strtol()": "c-api/conversion.html#c.PyOS_strtol", "c.PyOS_strtoul()": "c-api/conversion.html#c.PyOS_strtoul", "c.PyOS_vsnprintf()": "c-api/conversion.html#c.PyOS_vsnprintf", "c.PyPreConfig_InitIsolatedConfig()": "c-api/init_config.html#c.PyPreConfig_InitIsolatedConfig", "c.PyPreConfig_InitPythonConfig()": "c-api/init_config.html#c.PyPreConfig_InitPythonConfig", "c.PyRefTracer_GetTracer()": "c-api/init.html#c.PyRefTracer_GetTracer", "c.PyRefTracer_SetTracer()": "c-api/init.html#c.PyRefTracer_SetTracer", "c.PyRun_AnyFile()": "c-api/veryhigh.html#c.PyRun_AnyFile", "c.PyRun_AnyFileEx()": "c-api/veryhigh.html#c.PyRun_AnyFileEx", "c.PyRun_AnyFileExFlags()": "c-api/veryhigh.html#c.PyRun_AnyFileExFlags", "c.PyRun_AnyFileFlags()": "c-api/veryhigh.html#c.PyRun_AnyFileFlags", "c.PyRun_File()": "c-api/veryhigh.html#c.PyRun_File", "c.PyRun_FileEx()": "c-api/veryhigh.html#c.PyRun_FileEx", "c.PyRun_FileExFlags()": "c-api/veryhigh.html#c.PyRun_FileExFlags", "c.PyRun_FileFlags()": "c-api/veryhigh.html#c.PyRun_FileFlags", "c.PyRun_InteractiveLoop()": "c-api/veryhigh.html#c.PyRun_InteractiveLoop", "c.PyRun_InteractiveLoopFlags()": "c-api/veryhigh.html#c.PyRun_InteractiveLoopFlags", "c.PyRun_InteractiveOne()": "c-api/veryhigh.html#c.PyRun_InteractiveOne", "c.PyRun_InteractiveOneFlags()": "c-api/veryhigh.html#c.PyRun_InteractiveOneFlags", "c.PyRun_SimpleFile()": "c-api/veryhigh.html#c.PyRun_SimpleFile", "c.PyRun_SimpleFileEx()": "c-api/veryhigh.html#c.PyRun_SimpleFileEx", "c.PyRun_SimpleFileExFlags()": "c-api/veryhigh.html#c.PyRun_SimpleFileExFlags", "c.PyRun_SimpleString()": "c-api/veryhigh.html#c.PyRun_SimpleString", "c.PyRun_SimpleStringFlags()": "c-api/veryhigh.html#c.PyRun_SimpleStringFlags", "c.PyRun_String()": "c-api/veryhigh.html#c.PyRun_String", "c.PyRun_StringFlags()": "c-api/veryhigh.html#c.PyRun_StringFlags", "c.PySeqIter_Check()": "c-api/iterator.html#c.PySeqIter_Check", "c.PySeqIter_New()": "c-api/iterator.html#c.PySeqIter_New", "c.PySequence_Check()": "c-api/sequence.html#c.PySequence_Check", "c.PySequence_Concat()": "c-api/sequence.html#c.PySequence_Concat", "c.PySequence_Contains()": "c-api/sequence.html#c.PySequence_Contains", "c.PySequence_Count()": "c-api/sequence.html#c.PySequence_Count", "c.PySequence_DelItem()": "c-api/sequence.html#c.PySequence_DelItem", "c.PySequence_DelSlice()": "c-api/sequence.html#c.PySequence_DelSlice", "c.PySequence_Fast()": "c-api/sequence.html#c.PySequence_Fast", "c.PySequence_Fast_GET_ITEM()": "c-api/sequence.html#c.PySequence_Fast_GET_ITEM", "c.PySequence_Fast_GET_SIZE()": "c-api/sequence.html#c.PySequence_Fast_GET_SIZE", "c.PySequence_Fast_ITEMS()": "c-api/sequence.html#c.PySequence_Fast_ITEMS", "c.PySequence_GetItem()": "c-api/sequence.html#c.PySequence_GetItem", "c.PySequence_GetSlice()": "c-api/sequence.html#c.PySequence_GetSlice", "c.PySequence_Index()": "c-api/sequence.html#c.PySequence_Index", "c.PySequence_InPlaceConcat()": "c-api/sequence.html#c.PySequence_InPlaceConcat", "c.PySequence_InPlaceRepeat()": "c-api/sequence.html#c.PySequence_InPlaceRepeat", "c.PySequence_ITEM()": "c-api/sequence.html#c.PySequence_ITEM", "c.PySequence_Length()": "c-api/sequence.html#c.PySequence_Length", "c.PySequence_List()": "c-api/sequence.html#c.PySequence_List", "c.PySequence_Repeat()": "c-api/sequence.html#c.PySequence_Repeat", "c.PySequence_SetItem()": "c-api/sequence.html#c.PySequence_SetItem", "c.PySequence_SetSlice()": "c-api/sequence.html#c.PySequence_SetSlice", "c.PySequence_Size()": "c-api/sequence.html#c.PySequence_Size", "c.PySequence_Tuple()": "c-api/sequence.html#c.PySequence_Tuple", "c.PySet_Add()": "c-api/set.html#c.PySet_Add", "c.PySet_Check()": "c-api/set.html#c.PySet_Check", "c.PySet_CheckExact()": "c-api/set.html#c.PySet_CheckExact", "c.PySet_Clear()": "c-api/set.html#c.PySet_Clear", "c.PySet_Contains()": "c-api/set.html#c.PySet_Contains", "c.PySet_Discard()": "c-api/set.html#c.PySet_Discard", "c.PySet_GET_SIZE()": "c-api/set.html#c.PySet_GET_SIZE", "c.PySet_New()": "c-api/set.html#c.PySet_New", "c.PySet_Pop()": "c-api/set.html#c.PySet_Pop", "c.PySet_Size()": "c-api/set.html#c.PySet_Size", "c.PySignal_SetWakeupFd()": "c-api/exceptions.html#c.PySignal_SetWakeupFd", "c.PySlice_AdjustIndices()": "c-api/slice.html#c.PySlice_AdjustIndices", "c.PySlice_Check()": "c-api/slice.html#c.PySlice_Check", "c.PySlice_GetIndices()": "c-api/slice.html#c.PySlice_GetIndices", "c.PySlice_GetIndicesEx()": "c-api/slice.html#c.PySlice_GetIndicesEx", "c.PySlice_New()": "c-api/slice.html#c.PySlice_New", "c.PySlice_Unpack()": "c-api/slice.html#c.PySlice_Unpack", "c.PyState_AddModule()": "c-api/module.html#c.PyState_AddModule", "c.PyState_FindModule()": "c-api/module.html#c.PyState_FindModule", "c.PyState_RemoveModule()": "c-api/module.html#c.PyState_RemoveModule", "c.PyStatus_Error()": "c-api/init_config.html#c.PyStatus_Error", "c.PyStatus_Exception()": "c-api/init_config.html#c.PyStatus_Exception", "c.PyStatus_Exit()": "c-api/init_config.html#c.PyStatus_Exit", "c.PyStatus_IsError()": "c-api/init_config.html#c.PyStatus_IsError", "c.PyStatus_IsExit()": "c-api/init_config.html#c.PyStatus_IsExit", "c.PyStatus_NoMemory()": "c-api/init_config.html#c.PyStatus_NoMemory", "c.PyStatus_Ok()": "c-api/init_config.html#c.PyStatus_Ok", "c.PyStructSequence_GET_ITEM()": "c-api/tuple.html#c.PyStructSequence_GET_ITEM", "c.PyStructSequence_GetItem()": "c-api/tuple.html#c.PyStructSequence_GetItem", "c.PyStructSequence_InitType()": "c-api/tuple.html#c.PyStructSequence_InitType", "c.PyStructSequence_InitType2()": "c-api/tuple.html#c.PyStructSequence_InitType2", "c.PyStructSequence_New()": "c-api/tuple.html#c.PyStructSequence_New", "c.PyStructSequence_NewType()": "c-api/tuple.html#c.PyStructSequence_NewType", "c.PyStructSequence_SET_ITEM()": "c-api/tuple.html#c.PyStructSequence_SET_ITEM", "c.PyStructSequence_SetItem()": "c-api/tuple.html#c.PyStructSequence_SetItem", "c.PySys_AddAuditHook()": "c-api/sys.html#c.PySys_AddAuditHook", "c.PySys_Audit()": "c-api/sys.html#c.PySys_Audit", "c.PySys_AuditTuple()": "c-api/sys.html#c.PySys_AuditTuple", "c.PySys_FormatStderr()": "c-api/sys.html#c.PySys_FormatStderr", "c.PySys_FormatStdout()": "c-api/sys.html#c.PySys_FormatStdout", "c.PySys_GetObject()": "c-api/sys.html#c.PySys_GetObject", "c.PySys_GetXOptions()": "c-api/sys.html#c.PySys_GetXOptions", "c.PySys_ResetWarnOptions()": "c-api/sys.html#c.PySys_ResetWarnOptions", "c.PySys_SetArgv()": "c-api/init.html#c.PySys_SetArgv", "c.PySys_SetArgvEx()": "c-api/init.html#c.PySys_SetArgvEx", "c.PySys_SetObject()": "c-api/sys.html#c.PySys_SetObject", "c.PySys_WriteStderr()": "c-api/sys.html#c.PySys_WriteStderr", "c.PySys_WriteStdout()": "c-api/sys.html#c.PySys_WriteStdout", "c.PyThread_create_key()": "c-api/init.html#c.PyThread_create_key", "c.PyThread_delete_key()": "c-api/init.html#c.PyThread_delete_key", "c.PyThread_delete_key_value()": "c-api/init.html#c.PyThread_delete_key_value", "c.PyThread_get_key_value()": "c-api/init.html#c.PyThread_get_key_value", "c.PyThread_ReInitTLS()": "c-api/init.html#c.PyThread_ReInitTLS", "c.PyThread_set_key_value()": "c-api/init.html#c.PyThread_set_key_value", "c.PyThread_tss_alloc()": "c-api/init.html#c.PyThread_tss_alloc", "c.PyThread_tss_create()": "c-api/init.html#c.PyThread_tss_create", "c.PyThread_tss_delete()": "c-api/init.html#c.PyThread_tss_delete", "c.PyThread_tss_free()": "c-api/init.html#c.PyThread_tss_free", "c.PyThread_tss_get()": "c-api/init.html#c.PyThread_tss_get", "c.PyThread_tss_is_created()": "c-api/init.html#c.PyThread_tss_is_created", "c.PyThread_tss_set()": "c-api/init.html#c.PyThread_tss_set", "c.PyThreadState_Clear()": "c-api/init.html#c.PyThreadState_Clear", "c.PyThreadState_Delete()": "c-api/init.html#c.PyThreadState_Delete", "c.PyThreadState_DeleteCurrent()": "c-api/init.html#c.PyThreadState_DeleteCurrent", "c.PyThreadState_EnterTracing()": "c-api/init.html#c.PyThreadState_EnterTracing", "c.PyThreadState_Get()": "c-api/init.html#c.PyThreadState_Get", "c.PyThreadState_GetDict()": "c-api/init.html#c.PyThreadState_GetDict", "c.PyThreadState_GetFrame()": "c-api/init.html#c.PyThreadState_GetFrame", "c.PyThreadState_GetID()": "c-api/init.html#c.PyThreadState_GetID", "c.PyThreadState_GetInterpreter()": "c-api/init.html#c.PyThreadState_GetInterpreter", "c.PyThreadState_GetUnchecked()": "c-api/init.html#c.PyThreadState_GetUnchecked", "c.PyThreadState_LeaveTracing()": "c-api/init.html#c.PyThreadState_LeaveTracing", "c.PyThreadState_New()": "c-api/init.html#c.PyThreadState_New", "c.PyThreadState_Next()": "c-api/init.html#c.PyThreadState_Next", "c.PyThreadState_SetAsyncExc()": "c-api/init.html#c.PyThreadState_SetAsyncExc", "c.PyThreadState_Swap()": "c-api/init.html#c.PyThreadState_Swap", "c.PyTime_AsSecondsDouble()": "c-api/time.html#c.PyTime_AsSecondsDouble", "c.PyTime_Check()": "c-api/datetime.html#c.PyTime_Check", "c.PyTime_CheckExact()": "c-api/datetime.html#c.PyTime_CheckExact", "c.PyTime_FromTime()": "c-api/datetime.html#c.PyTime_FromTime", "c.PyTime_FromTimeAndFold()": "c-api/datetime.html#c.PyTime_FromTimeAndFold", "c.PyTime_Monotonic()": "c-api/time.html#c.PyTime_Monotonic", "c.PyTime_MonotonicRaw()": "c-api/time.html#c.PyTime_MonotonicRaw", "c.PyTime_PerfCounter()": "c-api/time.html#c.PyTime_PerfCounter", "c.PyTime_PerfCounterRaw()": "c-api/time.html#c.PyTime_PerfCounterRaw", "c.PyTime_Time()": "c-api/time.html#c.PyTime_Time", "c.PyTime_TimeRaw()": "c-api/time.html#c.PyTime_TimeRaw", "c.PyTimeZone_FromOffset()": "c-api/datetime.html#c.PyTimeZone_FromOffset", "c.PyTimeZone_FromOffsetAndName()": "c-api/datetime.html#c.PyTimeZone_FromOffsetAndName", "c.PyTraceMalloc_Track()": "c-api/memory.html#c.PyTraceMalloc_Track", "c.PyTraceMalloc_Untrack()": "c-api/memory.html#c.PyTraceMalloc_Untrack", "c.PyTuple_Check()": "c-api/tuple.html#c.PyTuple_Check", "c.PyTuple_CheckExact()": "c-api/tuple.html#c.PyTuple_CheckExact", "c.PyTuple_GET_ITEM()": "c-api/tuple.html#c.PyTuple_GET_ITEM", "c.PyTuple_GET_SIZE()": "c-api/tuple.html#c.PyTuple_GET_SIZE", "c.PyTuple_GetItem()": "c-api/tuple.html#c.PyTuple_GetItem", "c.PyTuple_GetSlice()": "c-api/tuple.html#c.PyTuple_GetSlice", "c.PyTuple_New()": "c-api/tuple.html#c.PyTuple_New", "c.PyTuple_Pack()": "c-api/tuple.html#c.PyTuple_Pack", "c.PyTuple_SET_ITEM()": "c-api/tuple.html#c.PyTuple_SET_ITEM", "c.PyTuple_SetItem()": "c-api/tuple.html#c.PyTuple_SetItem", "c.PyTuple_Size()": "c-api/tuple.html#c.PyTuple_Size", "c.PyType_AddWatcher()": "c-api/type.html#c.PyType_AddWatcher", "c.PyType_Check()": "c-api/type.html#c.PyType_Check", "c.PyType_CheckExact()": "c-api/type.html#c.PyType_CheckExact", "c.PyType_ClearCache()": "c-api/type.html#c.PyType_ClearCache", "c.PyType_ClearWatcher()": "c-api/type.html#c.PyType_ClearWatcher", "c.PyType_FromMetaclass()": "c-api/type.html#c.PyType_FromMetaclass", "c.PyType_FromModuleAndSpec()": "c-api/type.html#c.PyType_FromModuleAndSpec", "c.PyType_FromSpec()": "c-api/type.html#c.PyType_FromSpec", "c.PyType_FromSpecWithBases()": "c-api/type.html#c.PyType_FromSpecWithBases", "c.PyType_GenericAlloc()": "c-api/type.html#c.PyType_GenericAlloc", "c.PyType_GenericNew()": "c-api/type.html#c.PyType_GenericNew", "c.PyType_GetDict()": "c-api/type.html#c.PyType_GetDict", "c.PyType_GetFlags()": "c-api/type.html#c.PyType_GetFlags", "c.PyType_GetFullyQualifiedName()": "c-api/type.html#c.PyType_GetFullyQualifiedName", "c.PyType_GetModule()": "c-api/type.html#c.PyType_GetModule", "c.PyType_GetModuleByDef()": "c-api/type.html#c.PyType_GetModuleByDef", "c.PyType_GetModuleName()": "c-api/type.html#c.PyType_GetModuleName", "c.PyType_GetModuleState()": "c-api/type.html#c.PyType_GetModuleState", "c.PyType_GetName()": "c-api/type.html#c.PyType_GetName", "c.PyType_GetQualName()": "c-api/type.html#c.PyType_GetQualName", "c.PyType_GetSlot()": "c-api/type.html#c.PyType_GetSlot", "c.PyType_GetTypeDataSize()": "c-api/object.html#c.PyType_GetTypeDataSize", "c.PyType_HasFeature()": "c-api/type.html#c.PyType_HasFeature", "c.PyType_IS_GC()": "c-api/type.html#c.PyType_IS_GC", "c.PyType_IsSubtype()": "c-api/type.html#c.PyType_IsSubtype", "c.PyType_Modified()": "c-api/type.html#c.PyType_Modified", "c.PyType_Ready()": "c-api/type.html#c.PyType_Ready", "c.PyType_Watch()": "c-api/type.html#c.PyType_Watch", "c.PyTZInfo_Check()": "c-api/datetime.html#c.PyTZInfo_Check", "c.PyTZInfo_CheckExact()": "c-api/datetime.html#c.PyTZInfo_CheckExact", "c.PyUnicode_1BYTE_DATA()": "c-api/unicode.html#c.PyUnicode_1BYTE_DATA", "c.PyUnicode_2BYTE_DATA()": "c-api/unicode.html#c.PyUnicode_2BYTE_DATA", "c.PyUnicode_4BYTE_DATA()": "c-api/unicode.html#c.PyUnicode_4BYTE_DATA", "c.PyUnicode_AsASCIIString()": "c-api/unicode.html#c.PyUnicode_AsASCIIString", "c.PyUnicode_AsCharmapString()": "c-api/unicode.html#c.PyUnicode_AsCharmapString", "c.PyUnicode_AsEncodedString()": "c-api/unicode.html#c.PyUnicode_AsEncodedString", "c.PyUnicode_AsLatin1String()": "c-api/unicode.html#c.PyUnicode_AsLatin1String", "c.PyUnicode_AsMBCSString()": "c-api/unicode.html#c.PyUnicode_AsMBCSString", "c.PyUnicode_AsRawUnicodeEscapeString()": "c-api/unicode.html#c.PyUnicode_AsRawUnicodeEscapeString", "c.PyUnicode_AsUCS4()": "c-api/unicode.html#c.PyUnicode_AsUCS4", "c.PyUnicode_AsUCS4Copy()": "c-api/unicode.html#c.PyUnicode_AsUCS4Copy", "c.PyUnicode_AsUnicodeEscapeString()": "c-api/unicode.html#c.PyUnicode_AsUnicodeEscapeString", "c.PyUnicode_AsUTF16String()": "c-api/unicode.html#c.PyUnicode_AsUTF16String", "c.PyUnicode_AsUTF32String()": "c-api/unicode.html#c.PyUnicode_AsUTF32String", "c.PyUnicode_AsUTF8()": "c-api/unicode.html#c.PyUnicode_AsUTF8", "c.PyUnicode_AsUTF8AndSize()": "c-api/unicode.html#c.PyUnicode_AsUTF8AndSize", "c.PyUnicode_AsUTF8String()": "c-api/unicode.html#c.PyUnicode_AsUTF8String", "c.PyUnicode_AsWideChar()": "c-api/unicode.html#c.PyUnicode_AsWideChar", "c.PyUnicode_AsWideCharString()": "c-api/unicode.html#c.PyUnicode_AsWideCharString", "c.PyUnicode_Check()": "c-api/unicode.html#c.PyUnicode_Check", "c.PyUnicode_CheckExact()": "c-api/unicode.html#c.PyUnicode_CheckExact", "c.PyUnicode_Compare()": "c-api/unicode.html#c.PyUnicode_Compare", "c.PyUnicode_CompareWithASCIIString()": "c-api/unicode.html#c.PyUnicode_CompareWithASCIIString", "c.PyUnicode_Concat()": "c-api/unicode.html#c.PyUnicode_Concat", "c.PyUnicode_Contains()": "c-api/unicode.html#c.PyUnicode_Contains", "c.PyUnicode_CopyCharacters()": "c-api/unicode.html#c.PyUnicode_CopyCharacters", "c.PyUnicode_Count()": "c-api/unicode.html#c.PyUnicode_Count", "c.PyUnicode_DATA()": "c-api/unicode.html#c.PyUnicode_DATA", "c.PyUnicode_Decode()": "c-api/unicode.html#c.PyUnicode_Decode", "c.PyUnicode_DecodeASCII()": "c-api/unicode.html#c.PyUnicode_DecodeASCII", "c.PyUnicode_DecodeCharmap()": "c-api/unicode.html#c.PyUnicode_DecodeCharmap", "c.PyUnicode_DecodeFSDefault()": "c-api/unicode.html#c.PyUnicode_DecodeFSDefault", "c.PyUnicode_DecodeFSDefaultAndSize()": "c-api/unicode.html#c.PyUnicode_DecodeFSDefaultAndSize", "c.PyUnicode_DecodeLatin1()": "c-api/unicode.html#c.PyUnicode_DecodeLatin1", "c.PyUnicode_DecodeLocale()": "c-api/unicode.html#c.PyUnicode_DecodeLocale", "c.PyUnicode_DecodeLocaleAndSize()": "c-api/unicode.html#c.PyUnicode_DecodeLocaleAndSize", "c.PyUnicode_DecodeMBCS()": "c-api/unicode.html#c.PyUnicode_DecodeMBCS", "c.PyUnicode_DecodeMBCSStateful()": "c-api/unicode.html#c.PyUnicode_DecodeMBCSStateful", "c.PyUnicode_DecodeRawUnicodeEscape()": "c-api/unicode.html#c.PyUnicode_DecodeRawUnicodeEscape", "c.PyUnicode_DecodeUnicodeEscape()": "c-api/unicode.html#c.PyUnicode_DecodeUnicodeEscape", "c.PyUnicode_DecodeUTF16()": "c-api/unicode.html#c.PyUnicode_DecodeUTF16", "c.PyUnicode_DecodeUTF16Stateful()": "c-api/unicode.html#c.PyUnicode_DecodeUTF16Stateful", "c.PyUnicode_DecodeUTF32()": "c-api/unicode.html#c.PyUnicode_DecodeUTF32", "c.PyUnicode_DecodeUTF32Stateful()": "c-api/unicode.html#c.PyUnicode_DecodeUTF32Stateful", "c.PyUnicode_DecodeUTF7()": "c-api/unicode.html#c.PyUnicode_DecodeUTF7", "c.PyUnicode_DecodeUTF7Stateful()": "c-api/unicode.html#c.PyUnicode_DecodeUTF7Stateful", "c.PyUnicode_DecodeUTF8()": "c-api/unicode.html#c.PyUnicode_DecodeUTF8", "c.PyUnicode_DecodeUTF8Stateful()": "c-api/unicode.html#c.PyUnicode_DecodeUTF8Stateful", "c.PyUnicode_EncodeCodePage()": "c-api/unicode.html#c.PyUnicode_EncodeCodePage", "c.PyUnicode_EncodeFSDefault()": "c-api/unicode.html#c.PyUnicode_EncodeFSDefault", "c.PyUnicode_EncodeLocale()": "c-api/unicode.html#c.PyUnicode_EncodeLocale", "c.PyUnicode_EqualToUTF8()": "c-api/unicode.html#c.PyUnicode_EqualToUTF8", "c.PyUnicode_EqualToUTF8AndSize()": "c-api/unicode.html#c.PyUnicode_EqualToUTF8AndSize", "c.PyUnicode_Fill()": "c-api/unicode.html#c.PyUnicode_Fill", "c.PyUnicode_Find()": "c-api/unicode.html#c.PyUnicode_Find", "c.PyUnicode_FindChar()": "c-api/unicode.html#c.PyUnicode_FindChar", "c.PyUnicode_Format()": "c-api/unicode.html#c.PyUnicode_Format", "c.PyUnicode_FromEncodedObject()": "c-api/unicode.html#c.PyUnicode_FromEncodedObject", "c.PyUnicode_FromFormat()": "c-api/unicode.html#c.PyUnicode_FromFormat", "c.PyUnicode_FromFormatV()": "c-api/unicode.html#c.PyUnicode_FromFormatV", "c.PyUnicode_FromKindAndData()": "c-api/unicode.html#c.PyUnicode_FromKindAndData", "c.PyUnicode_FromObject()": "c-api/unicode.html#c.PyUnicode_FromObject", "c.PyUnicode_FromString()": "c-api/unicode.html#c.PyUnicode_FromString", "c.PyUnicode_FromStringAndSize()": "c-api/unicode.html#c.PyUnicode_FromStringAndSize", "c.PyUnicode_FromWideChar()": "c-api/unicode.html#c.PyUnicode_FromWideChar", "c.PyUnicode_FSConverter()": "c-api/unicode.html#c.PyUnicode_FSConverter", "c.PyUnicode_FSDecoder()": "c-api/unicode.html#c.PyUnicode_FSDecoder", "c.PyUnicode_GET_LENGTH()": "c-api/unicode.html#c.PyUnicode_GET_LENGTH", "c.PyUnicode_GetLength()": "c-api/unicode.html#c.PyUnicode_GetLength", "c.PyUnicode_InternFromString()": "c-api/unicode.html#c.PyUnicode_InternFromString", "c.PyUnicode_InternInPlace()": "c-api/unicode.html#c.PyUnicode_InternInPlace", "c.PyUnicode_IsIdentifier()": "c-api/unicode.html#c.PyUnicode_IsIdentifier", "c.PyUnicode_Join()": "c-api/unicode.html#c.PyUnicode_Join", "c.PyUnicode_KIND()": "c-api/unicode.html#c.PyUnicode_KIND", "c.PyUnicode_MAX_CHAR_VALUE()": "c-api/unicode.html#c.PyUnicode_MAX_CHAR_VALUE", "c.PyUnicode_New()": "c-api/unicode.html#c.PyUnicode_New", "c.PyUnicode_READ()": "c-api/unicode.html#c.PyUnicode_READ", "c.PyUnicode_READ_CHAR()": "c-api/unicode.html#c.PyUnicode_READ_CHAR", "c.PyUnicode_ReadChar()": "c-api/unicode.html#c.PyUnicode_ReadChar", "c.PyUnicode_READY()": "c-api/unicode.html#c.PyUnicode_READY", "c.PyUnicode_Replace()": "c-api/unicode.html#c.PyUnicode_Replace", "c.PyUnicode_RichCompare()": "c-api/unicode.html#c.PyUnicode_RichCompare", "c.PyUnicode_Split()": "c-api/unicode.html#c.PyUnicode_Split", "c.PyUnicode_Splitlines()": "c-api/unicode.html#c.PyUnicode_Splitlines", "c.PyUnicode_Substring()": "c-api/unicode.html#c.PyUnicode_Substring", "c.PyUnicode_Tailmatch()": "c-api/unicode.html#c.PyUnicode_Tailmatch", "c.PyUnicode_Translate()": "c-api/unicode.html#c.PyUnicode_Translate", "c.PyUnicode_WRITE()": "c-api/unicode.html#c.PyUnicode_WRITE", "c.PyUnicode_WriteChar()": "c-api/unicode.html#c.PyUnicode_WriteChar", "c.PyUnicodeDecodeError_Create()": "c-api/exceptions.html#c.PyUnicodeDecodeError_Create", "c.PyUnicodeDecodeError_GetEncoding()": "c-api/exceptions.html#c.PyUnicodeDecodeError_GetEncoding", "c.PyUnicodeDecodeError_GetEnd()": "c-api/exceptions.html#c.PyUnicodeDecodeError_GetEnd", "c.PyUnicodeDecodeError_GetObject()": "c-api/exceptions.html#c.PyUnicodeDecodeError_GetObject", "c.PyUnicodeDecodeError_GetReason()": "c-api/exceptions.html#c.PyUnicodeDecodeError_GetReason", "c.PyUnicodeDecodeError_GetStart()": "c-api/exceptions.html#c.PyUnicodeDecodeError_GetStart", "c.PyUnicodeDecodeError_SetEnd()": "c-api/exceptions.html#c.PyUnicodeDecodeError_SetEnd", "c.PyUnicodeDecodeError_SetReason()": "c-api/exceptions.html#c.PyUnicodeDecodeError_SetReason", "c.PyUnicodeDecodeError_SetStart()": "c-api/exceptions.html#c.PyUnicodeDecodeError_SetStart", "c.PyUnicodeEncodeError_GetEncoding()": "c-api/exceptions.html#c.PyUnicodeEncodeError_GetEncoding", "c.PyUnicodeEncodeError_GetEnd()": "c-api/exceptions.html#c.PyUnicodeEncodeError_GetEnd", "c.PyUnicodeEncodeError_GetObject()": "c-api/exceptions.html#c.PyUnicodeEncodeError_GetObject", "c.PyUnicodeEncodeError_GetReason()": "c-api/exceptions.html#c.PyUnicodeEncodeError_GetReason", "c.PyUnicodeEncodeError_GetStart()": "c-api/exceptions.html#c.PyUnicodeEncodeError_GetStart", "c.PyUnicodeEncodeError_SetEnd()": "c-api/exceptions.html#c.PyUnicodeEncodeError_SetEnd", "c.PyUnicodeEncodeError_SetReason()": "c-api/exceptions.html#c.PyUnicodeEncodeError_SetReason", "c.PyUnicodeEncodeError_SetStart()": "c-api/exceptions.html#c.PyUnicodeEncodeError_SetStart", "c.PyUnicodeTranslateError_GetEnd()": "c-api/exceptions.html#c.PyUnicodeTranslateError_GetEnd", "c.PyUnicodeTranslateError_GetObject()": "c-api/exceptions.html#c.PyUnicodeTranslateError_GetObject", "c.PyUnicodeTranslateError_GetReason()": "c-api/exceptions.html#c.PyUnicodeTranslateError_GetReason", "c.PyUnicodeTranslateError_GetStart()": "c-api/exceptions.html#c.PyUnicodeTranslateError_GetStart", "c.PyUnicodeTranslateError_SetEnd()": "c-api/exceptions.html#c.PyUnicodeTranslateError_SetEnd", "c.PyUnicodeTranslateError_SetReason()": "c-api/exceptions.html#c.PyUnicodeTranslateError_SetReason", "c.PyUnicodeTranslateError_SetStart()": "c-api/exceptions.html#c.PyUnicodeTranslateError_SetStart", "c.PyUnstable_Code_GetExtra()": "c-api/code.html#c.PyUnstable_Code_GetExtra", "c.PyUnstable_Code_GetFirstFree()": "c-api/code.html#c.PyUnstable_Code_GetFirstFree", "c.PyUnstable_Code_New()": "c-api/code.html#c.PyUnstable_Code_New", "c.PyUnstable_Code_NewWithPosOnlyArgs()": "c-api/code.html#c.PyUnstable_Code_NewWithPosOnlyArgs", "c.PyUnstable_Code_SetExtra()": "c-api/code.html#c.PyUnstable_Code_SetExtra", "c.PyUnstable_Eval_RequestCodeExtraIndex()": "c-api/code.html#c.PyUnstable_Eval_RequestCodeExtraIndex", "c.PyUnstable_Exc_PrepReraiseStar()": "c-api/exceptions.html#c.PyUnstable_Exc_PrepReraiseStar", "c.PyUnstable_GC_VisitObjects()": "c-api/gcsupport.html#c.PyUnstable_GC_VisitObjects", "c.PyUnstable_InterpreterFrame_GetCode()": "c-api/frame.html#c.PyUnstable_InterpreterFrame_GetCode", "c.PyUnstable_InterpreterFrame_GetLasti()": "c-api/frame.html#c.PyUnstable_InterpreterFrame_GetLasti", "c.PyUnstable_InterpreterFrame_GetLine()": "c-api/frame.html#c.PyUnstable_InterpreterFrame_GetLine", "c.PyUnstable_Long_CompactValue()": "c-api/long.html#c.PyUnstable_Long_CompactValue", "c.PyUnstable_Long_IsCompact()": "c-api/long.html#c.PyUnstable_Long_IsCompact", "c.PyUnstable_Module_SetGIL()": "c-api/module.html#c.PyUnstable_Module_SetGIL", "c.PyUnstable_Object_ClearWeakRefsNoCallbacks()": "c-api/weakref.html#c.PyUnstable_Object_ClearWeakRefsNoCallbacks", "c.PyUnstable_Object_GC_NewWithExtraData()": "c-api/gcsupport.html#c.PyUnstable_Object_GC_NewWithExtraData", "c.PyUnstable_PerfMapState_Fini()": "c-api/perfmaps.html#c.PyUnstable_PerfMapState_Fini", "c.PyUnstable_PerfMapState_Init()": "c-api/perfmaps.html#c.PyUnstable_PerfMapState_Init", "c.PyUnstable_Type_AssignVersionTag()": "c-api/type.html#c.PyUnstable_Type_AssignVersionTag", "c.PyUnstable_WritePerfMapEntry()": "c-api/perfmaps.html#c.PyUnstable_WritePerfMapEntry", "c.PyVectorcall_Call()": "c-api/call.html#c.PyVectorcall_Call", "c.PyVectorcall_Function()": "c-api/call.html#c.PyVectorcall_Function", "c.PyVectorcall_NARGS()": "c-api/call.html#c.PyVectorcall_NARGS", "c.PyWeakref_Check()": "c-api/weakref.html#c.PyWeakref_Check", "c.PyWeakref_CheckProxy()": "c-api/weakref.html#c.PyWeakref_CheckProxy", "c.PyWeakref_CheckRef()": "c-api/weakref.html#c.PyWeakref_CheckRef", "c.PyWeakref_GET_OBJECT()": "c-api/weakref.html#c.PyWeakref_GET_OBJECT", "c.PyWeakref_GetObject()": "c-api/weakref.html#c.PyWeakref_GetObject", "c.PyWeakref_GetRef()": "c-api/weakref.html#c.PyWeakref_GetRef", "c.PyWeakref_NewProxy()": "c-api/weakref.html#c.PyWeakref_NewProxy", "c.PyWeakref_NewRef()": "c-api/weakref.html#c.PyWeakref_NewRef", "c.PyWideStringList_Append()": "c-api/init_config.html#c.PyWideStringList_Append", "c.PyWideStringList_Insert()": "c-api/init_config.html#c.PyWideStringList_Insert", "c.PyWrapper_New()": "c-api/descriptor.html#c.PyWrapper_New", "cached__": "reference/import.html#cached__", "CacheFTPHandler Objects (urllib.request)": "library/urllib.request.html#cacheftphandler-objects", "calendar": "library/calendar.html", "calendar.APRIL": "library/calendar.html#calendar.APRIL", "calendar.AUGUST": "library/calendar.html#calendar.AUGUST", "calendar.Calendar": "library/calendar.html#calendar.Calendar", "calendar.calendar()": "library/calendar.html#calendar.calendar", "calendar.Calendar.itermonthdates()": "library/calendar.html#calendar.Calendar.itermonthdates", "calendar.Calendar.itermonthdays()": "library/calendar.html#calendar.Calendar.itermonthdays", "calendar.Calendar.itermonthdays2()": "library/calendar.html#calendar.Calendar.itermonthdays2", "calendar.Calendar.itermonthdays3()": "library/calendar.html#calendar.Calendar.itermonthdays3", "calendar.Calendar.itermonthdays4()": "library/calendar.html#calendar.Calendar.itermonthdays4", "calendar.Calendar.iterweekdays()": "library/calendar.html#calendar.Calendar.iterweekdays", "calendar.Calendar.monthdatescalendar()": "library/calendar.html#calendar.Calendar.monthdatescalendar", "calendar.Calendar.monthdays2calendar()": "library/calendar.html#calendar.Calendar.monthdays2calendar", "calendar.Calendar.monthdayscalendar()": "library/calendar.html#calendar.Calendar.monthdayscalendar", "calendar.Calendar.yeardatescalendar()": "library/calendar.html#calendar.Calendar.yeardatescalendar", "calendar.Calendar.yeardays2calendar()": "library/calendar.html#calendar.Calendar.yeardays2calendar", "calendar.Calendar.yeardayscalendar()": "library/calendar.html#calendar.Calendar.yeardayscalendar", "calendar.Day": "library/calendar.html#calendar.Day", "calendar.day_abbr": "library/calendar.html#calendar.day_abbr", "calendar.day_name": "library/calendar.html#calendar.day_name", "calendar.DECEMBER": "library/calendar.html#calendar.DECEMBER", "calendar.FEBRUARY": "library/calendar.html#calendar.FEBRUARY", "calendar.firstweekday()": "library/calendar.html#calendar.firstweekday", "calendar.FRIDAY": "library/calendar.html#calendar.FRIDAY", "calendar.HTMLCalendar": "library/calendar.html#calendar.HTMLCalendar", "calendar.HTMLCalendar.cssclass_month": "library/calendar.html#calendar.HTMLCalendar.cssclass_month", "calendar.HTMLCalendar.cssclass_month_head": "library/calendar.html#calendar.HTMLCalendar.cssclass_month_head", "calendar.HTMLCalendar.cssclass_noday": "library/calendar.html#calendar.HTMLCalendar.cssclass_noday", "calendar.HTMLCalendar.cssclass_year": "library/calendar.html#calendar.HTMLCalendar.cssclass_year", "calendar.HTMLCalendar.cssclass_year_head": "library/calendar.html#calendar.HTMLCalendar.cssclass_year_head", "calendar.HTMLCalendar.cssclasses": "library/calendar.html#calendar.HTMLCalendar.cssclasses", "calendar.HTMLCalendar.cssclasses_weekday_head": "library/calendar.html#calendar.HTMLCalendar.cssclasses_weekday_head", "calendar.HTMLCalendar.formatmonth()": "library/calendar.html#calendar.HTMLCalendar.formatmonth", "calendar.HTMLCalendar.formatmonthname()": "library/calendar.html#calendar.HTMLCalendar.formatmonthname", "calendar.HTMLCalendar.formatyear()": "library/calendar.html#calendar.HTMLCalendar.formatyear", "calendar.HTMLCalendar.formatyearpage()": "library/calendar.html#calendar.HTMLCalendar.formatyearpage", "calendar.IllegalMonthError": "library/calendar.html#calendar.IllegalMonthError", "calendar.IllegalMonthError.month": "library/calendar.html#calendar.IllegalMonthError.month", "calendar.IllegalWeekdayError": "library/calendar.html#calendar.IllegalWeekdayError", "calendar.IllegalWeekdayError.weekday": "library/calendar.html#calendar.IllegalWeekdayError.weekday", "calendar.isleap()": "library/calendar.html#calendar.isleap", "calendar.JANUARY": "library/calendar.html#calendar.JANUARY", "calendar.JULY": "library/calendar.html#calendar.JULY", "calendar.JUNE": "library/calendar.html#calendar.JUNE", "calendar.leapdays()": "library/calendar.html#calendar.leapdays", "calendar.LocaleHTMLCalendar": "library/calendar.html#calendar.LocaleHTMLCalendar", "calendar.LocaleTextCalendar": "library/calendar.html#calendar.LocaleTextCalendar", "calendar.MARCH": "library/calendar.html#calendar.MARCH", "calendar.MAY": "library/calendar.html#calendar.MAY", "calendar.MONDAY": "library/calendar.html#calendar.MONDAY", "calendar.Month": "library/calendar.html#calendar.Month", "calendar.month()": "library/calendar.html#calendar.month", "calendar.month_abbr": "library/calendar.html#calendar.month_abbr", "calendar.month_name": "library/calendar.html#calendar.month_name", "calendar.monthcalendar()": "library/calendar.html#calendar.monthcalendar", "calendar.monthrange()": "library/calendar.html#calendar.monthrange", "calendar.NOVEMBER": "library/calendar.html#calendar.NOVEMBER", "calendar.OCTOBER": "library/calendar.html#calendar.OCTOBER", "calendar.prcal()": "library/calendar.html#calendar.prcal", "calendar.prmonth()": "library/calendar.html#calendar.prmonth", "calendar.SATURDAY": "library/calendar.html#calendar.SATURDAY", "calendar.SEPTEMBER": "library/calendar.html#calendar.SEPTEMBER", "calendar.setfirstweekday()": "library/calendar.html#calendar.setfirstweekday", "calendar.SUNDAY": "library/calendar.html#calendar.SUNDAY", "calendar.TextCalendar": "library/calendar.html#calendar.TextCalendar", "calendar.TextCalendar.formatmonth()": "library/calendar.html#calendar.TextCalendar.formatmonth", "calendar.TextCalendar.formatyear()": "library/calendar.html#calendar.TextCalendar.formatyear", "calendar.TextCalendar.prmonth()": "library/calendar.html#calendar.TextCalendar.prmonth", "calendar.TextCalendar.pryear()": "library/calendar.html#calendar.TextCalendar.pryear", "calendar.THURSDAY": "library/calendar.html#calendar.THURSDAY", "calendar.timegm()": "library/calendar.html#calendar.timegm", "calendar.TUESDAY": "library/calendar.html#calendar.TUESDAY", "calendar.WEDNESDAY": "library/calendar.html#calendar.WEDNESDAY", "calendar.weekday()": "library/calendar.html#calendar.weekday", "calendar.weekheader()": "library/calendar.html#calendar.weekheader", "Calibration (The Python Profilers)": "library/profile.html#calibration", "Call Protocol": "c-api/call.html", "callable": "glossary.html#term-callable", "callable()": "library/functions.html#callable", "callback": "glossary.html#term-callback", "Callback Handles (Event Loop)": "library/asyncio-eventloop.html#callback-handles", "Capsules": "c-api/capsule.html", "case (keyword)": "reference/compound_stmts.html#index-18", "case (match)": "reference/compound_stmts.html#index-18", "Cell Objects": "c-api/cell.html", "Certificates (ssl)": "library/ssl.html#certificates", "CGIXMLRPCRequestHandler (xmlrpc.server)": "library/xmlrpc.server.html#cgixmlrpcrequesthandler", "ChainMap objects (collections)": "library/collections.html#chainmap-objects", "Changes since Python 2.6 (turtle)": "library/turtle.html#changes-since-python-2-6", "Changes since Python 3.0 (turtle)": "library/turtle.html#changes-since-python-3-0", "ChildProcessError": "library/exceptions.html#ChildProcessError", "chr()": "library/functions.html#chr", "class": "glossary.html#term-class", "Class and Module Fixtures (unittest)": "library/unittest.html#class-and-module-fixtures", "Class hierarchy (io)": "library/io.html#class-hierarchy", "Class Objects (pyclbr)": "library/pyclbr.html#class-objects", "class variable": "glossary.html#term-class-variable", "Class variables (dataclasses)": "library/dataclasses.html#class-variables", "Class-based API (gettext)": "library/gettext.html#class-based-api", "class.__bases__": "library/stdtypes.html#class.__bases__", "class.__instancecheck__()": "reference/datamodel.html#class.__instancecheck__", "class.__mro__": "library/stdtypes.html#class.__mro__", "class.__static_attributes__": "library/stdtypes.html#class.__static_attributes__", "class.__subclasscheck__()": "reference/datamodel.html#class.__subclasscheck__", "class.__subclasses__()": "library/stdtypes.html#class.__subclasses__", "class.mro()": "library/stdtypes.html#class.mro", "Classes (selectors)": "library/selectors.html#classes", "Classes (struct)": "library/struct.html#classes", "Classes and functions (inspect)": "library/inspect.html#classes-and-functions", "Classes and functions (unittest)": "library/unittest.html#classes-and-functions", "Classification functions (cmath)": "library/cmath.html#classification-functions", "classmethod()": "library/functions.html#classmethod", "Clock ID Constants (time)": "library/time.html#clock-id-constants", "cmath": "library/cmath.html", "cmath.acos()": "library/cmath.html#cmath.acos", "cmath.acosh()": "library/cmath.html#cmath.acosh", "cmath.asin()": "library/cmath.html#cmath.asin", "cmath.asinh()": "library/cmath.html#cmath.asinh", "cmath.atan()": "library/cmath.html#cmath.atan", "cmath.atanh()": "library/cmath.html#cmath.atanh", "cmath.cos()": "library/cmath.html#cmath.cos", "cmath.cosh()": "library/cmath.html#cmath.cosh", "cmath.e": "library/cmath.html#cmath.e", "cmath.exp()": "library/cmath.html#cmath.exp", "cmath.inf": "library/cmath.html#cmath.inf", "cmath.infj": "library/cmath.html#cmath.infj", "cmath.isclose()": "library/cmath.html#cmath.isclose", "cmath.isfinite()": "library/cmath.html#cmath.isfinite", "cmath.isinf()": "library/cmath.html#cmath.isinf", "cmath.isnan()": "library/cmath.html#cmath.isnan", "cmath.log()": "library/cmath.html#cmath.log", "cmath.log10()": "library/cmath.html#cmath.log10", "cmath.nan": "library/cmath.html#cmath.nan", "cmath.nanj": "library/cmath.html#cmath.nanj", "cmath.phase()": "library/cmath.html#cmath.phase", "cmath.pi": "library/cmath.html#cmath.pi", "cmath.polar()": "library/cmath.html#cmath.polar", "cmath.rect()": "library/cmath.html#cmath.rect", "cmath.sin()": "library/cmath.html#cmath.sin", "cmath.sinh()": "library/cmath.html#cmath.sinh", "cmath.sqrt()": "library/cmath.html#cmath.sqrt", "cmath.tan()": "library/cmath.html#cmath.tan", "cmath.tanh()": "library/cmath.html#cmath.tanh", "cmath.tau": "library/cmath.html#cmath.tau", "cmd": "library/cmd.html", "Cmd Example (cmd)": "library/cmd.html#cmd-example", "Cmd Objects (cmd)": "library/cmd.html#cmd-objects", "cmd.Cmd": "library/cmd.html#cmd.Cmd", "cmd.Cmd.cmdloop()": "library/cmd.html#cmd.Cmd.cmdloop", "cmd.Cmd.cmdqueue": "library/cmd.html#cmd.Cmd.cmdqueue", "cmd.Cmd.columnize()": "library/cmd.html#cmd.Cmd.columnize", "cmd.Cmd.completedefault()": "library/cmd.html#cmd.Cmd.completedefault", "cmd.Cmd.default()": "library/cmd.html#cmd.Cmd.default", "cmd.Cmd.do_help()": "library/cmd.html#cmd.Cmd.do_help", "cmd.Cmd.doc_header": "library/cmd.html#cmd.Cmd.doc_header", "cmd.Cmd.emptyline()": "library/cmd.html#cmd.Cmd.emptyline", "cmd.Cmd.identchars": "library/cmd.html#cmd.Cmd.identchars", "cmd.Cmd.intro": "library/cmd.html#cmd.Cmd.intro", "cmd.Cmd.lastcmd": "library/cmd.html#cmd.Cmd.lastcmd", "cmd.Cmd.misc_header": "library/cmd.html#cmd.Cmd.misc_header", "cmd.Cmd.onecmd()": "library/cmd.html#cmd.Cmd.onecmd", "cmd.Cmd.postcmd()": "library/cmd.html#cmd.Cmd.postcmd", "cmd.Cmd.postloop()": "library/cmd.html#cmd.Cmd.postloop", "cmd.Cmd.precmd()": "library/cmd.html#cmd.Cmd.precmd", "cmd.Cmd.preloop()": "library/cmd.html#cmd.Cmd.preloop", "cmd.Cmd.prompt": "library/cmd.html#cmd.Cmd.prompt", "cmd.Cmd.ruler": "library/cmd.html#cmd.Cmd.ruler", "cmd.Cmd.undoc_header": "library/cmd.html#cmd.Cmd.undoc_header", "cmd.Cmd.use_rawinput": "library/cmd.html#cmd.Cmd.use_rawinput", "code": "library/code.html", "Code Objects": "c-api/code.html", "Code Objects Bit Flags (inspect)": "library/inspect.html#code-objects-bit-flags", "code.compile_command()": "library/code.html#code.compile_command", "code.interact()": "library/code.html#code.interact", "code.InteractiveConsole": "library/code.html#code.InteractiveConsole", "code.InteractiveConsole.interact()": "library/code.html#code.InteractiveConsole.interact", "code.InteractiveConsole.push()": "library/code.html#code.InteractiveConsole.push", "code.InteractiveConsole.raw_input()": "library/code.html#code.InteractiveConsole.raw_input", "code.InteractiveConsole.resetbuffer()": "library/code.html#code.InteractiveConsole.resetbuffer", "code.InteractiveInterpreter": "library/code.html#code.InteractiveInterpreter", "code.InteractiveInterpreter.runcode()": "library/code.html#code.InteractiveInterpreter.runcode", "code.InteractiveInterpreter.runsource()": "library/code.html#code.InteractiveInterpreter.runsource", "code.InteractiveInterpreter.showsyntaxerror()": "library/code.html#code.InteractiveInterpreter.showsyntaxerror", "code.InteractiveInterpreter.showtraceback()": "library/code.html#code.InteractiveInterpreter.showtraceback", "code.InteractiveInterpreter.write()": "library/code.html#code.InteractiveInterpreter.write", "Codec Base Classes (codecs)": "library/codecs.html#codec-base-classes", "Codec registry and support functions": "c-api/codec.html", "codecs": "library/codecs.html", "codecs.backslashreplace_errors()": "library/codecs.html#codecs.backslashreplace_errors", "codecs.BOM": "library/codecs.html#codecs.BOM", "codecs.BOM_BE": "library/codecs.html#codecs.BOM_BE", "codecs.BOM_LE": "library/codecs.html#codecs.BOM_LE", "codecs.BOM_UTF16": "library/codecs.html#codecs.BOM_UTF16", "codecs.BOM_UTF16_BE": "library/codecs.html#codecs.BOM_UTF16_BE", "codecs.BOM_UTF16_LE": "library/codecs.html#codecs.BOM_UTF16_LE", "codecs.BOM_UTF32": "library/codecs.html#codecs.BOM_UTF32", "codecs.BOM_UTF32_BE": "library/codecs.html#codecs.BOM_UTF32_BE", "codecs.BOM_UTF32_LE": "library/codecs.html#codecs.BOM_UTF32_LE", "codecs.BOM_UTF8": "library/codecs.html#codecs.BOM_UTF8", "codecs.Codec": "library/codecs.html#codecs.Codec", "codecs.Codec.decode()": "library/codecs.html#codecs.Codec.decode", "codecs.Codec.encode()": "library/codecs.html#codecs.Codec.encode", "codecs.CodecInfo": "library/codecs.html#codecs.CodecInfo", "codecs.CodecInfo.decode": "library/codecs.html#codecs.CodecInfo.decode", "codecs.CodecInfo.encode": "library/codecs.html#codecs.CodecInfo.encode", "codecs.CodecInfo.incrementaldecoder": "library/codecs.html#codecs.CodecInfo.incrementaldecoder", "codecs.CodecInfo.incrementalencoder": "library/codecs.html#codecs.CodecInfo.incrementalencoder", "codecs.CodecInfo.name": "library/codecs.html#codecs.CodecInfo.name", "codecs.CodecInfo.streamreader": "library/codecs.html#codecs.CodecInfo.streamreader", "codecs.CodecInfo.streamwriter": "library/codecs.html#codecs.CodecInfo.streamwriter", "codecs.decode()": "library/codecs.html#codecs.decode", "codecs.encode()": "library/codecs.html#codecs.encode", "codecs.EncodedFile()": "library/codecs.html#codecs.EncodedFile", "codecs.getdecoder()": "library/codecs.html#codecs.getdecoder", "codecs.getencoder()": "library/codecs.html#codecs.getencoder", "codecs.getincrementaldecoder()": "library/codecs.html#codecs.getincrementaldecoder", "codecs.getincrementalencoder()": "library/codecs.html#codecs.getincrementalencoder", "codecs.getreader()": "library/codecs.html#codecs.getreader", "codecs.getwriter()": "library/codecs.html#codecs.getwriter", "codecs.ignore_errors()": "library/codecs.html#codecs.ignore_errors", "codecs.IncrementalDecoder": "library/codecs.html#codecs.IncrementalDecoder", "codecs.IncrementalDecoder.decode()": "library/codecs.html#codecs.IncrementalDecoder.decode", "codecs.IncrementalDecoder.getstate()": "library/codecs.html#codecs.IncrementalDecoder.getstate", "codecs.IncrementalDecoder.reset()": "library/codecs.html#codecs.IncrementalDecoder.reset", "codecs.IncrementalDecoder.setstate()": "library/codecs.html#codecs.IncrementalDecoder.setstate", "codecs.IncrementalEncoder": "library/codecs.html#codecs.IncrementalEncoder", "codecs.IncrementalEncoder.encode()": "library/codecs.html#codecs.IncrementalEncoder.encode", "codecs.IncrementalEncoder.getstate()": "library/codecs.html#codecs.IncrementalEncoder.getstate", "codecs.IncrementalEncoder.reset()": "library/codecs.html#codecs.IncrementalEncoder.reset", "codecs.IncrementalEncoder.setstate()": "library/codecs.html#codecs.IncrementalEncoder.setstate", "codecs.iterdecode()": "library/codecs.html#codecs.iterdecode", "codecs.iterencode()": "library/codecs.html#codecs.iterencode", "codecs.lookup()": "library/codecs.html#codecs.lookup", "codecs.lookup_error()": "library/codecs.html#codecs.lookup_error", "codecs.namereplace_errors()": "library/codecs.html#codecs.namereplace_errors", "codecs.open()": "library/codecs.html#codecs.open", "codecs.register()": "library/codecs.html#codecs.register", "codecs.register_error()": "library/codecs.html#codecs.register_error", "codecs.replace_errors()": "library/codecs.html#codecs.replace_errors", "codecs.StreamReader": "library/codecs.html#codecs.StreamReader", "codecs.StreamReader.read()": "library/codecs.html#codecs.StreamReader.read", "codecs.StreamReader.readline()": "library/codecs.html#codecs.StreamReader.readline", "codecs.StreamReader.readlines()": "library/codecs.html#codecs.StreamReader.readlines", "codecs.StreamReader.reset()": "library/codecs.html#codecs.StreamReader.reset", "codecs.StreamReaderWriter": "library/codecs.html#codecs.StreamReaderWriter", "codecs.StreamRecoder": "library/codecs.html#codecs.StreamRecoder", "codecs.StreamWriter": "library/codecs.html#codecs.StreamWriter", "codecs.StreamWriter.reset()": "library/codecs.html#codecs.StreamWriter.reset", "codecs.StreamWriter.write()": "library/codecs.html#codecs.StreamWriter.write", "codecs.StreamWriter.writelines()": "library/codecs.html#codecs.StreamWriter.writelines", "codecs.strict_errors()": "library/codecs.html#codecs.strict_errors", "codecs.unregister()": "library/codecs.html#codecs.unregister", "codecs.xmlcharrefreplace_errors()": "library/codecs.html#codecs.xmlcharrefreplace_errors", "codeobject.co_argcount": "reference/datamodel.html#codeobject.co_argcount", "codeobject.co_cellvars": "reference/datamodel.html#codeobject.co_cellvars", "codeobject.co_code": "reference/datamodel.html#codeobject.co_code", "codeobject.co_consts": "reference/datamodel.html#codeobject.co_consts", "codeobject.co_filename": "reference/datamodel.html#codeobject.co_filename", "codeobject.co_firstlineno": "reference/datamodel.html#codeobject.co_firstlineno", "codeobject.co_flags": "reference/datamodel.html#codeobject.co_flags", "codeobject.co_freevars": "reference/datamodel.html#codeobject.co_freevars", "codeobject.co_kwonlyargcount": "reference/datamodel.html#codeobject.co_kwonlyargcount", "codeobject.co_lines()": "reference/datamodel.html#codeobject.co_lines", "codeobject.co_lnotab": "reference/datamodel.html#codeobject.co_lnotab", "codeobject.co_name": "reference/datamodel.html#codeobject.co_name", "codeobject.co_names": "reference/datamodel.html#codeobject.co_names", "codeobject.co_nlocals": "reference/datamodel.html#codeobject.co_nlocals", "codeobject.co_positions()": "reference/datamodel.html#codeobject.co_positions", "codeobject.co_posonlyargcount": "reference/datamodel.html#codeobject.co_posonlyargcount", "codeobject.co_qualname": "reference/datamodel.html#codeobject.co_qualname", "codeobject.co_stacksize": "reference/datamodel.html#codeobject.co_stacksize", "codeobject.co_varnames": "reference/datamodel.html#codeobject.co_varnames", "codeobject.replace()": "reference/datamodel.html#codeobject.replace", "codeop": "library/codeop.html", "codeop.CommandCompiler": "library/codeop.html#codeop.CommandCompiler", "codeop.Compile": "library/codeop.html#codeop.Compile", "codeop.compile_command()": "library/codeop.html#codeop.compile_command", "collections": "library/collections.html", "Collections Abstract Base Classes (collections.abc)": "library/collections.abc.html#collections-abstract-base-classes", "Collections Abstract Base Classes \u2013 Detailed Descriptions (collections.abc)": "library/collections.abc.html#collections-abstract-base-classes-detailed-descriptions", "collections.abc": "library/collections.abc.html", "collections.abc.AsyncGenerator": "library/collections.abc.html#collections.abc.AsyncGenerator", "collections.abc.AsyncIterable": "library/collections.abc.html#collections.abc.AsyncIterable", "collections.abc.AsyncIterator": "library/collections.abc.html#collections.abc.AsyncIterator", "collections.abc.Awaitable": "library/collections.abc.html#collections.abc.Awaitable", "collections.abc.Buffer": "library/collections.abc.html#collections.abc.Buffer", "collections.abc.ByteString": "library/collections.abc.html#collections.abc.ByteString", "collections.abc.Callable": "library/collections.abc.html#collections.abc.Callable", "collections.abc.Collection": "library/collections.abc.html#collections.abc.Collection", "collections.abc.Container": "library/collections.abc.html#collections.abc.Container", "collections.abc.Coroutine": "library/collections.abc.html#collections.abc.Coroutine", "collections.abc.Generator": "library/collections.abc.html#collections.abc.Generator", "collections.abc.Hashable": "library/collections.abc.html#collections.abc.Hashable", "collections.abc.ItemsView": "library/collections.abc.html#collections.abc.ItemsView", "collections.abc.Iterable": "library/collections.abc.html#collections.abc.Iterable", "collections.abc.Iterator": "library/collections.abc.html#collections.abc.Iterator", "collections.abc.KeysView": "library/collections.abc.html#collections.abc.KeysView", "collections.abc.Mapping": "library/collections.abc.html#collections.abc.Mapping", "collections.abc.MappingView": "library/collections.abc.html#collections.abc.MappingView", "collections.abc.MutableMapping": "library/collections.abc.html#collections.abc.MutableMapping", "collections.abc.MutableSequence": "library/collections.abc.html#collections.abc.MutableSequence", "collections.abc.MutableSet": "library/collections.abc.html#collections.abc.MutableSet", "collections.abc.Reversible": "library/collections.abc.html#collections.abc.Reversible", "collections.abc.Sequence": "library/collections.abc.html#collections.abc.Sequence", "collections.abc.Set": "library/collections.abc.html#collections.abc.Set", "collections.abc.Sized": "library/collections.abc.html#collections.abc.Sized", "collections.abc.ValuesView": "library/collections.abc.html#collections.abc.ValuesView", "collections.ChainMap": "library/collections.html#collections.ChainMap", "collections.ChainMap.maps": "library/collections.html#collections.ChainMap.maps", "collections.ChainMap.new_child()": "library/collections.html#collections.ChainMap.new_child", "collections.ChainMap.parents": "library/collections.html#collections.ChainMap.parents", "collections.Counter": "library/collections.html#collections.Counter", "collections.Counter.elements()": "library/collections.html#collections.Counter.elements", "collections.Counter.fromkeys()": "library/collections.html#collections.Counter.fromkeys", "collections.Counter.most_common()": "library/collections.html#collections.Counter.most_common", "collections.Counter.subtract()": "library/collections.html#collections.Counter.subtract", "collections.Counter.total()": "library/collections.html#collections.Counter.total", "collections.Counter.update()": "library/collections.html#collections.Counter.update", "collections.defaultdict": "library/collections.html#collections.defaultdict", "collections.defaultdict.__missing__()": "library/collections.html#collections.defaultdict.__missing__", "collections.defaultdict.default_factory": "library/collections.html#collections.defaultdict.default_factory", "collections.deque": "library/collections.html#collections.deque", "collections.deque.append()": "library/collections.html#collections.deque.append", "collections.deque.appendleft()": "library/collections.html#collections.deque.appendleft", "collections.deque.clear()": "library/collections.html#collections.deque.clear", "collections.deque.copy()": "library/collections.html#collections.deque.copy", "collections.deque.count()": "library/collections.html#collections.deque.count", "collections.deque.extend()": "library/collections.html#collections.deque.extend", "collections.deque.extendleft()": "library/collections.html#collections.deque.extendleft", "collections.deque.index()": "library/collections.html#collections.deque.index", "collections.deque.insert()": "library/collections.html#collections.deque.insert", "collections.deque.maxlen": "library/collections.html#collections.deque.maxlen", "collections.deque.pop()": "library/collections.html#collections.deque.pop", "collections.deque.popleft()": "library/collections.html#collections.deque.popleft", "collections.deque.remove()": "library/collections.html#collections.deque.remove", "collections.deque.reverse()": "library/collections.html#collections.deque.reverse", "collections.deque.rotate()": "library/collections.html#collections.deque.rotate", "collections.namedtuple()": "library/collections.html#collections.namedtuple", "collections.OrderedDict": "library/collections.html#collections.OrderedDict", "collections.OrderedDict.move_to_end()": "library/collections.html#collections.OrderedDict.move_to_end", "collections.OrderedDict.popitem()": "library/collections.html#collections.OrderedDict.popitem", "collections.somenamedtuple._asdict()": "library/collections.html#collections.somenamedtuple._asdict", "collections.somenamedtuple._field_defaults": "library/collections.html#collections.somenamedtuple._field_defaults", "collections.somenamedtuple._fields": "library/collections.html#collections.somenamedtuple._fields", "collections.somenamedtuple._make()": "library/collections.html#collections.somenamedtuple._make", "collections.somenamedtuple._replace()": "library/collections.html#collections.somenamedtuple._replace", "collections.UserDict": "library/collections.html#collections.UserDict", "collections.UserDict.data": "library/collections.html#collections.UserDict.data", "collections.UserList": "library/collections.html#collections.UserList", "collections.UserList.data": "library/collections.html#collections.UserList.data", "collections.UserString": "library/collections.html#collections.UserString", "collections.UserString.data": "library/collections.html#collections.UserString.data", "colorsys": "library/colorsys.html", "colorsys.hls_to_rgb()": "library/colorsys.html#colorsys.hls_to_rgb", "colorsys.hsv_to_rgb()": "library/colorsys.html#colorsys.hsv_to_rgb", "colorsys.rgb_to_hls()": "library/colorsys.html#colorsys.rgb_to_hls", "colorsys.rgb_to_hsv()": "library/colorsys.html#colorsys.rgb_to_hsv", "colorsys.rgb_to_yiq()": "library/colorsys.html#colorsys.rgb_to_yiq", "colorsys.yiq_to_rgb()": "library/colorsys.html#colorsys.yiq_to_rgb", "Combobox (tkinter.ttk)": "library/tkinter.ttk.html#combobox", "Command line interface (ensurepip)": "library/ensurepip.html#command-line-interface", "Command Line Interface (gzip)": "library/gzip.html#command-line-interface", "Command Line Interface (inspect)": "library/inspect.html#command-line-interface", "Command Line Interface (json)": "library/json.html#module-json.tool", "Command Line Interface (site)": "library/site.html#command-line-interface", "Command line usage (pickletools)": "library/pickletools.html#command-line-usage", "Command-line example (random)": "library/random.html#command-line-example", "Command-Line Example (uuid)": "library/uuid.html#command-line-example", "Command-line interface (dis)": "library/dis.html#command-line-interface", "Command-Line Interface (py_compile)": "library/py_compile.html#command-line-interface", "Command-Line Interface (tarfile)": "library/tarfile.html#command-line-interface", "Command-Line Interface (timeit)": "library/timeit.html#command-line-interface", "Command-Line Interface (unittest)": "library/unittest.html#command-line-interface", "Command-Line Interface (zipapp)": "library/zipapp.html#command-line-interface", "Command-Line Interface (zipfile)": "library/zipfile.html#command-line-interface", "Command-Line Usage (ast)": "library/ast.html#command-line-usage", "Command-Line Usage (calendar)": "library/calendar.html#command-line-usage", "Command-line usage (random)": "library/random.html#command-line-usage", "Command-Line Usage (symtable)": "library/symtable.html#command-line-usage", "Command-Line Usage (tokenize)": "library/tokenize.html#command-line-usage", "Command-Line Usage (trace)": "library/trace.html#command-line-usage", "Command-Line Usage (uuid)": "library/uuid.html#command-line-usage", "Command-line use (compileall)": "library/compileall.html#command-line-use", "Common Object Structures": "c-api/structures.html", "Comparing finalizers with __del__() methods (weakref)": "library/weakref.html#comparing-finalizers-with-del-methods", "Comparison to the glob module (pathlib)": "library/pathlib.html#comparison-to-the-glob-module", "Comparison to the os and os.path modules (pathlib)": "library/pathlib.html#comparison-to-the-os-and-os-path-modules", "Comparisons (Types)": "library/stdtypes.html#comparisons", "compile()": "library/functions.html#compile", "compileall": "library/compileall.html", "compileall.compile_dir()": "library/compileall.html#compileall.compile_dir", "compileall.compile_file()": "library/compileall.html#compileall.compile_file", "compileall.compile_path()": "library/compileall.html#compileall.compile_path", "Compiler Flags (ast)": "library/ast.html#compiler-flags", "Completion (readline)": "library/readline.html#completion", "complex": "library/functions.html#complex", "complex number": "glossary.html#term-complex-number", "Complex Number Objects": "c-api/complex.html", "compound (statement)": "reference/compound_stmts.html#index-0", "Compressing and decompressing data in memory (lzma)": "library/lzma.html#compressing-and-decompressing-data-in-memory", "Concrete exceptions (Exceptions)": "library/exceptions.html#concrete-exceptions", "Concrete Objects Layer": "c-api/concrete.html", "Concrete paths (pathlib)": "library/pathlib.html#concrete-paths", "Concurrency and Multithreading (Developing with asyncio)": "library/asyncio-dev.html#concurrency-and-multithreading", "Concurrent Execution": "library/concurrency.html", "concurrent.futures": "library/concurrent.futures.html", "concurrent.futures.ALL_COMPLETED": "library/concurrent.futures.html#concurrent.futures.ALL_COMPLETED", "concurrent.futures.as_completed()": "library/concurrent.futures.html#concurrent.futures.as_completed", "concurrent.futures.BrokenExecutor": "library/concurrent.futures.html#concurrent.futures.BrokenExecutor", "concurrent.futures.CancelledError": "library/concurrent.futures.html#concurrent.futures.CancelledError", "concurrent.futures.Executor": "library/concurrent.futures.html#concurrent.futures.Executor", "concurrent.futures.Executor.map()": "library/concurrent.futures.html#concurrent.futures.Executor.map", "concurrent.futures.Executor.shutdown()": "library/concurrent.futures.html#concurrent.futures.Executor.shutdown", "concurrent.futures.Executor.submit()": "library/concurrent.futures.html#concurrent.futures.Executor.submit", "concurrent.futures.FIRST_COMPLETED": "library/concurrent.futures.html#concurrent.futures.FIRST_COMPLETED", "concurrent.futures.FIRST_EXCEPTION": "library/concurrent.futures.html#concurrent.futures.FIRST_EXCEPTION", "concurrent.futures.Future": "library/concurrent.futures.html#concurrent.futures.Future", "concurrent.futures.Future.add_done_callback()": "library/concurrent.futures.html#concurrent.futures.Future.add_done_callback", "concurrent.futures.Future.cancel()": "library/concurrent.futures.html#concurrent.futures.Future.cancel", "concurrent.futures.Future.cancelled()": "library/concurrent.futures.html#concurrent.futures.Future.cancelled", "concurrent.futures.Future.done()": "library/concurrent.futures.html#concurrent.futures.Future.done", "concurrent.futures.Future.exception()": "library/concurrent.futures.html#concurrent.futures.Future.exception", "concurrent.futures.Future.result()": "library/concurrent.futures.html#concurrent.futures.Future.result", "concurrent.futures.Future.running()": "library/concurrent.futures.html#concurrent.futures.Future.running", "concurrent.futures.Future.set_exception()": "library/concurrent.futures.html#concurrent.futures.Future.set_exception", "concurrent.futures.Future.set_result()": "library/concurrent.futures.html#concurrent.futures.Future.set_result", "concurrent.futures.Future.set_running_or_notify_cancel()": "library/concurrent.futures.html#concurrent.futures.Future.set_running_or_notify_cancel", "concurrent.futures.InvalidStateError": "library/concurrent.futures.html#concurrent.futures.InvalidStateError", "concurrent.futures.process.BrokenProcessPool": "library/concurrent.futures.html#concurrent.futures.process.BrokenProcessPool", "concurrent.futures.ProcessPoolExecutor": "library/concurrent.futures.html#concurrent.futures.ProcessPoolExecutor", "concurrent.futures.thread.BrokenThreadPool": "library/concurrent.futures.html#concurrent.futures.thread.BrokenThreadPool", "concurrent.futures.ThreadPoolExecutor": "library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor", "concurrent.futures.TimeoutError": "library/concurrent.futures.html#concurrent.futures.TimeoutError", "concurrent.futures.wait()": "library/concurrent.futures.html#concurrent.futures.wait", "Condition (Synchronization Primitives)": "library/asyncio-sync.html#condition", "Condition Objects (threading)": "library/threading.html#condition-objects", "configparser": "library/configparser.html", "ConfigParser Objects (configparser)": "library/configparser.html#configparser-objects", "configparser.BasicInterpolation": "library/configparser.html#configparser.BasicInterpolation", "configparser.ConfigParser": "library/configparser.html#configparser.ConfigParser", "configparser.ConfigParser.add_section()": "library/configparser.html#configparser.ConfigParser.add_section", "configparser.ConfigParser.BOOLEAN_STATES": "library/configparser.html#configparser.ConfigParser.BOOLEAN_STATES", "configparser.ConfigParser.defaults()": "library/configparser.html#configparser.ConfigParser.defaults", "configparser.ConfigParser.get()": "library/configparser.html#configparser.ConfigParser.get", "configparser.ConfigParser.getboolean()": "library/configparser.html#configparser.ConfigParser.getboolean", "configparser.ConfigParser.getfloat()": "library/configparser.html#configparser.ConfigParser.getfloat", "configparser.ConfigParser.getint()": "library/configparser.html#configparser.ConfigParser.getint", "configparser.ConfigParser.has_option()": "library/configparser.html#configparser.ConfigParser.has_option", "configparser.ConfigParser.has_section()": "library/configparser.html#configparser.ConfigParser.has_section", "configparser.ConfigParser.items()": "library/configparser.html#configparser.ConfigParser.items", "configparser.ConfigParser.options()": "library/configparser.html#configparser.ConfigParser.options", "configparser.ConfigParser.optionxform()": "library/configparser.html#configparser.ConfigParser.optionxform", "configparser.ConfigParser.read()": "library/configparser.html#configparser.ConfigParser.read", "configparser.ConfigParser.read_dict()": "library/configparser.html#configparser.ConfigParser.read_dict", "configparser.ConfigParser.read_file()": "library/configparser.html#configparser.ConfigParser.read_file", "configparser.ConfigParser.read_string()": "library/configparser.html#configparser.ConfigParser.read_string", "configparser.ConfigParser.remove_option()": "library/configparser.html#configparser.ConfigParser.remove_option", "configparser.ConfigParser.remove_section()": "library/configparser.html#configparser.ConfigParser.remove_section", "configparser.ConfigParser.SECTCRE": "library/configparser.html#configparser.ConfigParser.SECTCRE", "configparser.ConfigParser.sections()": "library/configparser.html#configparser.ConfigParser.sections", "configparser.ConfigParser.set()": "library/configparser.html#configparser.ConfigParser.set", "configparser.ConfigParser.write()": "library/configparser.html#configparser.ConfigParser.write", "configparser.DuplicateOptionError": "library/configparser.html#configparser.DuplicateOptionError", "configparser.DuplicateSectionError": "library/configparser.html#configparser.DuplicateSectionError", "configparser.Error": "library/configparser.html#configparser.Error", "configparser.ExtendedInterpolation": "library/configparser.html#configparser.ExtendedInterpolation", "configparser.InterpolationDepthError": "library/configparser.html#configparser.InterpolationDepthError", "configparser.InterpolationError": "library/configparser.html#configparser.InterpolationError", "configparser.InterpolationMissingOptionError": "library/configparser.html#configparser.InterpolationMissingOptionError", "configparser.InterpolationSyntaxError": "library/configparser.html#configparser.InterpolationSyntaxError", "configparser.MAX_INTERPOLATION_DEPTH": "library/configparser.html#configparser.MAX_INTERPOLATION_DEPTH", "configparser.MissingSectionHeaderError": "library/configparser.html#configparser.MissingSectionHeaderError", "configparser.MultilineContinuationError": "library/configparser.html#configparser.MultilineContinuationError", "configparser.NoOptionError": "library/configparser.html#configparser.NoOptionError", "configparser.NoSectionError": "library/configparser.html#configparser.NoSectionError", "configparser.ParsingError": "library/configparser.html#configparser.ParsingError", "configparser.RawConfigParser": "library/configparser.html#configparser.RawConfigParser", "configparser.RawConfigParser.add_section()": "library/configparser.html#configparser.RawConfigParser.add_section", "configparser.RawConfigParser.set()": "library/configparser.html#configparser.RawConfigParser.set", "configparser.UNNAMED_SECTION": "library/configparser.html#configparser.UNNAMED_SECTION", "Configuration dictionary schema (logging.config)": "library/logging.config.html#configuration-dictionary-schema", "Configuration file format (logging.config)": "library/logging.config.html#configuration-file-format", "Configuration functions (logging.config)": "library/logging.config.html#configuration-functions", "Configuration variables (sysconfig)": "library/sysconfig.html#configuration-variables", "Conformance (xml.dom)": "library/xml.dom.html#conformance", "ConnectionAbortedError": "library/exceptions.html#ConnectionAbortedError", "ConnectionError": "library/exceptions.html#ConnectionError", "ConnectionRefusedError": "library/exceptions.html#ConnectionRefusedError", "ConnectionResetError": "library/exceptions.html#ConnectionResetError", "Console I/O (msvcrt)": "library/msvcrt.html#console-i-o", "Constants": "library/constants.html", "Constants (cmath)": "library/cmath.html#constants", "Constants (curses)": "library/curses.html#constants", "Constants (datetime)": "library/datetime.html#constants", "Constants (decimal)": "library/decimal.html#constants", "Constants (math)": "library/math.html#constants", "Constants (Subprocesses)": "library/asyncio-subprocess.html#constants", "Constants (winreg)": "library/winreg.html#constants", "Constants added by the site module (Constants)": "library/constants.html#constants-added-by-the-site-module", "Constructors (hashlib)": "library/hashlib.html#constructors", "container.__iter__()": "library/stdtypes.html#container.__iter__", "Content Manager Instances (email.contentmanager: Managing MIME Content)": "library/email.contentmanager.html#content-manager-instances", "Content Model Descriptions (xml.parsers.expat)": "library/pyexpat.html#module-xml.parsers.expat.model", "ContentHandler Objects (xml.sax.handler)": "library/xml.sax.handler.html#contenthandler-objects", "context manager": "glossary.html#term-context-manager", "Context Manager Types (Types)": "library/stdtypes.html#context-manager-types", "Context objects (decimal)": "library/decimal.html#context-objects", "context variable": "glossary.html#term-context-variable", "Context Variables (contextvars)": "library/contextvars.html#context-variables", "Context Variables Objects": "c-api/contextvars.html", "contextlib": "library/contextlib.html", "contextlib.AbstractAsyncContextManager": "library/contextlib.html#contextlib.AbstractAsyncContextManager", "contextlib.AbstractContextManager": "library/contextlib.html#contextlib.AbstractContextManager", "contextlib.aclosing()": "library/contextlib.html#contextlib.aclosing", "contextlib.AsyncContextDecorator": "library/contextlib.html#contextlib.AsyncContextDecorator", "contextlib.asynccontextmanager()": "library/contextlib.html#contextlib.asynccontextmanager", "contextlib.AsyncExitStack": "library/contextlib.html#contextlib.AsyncExitStack", "contextlib.AsyncExitStack.aclose()": "library/contextlib.html#contextlib.AsyncExitStack.aclose", "contextlib.AsyncExitStack.enter_async_context()": "library/contextlib.html#contextlib.AsyncExitStack.enter_async_context", "contextlib.AsyncExitStack.push_async_callback()": "library/contextlib.html#contextlib.AsyncExitStack.push_async_callback", "contextlib.AsyncExitStack.push_async_exit()": "library/contextlib.html#contextlib.AsyncExitStack.push_async_exit", "contextlib.chdir()": "library/contextlib.html#contextlib.chdir", "contextlib.closing()": "library/contextlib.html#contextlib.closing", "contextlib.ContextDecorator": "library/contextlib.html#contextlib.ContextDecorator", "contextlib.contextmanager()": "library/contextlib.html#contextlib.contextmanager", "contextlib.ExitStack": "library/contextlib.html#contextlib.ExitStack", "contextlib.ExitStack.callback()": "library/contextlib.html#contextlib.ExitStack.callback", "contextlib.ExitStack.close()": "library/contextlib.html#contextlib.ExitStack.close", "contextlib.ExitStack.enter_context()": "library/contextlib.html#contextlib.ExitStack.enter_context", "contextlib.ExitStack.pop_all()": "library/contextlib.html#contextlib.ExitStack.pop_all", "contextlib.ExitStack.push()": "library/contextlib.html#contextlib.ExitStack.push", "contextlib.nullcontext()": "library/contextlib.html#contextlib.nullcontext", "contextlib.redirect_stderr()": "library/contextlib.html#contextlib.redirect_stderr", "contextlib.redirect_stdout()": "library/contextlib.html#contextlib.redirect_stdout", "contextlib.suppress()": "library/contextlib.html#contextlib.suppress", "contextmanager.__enter__()": "library/stdtypes.html#contextmanager.__enter__", "contextmanager.__exit__()": "library/stdtypes.html#contextmanager.__exit__", "contextvars": "library/contextvars.html", "contextvars.Context": "library/contextvars.html#contextvars.Context", "contextvars.Context.copy()": "library/contextvars.html#contextvars.Context.copy", "contextvars.Context.get()": "library/contextvars.html#contextvars.Context.get", "contextvars.Context.items()": "library/contextvars.html#contextvars.Context.items", "contextvars.Context.keys()": "library/contextvars.html#contextvars.Context.keys", "contextvars.Context.run()": "library/contextvars.html#contextvars.Context.run", "contextvars.Context.values()": "library/contextvars.html#contextvars.Context.values", "contextvars.ContextVar": "library/contextvars.html#contextvars.ContextVar", "contextvars.ContextVar.get()": "library/contextvars.html#contextvars.ContextVar.get", "contextvars.ContextVar.name": "library/contextvars.html#contextvars.ContextVar.name", "contextvars.ContextVar.reset()": "library/contextvars.html#contextvars.ContextVar.reset", "contextvars.ContextVar.set()": "library/contextvars.html#contextvars.ContextVar.set", "contextvars.copy_context()": "library/contextvars.html#contextvars.copy_context", "contextvars.Token": "library/contextvars.html#contextvars.Token", "contextvars.Token.MISSING": "library/contextvars.html#contextvars.Token.MISSING", "contextvars.Token.old_value": "library/contextvars.html#contextvars.Token.old_value", "contextvars.Token.var": "library/contextvars.html#contextvars.Token.var", "contiguous": "glossary.html#term-contiguous", "continue (statement)": "reference/simple_stmts.html#index-33", "Convenience factory functions (ipaddress)": "library/ipaddress.html#convenience-factory-functions", "Convenience Functions (xmlrpc.client)": "library/xmlrpc.client.html#convenience-functions", "Conversion Table (tomllib)": "library/tomllib.html#conversion-table", "Conversions to and from polar coordinates (cmath)": "library/cmath.html#conversions-to-and-from-polar-coordinates", "Cookie Objects (http.cookiejar)": "library/http.cookiejar.html#cookie-objects", "Cookie Objects (http.cookies)": "library/http.cookies.html#cookie-objects", "CookieJar and FileCookieJar Objects (http.cookiejar)": "library/http.cookiejar.html#cookiejar-and-filecookiejar-objects", "CookiePolicy Objects (http.cookiejar)": "library/http.cookiejar.html#cookiepolicy-objects", "copy": "library/copy.html", "copy.copy()": "library/copy.html#copy.copy", "copy.deepcopy()": "library/copy.html#copy.deepcopy", "copy.Error": "library/copy.html#copy.Error", "copy.replace()": "library/copy.html#copy.replace", "copyreg": "library/copyreg.html", "copyreg.constructor()": "library/copyreg.html#copyreg.constructor", "copyreg.pickle()": "library/copyreg.html#copyreg.pickle", "Copyright": "copyright.html", "copyright": "library/constants.html#copyright", "Core Functionality (argparse)": "library/argparse.html#core-functionality", "coroutine": "glossary.html#term-coroutine", "coroutine function": "glossary.html#term-coroutine-function", "Coroutine Objects": "c-api/coro.html", "Coroutine Utility Functions (types)": "library/types.html#coroutine-utility-functions", "coroutine.close()": "reference/datamodel.html#coroutine.close", "coroutine.send()": "reference/datamodel.html#coroutine.send", "coroutine.throw()": "reference/datamodel.html#coroutine.throw", "Coroutines (Coroutines and Tasks)": "library/asyncio-task.html#coroutines", "Coroutines and Tasks": "library/asyncio-task.html", "Counter objects (collections)": "library/collections.html#counter-objects", "CPython": "glossary.html#term-CPython", "Creating Standalone Applications with zipapp (zipapp)": "library/zipapp.html#creating-standalone-applications-with-zipapp", "Creating Subprocesses (Subprocesses)": "library/asyncio-subprocess.html#creating-subprocesses", "Creating Tasks (Coroutines and Tasks)": "library/asyncio-task.html#creating-tasks", "Creating virtual environments (venv)": "library/venv.html#creating-virtual-environments", "credits": "library/constants.html#credits", "Cross Platform (platform)": "library/platform.html#cross-platform", "Cryptographic Services": "library/crypto.html", "csv": "library/csv.html", "csv.csvreader.__next__()": "library/csv.html#csv.csvreader.__next__", "csv.csvreader.dialect": "library/csv.html#csv.csvreader.dialect", "csv.csvreader.line_num": "library/csv.html#csv.csvreader.line_num", "csv.csvwriter.dialect": "library/csv.html#csv.csvwriter.dialect", "csv.csvwriter.writerow()": "library/csv.html#csv.csvwriter.writerow", "csv.csvwriter.writerows()": "library/csv.html#csv.csvwriter.writerows", "csv.Dialect": "library/csv.html#csv.Dialect", "csv.Dialect.delimiter": "library/csv.html#csv.Dialect.delimiter", "csv.Dialect.doublequote": "library/csv.html#csv.Dialect.doublequote", "csv.Dialect.escapechar": "library/csv.html#csv.Dialect.escapechar", "csv.Dialect.lineterminator": "library/csv.html#csv.Dialect.lineterminator", "csv.Dialect.quotechar": "library/csv.html#csv.Dialect.quotechar", "csv.Dialect.quoting": "library/csv.html#csv.Dialect.quoting", "csv.Dialect.skipinitialspace": "library/csv.html#csv.Dialect.skipinitialspace", "csv.Dialect.strict": "library/csv.html#csv.Dialect.strict", "csv.DictReader": "library/csv.html#csv.DictReader", "csv.DictReader.fieldnames": "library/csv.html#csv.DictReader.fieldnames", "csv.DictWriter": "library/csv.html#csv.DictWriter", "csv.DictWriter.writeheader()": "library/csv.html#csv.DictWriter.writeheader", "csv.Error": "library/csv.html#csv.Error", "csv.excel": "library/csv.html#csv.excel", "csv.excel_tab": "library/csv.html#csv.excel_tab", "csv.field_size_limit()": "library/csv.html#csv.field_size_limit", "csv.get_dialect()": "library/csv.html#csv.get_dialect", "csv.list_dialects()": "library/csv.html#csv.list_dialects", "csv.QUOTE_ALL": "library/csv.html#csv.QUOTE_ALL", "csv.QUOTE_MINIMAL": "library/csv.html#csv.QUOTE_MINIMAL", "csv.QUOTE_NONE": "library/csv.html#csv.QUOTE_NONE", "csv.QUOTE_NONNUMERIC": "library/csv.html#csv.QUOTE_NONNUMERIC", "csv.QUOTE_NOTNULL": "library/csv.html#csv.QUOTE_NOTNULL", "csv.QUOTE_STRINGS": "library/csv.html#csv.QUOTE_STRINGS", "csv.reader()": "library/csv.html#csv.reader", "csv.register_dialect()": "library/csv.html#csv.register_dialect", "csv.Sniffer": "library/csv.html#csv.Sniffer", "csv.Sniffer.has_header()": "library/csv.html#csv.Sniffer.has_header", "csv.Sniffer.sniff()": "library/csv.html#csv.Sniffer.sniff", "csv.unix_dialect": "library/csv.html#csv.unix_dialect", "csv.unregister_dialect()": "library/csv.html#csv.unregister_dialect", "csv.writer()": "library/csv.html#csv.writer", "ctypes": "library/ctypes.html", "ctypes reference (ctypes)": "library/ctypes.html#ctypes-reference", "ctypes tutorial (ctypes)": "library/ctypes.html#ctypes-tutorial", "ctypes._CData": "library/ctypes.html#ctypes._CData", "ctypes._CData._b_base_": "library/ctypes.html#ctypes._CData._b_base_", "ctypes._CData._b_needsfree_": "library/ctypes.html#ctypes._CData._b_needsfree_", "ctypes._CData._objects": "library/ctypes.html#ctypes._CData._objects", "ctypes._CData.from_address()": "library/ctypes.html#ctypes._CData.from_address", "ctypes._CData.from_buffer()": "library/ctypes.html#ctypes._CData.from_buffer", "ctypes._CData.from_buffer_copy()": "library/ctypes.html#ctypes._CData.from_buffer_copy", "ctypes._CData.from_param()": "library/ctypes.html#ctypes._CData.from_param", "ctypes._CData.in_dll()": "library/ctypes.html#ctypes._CData.in_dll", "ctypes._FuncPtr": "library/ctypes.html#ctypes._FuncPtr", "ctypes._FuncPtr.argtypes": "library/ctypes.html#ctypes._FuncPtr.argtypes", "ctypes._FuncPtr.errcheck": "library/ctypes.html#ctypes._FuncPtr.errcheck", "ctypes._FuncPtr.restype": "library/ctypes.html#ctypes._FuncPtr.restype", "ctypes._Pointer": "library/ctypes.html#ctypes._Pointer", "ctypes._Pointer._type_": "library/ctypes.html#ctypes._Pointer._type_", "ctypes._Pointer.contents": "library/ctypes.html#ctypes._Pointer.contents", "ctypes._SimpleCData": "library/ctypes.html#ctypes._SimpleCData", "ctypes._SimpleCData.value": "library/ctypes.html#ctypes._SimpleCData.value", "ctypes.addressof()": "library/ctypes.html#ctypes.addressof", "ctypes.alignment()": "library/ctypes.html#ctypes.alignment", "ctypes.ArgumentError": "library/ctypes.html#ctypes.ArgumentError", "ctypes.Array": "library/ctypes.html#ctypes.Array", "ctypes.ARRAY()": "library/ctypes.html#ctypes.ARRAY", "ctypes.Array._length_": "library/ctypes.html#ctypes.Array._length_", "ctypes.Array._type_": "library/ctypes.html#ctypes.Array._type_", "ctypes.BigEndianStructure": "library/ctypes.html#ctypes.BigEndianStructure", "ctypes.BigEndianUnion": "library/ctypes.html#ctypes.BigEndianUnion", "ctypes.byref()": "library/ctypes.html#ctypes.byref", "ctypes.c_bool": "library/ctypes.html#ctypes.c_bool", "ctypes.c_byte": "library/ctypes.html#ctypes.c_byte", "ctypes.c_char": "library/ctypes.html#ctypes.c_char", "ctypes.c_char_p": "library/ctypes.html#ctypes.c_char_p", "ctypes.c_double": "library/ctypes.html#ctypes.c_double", "ctypes.c_float": "library/ctypes.html#ctypes.c_float", "ctypes.c_int": "library/ctypes.html#ctypes.c_int", "ctypes.c_int16": "library/ctypes.html#ctypes.c_int16", "ctypes.c_int32": "library/ctypes.html#ctypes.c_int32", "ctypes.c_int64": "library/ctypes.html#ctypes.c_int64", "ctypes.c_int8": "library/ctypes.html#ctypes.c_int8", "ctypes.c_long": "library/ctypes.html#ctypes.c_long", "ctypes.c_longdouble": "library/ctypes.html#ctypes.c_longdouble", "ctypes.c_longlong": "library/ctypes.html#ctypes.c_longlong", "ctypes.c_short": "library/ctypes.html#ctypes.c_short", "ctypes.c_size_t": "library/ctypes.html#ctypes.c_size_t", "ctypes.c_ssize_t": "library/ctypes.html#ctypes.c_ssize_t", "ctypes.c_time_t": "library/ctypes.html#ctypes.c_time_t", "ctypes.c_ubyte": "library/ctypes.html#ctypes.c_ubyte", "ctypes.c_uint": "library/ctypes.html#ctypes.c_uint", "ctypes.c_uint16": "library/ctypes.html#ctypes.c_uint16", "ctypes.c_uint32": "library/ctypes.html#ctypes.c_uint32", "ctypes.c_uint64": "library/ctypes.html#ctypes.c_uint64", "ctypes.c_uint8": "library/ctypes.html#ctypes.c_uint8", "ctypes.c_ulong": "library/ctypes.html#ctypes.c_ulong", "ctypes.c_ulonglong": "library/ctypes.html#ctypes.c_ulonglong", "ctypes.c_ushort": "library/ctypes.html#ctypes.c_ushort", "ctypes.c_void_p": "library/ctypes.html#ctypes.c_void_p", "ctypes.c_wchar": "library/ctypes.html#ctypes.c_wchar", "ctypes.c_wchar_p": "library/ctypes.html#ctypes.c_wchar_p", "ctypes.cast()": "library/ctypes.html#ctypes.cast", "ctypes.CDLL": "library/ctypes.html#ctypes.CDLL", "ctypes.CFUNCTYPE()": "library/ctypes.html#ctypes.CFUNCTYPE", "ctypes.create_string_buffer()": "library/ctypes.html#ctypes.create_string_buffer", "ctypes.create_unicode_buffer()": "library/ctypes.html#ctypes.create_unicode_buffer", "ctypes.DllCanUnloadNow()": "library/ctypes.html#ctypes.DllCanUnloadNow", "ctypes.DllGetClassObject()": "library/ctypes.html#ctypes.DllGetClassObject", "ctypes.FormatError()": "library/ctypes.html#ctypes.FormatError", "ctypes.get_errno()": "library/ctypes.html#ctypes.get_errno", "ctypes.get_last_error()": "library/ctypes.html#ctypes.get_last_error", "ctypes.GetLastError()": "library/ctypes.html#ctypes.GetLastError", "ctypes.HRESULT": "library/ctypes.html#ctypes.HRESULT", "ctypes.LibraryLoader": "library/ctypes.html#ctypes.LibraryLoader", "ctypes.LibraryLoader.LoadLibrary()": "library/ctypes.html#ctypes.LibraryLoader.LoadLibrary", "ctypes.LittleEndianStructure": "library/ctypes.html#ctypes.LittleEndianStructure", "ctypes.LittleEndianUnion": "library/ctypes.html#ctypes.LittleEndianUnion", "ctypes.memmove()": "library/ctypes.html#ctypes.memmove", "ctypes.memset()": "library/ctypes.html#ctypes.memset", "ctypes.OleDLL": "library/ctypes.html#ctypes.OleDLL", "ctypes.pointer()": "library/ctypes.html#ctypes.pointer", "ctypes.POINTER()": "library/ctypes.html#ctypes.POINTER", "ctypes.py_object": "library/ctypes.html#ctypes.py_object", "ctypes.PyDLL": "library/ctypes.html#ctypes.PyDLL", "ctypes.PyDLL._handle": "library/ctypes.html#ctypes.PyDLL._handle", "ctypes.PyDLL._name": "library/ctypes.html#ctypes.PyDLL._name", "ctypes.PYFUNCTYPE()": "library/ctypes.html#ctypes.PYFUNCTYPE", "ctypes.resize()": "library/ctypes.html#ctypes.resize", "ctypes.set_errno()": "library/ctypes.html#ctypes.set_errno", "ctypes.set_last_error()": "library/ctypes.html#ctypes.set_last_error", "ctypes.sizeof()": "library/ctypes.html#ctypes.sizeof", "ctypes.string_at()": "library/ctypes.html#ctypes.string_at", "ctypes.Structure": "library/ctypes.html#ctypes.Structure", "ctypes.Structure._align_": "library/ctypes.html#ctypes.Structure._align_", "ctypes.Structure._anonymous_": "library/ctypes.html#ctypes.Structure._anonymous_", "ctypes.Structure._fields_": "library/ctypes.html#ctypes.Structure._fields_", "ctypes.Structure._pack_": "library/ctypes.html#ctypes.Structure._pack_", "ctypes.Union": "library/ctypes.html#ctypes.Union", "ctypes.util.find_library()": "library/ctypes.html#ctypes.util.find_library", "ctypes.util.find_msvcrt()": "library/ctypes.html#ctypes.util.find_msvcrt", "ctypes.WinDLL": "library/ctypes.html#ctypes.WinDLL", "ctypes.WinError()": "library/ctypes.html#ctypes.WinError", "ctypes.WINFUNCTYPE()": "library/ctypes.html#ctypes.WINFUNCTYPE", "ctypes.wstring_at()": "library/ctypes.html#ctypes.wstring_at", "Current State of Generators, Coroutines, and Asynchronous Generators (inspect)": "library/inspect.html#current-state-of-generators-coroutines-and-asynchronous-generators", "curses": "library/curses.html", "Curses Programming with Python": "howto/curses.html", "curses.__version__": "library/curses.html#curses.__version__", "curses.A_ALTCHARSET": "library/curses.html#curses.A_ALTCHARSET", "curses.A_ATTRIBUTES": "library/curses.html#curses.A_ATTRIBUTES", "curses.A_BLINK": "library/curses.html#curses.A_BLINK", "curses.A_BOLD": "library/curses.html#curses.A_BOLD", "curses.A_CHARTEXT": "library/curses.html#curses.A_CHARTEXT", "curses.A_COLOR": "library/curses.html#curses.A_COLOR", "curses.A_DIM": "library/curses.html#curses.A_DIM", "curses.A_HORIZONTAL": "library/curses.html#curses.A_HORIZONTAL", "curses.A_INVIS": "library/curses.html#curses.A_INVIS", "curses.A_ITALIC": "library/curses.html#curses.A_ITALIC", "curses.A_LEFT": "library/curses.html#curses.A_LEFT", "curses.A_LOW": "library/curses.html#curses.A_LOW", "curses.A_NORMAL": "library/curses.html#curses.A_NORMAL", "curses.A_PROTECT": "library/curses.html#curses.A_PROTECT", "curses.A_REVERSE": "library/curses.html#curses.A_REVERSE", "curses.A_RIGHT": "library/curses.html#curses.A_RIGHT", "curses.A_STANDOUT": "library/curses.html#curses.A_STANDOUT", "curses.A_TOP": "library/curses.html#curses.A_TOP", "curses.A_UNDERLINE": "library/curses.html#curses.A_UNDERLINE", "curses.A_VERTICAL": "library/curses.html#curses.A_VERTICAL", "curses.ACS_BBSS": "library/curses.html#curses.ACS_BBSS", "curses.ACS_BLOCK": "library/curses.html#curses.ACS_BLOCK", "curses.ACS_BOARD": "library/curses.html#curses.ACS_BOARD", "curses.ACS_BSBS": "library/curses.html#curses.ACS_BSBS", "curses.ACS_BSSB": "library/curses.html#curses.ACS_BSSB", "curses.ACS_BSSS": "library/curses.html#curses.ACS_BSSS", "curses.ACS_BTEE": "library/curses.html#curses.ACS_BTEE", "curses.ACS_BULLET": "library/curses.html#curses.ACS_BULLET", "curses.ACS_CKBOARD": "library/curses.html#curses.ACS_CKBOARD", "curses.ACS_DARROW": "library/curses.html#curses.ACS_DARROW", "curses.ACS_DEGREE": "library/curses.html#curses.ACS_DEGREE", "curses.ACS_DIAMOND": "library/curses.html#curses.ACS_DIAMOND", "curses.ACS_GEQUAL": "library/curses.html#curses.ACS_GEQUAL", "curses.ACS_HLINE": "library/curses.html#curses.ACS_HLINE", "curses.ACS_LANTERN": "library/curses.html#curses.ACS_LANTERN", "curses.ACS_LARROW": "library/curses.html#curses.ACS_LARROW", "curses.ACS_LEQUAL": "library/curses.html#curses.ACS_LEQUAL", "curses.ACS_LLCORNER": "library/curses.html#curses.ACS_LLCORNER", "curses.ACS_LRCORNER": "library/curses.html#curses.ACS_LRCORNER", "curses.ACS_LTEE": "library/curses.html#curses.ACS_LTEE", "curses.ACS_NEQUAL": "library/curses.html#curses.ACS_NEQUAL", "curses.ACS_PI": "library/curses.html#curses.ACS_PI", "curses.ACS_PLMINUS": "library/curses.html#curses.ACS_PLMINUS", "curses.ACS_PLUS": "library/curses.html#curses.ACS_PLUS", "curses.ACS_RARROW": "library/curses.html#curses.ACS_RARROW", "curses.ACS_RTEE": "library/curses.html#curses.ACS_RTEE", "curses.ACS_S1": "library/curses.html#curses.ACS_S1", "curses.ACS_S3": "library/curses.html#curses.ACS_S3", "curses.ACS_S7": "library/curses.html#curses.ACS_S7", "curses.ACS_S9": "library/curses.html#curses.ACS_S9", "curses.ACS_SBBS": "library/curses.html#curses.ACS_SBBS", "curses.ACS_SBSB": "library/curses.html#curses.ACS_SBSB", "curses.ACS_SBSS": "library/curses.html#curses.ACS_SBSS", "curses.ACS_SSBB": "library/curses.html#curses.ACS_SSBB", "curses.ACS_SSBS": "library/curses.html#curses.ACS_SSBS", "curses.ACS_SSSB": "library/curses.html#curses.ACS_SSSB", "curses.ACS_SSSS": "library/curses.html#curses.ACS_SSSS", "curses.ACS_STERLING": "library/curses.html#curses.ACS_STERLING", "curses.ACS_TTEE": "library/curses.html#curses.ACS_TTEE", "curses.ACS_UARROW": "library/curses.html#curses.ACS_UARROW", "curses.ACS_ULCORNER": "library/curses.html#curses.ACS_ULCORNER", "curses.ACS_URCORNER": "library/curses.html#curses.ACS_URCORNER", "curses.ACS_VLINE": "library/curses.html#curses.ACS_VLINE", "curses.ascii": "library/curses.ascii.html", "curses.ascii.ACK": "library/curses.ascii.html#curses.ascii.ACK", "curses.ascii.alt()": "library/curses.ascii.html#curses.ascii.alt", "curses.ascii.ascii()": "library/curses.ascii.html#curses.ascii.ascii", "curses.ascii.BEL": "library/curses.ascii.html#curses.ascii.BEL", "curses.ascii.BS": "library/curses.ascii.html#curses.ascii.BS", "curses.ascii.CAN": "library/curses.ascii.html#curses.ascii.CAN", "curses.ascii.controlnames": "library/curses.ascii.html#curses.ascii.controlnames", "curses.ascii.CR": "library/curses.ascii.html#curses.ascii.CR", "curses.ascii.ctrl()": "library/curses.ascii.html#curses.ascii.ctrl", "curses.ascii.DC1": "library/curses.ascii.html#curses.ascii.DC1", "curses.ascii.DC2": "library/curses.ascii.html#curses.ascii.DC2", "curses.ascii.DC3": "library/curses.ascii.html#curses.ascii.DC3", "curses.ascii.DC4": "library/curses.ascii.html#curses.ascii.DC4", "curses.ascii.DEL": "library/curses.ascii.html#curses.ascii.DEL", "curses.ascii.DLE": "library/curses.ascii.html#curses.ascii.DLE", "curses.ascii.EM": "library/curses.ascii.html#curses.ascii.EM", "curses.ascii.ENQ": "library/curses.ascii.html#curses.ascii.ENQ", "curses.ascii.EOT": "library/curses.ascii.html#curses.ascii.EOT", "curses.ascii.ESC": "library/curses.ascii.html#curses.ascii.ESC", "curses.ascii.ETB": "library/curses.ascii.html#curses.ascii.ETB", "curses.ascii.ETX": "library/curses.ascii.html#curses.ascii.ETX", "curses.ascii.FF": "library/curses.ascii.html#curses.ascii.FF", "curses.ascii.FS": "library/curses.ascii.html#curses.ascii.FS", "curses.ascii.GS": "library/curses.ascii.html#curses.ascii.GS", "curses.ascii.HT": "library/curses.ascii.html#curses.ascii.HT", "curses.ascii.isalnum()": "library/curses.ascii.html#curses.ascii.isalnum", "curses.ascii.isalpha()": "library/curses.ascii.html#curses.ascii.isalpha", "curses.ascii.isascii()": "library/curses.ascii.html#curses.ascii.isascii", "curses.ascii.isblank()": "library/curses.ascii.html#curses.ascii.isblank", "curses.ascii.iscntrl()": "library/curses.ascii.html#curses.ascii.iscntrl", "curses.ascii.isctrl()": "library/curses.ascii.html#curses.ascii.isctrl", "curses.ascii.isdigit()": "library/curses.ascii.html#curses.ascii.isdigit", "curses.ascii.isgraph()": "library/curses.ascii.html#curses.ascii.isgraph", "curses.ascii.islower()": "library/curses.ascii.html#curses.ascii.islower", "curses.ascii.ismeta()": "library/curses.ascii.html#curses.ascii.ismeta", "curses.ascii.isprint()": "library/curses.ascii.html#curses.ascii.isprint", "curses.ascii.ispunct()": "library/curses.ascii.html#curses.ascii.ispunct", "curses.ascii.isspace()": "library/curses.ascii.html#curses.ascii.isspace", "curses.ascii.isupper()": "library/curses.ascii.html#curses.ascii.isupper", "curses.ascii.isxdigit()": "library/curses.ascii.html#curses.ascii.isxdigit", "curses.ascii.LF": "library/curses.ascii.html#curses.ascii.LF", "curses.ascii.NAK": "library/curses.ascii.html#curses.ascii.NAK", "curses.ascii.NL": "library/curses.ascii.html#curses.ascii.NL", "curses.ascii.NUL": "library/curses.ascii.html#curses.ascii.NUL", "curses.ascii.RS": "library/curses.ascii.html#curses.ascii.RS", "curses.ascii.SI": "library/curses.ascii.html#curses.ascii.SI", "curses.ascii.SO": "library/curses.ascii.html#curses.ascii.SO", "curses.ascii.SOH": "library/curses.ascii.html#curses.ascii.SOH", "curses.ascii.SP": "library/curses.ascii.html#curses.ascii.SP", "curses.ascii.STX": "library/curses.ascii.html#curses.ascii.STX", "curses.ascii.SUB": "library/curses.ascii.html#curses.ascii.SUB", "curses.ascii.SYN": "library/curses.ascii.html#curses.ascii.SYN", "curses.ascii.TAB": "library/curses.ascii.html#curses.ascii.TAB", "curses.ascii.unctrl()": "library/curses.ascii.html#curses.ascii.unctrl", "curses.ascii.US": "library/curses.ascii.html#curses.ascii.US", "curses.ascii.VT": "library/curses.ascii.html#curses.ascii.VT", "curses.baudrate()": "library/curses.html#curses.baudrate", "curses.beep()": "library/curses.html#curses.beep", "curses.BUTTON_ALT": "library/curses.html#curses.BUTTON_ALT", "curses.BUTTON_CTRL": "library/curses.html#curses.BUTTON_CTRL", "curses.BUTTON_SHIFT": "library/curses.html#curses.BUTTON_SHIFT", "curses.BUTTONn_CLICKED": "library/curses.html#curses.BUTTONn_CLICKED", "curses.BUTTONn_DOUBLE_CLICKED": "library/curses.html#curses.BUTTONn_DOUBLE_CLICKED", "curses.BUTTONn_PRESSED": "library/curses.html#curses.BUTTONn_PRESSED", "curses.BUTTONn_RELEASED": "library/curses.html#curses.BUTTONn_RELEASED", "curses.BUTTONn_TRIPLE_CLICKED": "library/curses.html#curses.BUTTONn_TRIPLE_CLICKED", "curses.can_change_color()": "library/curses.html#curses.can_change_color", "curses.cbreak()": "library/curses.html#curses.cbreak", "curses.COLOR_BLACK": "library/curses.html#curses.COLOR_BLACK", "curses.COLOR_BLUE": "library/curses.html#curses.COLOR_BLUE", "curses.color_content()": "library/curses.html#curses.color_content", "curses.COLOR_CYAN": "library/curses.html#curses.COLOR_CYAN", "curses.COLOR_GREEN": "library/curses.html#curses.COLOR_GREEN", "curses.COLOR_MAGENTA": "library/curses.html#curses.COLOR_MAGENTA", "curses.color_pair()": "library/curses.html#curses.color_pair", "curses.COLOR_PAIRS": "library/curses.html#curses.COLOR_PAIRS", "curses.COLOR_RED": "library/curses.html#curses.COLOR_RED", "curses.COLOR_WHITE": "library/curses.html#curses.COLOR_WHITE", "curses.COLOR_YELLOW": "library/curses.html#curses.COLOR_YELLOW", "curses.COLORS": "library/curses.html#curses.COLORS", "curses.COLS": "library/curses.html#curses.COLS", "curses.curs_set()": "library/curses.html#curses.curs_set", "curses.def_prog_mode()": "library/curses.html#curses.def_prog_mode", "curses.def_shell_mode()": "library/curses.html#curses.def_shell_mode", "curses.delay_output()": "library/curses.html#curses.delay_output", "curses.doupdate()": "library/curses.html#curses.doupdate", "curses.echo()": "library/curses.html#curses.echo", "curses.endwin()": "library/curses.html#curses.endwin", "curses.erasechar()": "library/curses.html#curses.erasechar", "curses.ERR": "library/curses.html#curses.ERR", "curses.error": "library/curses.html#curses.error", "curses.filter()": "library/curses.html#curses.filter", "curses.flash()": "library/curses.html#curses.flash", "curses.flushinp()": "library/curses.html#curses.flushinp", "curses.get_escdelay()": "library/curses.html#curses.get_escdelay", "curses.get_tabsize()": "library/curses.html#curses.get_tabsize", "curses.getmouse()": "library/curses.html#curses.getmouse", "curses.getsyx()": "library/curses.html#curses.getsyx", "curses.getwin()": "library/curses.html#curses.getwin", "curses.halfdelay()": "library/curses.html#curses.halfdelay", "curses.has_colors()": "library/curses.html#curses.has_colors", "curses.has_extended_color_support()": "library/curses.html#curses.has_extended_color_support", "curses.has_ic()": "library/curses.html#curses.has_ic", "curses.has_il()": "library/curses.html#curses.has_il", "curses.has_key()": "library/curses.html#curses.has_key", "curses.init_color()": "library/curses.html#curses.init_color", "curses.init_pair()": "library/curses.html#curses.init_pair", "curses.initscr()": "library/curses.html#curses.initscr", "curses.is_term_resized()": "library/curses.html#curses.is_term_resized", "curses.isendwin()": "library/curses.html#curses.isendwin", "curses.KEY_A1": "library/curses.html#curses.KEY_A1", "curses.KEY_A3": "library/curses.html#curses.KEY_A3", "curses.KEY_B2": "library/curses.html#curses.KEY_B2", "curses.KEY_BACKSPACE": "library/curses.html#curses.KEY_BACKSPACE", "curses.KEY_BEG": "library/curses.html#curses.KEY_BEG", "curses.KEY_BREAK": "library/curses.html#curses.KEY_BREAK", "curses.KEY_BTAB": "library/curses.html#curses.KEY_BTAB", "curses.KEY_C1": "library/curses.html#curses.KEY_C1", "curses.KEY_C3": "library/curses.html#curses.KEY_C3", "curses.KEY_CANCEL": "library/curses.html#curses.KEY_CANCEL", "curses.KEY_CATAB": "library/curses.html#curses.KEY_CATAB", "curses.KEY_CLEAR": "library/curses.html#curses.KEY_CLEAR", "curses.KEY_CLOSE": "library/curses.html#curses.KEY_CLOSE", "curses.KEY_COMMAND": "library/curses.html#curses.KEY_COMMAND", "curses.KEY_COPY": "library/curses.html#curses.KEY_COPY", "curses.KEY_CREATE": "library/curses.html#curses.KEY_CREATE", "curses.KEY_CTAB": "library/curses.html#curses.KEY_CTAB", "curses.KEY_DC": "library/curses.html#curses.KEY_DC", "curses.KEY_DL": "library/curses.html#curses.KEY_DL", "curses.KEY_DOWN": "library/curses.html#curses.KEY_DOWN", "curses.KEY_EIC": "library/curses.html#curses.KEY_EIC", "curses.KEY_END": "library/curses.html#curses.KEY_END", "curses.KEY_ENTER": "library/curses.html#curses.KEY_ENTER", "curses.KEY_EOL": "library/curses.html#curses.KEY_EOL", "curses.KEY_EOS": "library/curses.html#curses.KEY_EOS", "curses.KEY_EXIT": "library/curses.html#curses.KEY_EXIT", "curses.KEY_F0": "library/curses.html#curses.KEY_F0", "curses.KEY_FIND": "library/curses.html#curses.KEY_FIND", "curses.KEY_Fn": "library/curses.html#curses.KEY_Fn", "curses.KEY_HELP": "library/curses.html#curses.KEY_HELP", "curses.KEY_HOME": "library/curses.html#curses.KEY_HOME", "curses.KEY_IC": "library/curses.html#curses.KEY_IC", "curses.KEY_IL": "library/curses.html#curses.KEY_IL", "curses.KEY_LEFT": "library/curses.html#curses.KEY_LEFT", "curses.KEY_LL": "library/curses.html#curses.KEY_LL", "curses.KEY_MARK": "library/curses.html#curses.KEY_MARK", "curses.KEY_MAX": "library/curses.html#curses.KEY_MAX", "curses.KEY_MESSAGE": "library/curses.html#curses.KEY_MESSAGE", "curses.KEY_MIN": "library/curses.html#curses.KEY_MIN", "curses.KEY_MOUSE": "library/curses.html#curses.KEY_MOUSE", "curses.KEY_MOVE": "library/curses.html#curses.KEY_MOVE", "curses.KEY_NEXT": "library/curses.html#curses.KEY_NEXT", "curses.KEY_NPAGE": "library/curses.html#curses.KEY_NPAGE", "curses.KEY_OPEN": "library/curses.html#curses.KEY_OPEN", "curses.KEY_OPTIONS": "library/curses.html#curses.KEY_OPTIONS", "curses.KEY_PPAGE": "library/curses.html#curses.KEY_PPAGE", "curses.KEY_PREVIOUS": "library/curses.html#curses.KEY_PREVIOUS", "curses.KEY_PRINT": "library/curses.html#curses.KEY_PRINT", "curses.KEY_REDO": "library/curses.html#curses.KEY_REDO", "curses.KEY_REFERENCE": "library/curses.html#curses.KEY_REFERENCE", "curses.KEY_REFRESH": "library/curses.html#curses.KEY_REFRESH", "curses.KEY_REPLACE": "library/curses.html#curses.KEY_REPLACE", "curses.KEY_RESET": "library/curses.html#curses.KEY_RESET", "curses.KEY_RESIZE": "library/curses.html#curses.KEY_RESIZE", "curses.KEY_RESTART": "library/curses.html#curses.KEY_RESTART", "curses.KEY_RESUME": "library/curses.html#curses.KEY_RESUME", "curses.KEY_RIGHT": "library/curses.html#curses.KEY_RIGHT", "curses.KEY_SAVE": "library/curses.html#curses.KEY_SAVE", "curses.KEY_SBEG": "library/curses.html#curses.KEY_SBEG", "curses.KEY_SCANCEL": "library/curses.html#curses.KEY_SCANCEL", "curses.KEY_SCOMMAND": "library/curses.html#curses.KEY_SCOMMAND", "curses.KEY_SCOPY": "library/curses.html#curses.KEY_SCOPY", "curses.KEY_SCREATE": "library/curses.html#curses.KEY_SCREATE", "curses.KEY_SDC": "library/curses.html#curses.KEY_SDC", "curses.KEY_SDL": "library/curses.html#curses.KEY_SDL", "curses.KEY_SELECT": "library/curses.html#curses.KEY_SELECT", "curses.KEY_SEND": "library/curses.html#curses.KEY_SEND", "curses.KEY_SEOL": "library/curses.html#curses.KEY_SEOL", "curses.KEY_SEXIT": "library/curses.html#curses.KEY_SEXIT", "curses.KEY_SF": "library/curses.html#curses.KEY_SF", "curses.KEY_SFIND": "library/curses.html#curses.KEY_SFIND", "curses.KEY_SHELP": "library/curses.html#curses.KEY_SHELP", "curses.KEY_SHOME": "library/curses.html#curses.KEY_SHOME", "curses.KEY_SIC": "library/curses.html#curses.KEY_SIC", "curses.KEY_SLEFT": "library/curses.html#curses.KEY_SLEFT", "curses.KEY_SMESSAGE": "library/curses.html#curses.KEY_SMESSAGE", "curses.KEY_SMOVE": "library/curses.html#curses.KEY_SMOVE", "curses.KEY_SNEXT": "library/curses.html#curses.KEY_SNEXT", "curses.KEY_SOPTIONS": "library/curses.html#curses.KEY_SOPTIONS", "curses.KEY_SPREVIOUS": "library/curses.html#curses.KEY_SPREVIOUS", "curses.KEY_SPRINT": "library/curses.html#curses.KEY_SPRINT", "curses.KEY_SR": "library/curses.html#curses.KEY_SR", "curses.KEY_SREDO": "library/curses.html#curses.KEY_SREDO", "curses.KEY_SREPLACE": "library/curses.html#curses.KEY_SREPLACE", "curses.KEY_SRESET": "library/curses.html#curses.KEY_SRESET", "curses.KEY_SRIGHT": "library/curses.html#curses.KEY_SRIGHT", "curses.KEY_SRSUME": "library/curses.html#curses.KEY_SRSUME", "curses.KEY_SSAVE": "library/curses.html#curses.KEY_SSAVE", "curses.KEY_SSUSPEND": "library/curses.html#curses.KEY_SSUSPEND", "curses.KEY_STAB": "library/curses.html#curses.KEY_STAB", "curses.KEY_SUNDO": "library/curses.html#curses.KEY_SUNDO", "curses.KEY_SUSPEND": "library/curses.html#curses.KEY_SUSPEND", "curses.KEY_UNDO": "library/curses.html#curses.KEY_UNDO", "curses.KEY_UP": "library/curses.html#curses.KEY_UP", "curses.keyname()": "library/curses.html#curses.keyname", "curses.killchar()": "library/curses.html#curses.killchar", "curses.LINES": "library/curses.html#curses.LINES", "curses.longname()": "library/curses.html#curses.longname", "curses.meta()": "library/curses.html#curses.meta", "curses.mouseinterval()": "library/curses.html#curses.mouseinterval", "curses.mousemask()": "library/curses.html#curses.mousemask", "curses.napms()": "library/curses.html#curses.napms", "curses.ncurses_version": "library/curses.html#curses.ncurses_version", "curses.newpad()": "library/curses.html#curses.newpad", "curses.newwin()": "library/curses.html#curses.newwin", "curses.nl()": "library/curses.html#curses.nl", "curses.nocbreak()": "library/curses.html#curses.nocbreak", "curses.noecho()": "library/curses.html#curses.noecho", "curses.nonl()": "library/curses.html#curses.nonl", "curses.noqiflush()": "library/curses.html#curses.noqiflush", "curses.noraw()": "library/curses.html#curses.noraw", "curses.OK": "library/curses.html#curses.OK", "curses.pair_content()": "library/curses.html#curses.pair_content", "curses.pair_number()": "library/curses.html#curses.pair_number", "curses.panel": "library/curses.panel.html", "curses.panel.bottom_panel()": "library/curses.panel.html#curses.panel.bottom_panel", "curses.panel.new_panel()": "library/curses.panel.html#curses.panel.new_panel", "curses.panel.Panel.above()": "library/curses.panel.html#curses.panel.Panel.above", "curses.panel.Panel.below()": "library/curses.panel.html#curses.panel.Panel.below", "curses.panel.Panel.bottom()": "library/curses.panel.html#curses.panel.Panel.bottom", "curses.panel.Panel.hidden()": "library/curses.panel.html#curses.panel.Panel.hidden", "curses.panel.Panel.hide()": "library/curses.panel.html#curses.panel.Panel.hide", "curses.panel.Panel.move()": "library/curses.panel.html#curses.panel.Panel.move", "curses.panel.Panel.replace()": "library/curses.panel.html#curses.panel.Panel.replace", "curses.panel.Panel.set_userptr()": "library/curses.panel.html#curses.panel.Panel.set_userptr", "curses.panel.Panel.show()": "library/curses.panel.html#curses.panel.Panel.show", "curses.panel.Panel.top()": "library/curses.panel.html#curses.panel.Panel.top", "curses.panel.Panel.userptr()": "library/curses.panel.html#curses.panel.Panel.userptr", "curses.panel.Panel.window()": "library/curses.panel.html#curses.panel.Panel.window", "curses.panel.top_panel()": "library/curses.panel.html#curses.panel.top_panel", "curses.panel.update_panels()": "library/curses.panel.html#curses.panel.update_panels", "curses.putp()": "library/curses.html#curses.putp", "curses.qiflush()": "library/curses.html#curses.qiflush", "curses.raw()": "library/curses.html#curses.raw", "curses.reset_prog_mode()": "library/curses.html#curses.reset_prog_mode", "curses.reset_shell_mode()": "library/curses.html#curses.reset_shell_mode", "curses.resetty()": "library/curses.html#curses.resetty", "curses.resize_term()": "library/curses.html#curses.resize_term", "curses.resizeterm()": "library/curses.html#curses.resizeterm", "curses.savetty()": "library/curses.html#curses.savetty", "curses.set_escdelay()": "library/curses.html#curses.set_escdelay", "curses.set_tabsize()": "library/curses.html#curses.set_tabsize", "curses.setsyx()": "library/curses.html#curses.setsyx", "curses.setupterm()": "library/curses.html#curses.setupterm", "curses.start_color()": "library/curses.html#curses.start_color", "curses.termattrs()": "library/curses.html#curses.termattrs", "curses.termname()": "library/curses.html#curses.termname", "curses.textpad.rectangle()": "library/curses.html#curses.textpad.rectangle", "curses.textpad.Textbox": "library/curses.html#curses.textpad.Textbox", "curses.textpad.Textbox.do_command()": "library/curses.html#curses.textpad.Textbox.do_command", "curses.textpad.Textbox.edit()": "library/curses.html#curses.textpad.Textbox.edit", "curses.textpad.Textbox.gather()": "library/curses.html#curses.textpad.Textbox.gather", "curses.textpad.Textbox.stripspaces": "library/curses.html#curses.textpad.Textbox.stripspaces", "curses.tigetflag()": "library/curses.html#curses.tigetflag", "curses.tigetnum()": "library/curses.html#curses.tigetnum", "curses.tigetstr()": "library/curses.html#curses.tigetstr", "curses.tparm()": "library/curses.html#curses.tparm", "curses.typeahead()": "library/curses.html#curses.typeahead", "curses.unctrl()": "library/curses.html#curses.unctrl", "curses.unget_wch()": "library/curses.html#curses.unget_wch", "curses.ungetch()": "library/curses.html#curses.ungetch", "curses.ungetmouse()": "library/curses.html#curses.ungetmouse", "curses.update_lines_cols()": "library/curses.html#curses.update_lines_cols", "curses.use_default_colors()": "library/curses.html#curses.use_default_colors", "curses.use_env()": "library/curses.html#curses.use_env", "curses.version": "library/curses.html#curses.version", "curses.window.addch()": "library/curses.html#curses.window.addch", "curses.window.addnstr()": "library/curses.html#curses.window.addnstr", "curses.window.addstr()": "library/curses.html#curses.window.addstr", "curses.window.attroff()": "library/curses.html#curses.window.attroff", "curses.window.attron()": "library/curses.html#curses.window.attron", "curses.window.attrset()": "library/curses.html#curses.window.attrset", "curses.window.bkgd()": "library/curses.html#curses.window.bkgd", "curses.window.bkgdset()": "library/curses.html#curses.window.bkgdset", "curses.window.border()": "library/curses.html#curses.window.border", "curses.window.box()": "library/curses.html#curses.window.box", "curses.window.chgat()": "library/curses.html#curses.window.chgat", "curses.window.clear()": "library/curses.html#curses.window.clear", "curses.window.clearok()": "library/curses.html#curses.window.clearok", "curses.window.clrtobot()": "library/curses.html#curses.window.clrtobot", "curses.window.clrtoeol()": "library/curses.html#curses.window.clrtoeol", "curses.window.cursyncup()": "library/curses.html#curses.window.cursyncup", "curses.window.delch()": "library/curses.html#curses.window.delch", "curses.window.deleteln()": "library/curses.html#curses.window.deleteln", "curses.window.derwin()": "library/curses.html#curses.window.derwin", "curses.window.echochar()": "library/curses.html#curses.window.echochar", "curses.window.enclose()": "library/curses.html#curses.window.enclose", "curses.window.encoding": "library/curses.html#curses.window.encoding", "curses.window.erase()": "library/curses.html#curses.window.erase", "curses.window.get_wch()": "library/curses.html#curses.window.get_wch", "curses.window.getbegyx()": "library/curses.html#curses.window.getbegyx", "curses.window.getbkgd()": "library/curses.html#curses.window.getbkgd", "curses.window.getch()": "library/curses.html#curses.window.getch", "curses.window.getkey()": "library/curses.html#curses.window.getkey", "curses.window.getmaxyx()": "library/curses.html#curses.window.getmaxyx", "curses.window.getparyx()": "library/curses.html#curses.window.getparyx", "curses.window.getstr()": "library/curses.html#curses.window.getstr", "curses.window.getyx()": "library/curses.html#curses.window.getyx", "curses.window.hline()": "library/curses.html#curses.window.hline", "curses.window.idcok()": "library/curses.html#curses.window.idcok", "curses.window.idlok()": "library/curses.html#curses.window.idlok", "curses.window.immedok()": "library/curses.html#curses.window.immedok", "curses.window.inch()": "library/curses.html#curses.window.inch", "curses.window.insch()": "library/curses.html#curses.window.insch", "curses.window.insdelln()": "library/curses.html#curses.window.insdelln", "curses.window.insertln()": "library/curses.html#curses.window.insertln", "curses.window.insnstr()": "library/curses.html#curses.window.insnstr", "curses.window.insstr()": "library/curses.html#curses.window.insstr", "curses.window.instr()": "library/curses.html#curses.window.instr", "curses.window.is_linetouched()": "library/curses.html#curses.window.is_linetouched", "curses.window.is_wintouched()": "library/curses.html#curses.window.is_wintouched", "curses.window.keypad()": "library/curses.html#curses.window.keypad", "curses.window.leaveok()": "library/curses.html#curses.window.leaveok", "curses.window.move()": "library/curses.html#curses.window.move", "curses.window.mvderwin()": "library/curses.html#curses.window.mvderwin", "curses.window.mvwin()": "library/curses.html#curses.window.mvwin", "curses.window.nodelay()": "library/curses.html#curses.window.nodelay", "curses.window.notimeout()": "library/curses.html#curses.window.notimeout", "curses.window.noutrefresh()": "library/curses.html#curses.window.noutrefresh", "curses.window.overlay()": "library/curses.html#curses.window.overlay", "curses.window.overwrite()": "library/curses.html#curses.window.overwrite", "curses.window.putwin()": "library/curses.html#curses.window.putwin", "curses.window.redrawln()": "library/curses.html#curses.window.redrawln", "curses.window.redrawwin()": "library/curses.html#curses.window.redrawwin", "curses.window.refresh()": "library/curses.html#curses.window.refresh", "curses.window.resize()": "library/curses.html#curses.window.resize", "curses.window.scroll()": "library/curses.html#curses.window.scroll", "curses.window.scrollok()": "library/curses.html#curses.window.scrollok", "curses.window.setscrreg()": "library/curses.html#curses.window.setscrreg", "curses.window.standend()": "library/curses.html#curses.window.standend", "curses.window.standout()": "library/curses.html#curses.window.standout", "curses.window.subpad()": "library/curses.html#curses.window.subpad", "curses.window.subwin()": "library/curses.html#curses.window.subwin", "curses.window.syncdown()": "library/curses.html#curses.window.syncdown", "curses.window.syncok()": "library/curses.html#curses.window.syncok", "curses.window.syncup()": "library/curses.html#curses.window.syncup", "curses.window.timeout()": "library/curses.html#curses.window.timeout", "curses.window.touchline()": "library/curses.html#curses.window.touchline", "curses.window.touchwin()": "library/curses.html#curses.window.touchwin", "curses.window.untouchwin()": "library/curses.html#curses.window.untouchwin", "curses.window.vline()": "library/curses.html#curses.window.vline", "curses.wrapper()": "library/curses.html#curses.wrapper", "Custom Exceptions (ipaddress)": "library/ipaddress.html#custom-exceptions", "Custom Policies (Policies)": "library/asyncio-policy.html#custom-policies", "Custom Python Interpreters": "library/custominterp.html", "Custom Reduction for Types, Functions, and Other Objects (pickle)": "library/pickle.html#custom-reduction-for-types-functions-and-other-objects", "Custom String Formatting (string)": "library/string.html#custom-string-formatting", "Customizing Parser Behaviour (configparser)": "library/configparser.html#customizing-parser-behaviour", "dangling (else)": "reference/compound_stmts.html#index-2", "Data Compression and Archiving": "library/archiving.html", "Data marshalling support": "c-api/marshal.html", "Data Persistence": "library/persistence.html", "Data sources (zoneinfo)": "library/zoneinfo.html#data-sources", "Data stream format (pickle)": "library/pickle.html#data-stream-format", "Data Types": "library/datatypes.html", "Data Types (enum)": "library/enum.html#data-types", "dataclasses": "library/dataclasses.html", "dataclasses.__post_init__()": "library/dataclasses.html#dataclasses.__post_init__", "dataclasses.asdict()": "library/dataclasses.html#dataclasses.asdict", "dataclasses.astuple()": "library/dataclasses.html#dataclasses.astuple", "dataclasses.dataclass()": "library/dataclasses.html#dataclasses.dataclass", "dataclasses.Field": "library/dataclasses.html#dataclasses.Field", "dataclasses.field()": "library/dataclasses.html#dataclasses.field", "dataclasses.fields()": "library/dataclasses.html#dataclasses.fields", "dataclasses.FrozenInstanceError": "library/dataclasses.html#dataclasses.FrozenInstanceError", "dataclasses.is_dataclass()": "library/dataclasses.html#dataclasses.is_dataclass", "dataclasses.KW_ONLY": "library/dataclasses.html#dataclasses.KW_ONLY", "dataclasses.make_dataclass()": "library/dataclasses.html#dataclasses.make_dataclass", "dataclasses.MISSING": "library/dataclasses.html#dataclasses.MISSING", "dataclasses.replace()": "library/dataclasses.html#dataclasses.replace", "DatagramHandler (logging.handlers)": "library/logging.handlers.html#datagramhandler", "DataHandler Objects (urllib.request)": "library/urllib.request.html#datahandler-objects", "date Objects (datetime)": "library/datetime.html#date-objects", "datetime": "library/datetime.html", "DateTime Objects": "c-api/datetime.html", "datetime Objects (datetime)": "library/datetime.html#datetime-objects", "DateTime Objects (xmlrpc.client)": "library/xmlrpc.client.html#datetime-objects", "datetime.date": "library/datetime.html#datetime.date", "datetime.date.__format__()": "library/datetime.html#datetime.date.__format__", "datetime.date.__str__()": "library/datetime.html#datetime.date.__str__", "datetime.date.ctime()": "library/datetime.html#datetime.date.ctime", "datetime.date.day": "library/datetime.html#datetime.date.day", "datetime.date.fromisocalendar()": "library/datetime.html#datetime.date.fromisocalendar", "datetime.date.fromisoformat()": "library/datetime.html#datetime.date.fromisoformat", "datetime.date.fromordinal()": "library/datetime.html#datetime.date.fromordinal", "datetime.date.fromtimestamp()": "library/datetime.html#datetime.date.fromtimestamp", "datetime.date.isocalendar()": "library/datetime.html#datetime.date.isocalendar", "datetime.date.isoformat()": "library/datetime.html#datetime.date.isoformat", "datetime.date.isoweekday()": "library/datetime.html#datetime.date.isoweekday", "datetime.date.max": "library/datetime.html#datetime.date.max", "datetime.date.min": "library/datetime.html#datetime.date.min", "datetime.date.month": "library/datetime.html#datetime.date.month", "datetime.date.replace()": "library/datetime.html#datetime.date.replace", "datetime.date.resolution": "library/datetime.html#datetime.date.resolution", "datetime.date.strftime()": "library/datetime.html#datetime.date.strftime", "datetime.date.timetuple()": "library/datetime.html#datetime.date.timetuple", "datetime.date.today()": "library/datetime.html#datetime.date.today", "datetime.date.toordinal()": "library/datetime.html#datetime.date.toordinal", "datetime.date.weekday()": "library/datetime.html#datetime.date.weekday", "datetime.date.year": "library/datetime.html#datetime.date.year", "datetime.datetime": "library/datetime.html#datetime.datetime", "datetime.datetime.__format__()": "library/datetime.html#datetime.datetime.__format__", "datetime.datetime.__str__()": "library/datetime.html#datetime.datetime.__str__", "datetime.datetime.astimezone()": "library/datetime.html#datetime.datetime.astimezone", "datetime.datetime.combine()": "library/datetime.html#datetime.datetime.combine", "datetime.datetime.ctime()": "library/datetime.html#datetime.datetime.ctime", "datetime.datetime.date()": "library/datetime.html#datetime.datetime.date", "datetime.datetime.day": "library/datetime.html#datetime.datetime.day", "datetime.datetime.dst()": "library/datetime.html#datetime.datetime.dst", "datetime.datetime.fold": "library/datetime.html#datetime.datetime.fold", "datetime.datetime.fromisocalendar()": "library/datetime.html#datetime.datetime.fromisocalendar", "datetime.datetime.fromisoformat()": "library/datetime.html#datetime.datetime.fromisoformat", "datetime.datetime.fromordinal()": "library/datetime.html#datetime.datetime.fromordinal", "datetime.datetime.fromtimestamp()": "library/datetime.html#datetime.datetime.fromtimestamp", "datetime.datetime.hour": "library/datetime.html#datetime.datetime.hour", "datetime.datetime.isocalendar()": "library/datetime.html#datetime.datetime.isocalendar", "datetime.datetime.isoformat()": "library/datetime.html#datetime.datetime.isoformat", "datetime.datetime.isoweekday()": "library/datetime.html#datetime.datetime.isoweekday", "datetime.datetime.max": "library/datetime.html#datetime.datetime.max", "datetime.datetime.microsecond": "library/datetime.html#datetime.datetime.microsecond", "datetime.datetime.min": "library/datetime.html#datetime.datetime.min", "datetime.datetime.minute": "library/datetime.html#datetime.datetime.minute", "datetime.datetime.month": "library/datetime.html#datetime.datetime.month", "datetime.datetime.now()": "library/datetime.html#datetime.datetime.now", "datetime.datetime.replace()": "library/datetime.html#datetime.datetime.replace", "datetime.datetime.resolution": "library/datetime.html#datetime.datetime.resolution", "datetime.datetime.second": "library/datetime.html#datetime.datetime.second", "datetime.datetime.strftime()": "library/datetime.html#datetime.datetime.strftime", "datetime.datetime.strptime()": "library/datetime.html#datetime.datetime.strptime", "datetime.datetime.time()": "library/datetime.html#datetime.datetime.time", "datetime.datetime.timestamp()": "library/datetime.html#datetime.datetime.timestamp", "datetime.datetime.timetuple()": "library/datetime.html#datetime.datetime.timetuple", "datetime.datetime.timetz()": "library/datetime.html#datetime.datetime.timetz", "datetime.datetime.today()": "library/datetime.html#datetime.datetime.today", "datetime.datetime.toordinal()": "library/datetime.html#datetime.datetime.toordinal", "datetime.datetime.tzinfo": "library/datetime.html#datetime.datetime.tzinfo", "datetime.datetime.tzname()": "library/datetime.html#datetime.datetime.tzname", "datetime.datetime.utcfromtimestamp()": "library/datetime.html#datetime.datetime.utcfromtimestamp", "datetime.datetime.utcnow()": "library/datetime.html#datetime.datetime.utcnow", "datetime.datetime.utcoffset()": "library/datetime.html#datetime.datetime.utcoffset", "datetime.datetime.utctimetuple()": "library/datetime.html#datetime.datetime.utctimetuple", "datetime.datetime.weekday()": "library/datetime.html#datetime.datetime.weekday", "datetime.datetime.year": "library/datetime.html#datetime.datetime.year", "datetime.MAXYEAR": "library/datetime.html#datetime.MAXYEAR", "datetime.MINYEAR": "library/datetime.html#datetime.MINYEAR", "datetime.time": "library/datetime.html#datetime.time", "datetime.time.__format__()": "library/datetime.html#datetime.time.__format__", "datetime.time.__str__()": "library/datetime.html#datetime.time.__str__", "datetime.time.dst()": "library/datetime.html#datetime.time.dst", "datetime.time.fold": "library/datetime.html#datetime.time.fold", "datetime.time.fromisoformat()": "library/datetime.html#datetime.time.fromisoformat", "datetime.time.hour": "library/datetime.html#datetime.time.hour", "datetime.time.isoformat()": "library/datetime.html#datetime.time.isoformat", "datetime.time.max": "library/datetime.html#datetime.time.max", "datetime.time.microsecond": "library/datetime.html#datetime.time.microsecond", "datetime.time.min": "library/datetime.html#datetime.time.min", "datetime.time.minute": "library/datetime.html#datetime.time.minute", "datetime.time.replace()": "library/datetime.html#datetime.time.replace", "datetime.time.resolution": "library/datetime.html#datetime.time.resolution", "datetime.time.second": "library/datetime.html#datetime.time.second", "datetime.time.strftime()": "library/datetime.html#datetime.time.strftime", "datetime.time.tzinfo": "library/datetime.html#datetime.time.tzinfo", "datetime.time.tzname()": "library/datetime.html#datetime.time.tzname", "datetime.time.utcoffset()": "library/datetime.html#datetime.time.utcoffset", "datetime.timedelta": "library/datetime.html#datetime.timedelta", "datetime.timedelta.max": "library/datetime.html#datetime.timedelta.max", "datetime.timedelta.min": "library/datetime.html#datetime.timedelta.min", "datetime.timedelta.resolution": "library/datetime.html#datetime.timedelta.resolution", "datetime.timedelta.total_seconds()": "library/datetime.html#datetime.timedelta.total_seconds", "datetime.timezone": "library/datetime.html#datetime.timezone", "datetime.timezone.dst()": "library/datetime.html#datetime.timezone.dst", "datetime.timezone.fromutc()": "library/datetime.html#datetime.timezone.fromutc", "datetime.timezone.tzname()": "library/datetime.html#datetime.timezone.tzname", "datetime.timezone.utc": "library/datetime.html#datetime.timezone.utc", "datetime.timezone.utcoffset()": "library/datetime.html#datetime.timezone.utcoffset", "datetime.tzinfo": "library/datetime.html#datetime.tzinfo", "datetime.tzinfo.dst()": "library/datetime.html#datetime.tzinfo.dst", "datetime.tzinfo.fromutc()": "library/datetime.html#datetime.tzinfo.fromutc", "datetime.tzinfo.tzname()": "library/datetime.html#datetime.tzinfo.tzname", "datetime.tzinfo.utcoffset()": "library/datetime.html#datetime.tzinfo.utcoffset", "datetime.UTC": "library/datetime.html#datetime.UTC", "dbm": "library/dbm.html", "dbm.dumb \u2014 Portable DBM implementation (dbm)": "library/dbm.html#module-dbm.dumb", "dbm.dumb.dumbdbm.close()": "library/dbm.html#dbm.dumb.dumbdbm.close", "dbm.dumb.dumbdbm.sync()": "library/dbm.html#dbm.dumb.dumbdbm.sync", "dbm.dumb.error": "library/dbm.html#dbm.dumb.error", "dbm.dumb.open()": "library/dbm.html#dbm.dumb.open", "dbm.error": "library/dbm.html#dbm.error", "dbm.gnu \u2014 GNU database manager (dbm)": "library/dbm.html#module-dbm.gnu", "dbm.gnu.error": "library/dbm.html#dbm.gnu.error", "dbm.gnu.gdbm.clear()": "library/dbm.html#dbm.gnu.gdbm.clear", "dbm.gnu.gdbm.close()": "library/dbm.html#dbm.gnu.gdbm.close", "dbm.gnu.gdbm.firstkey()": "library/dbm.html#dbm.gnu.gdbm.firstkey", "dbm.gnu.gdbm.nextkey()": "library/dbm.html#dbm.gnu.gdbm.nextkey", "dbm.gnu.gdbm.reorganize()": "library/dbm.html#dbm.gnu.gdbm.reorganize", "dbm.gnu.gdbm.sync()": "library/dbm.html#dbm.gnu.gdbm.sync", "dbm.gnu.open()": "library/dbm.html#dbm.gnu.open", "dbm.gnu.open_flags": "library/dbm.html#dbm.gnu.open_flags", "dbm.ndbm \u2014 New Database Manager (dbm)": "library/dbm.html#module-dbm.ndbm", "dbm.ndbm.error": "library/dbm.html#dbm.ndbm.error", "dbm.ndbm.library": "library/dbm.html#dbm.ndbm.library", "dbm.ndbm.ndbm.clear()": "library/dbm.html#dbm.ndbm.ndbm.clear", "dbm.ndbm.ndbm.close()": "library/dbm.html#dbm.ndbm.ndbm.close", "dbm.ndbm.open()": "library/dbm.html#dbm.ndbm.open", "dbm.open()": "library/dbm.html#dbm.open", "dbm.sqlite3 \u2014 SQLite backend for dbm (dbm)": "library/dbm.html#module-dbm.sqlite3", "dbm.sqlite3.open()": "library/dbm.html#dbm.sqlite3.open", "dbm.whichdb()": "library/dbm.html#dbm.whichdb", "Dealing with Bugs": "bugs.html", "Debug Mode (Developing with asyncio)": "library/asyncio-dev.html#debug-mode", "debug__": "library/constants.html#debug__", "Debugger Commands (pdb)": "library/pdb.html#debugger-commands", "Debugging (doctest)": "library/doctest.html#debugging", "Debugging and Profiling": "library/debug.html", "Debugging C API extensions and CPython Internals with GDB": "howto/gdb_helpers.html", "decimal": "library/decimal.html", "Decimal FAQ (decimal)": "library/decimal.html#decimal-faq", "Decimal objects (decimal)": "library/decimal.html#decimal-objects", "decimal.BasicContext": "library/decimal.html#decimal.BasicContext", "decimal.Clamped": "library/decimal.html#decimal.Clamped", "decimal.Context": "library/decimal.html#decimal.Context", "decimal.Context.abs()": "library/decimal.html#decimal.Context.abs", "decimal.Context.add()": "library/decimal.html#decimal.Context.add", "decimal.Context.canonical()": "library/decimal.html#decimal.Context.canonical", "decimal.Context.clear_flags()": "library/decimal.html#decimal.Context.clear_flags", "decimal.Context.clear_traps()": "library/decimal.html#decimal.Context.clear_traps", "decimal.Context.compare()": "library/decimal.html#decimal.Context.compare", "decimal.Context.compare_signal()": "library/decimal.html#decimal.Context.compare_signal", "decimal.Context.compare_total()": "library/decimal.html#decimal.Context.compare_total", "decimal.Context.compare_total_mag()": "library/decimal.html#decimal.Context.compare_total_mag", "decimal.Context.copy()": "library/decimal.html#decimal.Context.copy", "decimal.Context.copy_abs()": "library/decimal.html#decimal.Context.copy_abs", "decimal.Context.copy_decimal()": "library/decimal.html#decimal.Context.copy_decimal", "decimal.Context.copy_negate()": "library/decimal.html#decimal.Context.copy_negate", "decimal.Context.copy_sign()": "library/decimal.html#decimal.Context.copy_sign", "decimal.Context.create_decimal()": "library/decimal.html#decimal.Context.create_decimal", "decimal.Context.create_decimal_from_float()": "library/decimal.html#decimal.Context.create_decimal_from_float", "decimal.Context.divide()": "library/decimal.html#decimal.Context.divide", "decimal.Context.divide_int()": "library/decimal.html#decimal.Context.divide_int", "decimal.Context.divmod()": "library/decimal.html#decimal.Context.divmod", "decimal.Context.Etiny()": "library/decimal.html#decimal.Context.Etiny", "decimal.Context.Etop()": "library/decimal.html#decimal.Context.Etop", "decimal.Context.exp()": "library/decimal.html#decimal.Context.exp", "decimal.Context.fma()": "library/decimal.html#decimal.Context.fma", "decimal.Context.is_canonical()": "library/decimal.html#decimal.Context.is_canonical", "decimal.Context.is_finite()": "library/decimal.html#decimal.Context.is_finite", "decimal.Context.is_infinite()": "library/decimal.html#decimal.Context.is_infinite", "decimal.Context.is_nan()": "library/decimal.html#decimal.Context.is_nan", "decimal.Context.is_normal()": "library/decimal.html#decimal.Context.is_normal", "decimal.Context.is_qnan()": "library/decimal.html#decimal.Context.is_qnan", "decimal.Context.is_signed()": "library/decimal.html#decimal.Context.is_signed", "decimal.Context.is_snan()": "library/decimal.html#decimal.Context.is_snan", "decimal.Context.is_subnormal()": "library/decimal.html#decimal.Context.is_subnormal", "decimal.Context.is_zero()": "library/decimal.html#decimal.Context.is_zero", "decimal.Context.ln()": "library/decimal.html#decimal.Context.ln", "decimal.Context.log10()": "library/decimal.html#decimal.Context.log10", "decimal.Context.logb()": "library/decimal.html#decimal.Context.logb", "decimal.Context.logical_and()": "library/decimal.html#decimal.Context.logical_and", "decimal.Context.logical_invert()": "library/decimal.html#decimal.Context.logical_invert", "decimal.Context.logical_or()": "library/decimal.html#decimal.Context.logical_or", "decimal.Context.logical_xor()": "library/decimal.html#decimal.Context.logical_xor", "decimal.Context.max()": "library/decimal.html#decimal.Context.max", "decimal.Context.max_mag()": "library/decimal.html#decimal.Context.max_mag", "decimal.Context.min()": "library/decimal.html#decimal.Context.min", "decimal.Context.min_mag()": "library/decimal.html#decimal.Context.min_mag", "decimal.Context.minus()": "library/decimal.html#decimal.Context.minus", "decimal.Context.multiply()": "library/decimal.html#decimal.Context.multiply", "decimal.Context.next_minus()": "library/decimal.html#decimal.Context.next_minus", "decimal.Context.next_plus()": "library/decimal.html#decimal.Context.next_plus", "decimal.Context.next_toward()": "library/decimal.html#decimal.Context.next_toward", "decimal.Context.normalize()": "library/decimal.html#decimal.Context.normalize", "decimal.Context.number_class()": "library/decimal.html#decimal.Context.number_class", "decimal.Context.plus()": "library/decimal.html#decimal.Context.plus", "decimal.Context.power()": "library/decimal.html#decimal.Context.power", "decimal.Context.quantize()": "library/decimal.html#decimal.Context.quantize", "decimal.Context.radix()": "library/decimal.html#decimal.Context.radix", "decimal.Context.remainder()": "library/decimal.html#decimal.Context.remainder", "decimal.Context.remainder_near()": "library/decimal.html#decimal.Context.remainder_near", "decimal.Context.rotate()": "library/decimal.html#decimal.Context.rotate", "decimal.Context.same_quantum()": "library/decimal.html#decimal.Context.same_quantum", "decimal.Context.scaleb()": "library/decimal.html#decimal.Context.scaleb", "decimal.Context.shift()": "library/decimal.html#decimal.Context.shift", "decimal.Context.sqrt()": "library/decimal.html#decimal.Context.sqrt", "decimal.Context.subtract()": "library/decimal.html#decimal.Context.subtract", "decimal.Context.to_eng_string()": "library/decimal.html#decimal.Context.to_eng_string", "decimal.Context.to_integral_exact()": "library/decimal.html#decimal.Context.to_integral_exact", "decimal.Context.to_sci_string()": "library/decimal.html#decimal.Context.to_sci_string", "decimal.Decimal": "library/decimal.html#decimal.Decimal", "decimal.Decimal.adjusted()": "library/decimal.html#decimal.Decimal.adjusted", "decimal.Decimal.as_integer_ratio()": "library/decimal.html#decimal.Decimal.as_integer_ratio", "decimal.Decimal.as_tuple()": "library/decimal.html#decimal.Decimal.as_tuple", "decimal.Decimal.canonical()": "library/decimal.html#decimal.Decimal.canonical", "decimal.Decimal.compare()": "library/decimal.html#decimal.Decimal.compare", "decimal.Decimal.compare_signal()": "library/decimal.html#decimal.Decimal.compare_signal", "decimal.Decimal.compare_total()": "library/decimal.html#decimal.Decimal.compare_total", "decimal.Decimal.compare_total_mag()": "library/decimal.html#decimal.Decimal.compare_total_mag", "decimal.Decimal.conjugate()": "library/decimal.html#decimal.Decimal.conjugate", "decimal.Decimal.copy_abs()": "library/decimal.html#decimal.Decimal.copy_abs", "decimal.Decimal.copy_negate()": "library/decimal.html#decimal.Decimal.copy_negate", "decimal.Decimal.copy_sign()": "library/decimal.html#decimal.Decimal.copy_sign", "decimal.Decimal.exp()": "library/decimal.html#decimal.Decimal.exp", "decimal.Decimal.fma()": "library/decimal.html#decimal.Decimal.fma", "decimal.Decimal.from_float()": "library/decimal.html#decimal.Decimal.from_float", "decimal.Decimal.is_canonical()": "library/decimal.html#decimal.Decimal.is_canonical", "decimal.Decimal.is_finite()": "library/decimal.html#decimal.Decimal.is_finite", "decimal.Decimal.is_infinite()": "library/decimal.html#decimal.Decimal.is_infinite", "decimal.Decimal.is_nan()": "library/decimal.html#decimal.Decimal.is_nan", "decimal.Decimal.is_normal()": "library/decimal.html#decimal.Decimal.is_normal", "decimal.Decimal.is_qnan()": "library/decimal.html#decimal.Decimal.is_qnan", "decimal.Decimal.is_signed()": "library/decimal.html#decimal.Decimal.is_signed", "decimal.Decimal.is_snan()": "library/decimal.html#decimal.Decimal.is_snan", "decimal.Decimal.is_subnormal()": "library/decimal.html#decimal.Decimal.is_subnormal", "decimal.Decimal.is_zero()": "library/decimal.html#decimal.Decimal.is_zero", "decimal.Decimal.ln()": "library/decimal.html#decimal.Decimal.ln", "decimal.Decimal.log10()": "library/decimal.html#decimal.Decimal.log10", "decimal.Decimal.logb()": "library/decimal.html#decimal.Decimal.logb", "decimal.Decimal.logical_and()": "library/decimal.html#decimal.Decimal.logical_and", "decimal.Decimal.logical_invert()": "library/decimal.html#decimal.Decimal.logical_invert", "decimal.Decimal.logical_or()": "library/decimal.html#decimal.Decimal.logical_or", "decimal.Decimal.logical_xor()": "library/decimal.html#decimal.Decimal.logical_xor", "decimal.Decimal.max()": "library/decimal.html#decimal.Decimal.max", "decimal.Decimal.max_mag()": "library/decimal.html#decimal.Decimal.max_mag", "decimal.Decimal.min()": "library/decimal.html#decimal.Decimal.min", "decimal.Decimal.min_mag()": "library/decimal.html#decimal.Decimal.min_mag", "decimal.Decimal.next_minus()": "library/decimal.html#decimal.Decimal.next_minus", "decimal.Decimal.next_plus()": "library/decimal.html#decimal.Decimal.next_plus", "decimal.Decimal.next_toward()": "library/decimal.html#decimal.Decimal.next_toward", "decimal.Decimal.normalize()": "library/decimal.html#decimal.Decimal.normalize", "decimal.Decimal.number_class()": "library/decimal.html#decimal.Decimal.number_class", "decimal.Decimal.quantize()": "library/decimal.html#decimal.Decimal.quantize", "decimal.Decimal.radix()": "library/decimal.html#decimal.Decimal.radix", "decimal.Decimal.remainder_near()": "library/decimal.html#decimal.Decimal.remainder_near", "decimal.Decimal.rotate()": "library/decimal.html#decimal.Decimal.rotate", "decimal.Decimal.same_quantum()": "library/decimal.html#decimal.Decimal.same_quantum", "decimal.Decimal.scaleb()": "library/decimal.html#decimal.Decimal.scaleb", "decimal.Decimal.shift()": "library/decimal.html#decimal.Decimal.shift", "decimal.Decimal.sqrt()": "library/decimal.html#decimal.Decimal.sqrt", "decimal.Decimal.to_eng_string()": "library/decimal.html#decimal.Decimal.to_eng_string", "decimal.Decimal.to_integral()": "library/decimal.html#decimal.Decimal.to_integral", "decimal.Decimal.to_integral_exact()": "library/decimal.html#decimal.Decimal.to_integral_exact", "decimal.Decimal.to_integral_value()": "library/decimal.html#decimal.Decimal.to_integral_value", "decimal.DecimalException": "library/decimal.html#decimal.DecimalException", "decimal.DefaultContext": "library/decimal.html#decimal.DefaultContext", "decimal.DivisionByZero": "library/decimal.html#decimal.DivisionByZero", "decimal.ExtendedContext": "library/decimal.html#decimal.ExtendedContext", "decimal.FloatOperation": "library/decimal.html#decimal.FloatOperation", "decimal.getcontext()": "library/decimal.html#decimal.getcontext", "decimal.HAVE_CONTEXTVAR": "library/decimal.html#decimal.HAVE_CONTEXTVAR", "decimal.HAVE_THREADS": "library/decimal.html#decimal.HAVE_THREADS", "decimal.Inexact": "library/decimal.html#decimal.Inexact", "decimal.InvalidOperation": "library/decimal.html#decimal.InvalidOperation", "decimal.localcontext()": "library/decimal.html#decimal.localcontext", "decimal.MAX_EMAX": "library/decimal.html#decimal.MAX_EMAX", "decimal.MAX_PREC": "library/decimal.html#decimal.MAX_PREC", "decimal.MIN_EMIN": "library/decimal.html#decimal.MIN_EMIN", "decimal.MIN_ETINY": "library/decimal.html#decimal.MIN_ETINY", "decimal.Overflow": "library/decimal.html#decimal.Overflow", "decimal.ROUND_05UP": "library/decimal.html#decimal.ROUND_05UP", "decimal.ROUND_CEILING": "library/decimal.html#decimal.ROUND_CEILING", "decimal.ROUND_DOWN": "library/decimal.html#decimal.ROUND_DOWN", "decimal.ROUND_FLOOR": "library/decimal.html#decimal.ROUND_FLOOR", "decimal.ROUND_HALF_DOWN": "library/decimal.html#decimal.ROUND_HALF_DOWN", "decimal.ROUND_HALF_EVEN": "library/decimal.html#decimal.ROUND_HALF_EVEN", "decimal.ROUND_HALF_UP": "library/decimal.html#decimal.ROUND_HALF_UP", "decimal.ROUND_UP": "library/decimal.html#decimal.ROUND_UP", "decimal.Rounded": "library/decimal.html#decimal.Rounded", "decimal.setcontext()": "library/decimal.html#decimal.setcontext", "decimal.Subnormal": "library/decimal.html#decimal.Subnormal", "decimal.Underflow": "library/decimal.html#decimal.Underflow", "Decompression pitfalls (zipfile)": "library/zipfile.html#decompression-pitfalls", "decorator": "glossary.html#term-decorator", "def (statement)": "reference/compound_stmts.html#index-28", "default (parameter value)": "reference/compound_stmts.html#index-31", "Default factory functions (dataclasses)": "library/dataclasses.html#default-factory-functions", "DefaultCookiePolicy Objects (http.cookiejar)": "library/http.cookiejar.html#defaultcookiepolicy-objects", "defaultdict objects (collections)": "library/collections.html#defaultdict-objects", "Defining Extension Types: Assorted Topics": "extending/newtypes.html", "Defining Extension Types: Tutorial": "extending/newtypes_tutorial.html", "definition (class)": "reference/compound_stmts.html#index-42", "definition (function)": "reference/compound_stmts.html#index-28", "definition.__name__": "library/stdtypes.html#definition.__name__", "definition.__qualname__": "library/stdtypes.html#definition.__qualname__", "definition.__type_params__": "library/stdtypes.html#definition.__type_params__", "del (statement)": "reference/simple_stmts.html#index-21", "delattr()": "library/functions.html#delattr", "deletion (attribute)": "reference/simple_stmts.html#index-23", "deletion (target list)": "reference/simple_stmts.html#index-21", "deletion (target)": "reference/simple_stmts.html#index-21", "Deprecated functions and variables (tempfile)": "library/tempfile.html#deprecated-functions-and-variables", "Deprecation Timeline of Major Features (typing)": "library/typing.html#deprecation-timeline-of-major-features", "Deprecations": "deprecations/index.html", "DeprecationWarning": "library/exceptions.html#DeprecationWarning", "deque objects (collections)": "library/collections.html#deque-objects", "descriptor": "glossary.html#term-descriptor", "Descriptor Guide": "howto/descriptor.html", "Descriptor Objects": "c-api/descriptor.html", "Descriptor-typed fields (dataclasses)": "library/dataclasses.html#descriptor-typed-fields", "Design and History FAQ": "faq/design.html", "Detect never-awaited coroutines (Developing with asyncio)": "library/asyncio-dev.html#detect-never-awaited-coroutines", "Detect never-retrieved exceptions (Developing with asyncio)": "library/asyncio-dev.html#detect-never-retrieved-exceptions", "Developing with asyncio": "library/asyncio-dev.html", "Development Tools": "library/development.html", "Dialects and Formatting Parameters (csv)": "library/csv.html#dialects-and-formatting-parameters", "dict": "library/stdtypes.html#dict", "dict.clear()": "library/stdtypes.html#dict.clear", "dict.copy()": "library/stdtypes.html#dict.copy", "dict.fromkeys()": "library/stdtypes.html#dict.fromkeys", "dict.get()": "library/stdtypes.html#dict.get", "dict.items()": "library/stdtypes.html#dict.items", "dict.keys()": "library/stdtypes.html#dict.keys", "dict.pop()": "library/stdtypes.html#dict.pop", "dict.popitem()": "library/stdtypes.html#dict.popitem", "dict.setdefault()": "library/stdtypes.html#dict.setdefault", "dict.update()": "library/stdtypes.html#dict.update", "dict.values()": "library/stdtypes.html#dict.values", "dictionary": "glossary.html#term-dictionary", "dictionary comprehension": "glossary.html#term-dictionary-comprehension", "Dictionary Objects": "c-api/dict.html", "dictionary view": "glossary.html#term-dictionary-view", "Differ Example (difflib)": "library/difflib.html#differ-example", "Differ Objects (difflib)": "library/difflib.html#differ-objects", "difflib": "library/difflib.html", "difflib.context_diff()": "library/difflib.html#difflib.context_diff", "difflib.diff_bytes()": "library/difflib.html#difflib.diff_bytes", "difflib.Differ": "library/difflib.html#difflib.Differ", "difflib.Differ.compare()": "library/difflib.html#difflib.Differ.compare", "difflib.get_close_matches()": "library/difflib.html#difflib.get_close_matches", "difflib.HtmlDiff": "library/difflib.html#difflib.HtmlDiff", "difflib.HtmlDiff.__init__()": "library/difflib.html#difflib.HtmlDiff.__init__", "difflib.HtmlDiff.make_file()": "library/difflib.html#difflib.HtmlDiff.make_file", "difflib.HtmlDiff.make_table()": "library/difflib.html#difflib.HtmlDiff.make_table", "difflib.IS_CHARACTER_JUNK()": "library/difflib.html#difflib.IS_CHARACTER_JUNK", "difflib.IS_LINE_JUNK()": "library/difflib.html#difflib.IS_LINE_JUNK", "difflib.ndiff()": "library/difflib.html#difflib.ndiff", "difflib.restore()": "library/difflib.html#difflib.restore", "difflib.SequenceMatcher": "library/difflib.html#difflib.SequenceMatcher", "difflib.SequenceMatcher.find_longest_match()": "library/difflib.html#difflib.SequenceMatcher.find_longest_match", "difflib.SequenceMatcher.get_grouped_opcodes()": "library/difflib.html#difflib.SequenceMatcher.get_grouped_opcodes", "difflib.SequenceMatcher.get_matching_blocks()": "library/difflib.html#difflib.SequenceMatcher.get_matching_blocks", "difflib.SequenceMatcher.get_opcodes()": "library/difflib.html#difflib.SequenceMatcher.get_opcodes", "difflib.SequenceMatcher.quick_ratio()": "library/difflib.html#difflib.SequenceMatcher.quick_ratio", "difflib.SequenceMatcher.ratio()": "library/difflib.html#difflib.SequenceMatcher.ratio", "difflib.SequenceMatcher.real_quick_ratio()": "library/difflib.html#difflib.SequenceMatcher.real_quick_ratio", "difflib.SequenceMatcher.set_seq1()": "library/difflib.html#difflib.SequenceMatcher.set_seq1", "difflib.SequenceMatcher.set_seq2()": "library/difflib.html#difflib.SequenceMatcher.set_seq2", "difflib.SequenceMatcher.set_seqs()": "library/difflib.html#difflib.SequenceMatcher.set_seqs", "difflib.unified_diff()": "library/difflib.html#difflib.unified_diff", "dir()": "library/functions.html#dir", "Directory and files operations (shutil)": "library/shutil.html#directory-and-files-operations", "dis": "library/dis.html", "dis.Bytecode": "library/dis.html#dis.Bytecode", "dis.Bytecode.codeobj": "library/dis.html#dis.Bytecode.codeobj", "dis.Bytecode.dis()": "library/dis.html#dis.Bytecode.dis", "dis.Bytecode.first_line": "library/dis.html#dis.Bytecode.first_line", "dis.Bytecode.from_traceback()": "library/dis.html#dis.Bytecode.from_traceback", "dis.Bytecode.info()": "library/dis.html#dis.Bytecode.info", "dis.cmp_op": "library/dis.html#dis.cmp_op", "dis.code_info()": "library/dis.html#dis.code_info", "dis.dis()": "library/dis.html#dis.dis", "dis.disassemble()": "library/dis.html#dis.disassemble", "dis.findlabels()": "library/dis.html#dis.findlabels", "dis.findlinestarts()": "library/dis.html#dis.findlinestarts", "dis.get_instructions()": "library/dis.html#dis.get_instructions", "dis.hasarg": "library/dis.html#dis.hasarg", "dis.hascompare": "library/dis.html#dis.hascompare", "dis.hasconst": "library/dis.html#dis.hasconst", "dis.hasexc": "library/dis.html#dis.hasexc", "dis.hasfree": "library/dis.html#dis.hasfree", "dis.hasjabs": "library/dis.html#dis.hasjabs", "dis.hasjrel": "library/dis.html#dis.hasjrel", "dis.hasjump": "library/dis.html#dis.hasjump", "dis.haslocal": "library/dis.html#dis.haslocal", "dis.hasname": "library/dis.html#dis.hasname", "dis.Instruction": "library/dis.html#dis.Instruction", "dis.Instruction.arg": "library/dis.html#dis.Instruction.arg", "dis.Instruction.argrepr": "library/dis.html#dis.Instruction.argrepr", "dis.Instruction.argval": "library/dis.html#dis.Instruction.argval", "dis.Instruction.baseopcode": "library/dis.html#dis.Instruction.baseopcode", "dis.Instruction.baseopname": "library/dis.html#dis.Instruction.baseopname", "dis.Instruction.cache_offset": "library/dis.html#dis.Instruction.cache_offset", "dis.Instruction.end_offset": "library/dis.html#dis.Instruction.end_offset", "dis.Instruction.is_jump_target": "library/dis.html#dis.Instruction.is_jump_target", "dis.Instruction.jump_target": "library/dis.html#dis.Instruction.jump_target", "dis.Instruction.line_number": "library/dis.html#dis.Instruction.line_number", "dis.Instruction.offset": "library/dis.html#dis.Instruction.offset", "dis.Instruction.oparg": "library/dis.html#dis.Instruction.oparg", "dis.Instruction.opcode": "library/dis.html#dis.Instruction.opcode", "dis.Instruction.opname": "library/dis.html#dis.Instruction.opname", "dis.Instruction.positions": "library/dis.html#dis.Instruction.positions", "dis.Instruction.start_offset": "library/dis.html#dis.Instruction.start_offset", "dis.Instruction.starts_line": "library/dis.html#dis.Instruction.starts_line", "dis.opmap": "library/dis.html#dis.opmap", "dis.opname": "library/dis.html#dis.opname", "dis.Positions": "library/dis.html#dis.Positions", "dis.Positions.col_offset": "library/dis.html#dis.Positions.col_offset", "dis.Positions.end_col_offset": "library/dis.html#dis.Positions.end_col_offset", "dis.Positions.end_lineno": "library/dis.html#dis.Positions.end_lineno", "dis.Positions.lineno": "library/dis.html#dis.Positions.lineno", "dis.show_code()": "library/dis.html#dis.show_code", "dis.stack_effect()": "library/dis.html#dis.stack_effect", "Discrete distributions (random)": "library/random.html#discrete-distributions", "Distinguishing test iterations using subtests (unittest)": "library/unittest.html#distinguishing-test-iterations-using-subtests", "Distributing Python Modules": "distributing/index.html", "Distribution Discovery (importlib.metadata)": "library/importlib.metadata.html#distribution-discovery", "Distributions (importlib.metadata)": "library/importlib.metadata.html#distributions", "divmod()": "library/functions.html#divmod", "DocCGIXMLRPCRequestHandler (xmlrpc.server)": "library/xmlrpc.server.html#doccgixmlrpcrequesthandler", "docstring": "glossary.html#term-docstring", "doctest": "library/doctest.html", "doctest.COMPARISON_FLAGS": "library/doctest.html#doctest.COMPARISON_FLAGS", "doctest.debug()": "library/doctest.html#doctest.debug", "doctest.debug_src()": "library/doctest.html#doctest.debug_src", "doctest.DebugRunner": "library/doctest.html#doctest.DebugRunner", "doctest.DocFileSuite()": "library/doctest.html#doctest.DocFileSuite", "doctest.DocTest": "library/doctest.html#doctest.DocTest", "doctest.DocTest.docstring": "library/doctest.html#doctest.DocTest.docstring", "doctest.DocTest.examples": "library/doctest.html#doctest.DocTest.examples", "doctest.DocTest.filename": "library/doctest.html#doctest.DocTest.filename", "doctest.DocTest.globs": "library/doctest.html#doctest.DocTest.globs", "doctest.DocTest.lineno": "library/doctest.html#doctest.DocTest.lineno", "doctest.DocTest.name": "library/doctest.html#doctest.DocTest.name", "doctest.DocTestFailure": "library/doctest.html#doctest.DocTestFailure", "doctest.DocTestFailure.example": "library/doctest.html#doctest.DocTestFailure.example", "doctest.DocTestFailure.got": "library/doctest.html#doctest.DocTestFailure.got", "doctest.DocTestFailure.test": "library/doctest.html#doctest.DocTestFailure.test", "doctest.DocTestFinder": "library/doctest.html#doctest.DocTestFinder", "doctest.DocTestFinder.find()": "library/doctest.html#doctest.DocTestFinder.find", "doctest.DocTestParser": "library/doctest.html#doctest.DocTestParser", "doctest.DocTestParser.get_doctest()": "library/doctest.html#doctest.DocTestParser.get_doctest", "doctest.DocTestParser.get_examples()": "library/doctest.html#doctest.DocTestParser.get_examples", "doctest.DocTestParser.parse()": "library/doctest.html#doctest.DocTestParser.parse", "doctest.DocTestRunner": "library/doctest.html#doctest.DocTestRunner", "doctest.DocTestRunner.failures": "library/doctest.html#doctest.DocTestRunner.failures", "doctest.DocTestRunner.report_failure()": "library/doctest.html#doctest.DocTestRunner.report_failure", "doctest.DocTestRunner.report_start()": "library/doctest.html#doctest.DocTestRunner.report_start", "doctest.DocTestRunner.report_success()": "library/doctest.html#doctest.DocTestRunner.report_success", "doctest.DocTestRunner.report_unexpected_exception()": "library/doctest.html#doctest.DocTestRunner.report_unexpected_exception", "doctest.DocTestRunner.run()": "library/doctest.html#doctest.DocTestRunner.run", "doctest.DocTestRunner.skips": "library/doctest.html#doctest.DocTestRunner.skips", "doctest.DocTestRunner.summarize()": "library/doctest.html#doctest.DocTestRunner.summarize", "doctest.DocTestRunner.tries": "library/doctest.html#doctest.DocTestRunner.tries", "doctest.DocTestSuite()": "library/doctest.html#doctest.DocTestSuite", "doctest.DONT_ACCEPT_BLANKLINE": "library/doctest.html#doctest.DONT_ACCEPT_BLANKLINE", "doctest.DONT_ACCEPT_TRUE_FOR_1": "library/doctest.html#doctest.DONT_ACCEPT_TRUE_FOR_1", "doctest.ELLIPSIS": "library/doctest.html#doctest.ELLIPSIS", "doctest.Example": "library/doctest.html#doctest.Example", "doctest.Example.exc_msg": "library/doctest.html#doctest.Example.exc_msg", "doctest.Example.indent": "library/doctest.html#doctest.Example.indent", "doctest.Example.lineno": "library/doctest.html#doctest.Example.lineno", "doctest.Example.options": "library/doctest.html#doctest.Example.options", "doctest.Example.source": "library/doctest.html#doctest.Example.source", "doctest.Example.want": "library/doctest.html#doctest.Example.want", "doctest.FAIL_FAST": "library/doctest.html#doctest.FAIL_FAST", "doctest.failureException": "library/doctest.html#doctest.failureException", "doctest.IGNORE_EXCEPTION_DETAIL": "library/doctest.html#doctest.IGNORE_EXCEPTION_DETAIL", "doctest.NORMALIZE_WHITESPACE": "library/doctest.html#doctest.NORMALIZE_WHITESPACE", "doctest.OutputChecker": "library/doctest.html#doctest.OutputChecker", "doctest.OutputChecker.check_output()": "library/doctest.html#doctest.OutputChecker.check_output", "doctest.OutputChecker.output_difference()": "library/doctest.html#doctest.OutputChecker.output_difference", "doctest.register_optionflag()": "library/doctest.html#doctest.register_optionflag", "doctest.REPORT_CDIFF": "library/doctest.html#doctest.REPORT_CDIFF", "doctest.REPORT_NDIFF": "library/doctest.html#doctest.REPORT_NDIFF", "doctest.REPORT_ONLY_FIRST_FAILURE": "library/doctest.html#doctest.REPORT_ONLY_FIRST_FAILURE", "doctest.REPORT_UDIFF": "library/doctest.html#doctest.REPORT_UDIFF", "doctest.REPORTING_FLAGS": "library/doctest.html#doctest.REPORTING_FLAGS", "doctest.run_docstring_examples()": "library/doctest.html#doctest.run_docstring_examples", "doctest.script_from_examples()": "library/doctest.html#doctest.script_from_examples", "doctest.set_unittest_reportflags()": "library/doctest.html#doctest.set_unittest_reportflags", "doctest.SKIP": "library/doctest.html#doctest.SKIP", "doctest.testfile()": "library/doctest.html#doctest.testfile", "doctest.testmod()": "library/doctest.html#doctest.testmod", "doctest.TestResults": "library/doctest.html#doctest.TestResults", "doctest.TestResults.attempted": "library/doctest.html#doctest.TestResults.attempted", "doctest.TestResults.failed": "library/doctest.html#doctest.TestResults.failed", "doctest.TestResults.skipped": "library/doctest.html#doctest.TestResults.skipped", "doctest.testsource()": "library/doctest.html#doctest.testsource", "doctest.UnexpectedException": "library/doctest.html#doctest.UnexpectedException", "doctest.UnexpectedException.example": "library/doctest.html#doctest.UnexpectedException.example", "doctest.UnexpectedException.exc_info": "library/doctest.html#doctest.UnexpectedException.exc_info", "doctest.UnexpectedException.test": "library/doctest.html#doctest.UnexpectedException.test", "Documenting XMLRPC server (xmlrpc.server)": "library/xmlrpc.server.html#documenting-xmlrpc-server", "DocXMLRPCServer Objects (xmlrpc.server)": "library/xmlrpc.server.html#docxmlrpcserver-objects", "DOM Example (xml.dom.minidom)": "library/xml.dom.minidom.html#dom-example", "DOM Objects (xml.dom.minidom)": "library/xml.dom.minidom.html#dom-objects", "DOMEventStream Objects (xml.dom.pulldom)": "library/xml.dom.pulldom.html#domeventstream-objects", "Download Python 3.13.0rc1 Documentation": "download.html", "DTDHandler Objects (xml.sax.handler)": "library/xml.sax.handler.html#dtdhandler-objects", "duck-typing": "glossary.html#term-duck-typing", "Dumping the traceback (faulthandler)": "library/faulthandler.html#dumping-the-traceback", "Dumping the traceback on a user signal (faulthandler)": "library/faulthandler.html#dumping-the-traceback-on-a-user-signal", "Dumping the tracebacks after a timeout (faulthandler)": "library/faulthandler.html#dumping-the-tracebacks-after-a-timeout", "Dynamic Type Creation (types)": "library/types.html#dynamic-type-creation", "EAFP": "glossary.html#term-EAFP", "Eager Task Factory (Coroutines and Tasks)": "library/asyncio-task.html#eager-task-factory", "Edge and Level Trigger Polling (epoll) Objects (select)": "library/select.html#edge-and-level-trigger-polling-epoll-objects", "Editing and Navigation (IDLE)": "library/idle.html#editing-and-navigation", "Effects of the Python Development Mode (Python Development Mode)": "library/devmode.html#effects-of-the-python-development-mode", "elif (keyword)": "reference/compound_stmts.html#index-3", "Ellipsis": "library/constants.html#Ellipsis", "else (dangling)": "reference/compound_stmts.html#index-2", "else (keyword)": "reference/compound_stmts.html#index-13", "email": "library/email.html", "email.charset.add_alias()": "library/email.charset.html#email.charset.add_alias", "email.charset.add_charset()": "library/email.charset.html#email.charset.add_charset", "email.charset.add_codec()": "library/email.charset.html#email.charset.add_codec", "email.charset.Charset": "library/email.charset.html#email.charset.Charset", "email.charset.Charset.__eq__()": "library/email.charset.html#email.charset.Charset.__eq__", "email.charset.Charset.__ne__()": "library/email.charset.html#email.charset.Charset.__ne__", "email.charset.Charset.__str__()": "library/email.charset.html#email.charset.Charset.__str__", "email.charset.Charset.body_encode()": "library/email.charset.html#email.charset.Charset.body_encode", "email.charset.Charset.body_encoding": "library/email.charset.html#email.charset.Charset.body_encoding", "email.charset.Charset.get_body_encoding()": "library/email.charset.html#email.charset.Charset.get_body_encoding", "email.charset.Charset.get_output_charset()": "library/email.charset.html#email.charset.Charset.get_output_charset", "email.charset.Charset.header_encode()": "library/email.charset.html#email.charset.Charset.header_encode", "email.charset.Charset.header_encode_lines()": "library/email.charset.html#email.charset.Charset.header_encode_lines", "email.charset.Charset.header_encoding": "library/email.charset.html#email.charset.Charset.header_encoding", "email.charset.Charset.input_charset": "library/email.charset.html#email.charset.Charset.input_charset", "email.charset.Charset.input_codec": "library/email.charset.html#email.charset.Charset.input_codec", "email.charset.Charset.output_charset": "library/email.charset.html#email.charset.Charset.output_charset", "email.charset.Charset.output_codec": "library/email.charset.html#email.charset.Charset.output_codec", "email.charset: Representing character sets": "library/email.charset.html", "email.contentmanager.ContentManager": "library/email.contentmanager.html#email.contentmanager.ContentManager", "email.contentmanager.ContentManager.add_get_handler()": "library/email.contentmanager.html#email.contentmanager.ContentManager.add_get_handler", "email.contentmanager.ContentManager.add_set_handler()": "library/email.contentmanager.html#email.contentmanager.ContentManager.add_set_handler", "email.contentmanager.ContentManager.get_content()": "library/email.contentmanager.html#email.contentmanager.ContentManager.get_content", "email.contentmanager.ContentManager.set_content()": "library/email.contentmanager.html#email.contentmanager.ContentManager.set_content", "email.contentmanager.get_content()": "library/email.contentmanager.html#email.contentmanager.get_content", "email.contentmanager.raw_data_manager": "library/email.contentmanager.html#email.contentmanager.raw_data_manager", "email.contentmanager.set_content()": "library/email.contentmanager.html#email.contentmanager.set_content", "email.contentmanager: Managing MIME Content": "library/email.contentmanager.html", "email.encoders.encode_7or8bit()": "library/email.encoders.html#email.encoders.encode_7or8bit", "email.encoders.encode_base64()": "library/email.encoders.html#email.encoders.encode_base64", "email.encoders.encode_noop()": "library/email.encoders.html#email.encoders.encode_noop", "email.encoders.encode_quopri()": "library/email.encoders.html#email.encoders.encode_quopri", "email.encoders: Encoders": "library/email.encoders.html", "email.errors.BoundaryError": "library/email.errors.html#email.errors.BoundaryError", "email.errors.HeaderDefect": "library/email.errors.html#email.errors.HeaderDefect", "email.errors.HeaderParseError": "library/email.errors.html#email.errors.HeaderParseError", "email.errors.HeaderWriteError": "library/email.errors.html#email.errors.HeaderWriteError", "email.errors.MessageDefect": "library/email.errors.html#email.errors.MessageDefect", "email.errors.MessageError": "library/email.errors.html#email.errors.MessageError", "email.errors.MessageParseError": "library/email.errors.html#email.errors.MessageParseError", "email.errors.MultipartConversionError": "library/email.errors.html#email.errors.MultipartConversionError", "email.errors: Exception and Defect classes": "library/email.errors.html", "email.generator.BytesGenerator": "library/email.generator.html#email.generator.BytesGenerator", "email.generator.BytesGenerator.clone()": "library/email.generator.html#email.generator.BytesGenerator.clone", "email.generator.BytesGenerator.flatten()": "library/email.generator.html#email.generator.BytesGenerator.flatten", "email.generator.BytesGenerator.write()": "library/email.generator.html#email.generator.BytesGenerator.write", "email.generator.DecodedGenerator": "library/email.generator.html#email.generator.DecodedGenerator", "email.generator.Generator": "library/email.generator.html#email.generator.Generator", "email.generator.Generator.clone()": "library/email.generator.html#email.generator.Generator.clone", "email.generator.Generator.flatten()": "library/email.generator.html#email.generator.Generator.flatten", "email.generator.Generator.write()": "library/email.generator.html#email.generator.Generator.write", "email.generator: Generating MIME documents": "library/email.generator.html", "email.header.decode_header()": "library/email.header.html#email.header.decode_header", "email.header.Header": "library/email.header.html#email.header.Header", "email.header.Header.__eq__()": "library/email.header.html#email.header.Header.__eq__", "email.header.Header.__ne__()": "library/email.header.html#email.header.Header.__ne__", "email.header.Header.__str__()": "library/email.header.html#email.header.Header.__str__", "email.header.Header.append()": "library/email.header.html#email.header.Header.append", "email.header.Header.encode()": "library/email.header.html#email.header.Header.encode", "email.header.make_header()": "library/email.header.html#email.header.make_header", "email.header: Internationalized headers": "library/email.header.html", "email.headerregistry.Address": "library/email.headerregistry.html#email.headerregistry.Address", "email.headerregistry.Address.__str__()": "library/email.headerregistry.html#email.headerregistry.Address.__str__", "email.headerregistry.Address.addr_spec": "library/email.headerregistry.html#email.headerregistry.Address.addr_spec", "email.headerregistry.Address.display_name": "library/email.headerregistry.html#email.headerregistry.Address.display_name", "email.headerregistry.Address.domain": "library/email.headerregistry.html#email.headerregistry.Address.domain", "email.headerregistry.Address.username": "library/email.headerregistry.html#email.headerregistry.Address.username", "email.headerregistry.AddressHeader": "library/email.headerregistry.html#email.headerregistry.AddressHeader", "email.headerregistry.AddressHeader.addresses": "library/email.headerregistry.html#email.headerregistry.AddressHeader.addresses", "email.headerregistry.AddressHeader.groups": "library/email.headerregistry.html#email.headerregistry.AddressHeader.groups", "email.headerregistry.BaseHeader": "library/email.headerregistry.html#email.headerregistry.BaseHeader", "email.headerregistry.BaseHeader.defects": "library/email.headerregistry.html#email.headerregistry.BaseHeader.defects", "email.headerregistry.BaseHeader.fold()": "library/email.headerregistry.html#email.headerregistry.BaseHeader.fold", "email.headerregistry.BaseHeader.max_count": "library/email.headerregistry.html#email.headerregistry.BaseHeader.max_count", "email.headerregistry.BaseHeader.name": "library/email.headerregistry.html#email.headerregistry.BaseHeader.name", "email.headerregistry.ContentDispositionHeader": "library/email.headerregistry.html#email.headerregistry.ContentDispositionHeader", "email.headerregistry.ContentDispositionHeader.content_disposition": "library/email.headerregistry.html#email.headerregistry.ContentDispositionHeader.content_disposition", "email.headerregistry.ContentTransferEncoding": "library/email.headerregistry.html#email.headerregistry.ContentTransferEncoding", "email.headerregistry.ContentTransferEncoding.cte": "library/email.headerregistry.html#email.headerregistry.ContentTransferEncoding.cte", "email.headerregistry.ContentTypeHeader": "library/email.headerregistry.html#email.headerregistry.ContentTypeHeader", "email.headerregistry.ContentTypeHeader.content_type": "library/email.headerregistry.html#email.headerregistry.ContentTypeHeader.content_type", "email.headerregistry.ContentTypeHeader.maintype": "library/email.headerregistry.html#email.headerregistry.ContentTypeHeader.maintype", "email.headerregistry.ContentTypeHeader.subtype": "library/email.headerregistry.html#email.headerregistry.ContentTypeHeader.subtype", "email.headerregistry.DateHeader": "library/email.headerregistry.html#email.headerregistry.DateHeader", "email.headerregistry.DateHeader.datetime": "library/email.headerregistry.html#email.headerregistry.DateHeader.datetime", "email.headerregistry.Group": "library/email.headerregistry.html#email.headerregistry.Group", "email.headerregistry.Group.__str__()": "library/email.headerregistry.html#email.headerregistry.Group.__str__", "email.headerregistry.Group.addresses": "library/email.headerregistry.html#email.headerregistry.Group.addresses", "email.headerregistry.Group.display_name": "library/email.headerregistry.html#email.headerregistry.Group.display_name", "email.headerregistry.HeaderRegistry": "library/email.headerregistry.html#email.headerregistry.HeaderRegistry", "email.headerregistry.HeaderRegistry.__call__()": "library/email.headerregistry.html#email.headerregistry.HeaderRegistry.__call__", "email.headerregistry.HeaderRegistry.__getitem__()": "library/email.headerregistry.html#email.headerregistry.HeaderRegistry.__getitem__", "email.headerregistry.HeaderRegistry.map_to_type()": "library/email.headerregistry.html#email.headerregistry.HeaderRegistry.map_to_type", "email.headerregistry.MIMEVersionHeader": "library/email.headerregistry.html#email.headerregistry.MIMEVersionHeader", "email.headerregistry.MIMEVersionHeader.major": "library/email.headerregistry.html#email.headerregistry.MIMEVersionHeader.major", "email.headerregistry.MIMEVersionHeader.minor": "library/email.headerregistry.html#email.headerregistry.MIMEVersionHeader.minor", "email.headerregistry.MIMEVersionHeader.version": "library/email.headerregistry.html#email.headerregistry.MIMEVersionHeader.version", "email.headerregistry.ParameterizedMIMEHeader": "library/email.headerregistry.html#email.headerregistry.ParameterizedMIMEHeader", "email.headerregistry.ParameterizedMIMEHeader.params": "library/email.headerregistry.html#email.headerregistry.ParameterizedMIMEHeader.params", "email.headerregistry.SingleAddressHeader": "library/email.headerregistry.html#email.headerregistry.SingleAddressHeader", "email.headerregistry.SingleAddressHeader.address": "library/email.headerregistry.html#email.headerregistry.SingleAddressHeader.address", "email.headerregistry.UnstructuredHeader": "library/email.headerregistry.html#email.headerregistry.UnstructuredHeader", "email.headerregistry: Custom Header Objects": "library/email.headerregistry.html", "email.iterators._structure()": "library/email.iterators.html#email.iterators._structure", "email.iterators.body_line_iterator()": "library/email.iterators.html#email.iterators.body_line_iterator", "email.iterators.typed_subpart_iterator()": "library/email.iterators.html#email.iterators.typed_subpart_iterator", "email.iterators: Iterators": "library/email.iterators.html", "email.message.EmailMessage": "library/email.message.html#email.message.EmailMessage", "email.message.EmailMessage.__bytes__()": "library/email.message.html#email.message.EmailMessage.__bytes__", "email.message.EmailMessage.__contains__()": "library/email.message.html#email.message.EmailMessage.__contains__", "email.message.EmailMessage.__delitem__()": "library/email.message.html#email.message.EmailMessage.__delitem__", "email.message.EmailMessage.__getitem__()": "library/email.message.html#email.message.EmailMessage.__getitem__", "email.message.EmailMessage.__len__()": "library/email.message.html#email.message.EmailMessage.__len__", "email.message.EmailMessage.__setitem__()": "library/email.message.html#email.message.EmailMessage.__setitem__", "email.message.EmailMessage.__str__()": "library/email.message.html#email.message.EmailMessage.__str__", "email.message.EmailMessage.add_alternative()": "library/email.message.html#email.message.EmailMessage.add_alternative", "email.message.EmailMessage.add_attachment()": "library/email.message.html#email.message.EmailMessage.add_attachment", "email.message.EmailMessage.add_header()": "library/email.message.html#email.message.EmailMessage.add_header", "email.message.EmailMessage.add_related()": "library/email.message.html#email.message.EmailMessage.add_related", "email.message.EmailMessage.as_bytes()": "library/email.message.html#email.message.EmailMessage.as_bytes", "email.message.EmailMessage.as_string()": "library/email.message.html#email.message.EmailMessage.as_string", "email.message.EmailMessage.clear()": "library/email.message.html#email.message.EmailMessage.clear", "email.message.EmailMessage.clear_content()": "library/email.message.html#email.message.EmailMessage.clear_content", "email.message.EmailMessage.defects": "library/email.message.html#email.message.EmailMessage.defects", "email.message.EmailMessage.del_param()": "library/email.message.html#email.message.EmailMessage.del_param", "email.message.EmailMessage.epilogue": "library/email.message.html#email.message.EmailMessage.epilogue", "email.message.EmailMessage.get()": "library/email.message.html#email.message.EmailMessage.get", "email.message.EmailMessage.get_all()": "library/email.message.html#email.message.EmailMessage.get_all", "email.message.EmailMessage.get_body()": "library/email.message.html#email.message.EmailMessage.get_body", "email.message.EmailMessage.get_boundary()": "library/email.message.html#email.message.EmailMessage.get_boundary", "email.message.EmailMessage.get_charsets()": "library/email.message.html#email.message.EmailMessage.get_charsets", "email.message.EmailMessage.get_content()": "library/email.message.html#email.message.EmailMessage.get_content", "email.message.EmailMessage.get_content_charset()": "library/email.message.html#email.message.EmailMessage.get_content_charset", "email.message.EmailMessage.get_content_disposition()": "library/email.message.html#email.message.EmailMessage.get_content_disposition", "email.message.EmailMessage.get_content_maintype()": "library/email.message.html#email.message.EmailMessage.get_content_maintype", "email.message.EmailMessage.get_content_subtype()": "library/email.message.html#email.message.EmailMessage.get_content_subtype", "email.message.EmailMessage.get_content_type()": "library/email.message.html#email.message.EmailMessage.get_content_type", "email.message.EmailMessage.get_default_type()": "library/email.message.html#email.message.EmailMessage.get_default_type", "email.message.EmailMessage.get_filename()": "library/email.message.html#email.message.EmailMessage.get_filename", "email.message.EmailMessage.get_unixfrom()": "library/email.message.html#email.message.EmailMessage.get_unixfrom", "email.message.EmailMessage.is_attachment()": "library/email.message.html#email.message.EmailMessage.is_attachment", "email.message.EmailMessage.is_multipart()": "library/email.message.html#email.message.EmailMessage.is_multipart", "email.message.EmailMessage.items()": "library/email.message.html#email.message.EmailMessage.items", "email.message.EmailMessage.iter_attachments()": "library/email.message.html#email.message.EmailMessage.iter_attachments", "email.message.EmailMessage.iter_parts()": "library/email.message.html#email.message.EmailMessage.iter_parts", "email.message.EmailMessage.keys()": "library/email.message.html#email.message.EmailMessage.keys", "email.message.EmailMessage.make_alternative()": "library/email.message.html#email.message.EmailMessage.make_alternative", "email.message.EmailMessage.make_mixed()": "library/email.message.html#email.message.EmailMessage.make_mixed", "email.message.EmailMessage.make_related()": "library/email.message.html#email.message.EmailMessage.make_related", "email.message.EmailMessage.preamble": "library/email.message.html#email.message.EmailMessage.preamble", "email.message.EmailMessage.replace_header()": "library/email.message.html#email.message.EmailMessage.replace_header", "email.message.EmailMessage.set_boundary()": "library/email.message.html#email.message.EmailMessage.set_boundary", "email.message.EmailMessage.set_content()": "library/email.message.html#email.message.EmailMessage.set_content", "email.message.EmailMessage.set_default_type()": "library/email.message.html#email.message.EmailMessage.set_default_type", "email.message.EmailMessage.set_param()": "library/email.message.html#email.message.EmailMessage.set_param", "email.message.EmailMessage.set_unixfrom()": "library/email.message.html#email.message.EmailMessage.set_unixfrom", "email.message.EmailMessage.values()": "library/email.message.html#email.message.EmailMessage.values", "email.message.EmailMessage.walk()": "library/email.message.html#email.message.EmailMessage.walk", "email.message.Message": "library/email.compat32-message.html#email.message.Message", "email.message.Message.__bytes__()": "library/email.compat32-message.html#email.message.Message.__bytes__", "email.message.Message.__contains__()": "library/email.compat32-message.html#email.message.Message.__contains__", "email.message.Message.__delitem__()": "library/email.compat32-message.html#email.message.Message.__delitem__", "email.message.Message.__getitem__()": "library/email.compat32-message.html#email.message.Message.__getitem__", "email.message.Message.__len__()": "library/email.compat32-message.html#email.message.Message.__len__", "email.message.Message.__setitem__()": "library/email.compat32-message.html#email.message.Message.__setitem__", "email.message.Message.__str__()": "library/email.compat32-message.html#email.message.Message.__str__", "email.message.Message.add_header()": "library/email.compat32-message.html#email.message.Message.add_header", "email.message.Message.as_bytes()": "library/email.compat32-message.html#email.message.Message.as_bytes", "email.message.Message.as_string()": "library/email.compat32-message.html#email.message.Message.as_string", "email.message.Message.attach()": "library/email.compat32-message.html#email.message.Message.attach", "email.message.Message.defects": "library/email.compat32-message.html#email.message.Message.defects", "email.message.Message.del_param()": "library/email.compat32-message.html#email.message.Message.del_param", "email.message.Message.epilogue": "library/email.compat32-message.html#email.message.Message.epilogue", "email.message.Message.get()": "library/email.compat32-message.html#email.message.Message.get", "email.message.Message.get_all()": "library/email.compat32-message.html#email.message.Message.get_all", "email.message.Message.get_boundary()": "library/email.compat32-message.html#email.message.Message.get_boundary", "email.message.Message.get_charset()": "library/email.compat32-message.html#email.message.Message.get_charset", "email.message.Message.get_charsets()": "library/email.compat32-message.html#email.message.Message.get_charsets", "email.message.Message.get_content_charset()": "library/email.compat32-message.html#email.message.Message.get_content_charset", "email.message.Message.get_content_disposition()": "library/email.compat32-message.html#email.message.Message.get_content_disposition", "email.message.Message.get_content_maintype()": "library/email.compat32-message.html#email.message.Message.get_content_maintype", "email.message.Message.get_content_subtype()": "library/email.compat32-message.html#email.message.Message.get_content_subtype", "email.message.Message.get_content_type()": "library/email.compat32-message.html#email.message.Message.get_content_type", "email.message.Message.get_default_type()": "library/email.compat32-message.html#email.message.Message.get_default_type", "email.message.Message.get_filename()": "library/email.compat32-message.html#email.message.Message.get_filename", "email.message.Message.get_param()": "library/email.compat32-message.html#email.message.Message.get_param", "email.message.Message.get_params()": "library/email.compat32-message.html#email.message.Message.get_params", "email.message.Message.get_payload()": "library/email.compat32-message.html#email.message.Message.get_payload", "email.message.Message.get_unixfrom()": "library/email.compat32-message.html#email.message.Message.get_unixfrom", "email.message.Message.is_multipart()": "library/email.compat32-message.html#email.message.Message.is_multipart", "email.message.Message.items()": "library/email.compat32-message.html#email.message.Message.items", "email.message.Message.keys()": "library/email.compat32-message.html#email.message.Message.keys", "email.message.Message.preamble": "library/email.compat32-message.html#email.message.Message.preamble", "email.message.Message.replace_header()": "library/email.compat32-message.html#email.message.Message.replace_header", "email.message.Message.set_boundary()": "library/email.compat32-message.html#email.message.Message.set_boundary", "email.message.Message.set_charset()": "library/email.compat32-message.html#email.message.Message.set_charset", "email.message.Message.set_default_type()": "library/email.compat32-message.html#email.message.Message.set_default_type", "email.message.Message.set_param()": "library/email.compat32-message.html#email.message.Message.set_param", "email.message.Message.set_payload()": "library/email.compat32-message.html#email.message.Message.set_payload", "email.message.Message.set_type()": "library/email.compat32-message.html#email.message.Message.set_type", "email.message.Message.set_unixfrom()": "library/email.compat32-message.html#email.message.Message.set_unixfrom", "email.message.Message.values()": "library/email.compat32-message.html#email.message.Message.values", "email.message.Message.walk()": "library/email.compat32-message.html#email.message.Message.walk", "email.message.Message: Representing an email message using the compat32 API": "library/email.compat32-message.html", "email.message.MIMEPart": "library/email.message.html#email.message.MIMEPart", "email.message: Representing an email message": "library/email.message.html", "email.message_from_binary_file()": "library/email.parser.html#email.message_from_binary_file", "email.message_from_bytes()": "library/email.parser.html#email.message_from_bytes", "email.message_from_file()": "library/email.parser.html#email.message_from_file", "email.message_from_string()": "library/email.parser.html#email.message_from_string", "email.mime.application.MIMEApplication": "library/email.mime.html#email.mime.application.MIMEApplication", "email.mime.audio.MIMEAudio": "library/email.mime.html#email.mime.audio.MIMEAudio", "email.mime.base.MIMEBase": "library/email.mime.html#email.mime.base.MIMEBase", "email.mime.image.MIMEImage": "library/email.mime.html#email.mime.image.MIMEImage", "email.mime.message.MIMEMessage": "library/email.mime.html#email.mime.message.MIMEMessage", "email.mime.multipart.MIMEMultipart": "library/email.mime.html#email.mime.multipart.MIMEMultipart", "email.mime.nonmultipart.MIMENonMultipart": "library/email.mime.html#email.mime.nonmultipart.MIMENonMultipart", "email.mime.text.MIMEText": "library/email.mime.html#email.mime.text.MIMEText", "email.mime: Creating email and MIME objects from scratch": "library/email.mime.html", "email.parser.BytesFeedParser": "library/email.parser.html#email.parser.BytesFeedParser", "email.parser.BytesFeedParser.close()": "library/email.parser.html#email.parser.BytesFeedParser.close", "email.parser.BytesFeedParser.feed()": "library/email.parser.html#email.parser.BytesFeedParser.feed", "email.parser.BytesHeaderParser": "library/email.parser.html#email.parser.BytesHeaderParser", "email.parser.BytesParser": "library/email.parser.html#email.parser.BytesParser", "email.parser.BytesParser.parse()": "library/email.parser.html#email.parser.BytesParser.parse", "email.parser.BytesParser.parsebytes()": "library/email.parser.html#email.parser.BytesParser.parsebytes", "email.parser.FeedParser": "library/email.parser.html#email.parser.FeedParser", "email.parser.HeaderParser": "library/email.parser.html#email.parser.HeaderParser", "email.parser.Parser": "library/email.parser.html#email.parser.Parser", "email.parser.Parser.parse()": "library/email.parser.html#email.parser.Parser.parse", "email.parser.Parser.parsestr()": "library/email.parser.html#email.parser.Parser.parsestr", "email.parser: Parsing email messages": "library/email.parser.html", "email.policy.Compat32": "library/email.policy.html#email.policy.Compat32", "email.policy.compat32": "library/email.policy.html#email.policy.compat32", "email.policy.Compat32.fold()": "library/email.policy.html#email.policy.Compat32.fold", "email.policy.Compat32.fold_binary()": "library/email.policy.html#email.policy.Compat32.fold_binary", "email.policy.Compat32.header_fetch_parse()": "library/email.policy.html#email.policy.Compat32.header_fetch_parse", "email.policy.Compat32.header_source_parse()": "library/email.policy.html#email.policy.Compat32.header_source_parse", "email.policy.Compat32.header_store_parse()": "library/email.policy.html#email.policy.Compat32.header_store_parse", "email.policy.Compat32.mangle_from_": "library/email.policy.html#email.policy.Compat32.mangle_from_", "email.policy.default": "library/email.policy.html#email.policy.default", "email.policy.EmailPolicy": "library/email.policy.html#email.policy.EmailPolicy", "email.policy.EmailPolicy.content_manager": "library/email.policy.html#email.policy.EmailPolicy.content_manager", "email.policy.EmailPolicy.fold()": "library/email.policy.html#email.policy.EmailPolicy.fold", "email.policy.EmailPolicy.fold_binary()": "library/email.policy.html#email.policy.EmailPolicy.fold_binary", "email.policy.EmailPolicy.header_factory": "library/email.policy.html#email.policy.EmailPolicy.header_factory", "email.policy.EmailPolicy.header_fetch_parse()": "library/email.policy.html#email.policy.EmailPolicy.header_fetch_parse", "email.policy.EmailPolicy.header_max_count()": "library/email.policy.html#email.policy.EmailPolicy.header_max_count", "email.policy.EmailPolicy.header_source_parse()": "library/email.policy.html#email.policy.EmailPolicy.header_source_parse", "email.policy.EmailPolicy.header_store_parse()": "library/email.policy.html#email.policy.EmailPolicy.header_store_parse", "email.policy.EmailPolicy.refold_source": "library/email.policy.html#email.policy.EmailPolicy.refold_source", "email.policy.EmailPolicy.utf8": "library/email.policy.html#email.policy.EmailPolicy.utf8", "email.policy.HTTP": "library/email.policy.html#email.policy.HTTP", "email.policy.Policy": "library/email.policy.html#email.policy.Policy", "email.policy.Policy.clone()": "library/email.policy.html#email.policy.Policy.clone", "email.policy.Policy.cte_type": "library/email.policy.html#email.policy.Policy.cte_type", "email.policy.Policy.fold()": "library/email.policy.html#email.policy.Policy.fold", "email.policy.Policy.fold_binary()": "library/email.policy.html#email.policy.Policy.fold_binary", "email.policy.Policy.handle_defect()": "library/email.policy.html#email.policy.Policy.handle_defect", "email.policy.Policy.header_fetch_parse()": "library/email.policy.html#email.policy.Policy.header_fetch_parse", "email.policy.Policy.header_max_count()": "library/email.policy.html#email.policy.Policy.header_max_count", "email.policy.Policy.header_source_parse()": "library/email.policy.html#email.policy.Policy.header_source_parse", "email.policy.Policy.header_store_parse()": "library/email.policy.html#email.policy.Policy.header_store_parse", "email.policy.Policy.linesep": "library/email.policy.html#email.policy.Policy.linesep", "email.policy.Policy.mangle_from_": "library/email.policy.html#email.policy.Policy.mangle_from_", "email.policy.Policy.max_line_length": "library/email.policy.html#email.policy.Policy.max_line_length", "email.policy.Policy.message_factory": "library/email.policy.html#email.policy.Policy.message_factory", "email.policy.Policy.raise_on_defect": "library/email.policy.html#email.policy.Policy.raise_on_defect", "email.policy.Policy.register_defect()": "library/email.policy.html#email.policy.Policy.register_defect", "email.policy.Policy.verify_generated_headers": "library/email.policy.html#email.policy.Policy.verify_generated_headers", "email.policy.SMTP": "library/email.policy.html#email.policy.SMTP", "email.policy.SMTPUTF8": "library/email.policy.html#email.policy.SMTPUTF8", "email.policy.strict": "library/email.policy.html#email.policy.strict", "email.policy: Policy Objects": "library/email.policy.html", "email.utils.collapse_rfc2231_value()": "library/email.utils.html#email.utils.collapse_rfc2231_value", "email.utils.decode_params()": "library/email.utils.html#email.utils.decode_params", "email.utils.decode_rfc2231()": "library/email.utils.html#email.utils.decode_rfc2231", "email.utils.encode_rfc2231()": "library/email.utils.html#email.utils.encode_rfc2231", "email.utils.format_datetime()": "library/email.utils.html#email.utils.format_datetime", "email.utils.formataddr()": "library/email.utils.html#email.utils.formataddr", "email.utils.formatdate()": "library/email.utils.html#email.utils.formatdate", "email.utils.getaddresses()": "library/email.utils.html#email.utils.getaddresses", "email.utils.localtime()": "library/email.utils.html#email.utils.localtime", "email.utils.make_msgid()": "library/email.utils.html#email.utils.make_msgid", "email.utils.mktime_tz()": "library/email.utils.html#email.utils.mktime_tz", "email.utils.parseaddr()": "library/email.utils.html#email.utils.parseaddr", "email.utils.parsedate()": "library/email.utils.html#email.utils.parsedate", "email.utils.parsedate_to_datetime()": "library/email.utils.html#email.utils.parsedate_to_datetime", "email.utils.parsedate_tz()": "library/email.utils.html#email.utils.parsedate_tz", "email.utils.quote()": "library/email.utils.html#email.utils.quote", "email.utils.unquote()": "library/email.utils.html#email.utils.unquote", "email.utils: Miscellaneous utilities": "library/email.utils.html", "email: Examples": "library/email.examples.html", "Embedded Python (The initialization of the sys.path module search path)": "library/sys_path_init.html#embedded-python", "Embedding Python in Another Application": "extending/embedding.html", "Encoders and Decoders (json)": "library/json.html#encoders-and-decoders", "Encodings and Unicode (codecs)": "library/codecs.html#encodings-and-unicode", "encodings.idna \u2014 Internationalized Domain Names in Applications (codecs)": "library/codecs.html#module-encodings.idna", "encodings.idna.nameprep()": "library/codecs.html#encodings.idna.nameprep", "encodings.idna.ToASCII()": "library/codecs.html#encodings.idna.ToASCII", "encodings.idna.ToUnicode()": "library/codecs.html#encodings.idna.ToUnicode", "encodings.mbcs \u2014 Windows ANSI codepage (codecs)": "library/codecs.html#module-encodings.mbcs", "encodings.utf_8_sig \u2014 UTF-8 codec with BOM signature (codecs)": "library/codecs.html#module-encodings.utf_8_sig", "EncodingWarning": "library/exceptions.html#EncodingWarning", "ensurepip": "library/ensurepip.html", "ensurepip.bootstrap()": "library/ensurepip.html#ensurepip.bootstrap", "ensurepip.version()": "library/ensurepip.html#ensurepip.version", "EntityResolver Objects (xml.sax.handler)": "library/xml.sax.handler.html#entityresolver-objects", "enum": "library/enum.html", "Enum HOWTO": "howto/enum.html", "enum.auto": "library/enum.html#enum.auto", "enum.Enum": "library/enum.html#enum.Enum", "enum.Enum.__dir__()": "library/enum.html#enum.Enum.__dir__", "enum.Enum.__format__()": "library/enum.html#enum.Enum.__format__", "enum.Enum.__init__()": "library/enum.html#enum.Enum.__init__", "enum.Enum.__init_subclass__()": "library/enum.html#enum.Enum.__init_subclass__", "enum.Enum.__new__()": "library/enum.html#enum.Enum.__new__", "enum.Enum.__repr__()": "library/enum.html#enum.Enum.__repr__", "enum.Enum.__str__()": "library/enum.html#enum.Enum.__str__", "enum.Enum._generate_next_value_()": "library/enum.html#enum.Enum._generate_next_value_", "enum.Enum._ignore_": "library/enum.html#enum.Enum._ignore_", "enum.Enum._missing_()": "library/enum.html#enum.Enum._missing_", "enum.Enum._name_": "library/enum.html#enum.Enum._name_", "enum.Enum._order_": "library/enum.html#enum.Enum._order_", "enum.Enum._value_": "library/enum.html#enum.Enum._value_", "enum.Enum.name": "library/enum.html#enum.Enum.name", "enum.Enum.value": "library/enum.html#enum.Enum.value", "enum.EnumCheck": "library/enum.html#enum.EnumCheck", "enum.EnumCheck.CONTINUOUS": "library/enum.html#enum.EnumCheck.CONTINUOUS", "enum.EnumCheck.NAMED_FLAGS": "library/enum.html#enum.EnumCheck.NAMED_FLAGS", "enum.EnumCheck.UNIQUE": "library/enum.html#enum.EnumCheck.UNIQUE", "enum.EnumType": "library/enum.html#enum.EnumType", "enum.EnumType.__call__()": "library/enum.html#enum.EnumType.__call__", "enum.EnumType.__contains__()": "library/enum.html#enum.EnumType.__contains__", "enum.EnumType.__dir__()": "library/enum.html#enum.EnumType.__dir__", "enum.EnumType.__getitem__()": "library/enum.html#enum.EnumType.__getitem__", "enum.EnumType.__iter__()": "library/enum.html#enum.EnumType.__iter__", "enum.EnumType.__len__()": "library/enum.html#enum.EnumType.__len__", "enum.EnumType.__members__": "library/enum.html#enum.EnumType.__members__", "enum.EnumType.__reversed__()": "library/enum.html#enum.EnumType.__reversed__", "enum.EnumType._add_alias_()": "library/enum.html#enum.EnumType._add_alias_", "enum.EnumType._add_value_alias_()": "library/enum.html#enum.EnumType._add_value_alias_", "enum.Flag": "library/enum.html#enum.Flag", "enum.Flag.__and__()": "library/enum.html#enum.Flag.__and__", "enum.Flag.__contains__()": "library/enum.html#enum.Flag.__contains__", "enum.Flag.__or__()": "library/enum.html#enum.Flag.__or__", "enum.Flag.__xor__()": "library/enum.html#enum.Flag.__xor__", "enum.Flag._numeric_repr_()": "library/enum.html#enum.Flag._numeric_repr_", "enum.FlagBoundary": "library/enum.html#enum.FlagBoundary", "enum.FlagBoundary.CONFORM": "library/enum.html#enum.FlagBoundary.CONFORM", "enum.FlagBoundary.EJECT": "library/enum.html#enum.FlagBoundary.EJECT", "enum.FlagBoundary.KEEP": "library/enum.html#enum.FlagBoundary.KEEP", "enum.FlagBoundary.STRICT": "library/enum.html#enum.FlagBoundary.STRICT", "enum.global_enum()": "library/enum.html#enum.global_enum", "enum.IntEnum": "library/enum.html#enum.IntEnum", "enum.IntFlag": "library/enum.html#enum.IntFlag", "enum.member()": "library/enum.html#enum.member", "enum.nonmember()": "library/enum.html#enum.nonmember", "enum.property()": "library/enum.html#enum.property", "enum.ReprEnum": "library/enum.html#enum.ReprEnum", "enum.show_flag_values()": "library/enum.html#enum.show_flag_values", "enum.StrEnum": "library/enum.html#enum.StrEnum", "enum.unique()": "library/enum.html#enum.unique", "enum.verify()": "library/enum.html#enum.verify", "enumerate()": "library/functions.html#enumerate", "EnvironmentError": "library/exceptions.html#EnvironmentError", "EOFError": "library/exceptions.html#EOFError", "errno": "library/errno.html", "ErrorHandler Objects (xml.sax.handler)": "library/xml.sax.handler.html#errorhandler-objects", "eval()": "library/functions.html#eval", "Event (Synchronization Primitives)": "library/asyncio-sync.html#event", "Event Loop": "library/asyncio-eventloop.html", "Event Loop Implementations (Event Loop)": "library/asyncio-eventloop.html#event-loop-implementations", "Event Loop Methods (Event Loop)": "library/asyncio-eventloop.html#event-loop-methods", "Event Loop Methods (Low-level API Index)": "library/asyncio-llapi-index.html#event-loop-methods", "Event Loop Policies (Low-level API Index)": "library/asyncio-llapi-index.html#event-loop-policies", "Event Objects (threading)": "library/threading.html#event-objects", "Events (sys.monitoring)": "library/sys.monitoring.html#events", "Examining Symbol Tables (symtable)": "library/symtable.html#examining-symbol-tables", "Example (argparse)": "library/argparse.html#example", "Example (copyreg)": "library/copyreg.html#example", "Example (faulthandler)": "library/faulthandler.html#example", "Example (http.cookies)": "library/http.cookies.html#example", "Example (pprint)": "library/pprint.html#example", "Example (pty)": "library/pty.html#example", "Example (readline)": "library/readline.html#example", "Example (shelve)": "library/shelve.html#example", "Example (socket)": "library/socket.html#example", "Example (termios)": "library/termios.html#example", "Example (uuid)": "library/uuid.html#example", "Example (weakref)": "library/weakref.html#example", "Example (xml.parsers.expat)": "library/pyexpat.html#example", "Example HTML Parser Application (html.parser)": "library/html.parser.html#example-html-parser-application", "Example of Client and Server Usage (xmlrpc.client)": "library/xmlrpc.client.html#example-of-client-and-server-usage", "Example of Client Usage (xmlrpc.client)": "library/xmlrpc.client.html#example-of-client-usage", "Example usage of ModuleFinder (modulefinder)": "library/modulefinder.html#example-usage-of-modulefinder", "Examples (bisect)": "library/bisect.html#examples", "Examples (csv)": "library/csv.html#examples", "Examples (Event Loop)": "library/asyncio-eventloop.html#examples", "Examples (glob)": "library/glob.html#examples", "Examples (html.parser)": "library/html.parser.html#examples", "Examples (http.client)": "library/http.client.html#examples", "Examples (http.cookiejar)": "library/http.cookiejar.html#examples", "Examples (importlib)": "library/importlib.html#examples", "Examples (lzma)": "library/lzma.html#examples", "Examples (mailbox)": "library/mailbox.html#examples", "Examples (multiprocessing)": "library/multiprocessing.html#examples", "Examples (pickle)": "library/pickle.html#examples", "Examples (plistlib)": "library/plistlib.html#examples", "Examples (Queues)": "library/asyncio-queue.html#examples", "Examples (random)": "library/random.html#examples", "Examples (selectors)": "library/selectors.html#examples", "Examples (signal)": "library/signal.html#examples", "Examples (socketserver)": "library/socketserver.html#examples", "Examples (ssl)": "library/ssl.html#examples", "Examples (Streams)": "library/asyncio-stream.html#examples", "Examples (syslog)": "library/syslog.html#examples", "Examples (tarfile)": "library/tarfile.html#examples", "Examples (tempfile)": "library/tempfile.html#examples", "Examples (timeit)": "library/timeit.html#examples", "Examples (tokenize)": "library/tokenize.html#examples", "Examples (tomllib)": "library/tomllib.html#examples", "Examples (tracemalloc)": "library/tracemalloc.html#examples", "Examples (Transports and Protocols)": "library/asyncio-protocol.html#examples", "Examples (urllib.request)": "library/urllib.request.html#examples", "Examples (wsgiref)": "library/wsgiref.html#examples", "Examples (zipapp)": "library/zipapp.html#examples", "Examples (zipimport)": "library/zipimport.html#examples", "Examples and Recipes (collections.abc)": "library/collections.abc.html#examples-and-recipes", "Examples and Recipes (contextlib)": "library/contextlib.html#examples-and-recipes", "Examples and Recipes (statistics)": "library/statistics.html#examples-and-recipes", "Examples of usage (bz2)": "library/bz2.html#examples-of-usage", "Examples of usage (gzip)": "library/gzip.html#examples-of-usage", "except (keyword)": "reference/compound_stmts.html#index-9", "except_star (keyword)": "reference/compound_stmts.html#index-12", "Exception": "library/exceptions.html#Exception", "Exception classes (concurrent.futures)": "library/concurrent.futures.html#exception-classes", "Exception context (Exceptions)": "library/exceptions.html#exception-context", "Exception groups (Exceptions)": "library/exceptions.html#exception-groups", "Exception Handling": "c-api/exceptions.html", "Exception hierarchy (Exceptions)": "library/exceptions.html#exception-hierarchy", "ExceptionGroup": "library/exceptions.html#ExceptionGroup", "Exceptions": "library/asyncio-exceptions.html", "Exceptions (argparse)": "library/argparse.html#exceptions", "Exceptions (configparser)": "library/configparser.html#exceptions", "Exceptions (graphlib)": "library/graphlib.html#exceptions", "Exceptions (High-level API Index)": "library/asyncio-api-index.html#exceptions", "Exceptions (json)": "library/json.html#exceptions", "Exceptions (mailbox)": "library/mailbox.html#exceptions", "Exceptions (pathlib)": "library/pathlib.html#exceptions", "Exceptions (Queues)": "library/asyncio-queue.html#exceptions", "Exceptions (statistics)": "library/statistics.html#exceptions", "Exceptions and warnings (zoneinfo)": "library/zoneinfo.html#exceptions-and-warnings", "exec()": "library/functions.html#exec", "execution (frame)": "reference/compound_stmts.html#index-42", "Executor Objects (concurrent.futures)": "library/concurrent.futures.html#executor-objects", "exit": "library/constants.html#exit", "Expat error constants (xml.parsers.expat)": "library/pyexpat.html#module-xml.parsers.expat.errors", "ExpatError Exceptions (xml.parsers.expat)": "library/pyexpat.html#expaterror-exceptions", "Explanation (sqlite3)": "library/sqlite3.html#explanation", "Explanation (turtle)": "library/turtle.html#explanation", "expression": "glossary.html#term-expression", "Extending": "library/asyncio-extending.html", "Extending and Embedding the Python Interpreter": "extending/index.html", "Extending Python with C or C++": "extending/extending.html", "Extending the search algorithm (importlib.metadata)": "library/importlib.metadata.html#extending-the-search-algorithm", "Extending/Embedding FAQ": "faq/extending.html", "extension module": "glossary.html#term-extension-module", "Extraction filters (tarfile)": "library/tarfile.html#extraction-filters", "f-string": "glossary.html#term-f-string", "Fallback Values (configparser)": "library/configparser.html#fallback-values", "False": "library/constants.html#False", "Fault handler state (faulthandler)": "library/faulthandler.html#fault-handler-state", "Fault Objects (xmlrpc.client)": "library/xmlrpc.client.html#fault-objects", "faulthandler": "library/faulthandler.html", "faulthandler.cancel_dump_traceback_later()": "library/faulthandler.html#faulthandler.cancel_dump_traceback_later", "faulthandler.disable()": "library/faulthandler.html#faulthandler.disable", "faulthandler.dump_traceback()": "library/faulthandler.html#faulthandler.dump_traceback", "faulthandler.dump_traceback_later()": "library/faulthandler.html#faulthandler.dump_traceback_later", "faulthandler.enable()": "library/faulthandler.html#faulthandler.enable", "faulthandler.is_enabled()": "library/faulthandler.html#faulthandler.is_enabled", "faulthandler.register()": "library/faulthandler.html#faulthandler.register", "faulthandler.unregister()": "library/faulthandler.html#faulthandler.unregister", "fcntl": "library/fcntl.html", "fcntl.fcntl()": "library/fcntl.html#fcntl.fcntl", "fcntl.flock()": "library/fcntl.html#fcntl.flock", "fcntl.ioctl()": "library/fcntl.html#fcntl.ioctl", "fcntl.LOCK_EX": "library/fcntl.html#fcntl.LOCK_EX", "fcntl.LOCK_NB": "library/fcntl.html#fcntl.LOCK_NB", "fcntl.LOCK_SH": "library/fcntl.html#fcntl.LOCK_SH", "fcntl.LOCK_UN": "library/fcntl.html#fcntl.LOCK_UN", "fcntl.lockf()": "library/fcntl.html#fcntl.lockf", "FeedParser API (email.parser: Parsing email messages)": "library/email.parser.html#feedparser-api", "Fetching attributes statically (inspect)": "library/inspect.html#fetching-attributes-statically", "File and Directory Access": "library/filesys.html", "File Descriptor Operations (os)": "library/os.html#file-descriptor-operations", "File Formats": "library/fileformats.html", "File Handlers (tkinter)": "library/tkinter.html#file-handlers", "File hashing (hashlib)": "library/hashlib.html#file-hashing", "File Names, Command Line Arguments, and Environment Variables (os)": "library/os.html#file-names-command-line-arguments-and-environment-variables", "file object": "glossary.html#term-file-object", "File Object Creation (os)": "library/os.html#file-object-creation", "File Objects": "c-api/file.html", "File Operations (msvcrt)": "library/msvcrt.html#file-operations", "file-like object": "glossary.html#term-file-like-object", "file__": "reference/import.html#file__", "filecmp": "library/filecmp.html", "filecmp.clear_cache()": "library/filecmp.html#filecmp.clear_cache", "filecmp.cmp()": "library/filecmp.html#filecmp.cmp", "filecmp.cmpfiles()": "library/filecmp.html#filecmp.cmpfiles", "filecmp.DEFAULT_IGNORES": "library/filecmp.html#filecmp.DEFAULT_IGNORES", "filecmp.dircmp": "library/filecmp.html#filecmp.dircmp", "filecmp.dircmp.common": "library/filecmp.html#filecmp.dircmp.common", "filecmp.dircmp.common_dirs": "library/filecmp.html#filecmp.dircmp.common_dirs", "filecmp.dircmp.common_files": "library/filecmp.html#filecmp.dircmp.common_files", "filecmp.dircmp.common_funny": "library/filecmp.html#filecmp.dircmp.common_funny", "filecmp.dircmp.diff_files": "library/filecmp.html#filecmp.dircmp.diff_files", "filecmp.dircmp.funny_files": "library/filecmp.html#filecmp.dircmp.funny_files", "filecmp.dircmp.left": "library/filecmp.html#filecmp.dircmp.left", "filecmp.dircmp.left_list": "library/filecmp.html#filecmp.dircmp.left_list", "filecmp.dircmp.left_only": "library/filecmp.html#filecmp.dircmp.left_only", "filecmp.dircmp.report()": "library/filecmp.html#filecmp.dircmp.report", "filecmp.dircmp.report_full_closure()": "library/filecmp.html#filecmp.dircmp.report_full_closure", "filecmp.dircmp.report_partial_closure()": "library/filecmp.html#filecmp.dircmp.report_partial_closure", "filecmp.dircmp.right": "library/filecmp.html#filecmp.dircmp.right", "filecmp.dircmp.right_list": "library/filecmp.html#filecmp.dircmp.right_list", "filecmp.dircmp.right_only": "library/filecmp.html#filecmp.dircmp.right_only", "filecmp.dircmp.same_files": "library/filecmp.html#filecmp.dircmp.same_files", "filecmp.dircmp.subdirs": "library/filecmp.html#filecmp.dircmp.subdirs", "FileCookieJar subclasses and co-operation with web browsers (http.cookiejar)": "library/http.cookiejar.html#filecookiejar-subclasses-and-co-operation-with-web-browsers", "FileExistsError": "library/exceptions.html#FileExistsError", "FileHandler (logging.handlers)": "library/logging.handlers.html#filehandler", "FileHandler Objects (urllib.request)": "library/urllib.request.html#filehandler-objects", "fileinput": "library/fileinput.html", "fileinput.close()": "library/fileinput.html#fileinput.close", "fileinput.FileInput": "library/fileinput.html#fileinput.FileInput", "fileinput.filelineno()": "library/fileinput.html#fileinput.filelineno", "fileinput.filename()": "library/fileinput.html#fileinput.filename", "fileinput.fileno()": "library/fileinput.html#fileinput.fileno", "fileinput.hook_compressed()": "library/fileinput.html#fileinput.hook_compressed", "fileinput.hook_encoded()": "library/fileinput.html#fileinput.hook_encoded", "fileinput.input()": "library/fileinput.html#fileinput.input", "fileinput.isfirstline()": "library/fileinput.html#fileinput.isfirstline", "fileinput.isstdin()": "library/fileinput.html#fileinput.isstdin", "fileinput.lineno()": "library/fileinput.html#fileinput.lineno", "fileinput.nextfile()": "library/fileinput.html#fileinput.nextfile", "FileNotFoundError": "library/exceptions.html#FileNotFoundError", "Files and Directories (os)": "library/os.html#files-and-directories", "filesystem encoding and error handler": "glossary.html#term-filesystem-encoding-and-error-handler", "Filter Objects (logging)": "library/logging.html#filter-objects", "filter()": "library/functions.html#filter", "Finalizer Objects (weakref)": "library/weakref.html#finalizer-objects", "finally (keyword)": "reference/compound_stmts.html#index-14", "finder": "glossary.html#term-finder", "float": "library/functions.html#float", "float.as_integer_ratio()": "library/stdtypes.html#float.as_integer_ratio", "float.fromhex()": "library/stdtypes.html#float.fromhex", "float.hex()": "library/stdtypes.html#float.hex", "float.is_integer()": "library/stdtypes.html#float.is_integer", "Floating-Point Notes (decimal)": "library/decimal.html#floating-point-notes", "Floating-Point Objects": "c-api/float.html", "FloatingPointError": "library/exceptions.html#FloatingPointError", "floor division": "glossary.html#term-floor-division", "fnmatch": "library/fnmatch.html", "fnmatch.filter()": "library/fnmatch.html#fnmatch.filter", "fnmatch.fnmatch()": "library/fnmatch.html#fnmatch.fnmatch", "fnmatch.fnmatchcase()": "library/fnmatch.html#fnmatch.fnmatchcase", "fnmatch.translate()": "library/fnmatch.html#fnmatch.translate", "for (statement)": "reference/compound_stmts.html#index-6", "For extension writers and programs that embed Python (locale)": "library/locale.html#for-extension-writers-and-programs-that-embed-python", "Format String Syntax (string)": "library/string.html#format-string-syntax", "Format Strings (struct)": "library/struct.html#format-strings", "format()": "library/functions.html#format", "Formatter Objects (logging)": "library/logging.html#formatter-objects", "fractions": "library/fractions.html", "fractions.Fraction": "library/fractions.html#fractions.Fraction", "fractions.Fraction.__ceil__()": "library/fractions.html#fractions.Fraction.__ceil__", "fractions.Fraction.__floor__()": "library/fractions.html#fractions.Fraction.__floor__", "fractions.Fraction.__format__()": "library/fractions.html#fractions.Fraction.__format__", "fractions.Fraction.__round__()": "library/fractions.html#fractions.Fraction.__round__", "fractions.Fraction.as_integer_ratio()": "library/fractions.html#fractions.Fraction.as_integer_ratio", "fractions.Fraction.denominator": "library/fractions.html#fractions.Fraction.denominator", "fractions.Fraction.from_decimal()": "library/fractions.html#fractions.Fraction.from_decimal", "fractions.Fraction.from_float()": "library/fractions.html#fractions.Fraction.from_float", "fractions.Fraction.is_integer()": "library/fractions.html#fractions.Fraction.is_integer", "fractions.Fraction.limit_denominator()": "library/fractions.html#fractions.Fraction.limit_denominator", "fractions.Fraction.numerator": "library/fractions.html#fractions.Fraction.numerator", "frame (execution)": "reference/compound_stmts.html#index-42", "Frame Objects": "c-api/frame.html", "frame.clear()": "reference/datamodel.html#frame.clear", "frame.f_back": "reference/datamodel.html#frame.f_back", "frame.f_builtins": "reference/datamodel.html#frame.f_builtins", "frame.f_code": "reference/datamodel.html#frame.f_code", "frame.f_globals": "reference/datamodel.html#frame.f_globals", "frame.f_lasti": "reference/datamodel.html#frame.f_lasti", "frame.f_lineno": "reference/datamodel.html#frame.f_lineno", "frame.f_locals": "reference/datamodel.html#frame.f_locals", "frame.f_trace": "reference/datamodel.html#frame.f_trace", "frame.f_trace_lines": "reference/datamodel.html#frame.f_trace_lines", "frame.f_trace_opcodes": "reference/datamodel.html#frame.f_trace_opcodes", "FrameSummary Objects (traceback)": "library/traceback.html#framesummary-objects", "free threading": "glossary.html#term-free-threading", "Frozen instances (dataclasses)": "library/dataclasses.html#frozen-instances", "frozenset": "library/stdtypes.html#frozenset", "frozenset.add()": "library/stdtypes.html#frozenset.add", "frozenset.clear()": "library/stdtypes.html#frozenset.clear", "frozenset.copy()": "library/stdtypes.html#frozenset.copy", "frozenset.difference()": "library/stdtypes.html#frozenset.difference", "frozenset.difference_update()": "library/stdtypes.html#frozenset.difference_update", "frozenset.discard()": "library/stdtypes.html#frozenset.discard", "frozenset.intersection()": "library/stdtypes.html#frozenset.intersection", "frozenset.intersection_update()": "library/stdtypes.html#frozenset.intersection_update", "frozenset.isdisjoint()": "library/stdtypes.html#frozenset.isdisjoint", "frozenset.issubset()": "library/stdtypes.html#frozenset.issubset", "frozenset.issuperset()": "library/stdtypes.html#frozenset.issuperset", "frozenset.pop()": "library/stdtypes.html#frozenset.pop", "frozenset.remove()": "library/stdtypes.html#frozenset.remove", "frozenset.symmetric_difference()": "library/stdtypes.html#frozenset.symmetric_difference", "frozenset.symmetric_difference_update()": "library/stdtypes.html#frozenset.symmetric_difference_update", "frozenset.union()": "library/stdtypes.html#frozenset.union", "frozenset.update()": "library/stdtypes.html#frozenset.update", "FTPHandler Objects (urllib.request)": "library/urllib.request.html#ftphandler-objects", "ftplib": "library/ftplib.html", "ftplib.all_errors": "library/ftplib.html#ftplib.all_errors", "ftplib.error_perm": "library/ftplib.html#ftplib.error_perm", "ftplib.error_proto": "library/ftplib.html#ftplib.error_proto", "ftplib.error_reply": "library/ftplib.html#ftplib.error_reply", "ftplib.error_temp": "library/ftplib.html#ftplib.error_temp", "ftplib.FTP": "library/ftplib.html#ftplib.FTP", "ftplib.FTP.abort()": "library/ftplib.html#ftplib.FTP.abort", "ftplib.FTP.close()": "library/ftplib.html#ftplib.FTP.close", "ftplib.FTP.connect()": "library/ftplib.html#ftplib.FTP.connect", "ftplib.FTP.cwd()": "library/ftplib.html#ftplib.FTP.cwd", "ftplib.FTP.delete()": "library/ftplib.html#ftplib.FTP.delete", "ftplib.FTP.dir()": "library/ftplib.html#ftplib.FTP.dir", "ftplib.FTP.getwelcome()": "library/ftplib.html#ftplib.FTP.getwelcome", "ftplib.FTP.login()": "library/ftplib.html#ftplib.FTP.login", "ftplib.FTP.mkd()": "library/ftplib.html#ftplib.FTP.mkd", "ftplib.FTP.mlsd()": "library/ftplib.html#ftplib.FTP.mlsd", "ftplib.FTP.nlst()": "library/ftplib.html#ftplib.FTP.nlst", "ftplib.FTP.ntransfercmd()": "library/ftplib.html#ftplib.FTP.ntransfercmd", "ftplib.FTP.pwd()": "library/ftplib.html#ftplib.FTP.pwd", "ftplib.FTP.quit()": "library/ftplib.html#ftplib.FTP.quit", "ftplib.FTP.rename()": "library/ftplib.html#ftplib.FTP.rename", "ftplib.FTP.retrbinary()": "library/ftplib.html#ftplib.FTP.retrbinary", "ftplib.FTP.retrlines()": "library/ftplib.html#ftplib.FTP.retrlines", "ftplib.FTP.rmd()": "library/ftplib.html#ftplib.FTP.rmd", "ftplib.FTP.sendcmd()": "library/ftplib.html#ftplib.FTP.sendcmd", "ftplib.FTP.set_debuglevel()": "library/ftplib.html#ftplib.FTP.set_debuglevel", "ftplib.FTP.set_pasv()": "library/ftplib.html#ftplib.FTP.set_pasv", "ftplib.FTP.size()": "library/ftplib.html#ftplib.FTP.size", "ftplib.FTP.storbinary()": "library/ftplib.html#ftplib.FTP.storbinary", "ftplib.FTP.storlines()": "library/ftplib.html#ftplib.FTP.storlines", "ftplib.FTP.transfercmd()": "library/ftplib.html#ftplib.FTP.transfercmd", "ftplib.FTP.voidcmd()": "library/ftplib.html#ftplib.FTP.voidcmd", "ftplib.FTP_TLS": "library/ftplib.html#ftplib.FTP_TLS", "ftplib.FTP_TLS.auth()": "library/ftplib.html#ftplib.FTP_TLS.auth", "ftplib.FTP_TLS.ccc()": "library/ftplib.html#ftplib.FTP_TLS.ccc", "ftplib.FTP_TLS.prot_c()": "library/ftplib.html#ftplib.FTP_TLS.prot_c", "ftplib.FTP_TLS.prot_p()": "library/ftplib.html#ftplib.FTP_TLS.prot_p", "ftplib.FTP_TLS.ssl_version": "library/ftplib.html#ftplib.FTP_TLS.ssl_version", "function": "glossary.html#term-function", "function annotation": "glossary.html#term-function-annotation", "Function details (statistics)": "library/statistics.html#function-details", "Function Objects": "c-api/function.html", "Function Objects (pyclbr)": "library/pyclbr.html#function-objects", "function.__annotations__": "reference/datamodel.html#function.__annotations__", "function.__closure__": "reference/datamodel.html#function.__closure__", "function.__code__": "reference/datamodel.html#function.__code__", "function.__defaults__": "reference/datamodel.html#function.__defaults__", "function.__dict__": "reference/datamodel.html#function.__dict__", "function.__doc__": "reference/datamodel.html#function.__doc__", "function.__globals__": "reference/datamodel.html#function.__globals__", "function.__kwdefaults__": "reference/datamodel.html#function.__kwdefaults__", "function.__module__": "reference/datamodel.html#function.__module__", "function.__name__": "reference/datamodel.html#function.__name__", "function.__qualname__": "reference/datamodel.html#function.__qualname__", "function.__type_params__": "reference/datamodel.html#function.__type_params__", "Functional API (importlib.metadata)": "library/importlib.metadata.html#functional-api", "Functional API (importlib.resources)": "library/importlib.resources.html#functional-api", "Functional Programming HOWTO": "howto/functional.html", "Functional Programming Modules": "library/functional.html", "Functions": "library/functions.html", "Functions (curses)": "library/curses.html#functions", "Functions (curses.panel)": "library/curses.panel.html#functions", "Functions (importlib)": "library/importlib.html#functions", "Functions (pprint)": "library/pprint.html#functions", "Functions (time)": "library/time.html#functions", "Functions (winreg)": "library/winreg.html#functions", "Functions (zoneinfo)": "library/zoneinfo.html#functions", "Functions and Exceptions (struct)": "library/struct.html#functions-and-exceptions", "Functions for bytes (random)": "library/random.html#functions-for-bytes", "Functions for integers (random)": "library/random.html#functions-for-integers", "Functions for sequences (random)": "library/random.html#functions-for-sequences", "Functions, Constants, and Exceptions (ssl)": "library/ssl.html#functions-constants-and-exceptions", "functools": "library/functools.html", "functools.cache()": "library/functools.html#functools.cache", "functools.cached_property()": "library/functools.html#functools.cached_property", "functools.cmp_to_key()": "library/functools.html#functools.cmp_to_key", "functools.lru_cache()": "library/functools.html#functools.lru_cache", "functools.partial()": "library/functools.html#functools.partial", "functools.partial.args": "library/functools.html#functools.partial.args", "functools.partial.func": "library/functools.html#functools.partial.func", "functools.partial.keywords": "library/functools.html#functools.partial.keywords", "functools.partialmethod": "library/functools.html#functools.partialmethod", "functools.reduce()": "library/functools.html#functools.reduce", "functools.singledispatch()": "library/functools.html#functools.singledispatch", "functools.singledispatchmethod": "library/functools.html#functools.singledispatchmethod", "functools.total_ordering()": "library/functools.html#functools.total_ordering", "functools.update_wrapper()": "library/functools.html#functools.update_wrapper", "functools.wraps()": "library/functools.html#functools.wraps", "future (statement)": "reference/simple_stmts.html#index-40", "Future and Task private constructors (Extending)": "library/asyncio-extending.html#future-and-task-private-constructors", "Future Functions (Futures)": "library/asyncio-future.html#future-functions", "Future Object (Futures)": "library/asyncio-future.html#future-object", "Future Objects (concurrent.futures)": "library/concurrent.futures.html#future-objects", "future__._Feature": "library/__future__.html#future__._Feature", "future__._Feature.compiler_flag": "library/__future__.html#future__._Feature.compiler_flag", "future__._Feature.getMandatoryRelease()": "library/__future__.html#future__._Feature.getMandatoryRelease", "future__._Feature.getOptionalRelease()": "library/__future__.html#future__._Feature.getOptionalRelease", "Futures": "library/asyncio-future.html", "FutureWarning": "library/exceptions.html#FutureWarning", "garbage collection": "glossary.html#term-garbage-collection", "gc": "library/gc.html", "gc.callbacks": "library/gc.html#gc.callbacks", "gc.collect()": "library/gc.html#gc.collect", "gc.DEBUG_COLLECTABLE": "library/gc.html#gc.DEBUG_COLLECTABLE", "gc.DEBUG_LEAK": "library/gc.html#gc.DEBUG_LEAK", "gc.DEBUG_SAVEALL": "library/gc.html#gc.DEBUG_SAVEALL", "gc.DEBUG_STATS": "library/gc.html#gc.DEBUG_STATS", "gc.DEBUG_UNCOLLECTABLE": "library/gc.html#gc.DEBUG_UNCOLLECTABLE", "gc.disable()": "library/gc.html#gc.disable", "gc.enable()": "library/gc.html#gc.enable", "gc.freeze()": "library/gc.html#gc.freeze", "gc.garbage": "library/gc.html#gc.garbage", "gc.get_count()": "library/gc.html#gc.get_count", "gc.get_debug()": "library/gc.html#gc.get_debug", "gc.get_freeze_count()": "library/gc.html#gc.get_freeze_count", "gc.get_objects()": "library/gc.html#gc.get_objects", "gc.get_referents()": "library/gc.html#gc.get_referents", "gc.get_referrers()": "library/gc.html#gc.get_referrers", "gc.get_stats()": "library/gc.html#gc.get_stats", "gc.get_threshold()": "library/gc.html#gc.get_threshold", "gc.is_finalized()": "library/gc.html#gc.is_finalized", "gc.is_tracked()": "library/gc.html#gc.is_tracked", "gc.isenabled()": "library/gc.html#gc.isenabled", "gc.set_debug()": "library/gc.html#gc.set_debug", "gc.set_threshold()": "library/gc.html#gc.set_threshold", "gc.unfreeze()": "library/gc.html#gc.unfreeze", "General Python FAQ": "faq/general.html", "General rules (signal)": "library/signal.html#general-rules", "Generating Symbol Tables (symtable)": "library/symtable.html#generating-symbol-tables", "Generating tokens (secrets)": "library/secrets.html#generating-tokens", "generator": "glossary.html#term-generator", "generator expression": "glossary.html#term-generator-expression", "generator iterator": "glossary.html#term-generator-iterator", "Generator Objects": "c-api/gen.html", "generator.__next__()": "reference/expressions.html#generator.__next__", "generator.close()": "reference/expressions.html#generator.close", "generator.send()": "reference/expressions.html#generator.send", "generator.throw()": "reference/expressions.html#generator.throw", "GeneratorExit": "library/exceptions.html#GeneratorExit", "generic function": "glossary.html#term-generic-function", "Generic Operating System Services": "library/allos.html", "generic type": "glossary.html#term-generic-type", "genericalias.__args__": "library/stdtypes.html#genericalias.__args__", "genericalias.__origin__": "library/stdtypes.html#genericalias.__origin__", "genericalias.__parameters__": "library/stdtypes.html#genericalias.__parameters__", "genericalias.__unpacked__": "library/stdtypes.html#genericalias.__unpacked__", "Generics (typing)": "library/typing.html#generics", "Get started (turtle)": "library/turtle.html#get-started", "getattr()": "library/functions.html#getattr", "getpass": "library/getpass.html", "getpass.getpass()": "library/getpass.html#getpass.getpass", "getpass.GetPassWarning": "library/getpass.html#getpass.GetPassWarning", "getpass.getuser()": "library/getpass.html#getpass.getuser", "gettext": "library/gettext.html", "gettext.bindtextdomain()": "library/gettext.html#gettext.bindtextdomain", "gettext.dgettext()": "library/gettext.html#gettext.dgettext", "gettext.dngettext()": "library/gettext.html#gettext.dngettext", "gettext.dnpgettext()": "library/gettext.html#gettext.dnpgettext", "gettext.dpgettext()": "library/gettext.html#gettext.dpgettext", "gettext.find()": "library/gettext.html#gettext.find", "gettext.gettext()": "library/gettext.html#gettext.gettext", "gettext.GNUTranslations": "library/gettext.html#gettext.GNUTranslations", "gettext.GNUTranslations.gettext()": "library/gettext.html#gettext.GNUTranslations.gettext", "gettext.GNUTranslations.ngettext()": "library/gettext.html#gettext.GNUTranslations.ngettext", "gettext.GNUTranslations.npgettext()": "library/gettext.html#gettext.GNUTranslations.npgettext", "gettext.GNUTranslations.pgettext()": "library/gettext.html#gettext.GNUTranslations.pgettext", "gettext.install()": "library/gettext.html#gettext.install", "gettext.ngettext()": "library/gettext.html#gettext.ngettext", "gettext.npgettext()": "library/gettext.html#gettext.npgettext", "gettext.NullTranslations": "library/gettext.html#gettext.NullTranslations", "gettext.NullTranslations._parse()": "library/gettext.html#gettext.NullTranslations._parse", "gettext.NullTranslations.add_fallback()": "library/gettext.html#gettext.NullTranslations.add_fallback", "gettext.NullTranslations.charset()": "library/gettext.html#gettext.NullTranslations.charset", "gettext.NullTranslations.gettext()": "library/gettext.html#gettext.NullTranslations.gettext", "gettext.NullTranslations.info()": "library/gettext.html#gettext.NullTranslations.info", "gettext.NullTranslations.install()": "library/gettext.html#gettext.NullTranslations.install", "gettext.NullTranslations.ngettext()": "library/gettext.html#gettext.NullTranslations.ngettext", "gettext.NullTranslations.npgettext()": "library/gettext.html#gettext.NullTranslations.npgettext", "gettext.NullTranslations.pgettext()": "library/gettext.html#gettext.NullTranslations.pgettext", "gettext.pgettext()": "library/gettext.html#gettext.pgettext", "gettext.textdomain()": "library/gettext.html#gettext.textdomain", "gettext.translation()": "library/gettext.html#gettext.translation", "Getting and Setting the Policy (Policies)": "library/asyncio-policy.html#getting-and-setting-the-policy", "GIL": "glossary.html#term-GIL", "glob": "library/glob.html", "glob.escape()": "library/glob.html#glob.escape", "glob.glob()": "library/glob.html#glob.glob", "glob.iglob()": "library/glob.html#glob.iglob", "glob.translate()": "library/glob.html#glob.translate", "global (name binding)": "reference/simple_stmts.html#index-43", "global (statement)": "reference/simple_stmts.html#index-43", "global interpreter lock": "glossary.html#term-global-interpreter-lock", "Globals (zoneinfo)": "library/zoneinfo.html#globals", "globals()": "library/functions.html#globals", "Glossary": "glossary.html", "GNU gettext API (gettext)": "library/gettext.html#gnu-gettext-api", "Graphic User Interface FAQ": "faq/gui.html", "Graphical User Interfaces with Tk": "library/tk.html", "graphlib": "library/graphlib.html", "graphlib.CycleError": "library/graphlib.html#graphlib.CycleError", "graphlib.TopologicalSorter": "library/graphlib.html#graphlib.TopologicalSorter", "graphlib.TopologicalSorter.add()": "library/graphlib.html#graphlib.TopologicalSorter.add", "graphlib.TopologicalSorter.done()": "library/graphlib.html#graphlib.TopologicalSorter.done", "graphlib.TopologicalSorter.get_ready()": "library/graphlib.html#graphlib.TopologicalSorter.get_ready", "graphlib.TopologicalSorter.is_active()": "library/graphlib.html#graphlib.TopologicalSorter.is_active", "graphlib.TopologicalSorter.prepare()": "library/graphlib.html#graphlib.TopologicalSorter.prepare", "graphlib.TopologicalSorter.static_order()": "library/graphlib.html#graphlib.TopologicalSorter.static_order", "grp": "library/grp.html", "grp.getgrall()": "library/grp.html#grp.getgrall", "grp.getgrgid()": "library/grp.html#grp.getgrgid", "grp.getgrnam()": "library/grp.html#grp.getgrnam", "gzip": "library/gzip.html", "gzip.BadGzipFile": "library/gzip.html#gzip.BadGzipFile", "gzip.compress()": "library/gzip.html#gzip.compress", "gzip.decompress()": "library/gzip.html#gzip.decompress", "gzip.GzipFile": "library/gzip.html#gzip.GzipFile", "gzip.GzipFile.mode": "library/gzip.html#gzip.GzipFile.mode", "gzip.GzipFile.mtime": "library/gzip.html#gzip.GzipFile.mtime", "gzip.GzipFile.name": "library/gzip.html#gzip.GzipFile.name", "gzip.GzipFile.peek()": "library/gzip.html#gzip.GzipFile.peek", "gzip.open()": "library/gzip.html#gzip.open", "Handler Objects (logging)": "library/logging.html#handler-objects", "Handling Keyboard Interruption (Runners)": "library/asyncio-runner.html#handling-keyboard-interruption", "Handy Reference (tkinter)": "library/tkinter.html#handy-reference", "hasattr()": "library/functions.html#hasattr", "Hash algorithms (hashlib)": "library/hashlib.html#hash-algorithms", "Hash Objects (hashlib)": "library/hashlib.html#hash-objects", "hash()": "library/functions.html#hash", "hash-based pyc": "glossary.html#term-hash-based-pyc", "hashable": "glossary.html#term-hashable", "hashlib": "library/hashlib.html", "hashlib.algorithms_available": "library/hashlib.html#hashlib.algorithms_available", "hashlib.algorithms_guaranteed": "library/hashlib.html#hashlib.algorithms_guaranteed", "hashlib.blake2b()": "library/hashlib.html#hashlib.blake2b", "hashlib.blake2b.MAX_DIGEST_SIZE": "library/hashlib.html#hashlib.blake2b.MAX_DIGEST_SIZE", "hashlib.blake2b.MAX_KEY_SIZE": "library/hashlib.html#hashlib.blake2b.MAX_KEY_SIZE", "hashlib.blake2b.PERSON_SIZE": "library/hashlib.html#hashlib.blake2b.PERSON_SIZE", "hashlib.blake2b.SALT_SIZE": "library/hashlib.html#hashlib.blake2b.SALT_SIZE", "hashlib.blake2s()": "library/hashlib.html#hashlib.blake2s", "hashlib.blake2s.MAX_DIGEST_SIZE": "library/hashlib.html#hashlib.blake2s.MAX_DIGEST_SIZE", "hashlib.blake2s.MAX_KEY_SIZE": "library/hashlib.html#hashlib.blake2s.MAX_KEY_SIZE", "hashlib.blake2s.PERSON_SIZE": "library/hashlib.html#hashlib.blake2s.PERSON_SIZE", "hashlib.blake2s.SALT_SIZE": "library/hashlib.html#hashlib.blake2s.SALT_SIZE", "hashlib.file_digest()": "library/hashlib.html#hashlib.file_digest", "hashlib.hash.block_size": "library/hashlib.html#hashlib.hash.block_size", "hashlib.hash.copy()": "library/hashlib.html#hashlib.hash.copy", "hashlib.hash.digest()": "library/hashlib.html#hashlib.hash.digest", "hashlib.hash.digest_size": "library/hashlib.html#hashlib.hash.digest_size", "hashlib.hash.hexdigest()": "library/hashlib.html#hashlib.hash.hexdigest", "hashlib.hash.name": "library/hashlib.html#hashlib.hash.name", "hashlib.hash.update()": "library/hashlib.html#hashlib.hash.update", "hashlib.md5()": "library/hashlib.html#hashlib.md5", "hashlib.new()": "library/hashlib.html#hashlib.new", "hashlib.pbkdf2_hmac()": "library/hashlib.html#hashlib.pbkdf2_hmac", "hashlib.scrypt()": "library/hashlib.html#hashlib.scrypt", "hashlib.sha1()": "library/hashlib.html#hashlib.sha1", "hashlib.sha224()": "library/hashlib.html#hashlib.sha224", "hashlib.sha256()": "library/hashlib.html#hashlib.sha256", "hashlib.sha384()": "library/hashlib.html#hashlib.sha384", "hashlib.sha3_224()": "library/hashlib.html#hashlib.sha3_224", "hashlib.sha3_256()": "library/hashlib.html#hashlib.sha3_256", "hashlib.sha3_384()": "library/hashlib.html#hashlib.sha3_384", "hashlib.sha3_512()": "library/hashlib.html#hashlib.sha3_512", "hashlib.sha512()": "library/hashlib.html#hashlib.sha512", "hashlib.shake.digest()": "library/hashlib.html#hashlib.shake.digest", "hashlib.shake.hexdigest()": "library/hashlib.html#hashlib.shake.hexdigest", "hashlib.shake_128()": "library/hashlib.html#hashlib.shake_128", "hashlib.shake_256()": "library/hashlib.html#hashlib.shake_256", "heapq": "library/heapq.html", "heapq.heapify()": "library/heapq.html#heapq.heapify", "heapq.heappop()": "library/heapq.html#heapq.heappop", "heapq.heappush()": "library/heapq.html#heapq.heappush", "heapq.heappushpop()": "library/heapq.html#heapq.heappushpop", "heapq.heapreplace()": "library/heapq.html#heapq.heapreplace", "heapq.merge()": "library/heapq.html#heapq.merge", "heapq.nlargest()": "library/heapq.html#heapq.nlargest", "heapq.nsmallest()": "library/heapq.html#heapq.nsmallest", "Help and configuration (turtle)": "library/turtle.html#help-and-configuration", "Help and Preferences (IDLE)": "library/idle.html#help-and-preferences", "help()": "library/functions.html#help", "Helper functions (string)": "library/string.html#helper-functions", "Helpers (unittest.mock)": "library/unittest.mock.html#helpers", "hex()": "library/functions.html#hex", "High-level API Index": "library/asyncio-api-index.html", "High-level Module Interface (io)": "library/io.html#high-level-module-interface", "History and License": "license.html", "History file (readline)": "library/readline.html#history-file", "History list (readline)": "library/readline.html#history-list", "hmac": "library/hmac.html", "hmac.compare_digest()": "library/hmac.html#hmac.compare_digest", "hmac.digest()": "library/hmac.html#hmac.digest", "hmac.HMAC.block_size": "library/hmac.html#hmac.HMAC.block_size", "hmac.HMAC.copy()": "library/hmac.html#hmac.HMAC.copy", "hmac.HMAC.digest()": "library/hmac.html#hmac.HMAC.digest", "hmac.HMAC.digest_size": "library/hmac.html#hmac.HMAC.digest_size", "hmac.HMAC.hexdigest()": "library/hmac.html#hmac.HMAC.hexdigest", "hmac.HMAC.name": "library/hmac.html#hmac.HMAC.name", "hmac.HMAC.update()": "library/hmac.html#hmac.HMAC.update", "hmac.new()": "library/hmac.html#hmac.new", "Home scheme (sysconfig)": "library/sysconfig.html#home-scheme", "How It Works (doctest)": "library/doctest.html#how-it-works", "How to port Python 2 Code to Python 3": "howto/pyporting.html", "How to\u2026 (turtle)": "library/turtle.html#how-to", "How venvs work (venv)": "library/venv.html#how-venvs-work", "How-to guides (sqlite3)": "library/sqlite3.html#how-to-guides", "HOWTO Fetch Internet Resources Using The urllib Package": "howto/urllib2.html", "html": "library/html.html", "html.entities": "library/html.entities.html", "html.entities.codepoint2name": "library/html.entities.html#html.entities.codepoint2name", "html.entities.entitydefs": "library/html.entities.html#html.entities.entitydefs", "html.entities.html5": "library/html.entities.html#html.entities.html5", "html.entities.name2codepoint": "library/html.entities.html#html.entities.name2codepoint", "html.escape()": "library/html.html#html.escape", "html.parser": "library/html.parser.html", "html.parser.HTMLParser": "library/html.parser.html#html.parser.HTMLParser", "html.parser.HTMLParser.close()": "library/html.parser.html#html.parser.HTMLParser.close", "html.parser.HTMLParser.feed()": "library/html.parser.html#html.parser.HTMLParser.feed", "html.parser.HTMLParser.get_starttag_text()": "library/html.parser.html#html.parser.HTMLParser.get_starttag_text", "html.parser.HTMLParser.getpos()": "library/html.parser.html#html.parser.HTMLParser.getpos", "html.parser.HTMLParser.handle_charref()": "library/html.parser.html#html.parser.HTMLParser.handle_charref", "html.parser.HTMLParser.handle_comment()": "library/html.parser.html#html.parser.HTMLParser.handle_comment", "html.parser.HTMLParser.handle_data()": "library/html.parser.html#html.parser.HTMLParser.handle_data", "html.parser.HTMLParser.handle_decl()": "library/html.parser.html#html.parser.HTMLParser.handle_decl", "html.parser.HTMLParser.handle_endtag()": "library/html.parser.html#html.parser.HTMLParser.handle_endtag", "html.parser.HTMLParser.handle_entityref()": "library/html.parser.html#html.parser.HTMLParser.handle_entityref", "html.parser.HTMLParser.handle_pi()": "library/html.parser.html#html.parser.HTMLParser.handle_pi", "html.parser.HTMLParser.handle_startendtag()": "library/html.parser.html#html.parser.HTMLParser.handle_startendtag", "html.parser.HTMLParser.handle_starttag()": "library/html.parser.html#html.parser.HTMLParser.handle_starttag", "html.parser.HTMLParser.reset()": "library/html.parser.html#html.parser.HTMLParser.reset", "html.parser.HTMLParser.unknown_decl()": "library/html.parser.html#html.parser.HTMLParser.unknown_decl", "html.unescape()": "library/html.html#html.unescape", "HTMLParser Methods (html.parser)": "library/html.parser.html#htmlparser-methods", "http": "library/http.html", "HTTP methods (http)": "library/http.html#http-methods", "HTTP status category (http)": "library/http.html#http-status-category", "HTTP status codes (http)": "library/http.html#http-status-codes", "http.client": "library/http.client.html", "http.client.BadStatusLine": "library/http.client.html#http.client.BadStatusLine", "http.client.CannotSendHeader": "library/http.client.html#http.client.CannotSendHeader", "http.client.CannotSendRequest": "library/http.client.html#http.client.CannotSendRequest", "http.client.HTTP_PORT": "library/http.client.html#http.client.HTTP_PORT", "http.client.HTTPConnection": "library/http.client.html#http.client.HTTPConnection", "http.client.HTTPConnection.blocksize": "library/http.client.html#http.client.HTTPConnection.blocksize", "http.client.HTTPConnection.close()": "library/http.client.html#http.client.HTTPConnection.close", "http.client.HTTPConnection.connect()": "library/http.client.html#http.client.HTTPConnection.connect", "http.client.HTTPConnection.endheaders()": "library/http.client.html#http.client.HTTPConnection.endheaders", "http.client.HTTPConnection.get_proxy_response_headers()": "library/http.client.html#http.client.HTTPConnection.get_proxy_response_headers", "http.client.HTTPConnection.getresponse()": "library/http.client.html#http.client.HTTPConnection.getresponse", "http.client.HTTPConnection.putheader()": "library/http.client.html#http.client.HTTPConnection.putheader", "http.client.HTTPConnection.putrequest()": "library/http.client.html#http.client.HTTPConnection.putrequest", "http.client.HTTPConnection.request()": "library/http.client.html#http.client.HTTPConnection.request", "http.client.HTTPConnection.send()": "library/http.client.html#http.client.HTTPConnection.send", "http.client.HTTPConnection.set_debuglevel()": "library/http.client.html#http.client.HTTPConnection.set_debuglevel", "http.client.HTTPConnection.set_tunnel()": "library/http.client.html#http.client.HTTPConnection.set_tunnel", "http.client.HTTPException": "library/http.client.html#http.client.HTTPException", "http.client.HTTPMessage": "library/http.client.html#http.client.HTTPMessage", "http.client.HTTPResponse": "library/http.client.html#http.client.HTTPResponse", "http.client.HTTPResponse.closed": "library/http.client.html#http.client.HTTPResponse.closed", "http.client.HTTPResponse.debuglevel": "library/http.client.html#http.client.HTTPResponse.debuglevel", "http.client.HTTPResponse.fileno()": "library/http.client.html#http.client.HTTPResponse.fileno", "http.client.HTTPResponse.getcode()": "library/http.client.html#http.client.HTTPResponse.getcode", "http.client.HTTPResponse.getheader()": "library/http.client.html#http.client.HTTPResponse.getheader", "http.client.HTTPResponse.getheaders()": "library/http.client.html#http.client.HTTPResponse.getheaders", "http.client.HTTPResponse.geturl()": "library/http.client.html#http.client.HTTPResponse.geturl", "http.client.HTTPResponse.headers": "library/http.client.html#http.client.HTTPResponse.headers", "http.client.HTTPResponse.info()": "library/http.client.html#http.client.HTTPResponse.info", "http.client.HTTPResponse.msg": "library/http.client.html#http.client.HTTPResponse.msg", "http.client.HTTPResponse.read()": "library/http.client.html#http.client.HTTPResponse.read", "http.client.HTTPResponse.readinto()": "library/http.client.html#http.client.HTTPResponse.readinto", "http.client.HTTPResponse.reason": "library/http.client.html#http.client.HTTPResponse.reason", "http.client.HTTPResponse.status": "library/http.client.html#http.client.HTTPResponse.status", "http.client.HTTPResponse.url": "library/http.client.html#http.client.HTTPResponse.url", "http.client.HTTPResponse.version": "library/http.client.html#http.client.HTTPResponse.version", "http.client.HTTPS_PORT": "library/http.client.html#http.client.HTTPS_PORT", "http.client.HTTPSConnection": "library/http.client.html#http.client.HTTPSConnection", "http.client.ImproperConnectionState": "library/http.client.html#http.client.ImproperConnectionState", "http.client.IncompleteRead": "library/http.client.html#http.client.IncompleteRead", "http.client.InvalidURL": "library/http.client.html#http.client.InvalidURL", "http.client.LineTooLong": "library/http.client.html#http.client.LineTooLong", "http.client.NotConnected": "library/http.client.html#http.client.NotConnected", "http.client.parse_headers()": "library/http.client.html#http.client.parse_headers", "http.client.RemoteDisconnected": "library/http.client.html#http.client.RemoteDisconnected", "http.client.ResponseNotReady": "library/http.client.html#http.client.ResponseNotReady", "http.client.responses": "library/http.client.html#http.client.responses", "http.client.UnimplementedFileMode": "library/http.client.html#http.client.UnimplementedFileMode", "http.client.UnknownProtocol": "library/http.client.html#http.client.UnknownProtocol", "http.client.UnknownTransferEncoding": "library/http.client.html#http.client.UnknownTransferEncoding", "http.cookiejar": "library/http.cookiejar.html", "http.cookiejar.Cookie": "library/http.cookiejar.html#http.cookiejar.Cookie", "http.cookiejar.Cookie.comment": "library/http.cookiejar.html#http.cookiejar.Cookie.comment", "http.cookiejar.Cookie.comment_url": "library/http.cookiejar.html#http.cookiejar.Cookie.comment_url", "http.cookiejar.Cookie.discard": "library/http.cookiejar.html#http.cookiejar.Cookie.discard", "http.cookiejar.Cookie.domain": "library/http.cookiejar.html#http.cookiejar.Cookie.domain", "http.cookiejar.Cookie.domain_initial_dot": "library/http.cookiejar.html#http.cookiejar.Cookie.domain_initial_dot", "http.cookiejar.Cookie.domain_specified": "library/http.cookiejar.html#http.cookiejar.Cookie.domain_specified", "http.cookiejar.Cookie.expires": "library/http.cookiejar.html#http.cookiejar.Cookie.expires", "http.cookiejar.Cookie.get_nonstandard_attr()": "library/http.cookiejar.html#http.cookiejar.Cookie.get_nonstandard_attr", "http.cookiejar.Cookie.has_nonstandard_attr()": "library/http.cookiejar.html#http.cookiejar.Cookie.has_nonstandard_attr", "http.cookiejar.Cookie.is_expired()": "library/http.cookiejar.html#http.cookiejar.Cookie.is_expired", "http.cookiejar.Cookie.name": "library/http.cookiejar.html#http.cookiejar.Cookie.name", "http.cookiejar.Cookie.path": "library/http.cookiejar.html#http.cookiejar.Cookie.path", "http.cookiejar.Cookie.port": "library/http.cookiejar.html#http.cookiejar.Cookie.port", "http.cookiejar.Cookie.port_specified": "library/http.cookiejar.html#http.cookiejar.Cookie.port_specified", "http.cookiejar.Cookie.rfc2109": "library/http.cookiejar.html#http.cookiejar.Cookie.rfc2109", "http.cookiejar.Cookie.secure": "library/http.cookiejar.html#http.cookiejar.Cookie.secure", "http.cookiejar.Cookie.set_nonstandard_attr()": "library/http.cookiejar.html#http.cookiejar.Cookie.set_nonstandard_attr", "http.cookiejar.Cookie.value": "library/http.cookiejar.html#http.cookiejar.Cookie.value", "http.cookiejar.Cookie.version": "library/http.cookiejar.html#http.cookiejar.Cookie.version", "http.cookiejar.CookieJar": "library/http.cookiejar.html#http.cookiejar.CookieJar", "http.cookiejar.CookieJar.add_cookie_header()": "library/http.cookiejar.html#http.cookiejar.CookieJar.add_cookie_header", "http.cookiejar.CookieJar.clear()": "library/http.cookiejar.html#http.cookiejar.CookieJar.clear", "http.cookiejar.CookieJar.clear_session_cookies()": "library/http.cookiejar.html#http.cookiejar.CookieJar.clear_session_cookies", "http.cookiejar.CookieJar.extract_cookies()": "library/http.cookiejar.html#http.cookiejar.CookieJar.extract_cookies", "http.cookiejar.CookieJar.make_cookies()": "library/http.cookiejar.html#http.cookiejar.CookieJar.make_cookies", "http.cookiejar.CookieJar.set_cookie()": "library/http.cookiejar.html#http.cookiejar.CookieJar.set_cookie", "http.cookiejar.CookieJar.set_cookie_if_ok()": "library/http.cookiejar.html#http.cookiejar.CookieJar.set_cookie_if_ok", "http.cookiejar.CookieJar.set_policy()": "library/http.cookiejar.html#http.cookiejar.CookieJar.set_policy", "http.cookiejar.CookiePolicy": "library/http.cookiejar.html#http.cookiejar.CookiePolicy", "http.cookiejar.CookiePolicy.domain_return_ok()": "library/http.cookiejar.html#http.cookiejar.CookiePolicy.domain_return_ok", "http.cookiejar.CookiePolicy.hide_cookie2": "library/http.cookiejar.html#http.cookiejar.CookiePolicy.hide_cookie2", "http.cookiejar.CookiePolicy.netscape": "library/http.cookiejar.html#http.cookiejar.CookiePolicy.netscape", "http.cookiejar.CookiePolicy.path_return_ok()": "library/http.cookiejar.html#http.cookiejar.CookiePolicy.path_return_ok", "http.cookiejar.CookiePolicy.return_ok()": "library/http.cookiejar.html#http.cookiejar.CookiePolicy.return_ok", "http.cookiejar.CookiePolicy.rfc2965": "library/http.cookiejar.html#http.cookiejar.CookiePolicy.rfc2965", "http.cookiejar.CookiePolicy.set_ok()": "library/http.cookiejar.html#http.cookiejar.CookiePolicy.set_ok", "http.cookiejar.DefaultCookiePolicy": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy", "http.cookiejar.DefaultCookiePolicy.allowed_domains()": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.allowed_domains", "http.cookiejar.DefaultCookiePolicy.blocked_domains()": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.blocked_domains", "http.cookiejar.DefaultCookiePolicy.DomainLiberal": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.DomainLiberal", "http.cookiejar.DefaultCookiePolicy.DomainRFC2965Match": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.DomainRFC2965Match", "http.cookiejar.DefaultCookiePolicy.DomainStrict": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.DomainStrict", "http.cookiejar.DefaultCookiePolicy.DomainStrictNoDots": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.DomainStrictNoDots", "http.cookiejar.DefaultCookiePolicy.DomainStrictNonDomain": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.DomainStrictNonDomain", "http.cookiejar.DefaultCookiePolicy.is_blocked()": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.is_blocked", "http.cookiejar.DefaultCookiePolicy.is_not_allowed()": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.is_not_allowed", "http.cookiejar.DefaultCookiePolicy.rfc2109_as_netscape": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.rfc2109_as_netscape", "http.cookiejar.DefaultCookiePolicy.set_allowed_domains()": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.set_allowed_domains", "http.cookiejar.DefaultCookiePolicy.set_blocked_domains()": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.set_blocked_domains", "http.cookiejar.DefaultCookiePolicy.strict_domain": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.strict_domain", "http.cookiejar.DefaultCookiePolicy.strict_ns_domain": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.strict_ns_domain", "http.cookiejar.DefaultCookiePolicy.strict_ns_set_initial_dollar": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.strict_ns_set_initial_dollar", "http.cookiejar.DefaultCookiePolicy.strict_ns_set_path": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.strict_ns_set_path", "http.cookiejar.DefaultCookiePolicy.strict_ns_unverifiable": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.strict_ns_unverifiable", "http.cookiejar.DefaultCookiePolicy.strict_rfc2965_unverifiable": "library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy.strict_rfc2965_unverifiable", "http.cookiejar.FileCookieJar": "library/http.cookiejar.html#http.cookiejar.FileCookieJar", "http.cookiejar.FileCookieJar.delayload": "library/http.cookiejar.html#http.cookiejar.FileCookieJar.delayload", "http.cookiejar.FileCookieJar.filename": "library/http.cookiejar.html#http.cookiejar.FileCookieJar.filename", "http.cookiejar.FileCookieJar.load()": "library/http.cookiejar.html#http.cookiejar.FileCookieJar.load", "http.cookiejar.FileCookieJar.revert()": "library/http.cookiejar.html#http.cookiejar.FileCookieJar.revert", "http.cookiejar.FileCookieJar.save()": "library/http.cookiejar.html#http.cookiejar.FileCookieJar.save", "http.cookiejar.LoadError": "library/http.cookiejar.html#http.cookiejar.LoadError", "http.cookiejar.LWPCookieJar": "library/http.cookiejar.html#http.cookiejar.LWPCookieJar", "http.cookiejar.MozillaCookieJar": "library/http.cookiejar.html#http.cookiejar.MozillaCookieJar", "http.cookies": "library/http.cookies.html", "http.cookies.BaseCookie": "library/http.cookies.html#http.cookies.BaseCookie", "http.cookies.BaseCookie.js_output()": "library/http.cookies.html#http.cookies.BaseCookie.js_output", "http.cookies.BaseCookie.load()": "library/http.cookies.html#http.cookies.BaseCookie.load", "http.cookies.BaseCookie.output()": "library/http.cookies.html#http.cookies.BaseCookie.output", "http.cookies.BaseCookie.value_decode()": "library/http.cookies.html#http.cookies.BaseCookie.value_decode", "http.cookies.BaseCookie.value_encode()": "library/http.cookies.html#http.cookies.BaseCookie.value_encode", "http.cookies.CookieError": "library/http.cookies.html#http.cookies.CookieError", "http.cookies.Morsel": "library/http.cookies.html#http.cookies.Morsel", "http.cookies.Morsel.coded_value": "library/http.cookies.html#http.cookies.Morsel.coded_value", "http.cookies.Morsel.comment": "library/http.cookies.html#http.cookies.Morsel.comment", "http.cookies.Morsel.copy()": "library/http.cookies.html#http.cookies.Morsel.copy", "http.cookies.Morsel.domain": "library/http.cookies.html#http.cookies.Morsel.domain", "http.cookies.Morsel.expires": "library/http.cookies.html#http.cookies.Morsel.expires", "http.cookies.Morsel.httponly": "library/http.cookies.html#http.cookies.Morsel.httponly", "http.cookies.Morsel.isReservedKey()": "library/http.cookies.html#http.cookies.Morsel.isReservedKey", "http.cookies.Morsel.js_output()": "library/http.cookies.html#http.cookies.Morsel.js_output", "http.cookies.Morsel.key": "library/http.cookies.html#http.cookies.Morsel.key", "http.cookies.Morsel.output()": "library/http.cookies.html#http.cookies.Morsel.output", "http.cookies.Morsel.OutputString()": "library/http.cookies.html#http.cookies.Morsel.OutputString", "http.cookies.Morsel.path": "library/http.cookies.html#http.cookies.Morsel.path", "http.cookies.Morsel.samesite": "library/http.cookies.html#http.cookies.Morsel.samesite", "http.cookies.Morsel.secure": "library/http.cookies.html#http.cookies.Morsel.secure", "http.cookies.Morsel.set()": "library/http.cookies.html#http.cookies.Morsel.set", "http.cookies.Morsel.setdefault()": "library/http.cookies.html#http.cookies.Morsel.setdefault", "http.cookies.Morsel.update()": "library/http.cookies.html#http.cookies.Morsel.update", "http.cookies.Morsel.value": "library/http.cookies.html#http.cookies.Morsel.value", "http.cookies.Morsel.version": "library/http.cookies.html#http.cookies.Morsel.version", "http.cookies.SimpleCookie": "library/http.cookies.html#http.cookies.SimpleCookie", "http.HTTPMethod": "library/http.html#http.HTTPMethod", "http.HTTPStatus": "library/http.html#http.HTTPStatus", "http.server": "library/http.server.html", "http.server.BaseHTTPRequestHandler": "library/http.server.html#http.server.BaseHTTPRequestHandler", "http.server.BaseHTTPRequestHandler.address_string()": "library/http.server.html#http.server.BaseHTTPRequestHandler.address_string", "http.server.BaseHTTPRequestHandler.client_address": "library/http.server.html#http.server.BaseHTTPRequestHandler.client_address", "http.server.BaseHTTPRequestHandler.close_connection": "library/http.server.html#http.server.BaseHTTPRequestHandler.close_connection", "http.server.BaseHTTPRequestHandler.command": "library/http.server.html#http.server.BaseHTTPRequestHandler.command", "http.server.BaseHTTPRequestHandler.date_time_string()": "library/http.server.html#http.server.BaseHTTPRequestHandler.date_time_string", "http.server.BaseHTTPRequestHandler.end_headers()": "library/http.server.html#http.server.BaseHTTPRequestHandler.end_headers", "http.server.BaseHTTPRequestHandler.error_content_type": "library/http.server.html#http.server.BaseHTTPRequestHandler.error_content_type", "http.server.BaseHTTPRequestHandler.error_message_format": "library/http.server.html#http.server.BaseHTTPRequestHandler.error_message_format", "http.server.BaseHTTPRequestHandler.flush_headers()": "library/http.server.html#http.server.BaseHTTPRequestHandler.flush_headers", "http.server.BaseHTTPRequestHandler.handle()": "library/http.server.html#http.server.BaseHTTPRequestHandler.handle", "http.server.BaseHTTPRequestHandler.handle_expect_100()": "library/http.server.html#http.server.BaseHTTPRequestHandler.handle_expect_100", "http.server.BaseHTTPRequestHandler.handle_one_request()": "library/http.server.html#http.server.BaseHTTPRequestHandler.handle_one_request", "http.server.BaseHTTPRequestHandler.headers": "library/http.server.html#http.server.BaseHTTPRequestHandler.headers", "http.server.BaseHTTPRequestHandler.log_date_time_string()": "library/http.server.html#http.server.BaseHTTPRequestHandler.log_date_time_string", "http.server.BaseHTTPRequestHandler.log_error()": "library/http.server.html#http.server.BaseHTTPRequestHandler.log_error", "http.server.BaseHTTPRequestHandler.log_message()": "library/http.server.html#http.server.BaseHTTPRequestHandler.log_message", "http.server.BaseHTTPRequestHandler.log_request()": "library/http.server.html#http.server.BaseHTTPRequestHandler.log_request", "http.server.BaseHTTPRequestHandler.MessageClass": "library/http.server.html#http.server.BaseHTTPRequestHandler.MessageClass", "http.server.BaseHTTPRequestHandler.path": "library/http.server.html#http.server.BaseHTTPRequestHandler.path", "http.server.BaseHTTPRequestHandler.protocol_version": "library/http.server.html#http.server.BaseHTTPRequestHandler.protocol_version", "http.server.BaseHTTPRequestHandler.request_version": "library/http.server.html#http.server.BaseHTTPRequestHandler.request_version", "http.server.BaseHTTPRequestHandler.requestline": "library/http.server.html#http.server.BaseHTTPRequestHandler.requestline", "http.server.BaseHTTPRequestHandler.responses": "library/http.server.html#http.server.BaseHTTPRequestHandler.responses", "http.server.BaseHTTPRequestHandler.rfile": "library/http.server.html#http.server.BaseHTTPRequestHandler.rfile", "http.server.BaseHTTPRequestHandler.send_error()": "library/http.server.html#http.server.BaseHTTPRequestHandler.send_error", "http.server.BaseHTTPRequestHandler.send_header()": "library/http.server.html#http.server.BaseHTTPRequestHandler.send_header", "http.server.BaseHTTPRequestHandler.send_response()": "library/http.server.html#http.server.BaseHTTPRequestHandler.send_response", "http.server.BaseHTTPRequestHandler.send_response_only()": "library/http.server.html#http.server.BaseHTTPRequestHandler.send_response_only", "http.server.BaseHTTPRequestHandler.server": "library/http.server.html#http.server.BaseHTTPRequestHandler.server", "http.server.BaseHTTPRequestHandler.server_version": "library/http.server.html#http.server.BaseHTTPRequestHandler.server_version", "http.server.BaseHTTPRequestHandler.sys_version": "library/http.server.html#http.server.BaseHTTPRequestHandler.sys_version", "http.server.BaseHTTPRequestHandler.version_string()": "library/http.server.html#http.server.BaseHTTPRequestHandler.version_string", "http.server.BaseHTTPRequestHandler.wfile": "library/http.server.html#http.server.BaseHTTPRequestHandler.wfile", "http.server.CGIHTTPRequestHandler": "library/http.server.html#http.server.CGIHTTPRequestHandler", "http.server.CGIHTTPRequestHandler.cgi_directories": "library/http.server.html#http.server.CGIHTTPRequestHandler.cgi_directories", "http.server.CGIHTTPRequestHandler.do_POST()": "library/http.server.html#http.server.CGIHTTPRequestHandler.do_POST", "http.server.HTTPServer": "library/http.server.html#http.server.HTTPServer", "http.server.SimpleHTTPRequestHandler": "library/http.server.html#http.server.SimpleHTTPRequestHandler", "http.server.SimpleHTTPRequestHandler.do_GET()": "library/http.server.html#http.server.SimpleHTTPRequestHandler.do_GET", "http.server.SimpleHTTPRequestHandler.do_HEAD()": "library/http.server.html#http.server.SimpleHTTPRequestHandler.do_HEAD", "http.server.SimpleHTTPRequestHandler.extensions_map": "library/http.server.html#http.server.SimpleHTTPRequestHandler.extensions_map", "http.server.SimpleHTTPRequestHandler.server_version": "library/http.server.html#http.server.SimpleHTTPRequestHandler.server_version", "http.server.ThreadingHTTPServer": "library/http.server.html#http.server.ThreadingHTTPServer", "HTTPBasicAuthHandler Objects (urllib.request)": "library/urllib.request.html#httpbasicauthhandler-objects", "HTTPConnection Objects (http.client)": "library/http.client.html#httpconnection-objects", "HTTPCookieProcessor Objects (urllib.request)": "library/urllib.request.html#httpcookieprocessor-objects", "HTTPDigestAuthHandler Objects (urllib.request)": "library/urllib.request.html#httpdigestauthhandler-objects", "HTTPErrorProcessor Objects (urllib.request)": "library/urllib.request.html#httperrorprocessor-objects", "HTTPHandler (logging.handlers)": "library/logging.handlers.html#httphandler", "HTTPHandler Objects (urllib.request)": "library/urllib.request.html#httphandler-objects", "HTTPMessage Objects (http.client)": "library/http.client.html#httpmessage-objects", "HTTPPasswordMgr Objects (urllib.request)": "library/urllib.request.html#httppasswordmgr-objects", "HTTPPasswordMgrWithPriorAuth Objects (urllib.request)": "library/urllib.request.html#httppasswordmgrwithpriorauth-objects", "HTTPRedirectHandler Objects (urllib.request)": "library/urllib.request.html#httpredirecthandler-objects", "HTTPResponse Objects (http.client)": "library/http.client.html#httpresponse-objects", "HTTPSHandler Objects (urllib.request)": "library/urllib.request.html#httpshandler-objects", "Hyperbolic functions (cmath)": "library/cmath.html#hyperbolic-functions", "Hyperbolic functions (math)": "library/math.html#hyperbolic-functions", "id()": "library/functions.html#id", "IDLE": "library/idle.html", "idlelib (IDLE)": "library/idle.html#module-idlelib", "if (keyword)": "reference/compound_stmts.html#index-18", "if (statement)": "reference/compound_stmts.html#index-3", "IMAP4 Example (imaplib)": "library/imaplib.html#imap4-example", "IMAP4 Objects (imaplib)": "library/imaplib.html#imap4-objects", "imaplib": "library/imaplib.html", "imaplib.IMAP4": "library/imaplib.html#imaplib.IMAP4", "imaplib.IMAP4.abort": "library/imaplib.html#imaplib.IMAP4.abort", "imaplib.IMAP4.append()": "library/imaplib.html#imaplib.IMAP4.append", "imaplib.IMAP4.authenticate()": "library/imaplib.html#imaplib.IMAP4.authenticate", "imaplib.IMAP4.check()": "library/imaplib.html#imaplib.IMAP4.check", "imaplib.IMAP4.close()": "library/imaplib.html#imaplib.IMAP4.close", "imaplib.IMAP4.copy()": "library/imaplib.html#imaplib.IMAP4.copy", "imaplib.IMAP4.create()": "library/imaplib.html#imaplib.IMAP4.create", "imaplib.IMAP4.debug": "library/imaplib.html#imaplib.IMAP4.debug", "imaplib.IMAP4.delete()": "library/imaplib.html#imaplib.IMAP4.delete", "imaplib.IMAP4.deleteacl()": "library/imaplib.html#imaplib.IMAP4.deleteacl", "imaplib.IMAP4.enable()": "library/imaplib.html#imaplib.IMAP4.enable", "imaplib.IMAP4.error": "library/imaplib.html#imaplib.IMAP4.error", "imaplib.IMAP4.expunge()": "library/imaplib.html#imaplib.IMAP4.expunge", "imaplib.IMAP4.fetch()": "library/imaplib.html#imaplib.IMAP4.fetch", "imaplib.IMAP4.getacl()": "library/imaplib.html#imaplib.IMAP4.getacl", "imaplib.IMAP4.getannotation()": "library/imaplib.html#imaplib.IMAP4.getannotation", "imaplib.IMAP4.getquota()": "library/imaplib.html#imaplib.IMAP4.getquota", "imaplib.IMAP4.getquotaroot()": "library/imaplib.html#imaplib.IMAP4.getquotaroot", "imaplib.IMAP4.list()": "library/imaplib.html#imaplib.IMAP4.list", "imaplib.IMAP4.login()": "library/imaplib.html#imaplib.IMAP4.login", "imaplib.IMAP4.login_cram_md5()": "library/imaplib.html#imaplib.IMAP4.login_cram_md5", "imaplib.IMAP4.logout()": "library/imaplib.html#imaplib.IMAP4.logout", "imaplib.IMAP4.lsub()": "library/imaplib.html#imaplib.IMAP4.lsub", "imaplib.IMAP4.myrights()": "library/imaplib.html#imaplib.IMAP4.myrights", "imaplib.IMAP4.namespace()": "library/imaplib.html#imaplib.IMAP4.namespace", "imaplib.IMAP4.noop()": "library/imaplib.html#imaplib.IMAP4.noop", "imaplib.IMAP4.open()": "library/imaplib.html#imaplib.IMAP4.open", "imaplib.IMAP4.partial()": "library/imaplib.html#imaplib.IMAP4.partial", "imaplib.IMAP4.PROTOCOL_VERSION": "library/imaplib.html#imaplib.IMAP4.PROTOCOL_VERSION", "imaplib.IMAP4.proxyauth()": "library/imaplib.html#imaplib.IMAP4.proxyauth", "imaplib.IMAP4.read()": "library/imaplib.html#imaplib.IMAP4.read", "imaplib.IMAP4.readline()": "library/imaplib.html#imaplib.IMAP4.readline", "imaplib.IMAP4.readonly": "library/imaplib.html#imaplib.IMAP4.readonly", "imaplib.IMAP4.recent()": "library/imaplib.html#imaplib.IMAP4.recent", "imaplib.IMAP4.rename()": "library/imaplib.html#imaplib.IMAP4.rename", "imaplib.IMAP4.response()": "library/imaplib.html#imaplib.IMAP4.response", "imaplib.IMAP4.search()": "library/imaplib.html#imaplib.IMAP4.search", "imaplib.IMAP4.select()": "library/imaplib.html#imaplib.IMAP4.select", "imaplib.IMAP4.send()": "library/imaplib.html#imaplib.IMAP4.send", "imaplib.IMAP4.setacl()": "library/imaplib.html#imaplib.IMAP4.setacl", "imaplib.IMAP4.setannotation()": "library/imaplib.html#imaplib.IMAP4.setannotation", "imaplib.IMAP4.setquota()": "library/imaplib.html#imaplib.IMAP4.setquota", "imaplib.IMAP4.shutdown()": "library/imaplib.html#imaplib.IMAP4.shutdown", "imaplib.IMAP4.socket()": "library/imaplib.html#imaplib.IMAP4.socket", "imaplib.IMAP4.sort()": "library/imaplib.html#imaplib.IMAP4.sort", "imaplib.IMAP4.starttls()": "library/imaplib.html#imaplib.IMAP4.starttls", "imaplib.IMAP4.status()": "library/imaplib.html#imaplib.IMAP4.status", "imaplib.IMAP4.store()": "library/imaplib.html#imaplib.IMAP4.store", "imaplib.IMAP4.subscribe()": "library/imaplib.html#imaplib.IMAP4.subscribe", "imaplib.IMAP4.thread()": "library/imaplib.html#imaplib.IMAP4.thread", "imaplib.IMAP4.uid()": "library/imaplib.html#imaplib.IMAP4.uid", "imaplib.IMAP4.unselect()": "library/imaplib.html#imaplib.IMAP4.unselect", "imaplib.IMAP4.unsubscribe()": "library/imaplib.html#imaplib.IMAP4.unsubscribe", "imaplib.IMAP4.utf8_enabled": "library/imaplib.html#imaplib.IMAP4.utf8_enabled", "imaplib.IMAP4.xatom()": "library/imaplib.html#imaplib.IMAP4.xatom", "imaplib.IMAP4_SSL": "library/imaplib.html#imaplib.IMAP4_SSL", "imaplib.IMAP4_stream": "library/imaplib.html#imaplib.IMAP4_stream", "imaplib.Int2AP()": "library/imaplib.html#imaplib.Int2AP", "imaplib.Internaldate2tuple()": "library/imaplib.html#imaplib.Internaldate2tuple", "imaplib.ParseFlags()": "library/imaplib.html#imaplib.ParseFlags", "imaplib.Time2Internaldate()": "library/imaplib.html#imaplib.Time2Internaldate", "immortal": "glossary.html#term-immortal", "immutable": "glossary.html#term-immutable", "import (statement)": "reference/simple_stmts.html#index-34", "import __main__ (__main__)": "library/__main__.html#import-main", "import path": "glossary.html#term-import-path", "import__()": "library/functions.html#import__", "importer": "glossary.html#term-importer", "ImportError": "library/exceptions.html#ImportError", "ImportError.name": "library/exceptions.html#ImportError.name", "ImportError.path": "library/exceptions.html#ImportError.path", "importing": "glossary.html#term-importing", "Importing Modules": "c-api/import.html", "importlib": "library/importlib.html", "importlib.__import__()": "library/importlib.html#importlib.__import__", "importlib.abc \u2013 Abstract base classes related to import (importlib)": "library/importlib.html#module-importlib.abc", "importlib.abc.ExecutionLoader": "library/importlib.html#importlib.abc.ExecutionLoader", "importlib.abc.ExecutionLoader.get_filename()": "library/importlib.html#importlib.abc.ExecutionLoader.get_filename", "importlib.abc.FileLoader": "library/importlib.html#importlib.abc.FileLoader", "importlib.abc.FileLoader.get_data()": "library/importlib.html#importlib.abc.FileLoader.get_data", "importlib.abc.FileLoader.get_filename()": "library/importlib.html#importlib.abc.FileLoader.get_filename", "importlib.abc.FileLoader.load_module()": "library/importlib.html#importlib.abc.FileLoader.load_module", "importlib.abc.FileLoader.name": "library/importlib.html#importlib.abc.FileLoader.name", "importlib.abc.FileLoader.path": "library/importlib.html#importlib.abc.FileLoader.path", "importlib.abc.InspectLoader": "library/importlib.html#importlib.abc.InspectLoader", "importlib.abc.InspectLoader.exec_module()": "library/importlib.html#importlib.abc.InspectLoader.exec_module", "importlib.abc.InspectLoader.get_code()": "library/importlib.html#importlib.abc.InspectLoader.get_code", "importlib.abc.InspectLoader.get_source()": "library/importlib.html#importlib.abc.InspectLoader.get_source", "importlib.abc.InspectLoader.is_package()": "library/importlib.html#importlib.abc.InspectLoader.is_package", "importlib.abc.InspectLoader.load_module()": "library/importlib.html#importlib.abc.InspectLoader.load_module", "importlib.abc.InspectLoader.source_to_code()": "library/importlib.html#importlib.abc.InspectLoader.source_to_code", "importlib.abc.Loader": "library/importlib.html#importlib.abc.Loader", "importlib.abc.Loader.create_module()": "library/importlib.html#importlib.abc.Loader.create_module", "importlib.abc.Loader.exec_module()": "library/importlib.html#importlib.abc.Loader.exec_module", "importlib.abc.Loader.load_module()": "library/importlib.html#importlib.abc.Loader.load_module", "importlib.abc.MetaPathFinder": "library/importlib.html#importlib.abc.MetaPathFinder", "importlib.abc.MetaPathFinder.find_spec()": "library/importlib.html#importlib.abc.MetaPathFinder.find_spec", "importlib.abc.MetaPathFinder.invalidate_caches()": "library/importlib.html#importlib.abc.MetaPathFinder.invalidate_caches", "importlib.abc.PathEntryFinder": "library/importlib.html#importlib.abc.PathEntryFinder", "importlib.abc.PathEntryFinder.find_spec()": "library/importlib.html#importlib.abc.PathEntryFinder.find_spec", "importlib.abc.PathEntryFinder.invalidate_caches()": "library/importlib.html#importlib.abc.PathEntryFinder.invalidate_caches", "importlib.abc.ResourceLoader": "library/importlib.html#importlib.abc.ResourceLoader", "importlib.abc.ResourceLoader.get_data()": "library/importlib.html#importlib.abc.ResourceLoader.get_data", "importlib.abc.ResourceReader": "library/importlib.html#importlib.abc.ResourceReader", "importlib.abc.ResourceReader.contents()": "library/importlib.html#importlib.abc.ResourceReader.contents", "importlib.abc.ResourceReader.is_resource()": "library/importlib.html#importlib.abc.ResourceReader.is_resource", "importlib.abc.ResourceReader.open_resource()": "library/importlib.html#importlib.abc.ResourceReader.open_resource", "importlib.abc.ResourceReader.resource_path()": "library/importlib.html#importlib.abc.ResourceReader.resource_path", "importlib.abc.SourceLoader": "library/importlib.html#importlib.abc.SourceLoader", "importlib.abc.SourceLoader.exec_module()": "library/importlib.html#importlib.abc.SourceLoader.exec_module", "importlib.abc.SourceLoader.get_code()": "library/importlib.html#importlib.abc.SourceLoader.get_code", "importlib.abc.SourceLoader.get_source()": "library/importlib.html#importlib.abc.SourceLoader.get_source", "importlib.abc.SourceLoader.is_package()": "library/importlib.html#importlib.abc.SourceLoader.is_package", "importlib.abc.SourceLoader.load_module()": "library/importlib.html#importlib.abc.SourceLoader.load_module", "importlib.abc.SourceLoader.path_mtime()": "library/importlib.html#importlib.abc.SourceLoader.path_mtime", "importlib.abc.SourceLoader.path_stats()": "library/importlib.html#importlib.abc.SourceLoader.path_stats", "importlib.abc.SourceLoader.set_data()": "library/importlib.html#importlib.abc.SourceLoader.set_data", "importlib.abc.Traversable": "library/importlib.html#importlib.abc.Traversable", "importlib.abc.Traversable.__truediv__()": "library/importlib.html#importlib.abc.Traversable.__truediv__", "importlib.abc.Traversable.is_dir()": "library/importlib.html#importlib.abc.Traversable.is_dir", "importlib.abc.Traversable.is_file()": "library/importlib.html#importlib.abc.Traversable.is_file", "importlib.abc.Traversable.iterdir()": "library/importlib.html#importlib.abc.Traversable.iterdir", "importlib.abc.Traversable.joinpath()": "library/importlib.html#importlib.abc.Traversable.joinpath", "importlib.abc.Traversable.name": "library/importlib.html#importlib.abc.Traversable.name", "importlib.abc.Traversable.open()": "library/importlib.html#importlib.abc.Traversable.open", "importlib.abc.Traversable.read_bytes()": "library/importlib.html#importlib.abc.Traversable.read_bytes", "importlib.abc.Traversable.read_text()": "library/importlib.html#importlib.abc.Traversable.read_text", "importlib.abc.TraversableResources": "library/importlib.html#importlib.abc.TraversableResources", "importlib.abc.TraversableResources.files()": "library/importlib.html#importlib.abc.TraversableResources.files", "importlib.import_module()": "library/importlib.html#importlib.import_module", "importlib.invalidate_caches()": "library/importlib.html#importlib.invalidate_caches", "importlib.machinery \u2013 Importers and path hooks (importlib)": "library/importlib.html#module-importlib.machinery", "importlib.machinery.all_suffixes()": "library/importlib.html#importlib.machinery.all_suffixes", "importlib.machinery.AppleFrameworkLoader": "library/importlib.html#importlib.machinery.AppleFrameworkLoader", "importlib.machinery.AppleFrameworkLoader.name": "library/importlib.html#importlib.machinery.AppleFrameworkLoader.name", "importlib.machinery.AppleFrameworkLoader.path": "library/importlib.html#importlib.machinery.AppleFrameworkLoader.path", "importlib.machinery.BuiltinImporter": "library/importlib.html#importlib.machinery.BuiltinImporter", "importlib.machinery.BYTECODE_SUFFIXES": "library/importlib.html#importlib.machinery.BYTECODE_SUFFIXES", "importlib.machinery.DEBUG_BYTECODE_SUFFIXES": "library/importlib.html#importlib.machinery.DEBUG_BYTECODE_SUFFIXES", "importlib.machinery.EXTENSION_SUFFIXES": "library/importlib.html#importlib.machinery.EXTENSION_SUFFIXES", "importlib.machinery.ExtensionFileLoader": "library/importlib.html#importlib.machinery.ExtensionFileLoader", "importlib.machinery.ExtensionFileLoader.create_module()": "library/importlib.html#importlib.machinery.ExtensionFileLoader.create_module", "importlib.machinery.ExtensionFileLoader.exec_module()": "library/importlib.html#importlib.machinery.ExtensionFileLoader.exec_module", "importlib.machinery.ExtensionFileLoader.get_code()": "library/importlib.html#importlib.machinery.ExtensionFileLoader.get_code", "importlib.machinery.ExtensionFileLoader.get_filename()": "library/importlib.html#importlib.machinery.ExtensionFileLoader.get_filename", "importlib.machinery.ExtensionFileLoader.get_source()": "library/importlib.html#importlib.machinery.ExtensionFileLoader.get_source", "importlib.machinery.ExtensionFileLoader.is_package()": "library/importlib.html#importlib.machinery.ExtensionFileLoader.is_package", "importlib.machinery.ExtensionFileLoader.name": "library/importlib.html#importlib.machinery.ExtensionFileLoader.name", "importlib.machinery.ExtensionFileLoader.path": "library/importlib.html#importlib.machinery.ExtensionFileLoader.path", "importlib.machinery.FileFinder": "library/importlib.html#importlib.machinery.FileFinder", "importlib.machinery.FileFinder.find_spec()": "library/importlib.html#importlib.machinery.FileFinder.find_spec", "importlib.machinery.FileFinder.invalidate_caches()": "library/importlib.html#importlib.machinery.FileFinder.invalidate_caches", "importlib.machinery.FileFinder.path": "library/importlib.html#importlib.machinery.FileFinder.path", "importlib.machinery.FileFinder.path_hook()": "library/importlib.html#importlib.machinery.FileFinder.path_hook", "importlib.machinery.FrozenImporter": "library/importlib.html#importlib.machinery.FrozenImporter", "importlib.machinery.ModuleSpec": "library/importlib.html#importlib.machinery.ModuleSpec", "importlib.machinery.ModuleSpec.cached": "library/importlib.html#importlib.machinery.ModuleSpec.cached", "importlib.machinery.ModuleSpec.has_location": "library/importlib.html#importlib.machinery.ModuleSpec.has_location", "importlib.machinery.ModuleSpec.loader": "library/importlib.html#importlib.machinery.ModuleSpec.loader", "importlib.machinery.ModuleSpec.loader_state": "library/importlib.html#importlib.machinery.ModuleSpec.loader_state", "importlib.machinery.ModuleSpec.name": "library/importlib.html#importlib.machinery.ModuleSpec.name", "importlib.machinery.ModuleSpec.origin": "library/importlib.html#importlib.machinery.ModuleSpec.origin", "importlib.machinery.ModuleSpec.parent": "library/importlib.html#importlib.machinery.ModuleSpec.parent", "importlib.machinery.ModuleSpec.submodule_search_locations": "library/importlib.html#importlib.machinery.ModuleSpec.submodule_search_locations", "importlib.machinery.NamespaceLoader": "library/importlib.html#importlib.machinery.NamespaceLoader", "importlib.machinery.OPTIMIZED_BYTECODE_SUFFIXES": "library/importlib.html#importlib.machinery.OPTIMIZED_BYTECODE_SUFFIXES", "importlib.machinery.PathFinder": "library/importlib.html#importlib.machinery.PathFinder", "importlib.machinery.PathFinder.find_spec()": "library/importlib.html#importlib.machinery.PathFinder.find_spec", "importlib.machinery.PathFinder.invalidate_caches()": "library/importlib.html#importlib.machinery.PathFinder.invalidate_caches", "importlib.machinery.SOURCE_SUFFIXES": "library/importlib.html#importlib.machinery.SOURCE_SUFFIXES", "importlib.machinery.SourceFileLoader": "library/importlib.html#importlib.machinery.SourceFileLoader", "importlib.machinery.SourceFileLoader.is_package()": "library/importlib.html#importlib.machinery.SourceFileLoader.is_package", "importlib.machinery.SourceFileLoader.load_module()": "library/importlib.html#importlib.machinery.SourceFileLoader.load_module", "importlib.machinery.SourceFileLoader.name": "library/importlib.html#importlib.machinery.SourceFileLoader.name", "importlib.machinery.SourceFileLoader.path": "library/importlib.html#importlib.machinery.SourceFileLoader.path", "importlib.machinery.SourceFileLoader.path_stats()": "library/importlib.html#importlib.machinery.SourceFileLoader.path_stats", "importlib.machinery.SourceFileLoader.set_data()": "library/importlib.html#importlib.machinery.SourceFileLoader.set_data", "importlib.machinery.SourcelessFileLoader": "library/importlib.html#importlib.machinery.SourcelessFileLoader", "importlib.machinery.SourcelessFileLoader.get_code()": "library/importlib.html#importlib.machinery.SourcelessFileLoader.get_code", "importlib.machinery.SourcelessFileLoader.get_source()": "library/importlib.html#importlib.machinery.SourcelessFileLoader.get_source", "importlib.machinery.SourcelessFileLoader.is_package()": "library/importlib.html#importlib.machinery.SourcelessFileLoader.is_package", "importlib.machinery.SourcelessFileLoader.load_module()": "library/importlib.html#importlib.machinery.SourcelessFileLoader.load_module", "importlib.machinery.SourcelessFileLoader.name": "library/importlib.html#importlib.machinery.SourcelessFileLoader.name", "importlib.machinery.SourcelessFileLoader.path": "library/importlib.html#importlib.machinery.SourcelessFileLoader.path", "importlib.machinery.WindowsRegistryFinder": "library/importlib.html#importlib.machinery.WindowsRegistryFinder", "importlib.metadata": "library/importlib.metadata.html", "importlib.reload()": "library/importlib.html#importlib.reload", "importlib.resources": "library/importlib.resources.html", "importlib.resources.abc": "library/importlib.resources.abc.html", "importlib.resources.abc.ResourceReader": "library/importlib.resources.abc.html#importlib.resources.abc.ResourceReader", "importlib.resources.abc.ResourceReader.contents()": "library/importlib.resources.abc.html#importlib.resources.abc.ResourceReader.contents", "importlib.resources.abc.ResourceReader.is_resource()": "library/importlib.resources.abc.html#importlib.resources.abc.ResourceReader.is_resource", "importlib.resources.abc.ResourceReader.open_resource()": "library/importlib.resources.abc.html#importlib.resources.abc.ResourceReader.open_resource", "importlib.resources.abc.ResourceReader.resource_path()": "library/importlib.resources.abc.html#importlib.resources.abc.ResourceReader.resource_path", "importlib.resources.abc.Traversable": "library/importlib.resources.abc.html#importlib.resources.abc.Traversable", "importlib.resources.abc.Traversable.__truediv__()": "library/importlib.resources.abc.html#importlib.resources.abc.Traversable.__truediv__", "importlib.resources.abc.Traversable.is_dir()": "library/importlib.resources.abc.html#importlib.resources.abc.Traversable.is_dir", "importlib.resources.abc.Traversable.is_file()": "library/importlib.resources.abc.html#importlib.resources.abc.Traversable.is_file", "importlib.resources.abc.Traversable.iterdir()": "library/importlib.resources.abc.html#importlib.resources.abc.Traversable.iterdir", "importlib.resources.abc.Traversable.joinpath()": "library/importlib.resources.abc.html#importlib.resources.abc.Traversable.joinpath", "importlib.resources.abc.Traversable.name": "library/importlib.resources.abc.html#importlib.resources.abc.Traversable.name", "importlib.resources.abc.Traversable.open()": "library/importlib.resources.abc.html#importlib.resources.abc.Traversable.open", "importlib.resources.abc.Traversable.read_bytes()": "library/importlib.resources.abc.html#importlib.resources.abc.Traversable.read_bytes", "importlib.resources.abc.Traversable.read_text()": "library/importlib.resources.abc.html#importlib.resources.abc.Traversable.read_text", "importlib.resources.abc.TraversableResources": "library/importlib.resources.abc.html#importlib.resources.abc.TraversableResources", "importlib.resources.abc.TraversableResources.files()": "library/importlib.resources.abc.html#importlib.resources.abc.TraversableResources.files", "importlib.resources.Anchor": "library/importlib.resources.html#importlib.resources.Anchor", "importlib.resources.as_file()": "library/importlib.resources.html#importlib.resources.as_file", "importlib.resources.contents()": "library/importlib.resources.html#importlib.resources.contents", "importlib.resources.files()": "library/importlib.resources.html#importlib.resources.files", "importlib.resources.is_resource()": "library/importlib.resources.html#importlib.resources.is_resource", "importlib.resources.open_binary()": "library/importlib.resources.html#importlib.resources.open_binary", "importlib.resources.open_text()": "library/importlib.resources.html#importlib.resources.open_text", "importlib.resources.path()": "library/importlib.resources.html#importlib.resources.path", "importlib.resources.read_binary()": "library/importlib.resources.html#importlib.resources.read_binary", "importlib.resources.read_text()": "library/importlib.resources.html#importlib.resources.read_text", "importlib.util \u2013 Utility code for importers (importlib)": "library/importlib.html#module-importlib.util", "importlib.util._incompatible_extension_module_restrictions()": "library/importlib.html#importlib.util._incompatible_extension_module_restrictions", "importlib.util.cache_from_source()": "library/importlib.html#importlib.util.cache_from_source", "importlib.util.decode_source()": "library/importlib.html#importlib.util.decode_source", "importlib.util.find_spec()": "library/importlib.html#importlib.util.find_spec", "importlib.util.LazyLoader": "library/importlib.html#importlib.util.LazyLoader", "importlib.util.LazyLoader.factory()": "library/importlib.html#importlib.util.LazyLoader.factory", "importlib.util.MAGIC_NUMBER": "library/importlib.html#importlib.util.MAGIC_NUMBER", "importlib.util.module_from_spec()": "library/importlib.html#importlib.util.module_from_spec", "importlib.util.resolve_name()": "library/importlib.html#importlib.util.resolve_name", "importlib.util.source_from_cache()": "library/importlib.html#importlib.util.source_from_cache", "importlib.util.source_hash()": "library/importlib.html#importlib.util.source_hash", "importlib.util.spec_from_file_location()": "library/importlib.html#importlib.util.spec_from_file_location", "importlib.util.spec_from_loader()": "library/importlib.html#importlib.util.spec_from_loader", "ImportWarning": "library/exceptions.html#ImportWarning", "Improved Compatibility with Shells (shlex)": "library/shlex.html#improved-compatibility-with-shells", "in (keyword)": "reference/compound_stmts.html#index-6", "In-place Operators (operator)": "library/operator.html#in-place-operators", "Incremental (de)compression (bz2)": "library/bz2.html#incremental-de-compression", "IncrementalParser Objects (xml.sax.xmlreader)": "library/xml.sax.reader.html#incrementalparser-objects", "IndentationError": "library/exceptions.html#IndentationError", "IndexError": "library/exceptions.html#IndexError", "Inheritance (dataclasses)": "library/dataclasses.html#inheritance", "Inheriting from built-in exceptions (Exceptions)": "library/exceptions.html#inheriting-from-built-in-exceptions", "Init file (readline)": "library/readline.html#init-file", "Init-only variables (dataclasses)": "library/dataclasses.html#init-only-variables", "Initialization, Finalization, and Threads": "c-api/init.html", "input()": "library/functions.html#input", "InputSource Objects (xml.sax.xmlreader)": "library/xml.sax.reader.html#inputsource-objects", "inspect": "library/inspect.html", "inspect.BoundArguments": "library/inspect.html#inspect.BoundArguments", "inspect.BoundArguments.apply_defaults()": "library/inspect.html#inspect.BoundArguments.apply_defaults", "inspect.BoundArguments.args": "library/inspect.html#inspect.BoundArguments.args", "inspect.BoundArguments.arguments": "library/inspect.html#inspect.BoundArguments.arguments", "inspect.BoundArguments.kwargs": "library/inspect.html#inspect.BoundArguments.kwargs", "inspect.BoundArguments.signature": "library/inspect.html#inspect.BoundArguments.signature", "inspect.BufferFlags": "library/inspect.html#inspect.BufferFlags", "inspect.BufferFlags.ANY_CONTIGUOUS": "library/inspect.html#inspect.BufferFlags.ANY_CONTIGUOUS", "inspect.BufferFlags.C_CONTIGUOUS": "library/inspect.html#inspect.BufferFlags.C_CONTIGUOUS", "inspect.BufferFlags.CONTIG": "library/inspect.html#inspect.BufferFlags.CONTIG", "inspect.BufferFlags.CONTIG_RO": "library/inspect.html#inspect.BufferFlags.CONTIG_RO", "inspect.BufferFlags.F_CONTIGUOUS": "library/inspect.html#inspect.BufferFlags.F_CONTIGUOUS", "inspect.BufferFlags.FORMAT": "library/inspect.html#inspect.BufferFlags.FORMAT", "inspect.BufferFlags.FULL": "library/inspect.html#inspect.BufferFlags.FULL", "inspect.BufferFlags.FULL_RO": "library/inspect.html#inspect.BufferFlags.FULL_RO", "inspect.BufferFlags.INDIRECT": "library/inspect.html#inspect.BufferFlags.INDIRECT", "inspect.BufferFlags.ND": "library/inspect.html#inspect.BufferFlags.ND", "inspect.BufferFlags.READ": "library/inspect.html#inspect.BufferFlags.READ", "inspect.BufferFlags.RECORDS": "library/inspect.html#inspect.BufferFlags.RECORDS", "inspect.BufferFlags.RECORDS_RO": "library/inspect.html#inspect.BufferFlags.RECORDS_RO", "inspect.BufferFlags.SIMPLE": "library/inspect.html#inspect.BufferFlags.SIMPLE", "inspect.BufferFlags.STRIDED": "library/inspect.html#inspect.BufferFlags.STRIDED", "inspect.BufferFlags.STRIDED_RO": "library/inspect.html#inspect.BufferFlags.STRIDED_RO", "inspect.BufferFlags.STRIDES": "library/inspect.html#inspect.BufferFlags.STRIDES", "inspect.BufferFlags.WRITABLE": "library/inspect.html#inspect.BufferFlags.WRITABLE", "inspect.BufferFlags.WRITE": "library/inspect.html#inspect.BufferFlags.WRITE", "inspect.cleandoc()": "library/inspect.html#inspect.cleandoc", "inspect.CO_ASYNC_GENERATOR": "library/inspect.html#inspect.CO_ASYNC_GENERATOR", "inspect.CO_COROUTINE": "library/inspect.html#inspect.CO_COROUTINE", "inspect.CO_GENERATOR": "library/inspect.html#inspect.CO_GENERATOR", "inspect.CO_ITERABLE_COROUTINE": "library/inspect.html#inspect.CO_ITERABLE_COROUTINE", "inspect.CO_NESTED": "library/inspect.html#inspect.CO_NESTED", "inspect.CO_NEWLOCALS": "library/inspect.html#inspect.CO_NEWLOCALS", "inspect.CO_OPTIMIZED": "library/inspect.html#inspect.CO_OPTIMIZED", "inspect.CO_VARARGS": "library/inspect.html#inspect.CO_VARARGS", "inspect.CO_VARKEYWORDS": "library/inspect.html#inspect.CO_VARKEYWORDS", "inspect.currentframe()": "library/inspect.html#inspect.currentframe", "inspect.formatargvalues()": "library/inspect.html#inspect.formatargvalues", "inspect.FrameInfo": "library/inspect.html#inspect.FrameInfo", "inspect.FrameInfo.code_context": "library/inspect.html#inspect.FrameInfo.code_context", "inspect.FrameInfo.filename": "library/inspect.html#inspect.FrameInfo.filename", "inspect.FrameInfo.frame": "library/inspect.html#inspect.FrameInfo.frame", "inspect.FrameInfo.function": "library/inspect.html#inspect.FrameInfo.function", "inspect.FrameInfo.index": "library/inspect.html#inspect.FrameInfo.index", "inspect.FrameInfo.lineno": "library/inspect.html#inspect.FrameInfo.lineno", "inspect.FrameInfo.positions": "library/inspect.html#inspect.FrameInfo.positions", "inspect.get_annotations()": "library/inspect.html#inspect.get_annotations", "inspect.getargvalues()": "library/inspect.html#inspect.getargvalues", "inspect.getasyncgenlocals()": "library/inspect.html#inspect.getasyncgenlocals", "inspect.getasyncgenstate()": "library/inspect.html#inspect.getasyncgenstate", "inspect.getattr_static()": "library/inspect.html#inspect.getattr_static", "inspect.getcallargs()": "library/inspect.html#inspect.getcallargs", "inspect.getclasstree()": "library/inspect.html#inspect.getclasstree", "inspect.getclosurevars()": "library/inspect.html#inspect.getclosurevars", "inspect.getcomments()": "library/inspect.html#inspect.getcomments", "inspect.getcoroutinelocals()": "library/inspect.html#inspect.getcoroutinelocals", "inspect.getcoroutinestate()": "library/inspect.html#inspect.getcoroutinestate", "inspect.getdoc()": "library/inspect.html#inspect.getdoc", "inspect.getfile()": "library/inspect.html#inspect.getfile", "inspect.getframeinfo()": "library/inspect.html#inspect.getframeinfo", "inspect.getfullargspec()": "library/inspect.html#inspect.getfullargspec", "inspect.getgeneratorlocals()": "library/inspect.html#inspect.getgeneratorlocals", "inspect.getgeneratorstate()": "library/inspect.html#inspect.getgeneratorstate", "inspect.getinnerframes()": "library/inspect.html#inspect.getinnerframes", "inspect.getmembers()": "library/inspect.html#inspect.getmembers", "inspect.getmembers_static()": "library/inspect.html#inspect.getmembers_static", "inspect.getmodule()": "library/inspect.html#inspect.getmodule", "inspect.getmodulename()": "library/inspect.html#inspect.getmodulename", "inspect.getmro()": "library/inspect.html#inspect.getmro", "inspect.getouterframes()": "library/inspect.html#inspect.getouterframes", "inspect.getsource()": "library/inspect.html#inspect.getsource", "inspect.getsourcefile()": "library/inspect.html#inspect.getsourcefile", "inspect.getsourcelines()": "library/inspect.html#inspect.getsourcelines", "inspect.isabstract()": "library/inspect.html#inspect.isabstract", "inspect.isasyncgen()": "library/inspect.html#inspect.isasyncgen", "inspect.isasyncgenfunction()": "library/inspect.html#inspect.isasyncgenfunction", "inspect.isawaitable()": "library/inspect.html#inspect.isawaitable", "inspect.isbuiltin()": "library/inspect.html#inspect.isbuiltin", "inspect.isclass()": "library/inspect.html#inspect.isclass", "inspect.iscode()": "library/inspect.html#inspect.iscode", "inspect.iscoroutine()": "library/inspect.html#inspect.iscoroutine", "inspect.iscoroutinefunction()": "library/inspect.html#inspect.iscoroutinefunction", "inspect.isdatadescriptor()": "library/inspect.html#inspect.isdatadescriptor", "inspect.isframe()": "library/inspect.html#inspect.isframe", "inspect.isfunction()": "library/inspect.html#inspect.isfunction", "inspect.isgenerator()": "library/inspect.html#inspect.isgenerator", "inspect.isgeneratorfunction()": "library/inspect.html#inspect.isgeneratorfunction", "inspect.isgetsetdescriptor()": "library/inspect.html#inspect.isgetsetdescriptor", "inspect.ismemberdescriptor()": "library/inspect.html#inspect.ismemberdescriptor", "inspect.ismethod()": "library/inspect.html#inspect.ismethod", "inspect.ismethoddescriptor()": "library/inspect.html#inspect.ismethoddescriptor", "inspect.ismethodwrapper()": "library/inspect.html#inspect.ismethodwrapper", "inspect.ismodule()": "library/inspect.html#inspect.ismodule", "inspect.isroutine()": "library/inspect.html#inspect.isroutine", "inspect.istraceback()": "library/inspect.html#inspect.istraceback", "inspect.markcoroutinefunction()": "library/inspect.html#inspect.markcoroutinefunction", "inspect.Parameter": "library/inspect.html#inspect.Parameter", "inspect.Parameter.annotation": "library/inspect.html#inspect.Parameter.annotation", "inspect.Parameter.default": "library/inspect.html#inspect.Parameter.default", "inspect.Parameter.empty": "library/inspect.html#inspect.Parameter.empty", "inspect.Parameter.kind": "library/inspect.html#inspect.Parameter.kind", "inspect.Parameter.kind.description": "library/inspect.html#inspect.Parameter.kind.description", "inspect.Parameter.name": "library/inspect.html#inspect.Parameter.name", "inspect.Parameter.replace()": "library/inspect.html#inspect.Parameter.replace", "inspect.Signature": "library/inspect.html#inspect.Signature", "inspect.signature()": "library/inspect.html#inspect.signature", "inspect.Signature.bind()": "library/inspect.html#inspect.Signature.bind", "inspect.Signature.bind_partial()": "library/inspect.html#inspect.Signature.bind_partial", "inspect.Signature.empty": "library/inspect.html#inspect.Signature.empty", "inspect.Signature.format()": "library/inspect.html#inspect.Signature.format", "inspect.Signature.from_callable()": "library/inspect.html#inspect.Signature.from_callable", "inspect.Signature.parameters": "library/inspect.html#inspect.Signature.parameters", "inspect.Signature.replace()": "library/inspect.html#inspect.Signature.replace", "inspect.Signature.return_annotation": "library/inspect.html#inspect.Signature.return_annotation", "inspect.stack()": "library/inspect.html#inspect.stack", "inspect.trace()": "library/inspect.html#inspect.trace", "inspect.Traceback": "library/inspect.html#inspect.Traceback", "inspect.Traceback.code_context": "library/inspect.html#inspect.Traceback.code_context", "inspect.Traceback.filename": "library/inspect.html#inspect.Traceback.filename", "inspect.Traceback.function": "library/inspect.html#inspect.Traceback.function", "inspect.Traceback.index": "library/inspect.html#inspect.Traceback.index", "inspect.Traceback.lineno": "library/inspect.html#inspect.Traceback.lineno", "inspect.Traceback.positions": "library/inspect.html#inspect.Traceback.positions", "inspect.unwrap()": "library/inspect.html#inspect.unwrap", "Installation path functions (sysconfig)": "library/sysconfig.html#installation-path-functions", "Installation paths (sysconfig)": "library/sysconfig.html#installation-paths", "Installing Python Modules": "installing/index.html", "Instance Method Objects": "c-api/method.html", "instance.__class__": "library/stdtypes.html#instance.__class__", "Instant User\u2019s Manual (The Python Profilers)": "library/profile.html#instant-user-s-manual", "Instrumenting CPython with DTrace and SystemTap": "howto/instrumentation.html", "int": "library/functions.html#int", "int.as_integer_ratio()": "library/stdtypes.html#int.as_integer_ratio", "int.bit_count()": "library/stdtypes.html#int.bit_count", "int.bit_length()": "library/stdtypes.html#int.bit_length", "int.from_bytes()": "library/stdtypes.html#int.from_bytes", "int.is_integer()": "library/stdtypes.html#int.is_integer", "int.to_bytes()": "library/stdtypes.html#int.to_bytes", "Integer Objects": "c-api/long.html", "Integer string conversion length limitation (Types)": "library/stdtypes.html#integer-string-conversion-length-limitation", "Integration with the warnings module (logging)": "library/logging.html#integration-with-the-warnings-module", "Interacting with Subprocesses (Subprocesses)": "library/asyncio-subprocess.html#interacting-with-subprocesses", "interactive": "glossary.html#term-interactive", "Interactive Console Objects (code)": "library/code.html#interactive-console-objects", "Interactive Interpreter Objects (code)": "library/code.html#interactive-interpreter-objects", "Interface objects (ipaddress)": "library/ipaddress.html#interface-objects", "Interface to the scheduler (os)": "library/os.html#interface-to-the-scheduler", "Internationalization": "library/i18n.html", "Internationalizing your programs and modules (gettext)": "library/gettext.html#internationalizing-your-programs-and-modules", "Internet Data Handling": "library/netdata.html", "Internet Protocols and Support": "library/internet.html", "Interpolation of values (configparser)": "library/configparser.html#interpolation-of-values", "interpreted": "glossary.html#term-interpreted", "interpreter shutdown": "glossary.html#term-interpreter-shutdown", "InterruptedError": "library/exceptions.html#InterruptedError", "Introduction": "c-api/intro.html", "Introduction (importlib)": "library/importlib.html#introduction", "Introduction (multiprocessing)": "library/multiprocessing.html#introduction", "Introduction (selectors)": "library/selectors.html#introduction", "Introduction (turtle)": "library/turtle.html#introduction", "Introduction to the profilers (The Python Profilers)": "library/profile.html#introduction-to-the-profilers", "Introspecting callables with the Signature object (inspect)": "library/inspect.html#introspecting-callables-with-the-signature-object", "Introspection (Coroutines and Tasks)": "library/asyncio-task.html#introspection", "io": "library/io.html", "io.BlockingIOError": "library/io.html#io.BlockingIOError", "io.BufferedIOBase": "library/io.html#io.BufferedIOBase", "io.BufferedIOBase.detach()": "library/io.html#io.BufferedIOBase.detach", "io.BufferedIOBase.raw": "library/io.html#io.BufferedIOBase.raw", "io.BufferedIOBase.read()": "library/io.html#io.BufferedIOBase.read", "io.BufferedIOBase.read1()": "library/io.html#io.BufferedIOBase.read1", "io.BufferedIOBase.readinto()": "library/io.html#io.BufferedIOBase.readinto", "io.BufferedIOBase.readinto1()": "library/io.html#io.BufferedIOBase.readinto1", "io.BufferedIOBase.write()": "library/io.html#io.BufferedIOBase.write", "io.BufferedRandom": "library/io.html#io.BufferedRandom", "io.BufferedReader": "library/io.html#io.BufferedReader", "io.BufferedReader.peek()": "library/io.html#io.BufferedReader.peek", "io.BufferedReader.read()": "library/io.html#io.BufferedReader.read", "io.BufferedReader.read1()": "library/io.html#io.BufferedReader.read1", "io.BufferedRWPair": "library/io.html#io.BufferedRWPair", "io.BufferedWriter": "library/io.html#io.BufferedWriter", "io.BufferedWriter.flush()": "library/io.html#io.BufferedWriter.flush", "io.BufferedWriter.write()": "library/io.html#io.BufferedWriter.write", "io.BytesIO": "library/io.html#io.BytesIO", "io.BytesIO.getbuffer()": "library/io.html#io.BytesIO.getbuffer", "io.BytesIO.getvalue()": "library/io.html#io.BytesIO.getvalue", "io.BytesIO.read1()": "library/io.html#io.BytesIO.read1", "io.BytesIO.readinto1()": "library/io.html#io.BytesIO.readinto1", "io.DEFAULT_BUFFER_SIZE": "library/io.html#io.DEFAULT_BUFFER_SIZE", "io.FileIO": "library/io.html#io.FileIO", "io.FileIO.mode": "library/io.html#io.FileIO.mode", "io.FileIO.name": "library/io.html#io.FileIO.name", "io.IncrementalNewlineDecoder": "library/io.html#io.IncrementalNewlineDecoder", "io.IOBase": "library/io.html#io.IOBase", "io.IOBase.__del__()": "library/io.html#io.IOBase.__del__", "io.IOBase.close()": "library/io.html#io.IOBase.close", "io.IOBase.closed": "library/io.html#io.IOBase.closed", "io.IOBase.fileno()": "library/io.html#io.IOBase.fileno", "io.IOBase.flush()": "library/io.html#io.IOBase.flush", "io.IOBase.isatty()": "library/io.html#io.IOBase.isatty", "io.IOBase.readable()": "library/io.html#io.IOBase.readable", "io.IOBase.readline()": "library/io.html#io.IOBase.readline", "io.IOBase.readlines()": "library/io.html#io.IOBase.readlines", "io.IOBase.seek()": "library/io.html#io.IOBase.seek", "io.IOBase.seekable()": "library/io.html#io.IOBase.seekable", "io.IOBase.tell()": "library/io.html#io.IOBase.tell", "io.IOBase.truncate()": "library/io.html#io.IOBase.truncate", "io.IOBase.writable()": "library/io.html#io.IOBase.writable", "io.IOBase.writelines()": "library/io.html#io.IOBase.writelines", "io.open()": "library/io.html#io.open", "io.open_code()": "library/io.html#io.open_code", "io.RawIOBase": "library/io.html#io.RawIOBase", "io.RawIOBase.read()": "library/io.html#io.RawIOBase.read", "io.RawIOBase.readall()": "library/io.html#io.RawIOBase.readall", "io.RawIOBase.readinto()": "library/io.html#io.RawIOBase.readinto", "io.RawIOBase.write()": "library/io.html#io.RawIOBase.write", "io.StringIO": "library/io.html#io.StringIO", "io.StringIO.getvalue()": "library/io.html#io.StringIO.getvalue", "io.text_encoding()": "library/io.html#io.text_encoding", "io.TextIOBase": "library/io.html#io.TextIOBase", "io.TextIOBase.buffer": "library/io.html#io.TextIOBase.buffer", "io.TextIOBase.detach()": "library/io.html#io.TextIOBase.detach", "io.TextIOBase.encoding": "library/io.html#io.TextIOBase.encoding", "io.TextIOBase.errors": "library/io.html#io.TextIOBase.errors", "io.TextIOBase.newlines": "library/io.html#io.TextIOBase.newlines", "io.TextIOBase.read()": "library/io.html#io.TextIOBase.read", "io.TextIOBase.readline()": "library/io.html#io.TextIOBase.readline", "io.TextIOBase.seek()": "library/io.html#io.TextIOBase.seek", "io.TextIOBase.tell()": "library/io.html#io.TextIOBase.tell", "io.TextIOBase.write()": "library/io.html#io.TextIOBase.write", "io.TextIOWrapper": "library/io.html#io.TextIOWrapper", "io.TextIOWrapper.line_buffering": "library/io.html#io.TextIOWrapper.line_buffering", "io.TextIOWrapper.reconfigure()": "library/io.html#io.TextIOWrapper.reconfigure", "io.TextIOWrapper.seek()": "library/io.html#io.TextIOWrapper.seek", "io.TextIOWrapper.tell()": "library/io.html#io.TextIOWrapper.tell", "io.TextIOWrapper.write_through": "library/io.html#io.TextIOWrapper.write_through", "io.UnsupportedOperation": "library/io.html#io.UnsupportedOperation", "IOError": "library/exceptions.html#IOError", "iOS Platform (platform)": "library/platform.html#ios-platform", "IP Addresses (ipaddress)": "library/ipaddress.html#ip-addresses", "IP Network definitions (ipaddress)": "library/ipaddress.html#ip-network-definitions", "ipaddress": "library/ipaddress.html", "ipaddress.AddressValueError": "library/ipaddress.html#ipaddress.AddressValueError", "ipaddress.collapse_addresses()": "library/ipaddress.html#ipaddress.collapse_addresses", "ipaddress.get_mixed_type_key()": "library/ipaddress.html#ipaddress.get_mixed_type_key", "ipaddress.ip_address()": "library/ipaddress.html#ipaddress.ip_address", "ipaddress.ip_interface()": "library/ipaddress.html#ipaddress.ip_interface", "ipaddress.ip_network()": "library/ipaddress.html#ipaddress.ip_network", "ipaddress.IPv4Address": "library/ipaddress.html#ipaddress.IPv4Address", "ipaddress.IPv4Address.__format__()": "library/ipaddress.html#ipaddress.IPv4Address.__format__", "ipaddress.IPv4Address.compressed": "library/ipaddress.html#ipaddress.IPv4Address.compressed", "ipaddress.IPv4Address.exploded": "library/ipaddress.html#ipaddress.IPv4Address.exploded", "ipaddress.IPv4Address.ipv6_mapped": "library/ipaddress.html#ipaddress.IPv4Address.ipv6_mapped", "ipaddress.IPv4Address.is_global": "library/ipaddress.html#ipaddress.IPv4Address.is_global", "ipaddress.IPv4Address.is_link_local": "library/ipaddress.html#ipaddress.IPv4Address.is_link_local", "ipaddress.IPv4Address.is_loopback": "library/ipaddress.html#ipaddress.IPv4Address.is_loopback", "ipaddress.IPv4Address.is_multicast": "library/ipaddress.html#ipaddress.IPv4Address.is_multicast", "ipaddress.IPv4Address.is_private": "library/ipaddress.html#ipaddress.IPv4Address.is_private", "ipaddress.IPv4Address.is_reserved": "library/ipaddress.html#ipaddress.IPv4Address.is_reserved", "ipaddress.IPv4Address.is_unspecified": "library/ipaddress.html#ipaddress.IPv4Address.is_unspecified", "ipaddress.IPv4Address.max_prefixlen": "library/ipaddress.html#ipaddress.IPv4Address.max_prefixlen", "ipaddress.IPv4Address.packed": "library/ipaddress.html#ipaddress.IPv4Address.packed", "ipaddress.IPv4Address.reverse_pointer": "library/ipaddress.html#ipaddress.IPv4Address.reverse_pointer", "ipaddress.IPv4Address.version": "library/ipaddress.html#ipaddress.IPv4Address.version", "ipaddress.IPv4Interface": "library/ipaddress.html#ipaddress.IPv4Interface", "ipaddress.IPv4Interface.ip": "library/ipaddress.html#ipaddress.IPv4Interface.ip", "ipaddress.IPv4Interface.network": "library/ipaddress.html#ipaddress.IPv4Interface.network", "ipaddress.IPv4Interface.with_hostmask": "library/ipaddress.html#ipaddress.IPv4Interface.with_hostmask", "ipaddress.IPv4Interface.with_netmask": "library/ipaddress.html#ipaddress.IPv4Interface.with_netmask", "ipaddress.IPv4Interface.with_prefixlen": "library/ipaddress.html#ipaddress.IPv4Interface.with_prefixlen", "ipaddress.IPv4Network": "library/ipaddress.html#ipaddress.IPv4Network", "ipaddress.IPv4Network.address_exclude()": "library/ipaddress.html#ipaddress.IPv4Network.address_exclude", "ipaddress.IPv4Network.broadcast_address": "library/ipaddress.html#ipaddress.IPv4Network.broadcast_address", "ipaddress.IPv4Network.compare_networks()": "library/ipaddress.html#ipaddress.IPv4Network.compare_networks", "ipaddress.IPv4Network.compressed": "library/ipaddress.html#ipaddress.IPv4Network.compressed", "ipaddress.IPv4Network.exploded": "library/ipaddress.html#ipaddress.IPv4Network.exploded", "ipaddress.IPv4Network.hostmask": "library/ipaddress.html#ipaddress.IPv4Network.hostmask", "ipaddress.IPv4Network.hosts()": "library/ipaddress.html#ipaddress.IPv4Network.hosts", "ipaddress.IPv4Network.is_link_local": "library/ipaddress.html#ipaddress.IPv4Network.is_link_local", "ipaddress.IPv4Network.is_loopback": "library/ipaddress.html#ipaddress.IPv4Network.is_loopback", "ipaddress.IPv4Network.is_multicast": "library/ipaddress.html#ipaddress.IPv4Network.is_multicast", "ipaddress.IPv4Network.is_private": "library/ipaddress.html#ipaddress.IPv4Network.is_private", "ipaddress.IPv4Network.is_reserved": "library/ipaddress.html#ipaddress.IPv4Network.is_reserved", "ipaddress.IPv4Network.is_unspecified": "library/ipaddress.html#ipaddress.IPv4Network.is_unspecified", "ipaddress.IPv4Network.max_prefixlen": "library/ipaddress.html#ipaddress.IPv4Network.max_prefixlen", "ipaddress.IPv4Network.netmask": "library/ipaddress.html#ipaddress.IPv4Network.netmask", "ipaddress.IPv4Network.network_address": "library/ipaddress.html#ipaddress.IPv4Network.network_address", "ipaddress.IPv4Network.num_addresses": "library/ipaddress.html#ipaddress.IPv4Network.num_addresses", "ipaddress.IPv4Network.overlaps()": "library/ipaddress.html#ipaddress.IPv4Network.overlaps", "ipaddress.IPv4Network.prefixlen": "library/ipaddress.html#ipaddress.IPv4Network.prefixlen", "ipaddress.IPv4Network.subnet_of()": "library/ipaddress.html#ipaddress.IPv4Network.subnet_of", "ipaddress.IPv4Network.subnets()": "library/ipaddress.html#ipaddress.IPv4Network.subnets", "ipaddress.IPv4Network.supernet()": "library/ipaddress.html#ipaddress.IPv4Network.supernet", "ipaddress.IPv4Network.supernet_of()": "library/ipaddress.html#ipaddress.IPv4Network.supernet_of", "ipaddress.IPv4Network.version": "library/ipaddress.html#ipaddress.IPv4Network.version", "ipaddress.IPv4Network.with_hostmask": "library/ipaddress.html#ipaddress.IPv4Network.with_hostmask", "ipaddress.IPv4Network.with_netmask": "library/ipaddress.html#ipaddress.IPv4Network.with_netmask", "ipaddress.IPv4Network.with_prefixlen": "library/ipaddress.html#ipaddress.IPv4Network.with_prefixlen", "ipaddress.IPv6Address": "library/ipaddress.html#ipaddress.IPv6Address", "ipaddress.IPv6Address.__format__()": "library/ipaddress.html#ipaddress.IPv6Address.__format__", "ipaddress.IPv6Address.compressed": "library/ipaddress.html#ipaddress.IPv6Address.compressed", "ipaddress.IPv6Address.exploded": "library/ipaddress.html#ipaddress.IPv6Address.exploded", "ipaddress.IPv6Address.ipv4_mapped": "library/ipaddress.html#ipaddress.IPv6Address.ipv4_mapped", "ipaddress.IPv6Address.is_global": "library/ipaddress.html#ipaddress.IPv6Address.is_global", "ipaddress.IPv6Address.is_link_local": "library/ipaddress.html#ipaddress.IPv6Address.is_link_local", "ipaddress.IPv6Address.is_loopback": "library/ipaddress.html#ipaddress.IPv6Address.is_loopback", "ipaddress.IPv6Address.is_multicast": "library/ipaddress.html#ipaddress.IPv6Address.is_multicast", "ipaddress.IPv6Address.is_private": "library/ipaddress.html#ipaddress.IPv6Address.is_private", "ipaddress.IPv6Address.is_reserved": "library/ipaddress.html#ipaddress.IPv6Address.is_reserved", "ipaddress.IPv6Address.is_site_local": "library/ipaddress.html#ipaddress.IPv6Address.is_site_local", "ipaddress.IPv6Address.is_unspecified": "library/ipaddress.html#ipaddress.IPv6Address.is_unspecified", "ipaddress.IPv6Address.max_prefixlen": "library/ipaddress.html#ipaddress.IPv6Address.max_prefixlen", "ipaddress.IPv6Address.packed": "library/ipaddress.html#ipaddress.IPv6Address.packed", "ipaddress.IPv6Address.reverse_pointer": "library/ipaddress.html#ipaddress.IPv6Address.reverse_pointer", "ipaddress.IPv6Address.scope_id": "library/ipaddress.html#ipaddress.IPv6Address.scope_id", "ipaddress.IPv6Address.sixtofour": "library/ipaddress.html#ipaddress.IPv6Address.sixtofour", "ipaddress.IPv6Address.teredo": "library/ipaddress.html#ipaddress.IPv6Address.teredo", "ipaddress.IPv6Address.version": "library/ipaddress.html#ipaddress.IPv6Address.version", "ipaddress.IPv6Interface": "library/ipaddress.html#ipaddress.IPv6Interface", "ipaddress.IPv6Interface.ip": "library/ipaddress.html#ipaddress.IPv6Interface.ip", "ipaddress.IPv6Interface.network": "library/ipaddress.html#ipaddress.IPv6Interface.network", "ipaddress.IPv6Interface.with_hostmask": "library/ipaddress.html#ipaddress.IPv6Interface.with_hostmask", "ipaddress.IPv6Interface.with_netmask": "library/ipaddress.html#ipaddress.IPv6Interface.with_netmask", "ipaddress.IPv6Interface.with_prefixlen": "library/ipaddress.html#ipaddress.IPv6Interface.with_prefixlen", "ipaddress.IPv6Network": "library/ipaddress.html#ipaddress.IPv6Network", "ipaddress.IPv6Network.address_exclude()": "library/ipaddress.html#ipaddress.IPv6Network.address_exclude", "ipaddress.IPv6Network.broadcast_address": "library/ipaddress.html#ipaddress.IPv6Network.broadcast_address", "ipaddress.IPv6Network.compare_networks()": "library/ipaddress.html#ipaddress.IPv6Network.compare_networks", "ipaddress.IPv6Network.compressed": "library/ipaddress.html#ipaddress.IPv6Network.compressed", "ipaddress.IPv6Network.exploded": "library/ipaddress.html#ipaddress.IPv6Network.exploded", "ipaddress.IPv6Network.hostmask": "library/ipaddress.html#ipaddress.IPv6Network.hostmask", "ipaddress.IPv6Network.hosts()": "library/ipaddress.html#ipaddress.IPv6Network.hosts", "ipaddress.IPv6Network.is_link_local": "library/ipaddress.html#ipaddress.IPv6Network.is_link_local", "ipaddress.IPv6Network.is_loopback": "library/ipaddress.html#ipaddress.IPv6Network.is_loopback", "ipaddress.IPv6Network.is_multicast": "library/ipaddress.html#ipaddress.IPv6Network.is_multicast", "ipaddress.IPv6Network.is_private": "library/ipaddress.html#ipaddress.IPv6Network.is_private", "ipaddress.IPv6Network.is_reserved": "library/ipaddress.html#ipaddress.IPv6Network.is_reserved", "ipaddress.IPv6Network.is_site_local": "library/ipaddress.html#ipaddress.IPv6Network.is_site_local", "ipaddress.IPv6Network.is_unspecified": "library/ipaddress.html#ipaddress.IPv6Network.is_unspecified", "ipaddress.IPv6Network.max_prefixlen": "library/ipaddress.html#ipaddress.IPv6Network.max_prefixlen", "ipaddress.IPv6Network.netmask": "library/ipaddress.html#ipaddress.IPv6Network.netmask", "ipaddress.IPv6Network.network_address": "library/ipaddress.html#ipaddress.IPv6Network.network_address", "ipaddress.IPv6Network.num_addresses": "library/ipaddress.html#ipaddress.IPv6Network.num_addresses", "ipaddress.IPv6Network.overlaps()": "library/ipaddress.html#ipaddress.IPv6Network.overlaps", "ipaddress.IPv6Network.prefixlen": "library/ipaddress.html#ipaddress.IPv6Network.prefixlen", "ipaddress.IPv6Network.subnet_of()": "library/ipaddress.html#ipaddress.IPv6Network.subnet_of", "ipaddress.IPv6Network.subnets()": "library/ipaddress.html#ipaddress.IPv6Network.subnets", "ipaddress.IPv6Network.supernet()": "library/ipaddress.html#ipaddress.IPv6Network.supernet", "ipaddress.IPv6Network.supernet_of()": "library/ipaddress.html#ipaddress.IPv6Network.supernet_of", "ipaddress.IPv6Network.version": "library/ipaddress.html#ipaddress.IPv6Network.version", "ipaddress.IPv6Network.with_hostmask": "library/ipaddress.html#ipaddress.IPv6Network.with_hostmask", "ipaddress.IPv6Network.with_netmask": "library/ipaddress.html#ipaddress.IPv6Network.with_netmask", "ipaddress.IPv6Network.with_prefixlen": "library/ipaddress.html#ipaddress.IPv6Network.with_prefixlen", "ipaddress.NetmaskValueError": "library/ipaddress.html#ipaddress.NetmaskValueError", "ipaddress.summarize_address_range()": "library/ipaddress.html#ipaddress.summarize_address_range", "ipaddress.v4_int_to_packed()": "library/ipaddress.html#ipaddress.v4_int_to_packed", "ipaddress.v6_int_to_packed()": "library/ipaddress.html#ipaddress.v6_int_to_packed", "IsADirectoryError": "library/exceptions.html#IsADirectoryError", "isinstance()": "library/functions.html#isinstance", "Isolating Extension Modules": "howto/isolating-extensions.html", "issubclass()": "library/functions.html#issubclass", "Issue with file descriptors (faulthandler)": "library/faulthandler.html#issue-with-file-descriptors", "iter()": "library/functions.html#iter", "iterable": "glossary.html#term-iterable", "iterator": "glossary.html#term-iterator", "Iterator Objects": "c-api/iterator.html", "Iterator Protocol": "c-api/iter.html", "Iterator Types (Types)": "library/stdtypes.html#iterator-types", "iterator.__iter__()": "library/stdtypes.html#iterator.__iter__", "iterator.__next__()": "library/stdtypes.html#iterator.__next__", "Itertool Functions (itertools)": "library/itertools.html#itertool-functions", "itertools": "library/itertools.html", "Itertools Recipes (itertools)": "library/itertools.html#itertools-recipes", "itertools.accumulate()": "library/itertools.html#itertools.accumulate", "itertools.batched()": "library/itertools.html#itertools.batched", "itertools.chain()": "library/itertools.html#itertools.chain", "itertools.chain.from_iterable()": "library/itertools.html#itertools.chain.from_iterable", "itertools.combinations()": "library/itertools.html#itertools.combinations", "itertools.combinations_with_replacement()": "library/itertools.html#itertools.combinations_with_replacement", "itertools.compress()": "library/itertools.html#itertools.compress", "itertools.count()": "library/itertools.html#itertools.count", "itertools.cycle()": "library/itertools.html#itertools.cycle", "itertools.dropwhile()": "library/itertools.html#itertools.dropwhile", "itertools.filterfalse()": "library/itertools.html#itertools.filterfalse", "itertools.groupby()": "library/itertools.html#itertools.groupby", "itertools.islice()": "library/itertools.html#itertools.islice", "itertools.pairwise()": "library/itertools.html#itertools.pairwise", "itertools.permutations()": "library/itertools.html#itertools.permutations", "itertools.product()": "library/itertools.html#itertools.product", "itertools.repeat()": "library/itertools.html#itertools.repeat", "itertools.starmap()": "library/itertools.html#itertools.starmap", "itertools.takewhile()": "library/itertools.html#itertools.takewhile", "itertools.tee()": "library/itertools.html#itertools.tee", "itertools.zip_longest()": "library/itertools.html#itertools.zip_longest", "Java Platform (platform)": "library/platform.html#java-platform", "json": "library/json.html", "json.dump()": "library/json.html#json.dump", "json.dumps()": "library/json.html#json.dumps", "json.JSONDecodeError": "library/json.html#json.JSONDecodeError", "json.JSONDecodeError.colno": "library/json.html#json.JSONDecodeError.colno", "json.JSONDecodeError.doc": "library/json.html#json.JSONDecodeError.doc", "json.JSONDecodeError.lineno": "library/json.html#json.JSONDecodeError.lineno", "json.JSONDecodeError.msg": "library/json.html#json.JSONDecodeError.msg", "json.JSONDecodeError.pos": "library/json.html#json.JSONDecodeError.pos", "json.JSONDecoder": "library/json.html#json.JSONDecoder", "json.JSONDecoder.decode()": "library/json.html#json.JSONDecoder.decode", "json.JSONDecoder.raw_decode()": "library/json.html#json.JSONDecoder.raw_decode", "json.JSONEncoder": "library/json.html#json.JSONEncoder", "json.JSONEncoder.default()": "library/json.html#json.JSONEncoder.default", "json.JSONEncoder.encode()": "library/json.html#json.JSONEncoder.encode", "json.JSONEncoder.iterencode()": "library/json.html#json.JSONEncoder.iterencode", "json.load()": "library/json.html#json.load", "json.loads()": "library/json.html#json.loads", "Kevent Objects (select)": "library/select.html#kevent-objects", "Key derivation (hashlib)": "library/hashlib.html#key-derivation", "key function": "glossary.html#term-key-function", "KeyboardInterrupt": "library/exceptions.html#KeyboardInterrupt", "KeyError": "library/exceptions.html#KeyError", "keyword": "library/keyword.html", "keyword argument": "glossary.html#term-keyword-argument", "keyword.iskeyword()": "library/keyword.html#keyword.iskeyword", "keyword.issoftkeyword()": "library/keyword.html#keyword.issoftkeyword", "keyword.kwlist": "library/keyword.html#keyword.kwlist", "keyword.softkwlist": "library/keyword.html#keyword.softkwlist", "Kqueue Objects (select)": "library/select.html#kqueue-objects", "lambda": "glossary.html#term-lambda", "Large File Support (posix)": "library/posix.html#large-file-support", "LBYL": "glossary.html#term-LBYL", "Legacy API Examples (configparser)": "library/configparser.html#legacy-api-examples", "Legacy interface (urllib.request)": "library/urllib.request.html#legacy-interface", "Legacy Shell Invocation Functions (subprocess)": "library/subprocess.html#legacy-shell-invocation-functions", "len()": "library/functions.html#len", "LexicalHandler Objects (xml.sax.handler)": "library/xml.sax.handler.html#lexicalhandler-objects", "Library and Extension FAQ": "faq/library.html", "license": "library/constants.html#license", "LIFO Queue (Queues)": "library/asyncio-queue.html#lifo-queue", "Limitations (The Python Profilers)": "library/profile.html#limitations", "Line buffer (readline)": "library/readline.html#line-buffer", "linecache": "library/linecache.html", "linecache.checkcache()": "library/linecache.html#linecache.checkcache", "linecache.clearcache()": "library/linecache.html#linecache.clearcache", "linecache.getline()": "library/linecache.html#linecache.getline", "linecache.lazycache()": "library/linecache.html#linecache.lazycache", "Linux Platforms (platform)": "library/platform.html#linux-platforms", "list": "library/stdtypes.html#list", "list comprehension": "glossary.html#term-list-comprehension", "List Objects": "c-api/list.html", "list.sort()": "library/stdtypes.html#list.sort", "loader": "glossary.html#term-loader", "loader__": "reference/import.html#loader__", "locale": "library/locale.html", "locale encoding": "glossary.html#term-locale-encoding", "locale.ABDAY_1": "library/locale.html#locale.ABDAY_1", "locale.ABDAY_2": "library/locale.html#locale.ABDAY_2", "locale.ABDAY_3": "library/locale.html#locale.ABDAY_3", "locale.ABDAY_4": "library/locale.html#locale.ABDAY_4", "locale.ABDAY_5": "library/locale.html#locale.ABDAY_5", "locale.ABDAY_6": "library/locale.html#locale.ABDAY_6", "locale.ABDAY_7": "library/locale.html#locale.ABDAY_7", "locale.ABMON_1": "library/locale.html#locale.ABMON_1", "locale.ABMON_10": "library/locale.html#locale.ABMON_10", "locale.ABMON_11": "library/locale.html#locale.ABMON_11", "locale.ABMON_12": "library/locale.html#locale.ABMON_12", "locale.ABMON_2": "library/locale.html#locale.ABMON_2", "locale.ABMON_3": "library/locale.html#locale.ABMON_3", "locale.ABMON_4": "library/locale.html#locale.ABMON_4", "locale.ABMON_5": "library/locale.html#locale.ABMON_5", "locale.ABMON_6": "library/locale.html#locale.ABMON_6", "locale.ABMON_7": "library/locale.html#locale.ABMON_7", "locale.ABMON_8": "library/locale.html#locale.ABMON_8", "locale.ABMON_9": "library/locale.html#locale.ABMON_9", "locale.ALT_DIGITS": "library/locale.html#locale.ALT_DIGITS", "locale.atof()": "library/locale.html#locale.atof", "locale.atoi()": "library/locale.html#locale.atoi", "locale.bind_textdomain_codeset()": "library/locale.html#locale.bind_textdomain_codeset", "locale.bindtextdomain()": "library/locale.html#locale.bindtextdomain", "locale.CHAR_MAX": "library/locale.html#locale.CHAR_MAX", "locale.CODESET": "library/locale.html#locale.CODESET", "locale.CRNCYSTR": "library/locale.html#locale.CRNCYSTR", "locale.currency()": "library/locale.html#locale.currency", "locale.D_FMT": "library/locale.html#locale.D_FMT", "locale.D_T_FMT": "library/locale.html#locale.D_T_FMT", "locale.DAY_1": "library/locale.html#locale.DAY_1", "locale.DAY_2": "library/locale.html#locale.DAY_2", "locale.DAY_3": "library/locale.html#locale.DAY_3", "locale.DAY_4": "library/locale.html#locale.DAY_4", "locale.DAY_5": "library/locale.html#locale.DAY_5", "locale.DAY_6": "library/locale.html#locale.DAY_6", "locale.DAY_7": "library/locale.html#locale.DAY_7", "locale.dcgettext()": "library/locale.html#locale.dcgettext", "locale.delocalize()": "library/locale.html#locale.delocalize", "locale.dgettext()": "library/locale.html#locale.dgettext", "locale.ERA": "library/locale.html#locale.ERA", "locale.ERA_D_FMT": "library/locale.html#locale.ERA_D_FMT", "locale.ERA_D_T_FMT": "library/locale.html#locale.ERA_D_T_FMT", "locale.ERA_T_FMT": "library/locale.html#locale.ERA_T_FMT", "locale.Error": "library/locale.html#locale.Error", "locale.format_string()": "library/locale.html#locale.format_string", "locale.getdefaultlocale()": "library/locale.html#locale.getdefaultlocale", "locale.getencoding()": "library/locale.html#locale.getencoding", "locale.getlocale()": "library/locale.html#locale.getlocale", "locale.getpreferredencoding()": "library/locale.html#locale.getpreferredencoding", "locale.gettext()": "library/locale.html#locale.gettext", "locale.LC_ALL": "library/locale.html#locale.LC_ALL", "locale.LC_COLLATE": "library/locale.html#locale.LC_COLLATE", "locale.LC_CTYPE": "library/locale.html#locale.LC_CTYPE", "locale.LC_MESSAGES": "library/locale.html#locale.LC_MESSAGES", "locale.LC_MONETARY": "library/locale.html#locale.LC_MONETARY", "locale.LC_NUMERIC": "library/locale.html#locale.LC_NUMERIC", "locale.LC_TIME": "library/locale.html#locale.LC_TIME", "locale.localeconv()": "library/locale.html#locale.localeconv", "locale.localize()": "library/locale.html#locale.localize", "locale.MON_1": "library/locale.html#locale.MON_1", "locale.MON_10": "library/locale.html#locale.MON_10", "locale.MON_11": "library/locale.html#locale.MON_11", "locale.MON_12": "library/locale.html#locale.MON_12", "locale.MON_2": "library/locale.html#locale.MON_2", "locale.MON_3": "library/locale.html#locale.MON_3", "locale.MON_4": "library/locale.html#locale.MON_4", "locale.MON_5": "library/locale.html#locale.MON_5", "locale.MON_6": "library/locale.html#locale.MON_6", "locale.MON_7": "library/locale.html#locale.MON_7", "locale.MON_8": "library/locale.html#locale.MON_8", "locale.MON_9": "library/locale.html#locale.MON_9", "locale.nl_langinfo()": "library/locale.html#locale.nl_langinfo", "locale.NOEXPR": "library/locale.html#locale.NOEXPR", "locale.normalize()": "library/locale.html#locale.normalize", "locale.RADIXCHAR": "library/locale.html#locale.RADIXCHAR", "locale.setlocale()": "library/locale.html#locale.setlocale", "locale.str()": "library/locale.html#locale.str", "locale.strcoll()": "library/locale.html#locale.strcoll", "locale.strxfrm()": "library/locale.html#locale.strxfrm", "locale.T_FMT": "library/locale.html#locale.T_FMT", "locale.T_FMT_AMPM": "library/locale.html#locale.T_FMT_AMPM", "locale.textdomain()": "library/locale.html#locale.textdomain", "locale.THOUSEP": "library/locale.html#locale.THOUSEP", "locale.YESEXPR": "library/locale.html#locale.YESEXPR", "locals()": "library/functions.html#locals", "Locator Objects (xml.sax.xmlreader)": "library/xml.sax.reader.html#locator-objects", "Lock (Synchronization Primitives)": "library/asyncio-sync.html#lock", "Lock Objects (threading)": "library/threading.html#lock-objects", "Logger Objects (logging)": "library/logging.html#logger-objects", "LoggerAdapter Objects (logging)": "library/logging.html#loggeradapter-objects", "logging": "library/logging.html", "Logging (Developing with asyncio)": "library/asyncio-dev.html#logging", "Logging Cookbook": "howto/logging-cookbook.html", "Logging HOWTO": "howto/logging.html", "Logging Levels (logging)": "library/logging.html#logging-levels", "logging.addLevelName()": "library/logging.html#logging.addLevelName", "logging.basicConfig()": "library/logging.html#logging.basicConfig", "logging.BufferingFormatter": "library/logging.html#logging.BufferingFormatter", "logging.BufferingFormatter.format()": "library/logging.html#logging.BufferingFormatter.format", "logging.BufferingFormatter.formatFooter()": "library/logging.html#logging.BufferingFormatter.formatFooter", "logging.BufferingFormatter.formatHeader()": "library/logging.html#logging.BufferingFormatter.formatHeader", "logging.captureWarnings()": "library/logging.html#logging.captureWarnings", "logging.config": "library/logging.config.html", "logging.config.dictConfig()": "library/logging.config.html#logging.config.dictConfig", "logging.config.fileConfig()": "library/logging.config.html#logging.config.fileConfig", "logging.config.listen()": "library/logging.config.html#logging.config.listen", "logging.config.stopListening()": "library/logging.config.html#logging.config.stopListening", "logging.CRITICAL": "library/logging.html#logging.CRITICAL", "logging.critical()": "library/logging.html#logging.critical", "logging.DEBUG": "library/logging.html#logging.DEBUG", "logging.debug()": "library/logging.html#logging.debug", "logging.disable()": "library/logging.html#logging.disable", "logging.ERROR": "library/logging.html#logging.ERROR", "logging.error()": "library/logging.html#logging.error", "logging.exception()": "library/logging.html#logging.exception", "logging.FileHandler": "library/logging.handlers.html#logging.FileHandler", "logging.FileHandler.close()": "library/logging.handlers.html#logging.FileHandler.close", "logging.FileHandler.emit()": "library/logging.handlers.html#logging.FileHandler.emit", "logging.Filter": "library/logging.html#logging.Filter", "logging.Filter.filter()": "library/logging.html#logging.Filter.filter", "logging.Formatter": "library/logging.html#logging.Formatter", "logging.Formatter.format()": "library/logging.html#logging.Formatter.format", "logging.Formatter.formatException()": "library/logging.html#logging.Formatter.formatException", "logging.Formatter.formatStack()": "library/logging.html#logging.Formatter.formatStack", "logging.Formatter.formatTime()": "library/logging.html#logging.Formatter.formatTime", "logging.getHandlerByName()": "library/logging.html#logging.getHandlerByName", "logging.getHandlerNames()": "library/logging.html#logging.getHandlerNames", "logging.getLevelName()": "library/logging.html#logging.getLevelName", "logging.getLevelNamesMapping()": "library/logging.html#logging.getLevelNamesMapping", "logging.getLogger()": "library/logging.html#logging.getLogger", "logging.getLoggerClass()": "library/logging.html#logging.getLoggerClass", "logging.getLogRecordFactory()": "library/logging.html#logging.getLogRecordFactory", "logging.Handler": "library/logging.html#logging.Handler", "logging.Handler.__init__()": "library/logging.html#logging.Handler.__init__", "logging.Handler.acquire()": "library/logging.html#logging.Handler.acquire", "logging.Handler.addFilter()": "library/logging.html#logging.Handler.addFilter", "logging.Handler.close()": "library/logging.html#logging.Handler.close", "logging.Handler.createLock()": "library/logging.html#logging.Handler.createLock", "logging.Handler.emit()": "library/logging.html#logging.Handler.emit", "logging.Handler.filter()": "library/logging.html#logging.Handler.filter", "logging.Handler.flush()": "library/logging.html#logging.Handler.flush", "logging.Handler.format()": "library/logging.html#logging.Handler.format", "logging.Handler.handle()": "library/logging.html#logging.Handler.handle", "logging.Handler.handleError()": "library/logging.html#logging.Handler.handleError", "logging.Handler.release()": "library/logging.html#logging.Handler.release", "logging.Handler.removeFilter()": "library/logging.html#logging.Handler.removeFilter", "logging.Handler.setFormatter()": "library/logging.html#logging.Handler.setFormatter", "logging.Handler.setLevel()": "library/logging.html#logging.Handler.setLevel", "logging.handlers": "library/logging.handlers.html", "logging.handlers.BaseRotatingHandler": "library/logging.handlers.html#logging.handlers.BaseRotatingHandler", "logging.handlers.BaseRotatingHandler.namer": "library/logging.handlers.html#logging.handlers.BaseRotatingHandler.namer", "logging.handlers.BaseRotatingHandler.rotate()": "library/logging.handlers.html#logging.handlers.BaseRotatingHandler.rotate", "logging.handlers.BaseRotatingHandler.rotation_filename()": "library/logging.handlers.html#logging.handlers.BaseRotatingHandler.rotation_filename", "logging.handlers.BaseRotatingHandler.rotator": "library/logging.handlers.html#logging.handlers.BaseRotatingHandler.rotator", "logging.handlers.BufferingHandler": "library/logging.handlers.html#logging.handlers.BufferingHandler", "logging.handlers.BufferingHandler.emit()": "library/logging.handlers.html#logging.handlers.BufferingHandler.emit", "logging.handlers.BufferingHandler.flush()": "library/logging.handlers.html#logging.handlers.BufferingHandler.flush", "logging.handlers.BufferingHandler.shouldFlush()": "library/logging.handlers.html#logging.handlers.BufferingHandler.shouldFlush", "logging.handlers.DatagramHandler": "library/logging.handlers.html#logging.handlers.DatagramHandler", "logging.handlers.DatagramHandler.emit()": "library/logging.handlers.html#logging.handlers.DatagramHandler.emit", "logging.handlers.DatagramHandler.makeSocket()": "library/logging.handlers.html#logging.handlers.DatagramHandler.makeSocket", "logging.handlers.DatagramHandler.send()": "library/logging.handlers.html#logging.handlers.DatagramHandler.send", "logging.handlers.HTTPHandler": "library/logging.handlers.html#logging.handlers.HTTPHandler", "logging.handlers.HTTPHandler.emit()": "library/logging.handlers.html#logging.handlers.HTTPHandler.emit", "logging.handlers.HTTPHandler.mapLogRecord()": "library/logging.handlers.html#logging.handlers.HTTPHandler.mapLogRecord", "logging.handlers.MemoryHandler": "library/logging.handlers.html#logging.handlers.MemoryHandler", "logging.handlers.MemoryHandler.close()": "library/logging.handlers.html#logging.handlers.MemoryHandler.close", "logging.handlers.MemoryHandler.flush()": "library/logging.handlers.html#logging.handlers.MemoryHandler.flush", "logging.handlers.MemoryHandler.setTarget()": "library/logging.handlers.html#logging.handlers.MemoryHandler.setTarget", "logging.handlers.MemoryHandler.shouldFlush()": "library/logging.handlers.html#logging.handlers.MemoryHandler.shouldFlush", "logging.handlers.NTEventLogHandler": "library/logging.handlers.html#logging.handlers.NTEventLogHandler", "logging.handlers.NTEventLogHandler.close()": "library/logging.handlers.html#logging.handlers.NTEventLogHandler.close", "logging.handlers.NTEventLogHandler.emit()": "library/logging.handlers.html#logging.handlers.NTEventLogHandler.emit", "logging.handlers.NTEventLogHandler.getEventCategory()": "library/logging.handlers.html#logging.handlers.NTEventLogHandler.getEventCategory", "logging.handlers.NTEventLogHandler.getEventType()": "library/logging.handlers.html#logging.handlers.NTEventLogHandler.getEventType", "logging.handlers.NTEventLogHandler.getMessageID()": "library/logging.handlers.html#logging.handlers.NTEventLogHandler.getMessageID", "logging.handlers.QueueHandler": "library/logging.handlers.html#logging.handlers.QueueHandler", "logging.handlers.QueueHandler.emit()": "library/logging.handlers.html#logging.handlers.QueueHandler.emit", "logging.handlers.QueueHandler.enqueue()": "library/logging.handlers.html#logging.handlers.QueueHandler.enqueue", "logging.handlers.QueueHandler.listener": "library/logging.handlers.html#logging.handlers.QueueHandler.listener", "logging.handlers.QueueHandler.prepare()": "library/logging.handlers.html#logging.handlers.QueueHandler.prepare", "logging.handlers.QueueListener": "library/logging.handlers.html#logging.handlers.QueueListener", "logging.handlers.QueueListener.dequeue()": "library/logging.handlers.html#logging.handlers.QueueListener.dequeue", "logging.handlers.QueueListener.enqueue_sentinel()": "library/logging.handlers.html#logging.handlers.QueueListener.enqueue_sentinel", "logging.handlers.QueueListener.handle()": "library/logging.handlers.html#logging.handlers.QueueListener.handle", "logging.handlers.QueueListener.prepare()": "library/logging.handlers.html#logging.handlers.QueueListener.prepare", "logging.handlers.QueueListener.start()": "library/logging.handlers.html#logging.handlers.QueueListener.start", "logging.handlers.QueueListener.stop()": "library/logging.handlers.html#logging.handlers.QueueListener.stop", "logging.handlers.RotatingFileHandler": "library/logging.handlers.html#logging.handlers.RotatingFileHandler", "logging.handlers.RotatingFileHandler.doRollover()": "library/logging.handlers.html#logging.handlers.RotatingFileHandler.doRollover", "logging.handlers.RotatingFileHandler.emit()": "library/logging.handlers.html#logging.handlers.RotatingFileHandler.emit", "logging.handlers.SMTPHandler": "library/logging.handlers.html#logging.handlers.SMTPHandler", "logging.handlers.SMTPHandler.emit()": "library/logging.handlers.html#logging.handlers.SMTPHandler.emit", "logging.handlers.SMTPHandler.getSubject()": "library/logging.handlers.html#logging.handlers.SMTPHandler.getSubject", "logging.handlers.SocketHandler": "library/logging.handlers.html#logging.handlers.SocketHandler", "logging.handlers.SocketHandler.close()": "library/logging.handlers.html#logging.handlers.SocketHandler.close", "logging.handlers.SocketHandler.createSocket()": "library/logging.handlers.html#logging.handlers.SocketHandler.createSocket", "logging.handlers.SocketHandler.emit()": "library/logging.handlers.html#logging.handlers.SocketHandler.emit", "logging.handlers.SocketHandler.handleError()": "library/logging.handlers.html#logging.handlers.SocketHandler.handleError", "logging.handlers.SocketHandler.makePickle()": "library/logging.handlers.html#logging.handlers.SocketHandler.makePickle", "logging.handlers.SocketHandler.makeSocket()": "library/logging.handlers.html#logging.handlers.SocketHandler.makeSocket", "logging.handlers.SocketHandler.send()": "library/logging.handlers.html#logging.handlers.SocketHandler.send", "logging.handlers.SysLogHandler": "library/logging.handlers.html#logging.handlers.SysLogHandler", "logging.handlers.SysLogHandler.close()": "library/logging.handlers.html#logging.handlers.SysLogHandler.close", "logging.handlers.SysLogHandler.createSocket()": "library/logging.handlers.html#logging.handlers.SysLogHandler.createSocket", "logging.handlers.SysLogHandler.emit()": "library/logging.handlers.html#logging.handlers.SysLogHandler.emit", "logging.handlers.SysLogHandler.encodePriority()": "library/logging.handlers.html#logging.handlers.SysLogHandler.encodePriority", "logging.handlers.SysLogHandler.mapPriority()": "library/logging.handlers.html#logging.handlers.SysLogHandler.mapPriority", "logging.handlers.TimedRotatingFileHandler": "library/logging.handlers.html#logging.handlers.TimedRotatingFileHandler", "logging.handlers.TimedRotatingFileHandler.doRollover()": "library/logging.handlers.html#logging.handlers.TimedRotatingFileHandler.doRollover", "logging.handlers.TimedRotatingFileHandler.emit()": "library/logging.handlers.html#logging.handlers.TimedRotatingFileHandler.emit", "logging.handlers.TimedRotatingFileHandler.getFilesToDelete()": "library/logging.handlers.html#logging.handlers.TimedRotatingFileHandler.getFilesToDelete", "logging.handlers.WatchedFileHandler": "library/logging.handlers.html#logging.handlers.WatchedFileHandler", "logging.handlers.WatchedFileHandler.emit()": "library/logging.handlers.html#logging.handlers.WatchedFileHandler.emit", "logging.handlers.WatchedFileHandler.reopenIfNeeded()": "library/logging.handlers.html#logging.handlers.WatchedFileHandler.reopenIfNeeded", "logging.INFO": "library/logging.html#logging.INFO", "logging.info()": "library/logging.html#logging.info", "logging.lastResort": "library/logging.html#logging.lastResort", "logging.log()": "library/logging.html#logging.log", "logging.Logger": "library/logging.html#logging.Logger", "logging.Logger.addFilter()": "library/logging.html#logging.Logger.addFilter", "logging.Logger.addHandler()": "library/logging.html#logging.Logger.addHandler", "logging.Logger.critical()": "library/logging.html#logging.Logger.critical", "logging.Logger.debug()": "library/logging.html#logging.Logger.debug", "logging.Logger.disabled": "library/logging.html#logging.Logger.disabled", "logging.Logger.error()": "library/logging.html#logging.Logger.error", "logging.Logger.exception()": "library/logging.html#logging.Logger.exception", "logging.Logger.filter()": "library/logging.html#logging.Logger.filter", "logging.Logger.findCaller()": "library/logging.html#logging.Logger.findCaller", "logging.Logger.getChild()": "library/logging.html#logging.Logger.getChild", "logging.Logger.getChildren()": "library/logging.html#logging.Logger.getChildren", "logging.Logger.getEffectiveLevel()": "library/logging.html#logging.Logger.getEffectiveLevel", "logging.Logger.handle()": "library/logging.html#logging.Logger.handle", "logging.Logger.handlers": "library/logging.html#logging.Logger.handlers", "logging.Logger.hasHandlers()": "library/logging.html#logging.Logger.hasHandlers", "logging.Logger.info()": "library/logging.html#logging.Logger.info", "logging.Logger.isEnabledFor()": "library/logging.html#logging.Logger.isEnabledFor", "logging.Logger.level": "library/logging.html#logging.Logger.level", "logging.Logger.log()": "library/logging.html#logging.Logger.log", "logging.Logger.makeRecord()": "library/logging.html#logging.Logger.makeRecord", "logging.Logger.name": "library/logging.html#logging.Logger.name", "logging.Logger.parent": "library/logging.html#logging.Logger.parent", "logging.Logger.propagate": "library/logging.html#logging.Logger.propagate", "logging.Logger.removeFilter()": "library/logging.html#logging.Logger.removeFilter", "logging.Logger.removeHandler()": "library/logging.html#logging.Logger.removeHandler", "logging.Logger.setLevel()": "library/logging.html#logging.Logger.setLevel", "logging.Logger.warning()": "library/logging.html#logging.Logger.warning", "logging.LoggerAdapter": "library/logging.html#logging.LoggerAdapter", "logging.LoggerAdapter._log": "library/logging.html#logging.LoggerAdapter._log", "logging.LoggerAdapter.manager": "library/logging.html#logging.LoggerAdapter.manager", "logging.LoggerAdapter.process()": "library/logging.html#logging.LoggerAdapter.process", "logging.logging.Formatter.__init__()": "howto/logging.html#logging.logging.Formatter.__init__", "logging.LogRecord": "library/logging.html#logging.LogRecord", "logging.LogRecord.getMessage()": "library/logging.html#logging.LogRecord.getMessage", "logging.makeLogRecord()": "library/logging.html#logging.makeLogRecord", "logging.NOTSET": "library/logging.html#logging.NOTSET", "logging.NullHandler": "library/logging.handlers.html#logging.NullHandler", "logging.NullHandler.createLock()": "library/logging.handlers.html#logging.NullHandler.createLock", "logging.NullHandler.emit()": "library/logging.handlers.html#logging.NullHandler.emit", "logging.NullHandler.handle()": "library/logging.handlers.html#logging.NullHandler.handle", "logging.raiseExceptions": "library/logging.html#logging.raiseExceptions", "logging.setLoggerClass()": "library/logging.html#logging.setLoggerClass", "logging.setLogRecordFactory()": "library/logging.html#logging.setLogRecordFactory", "logging.shutdown()": "library/logging.html#logging.shutdown", "logging.StreamHandler": "library/logging.handlers.html#logging.StreamHandler", "logging.StreamHandler.emit()": "library/logging.handlers.html#logging.StreamHandler.emit", "logging.StreamHandler.flush()": "library/logging.handlers.html#logging.StreamHandler.flush", "logging.StreamHandler.setStream()": "library/logging.handlers.html#logging.StreamHandler.setStream", "logging.StreamHandler.terminator": "library/logging.handlers.html#logging.StreamHandler.terminator", "logging.WARNING": "library/logging.html#logging.WARNING", "logging.warning()": "library/logging.html#logging.warning", "LogRecord attributes (logging)": "library/logging.html#logrecord-attributes", "LogRecord Objects (logging)": "library/logging.html#logrecord-objects", "LookupError": "library/exceptions.html#LookupError", "loop (statement)": "reference/compound_stmts.html#index-4", "loop control (target)": "reference/simple_stmts.html#index-31", "Low-level API Index": "library/asyncio-llapi-index.html", "lzma": "library/lzma.html", "lzma.compress()": "library/lzma.html#lzma.compress", "lzma.decompress()": "library/lzma.html#lzma.decompress", "lzma.is_check_supported()": "library/lzma.html#lzma.is_check_supported", "lzma.LZMACompressor": "library/lzma.html#lzma.LZMACompressor", "lzma.LZMACompressor.compress()": "library/lzma.html#lzma.LZMACompressor.compress", "lzma.LZMACompressor.flush()": "library/lzma.html#lzma.LZMACompressor.flush", "lzma.LZMADecompressor": "library/lzma.html#lzma.LZMADecompressor", "lzma.LZMADecompressor.check": "library/lzma.html#lzma.LZMADecompressor.check", "lzma.LZMADecompressor.decompress()": "library/lzma.html#lzma.LZMADecompressor.decompress", "lzma.LZMADecompressor.eof": "library/lzma.html#lzma.LZMADecompressor.eof", "lzma.LZMADecompressor.needs_input": "library/lzma.html#lzma.LZMADecompressor.needs_input", "lzma.LZMADecompressor.unused_data": "library/lzma.html#lzma.LZMADecompressor.unused_data", "lzma.LZMAError": "library/lzma.html#lzma.LZMAError", "lzma.LZMAFile": "library/lzma.html#lzma.LZMAFile", "lzma.LZMAFile.mode": "library/lzma.html#lzma.LZMAFile.mode", "lzma.LZMAFile.name": "library/lzma.html#lzma.LZMAFile.name", "lzma.LZMAFile.peek()": "library/lzma.html#lzma.LZMAFile.peek", "lzma.open()": "library/lzma.html#lzma.open", "macOS (Platform Support)": "library/asyncio-platforms.html#macos", "macOS Platform (platform)": "library/platform.html#macos-platform", "MADV_* Constants (mmap)": "library/mmap.html#madv-constants", "magic method": "glossary.html#term-magic-method", "MagicMock and magic method support (unittest.mock)": "library/unittest.mock.html#magicmock-and-magic-method-support", "mailbox": "library/mailbox.html", "Mailbox objects (mailbox)": "library/mailbox.html#mailbox-objects", "mailbox.Babyl": "library/mailbox.html#mailbox.Babyl", "mailbox.Babyl.get_file()": "library/mailbox.html#mailbox.Babyl.get_file", "mailbox.Babyl.get_labels()": "library/mailbox.html#mailbox.Babyl.get_labels", "mailbox.Babyl.lock()": "library/mailbox.html#mailbox.Babyl.lock", "mailbox.Babyl.unlock()": "library/mailbox.html#mailbox.Babyl.unlock", "mailbox.BabylMessage": "library/mailbox.html#mailbox.BabylMessage", "mailbox.BabylMessage.add_label()": "library/mailbox.html#mailbox.BabylMessage.add_label", "mailbox.BabylMessage.get_labels()": "library/mailbox.html#mailbox.BabylMessage.get_labels", "mailbox.BabylMessage.get_visible()": "library/mailbox.html#mailbox.BabylMessage.get_visible", "mailbox.BabylMessage.remove_label()": "library/mailbox.html#mailbox.BabylMessage.remove_label", "mailbox.BabylMessage.set_labels()": "library/mailbox.html#mailbox.BabylMessage.set_labels", "mailbox.BabylMessage.set_visible()": "library/mailbox.html#mailbox.BabylMessage.set_visible", "mailbox.BabylMessage.update_visible()": "library/mailbox.html#mailbox.BabylMessage.update_visible", "mailbox.Error": "library/mailbox.html#mailbox.Error", "mailbox.ExternalClashError": "library/mailbox.html#mailbox.ExternalClashError", "mailbox.FormatError": "library/mailbox.html#mailbox.FormatError", "mailbox.Mailbox": "library/mailbox.html#mailbox.Mailbox", "mailbox.Mailbox.__contains__()": "library/mailbox.html#mailbox.Mailbox.__contains__", "mailbox.Mailbox.__delitem__()": "library/mailbox.html#mailbox.Mailbox.__delitem__", "mailbox.Mailbox.__getitem__()": "library/mailbox.html#mailbox.Mailbox.__getitem__", "mailbox.Mailbox.__iter__()": "library/mailbox.html#mailbox.Mailbox.__iter__", "mailbox.Mailbox.__len__()": "library/mailbox.html#mailbox.Mailbox.__len__", "mailbox.Mailbox.__setitem__()": "library/mailbox.html#mailbox.Mailbox.__setitem__", "mailbox.Mailbox.add()": "library/mailbox.html#mailbox.Mailbox.add", "mailbox.Mailbox.clear()": "library/mailbox.html#mailbox.Mailbox.clear", "mailbox.Mailbox.close()": "library/mailbox.html#mailbox.Mailbox.close", "mailbox.Mailbox.discard()": "library/mailbox.html#mailbox.Mailbox.discard", "mailbox.Mailbox.flush()": "library/mailbox.html#mailbox.Mailbox.flush", "mailbox.Mailbox.get()": "library/mailbox.html#mailbox.Mailbox.get", "mailbox.Mailbox.get_bytes()": "library/mailbox.html#mailbox.Mailbox.get_bytes", "mailbox.Mailbox.get_file()": "library/mailbox.html#mailbox.Mailbox.get_file", "mailbox.Mailbox.get_message()": "library/mailbox.html#mailbox.Mailbox.get_message", "mailbox.Mailbox.get_string()": "library/mailbox.html#mailbox.Mailbox.get_string", "mailbox.Mailbox.items()": "library/mailbox.html#mailbox.Mailbox.items", "mailbox.Mailbox.iteritems()": "library/mailbox.html#mailbox.Mailbox.iteritems", "mailbox.Mailbox.iterkeys()": "library/mailbox.html#mailbox.Mailbox.iterkeys", "mailbox.Mailbox.itervalues()": "library/mailbox.html#mailbox.Mailbox.itervalues", "mailbox.Mailbox.keys()": "library/mailbox.html#mailbox.Mailbox.keys", "mailbox.Mailbox.lock()": "library/mailbox.html#mailbox.Mailbox.lock", "mailbox.Mailbox.pop()": "library/mailbox.html#mailbox.Mailbox.pop", "mailbox.Mailbox.popitem()": "library/mailbox.html#mailbox.Mailbox.popitem", "mailbox.Mailbox.remove()": "library/mailbox.html#mailbox.Mailbox.remove", "mailbox.Mailbox.unlock()": "library/mailbox.html#mailbox.Mailbox.unlock", "mailbox.Mailbox.update()": "library/mailbox.html#mailbox.Mailbox.update", "mailbox.Mailbox.values()": "library/mailbox.html#mailbox.Mailbox.values", "mailbox.Maildir": "library/mailbox.html#mailbox.Maildir", "mailbox.Maildir.__setitem__()": "library/mailbox.html#mailbox.Maildir.__setitem__", "mailbox.Maildir.add()": "library/mailbox.html#mailbox.Maildir.add", "mailbox.Maildir.add_flag()": "library/mailbox.html#mailbox.Maildir.add_flag", "mailbox.Maildir.add_folder()": "library/mailbox.html#mailbox.Maildir.add_folder", "mailbox.Maildir.clean()": "library/mailbox.html#mailbox.Maildir.clean", "mailbox.Maildir.close()": "library/mailbox.html#mailbox.Maildir.close", "mailbox.Maildir.colon": "library/mailbox.html#mailbox.Maildir.colon", "mailbox.Maildir.flush()": "library/mailbox.html#mailbox.Maildir.flush", "mailbox.Maildir.get_file()": "library/mailbox.html#mailbox.Maildir.get_file", "mailbox.Maildir.get_flags()": "library/mailbox.html#mailbox.Maildir.get_flags", "mailbox.Maildir.get_folder()": "library/mailbox.html#mailbox.Maildir.get_folder", "mailbox.Maildir.get_info()": "library/mailbox.html#mailbox.Maildir.get_info", "mailbox.Maildir.list_folders()": "library/mailbox.html#mailbox.Maildir.list_folders", "mailbox.Maildir.lock()": "library/mailbox.html#mailbox.Maildir.lock", "mailbox.Maildir.remove_flag()": "library/mailbox.html#mailbox.Maildir.remove_flag", "mailbox.Maildir.remove_folder()": "library/mailbox.html#mailbox.Maildir.remove_folder", "mailbox.Maildir.set_flags()": "library/mailbox.html#mailbox.Maildir.set_flags", "mailbox.Maildir.set_info()": "library/mailbox.html#mailbox.Maildir.set_info", "mailbox.Maildir.unlock()": "library/mailbox.html#mailbox.Maildir.unlock", "mailbox.Maildir.update()": "library/mailbox.html#mailbox.Maildir.update", "mailbox.MaildirMessage": "library/mailbox.html#mailbox.MaildirMessage", "mailbox.MaildirMessage.add_flag()": "library/mailbox.html#mailbox.MaildirMessage.add_flag", "mailbox.MaildirMessage.get_date()": "library/mailbox.html#mailbox.MaildirMessage.get_date", "mailbox.MaildirMessage.get_flags()": "library/mailbox.html#mailbox.MaildirMessage.get_flags", "mailbox.MaildirMessage.get_info()": "library/mailbox.html#mailbox.MaildirMessage.get_info", "mailbox.MaildirMessage.get_subdir()": "library/mailbox.html#mailbox.MaildirMessage.get_subdir", "mailbox.MaildirMessage.remove_flag()": "library/mailbox.html#mailbox.MaildirMessage.remove_flag", "mailbox.MaildirMessage.set_date()": "library/mailbox.html#mailbox.MaildirMessage.set_date", "mailbox.MaildirMessage.set_flags()": "library/mailbox.html#mailbox.MaildirMessage.set_flags", "mailbox.MaildirMessage.set_info()": "library/mailbox.html#mailbox.MaildirMessage.set_info", "mailbox.MaildirMessage.set_subdir()": "library/mailbox.html#mailbox.MaildirMessage.set_subdir", "mailbox.mbox": "library/mailbox.html#mailbox.mbox", "mailbox.mbox.get_file()": "library/mailbox.html#mailbox.mbox.get_file", "mailbox.mbox.lock()": "library/mailbox.html#mailbox.mbox.lock", "mailbox.mbox.unlock()": "library/mailbox.html#mailbox.mbox.unlock", "mailbox.mboxMessage": "library/mailbox.html#mailbox.mboxMessage", "mailbox.mboxMessage.add_flag()": "library/mailbox.html#mailbox.mboxMessage.add_flag", "mailbox.mboxMessage.get_flags()": "library/mailbox.html#mailbox.mboxMessage.get_flags", "mailbox.mboxMessage.get_from()": "library/mailbox.html#mailbox.mboxMessage.get_from", "mailbox.mboxMessage.remove_flag()": "library/mailbox.html#mailbox.mboxMessage.remove_flag", "mailbox.mboxMessage.set_flags()": "library/mailbox.html#mailbox.mboxMessage.set_flags", "mailbox.mboxMessage.set_from()": "library/mailbox.html#mailbox.mboxMessage.set_from", "mailbox.Message": "library/mailbox.html#mailbox.Message", "mailbox.MH": "library/mailbox.html#mailbox.MH", "mailbox.MH.__delitem__()": "library/mailbox.html#mailbox.MH.__delitem__", "mailbox.MH.add_folder()": "library/mailbox.html#mailbox.MH.add_folder", "mailbox.MH.close()": "library/mailbox.html#mailbox.MH.close", "mailbox.MH.discard()": "library/mailbox.html#mailbox.MH.discard", "mailbox.MH.flush()": "library/mailbox.html#mailbox.MH.flush", "mailbox.MH.get_file()": "library/mailbox.html#mailbox.MH.get_file", "mailbox.MH.get_folder()": "library/mailbox.html#mailbox.MH.get_folder", "mailbox.MH.get_sequences()": "library/mailbox.html#mailbox.MH.get_sequences", "mailbox.MH.list_folders()": "library/mailbox.html#mailbox.MH.list_folders", "mailbox.MH.lock()": "library/mailbox.html#mailbox.MH.lock", "mailbox.MH.pack()": "library/mailbox.html#mailbox.MH.pack", "mailbox.MH.remove()": "library/mailbox.html#mailbox.MH.remove", "mailbox.MH.remove_folder()": "library/mailbox.html#mailbox.MH.remove_folder", "mailbox.MH.set_sequences()": "library/mailbox.html#mailbox.MH.set_sequences", "mailbox.MH.unlock()": "library/mailbox.html#mailbox.MH.unlock", "mailbox.MHMessage": "library/mailbox.html#mailbox.MHMessage", "mailbox.MHMessage.add_sequence()": "library/mailbox.html#mailbox.MHMessage.add_sequence", "mailbox.MHMessage.get_sequences()": "library/mailbox.html#mailbox.MHMessage.get_sequences", "mailbox.MHMessage.remove_sequence()": "library/mailbox.html#mailbox.MHMessage.remove_sequence", "mailbox.MHMessage.set_sequences()": "library/mailbox.html#mailbox.MHMessage.set_sequences", "mailbox.MMDF": "library/mailbox.html#mailbox.MMDF", "mailbox.MMDF.get_file()": "library/mailbox.html#mailbox.MMDF.get_file", "mailbox.MMDF.lock()": "library/mailbox.html#mailbox.MMDF.lock", "mailbox.MMDF.unlock()": "library/mailbox.html#mailbox.MMDF.unlock", "mailbox.MMDFMessage": "library/mailbox.html#mailbox.MMDFMessage", "mailbox.MMDFMessage.add_flag()": "library/mailbox.html#mailbox.MMDFMessage.add_flag", "mailbox.MMDFMessage.get_flags()": "library/mailbox.html#mailbox.MMDFMessage.get_flags", "mailbox.MMDFMessage.get_from()": "library/mailbox.html#mailbox.MMDFMessage.get_from", "mailbox.MMDFMessage.remove_flag()": "library/mailbox.html#mailbox.MMDFMessage.remove_flag", "mailbox.MMDFMessage.set_flags()": "library/mailbox.html#mailbox.MMDFMessage.set_flags", "mailbox.MMDFMessage.set_from()": "library/mailbox.html#mailbox.MMDFMessage.set_from", "mailbox.NoSuchMailboxError": "library/mailbox.html#mailbox.NoSuchMailboxError", "mailbox.NotEmptyError": "library/mailbox.html#mailbox.NotEmptyError", "Manual Context Management (contextvars)": "library/contextvars.html#manual-context-management", "map()": "library/functions.html#map", "MAP_* Constants (mmap)": "library/mmap.html#map-constants", "mapping": "glossary.html#term-mapping", "Mapping Operators to Functions (operator)": "library/operator.html#mapping-operators-to-functions", "Mapping Protocol": "c-api/mapping.html", "Mapping Protocol Access (configparser)": "library/configparser.html#mapping-protocol-access", "Mapping Types \u2014 dict (Types)": "library/stdtypes.html#mapping-types-dict", "marshal": "library/marshal.html", "marshal.dump()": "library/marshal.html#marshal.dump", "marshal.dumps()": "library/marshal.html#marshal.dumps", "marshal.load()": "library/marshal.html#marshal.load", "marshal.loads()": "library/marshal.html#marshal.loads", "marshal.version": "library/marshal.html#marshal.version", "match (case)": "reference/compound_stmts.html#index-18", "match (statement)": "reference/compound_stmts.html#index-18", "Match Objects (re)": "library/re.html#match-objects", "math": "library/math.html", "math.acos()": "library/math.html#math.acos", "math.acosh()": "library/math.html#math.acosh", "math.asin()": "library/math.html#math.asin", "math.asinh()": "library/math.html#math.asinh", "math.atan()": "library/math.html#math.atan", "math.atan2()": "library/math.html#math.atan2", "math.atanh()": "library/math.html#math.atanh", "math.cbrt()": "library/math.html#math.cbrt", "math.ceil()": "library/math.html#math.ceil", "math.comb()": "library/math.html#math.comb", "math.copysign()": "library/math.html#math.copysign", "math.cos()": "library/math.html#math.cos", "math.cosh()": "library/math.html#math.cosh", "math.degrees()": "library/math.html#math.degrees", "math.dist()": "library/math.html#math.dist", "math.e": "library/math.html#math.e", "math.erf()": "library/math.html#math.erf", "math.erfc()": "library/math.html#math.erfc", "math.exp()": "library/math.html#math.exp", "math.exp2()": "library/math.html#math.exp2", "math.expm1()": "library/math.html#math.expm1", "math.fabs()": "library/math.html#math.fabs", "math.factorial()": "library/math.html#math.factorial", "math.floor()": "library/math.html#math.floor", "math.fma()": "library/math.html#math.fma", "math.fmod()": "library/math.html#math.fmod", "math.frexp()": "library/math.html#math.frexp", "math.fsum()": "library/math.html#math.fsum", "math.gamma()": "library/math.html#math.gamma", "math.gcd()": "library/math.html#math.gcd", "math.hypot()": "library/math.html#math.hypot", "math.inf": "library/math.html#math.inf", "math.isclose()": "library/math.html#math.isclose", "math.isfinite()": "library/math.html#math.isfinite", "math.isinf()": "library/math.html#math.isinf", "math.isnan()": "library/math.html#math.isnan", "math.isqrt()": "library/math.html#math.isqrt", "math.lcm()": "library/math.html#math.lcm", "math.ldexp()": "library/math.html#math.ldexp", "math.lgamma()": "library/math.html#math.lgamma", "math.log()": "library/math.html#math.log", "math.log10()": "library/math.html#math.log10", "math.log1p()": "library/math.html#math.log1p", "math.log2()": "library/math.html#math.log2", "math.modf()": "library/math.html#math.modf", "math.nan": "library/math.html#math.nan", "math.nextafter()": "library/math.html#math.nextafter", "math.perm()": "library/math.html#math.perm", "math.pi": "library/math.html#math.pi", "math.pow()": "library/math.html#math.pow", "math.prod()": "library/math.html#math.prod", "math.radians()": "library/math.html#math.radians", "math.remainder()": "library/math.html#math.remainder", "math.sin()": "library/math.html#math.sin", "math.sinh()": "library/math.html#math.sinh", "math.sqrt()": "library/math.html#math.sqrt", "math.sumprod()": "library/math.html#math.sumprod", "math.tan()": "library/math.html#math.tan", "math.tanh()": "library/math.html#math.tanh", "math.tau": "library/math.html#math.tau", "math.trunc()": "library/math.html#math.trunc", "math.ulp()": "library/math.html#math.ulp", "max()": "library/functions.html#max", "Measures of spread (statistics)": "library/statistics.html#measures-of-spread", "Memory BIO Support (ssl)": "library/ssl.html#memory-bio-support", "Memory Management": "c-api/memory.html", "MemoryError": "library/exceptions.html#MemoryError", "MemoryHandler (logging.handlers)": "library/logging.handlers.html#memoryhandler", "memoryview": "library/stdtypes.html#memoryview", "MemoryView objects": "c-api/memoryview.html", "memoryview.__eq__()": "library/stdtypes.html#memoryview.__eq__", "memoryview.c_contiguous": "library/stdtypes.html#memoryview.c_contiguous", "memoryview.cast()": "library/stdtypes.html#memoryview.cast", "memoryview.contiguous": "library/stdtypes.html#memoryview.contiguous", "memoryview.f_contiguous": "library/stdtypes.html#memoryview.f_contiguous", "memoryview.format": "library/stdtypes.html#memoryview.format", "memoryview.hex()": "library/stdtypes.html#memoryview.hex", "memoryview.itemsize": "library/stdtypes.html#memoryview.itemsize", "memoryview.nbytes": "library/stdtypes.html#memoryview.nbytes", "memoryview.ndim": "library/stdtypes.html#memoryview.ndim", "memoryview.obj": "library/stdtypes.html#memoryview.obj", "memoryview.readonly": "library/stdtypes.html#memoryview.readonly", "memoryview.release()": "library/stdtypes.html#memoryview.release", "memoryview.shape": "library/stdtypes.html#memoryview.shape", "memoryview.strides": "library/stdtypes.html#memoryview.strides", "memoryview.suboffsets": "library/stdtypes.html#memoryview.suboffsets", "memoryview.tobytes()": "library/stdtypes.html#memoryview.tobytes", "memoryview.tolist()": "library/stdtypes.html#memoryview.tolist", "memoryview.toreadonly()": "library/stdtypes.html#memoryview.toreadonly", "Menus (IDLE)": "library/idle.html#menus", "Message objects (mailbox)": "library/mailbox.html#message-objects", "meta path finder": "glossary.html#term-meta-path-finder", "metaclass": "glossary.html#term-metaclass", "method": "glossary.html#term-method", "method resolution order": "glossary.html#term-method-resolution-order", "method.__doc__": "reference/datamodel.html#method.__doc__", "method.__func__": "reference/datamodel.html#method.__func__", "method.__module__": "reference/datamodel.html#method.__module__", "method.__name__": "reference/datamodel.html#method.__name__", "method.__self__": "reference/datamodel.html#method.__self__", "Methods of RawTurtle/Turtle and corresponding functions (turtle)": "library/turtle.html#methods-of-rawturtle-turtle-and-corresponding-functions", "Methods of TurtleScreen/Screen and corresponding functions (turtle)": "library/turtle.html#methods-of-turtlescreen-screen-and-corresponding-functions", "mimetypes": "library/mimetypes.html", "MimeTypes Objects (mimetypes)": "library/mimetypes.html#mimetypes-objects", "mimetypes.add_type()": "library/mimetypes.html#mimetypes.add_type", "mimetypes.common_types": "library/mimetypes.html#mimetypes.common_types", "mimetypes.encodings_map": "library/mimetypes.html#mimetypes.encodings_map", "mimetypes.guess_all_extensions()": "library/mimetypes.html#mimetypes.guess_all_extensions", "mimetypes.guess_extension()": "library/mimetypes.html#mimetypes.guess_extension", "mimetypes.guess_file_type()": "library/mimetypes.html#mimetypes.guess_file_type", "mimetypes.guess_type()": "library/mimetypes.html#mimetypes.guess_type", "mimetypes.init()": "library/mimetypes.html#mimetypes.init", "mimetypes.inited": "library/mimetypes.html#mimetypes.inited", "mimetypes.knownfiles": "library/mimetypes.html#mimetypes.knownfiles", "mimetypes.MimeTypes": "library/mimetypes.html#mimetypes.MimeTypes", "mimetypes.MimeTypes.add_type()": "library/mimetypes.html#mimetypes.MimeTypes.add_type", "mimetypes.MimeTypes.encodings_map": "library/mimetypes.html#mimetypes.MimeTypes.encodings_map", "mimetypes.MimeTypes.guess_all_extensions()": "library/mimetypes.html#mimetypes.MimeTypes.guess_all_extensions", "mimetypes.MimeTypes.guess_extension()": "library/mimetypes.html#mimetypes.MimeTypes.guess_extension", "mimetypes.MimeTypes.guess_file_type()": "library/mimetypes.html#mimetypes.MimeTypes.guess_file_type", "mimetypes.MimeTypes.guess_type()": "library/mimetypes.html#mimetypes.MimeTypes.guess_type", "mimetypes.MimeTypes.read()": "library/mimetypes.html#mimetypes.MimeTypes.read", "mimetypes.MimeTypes.read_windows_registry()": "library/mimetypes.html#mimetypes.MimeTypes.read_windows_registry", "mimetypes.MimeTypes.readfp()": "library/mimetypes.html#mimetypes.MimeTypes.readfp", "mimetypes.MimeTypes.suffix_map": "library/mimetypes.html#mimetypes.MimeTypes.suffix_map", "mimetypes.MimeTypes.types_map": "library/mimetypes.html#mimetypes.MimeTypes.types_map", "mimetypes.MimeTypes.types_map_inv": "library/mimetypes.html#mimetypes.MimeTypes.types_map_inv", "mimetypes.read_mime_types()": "library/mimetypes.html#mimetypes.read_mime_types", "mimetypes.suffix_map": "library/mimetypes.html#mimetypes.suffix_map", "mimetypes.types_map": "library/mimetypes.html#mimetypes.types_map", "min()": "library/functions.html#min", "minidom and the DOM standard (xml.dom.minidom)": "library/xml.dom.minidom.html#minidom-and-the-dom-standard", "Miscellaneous (lzma)": "library/lzma.html#miscellaneous", "Miscellaneous System Information (os)": "library/os.html#miscellaneous-system-information", "mmap": "library/mmap.html", "mmap.MADV_AUTOSYNC": "library/mmap.html#mmap.MADV_AUTOSYNC", "mmap.MADV_CORE": "library/mmap.html#mmap.MADV_CORE", "mmap.MADV_DODUMP": "library/mmap.html#mmap.MADV_DODUMP", "mmap.MADV_DOFORK": "library/mmap.html#mmap.MADV_DOFORK", "mmap.MADV_DONTDUMP": "library/mmap.html#mmap.MADV_DONTDUMP", "mmap.MADV_DONTFORK": "library/mmap.html#mmap.MADV_DONTFORK", "mmap.MADV_DONTNEED": "library/mmap.html#mmap.MADV_DONTNEED", "mmap.MADV_FREE": "library/mmap.html#mmap.MADV_FREE", "mmap.MADV_FREE_REUSABLE": "library/mmap.html#mmap.MADV_FREE_REUSABLE", "mmap.MADV_FREE_REUSE": "library/mmap.html#mmap.MADV_FREE_REUSE", "mmap.MADV_HUGEPAGE": "library/mmap.html#mmap.MADV_HUGEPAGE", "mmap.MADV_HWPOISON": "library/mmap.html#mmap.MADV_HWPOISON", "mmap.MADV_MERGEABLE": "library/mmap.html#mmap.MADV_MERGEABLE", "mmap.MADV_NOCORE": "library/mmap.html#mmap.MADV_NOCORE", "mmap.MADV_NOHUGEPAGE": "library/mmap.html#mmap.MADV_NOHUGEPAGE", "mmap.MADV_NORMAL": "library/mmap.html#mmap.MADV_NORMAL", "mmap.MADV_NOSYNC": "library/mmap.html#mmap.MADV_NOSYNC", "mmap.MADV_PROTECT": "library/mmap.html#mmap.MADV_PROTECT", "mmap.MADV_RANDOM": "library/mmap.html#mmap.MADV_RANDOM", "mmap.MADV_REMOVE": "library/mmap.html#mmap.MADV_REMOVE", "mmap.MADV_SEQUENTIAL": "library/mmap.html#mmap.MADV_SEQUENTIAL", "mmap.MADV_SOFT_OFFLINE": "library/mmap.html#mmap.MADV_SOFT_OFFLINE", "mmap.MADV_UNMERGEABLE": "library/mmap.html#mmap.MADV_UNMERGEABLE", "mmap.MADV_WILLNEED": "library/mmap.html#mmap.MADV_WILLNEED", "mmap.MAP_32BIT": "library/mmap.html#mmap.MAP_32BIT", "mmap.MAP_ALIGNED_SUPER": "library/mmap.html#mmap.MAP_ALIGNED_SUPER", "mmap.MAP_ANON": "library/mmap.html#mmap.MAP_ANON", "mmap.MAP_ANONYMOUS": "library/mmap.html#mmap.MAP_ANONYMOUS", "mmap.MAP_CONCEAL": "library/mmap.html#mmap.MAP_CONCEAL", "mmap.MAP_DENYWRITE": "library/mmap.html#mmap.MAP_DENYWRITE", "mmap.MAP_EXECUTABLE": "library/mmap.html#mmap.MAP_EXECUTABLE", "mmap.MAP_HASSEMAPHORE": "library/mmap.html#mmap.MAP_HASSEMAPHORE", "mmap.MAP_JIT": "library/mmap.html#mmap.MAP_JIT", "mmap.MAP_NOCACHE": "library/mmap.html#mmap.MAP_NOCACHE", "mmap.MAP_NOEXTEND": "library/mmap.html#mmap.MAP_NOEXTEND", "mmap.MAP_NORESERVE": "library/mmap.html#mmap.MAP_NORESERVE", "mmap.MAP_POPULATE": "library/mmap.html#mmap.MAP_POPULATE", "mmap.MAP_PRIVATE": "library/mmap.html#mmap.MAP_PRIVATE", "mmap.MAP_RESILIENT_CODESIGN": "library/mmap.html#mmap.MAP_RESILIENT_CODESIGN", "mmap.MAP_RESILIENT_MEDIA": "library/mmap.html#mmap.MAP_RESILIENT_MEDIA", "mmap.MAP_SHARED": "library/mmap.html#mmap.MAP_SHARED", "mmap.MAP_STACK": "library/mmap.html#mmap.MAP_STACK", "mmap.MAP_TPRO": "library/mmap.html#mmap.MAP_TPRO", "mmap.MAP_TRANSLATED_ALLOW_EXECUTE": "library/mmap.html#mmap.MAP_TRANSLATED_ALLOW_EXECUTE", "mmap.MAP_UNIX03": "library/mmap.html#mmap.MAP_UNIX03", "mmap.mmap": "library/mmap.html#mmap.mmap", "mmap.mmap.close()": "library/mmap.html#mmap.mmap.close", "mmap.mmap.closed": "library/mmap.html#mmap.mmap.closed", "mmap.mmap.find()": "library/mmap.html#mmap.mmap.find", "mmap.mmap.flush()": "library/mmap.html#mmap.mmap.flush", "mmap.mmap.madvise()": "library/mmap.html#mmap.mmap.madvise", "mmap.mmap.move()": "library/mmap.html#mmap.mmap.move", "mmap.mmap.read()": "library/mmap.html#mmap.mmap.read", "mmap.mmap.read_byte()": "library/mmap.html#mmap.mmap.read_byte", "mmap.mmap.readline()": "library/mmap.html#mmap.mmap.readline", "mmap.mmap.resize()": "library/mmap.html#mmap.mmap.resize", "mmap.mmap.rfind()": "library/mmap.html#mmap.mmap.rfind", "mmap.mmap.seek()": "library/mmap.html#mmap.mmap.seek", "mmap.mmap.seekable()": "library/mmap.html#mmap.mmap.seekable", "mmap.mmap.size()": "library/mmap.html#mmap.mmap.size", "mmap.mmap.tell()": "library/mmap.html#mmap.mmap.tell", "mmap.mmap.write()": "library/mmap.html#mmap.mmap.write", "mmap.mmap.write_byte()": "library/mmap.html#mmap.mmap.write_byte", "module": "glossary.html#term-module", "Module API (ensurepip)": "library/ensurepip.html#module-api", "Module Contents (__future__)": "library/__future__.html#module-contents", "Module Contents (csv)": "library/csv.html#module-contents", "Module contents (dataclasses)": "library/dataclasses.html#module-contents", "Module Contents (enum)": "library/enum.html#module-contents", "Module Contents (re)": "library/re.html#module-contents", "Module contents (signal)": "library/signal.html#module-contents", "Module contents (site)": "library/site.html#module-contents", "Module contents (socket)": "library/socket.html#module-contents", "Module contents (typing)": "library/typing.html#module-contents", "Module Contents (xml.dom)": "library/xml.dom.html#module-contents", "Module Functions (concurrent.futures)": "library/concurrent.futures.html#module-functions", "Module Interface (pickle)": "library/pickle.html#module-interface", "Module Objects": "c-api/module.html", "module spec": "glossary.html#term-module-spec", "Module-Level Attributes (logging)": "library/logging.html#module-level-attributes", "Module-Level Functions (logging)": "library/logging.html#module-level-functions", "modulefinder": "library/modulefinder.html", "modulefinder.AddPackagePath()": "library/modulefinder.html#modulefinder.AddPackagePath", "modulefinder.ModuleFinder": "library/modulefinder.html#modulefinder.ModuleFinder", "modulefinder.ModuleFinder.modules": "library/modulefinder.html#modulefinder.ModuleFinder.modules", "modulefinder.ModuleFinder.report()": "library/modulefinder.html#modulefinder.ModuleFinder.report", "modulefinder.ModuleFinder.run_script()": "library/modulefinder.html#modulefinder.ModuleFinder.run_script", "modulefinder.ReplacePackage()": "library/modulefinder.html#modulefinder.ReplacePackage", "ModuleNotFoundError": "library/exceptions.html#ModuleNotFoundError", "Modules command-line interface (CLI)": "library/cmdline.html", "Monitoring C API": "c-api/monitoring.html", "Morsel Objects (http.cookies)": "library/http.cookies.html#morsel-objects", "MRO": "glossary.html#term-MRO", "MS Windows Specific Services": "library/windows.html", "msvcrt": "library/msvcrt.html", "msvcrt.CRT_ASSEMBLY_VERSION": "library/msvcrt.html#msvcrt.CRT_ASSEMBLY_VERSION", "msvcrt.CRT_ASSERT": "library/msvcrt.html#msvcrt.CRT_ASSERT", "msvcrt.CRT_ERROR": "library/msvcrt.html#msvcrt.CRT_ERROR", "msvcrt.CRT_WARN": "library/msvcrt.html#msvcrt.CRT_WARN", "msvcrt.CRTDBG_MODE_DEBUG": "library/msvcrt.html#msvcrt.CRTDBG_MODE_DEBUG", "msvcrt.CRTDBG_MODE_FILE": "library/msvcrt.html#msvcrt.CRTDBG_MODE_FILE", "msvcrt.CRTDBG_MODE_WNDW": "library/msvcrt.html#msvcrt.CRTDBG_MODE_WNDW", "msvcrt.CRTDBG_REPORT_MODE": "library/msvcrt.html#msvcrt.CRTDBG_REPORT_MODE", "msvcrt.CrtSetReportFile()": "library/msvcrt.html#msvcrt.CrtSetReportFile", "msvcrt.CrtSetReportMode()": "library/msvcrt.html#msvcrt.CrtSetReportMode", "msvcrt.get_osfhandle()": "library/msvcrt.html#msvcrt.get_osfhandle", "msvcrt.getch()": "library/msvcrt.html#msvcrt.getch", "msvcrt.getche()": "library/msvcrt.html#msvcrt.getche", "msvcrt.getwch()": "library/msvcrt.html#msvcrt.getwch", "msvcrt.getwche()": "library/msvcrt.html#msvcrt.getwche", "msvcrt.heapmin()": "library/msvcrt.html#msvcrt.heapmin", "msvcrt.kbhit()": "library/msvcrt.html#msvcrt.kbhit", "msvcrt.LIBRARIES_ASSEMBLY_NAME_PREFIX": "library/msvcrt.html#msvcrt.LIBRARIES_ASSEMBLY_NAME_PREFIX", "msvcrt.LK_LOCK": "library/msvcrt.html#msvcrt.LK_LOCK", "msvcrt.LK_NBLCK": "library/msvcrt.html#msvcrt.LK_NBLCK", "msvcrt.LK_NBRLCK": "library/msvcrt.html#msvcrt.LK_NBRLCK", "msvcrt.LK_RLCK": "library/msvcrt.html#msvcrt.LK_RLCK", "msvcrt.LK_UNLCK": "library/msvcrt.html#msvcrt.LK_UNLCK", "msvcrt.locking()": "library/msvcrt.html#msvcrt.locking", "msvcrt.open_osfhandle()": "library/msvcrt.html#msvcrt.open_osfhandle", "msvcrt.OUT_TO_DEFAULT": "library/msvcrt.html#msvcrt.OUT_TO_DEFAULT", "msvcrt.OUT_TO_MSGBOX": "library/msvcrt.html#msvcrt.OUT_TO_MSGBOX", "msvcrt.OUT_TO_STDERR": "library/msvcrt.html#msvcrt.OUT_TO_STDERR", "msvcrt.putch()": "library/msvcrt.html#msvcrt.putch", "msvcrt.putwch()": "library/msvcrt.html#msvcrt.putwch", "msvcrt.REPORT_ERRMODE": "library/msvcrt.html#msvcrt.REPORT_ERRMODE", "msvcrt.set_error_mode()": "library/msvcrt.html#msvcrt.set_error_mode", "msvcrt.setmode()": "library/msvcrt.html#msvcrt.setmode", "msvcrt.ungetch()": "library/msvcrt.html#msvcrt.ungetch", "msvcrt.ungetwch()": "library/msvcrt.html#msvcrt.ungetwch", "msvcrt.VC_ASSEMBLY_PUBLICKEYTOKEN": "library/msvcrt.html#msvcrt.VC_ASSEMBLY_PUBLICKEYTOKEN", "MultiCall Objects (xmlrpc.client)": "library/xmlrpc.client.html#multicall-objects", "Multimedia Services": "library/mm.html", "multiprocessing": "library/multiprocessing.html", "multiprocessing.active_children()": "library/multiprocessing.html#multiprocessing.active_children", "multiprocessing.Array()": "library/multiprocessing.html#multiprocessing.Array", "multiprocessing.AuthenticationError": "library/multiprocessing.html#multiprocessing.AuthenticationError", "multiprocessing.Barrier": "library/multiprocessing.html#multiprocessing.Barrier", "multiprocessing.BoundedSemaphore": "library/multiprocessing.html#multiprocessing.BoundedSemaphore", "multiprocessing.BufferTooShort": "library/multiprocessing.html#multiprocessing.BufferTooShort", "multiprocessing.Condition": "library/multiprocessing.html#multiprocessing.Condition", "multiprocessing.connection.answer_challenge()": "library/multiprocessing.html#multiprocessing.connection.answer_challenge", "multiprocessing.connection.Client()": "library/multiprocessing.html#multiprocessing.connection.Client", "multiprocessing.connection.Connection": "library/multiprocessing.html#multiprocessing.connection.Connection", "multiprocessing.connection.Connection.close()": "library/multiprocessing.html#multiprocessing.connection.Connection.close", "multiprocessing.connection.Connection.fileno()": "library/multiprocessing.html#multiprocessing.connection.Connection.fileno", "multiprocessing.connection.Connection.poll()": "library/multiprocessing.html#multiprocessing.connection.Connection.poll", "multiprocessing.connection.Connection.recv()": "library/multiprocessing.html#multiprocessing.connection.Connection.recv", "multiprocessing.connection.Connection.recv_bytes()": "library/multiprocessing.html#multiprocessing.connection.Connection.recv_bytes", "multiprocessing.connection.Connection.recv_bytes_into()": "library/multiprocessing.html#multiprocessing.connection.Connection.recv_bytes_into", "multiprocessing.connection.Connection.send()": "library/multiprocessing.html#multiprocessing.connection.Connection.send", "multiprocessing.connection.Connection.send_bytes()": "library/multiprocessing.html#multiprocessing.connection.Connection.send_bytes", "multiprocessing.connection.deliver_challenge()": "library/multiprocessing.html#multiprocessing.connection.deliver_challenge", "multiprocessing.connection.Listener": "library/multiprocessing.html#multiprocessing.connection.Listener", "multiprocessing.connection.Listener.accept()": "library/multiprocessing.html#multiprocessing.connection.Listener.accept", "multiprocessing.connection.Listener.address": "library/multiprocessing.html#multiprocessing.connection.Listener.address", "multiprocessing.connection.Listener.close()": "library/multiprocessing.html#multiprocessing.connection.Listener.close", "multiprocessing.connection.Listener.last_accepted": "library/multiprocessing.html#multiprocessing.connection.Listener.last_accepted", "multiprocessing.connection.wait()": "library/multiprocessing.html#multiprocessing.connection.wait", "multiprocessing.cpu_count()": "library/multiprocessing.html#multiprocessing.cpu_count", "multiprocessing.current_process()": "library/multiprocessing.html#multiprocessing.current_process", "multiprocessing.Event": "library/multiprocessing.html#multiprocessing.Event", "multiprocessing.freeze_support()": "library/multiprocessing.html#multiprocessing.freeze_support", "multiprocessing.get_all_start_methods()": "library/multiprocessing.html#multiprocessing.get_all_start_methods", "multiprocessing.get_context()": "library/multiprocessing.html#multiprocessing.get_context", "multiprocessing.get_logger()": "library/multiprocessing.html#multiprocessing.get_logger", "multiprocessing.get_start_method()": "library/multiprocessing.html#multiprocessing.get_start_method", "multiprocessing.JoinableQueue": "library/multiprocessing.html#multiprocessing.JoinableQueue", "multiprocessing.JoinableQueue.join()": "library/multiprocessing.html#multiprocessing.JoinableQueue.join", "multiprocessing.JoinableQueue.task_done()": "library/multiprocessing.html#multiprocessing.JoinableQueue.task_done", "multiprocessing.Lock": "library/multiprocessing.html#multiprocessing.Lock", "multiprocessing.Lock.acquire()": "library/multiprocessing.html#multiprocessing.Lock.acquire", "multiprocessing.Lock.release()": "library/multiprocessing.html#multiprocessing.Lock.release", "multiprocessing.log_to_stderr()": "library/multiprocessing.html#multiprocessing.log_to_stderr", "multiprocessing.Manager()": "library/multiprocessing.html#multiprocessing.Manager", "multiprocessing.managers.BaseManager": "library/multiprocessing.html#multiprocessing.managers.BaseManager", "multiprocessing.managers.BaseManager.address": "library/multiprocessing.html#multiprocessing.managers.BaseManager.address", "multiprocessing.managers.BaseManager.connect()": "library/multiprocessing.html#multiprocessing.managers.BaseManager.connect", "multiprocessing.managers.BaseManager.get_server()": "library/multiprocessing.html#multiprocessing.managers.BaseManager.get_server", "multiprocessing.managers.BaseManager.register()": "library/multiprocessing.html#multiprocessing.managers.BaseManager.register", "multiprocessing.managers.BaseManager.shutdown()": "library/multiprocessing.html#multiprocessing.managers.BaseManager.shutdown", "multiprocessing.managers.BaseManager.start()": "library/multiprocessing.html#multiprocessing.managers.BaseManager.start", "multiprocessing.managers.BaseProxy": "library/multiprocessing.html#multiprocessing.managers.BaseProxy", "multiprocessing.managers.BaseProxy.__repr__()": "library/multiprocessing.html#multiprocessing.managers.BaseProxy.__repr__", "multiprocessing.managers.BaseProxy.__str__()": "library/multiprocessing.html#multiprocessing.managers.BaseProxy.__str__", "multiprocessing.managers.BaseProxy._callmethod()": "library/multiprocessing.html#multiprocessing.managers.BaseProxy._callmethod", "multiprocessing.managers.BaseProxy._getvalue()": "library/multiprocessing.html#multiprocessing.managers.BaseProxy._getvalue", "multiprocessing.managers.Namespace": "library/multiprocessing.html#multiprocessing.managers.Namespace", "multiprocessing.managers.SharedMemoryManager": "library/multiprocessing.shared_memory.html#multiprocessing.managers.SharedMemoryManager", "multiprocessing.managers.SharedMemoryManager.ShareableList()": "library/multiprocessing.shared_memory.html#multiprocessing.managers.SharedMemoryManager.ShareableList", "multiprocessing.managers.SharedMemoryManager.SharedMemory()": "library/multiprocessing.shared_memory.html#multiprocessing.managers.SharedMemoryManager.SharedMemory", "multiprocessing.managers.SyncManager": "library/multiprocessing.html#multiprocessing.managers.SyncManager", "multiprocessing.managers.SyncManager.Array()": "library/multiprocessing.html#multiprocessing.managers.SyncManager.Array", "multiprocessing.managers.SyncManager.Barrier()": "library/multiprocessing.html#multiprocessing.managers.SyncManager.Barrier", "multiprocessing.managers.SyncManager.BoundedSemaphore()": "library/multiprocessing.html#multiprocessing.managers.SyncManager.BoundedSemaphore", "multiprocessing.managers.SyncManager.Condition()": "library/multiprocessing.html#multiprocessing.managers.SyncManager.Condition", "multiprocessing.managers.SyncManager.dict()": "library/multiprocessing.html#multiprocessing.managers.SyncManager.dict", "multiprocessing.managers.SyncManager.Event()": "library/multiprocessing.html#multiprocessing.managers.SyncManager.Event", "multiprocessing.managers.SyncManager.list()": "library/multiprocessing.html#multiprocessing.managers.SyncManager.list", "multiprocessing.managers.SyncManager.Lock()": "library/multiprocessing.html#multiprocessing.managers.SyncManager.Lock", "multiprocessing.managers.SyncManager.Namespace()": "library/multiprocessing.html#multiprocessing.managers.SyncManager.Namespace", "multiprocessing.managers.SyncManager.Queue()": "library/multiprocessing.html#multiprocessing.managers.SyncManager.Queue", "multiprocessing.managers.SyncManager.RLock()": "library/multiprocessing.html#multiprocessing.managers.SyncManager.RLock", "multiprocessing.managers.SyncManager.Semaphore()": "library/multiprocessing.html#multiprocessing.managers.SyncManager.Semaphore", "multiprocessing.managers.SyncManager.Value()": "library/multiprocessing.html#multiprocessing.managers.SyncManager.Value", "multiprocessing.parent_process()": "library/multiprocessing.html#multiprocessing.parent_process", "multiprocessing.Pipe()": "library/multiprocessing.html#multiprocessing.Pipe", "multiprocessing.pool.AsyncResult": "library/multiprocessing.html#multiprocessing.pool.AsyncResult", "multiprocessing.pool.AsyncResult.get()": "library/multiprocessing.html#multiprocessing.pool.AsyncResult.get", "multiprocessing.pool.AsyncResult.ready()": "library/multiprocessing.html#multiprocessing.pool.AsyncResult.ready", "multiprocessing.pool.AsyncResult.successful()": "library/multiprocessing.html#multiprocessing.pool.AsyncResult.successful", "multiprocessing.pool.AsyncResult.wait()": "library/multiprocessing.html#multiprocessing.pool.AsyncResult.wait", "multiprocessing.pool.Pool": "library/multiprocessing.html#multiprocessing.pool.Pool", "multiprocessing.pool.Pool.apply()": "library/multiprocessing.html#multiprocessing.pool.Pool.apply", "multiprocessing.pool.Pool.apply_async()": "library/multiprocessing.html#multiprocessing.pool.Pool.apply_async", "multiprocessing.pool.Pool.close()": "library/multiprocessing.html#multiprocessing.pool.Pool.close", "multiprocessing.pool.Pool.imap()": "library/multiprocessing.html#multiprocessing.pool.Pool.imap", "multiprocessing.pool.Pool.imap_unordered()": "library/multiprocessing.html#multiprocessing.pool.Pool.imap_unordered", "multiprocessing.pool.Pool.join()": "library/multiprocessing.html#multiprocessing.pool.Pool.join", "multiprocessing.pool.Pool.map()": "library/multiprocessing.html#multiprocessing.pool.Pool.map", "multiprocessing.pool.Pool.map_async()": "library/multiprocessing.html#multiprocessing.pool.Pool.map_async", "multiprocessing.pool.Pool.starmap()": "library/multiprocessing.html#multiprocessing.pool.Pool.starmap", "multiprocessing.pool.Pool.starmap_async()": "library/multiprocessing.html#multiprocessing.pool.Pool.starmap_async", "multiprocessing.pool.Pool.terminate()": "library/multiprocessing.html#multiprocessing.pool.Pool.terminate", "multiprocessing.pool.ThreadPool": "library/multiprocessing.html#multiprocessing.pool.ThreadPool", "multiprocessing.Process": "library/multiprocessing.html#multiprocessing.Process", "multiprocessing.Process.authkey": "library/multiprocessing.html#multiprocessing.Process.authkey", "multiprocessing.Process.close()": "library/multiprocessing.html#multiprocessing.Process.close", "multiprocessing.Process.daemon": "library/multiprocessing.html#multiprocessing.Process.daemon", "multiprocessing.Process.exitcode": "library/multiprocessing.html#multiprocessing.Process.exitcode", "multiprocessing.Process.is_alive()": "library/multiprocessing.html#multiprocessing.Process.is_alive", "multiprocessing.Process.join()": "library/multiprocessing.html#multiprocessing.Process.join", "multiprocessing.Process.kill()": "library/multiprocessing.html#multiprocessing.Process.kill", "multiprocessing.Process.name": "library/multiprocessing.html#multiprocessing.Process.name", "multiprocessing.Process.pid": "library/multiprocessing.html#multiprocessing.Process.pid", "multiprocessing.Process.run()": "library/multiprocessing.html#multiprocessing.Process.run", "multiprocessing.Process.sentinel": "library/multiprocessing.html#multiprocessing.Process.sentinel", "multiprocessing.Process.start()": "library/multiprocessing.html#multiprocessing.Process.start", "multiprocessing.Process.terminate()": "library/multiprocessing.html#multiprocessing.Process.terminate", "multiprocessing.ProcessError": "library/multiprocessing.html#multiprocessing.ProcessError", "multiprocessing.Queue": "library/multiprocessing.html#multiprocessing.Queue", "multiprocessing.Queue.cancel_join_thread()": "library/multiprocessing.html#multiprocessing.Queue.cancel_join_thread", "multiprocessing.Queue.close()": "library/multiprocessing.html#multiprocessing.Queue.close", "multiprocessing.Queue.empty()": "library/multiprocessing.html#multiprocessing.Queue.empty", "multiprocessing.Queue.full()": "library/multiprocessing.html#multiprocessing.Queue.full", "multiprocessing.Queue.get()": "library/multiprocessing.html#multiprocessing.Queue.get", "multiprocessing.Queue.get_nowait()": "library/multiprocessing.html#multiprocessing.Queue.get_nowait", "multiprocessing.Queue.join_thread()": "library/multiprocessing.html#multiprocessing.Queue.join_thread", "multiprocessing.Queue.put()": "library/multiprocessing.html#multiprocessing.Queue.put", "multiprocessing.Queue.put_nowait()": "library/multiprocessing.html#multiprocessing.Queue.put_nowait", "multiprocessing.Queue.qsize()": "library/multiprocessing.html#multiprocessing.Queue.qsize", "multiprocessing.RLock": "library/multiprocessing.html#multiprocessing.RLock", "multiprocessing.RLock.acquire()": "library/multiprocessing.html#multiprocessing.RLock.acquire", "multiprocessing.RLock.release()": "library/multiprocessing.html#multiprocessing.RLock.release", "multiprocessing.Semaphore": "library/multiprocessing.html#multiprocessing.Semaphore", "multiprocessing.set_executable()": "library/multiprocessing.html#multiprocessing.set_executable", "multiprocessing.set_forkserver_preload()": "library/multiprocessing.html#multiprocessing.set_forkserver_preload", "multiprocessing.set_start_method()": "library/multiprocessing.html#multiprocessing.set_start_method", "multiprocessing.shared_memory": "library/multiprocessing.shared_memory.html", "multiprocessing.shared_memory.ShareableList": "library/multiprocessing.shared_memory.html#multiprocessing.shared_memory.ShareableList", "multiprocessing.shared_memory.ShareableList.count()": "library/multiprocessing.shared_memory.html#multiprocessing.shared_memory.ShareableList.count", "multiprocessing.shared_memory.ShareableList.format": "library/multiprocessing.shared_memory.html#multiprocessing.shared_memory.ShareableList.format", "multiprocessing.shared_memory.ShareableList.index()": "library/multiprocessing.shared_memory.html#multiprocessing.shared_memory.ShareableList.index", "multiprocessing.shared_memory.ShareableList.shm": "library/multiprocessing.shared_memory.html#multiprocessing.shared_memory.ShareableList.shm", "multiprocessing.shared_memory.SharedMemory": "library/multiprocessing.shared_memory.html#multiprocessing.shared_memory.SharedMemory", "multiprocessing.shared_memory.SharedMemory.buf": "library/multiprocessing.shared_memory.html#multiprocessing.shared_memory.SharedMemory.buf", "multiprocessing.shared_memory.SharedMemory.close()": "library/multiprocessing.shared_memory.html#multiprocessing.shared_memory.SharedMemory.close", "multiprocessing.shared_memory.SharedMemory.name": "library/multiprocessing.shared_memory.html#multiprocessing.shared_memory.SharedMemory.name", "multiprocessing.shared_memory.SharedMemory.size": "library/multiprocessing.shared_memory.html#multiprocessing.shared_memory.SharedMemory.size", "multiprocessing.shared_memory.SharedMemory.unlink()": "library/multiprocessing.shared_memory.html#multiprocessing.shared_memory.SharedMemory.unlink", "multiprocessing.sharedctypes.Array()": "library/multiprocessing.html#multiprocessing.sharedctypes.Array", "multiprocessing.sharedctypes.copy()": "library/multiprocessing.html#multiprocessing.sharedctypes.copy", "multiprocessing.sharedctypes.RawArray()": "library/multiprocessing.html#multiprocessing.sharedctypes.RawArray", "multiprocessing.sharedctypes.RawValue()": "library/multiprocessing.html#multiprocessing.sharedctypes.RawValue", "multiprocessing.sharedctypes.synchronized()": "library/multiprocessing.html#multiprocessing.sharedctypes.synchronized", "multiprocessing.sharedctypes.Value()": "library/multiprocessing.html#multiprocessing.sharedctypes.Value", "multiprocessing.SimpleQueue": "library/multiprocessing.html#multiprocessing.SimpleQueue", "multiprocessing.SimpleQueue.close()": "library/multiprocessing.html#multiprocessing.SimpleQueue.close", "multiprocessing.SimpleQueue.empty()": "library/multiprocessing.html#multiprocessing.SimpleQueue.empty", "multiprocessing.SimpleQueue.get()": "library/multiprocessing.html#multiprocessing.SimpleQueue.get", "multiprocessing.SimpleQueue.put()": "library/multiprocessing.html#multiprocessing.SimpleQueue.put", "multiprocessing.TimeoutError": "library/multiprocessing.html#multiprocessing.TimeoutError", "multiprocessing.Value()": "library/multiprocessing.html#multiprocessing.Value", "mutable": "glossary.html#term-mutable", "Mutable default values (dataclasses)": "library/dataclasses.html#mutable-default-values", "name__": "reference/import.html#name__", "named tuple": "glossary.html#term-named-tuple", "namedtuple() Factory Function for Tuples with Named Fields (collections)": "library/collections.html#namedtuple-factory-function-for-tuples-with-named-fields", "NameError": "library/exceptions.html#NameError", "namespace": "glossary.html#term-namespace", "namespace package": "glossary.html#term-namespace-package", "ndiff example (difflib)": "library/difflib.html#ndiff-example", "nested scope": "glossary.html#term-nested-scope", "netrc": "library/netrc.html", "netrc Objects (netrc)": "library/netrc.html#netrc-objects", "netrc.netrc": "library/netrc.html#netrc.netrc", "netrc.netrc.__repr__()": "library/netrc.html#netrc.netrc.__repr__", "netrc.netrc.authenticators()": "library/netrc.html#netrc.netrc.authenticators", "netrc.netrc.hosts": "library/netrc.html#netrc.netrc.hosts", "netrc.netrc.macros": "library/netrc.html#netrc.netrc.macros", "netrc.NetrcParseError": "library/netrc.html#netrc.NetrcParseError", "netrc.NetrcParseError.filename": "library/netrc.html#netrc.NetrcParseError.filename", "netrc.NetrcParseError.lineno": "library/netrc.html#netrc.NetrcParseError.lineno", "netrc.NetrcParseError.msg": "library/netrc.html#netrc.NetrcParseError.msg", "Networking and Interprocess Communication": "library/ipc.html", "new-style class": "glossary.html#term-new-style-class", "NewType (typing)": "library/typing.html#newtype", "next()": "library/functions.html#next", "Node classes (ast)": "library/ast.html#node-classes", "Nominal vs structural subtyping (typing)": "library/typing.html#nominal-vs-structural-subtyping", "None": "library/constants.html#None", "nonlocal (statement)": "reference/simple_stmts.html#index-45", "NormalDist objects (statistics)": "library/statistics.html#normaldist-objects", "Notable Module Contents (posix)": "library/posix.html#notable-module-contents", "NotADirectoryError": "library/exceptions.html#NotADirectoryError", "Note on Signal Handlers and Exceptions (signal)": "library/signal.html#note-on-signal-handlers-and-exceptions", "Note on SIGPIPE (signal)": "library/signal.html#note-on-sigpipe", "Notebook (tkinter.ttk)": "library/tkinter.ttk.html#notebook", "Notes (enum)": "library/enum.html#notes", "Notes (subprocess)": "library/subprocess.html#notes", "Notes for type implementers (numbers)": "library/numbers.html#notes-for-type-implementers", "Notes on non-blocking sockets (ssl)": "library/ssl.html#notes-on-non-blocking-sockets", "Notes on Reproducibility (random)": "library/random.html#notes-on-reproducibility", "Notes on socket timeouts (socket)": "library/socket.html#notes-on-socket-timeouts", "NotImplemented": "library/constants.html#NotImplemented", "NotImplementedError": "library/exceptions.html#NotImplementedError", "NTEventLogHandler (logging.handlers)": "library/logging.handlers.html#nteventloghandler", "null (operation)": "reference/simple_stmts.html#index-20", "NullHandler (logging.handlers)": "library/logging.handlers.html#nullhandler", "Number Protocol": "c-api/number.html", "Number-theoretic and representation functions (math)": "library/math.html#number-theoretic-and-representation-functions", "numbers": "library/numbers.html", "numbers.Complex": "library/numbers.html#numbers.Complex", "numbers.Complex.conjugate()": "library/numbers.html#numbers.Complex.conjugate", "numbers.Complex.imag": "library/numbers.html#numbers.Complex.imag", "numbers.Complex.real": "library/numbers.html#numbers.Complex.real", "numbers.Integral": "library/numbers.html#numbers.Integral", "numbers.Number": "library/numbers.html#numbers.Number", "numbers.Rational": "library/numbers.html#numbers.Rational", "numbers.Rational.denominator": "library/numbers.html#numbers.Rational.denominator", "numbers.Rational.numerator": "library/numbers.html#numbers.Rational.numerator", "numbers.Real": "library/numbers.html#numbers.Real", "Numeric and Mathematical Modules": "library/numeric.html", "Numeric Types \u2014 int, float, complex (Types)": "library/stdtypes.html#numeric-types-int-float-complex", "object": "glossary.html#term-object", "Object Implementation Support": "c-api/objimpl.html", "Object Protocol": "c-api/object.html", "object.__abs__()": "reference/datamodel.html#object.__abs__", "object.__add__()": "reference/datamodel.html#object.__add__", "object.__aenter__()": "reference/datamodel.html#object.__aenter__", "object.__aexit__()": "reference/datamodel.html#object.__aexit__", "object.__aiter__()": "reference/datamodel.html#object.__aiter__", "object.__and__()": "reference/datamodel.html#object.__and__", "object.__anext__()": "reference/datamodel.html#object.__anext__", "object.__await__()": "reference/datamodel.html#object.__await__", "object.__bool__()": "reference/datamodel.html#object.__bool__", "object.__buffer__()": "reference/datamodel.html#object.__buffer__", "object.__bytes__()": "reference/datamodel.html#object.__bytes__", "object.__call__()": "reference/datamodel.html#object.__call__", "object.__ceil__()": "reference/datamodel.html#object.__ceil__", "object.__class_getitem__()": "reference/datamodel.html#object.__class_getitem__", "object.__complex__()": "reference/datamodel.html#object.__complex__", "object.__contains__()": "reference/datamodel.html#object.__contains__", "object.__copy__()": "library/copy.html#object.__copy__", "object.__deepcopy__()": "library/copy.html#object.__deepcopy__", "object.__del__()": "reference/datamodel.html#object.__del__", "object.__delattr__()": "reference/datamodel.html#object.__delattr__", "object.__delete__()": "reference/datamodel.html#object.__delete__", "object.__delitem__()": "reference/datamodel.html#object.__delitem__", "object.__dict__": "library/stdtypes.html#object.__dict__", "object.__dir__()": "reference/datamodel.html#object.__dir__", "object.__divmod__()": "reference/datamodel.html#object.__divmod__", "object.__enter__()": "reference/datamodel.html#object.__enter__", "object.__eq__()": "reference/datamodel.html#object.__eq__", "object.__exit__()": "reference/datamodel.html#object.__exit__", "object.__float__()": "reference/datamodel.html#object.__float__", "object.__floor__()": "reference/datamodel.html#object.__floor__", "object.__floordiv__()": "reference/datamodel.html#object.__floordiv__", "object.__format__()": "reference/datamodel.html#object.__format__", "object.__ge__()": "reference/datamodel.html#object.__ge__", "object.__get__()": "reference/datamodel.html#object.__get__", "object.__getattr__()": "reference/datamodel.html#object.__getattr__", "object.__getattribute__()": "reference/datamodel.html#object.__getattribute__", "object.__getitem__()": "reference/datamodel.html#object.__getitem__", "object.__getnewargs__()": "library/pickle.html#object.__getnewargs__", "object.__getnewargs_ex__()": "library/pickle.html#object.__getnewargs_ex__", "object.__getstate__()": "library/pickle.html#object.__getstate__", "object.__gt__()": "reference/datamodel.html#object.__gt__", "object.__hash__()": "reference/datamodel.html#object.__hash__", "object.__iadd__()": "reference/datamodel.html#object.__iadd__", "object.__iand__()": "reference/datamodel.html#object.__iand__", "object.__ifloordiv__()": "reference/datamodel.html#object.__ifloordiv__", "object.__ilshift__()": "reference/datamodel.html#object.__ilshift__", "object.__imatmul__()": "reference/datamodel.html#object.__imatmul__", "object.__imod__()": "reference/datamodel.html#object.__imod__", "object.__imul__()": "reference/datamodel.html#object.__imul__", "object.__index__()": "reference/datamodel.html#object.__index__", "object.__init__()": "reference/datamodel.html#object.__init__", "object.__init_subclass__()": "reference/datamodel.html#object.__init_subclass__", "object.__int__()": "reference/datamodel.html#object.__int__", "object.__invert__()": "reference/datamodel.html#object.__invert__", "object.__ior__()": "reference/datamodel.html#object.__ior__", "object.__ipow__()": "reference/datamodel.html#object.__ipow__", "object.__irshift__()": "reference/datamodel.html#object.__irshift__", "object.__isub__()": "reference/datamodel.html#object.__isub__", "object.__iter__()": "reference/datamodel.html#object.__iter__", "object.__itruediv__()": "reference/datamodel.html#object.__itruediv__", "object.__ixor__()": "reference/datamodel.html#object.__ixor__", "object.__le__()": "reference/datamodel.html#object.__le__", "object.__len__()": "reference/datamodel.html#object.__len__", "object.__length_hint__()": "reference/datamodel.html#object.__length_hint__", "object.__lshift__()": "reference/datamodel.html#object.__lshift__", "object.__lt__()": "reference/datamodel.html#object.__lt__", "object.__match_args__": "reference/datamodel.html#object.__match_args__", "object.__matmul__()": "reference/datamodel.html#object.__matmul__", "object.__missing__()": "reference/datamodel.html#object.__missing__", "object.__mod__()": "reference/datamodel.html#object.__mod__", "object.__mro_entries__()": "reference/datamodel.html#object.__mro_entries__", "object.__mul__()": "reference/datamodel.html#object.__mul__", "object.__ne__()": "reference/datamodel.html#object.__ne__", "object.__neg__()": "reference/datamodel.html#object.__neg__", "object.__new__()": "reference/datamodel.html#object.__new__", "object.__objclass__": "reference/datamodel.html#object.__objclass__", "object.__or__()": "reference/datamodel.html#object.__or__", "object.__pos__()": "reference/datamodel.html#object.__pos__", "object.__pow__()": "reference/datamodel.html#object.__pow__", "object.__radd__()": "reference/datamodel.html#object.__radd__", "object.__rand__()": "reference/datamodel.html#object.__rand__", "object.__rdivmod__()": "reference/datamodel.html#object.__rdivmod__", "object.__reduce__()": "library/pickle.html#object.__reduce__", "object.__reduce_ex__()": "library/pickle.html#object.__reduce_ex__", "object.__release_buffer__()": "reference/datamodel.html#object.__release_buffer__", "object.__replace__()": "library/copy.html#object.__replace__", "object.__repr__()": "reference/datamodel.html#object.__repr__", "object.__reversed__()": "reference/datamodel.html#object.__reversed__", "object.__rfloordiv__()": "reference/datamodel.html#object.__rfloordiv__", "object.__rlshift__()": "reference/datamodel.html#object.__rlshift__", "object.__rmatmul__()": "reference/datamodel.html#object.__rmatmul__", "object.__rmod__()": "reference/datamodel.html#object.__rmod__", "object.__rmul__()": "reference/datamodel.html#object.__rmul__", "object.__ror__()": "reference/datamodel.html#object.__ror__", "object.__round__()": "reference/datamodel.html#object.__round__", "object.__rpow__()": "reference/datamodel.html#object.__rpow__", "object.__rrshift__()": "reference/datamodel.html#object.__rrshift__", "object.__rshift__()": "reference/datamodel.html#object.__rshift__", "object.__rsub__()": "reference/datamodel.html#object.__rsub__", "object.__rtruediv__()": "reference/datamodel.html#object.__rtruediv__", "object.__rxor__()": "reference/datamodel.html#object.__rxor__", "object.__set__()": "reference/datamodel.html#object.__set__", "object.__set_name__()": "reference/datamodel.html#object.__set_name__", "object.__setattr__()": "reference/datamodel.html#object.__setattr__", "object.__setitem__()": "reference/datamodel.html#object.__setitem__", "object.__setstate__()": "library/pickle.html#object.__setstate__", "object.__slots__": "reference/datamodel.html#object.__slots__", "object.__str__()": "reference/datamodel.html#object.__str__", "object.__sub__()": "reference/datamodel.html#object.__sub__", "object.__truediv__()": "reference/datamodel.html#object.__truediv__", "object.__trunc__()": "reference/datamodel.html#object.__trunc__", "object.__xor__()": "reference/datamodel.html#object.__xor__", "Objects for Type Hinting": "c-api/typehints.html", "Objects in the DOM (xml.dom)": "library/xml.dom.html#objects-in-the-dom", "Obtaining the Event Loop (Low-level API Index)": "library/asyncio-llapi-index.html#obtaining-the-event-loop", "oct()": "library/functions.html#oct", "Older high-level API (subprocess)": "library/subprocess.html#older-high-level-api", "One-shot (de)compression (bz2)": "library/bz2.html#one-shot-de-compression", "Opcode collections (dis)": "library/dis.html#opcode-collections", "open()": "library/functions.html#open", "OpenerDirector Objects (urllib.request)": "library/urllib.request.html#openerdirector-objects", "Operating System Utilities": "c-api/sys.html", "operation (null)": "reference/simple_stmts.html#index-20", "operator": "library/operator.html", "operator.__abs__()": "library/operator.html#operator.__abs__", "operator.__add__()": "library/operator.html#operator.__add__", "operator.__and__()": "library/operator.html#operator.__and__", "operator.__call__()": "library/operator.html#operator.__call__", "operator.__concat__()": "library/operator.html#operator.__concat__", "operator.__contains__()": "library/operator.html#operator.__contains__", "operator.__delitem__()": "library/operator.html#operator.__delitem__", "operator.__eq__()": "library/operator.html#operator.__eq__", "operator.__floordiv__()": "library/operator.html#operator.__floordiv__", "operator.__ge__()": "library/operator.html#operator.__ge__", "operator.__getitem__()": "library/operator.html#operator.__getitem__", "operator.__gt__()": "library/operator.html#operator.__gt__", "operator.__iadd__()": "library/operator.html#operator.__iadd__", "operator.__iand__()": "library/operator.html#operator.__iand__", "operator.__iconcat__()": "library/operator.html#operator.__iconcat__", "operator.__ifloordiv__()": "library/operator.html#operator.__ifloordiv__", "operator.__ilshift__()": "library/operator.html#operator.__ilshift__", "operator.__imatmul__()": "library/operator.html#operator.__imatmul__", "operator.__imod__()": "library/operator.html#operator.__imod__", "operator.__imul__()": "library/operator.html#operator.__imul__", "operator.__index__()": "library/operator.html#operator.__index__", "operator.__inv__()": "library/operator.html#operator.__inv__", "operator.__invert__()": "library/operator.html#operator.__invert__", "operator.__ior__()": "library/operator.html#operator.__ior__", "operator.__ipow__()": "library/operator.html#operator.__ipow__", "operator.__irshift__()": "library/operator.html#operator.__irshift__", "operator.__isub__()": "library/operator.html#operator.__isub__", "operator.__itruediv__()": "library/operator.html#operator.__itruediv__", "operator.__ixor__()": "library/operator.html#operator.__ixor__", "operator.__le__()": "library/operator.html#operator.__le__", "operator.__lshift__()": "library/operator.html#operator.__lshift__", "operator.__lt__()": "library/operator.html#operator.__lt__", "operator.__matmul__()": "library/operator.html#operator.__matmul__", "operator.__mod__()": "library/operator.html#operator.__mod__", "operator.__mul__()": "library/operator.html#operator.__mul__", "operator.__ne__()": "library/operator.html#operator.__ne__", "operator.__neg__()": "library/operator.html#operator.__neg__", "operator.__not__()": "library/operator.html#operator.__not__", "operator.__or__()": "library/operator.html#operator.__or__", "operator.__pos__()": "library/operator.html#operator.__pos__", "operator.__pow__()": "library/operator.html#operator.__pow__", "operator.__rshift__()": "library/operator.html#operator.__rshift__", "operator.__setitem__()": "library/operator.html#operator.__setitem__", "operator.__sub__()": "library/operator.html#operator.__sub__", "operator.__truediv__()": "library/operator.html#operator.__truediv__", "operator.__xor__()": "library/operator.html#operator.__xor__", "operator.abs()": "library/operator.html#operator.abs", "operator.add()": "library/operator.html#operator.add", "operator.and_()": "library/operator.html#operator.and_", "operator.attrgetter()": "library/operator.html#operator.attrgetter", "operator.call()": "library/operator.html#operator.call", "operator.concat()": "library/operator.html#operator.concat", "operator.contains()": "library/operator.html#operator.contains", "operator.countOf()": "library/operator.html#operator.countOf", "operator.delitem()": "library/operator.html#operator.delitem", "operator.eq()": "library/operator.html#operator.eq", "operator.floordiv()": "library/operator.html#operator.floordiv", "operator.ge()": "library/operator.html#operator.ge", "operator.getitem()": "library/operator.html#operator.getitem", "operator.gt()": "library/operator.html#operator.gt", "operator.iadd()": "library/operator.html#operator.iadd", "operator.iand()": "library/operator.html#operator.iand", "operator.iconcat()": "library/operator.html#operator.iconcat", "operator.ifloordiv()": "library/operator.html#operator.ifloordiv", "operator.ilshift()": "library/operator.html#operator.ilshift", "operator.imatmul()": "library/operator.html#operator.imatmul", "operator.imod()": "library/operator.html#operator.imod", "operator.imul()": "library/operator.html#operator.imul", "operator.index()": "library/operator.html#operator.index", "operator.indexOf()": "library/operator.html#operator.indexOf", "operator.inv()": "library/operator.html#operator.inv", "operator.invert()": "library/operator.html#operator.invert", "operator.ior()": "library/operator.html#operator.ior", "operator.ipow()": "library/operator.html#operator.ipow", "operator.irshift()": "library/operator.html#operator.irshift", "operator.is_()": "library/operator.html#operator.is_", "operator.is_not()": "library/operator.html#operator.is_not", "operator.isub()": "library/operator.html#operator.isub", "operator.itemgetter()": "library/operator.html#operator.itemgetter", "operator.itruediv()": "library/operator.html#operator.itruediv", "operator.ixor()": "library/operator.html#operator.ixor", "operator.le()": "library/operator.html#operator.le", "operator.length_hint()": "library/operator.html#operator.length_hint", "operator.lshift()": "library/operator.html#operator.lshift", "operator.lt()": "library/operator.html#operator.lt", "operator.matmul()": "library/operator.html#operator.matmul", "operator.methodcaller()": "library/operator.html#operator.methodcaller", "operator.mod()": "library/operator.html#operator.mod", "operator.mul()": "library/operator.html#operator.mul", "operator.ne()": "library/operator.html#operator.ne", "operator.neg()": "library/operator.html#operator.neg", "operator.not_()": "library/operator.html#operator.not_", "operator.or_()": "library/operator.html#operator.or_", "operator.pos()": "library/operator.html#operator.pos", "operator.pow()": "library/operator.html#operator.pow", "operator.rshift()": "library/operator.html#operator.rshift", "operator.setitem()": "library/operator.html#operator.setitem", "operator.sub()": "library/operator.html#operator.sub", "operator.truediv()": "library/operator.html#operator.truediv", "operator.truth()": "library/operator.html#operator.truth", "operator.xor()": "library/operator.html#operator.xor", "optimized scope": "glossary.html#term-optimized-scope", "ord()": "library/functions.html#ord", "Order of precedence of side_effect, return_value and wraps (unittest.mock)": "library/unittest.mock.html#order-of-precedence-of-side-effect-return-value-and-wraps", "OrderedDict objects (collections)": "library/collections.html#ordereddict-objects", "Organizing test code (unittest)": "library/unittest.html#organizing-test-code", "os": "library/os.html", "os._exit()": "library/os.html#os._exit", "os.abort()": "library/os.html#os.abort", "os.access()": "library/os.html#os.access", "os.add_dll_directory()": "library/os.html#os.add_dll_directory", "os.altsep": "library/os.html#os.altsep", "os.chdir()": "library/os.html#os.chdir", "os.chflags()": "library/os.html#os.chflags", "os.chmod()": "library/os.html#os.chmod", "os.chown()": "library/os.html#os.chown", "os.chroot()": "library/os.html#os.chroot", "os.CLD_CONTINUED": "library/os.html#os.CLD_CONTINUED", "os.CLD_DUMPED": "library/os.html#os.CLD_DUMPED", "os.CLD_EXITED": "library/os.html#os.CLD_EXITED", "os.CLD_KILLED": "library/os.html#os.CLD_KILLED", "os.CLD_STOPPED": "library/os.html#os.CLD_STOPPED", "os.CLD_TRAPPED": "library/os.html#os.CLD_TRAPPED", "os.CLONE_FILES": "library/os.html#os.CLONE_FILES", "os.CLONE_FS": "library/os.html#os.CLONE_FS", "os.CLONE_NEWCGROUP": "library/os.html#os.CLONE_NEWCGROUP", "os.CLONE_NEWIPC": "library/os.html#os.CLONE_NEWIPC", "os.CLONE_NEWNET": "library/os.html#os.CLONE_NEWNET", "os.CLONE_NEWNS": "library/os.html#os.CLONE_NEWNS", "os.CLONE_NEWPID": "library/os.html#os.CLONE_NEWPID", "os.CLONE_NEWTIME": "library/os.html#os.CLONE_NEWTIME", "os.CLONE_NEWUSER": "library/os.html#os.CLONE_NEWUSER", "os.CLONE_NEWUTS": "library/os.html#os.CLONE_NEWUTS", "os.CLONE_SIGHAND": "library/os.html#os.CLONE_SIGHAND", "os.CLONE_SYSVSEM": "library/os.html#os.CLONE_SYSVSEM", "os.CLONE_THREAD": "library/os.html#os.CLONE_THREAD", "os.CLONE_VM": "library/os.html#os.CLONE_VM", "os.close()": "library/os.html#os.close", "os.closerange()": "library/os.html#os.closerange", "os.confstr()": "library/os.html#os.confstr", "os.confstr_names": "library/os.html#os.confstr_names", "os.copy_file_range()": "library/os.html#os.copy_file_range", "os.cpu_count()": "library/os.html#os.cpu_count", "os.ctermid()": "library/os.html#os.ctermid", "os.curdir": "library/os.html#os.curdir", "os.defpath": "library/os.html#os.defpath", "os.device_encoding()": "library/os.html#os.device_encoding", "os.devnull": "library/os.html#os.devnull", "os.DirEntry": "library/os.html#os.DirEntry", "os.DirEntry.inode()": "library/os.html#os.DirEntry.inode", "os.DirEntry.is_dir()": "library/os.html#os.DirEntry.is_dir", "os.DirEntry.is_file()": "library/os.html#os.DirEntry.is_file", "os.DirEntry.is_junction()": "library/os.html#os.DirEntry.is_junction", "os.DirEntry.is_symlink()": "library/os.html#os.DirEntry.is_symlink", "os.DirEntry.name": "library/os.html#os.DirEntry.name", "os.DirEntry.path": "library/os.html#os.DirEntry.path", "os.DirEntry.stat()": "library/os.html#os.DirEntry.stat", "os.dup()": "library/os.html#os.dup", "os.dup2()": "library/os.html#os.dup2", "os.EFD_CLOEXEC": "library/os.html#os.EFD_CLOEXEC", "os.EFD_NONBLOCK": "library/os.html#os.EFD_NONBLOCK", "os.EFD_SEMAPHORE": "library/os.html#os.EFD_SEMAPHORE", "os.environ": "library/os.html#os.environ", "os.environb": "library/os.html#os.environb", "os.error": "library/os.html#os.error", "os.eventfd()": "library/os.html#os.eventfd", "os.eventfd_read()": "library/os.html#os.eventfd_read", "os.eventfd_write()": "library/os.html#os.eventfd_write", "os.EX_CANTCREAT": "library/os.html#os.EX_CANTCREAT", "os.EX_CONFIG": "library/os.html#os.EX_CONFIG", "os.EX_DATAERR": "library/os.html#os.EX_DATAERR", "os.EX_IOERR": "library/os.html#os.EX_IOERR", "os.EX_NOHOST": "library/os.html#os.EX_NOHOST", "os.EX_NOINPUT": "library/os.html#os.EX_NOINPUT", "os.EX_NOPERM": "library/os.html#os.EX_NOPERM", "os.EX_NOTFOUND": "library/os.html#os.EX_NOTFOUND", "os.EX_NOUSER": "library/os.html#os.EX_NOUSER", "os.EX_OK": "library/os.html#os.EX_OK", "os.EX_OSERR": "library/os.html#os.EX_OSERR", "os.EX_OSFILE": "library/os.html#os.EX_OSFILE", "os.EX_PROTOCOL": "library/os.html#os.EX_PROTOCOL", "os.EX_SOFTWARE": "library/os.html#os.EX_SOFTWARE", "os.EX_TEMPFAIL": "library/os.html#os.EX_TEMPFAIL", "os.EX_UNAVAILABLE": "library/os.html#os.EX_UNAVAILABLE", "os.EX_USAGE": "library/os.html#os.EX_USAGE", "os.execl()": "library/os.html#os.execl", "os.execle()": "library/os.html#os.execle", "os.execlp()": "library/os.html#os.execlp", "os.execlpe()": "library/os.html#os.execlpe", "os.execv()": "library/os.html#os.execv", "os.execve()": "library/os.html#os.execve", "os.execvp()": "library/os.html#os.execvp", "os.execvpe()": "library/os.html#os.execvpe", "os.extsep": "library/os.html#os.extsep", "os.F_LOCK": "library/os.html#os.F_LOCK", "os.F_OK": "library/os.html#os.F_OK", "os.F_TEST": "library/os.html#os.F_TEST", "os.F_TLOCK": "library/os.html#os.F_TLOCK", "os.F_ULOCK": "library/os.html#os.F_ULOCK", "os.fchdir()": "library/os.html#os.fchdir", "os.fchmod()": "library/os.html#os.fchmod", "os.fchown()": "library/os.html#os.fchown", "os.fdatasync()": "library/os.html#os.fdatasync", "os.fdopen()": "library/os.html#os.fdopen", "os.fork()": "library/os.html#os.fork", "os.forkpty()": "library/os.html#os.forkpty", "os.fpathconf()": "library/os.html#os.fpathconf", "os.fsdecode()": "library/os.html#os.fsdecode", "os.fsencode()": "library/os.html#os.fsencode", "os.fspath()": "library/os.html#os.fspath", "os.fstat()": "library/os.html#os.fstat", "os.fstatvfs()": "library/os.html#os.fstatvfs", "os.fsync()": "library/os.html#os.fsync", "os.ftruncate()": "library/os.html#os.ftruncate", "os.fwalk()": "library/os.html#os.fwalk", "os.get_blocking()": "library/os.html#os.get_blocking", "os.get_exec_path()": "library/os.html#os.get_exec_path", "os.get_handle_inheritable()": "library/os.html#os.get_handle_inheritable", "os.get_inheritable()": "library/os.html#os.get_inheritable", "os.get_terminal_size()": "library/os.html#os.get_terminal_size", "os.getcwd()": "library/os.html#os.getcwd", "os.getcwdb()": "library/os.html#os.getcwdb", "os.getegid()": "library/os.html#os.getegid", "os.getenv()": "library/os.html#os.getenv", "os.getenvb()": "library/os.html#os.getenvb", "os.geteuid()": "library/os.html#os.geteuid", "os.getgid()": "library/os.html#os.getgid", "os.getgrouplist()": "library/os.html#os.getgrouplist", "os.getgroups()": "library/os.html#os.getgroups", "os.getloadavg()": "library/os.html#os.getloadavg", "os.getlogin()": "library/os.html#os.getlogin", "os.getpgid()": "library/os.html#os.getpgid", "os.getpgrp()": "library/os.html#os.getpgrp", "os.getpid()": "library/os.html#os.getpid", "os.getppid()": "library/os.html#os.getppid", "os.getpriority()": "library/os.html#os.getpriority", "os.getrandom()": "library/os.html#os.getrandom", "os.getresgid()": "library/os.html#os.getresgid", "os.getresuid()": "library/os.html#os.getresuid", "os.getsid()": "library/os.html#os.getsid", "os.getuid()": "library/os.html#os.getuid", "os.getxattr()": "library/os.html#os.getxattr", "os.grantpt()": "library/os.html#os.grantpt", "os.GRND_NONBLOCK": "library/os.html#os.GRND_NONBLOCK", "os.GRND_RANDOM": "library/os.html#os.GRND_RANDOM", "os.initgroups()": "library/os.html#os.initgroups", "os.isatty()": "library/os.html#os.isatty", "os.kill()": "library/os.html#os.kill", "os.killpg()": "library/os.html#os.killpg", "os.lchflags()": "library/os.html#os.lchflags", "os.lchmod()": "library/os.html#os.lchmod", "os.lchown()": "library/os.html#os.lchown", "os.linesep": "library/os.html#os.linesep", "os.link()": "library/os.html#os.link", "os.listdir()": "library/os.html#os.listdir", "os.listdrives()": "library/os.html#os.listdrives", "os.listmounts()": "library/os.html#os.listmounts", "os.listvolumes()": "library/os.html#os.listvolumes", "os.listxattr()": "library/os.html#os.listxattr", "os.lockf()": "library/os.html#os.lockf", "os.login_tty()": "library/os.html#os.login_tty", "os.lseek()": "library/os.html#os.lseek", "os.lstat()": "library/os.html#os.lstat", "os.major()": "library/os.html#os.major", "os.makedev()": "library/os.html#os.makedev", "os.makedirs()": "library/os.html#os.makedirs", "os.memfd_create()": "library/os.html#os.memfd_create", "os.MFD_ALLOW_SEALING": "library/os.html#os.MFD_ALLOW_SEALING", "os.MFD_CLOEXEC": "library/os.html#os.MFD_CLOEXEC", "os.MFD_HUGE_16GB": "library/os.html#os.MFD_HUGE_16GB", "os.MFD_HUGE_16MB": "library/os.html#os.MFD_HUGE_16MB", "os.MFD_HUGE_1GB": "library/os.html#os.MFD_HUGE_1GB", "os.MFD_HUGE_1MB": "library/os.html#os.MFD_HUGE_1MB", "os.MFD_HUGE_256MB": "library/os.html#os.MFD_HUGE_256MB", "os.MFD_HUGE_2GB": "library/os.html#os.MFD_HUGE_2GB", "os.MFD_HUGE_2MB": "library/os.html#os.MFD_HUGE_2MB", "os.MFD_HUGE_32MB": "library/os.html#os.MFD_HUGE_32MB", "os.MFD_HUGE_512KB": "library/os.html#os.MFD_HUGE_512KB", "os.MFD_HUGE_512MB": "library/os.html#os.MFD_HUGE_512MB", "os.MFD_HUGE_64KB": "library/os.html#os.MFD_HUGE_64KB", "os.MFD_HUGE_8MB": "library/os.html#os.MFD_HUGE_8MB", "os.MFD_HUGE_MASK": "library/os.html#os.MFD_HUGE_MASK", "os.MFD_HUGE_SHIFT": "library/os.html#os.MFD_HUGE_SHIFT", "os.MFD_HUGETLB": "library/os.html#os.MFD_HUGETLB", "os.minor()": "library/os.html#os.minor", "os.mkdir()": "library/os.html#os.mkdir", "os.mkfifo()": "library/os.html#os.mkfifo", "os.mknod()": "library/os.html#os.mknod", "os.name": "library/os.html#os.name", "os.nice()": "library/os.html#os.nice", "os.O_APPEND": "library/os.html#os.O_APPEND", "os.O_ASYNC": "library/os.html#os.O_ASYNC", "os.O_BINARY": "library/os.html#os.O_BINARY", "os.O_CLOEXEC": "library/os.html#os.O_CLOEXEC", "os.O_CREAT": "library/os.html#os.O_CREAT", "os.O_DIRECT": "library/os.html#os.O_DIRECT", "os.O_DIRECTORY": "library/os.html#os.O_DIRECTORY", "os.O_DSYNC": "library/os.html#os.O_DSYNC", "os.O_EVTONLY": "library/os.html#os.O_EVTONLY", "os.O_EXCL": "library/os.html#os.O_EXCL", "os.O_EXLOCK": "library/os.html#os.O_EXLOCK", "os.O_FSYNC": "library/os.html#os.O_FSYNC", "os.O_NDELAY": "library/os.html#os.O_NDELAY", "os.O_NOATIME": "library/os.html#os.O_NOATIME", "os.O_NOCTTY": "library/os.html#os.O_NOCTTY", "os.O_NOFOLLOW": "library/os.html#os.O_NOFOLLOW", "os.O_NOFOLLOW_ANY": "library/os.html#os.O_NOFOLLOW_ANY", "os.O_NOINHERIT": "library/os.html#os.O_NOINHERIT", "os.O_NONBLOCK": "library/os.html#os.O_NONBLOCK", "os.O_PATH": "library/os.html#os.O_PATH", "os.O_RANDOM": "library/os.html#os.O_RANDOM", "os.O_RDONLY": "library/os.html#os.O_RDONLY", "os.O_RDWR": "library/os.html#os.O_RDWR", "os.O_RSYNC": "library/os.html#os.O_RSYNC", "os.O_SEQUENTIAL": "library/os.html#os.O_SEQUENTIAL", "os.O_SHLOCK": "library/os.html#os.O_SHLOCK", "os.O_SHORT_LIVED": "library/os.html#os.O_SHORT_LIVED", "os.O_SYMLINK": "library/os.html#os.O_SYMLINK", "os.O_SYNC": "library/os.html#os.O_SYNC", "os.O_TEMPORARY": "library/os.html#os.O_TEMPORARY", "os.O_TEXT": "library/os.html#os.O_TEXT", "os.O_TMPFILE": "library/os.html#os.O_TMPFILE", "os.O_TRUNC": "library/os.html#os.O_TRUNC", "os.O_WRONLY": "library/os.html#os.O_WRONLY", "os.open()": "library/os.html#os.open", "os.openpty()": "library/os.html#os.openpty", "os.P_ALL": "library/os.html#os.P_ALL", "os.P_DETACH": "library/os.html#os.P_DETACH", "os.P_NOWAIT": "library/os.html#os.P_NOWAIT", "os.P_NOWAITO": "library/os.html#os.P_NOWAITO", "os.P_OVERLAY": "library/os.html#os.P_OVERLAY", "os.P_PGID": "library/os.html#os.P_PGID", "os.P_PID": "library/os.html#os.P_PID", "os.P_PIDFD": "library/os.html#os.P_PIDFD", "os.P_WAIT": "library/os.html#os.P_WAIT", "os.pardir": "library/os.html#os.pardir", "os.path": "library/os.path.html", "os.path.abspath()": "library/os.path.html#os.path.abspath", "os.path.basename()": "library/os.path.html#os.path.basename", "os.path.commonpath()": "library/os.path.html#os.path.commonpath", "os.path.commonprefix()": "library/os.path.html#os.path.commonprefix", "os.path.dirname()": "library/os.path.html#os.path.dirname", "os.path.exists()": "library/os.path.html#os.path.exists", "os.path.expanduser()": "library/os.path.html#os.path.expanduser", "os.path.expandvars()": "library/os.path.html#os.path.expandvars", "os.path.getatime()": "library/os.path.html#os.path.getatime", "os.path.getctime()": "library/os.path.html#os.path.getctime", "os.path.getmtime()": "library/os.path.html#os.path.getmtime", "os.path.getsize()": "library/os.path.html#os.path.getsize", "os.path.isabs()": "library/os.path.html#os.path.isabs", "os.path.isdevdrive()": "library/os.path.html#os.path.isdevdrive", "os.path.isdir()": "library/os.path.html#os.path.isdir", "os.path.isfile()": "library/os.path.html#os.path.isfile", "os.path.isjunction()": "library/os.path.html#os.path.isjunction", "os.path.islink()": "library/os.path.html#os.path.islink", "os.path.ismount()": "library/os.path.html#os.path.ismount", "os.path.isreserved()": "library/os.path.html#os.path.isreserved", "os.path.join()": "library/os.path.html#os.path.join", "os.path.lexists()": "library/os.path.html#os.path.lexists", "os.path.normcase()": "library/os.path.html#os.path.normcase", "os.path.normpath()": "library/os.path.html#os.path.normpath", "os.path.realpath()": "library/os.path.html#os.path.realpath", "os.path.relpath()": "library/os.path.html#os.path.relpath", "os.path.samefile()": "library/os.path.html#os.path.samefile", "os.path.sameopenfile()": "library/os.path.html#os.path.sameopenfile", "os.path.samestat()": "library/os.path.html#os.path.samestat", "os.path.split()": "library/os.path.html#os.path.split", "os.path.splitdrive()": "library/os.path.html#os.path.splitdrive", "os.path.splitext()": "library/os.path.html#os.path.splitext", "os.path.splitroot()": "library/os.path.html#os.path.splitroot", "os.path.supports_unicode_filenames": "library/os.path.html#os.path.supports_unicode_filenames", "os.pathconf()": "library/os.html#os.pathconf", "os.pathconf_names": "library/os.html#os.pathconf_names", "os.PathLike": "library/os.html#os.PathLike", "os.PathLike.__fspath__()": "library/os.html#os.PathLike.__fspath__", "os.pathsep": "library/os.html#os.pathsep", "os.PIDFD_NONBLOCK": "library/os.html#os.PIDFD_NONBLOCK", "os.pidfd_open()": "library/os.html#os.pidfd_open", "os.pipe()": "library/os.html#os.pipe", "os.pipe2()": "library/os.html#os.pipe2", "os.plock()": "library/os.html#os.plock", "os.popen()": "library/os.html#os.popen", "os.POSIX_FADV_DONTNEED": "library/os.html#os.POSIX_FADV_DONTNEED", "os.POSIX_FADV_NOREUSE": "library/os.html#os.POSIX_FADV_NOREUSE", "os.POSIX_FADV_NORMAL": "library/os.html#os.POSIX_FADV_NORMAL", "os.POSIX_FADV_RANDOM": "library/os.html#os.POSIX_FADV_RANDOM", "os.POSIX_FADV_SEQUENTIAL": "library/os.html#os.POSIX_FADV_SEQUENTIAL", "os.POSIX_FADV_WILLNEED": "library/os.html#os.POSIX_FADV_WILLNEED", "os.posix_fadvise()": "library/os.html#os.posix_fadvise", "os.posix_fallocate()": "library/os.html#os.posix_fallocate", "os.posix_openpt()": "library/os.html#os.posix_openpt", "os.posix_spawn()": "library/os.html#os.posix_spawn", "os.POSIX_SPAWN_CLOSE": "library/os.html#os.POSIX_SPAWN_CLOSE", "os.POSIX_SPAWN_CLOSEFROM": "library/os.html#os.POSIX_SPAWN_CLOSEFROM", "os.POSIX_SPAWN_DUP2": "library/os.html#os.POSIX_SPAWN_DUP2", "os.POSIX_SPAWN_OPEN": "library/os.html#os.POSIX_SPAWN_OPEN", "os.posix_spawnp()": "library/os.html#os.posix_spawnp", "os.pread()": "library/os.html#os.pread", "os.preadv()": "library/os.html#os.preadv", "os.PRIO_DARWIN_BG": "library/os.html#os.PRIO_DARWIN_BG", "os.PRIO_DARWIN_NONUI": "library/os.html#os.PRIO_DARWIN_NONUI", "os.PRIO_DARWIN_PROCESS": "library/os.html#os.PRIO_DARWIN_PROCESS", "os.PRIO_DARWIN_THREAD": "library/os.html#os.PRIO_DARWIN_THREAD", "os.PRIO_PGRP": "library/os.html#os.PRIO_PGRP", "os.PRIO_PROCESS": "library/os.html#os.PRIO_PROCESS", "os.PRIO_USER": "library/os.html#os.PRIO_USER", "os.process_cpu_count()": "library/os.html#os.process_cpu_count", "os.ptsname()": "library/os.html#os.ptsname", "os.putenv()": "library/os.html#os.putenv", "os.pwrite()": "library/os.html#os.pwrite", "os.pwritev()": "library/os.html#os.pwritev", "os.R_OK": "library/os.html#os.R_OK", "os.read()": "library/os.html#os.read", "os.readlink()": "library/os.html#os.readlink", "os.readv()": "library/os.html#os.readv", "os.register_at_fork()": "library/os.html#os.register_at_fork", "os.remove()": "library/os.html#os.remove", "os.removedirs()": "library/os.html#os.removedirs", "os.removexattr()": "library/os.html#os.removexattr", "os.rename()": "library/os.html#os.rename", "os.renames()": "library/os.html#os.renames", "os.replace()": "library/os.html#os.replace", "os.rmdir()": "library/os.html#os.rmdir", "os.RTLD_DEEPBIND": "library/os.html#os.RTLD_DEEPBIND", "os.RTLD_GLOBAL": "library/os.html#os.RTLD_GLOBAL", "os.RTLD_LAZY": "library/os.html#os.RTLD_LAZY", "os.RTLD_LOCAL": "library/os.html#os.RTLD_LOCAL", "os.RTLD_NODELETE": "library/os.html#os.RTLD_NODELETE", "os.RTLD_NOLOAD": "library/os.html#os.RTLD_NOLOAD", "os.RTLD_NOW": "library/os.html#os.RTLD_NOW", "os.RWF_APPEND": "library/os.html#os.RWF_APPEND", "os.RWF_DSYNC": "library/os.html#os.RWF_DSYNC", "os.RWF_HIPRI": "library/os.html#os.RWF_HIPRI", "os.RWF_NOWAIT": "library/os.html#os.RWF_NOWAIT", "os.RWF_SYNC": "library/os.html#os.RWF_SYNC", "os.scandir()": "library/os.html#os.scandir", "os.scandir.close()": "library/os.html#os.scandir.close", "os.SCHED_BATCH": "library/os.html#os.SCHED_BATCH", "os.SCHED_FIFO": "library/os.html#os.SCHED_FIFO", "os.sched_get_priority_max()": "library/os.html#os.sched_get_priority_max", "os.sched_get_priority_min()": "library/os.html#os.sched_get_priority_min", "os.sched_getaffinity()": "library/os.html#os.sched_getaffinity", "os.sched_getparam()": "library/os.html#os.sched_getparam", "os.sched_getscheduler()": "library/os.html#os.sched_getscheduler", "os.SCHED_IDLE": "library/os.html#os.SCHED_IDLE", "os.SCHED_OTHER": "library/os.html#os.SCHED_OTHER", "os.sched_param": "library/os.html#os.sched_param", "os.sched_param.sched_priority": "library/os.html#os.sched_param.sched_priority", "os.SCHED_RESET_ON_FORK": "library/os.html#os.SCHED_RESET_ON_FORK", "os.SCHED_RR": "library/os.html#os.SCHED_RR", "os.sched_rr_get_interval()": "library/os.html#os.sched_rr_get_interval", "os.sched_setaffinity()": "library/os.html#os.sched_setaffinity", "os.sched_setparam()": "library/os.html#os.sched_setparam", "os.sched_setscheduler()": "library/os.html#os.sched_setscheduler", "os.SCHED_SPORADIC": "library/os.html#os.SCHED_SPORADIC", "os.sched_yield()": "library/os.html#os.sched_yield", "os.SEEK_CUR": "library/os.html#os.SEEK_CUR", "os.SEEK_DATA": "library/os.html#os.SEEK_DATA", "os.SEEK_END": "library/os.html#os.SEEK_END", "os.SEEK_HOLE": "library/os.html#os.SEEK_HOLE", "os.SEEK_SET": "library/os.html#os.SEEK_SET", "os.sendfile()": "library/os.html#os.sendfile", "os.sep": "library/os.html#os.sep", "os.set_blocking()": "library/os.html#os.set_blocking", "os.set_handle_inheritable()": "library/os.html#os.set_handle_inheritable", "os.set_inheritable()": "library/os.html#os.set_inheritable", "os.setegid()": "library/os.html#os.setegid", "os.seteuid()": "library/os.html#os.seteuid", "os.setgid()": "library/os.html#os.setgid", "os.setgroups()": "library/os.html#os.setgroups", "os.setns()": "library/os.html#os.setns", "os.setpgid()": "library/os.html#os.setpgid", "os.setpgrp()": "library/os.html#os.setpgrp", "os.setpriority()": "library/os.html#os.setpriority", "os.setregid()": "library/os.html#os.setregid", "os.setresgid()": "library/os.html#os.setresgid", "os.setresuid()": "library/os.html#os.setresuid", "os.setreuid()": "library/os.html#os.setreuid", "os.setsid()": "library/os.html#os.setsid", "os.setuid()": "library/os.html#os.setuid", "os.setxattr()": "library/os.html#os.setxattr", "os.SF_MNOWAIT": "library/os.html#os.SF_MNOWAIT", "os.SF_NOCACHE": "library/os.html#os.SF_NOCACHE", "os.SF_NODISKIO": "library/os.html#os.SF_NODISKIO", "os.SF_SYNC": "library/os.html#os.SF_SYNC", "os.spawnl()": "library/os.html#os.spawnl", "os.spawnle()": "library/os.html#os.spawnle", "os.spawnlp()": "library/os.html#os.spawnlp", "os.spawnlpe()": "library/os.html#os.spawnlpe", "os.spawnv()": "library/os.html#os.spawnv", "os.spawnve()": "library/os.html#os.spawnve", "os.spawnvp()": "library/os.html#os.spawnvp", "os.spawnvpe()": "library/os.html#os.spawnvpe", "os.splice()": "library/os.html#os.splice", "os.SPLICE_F_MORE": "library/os.html#os.SPLICE_F_MORE", "os.SPLICE_F_MOVE": "library/os.html#os.SPLICE_F_MOVE", "os.SPLICE_F_NONBLOCK": "library/os.html#os.SPLICE_F_NONBLOCK", "os.startfile()": "library/os.html#os.startfile", "os.stat()": "library/os.html#os.stat", "os.stat_result": "library/os.html#os.stat_result", "os.stat_result.st_atime": "library/os.html#os.stat_result.st_atime", "os.stat_result.st_atime_ns": "library/os.html#os.stat_result.st_atime_ns", "os.stat_result.st_birthtime": "library/os.html#os.stat_result.st_birthtime", "os.stat_result.st_birthtime_ns": "library/os.html#os.stat_result.st_birthtime_ns", "os.stat_result.st_blksize": "library/os.html#os.stat_result.st_blksize", "os.stat_result.st_blocks": "library/os.html#os.stat_result.st_blocks", "os.stat_result.st_creator": "library/os.html#os.stat_result.st_creator", "os.stat_result.st_ctime": "library/os.html#os.stat_result.st_ctime", "os.stat_result.st_ctime_ns": "library/os.html#os.stat_result.st_ctime_ns", "os.stat_result.st_dev": "library/os.html#os.stat_result.st_dev", "os.stat_result.st_file_attributes": "library/os.html#os.stat_result.st_file_attributes", "os.stat_result.st_flags": "library/os.html#os.stat_result.st_flags", "os.stat_result.st_fstype": "library/os.html#os.stat_result.st_fstype", "os.stat_result.st_gen": "library/os.html#os.stat_result.st_gen", "os.stat_result.st_gid": "library/os.html#os.stat_result.st_gid", "os.stat_result.st_ino": "library/os.html#os.stat_result.st_ino", "os.stat_result.st_mode": "library/os.html#os.stat_result.st_mode", "os.stat_result.st_mtime": "library/os.html#os.stat_result.st_mtime", "os.stat_result.st_mtime_ns": "library/os.html#os.stat_result.st_mtime_ns", "os.stat_result.st_nlink": "library/os.html#os.stat_result.st_nlink", "os.stat_result.st_rdev": "library/os.html#os.stat_result.st_rdev", "os.stat_result.st_reparse_tag": "library/os.html#os.stat_result.st_reparse_tag", "os.stat_result.st_rsize": "library/os.html#os.stat_result.st_rsize", "os.stat_result.st_size": "library/os.html#os.stat_result.st_size", "os.stat_result.st_type": "library/os.html#os.stat_result.st_type", "os.stat_result.st_uid": "library/os.html#os.stat_result.st_uid", "os.statvfs()": "library/os.html#os.statvfs", "os.strerror()": "library/os.html#os.strerror", "os.supports_bytes_environ": "library/os.html#os.supports_bytes_environ", "os.supports_dir_fd": "library/os.html#os.supports_dir_fd", "os.supports_effective_ids": "library/os.html#os.supports_effective_ids", "os.supports_fd": "library/os.html#os.supports_fd", "os.supports_follow_symlinks": "library/os.html#os.supports_follow_symlinks", "os.symlink()": "library/os.html#os.symlink", "os.sync()": "library/os.html#os.sync", "os.sysconf()": "library/os.html#os.sysconf", "os.sysconf_names": "library/os.html#os.sysconf_names", "os.system()": "library/os.html#os.system", "os.tcgetpgrp()": "library/os.html#os.tcgetpgrp", "os.tcsetpgrp()": "library/os.html#os.tcsetpgrp", "os.terminal_size": "library/os.html#os.terminal_size", "os.terminal_size.columns": "library/os.html#os.terminal_size.columns", "os.terminal_size.lines": "library/os.html#os.terminal_size.lines", "os.TFD_CLOEXEC": "library/os.html#os.TFD_CLOEXEC", "os.TFD_NONBLOCK": "library/os.html#os.TFD_NONBLOCK", "os.TFD_TIMER_ABSTIME": "library/os.html#os.TFD_TIMER_ABSTIME", "os.TFD_TIMER_CANCEL_ON_SET": "library/os.html#os.TFD_TIMER_CANCEL_ON_SET", "os.timerfd_create()": "library/os.html#os.timerfd_create", "os.timerfd_gettime()": "library/os.html#os.timerfd_gettime", "os.timerfd_gettime_ns()": "library/os.html#os.timerfd_gettime_ns", "os.timerfd_settime()": "library/os.html#os.timerfd_settime", "os.timerfd_settime_ns()": "library/os.html#os.timerfd_settime_ns", "os.times()": "library/os.html#os.times", "os.truncate()": "library/os.html#os.truncate", "os.ttyname()": "library/os.html#os.ttyname", "os.umask()": "library/os.html#os.umask", "os.uname()": "library/os.html#os.uname", "os.unlink()": "library/os.html#os.unlink", "os.unlockpt()": "library/os.html#os.unlockpt", "os.unsetenv()": "library/os.html#os.unsetenv", "os.unshare()": "library/os.html#os.unshare", "os.urandom()": "library/os.html#os.urandom", "os.utime()": "library/os.html#os.utime", "os.W_OK": "library/os.html#os.W_OK", "os.wait()": "library/os.html#os.wait", "os.wait3()": "library/os.html#os.wait3", "os.wait4()": "library/os.html#os.wait4", "os.waitid()": "library/os.html#os.waitid", "os.waitpid()": "library/os.html#os.waitpid", "os.waitstatus_to_exitcode()": "library/os.html#os.waitstatus_to_exitcode", "os.walk()": "library/os.html#os.walk", "os.WCONTINUED": "library/os.html#os.WCONTINUED", "os.WCOREDUMP()": "library/os.html#os.WCOREDUMP", "os.WEXITED": "library/os.html#os.WEXITED", "os.WEXITSTATUS()": "library/os.html#os.WEXITSTATUS", "os.WIFCONTINUED()": "library/os.html#os.WIFCONTINUED", "os.WIFEXITED()": "library/os.html#os.WIFEXITED", "os.WIFSIGNALED()": "library/os.html#os.WIFSIGNALED", "os.WIFSTOPPED()": "library/os.html#os.WIFSTOPPED", "os.WNOHANG": "library/os.html#os.WNOHANG", "os.WNOWAIT": "library/os.html#os.WNOWAIT", "os.write()": "library/os.html#os.write", "os.writev()": "library/os.html#os.writev", "os.WSTOPPED": "library/os.html#os.WSTOPPED", "os.WSTOPSIG()": "library/os.html#os.WSTOPSIG", "os.WTERMSIG()": "library/os.html#os.WTERMSIG", "os.WUNTRACED": "library/os.html#os.WUNTRACED", "os.X_OK": "library/os.html#os.X_OK", "os.XATTR_CREATE": "library/os.html#os.XATTR_CREATE", "os.XATTR_REPLACE": "library/os.html#os.XATTR_REPLACE", "os.XATTR_SIZE_MAX": "library/os.html#os.XATTR_SIZE_MAX", "OSError": "library/exceptions.html#OSError", "OSError.errno": "library/exceptions.html#OSError.errno", "OSError.filename": "library/exceptions.html#OSError.filename", "OSError.filename2": "library/exceptions.html#OSError.filename2", "OSError.strerror": "library/exceptions.html#OSError.strerror", "OSError.winerror": "library/exceptions.html#OSError.winerror", "Other Built-in Types (Types)": "library/stdtypes.html#other-built-in-types", "Other Functions (msvcrt)": "library/msvcrt.html#other-functions", "Other functions (secrets)": "library/secrets.html#other-functions", "Other functions (sysconfig)": "library/sysconfig.html#other-functions", "Other Module Level Functions (ipaddress)": "library/ipaddress.html#other-module-level-functions", "Other utilities (argparse)": "library/argparse.html#other-utilities", "Out-of-band Buffers (pickle)": "library/pickle.html#out-of-band-buffers", "OverflowError": "library/exceptions.html#OverflowError", "Overview (importlib.metadata)": "library/importlib.metadata.html#overview", "Overview (io)": "library/io.html#overview", "package": "glossary.html#term-package", "package__": "reference/import.html#package__", "Panel Objects (curses.panel)": "library/curses.panel.html#panel-objects", "parameter": "glossary.html#term-parameter", "Parser API (email.parser: Parsing email messages)": "library/email.parser.html#parser-api", "Parsing arguments and building values": "c-api/arg.html", "Parsing ASCII Encoded Bytes (urllib.parse)": "library/urllib.parse.html#parsing-ascii-encoded-bytes", "Parsing Rules (shlex)": "library/shlex.html#parsing-rules", "partial Objects (functools)": "library/functools.html#partial-objects", "pass (statement)": "reference/simple_stmts.html#index-20", "path based finder": "glossary.html#term-path-based-finder", "path entry": "glossary.html#term-path-entry", "path entry finder": "glossary.html#term-path-entry-finder", "path entry hook": "glossary.html#term-path-entry-hook", "Path Objects (zipfile)": "library/zipfile.html#path-objects", "path-like object": "glossary.html#term-path-like-object", "path__": "reference/import.html#path__", "pathlib": "library/pathlib.html", "pathlib.Path": "library/pathlib.html#pathlib.Path", "pathlib.Path.absolute()": "library/pathlib.html#pathlib.Path.absolute", "pathlib.Path.as_uri()": "library/pathlib.html#pathlib.Path.as_uri", "pathlib.Path.chmod()": "library/pathlib.html#pathlib.Path.chmod", "pathlib.Path.cwd()": "library/pathlib.html#pathlib.Path.cwd", "pathlib.Path.exists()": "library/pathlib.html#pathlib.Path.exists", "pathlib.Path.expanduser()": "library/pathlib.html#pathlib.Path.expanduser", "pathlib.Path.from_uri()": "library/pathlib.html#pathlib.Path.from_uri", "pathlib.Path.glob()": "library/pathlib.html#pathlib.Path.glob", "pathlib.Path.group()": "library/pathlib.html#pathlib.Path.group", "pathlib.Path.hardlink_to()": "library/pathlib.html#pathlib.Path.hardlink_to", "pathlib.Path.home()": "library/pathlib.html#pathlib.Path.home", "pathlib.Path.is_block_device()": "library/pathlib.html#pathlib.Path.is_block_device", "pathlib.Path.is_char_device()": "library/pathlib.html#pathlib.Path.is_char_device", "pathlib.Path.is_dir()": "library/pathlib.html#pathlib.Path.is_dir", "pathlib.Path.is_fifo()": "library/pathlib.html#pathlib.Path.is_fifo", "pathlib.Path.is_file()": "library/pathlib.html#pathlib.Path.is_file", "pathlib.Path.is_junction()": "library/pathlib.html#pathlib.Path.is_junction", "pathlib.Path.is_mount()": "library/pathlib.html#pathlib.Path.is_mount", "pathlib.Path.is_socket()": "library/pathlib.html#pathlib.Path.is_socket", "pathlib.Path.is_symlink()": "library/pathlib.html#pathlib.Path.is_symlink", "pathlib.Path.iterdir()": "library/pathlib.html#pathlib.Path.iterdir", "pathlib.Path.lchmod()": "library/pathlib.html#pathlib.Path.lchmod", "pathlib.Path.lstat()": "library/pathlib.html#pathlib.Path.lstat", "pathlib.Path.mkdir()": "library/pathlib.html#pathlib.Path.mkdir", "pathlib.Path.open()": "library/pathlib.html#pathlib.Path.open", "pathlib.Path.owner()": "library/pathlib.html#pathlib.Path.owner", "pathlib.Path.read_bytes()": "library/pathlib.html#pathlib.Path.read_bytes", "pathlib.Path.read_text()": "library/pathlib.html#pathlib.Path.read_text", "pathlib.Path.readlink()": "library/pathlib.html#pathlib.Path.readlink", "pathlib.Path.rename()": "library/pathlib.html#pathlib.Path.rename", "pathlib.Path.replace()": "library/pathlib.html#pathlib.Path.replace", "pathlib.Path.resolve()": "library/pathlib.html#pathlib.Path.resolve", "pathlib.Path.rglob()": "library/pathlib.html#pathlib.Path.rglob", "pathlib.Path.rmdir()": "library/pathlib.html#pathlib.Path.rmdir", "pathlib.Path.samefile()": "library/pathlib.html#pathlib.Path.samefile", "pathlib.Path.stat()": "library/pathlib.html#pathlib.Path.stat", "pathlib.Path.symlink_to()": "library/pathlib.html#pathlib.Path.symlink_to", "pathlib.Path.touch()": "library/pathlib.html#pathlib.Path.touch", "pathlib.Path.unlink()": "library/pathlib.html#pathlib.Path.unlink", "pathlib.Path.walk()": "library/pathlib.html#pathlib.Path.walk", "pathlib.Path.write_bytes()": "library/pathlib.html#pathlib.Path.write_bytes", "pathlib.Path.write_text()": "library/pathlib.html#pathlib.Path.write_text", "pathlib.PosixPath": "library/pathlib.html#pathlib.PosixPath", "pathlib.PurePath": "library/pathlib.html#pathlib.PurePath", "pathlib.PurePath.anchor": "library/pathlib.html#pathlib.PurePath.anchor", "pathlib.PurePath.as_posix()": "library/pathlib.html#pathlib.PurePath.as_posix", "pathlib.PurePath.drive": "library/pathlib.html#pathlib.PurePath.drive", "pathlib.PurePath.full_match()": "library/pathlib.html#pathlib.PurePath.full_match", "pathlib.PurePath.is_absolute()": "library/pathlib.html#pathlib.PurePath.is_absolute", "pathlib.PurePath.is_relative_to()": "library/pathlib.html#pathlib.PurePath.is_relative_to", "pathlib.PurePath.is_reserved()": "library/pathlib.html#pathlib.PurePath.is_reserved", "pathlib.PurePath.joinpath()": "library/pathlib.html#pathlib.PurePath.joinpath", "pathlib.PurePath.match()": "library/pathlib.html#pathlib.PurePath.match", "pathlib.PurePath.name": "library/pathlib.html#pathlib.PurePath.name", "pathlib.PurePath.parent": "library/pathlib.html#pathlib.PurePath.parent", "pathlib.PurePath.parents": "library/pathlib.html#pathlib.PurePath.parents", "pathlib.PurePath.parser": "library/pathlib.html#pathlib.PurePath.parser", "pathlib.PurePath.parts": "library/pathlib.html#pathlib.PurePath.parts", "pathlib.PurePath.relative_to()": "library/pathlib.html#pathlib.PurePath.relative_to", "pathlib.PurePath.root": "library/pathlib.html#pathlib.PurePath.root", "pathlib.PurePath.stem": "library/pathlib.html#pathlib.PurePath.stem", "pathlib.PurePath.suffix": "library/pathlib.html#pathlib.PurePath.suffix", "pathlib.PurePath.suffixes": "library/pathlib.html#pathlib.PurePath.suffixes", "pathlib.PurePath.with_name()": "library/pathlib.html#pathlib.PurePath.with_name", "pathlib.PurePath.with_segments()": "library/pathlib.html#pathlib.PurePath.with_segments", "pathlib.PurePath.with_stem()": "library/pathlib.html#pathlib.PurePath.with_stem", "pathlib.PurePath.with_suffix()": "library/pathlib.html#pathlib.PurePath.with_suffix", "pathlib.PurePosixPath": "library/pathlib.html#pathlib.PurePosixPath", "pathlib.PureWindowsPath": "library/pathlib.html#pathlib.PureWindowsPath", "pathlib.UnsupportedOperation": "library/pathlib.html#pathlib.UnsupportedOperation", "pathlib.WindowsPath": "library/pathlib.html#pathlib.WindowsPath", "Pattern language (pathlib)": "library/pathlib.html#pattern-language", "pdb": "library/pdb.html", "pdb.Pdb": "library/pdb.html#pdb.Pdb", "pdb.Pdb.run()": "library/pdb.html#pdb.Pdb.run", "pdb.Pdb.runcall()": "library/pdb.html#pdb.Pdb.runcall", "pdb.Pdb.runeval()": "library/pdb.html#pdb.Pdb.runeval", "pdb.Pdb.set_trace()": "library/pdb.html#pdb.Pdb.set_trace", "pdb.pm()": "library/pdb.html#pdb.pm", "pdb.post_mortem()": "library/pdb.html#pdb.post_mortem", "pdb.run()": "library/pdb.html#pdb.run", "pdb.runcall()": "library/pdb.html#pdb.runcall", "pdb.runeval()": "library/pdb.html#pdb.runeval", "pdb.set_trace()": "library/pdb.html#pdb.set_trace", "Pending Removal in Python 3.13": "deprecations/pending-removal-in-3.13.html", "Pending Removal in Python 3.14": "deprecations/pending-removal-in-3.14.html", "Pending Removal in Python 3.15": "deprecations/c-api-pending-removal-in-3.15.html", "PendingDeprecationWarning": "library/exceptions.html#PendingDeprecationWarning", "PEP": "glossary.html#term-PEP", "Performance (io)": "library/io.html#performance", "Performance (pickle)": "library/pickle.html#performance", "Performance Notes (bisect)": "library/bisect.html#performance-notes", "PermissionError": "library/exceptions.html#PermissionError", "pickle": "library/pickle.html", "pickle.DEFAULT_PROTOCOL": "library/pickle.html#pickle.DEFAULT_PROTOCOL", "pickle.dump()": "library/pickle.html#pickle.dump", "pickle.dumps()": "library/pickle.html#pickle.dumps", "pickle.HIGHEST_PROTOCOL": "library/pickle.html#pickle.HIGHEST_PROTOCOL", "pickle.load()": "library/pickle.html#pickle.load", "pickle.loads()": "library/pickle.html#pickle.loads", "pickle.PickleBuffer": "library/pickle.html#pickle.PickleBuffer", "pickle.PickleBuffer.raw()": "library/pickle.html#pickle.PickleBuffer.raw", "pickle.PickleBuffer.release()": "library/pickle.html#pickle.PickleBuffer.release", "pickle.PickleError": "library/pickle.html#pickle.PickleError", "pickle.Pickler": "library/pickle.html#pickle.Pickler", "pickle.Pickler.dispatch_table": "library/pickle.html#pickle.Pickler.dispatch_table", "pickle.Pickler.dump()": "library/pickle.html#pickle.Pickler.dump", "pickle.Pickler.fast": "library/pickle.html#pickle.Pickler.fast", "pickle.Pickler.persistent_id()": "library/pickle.html#pickle.Pickler.persistent_id", "pickle.Pickler.reducer_override()": "library/pickle.html#pickle.Pickler.reducer_override", "pickle.PicklingError": "library/pickle.html#pickle.PicklingError", "pickle.Unpickler": "library/pickle.html#pickle.Unpickler", "pickle.Unpickler.find_class()": "library/pickle.html#pickle.Unpickler.find_class", "pickle.Unpickler.load()": "library/pickle.html#pickle.Unpickler.load", "pickle.Unpickler.persistent_load()": "library/pickle.html#pickle.Unpickler.persistent_load", "pickle.UnpicklingError": "library/pickle.html#pickle.UnpicklingError", "pickletools": "library/pickletools.html", "pickletools.dis()": "library/pickletools.html#pickletools.dis", "pickletools.genops()": "library/pickletools.html#pickletools.genops", "pickletools.optimize()": "library/pickletools.html#pickletools.optimize", "Pickling Class Instances (pickle)": "library/pickle.html#pickling-class-instances", "pkgutil": "library/pkgutil.html", "pkgutil.extend_path()": "library/pkgutil.html#pkgutil.extend_path", "pkgutil.find_loader()": "library/pkgutil.html#pkgutil.find_loader", "pkgutil.get_data()": "library/pkgutil.html#pkgutil.get_data", "pkgutil.get_importer()": "library/pkgutil.html#pkgutil.get_importer", "pkgutil.get_loader()": "library/pkgutil.html#pkgutil.get_loader", "pkgutil.iter_importers()": "library/pkgutil.html#pkgutil.iter_importers", "pkgutil.iter_modules()": "library/pkgutil.html#pkgutil.iter_modules", "pkgutil.ModuleInfo": "library/pkgutil.html#pkgutil.ModuleInfo", "pkgutil.resolve_name()": "library/pkgutil.html#pkgutil.resolve_name", "pkgutil.walk_packages()": "library/pkgutil.html#pkgutil.walk_packages", "platform": "library/platform.html", "Platform Support": "library/asyncio-platforms.html", "platform.android_ver()": "library/platform.html#platform.android_ver", "platform.architecture()": "library/platform.html#platform.architecture", "platform.freedesktop_os_release()": "library/platform.html#platform.freedesktop_os_release", "platform.ios_ver()": "library/platform.html#platform.ios_ver", "platform.java_ver()": "library/platform.html#platform.java_ver", "platform.libc_ver()": "library/platform.html#platform.libc_ver", "platform.mac_ver()": "library/platform.html#platform.mac_ver", "platform.machine()": "library/platform.html#platform.machine", "platform.node()": "library/platform.html#platform.node", "platform.platform()": "library/platform.html#platform.platform", "platform.processor()": "library/platform.html#platform.processor", "platform.python_branch()": "library/platform.html#platform.python_branch", "platform.python_build()": "library/platform.html#platform.python_build", "platform.python_compiler()": "library/platform.html#platform.python_compiler", "platform.python_implementation()": "library/platform.html#platform.python_implementation", "platform.python_revision()": "library/platform.html#platform.python_revision", "platform.python_version()": "library/platform.html#platform.python_version", "platform.python_version_tuple()": "library/platform.html#platform.python_version_tuple", "platform.release()": "library/platform.html#platform.release", "platform.system()": "library/platform.html#platform.system", "platform.system_alias()": "library/platform.html#platform.system_alias", "platform.uname()": "library/platform.html#platform.uname", "platform.version()": "library/platform.html#platform.version", "platform.win32_edition()": "library/platform.html#platform.win32_edition", "platform.win32_is_iot()": "library/platform.html#platform.win32_is_iot", "platform.win32_ver()": "library/platform.html#platform.win32_ver", "plistlib": "library/plistlib.html", "plistlib.dump()": "library/plistlib.html#plistlib.dump", "plistlib.dumps()": "library/plistlib.html#plistlib.dumps", "plistlib.FMT_BINARY": "library/plistlib.html#plistlib.FMT_BINARY", "plistlib.FMT_XML": "library/plistlib.html#plistlib.FMT_XML", "plistlib.load()": "library/plistlib.html#plistlib.load", "plistlib.loads()": "library/plistlib.html#plistlib.loads", "plistlib.UID": "library/plistlib.html#plistlib.UID", "Policies": "library/asyncio-policy.html", "Policy Objects (Policies)": "library/asyncio-policy.html#policy-objects", "Polling Objects (select)": "library/select.html#polling-objects", "POP3 Example (poplib)": "library/poplib.html#pop3-example", "POP3 Objects (poplib)": "library/poplib.html#pop3-objects", "Popen Objects (subprocess)": "library/subprocess.html#popen-objects", "poplib": "library/poplib.html", "poplib.error_proto": "library/poplib.html#poplib.error_proto", "poplib.POP3": "library/poplib.html#poplib.POP3", "poplib.POP3.apop()": "library/poplib.html#poplib.POP3.apop", "poplib.POP3.capa()": "library/poplib.html#poplib.POP3.capa", "poplib.POP3.dele()": "library/poplib.html#poplib.POP3.dele", "poplib.POP3.getwelcome()": "library/poplib.html#poplib.POP3.getwelcome", "poplib.POP3.list()": "library/poplib.html#poplib.POP3.list", "poplib.POP3.noop()": "library/poplib.html#poplib.POP3.noop", "poplib.POP3.pass_()": "library/poplib.html#poplib.POP3.pass_", "poplib.POP3.quit()": "library/poplib.html#poplib.POP3.quit", "poplib.POP3.retr()": "library/poplib.html#poplib.POP3.retr", "poplib.POP3.rpop()": "library/poplib.html#poplib.POP3.rpop", "poplib.POP3.rset()": "library/poplib.html#poplib.POP3.rset", "poplib.POP3.set_debuglevel()": "library/poplib.html#poplib.POP3.set_debuglevel", "poplib.POP3.stat()": "library/poplib.html#poplib.POP3.stat", "poplib.POP3.stls()": "library/poplib.html#poplib.POP3.stls", "poplib.POP3.top()": "library/poplib.html#poplib.POP3.top", "poplib.POP3.uidl()": "library/poplib.html#poplib.POP3.uidl", "poplib.POP3.user()": "library/poplib.html#poplib.POP3.user", "poplib.POP3.utf8()": "library/poplib.html#poplib.POP3.utf8", "poplib.POP3_SSL": "library/poplib.html#poplib.POP3_SSL", "Porting Extension Modules to Python 3": "howto/cporting.html", "portion": "glossary.html#term-portion", "positional argument": "glossary.html#term-positional-argument", "posix": "library/posix.html", "posix.environ": "library/posix.html#posix.environ", "Post-init processing (dataclasses)": "library/dataclasses.html#post-init-processing", "pow()": "library/functions.html#pow", "Power and logarithmic functions (cmath)": "library/cmath.html#power-and-logarithmic-functions", "Power and logarithmic functions (math)": "library/math.html#power-and-logarithmic-functions", "pprint": "library/pprint.html", "pprint.isreadable()": "library/pprint.html#pprint.isreadable", "pprint.isrecursive()": "library/pprint.html#pprint.isrecursive", "pprint.pformat()": "library/pprint.html#pprint.pformat", "pprint.pp()": "library/pprint.html#pprint.pp", "pprint.pprint()": "library/pprint.html#pprint.pprint", "pprint.PrettyPrinter": "library/pprint.html#pprint.PrettyPrinter", "pprint.PrettyPrinter.format()": "library/pprint.html#pprint.PrettyPrinter.format", "pprint.PrettyPrinter.isreadable()": "library/pprint.html#pprint.PrettyPrinter.isreadable", "pprint.PrettyPrinter.isrecursive()": "library/pprint.html#pprint.PrettyPrinter.isrecursive", "pprint.PrettyPrinter.pformat()": "library/pprint.html#pprint.PrettyPrinter.pformat", "pprint.PrettyPrinter.pprint()": "library/pprint.html#pprint.PrettyPrinter.pprint", "pprint.saferepr()": "library/pprint.html#pprint.saferepr", "Prefix scheme (sysconfig)": "library/sysconfig.html#prefix-scheme", "PrettyPrinter Objects (pprint)": "library/pprint.html#prettyprinter-objects", "print()": "library/functions.html#print", "Priority Queue (Queues)": "library/asyncio-queue.html#priority-queue", "Priority Queue Implementation Notes (heapq)": "library/heapq.html#priority-queue-implementation-notes", "procedure (call)": "reference/simple_stmts.html#index-3", "Process Management (os)": "library/os.html#process-management", "Process Parameters (os)": "library/os.html#process-parameters", "Process Watchers (Policies)": "library/asyncio-policy.html#process-watchers", "ProcessLookupError": "library/exceptions.html#ProcessLookupError", "ProcessPoolExecutor (concurrent.futures)": "library/concurrent.futures.html#processpoolexecutor", "profile and cProfile Module Reference (The Python Profilers)": "library/profile.html#module-cProfile", "profile.Profile": "library/profile.html#profile.Profile", "profile.Profile.create_stats()": "library/profile.html#profile.Profile.create_stats", "profile.Profile.disable()": "library/profile.html#profile.Profile.disable", "profile.Profile.dump_stats()": "library/profile.html#profile.Profile.dump_stats", "profile.Profile.enable()": "library/profile.html#profile.Profile.enable", "profile.Profile.print_stats()": "library/profile.html#profile.Profile.print_stats", "profile.Profile.run()": "library/profile.html#profile.Profile.run", "profile.Profile.runcall()": "library/profile.html#profile.Profile.runcall", "profile.Profile.runctx()": "library/profile.html#profile.Profile.runctx", "profile.run()": "library/profile.html#profile.run", "profile.runctx()": "library/profile.html#profile.runctx", "Program Frameworks": "library/frameworks.html", "Programmatic Interface (pickletools)": "library/pickletools.html#programmatic-interface", "Programmatic Interface (trace)": "library/trace.html#programmatic-interface", "Programming FAQ": "faq/programming.html", "Programming guidelines (multiprocessing)": "library/multiprocessing.html#programming-guidelines", "Progressbar (tkinter.ttk)": "library/tkinter.ttk.html#progressbar", "property": "library/functions.html#property", "property.deleter()": "library/functions.html#property.deleter", "property.getter()": "library/functions.html#property.getter", "property.setter()": "library/functions.html#property.setter", "ProtocolError Objects (xmlrpc.client)": "library/xmlrpc.client.html#protocolerror-objects", "Protocols (Low-level API Index)": "library/asyncio-llapi-index.html#protocols", "Protocols (Transports and Protocols)": "library/asyncio-protocol.html#protocols", "provisional API": "glossary.html#term-provisional-API", "provisional package": "glossary.html#term-provisional-package", "ProxyBasicAuthHandler Objects (urllib.request)": "library/urllib.request.html#proxybasicauthhandler-objects", "ProxyDigestAuthHandler Objects (urllib.request)": "library/urllib.request.html#proxydigestauthhandler-objects", "ProxyHandler Objects (urllib.request)": "library/urllib.request.html#proxyhandler-objects", "pstats.Stats": "library/profile.html#pstats.Stats", "pstats.Stats.add()": "library/profile.html#pstats.Stats.add", "pstats.Stats.dump_stats()": "library/profile.html#pstats.Stats.dump_stats", "pstats.Stats.get_stats_profile()": "library/profile.html#pstats.Stats.get_stats_profile", "pstats.Stats.print_callees()": "library/profile.html#pstats.Stats.print_callees", "pstats.Stats.print_callers()": "library/profile.html#pstats.Stats.print_callers", "pstats.Stats.print_stats()": "library/profile.html#pstats.Stats.print_stats", "pstats.Stats.reverse_order()": "library/profile.html#pstats.Stats.reverse_order", "pstats.Stats.sort_stats()": "library/profile.html#pstats.Stats.sort_stats", "pstats.Stats.strip_dirs()": "library/profile.html#pstats.Stats.strip_dirs", "pty": "library/pty.html", "pty.fork()": "library/pty.html#pty.fork", "pty.openpty()": "library/pty.html#pty.openpty", "pty.spawn()": "library/pty.html#pty.spawn", "Public classes (turtle)": "library/turtle.html#public-classes", "Public functions (compileall)": "library/compileall.html#public-functions", "Pure paths (pathlib)": "library/pathlib.html#pure-paths", "pwd": "library/pwd.html", "pwd.getpwall()": "library/pwd.html#pwd.getpwall", "pwd.getpwnam()": "library/pwd.html#pwd.getpwnam", "pwd.getpwuid()": "library/pwd.html#pwd.getpwuid", "py_compile": "library/py_compile.html", "py_compile.compile()": "library/py_compile.html#py_compile.compile", "py_compile.PycInvalidationMode": "library/py_compile.html#py_compile.PycInvalidationMode", "py_compile.PycInvalidationMode.CHECKED_HASH": "library/py_compile.html#py_compile.PycInvalidationMode.CHECKED_HASH", "py_compile.PycInvalidationMode.TIMESTAMP": "library/py_compile.html#py_compile.PycInvalidationMode.TIMESTAMP", "py_compile.PycInvalidationMode.UNCHECKED_HASH": "library/py_compile.html#py_compile.PycInvalidationMode.UNCHECKED_HASH", "py_compile.PyCompileError": "library/py_compile.html#py_compile.PyCompileError", "pyclbr": "library/pyclbr.html", "pyclbr.Class": "library/pyclbr.html#pyclbr.Class", "pyclbr.Class.children": "library/pyclbr.html#pyclbr.Class.children", "pyclbr.Class.file": "library/pyclbr.html#pyclbr.Class.file", "pyclbr.Class.lineno": "library/pyclbr.html#pyclbr.Class.lineno", "pyclbr.Class.methods": "library/pyclbr.html#pyclbr.Class.methods", "pyclbr.Class.module": "library/pyclbr.html#pyclbr.Class.module", "pyclbr.Class.name": "library/pyclbr.html#pyclbr.Class.name", "pyclbr.Class.parent": "library/pyclbr.html#pyclbr.Class.parent", "pyclbr.Class.super": "library/pyclbr.html#pyclbr.Class.super", "pyclbr.Function": "library/pyclbr.html#pyclbr.Function", "pyclbr.Function.children": "library/pyclbr.html#pyclbr.Function.children", "pyclbr.Function.file": "library/pyclbr.html#pyclbr.Function.file", "pyclbr.Function.is_async": "library/pyclbr.html#pyclbr.Function.is_async", "pyclbr.Function.lineno": "library/pyclbr.html#pyclbr.Function.lineno", "pyclbr.Function.module": "library/pyclbr.html#pyclbr.Function.module", "pyclbr.Function.name": "library/pyclbr.html#pyclbr.Function.name", "pyclbr.Function.parent": "library/pyclbr.html#pyclbr.Function.parent", "pyclbr.readmodule()": "library/pyclbr.html#pyclbr.readmodule", "pyclbr.readmodule_ex()": "library/pyclbr.html#pyclbr.readmodule_ex", "pydoc": "library/pydoc.html", "PyHash API": "c-api/hash.html", "Python 3000": "glossary.html#term-Python-3000", "Python API (zipapp)": "library/zipapp.html#python-api", "Python Bytecode Instructions (dis)": "library/dis.html#python-bytecode-instructions", "Python Development Mode": "library/devmode.html", "Python Documentation contents": "contents.html", "Python Frequently Asked Questions": "faq/index.html", "Python HOWTOs": "howto/index.html", "Python Initialization Configuration": "c-api/init_config.html", "Python Interface (timeit)": "library/timeit.html#python-interface", "Python Language Services": "library/language.html", "Python Module Index": "py-modindex.html", "Python on Windows FAQ": "faq/windows.html", "Python Runtime Services": "library/python.html", "Python Setup and Usage": "using/index.html", "Python Specific Encodings (codecs)": "library/codecs.html#python-specific-encodings", "Python support for the Linux perf profiler": "howto/perf_profiling.html", "Python UTF-8 Mode (os)": "library/os.html#python-utf-8-mode", "Python/C API Reference Manual": "c-api/index.html", "PythonFinalizationError": "library/exceptions.html#PythonFinalizationError", "Pythonic": "glossary.html#term-Pythonic", "PyTime C API": "c-api/time.html", "PyZipFile Objects (zipfile)": "library/zipfile.html#pyzipfile-objects", "qualified name": "glossary.html#term-qualified-name", "Querying the size of the output terminal (shutil)": "library/shutil.html#querying-the-size-of-the-output-terminal", "queue": "library/queue.html", "Queue (Queues)": "library/asyncio-queue.html#queue", "Queue Objects (queue)": "library/queue.html#queue-objects", "queue.Empty": "library/queue.html#queue.Empty", "queue.Full": "library/queue.html#queue.Full", "queue.LifoQueue": "library/queue.html#queue.LifoQueue", "queue.PriorityQueue": "library/queue.html#queue.PriorityQueue", "queue.Queue": "library/queue.html#queue.Queue", "queue.Queue.empty()": "library/queue.html#queue.Queue.empty", "queue.Queue.full()": "library/queue.html#queue.Queue.full", "queue.Queue.get()": "library/queue.html#queue.Queue.get", "queue.Queue.get_nowait()": "library/queue.html#queue.Queue.get_nowait", "queue.Queue.join()": "library/queue.html#queue.Queue.join", "queue.Queue.put()": "library/queue.html#queue.Queue.put", "queue.Queue.put_nowait()": "library/queue.html#queue.Queue.put_nowait", "queue.Queue.qsize()": "library/queue.html#queue.Queue.qsize", "queue.Queue.shutdown()": "library/queue.html#queue.Queue.shutdown", "queue.Queue.task_done()": "library/queue.html#queue.Queue.task_done", "queue.ShutDown": "library/queue.html#queue.ShutDown", "queue.SimpleQueue": "library/queue.html#queue.SimpleQueue", "queue.SimpleQueue.empty()": "library/queue.html#queue.SimpleQueue.empty", "queue.SimpleQueue.get()": "library/queue.html#queue.SimpleQueue.get", "queue.SimpleQueue.get_nowait()": "library/queue.html#queue.SimpleQueue.get_nowait", "queue.SimpleQueue.put()": "library/queue.html#queue.SimpleQueue.put", "queue.SimpleQueue.put_nowait()": "library/queue.html#queue.SimpleQueue.put_nowait", "queue.SimpleQueue.qsize()": "library/queue.html#queue.SimpleQueue.qsize", "QueueHandler (logging.handlers)": "library/logging.handlers.html#queuehandler", "QueueListener (logging.handlers)": "library/logging.handlers.html#queuelistener", "Queues": "library/asyncio-queue.html", "Queues (High-level API Index)": "library/asyncio-api-index.html#queues", "Quick Guide (unittest.mock)": "library/unittest.mock.html#quick-guide", "Quick Links for add_argument() (argparse)": "library/argparse.html#quick-links-for-add-argument", "Quick Start (configparser)": "library/configparser.html#quick-start", "Quick-start Tutorial (decimal)": "library/decimal.html#quick-start-tutorial", "quit": "library/constants.html#quit", "quopri": "library/quopri.html", "quopri.decode()": "library/quopri.html#quopri.decode", "quopri.decodestring()": "library/quopri.html#quopri.decodestring", "quopri.encode()": "library/quopri.html#quopri.encode", "quopri.encodestring()": "library/quopri.html#quopri.encodestring", "raise (statement)": "reference/simple_stmts.html#index-27", "raising (exception)": "reference/simple_stmts.html#index-27", "random": "library/random.html", "Random numbers (os)": "library/os.html#random-numbers", "Random numbers (secrets)": "library/secrets.html#random-numbers", "random.betavariate()": "library/random.html#random.betavariate", "random.binomialvariate()": "library/random.html#random.binomialvariate", "random.choice()": "library/random.html#random.choice", "random.choices()": "library/random.html#random.choices", "random.expovariate()": "library/random.html#random.expovariate", "random.gammavariate()": "library/random.html#random.gammavariate", "random.gauss()": "library/random.html#random.gauss", "random.getrandbits()": "library/random.html#random.getrandbits", "random.getstate()": "library/random.html#random.getstate", "random.lognormvariate()": "library/random.html#random.lognormvariate", "random.normalvariate()": "library/random.html#random.normalvariate", "random.paretovariate()": "library/random.html#random.paretovariate", "random.randbytes()": "library/random.html#random.randbytes", "random.randint()": "library/random.html#random.randint", "random.Random": "library/random.html#random.Random", "random.random()": "library/random.html#random.random", "random.Random.getrandbits()": "library/random.html#random.Random.getrandbits", "random.Random.getstate()": "library/random.html#random.Random.getstate", "random.Random.random()": "library/random.html#random.Random.random", "random.Random.seed()": "library/random.html#random.Random.seed", "random.Random.setstate()": "library/random.html#random.Random.setstate", "random.randrange()": "library/random.html#random.randrange", "random.sample()": "library/random.html#random.sample", "random.seed()": "library/random.html#random.seed", "random.setstate()": "library/random.html#random.setstate", "random.shuffle()": "library/random.html#random.shuffle", "random.SystemRandom": "library/random.html#random.SystemRandom", "random.triangular()": "library/random.html#random.triangular", "random.uniform()": "library/random.html#random.uniform", "random.vonmisesvariate()": "library/random.html#random.vonmisesvariate", "random.weibullvariate()": "library/random.html#random.weibullvariate", "range": "library/stdtypes.html#range", "range (built-in function)": "reference/compound_stmts.html#index-8", "range.start": "library/stdtypes.html#range.start", "range.step": "library/stdtypes.html#range.step", "range.stop": "library/stdtypes.html#range.stop", "RawConfigParser Objects (configparser)": "library/configparser.html#rawconfigparser-objects", "re": "library/re.html", "Re-ordering of keyword-only parameters in __init__() (dataclasses)": "library/dataclasses.html#re-ordering-of-keyword-only-parameters-in-init", "Re-using old test code (unittest)": "library/unittest.html#re-using-old-test-code", "re.A": "library/re.html#re.A", "re.ASCII": "library/re.html#re.ASCII", "re.compile()": "library/re.html#re.compile", "re.DEBUG": "library/re.html#re.DEBUG", "re.DOTALL": "library/re.html#re.DOTALL", "re.escape()": "library/re.html#re.escape", "re.findall()": "library/re.html#re.findall", "re.finditer()": "library/re.html#re.finditer", "re.fullmatch()": "library/re.html#re.fullmatch", "re.I": "library/re.html#re.I", "re.IGNORECASE": "library/re.html#re.IGNORECASE", "re.L": "library/re.html#re.L", "re.LOCALE": "library/re.html#re.LOCALE", "re.M": "library/re.html#re.M", "re.Match": "library/re.html#re.Match", "re.match()": "library/re.html#re.match", "re.Match.__getitem__()": "library/re.html#re.Match.__getitem__", "re.Match.end()": "library/re.html#re.Match.end", "re.Match.endpos": "library/re.html#re.Match.endpos", "re.Match.expand()": "library/re.html#re.Match.expand", "re.Match.group()": "library/re.html#re.Match.group", "re.Match.groupdict()": "library/re.html#re.Match.groupdict", "re.Match.groups()": "library/re.html#re.Match.groups", "re.Match.lastgroup": "library/re.html#re.Match.lastgroup", "re.Match.lastindex": "library/re.html#re.Match.lastindex", "re.Match.pos": "library/re.html#re.Match.pos", "re.Match.re": "library/re.html#re.Match.re", "re.Match.span()": "library/re.html#re.Match.span", "re.Match.start()": "library/re.html#re.Match.start", "re.Match.string": "library/re.html#re.Match.string", "re.MULTILINE": "library/re.html#re.MULTILINE", "re.NOFLAG": "library/re.html#re.NOFLAG", "re.Pattern": "library/re.html#re.Pattern", "re.Pattern.findall()": "library/re.html#re.Pattern.findall", "re.Pattern.finditer()": "library/re.html#re.Pattern.finditer", "re.Pattern.flags": "library/re.html#re.Pattern.flags", "re.Pattern.fullmatch()": "library/re.html#re.Pattern.fullmatch", "re.Pattern.groupindex": "library/re.html#re.Pattern.groupindex", "re.Pattern.groups": "library/re.html#re.Pattern.groups", "re.Pattern.match()": "library/re.html#re.Pattern.match", "re.Pattern.pattern": "library/re.html#re.Pattern.pattern", "re.Pattern.search()": "library/re.html#re.Pattern.search", "re.Pattern.split()": "library/re.html#re.Pattern.split", "re.Pattern.sub()": "library/re.html#re.Pattern.sub", "re.Pattern.subn()": "library/re.html#re.Pattern.subn", "re.PatternError": "library/re.html#re.PatternError", "re.PatternError.colno": "library/re.html#re.PatternError.colno", "re.PatternError.lineno": "library/re.html#re.PatternError.lineno", "re.PatternError.msg": "library/re.html#re.PatternError.msg", "re.PatternError.pattern": "library/re.html#re.PatternError.pattern", "re.PatternError.pos": "library/re.html#re.PatternError.pos", "re.purge()": "library/re.html#re.purge", "re.RegexFlag": "library/re.html#re.RegexFlag", "re.S": "library/re.html#re.S", "re.search()": "library/re.html#re.search", "re.split()": "library/re.html#re.split", "re.sub()": "library/re.html#re.sub", "re.subn()": "library/re.html#re.subn", "re.U": "library/re.html#re.U", "re.UNICODE": "library/re.html#re.UNICODE", "re.VERBOSE": "library/re.html#re.VERBOSE", "re.X": "library/re.html#re.X", "Reader Objects (csv)": "library/csv.html#reader-objects", "Reading and writing compressed files (lzma)": "library/lzma.html#reading-and-writing-compressed-files", "readline": "library/readline.html", "Readline configuration (site)": "library/site.html#readline-configuration", "readline.add_history()": "library/readline.html#readline.add_history", "readline.append_history_file()": "library/readline.html#readline.append_history_file", "readline.backend": "library/readline.html#readline.backend", "readline.clear_history()": "library/readline.html#readline.clear_history", "readline.get_begidx()": "library/readline.html#readline.get_begidx", "readline.get_completer()": "library/readline.html#readline.get_completer", "readline.get_completer_delims()": "library/readline.html#readline.get_completer_delims", "readline.get_completion_type()": "library/readline.html#readline.get_completion_type", "readline.get_current_history_length()": "library/readline.html#readline.get_current_history_length", "readline.get_endidx()": "library/readline.html#readline.get_endidx", "readline.get_history_item()": "library/readline.html#readline.get_history_item", "readline.get_history_length()": "library/readline.html#readline.get_history_length", "readline.get_line_buffer()": "library/readline.html#readline.get_line_buffer", "readline.insert_text()": "library/readline.html#readline.insert_text", "readline.parse_and_bind()": "library/readline.html#readline.parse_and_bind", "readline.read_history_file()": "library/readline.html#readline.read_history_file", "readline.read_init_file()": "library/readline.html#readline.read_init_file", "readline.redisplay()": "library/readline.html#readline.redisplay", "readline.remove_history_item()": "library/readline.html#readline.remove_history_item", "readline.replace_history_item()": "library/readline.html#readline.replace_history_item", "readline.set_auto_history()": "library/readline.html#readline.set_auto_history", "readline.set_completer()": "library/readline.html#readline.set_completer", "readline.set_completer_delims()": "library/readline.html#readline.set_completer_delims", "readline.set_completion_display_matches_hook()": "library/readline.html#readline.set_completion_display_matches_hook", "readline.set_history_length()": "library/readline.html#readline.set_history_length", "readline.set_pre_input_hook()": "library/readline.html#readline.set_pre_input_hook", "readline.set_startup_hook()": "library/readline.html#readline.set_startup_hook", "readline.write_history_file()": "library/readline.html#readline.write_history_file", "Real-valued distributions (random)": "library/random.html#real-valued-distributions", "rebinding (name)": "reference/simple_stmts.html#index-4", "Recipes (decimal)": "library/decimal.html#recipes", "Recipes (random)": "library/random.html#recipes", "Recipes and best practices (secrets)": "library/secrets.html#recipes-and-best-practices", "RecursionError": "library/exceptions.html#RecursionError", "Reference (ftplib)": "library/ftplib.html#reference", "Reference (multiprocessing)": "library/multiprocessing.html#reference", "Reference (sqlite3)": "library/sqlite3.html#reference", "Reference (xml.etree.ElementTree)": "library/xml.etree.elementtree.html#id4", "reference count": "glossary.html#term-reference-count", "Reference Counting": "c-api/refcounting.html", "ReferenceError": "library/exceptions.html#ReferenceError", "Reflection": "c-api/reflection.html", "Registering callback functions (sys.monitoring)": "library/sys.monitoring.html#registering-callback-functions", "Registry Handle Objects (winreg)": "library/winreg.html#registry-handle-objects", "Regular Expression Examples (re)": "library/re.html#regular-expression-examples", "Regular Expression HOWTO": "howto/regex.html", "Regular Expression Objects (re)": "library/re.html#regular-expression-objects", "Regular Expression Syntax (re)": "library/re.html#regular-expression-syntax", "regular package": "glossary.html#term-regular-package", "Relationship to other Python modules (pickle)": "library/pickle.html#relationship-to-other-python-modules", "relative (import)": "reference/simple_stmts.html#index-39", "REPL": "glossary.html#term-REPL", "Replacing Older Functions with the subprocess Module (subprocess)": "library/subprocess.html#replacing-older-functions-with-the-subprocess-module", "Repr Objects (reprlib)": "library/reprlib.html#repr-objects", "repr()": "library/functions.html#repr", "reprlib": "library/reprlib.html", "reprlib.aRepr": "library/reprlib.html#reprlib.aRepr", "reprlib.recursive_repr()": "library/reprlib.html#reprlib.recursive_repr", "reprlib.Repr": "library/reprlib.html#reprlib.Repr", "reprlib.repr()": "library/reprlib.html#reprlib.repr", "reprlib.Repr.fillvalue": "library/reprlib.html#reprlib.Repr.fillvalue", "reprlib.Repr.indent": "library/reprlib.html#reprlib.Repr.indent", "reprlib.Repr.maxarray": "library/reprlib.html#reprlib.Repr.maxarray", "reprlib.Repr.maxdeque": "library/reprlib.html#reprlib.Repr.maxdeque", "reprlib.Repr.maxdict": "library/reprlib.html#reprlib.Repr.maxdict", "reprlib.Repr.maxfrozenset": "library/reprlib.html#reprlib.Repr.maxfrozenset", "reprlib.Repr.maxlevel": "library/reprlib.html#reprlib.Repr.maxlevel", "reprlib.Repr.maxlist": "library/reprlib.html#reprlib.Repr.maxlist", "reprlib.Repr.maxlong": "library/reprlib.html#reprlib.Repr.maxlong", "reprlib.Repr.maxother": "library/reprlib.html#reprlib.Repr.maxother", "reprlib.Repr.maxset": "library/reprlib.html#reprlib.Repr.maxset", "reprlib.Repr.maxstring": "library/reprlib.html#reprlib.Repr.maxstring", "reprlib.Repr.maxtuple": "library/reprlib.html#reprlib.Repr.maxtuple", "reprlib.Repr.repr()": "library/reprlib.html#reprlib.Repr.repr", "reprlib.Repr.repr1()": "library/reprlib.html#reprlib.Repr.repr1", "Request Handler Objects (socketserver)": "library/socketserver.html#request-handler-objects", "Request Objects (urllib.request)": "library/urllib.request.html#request-objects", "resource": "library/resource.html", "Resource Limits (resource)": "library/resource.html#resource-limits", "Resource Usage (resource)": "library/resource.html#resource-usage", "resource.error": "library/resource.html#resource.error", "resource.getpagesize()": "library/resource.html#resource.getpagesize", "resource.getrlimit()": "library/resource.html#resource.getrlimit", "resource.getrusage()": "library/resource.html#resource.getrusage", "resource.prlimit()": "library/resource.html#resource.prlimit", "resource.RLIM_INFINITY": "library/resource.html#resource.RLIM_INFINITY", "resource.RLIMIT_AS": "library/resource.html#resource.RLIMIT_AS", "resource.RLIMIT_CORE": "library/resource.html#resource.RLIMIT_CORE", "resource.RLIMIT_CPU": "library/resource.html#resource.RLIMIT_CPU", "resource.RLIMIT_DATA": "library/resource.html#resource.RLIMIT_DATA", "resource.RLIMIT_FSIZE": "library/resource.html#resource.RLIMIT_FSIZE", "resource.RLIMIT_KQUEUES": "library/resource.html#resource.RLIMIT_KQUEUES", "resource.RLIMIT_MEMLOCK": "library/resource.html#resource.RLIMIT_MEMLOCK", "resource.RLIMIT_MSGQUEUE": "library/resource.html#resource.RLIMIT_MSGQUEUE", "resource.RLIMIT_NICE": "library/resource.html#resource.RLIMIT_NICE", "resource.RLIMIT_NOFILE": "library/resource.html#resource.RLIMIT_NOFILE", "resource.RLIMIT_NPROC": "library/resource.html#resource.RLIMIT_NPROC", "resource.RLIMIT_NPTS": "library/resource.html#resource.RLIMIT_NPTS", "resource.RLIMIT_OFILE": "library/resource.html#resource.RLIMIT_OFILE", "resource.RLIMIT_RSS": "library/resource.html#resource.RLIMIT_RSS", "resource.RLIMIT_RTPRIO": "library/resource.html#resource.RLIMIT_RTPRIO", "resource.RLIMIT_RTTIME": "library/resource.html#resource.RLIMIT_RTTIME", "resource.RLIMIT_SBSIZE": "library/resource.html#resource.RLIMIT_SBSIZE", "resource.RLIMIT_SIGPENDING": "library/resource.html#resource.RLIMIT_SIGPENDING", "resource.RLIMIT_STACK": "library/resource.html#resource.RLIMIT_STACK", "resource.RLIMIT_SWAP": "library/resource.html#resource.RLIMIT_SWAP", "resource.RLIMIT_VMEM": "library/resource.html#resource.RLIMIT_VMEM", "resource.RUSAGE_BOTH": "library/resource.html#resource.RUSAGE_BOTH", "resource.RUSAGE_CHILDREN": "library/resource.html#resource.RUSAGE_CHILDREN", "resource.RUSAGE_SELF": "library/resource.html#resource.RUSAGE_SELF", "resource.RUSAGE_THREAD": "library/resource.html#resource.RUSAGE_THREAD", "resource.setrlimit()": "library/resource.html#resource.setrlimit", "ResourceWarning": "library/exceptions.html#ResourceWarning", "ResourceWarning Example (Python Development Mode)": "library/devmode.html#resourcewarning-example", "Restricting Globals (pickle)": "library/pickle.html#restricting-globals", "Restrictions (shelve)": "library/shelve.html#restrictions", "Retrieving source code (inspect)": "library/inspect.html#retrieving-source-code", "return (statement)": "reference/simple_stmts.html#index-24", "reversed()": "library/functions.html#reversed", "rlcompleter": "library/rlcompleter.html", "rlcompleter.Completer": "library/rlcompleter.html#rlcompleter.Completer", "rlcompleter.Completer.complete()": "library/rlcompleter.html#rlcompleter.Completer.complete", "RLock Objects (threading)": "library/threading.html#rlock-objects", "RotatingFileHandler (logging.handlers)": "library/logging.handlers.html#rotatingfilehandler", "round()": "library/functions.html#round", "Rounding modes (decimal)": "library/decimal.html#rounding-modes", "Runner context manager (Runners)": "library/asyncio-runner.html#runner-context-manager", "Runners": "library/asyncio-runner.html", "Running an asyncio Program (Runners)": "library/asyncio-runner.html#running-an-asyncio-program", "Running Blocking Code (Developing with asyncio)": "library/asyncio-dev.html#running-blocking-code", "Running in Threads (Coroutines and Tasks)": "library/asyncio-task.html#running-in-threads", "Running Tasks Concurrently (Coroutines and Tasks)": "library/asyncio-task.html#running-tasks-concurrently", "Running tests using the command-line interface (test)": "library/test.html#module-test.regrtest", "runpy": "library/runpy.html", "runpy.run_module()": "library/runpy.html#runpy.run_module", "runpy.run_path()": "library/runpy.html#runpy.run_path", "RuntimeError": "library/exceptions.html#RuntimeError", "RuntimeWarning": "library/exceptions.html#RuntimeWarning", "SAXException Objects (xml.sax)": "library/xml.sax.html#saxexception-objects", "sched": "library/sched.html", "sched.scheduler": "library/sched.html#sched.scheduler", "sched.scheduler.cancel()": "library/sched.html#sched.scheduler.cancel", "sched.scheduler.empty()": "library/sched.html#sched.scheduler.empty", "sched.scheduler.enter()": "library/sched.html#sched.scheduler.enter", "sched.scheduler.enterabs()": "library/sched.html#sched.scheduler.enterabs", "sched.scheduler.queue": "library/sched.html#sched.scheduler.queue", "sched.scheduler.run()": "library/sched.html#sched.scheduler.run", "Scheduler Objects (sched)": "library/sched.html#scheduler-objects", "Scheduling From Other Threads (Coroutines and Tasks)": "library/asyncio-task.html#scheduling-from-other-threads", "Search": "search.html", "Searching Sorted Lists (bisect)": "library/bisect.html#searching-sorted-lists", "secrets": "library/secrets.html", "secrets.choice()": "library/secrets.html#secrets.choice", "secrets.compare_digest()": "library/secrets.html#secrets.compare_digest", "secrets.randbelow()": "library/secrets.html#secrets.randbelow", "secrets.randbits()": "library/secrets.html#secrets.randbits", "secrets.SystemRandom": "library/secrets.html#secrets.SystemRandom", "secrets.token_bytes()": "library/secrets.html#secrets.token_bytes", "secrets.token_hex()": "library/secrets.html#secrets.token_hex", "secrets.token_urlsafe()": "library/secrets.html#secrets.token_urlsafe", "Security Considerations": "library/security_warnings.html", "Security Considerations (base64)": "library/base64.html#security-considerations", "Security Considerations (http.server)": "library/http.server.html#security-considerations", "Security considerations (logging.config)": "library/logging.config.html#security-considerations", "Security considerations (ssl)": "library/ssl.html#security-considerations", "Security Considerations (subprocess)": "library/subprocess.html#security-considerations", "select": "library/select.html", "select.devpoll()": "library/select.html#select.devpoll", "select.devpoll.close()": "library/select.html#select.devpoll.close", "select.devpoll.closed": "library/select.html#select.devpoll.closed", "select.devpoll.fileno()": "library/select.html#select.devpoll.fileno", "select.devpoll.modify()": "library/select.html#select.devpoll.modify", "select.devpoll.poll()": "library/select.html#select.devpoll.poll", "select.devpoll.register()": "library/select.html#select.devpoll.register", "select.devpoll.unregister()": "library/select.html#select.devpoll.unregister", "select.epoll()": "library/select.html#select.epoll", "select.epoll.close()": "library/select.html#select.epoll.close", "select.epoll.closed": "library/select.html#select.epoll.closed", "select.epoll.fileno()": "library/select.html#select.epoll.fileno", "select.epoll.fromfd()": "library/select.html#select.epoll.fromfd", "select.epoll.modify()": "library/select.html#select.epoll.modify", "select.epoll.poll()": "library/select.html#select.epoll.poll", "select.epoll.register()": "library/select.html#select.epoll.register", "select.epoll.unregister()": "library/select.html#select.epoll.unregister", "select.error": "library/select.html#select.error", "select.kevent()": "library/select.html#select.kevent", "select.kevent.data": "library/select.html#select.kevent.data", "select.kevent.fflags": "library/select.html#select.kevent.fflags", "select.kevent.filter": "library/select.html#select.kevent.filter", "select.kevent.flags": "library/select.html#select.kevent.flags", "select.kevent.ident": "library/select.html#select.kevent.ident", "select.kevent.udata": "library/select.html#select.kevent.udata", "select.kqueue()": "library/select.html#select.kqueue", "select.kqueue.close()": "library/select.html#select.kqueue.close", "select.kqueue.closed": "library/select.html#select.kqueue.closed", "select.kqueue.control()": "library/select.html#select.kqueue.control", "select.kqueue.fileno()": "library/select.html#select.kqueue.fileno", "select.kqueue.fromfd()": "library/select.html#select.kqueue.fromfd", "select.PIPE_BUF": "library/select.html#select.PIPE_BUF", "select.poll()": "library/select.html#select.poll", "select.poll.modify()": "library/select.html#select.poll.modify", "select.poll.poll()": "library/select.html#select.poll.poll", "select.poll.register()": "library/select.html#select.poll.register", "select.poll.unregister()": "library/select.html#select.poll.unregister", "select.select()": "library/select.html#select.select", "selectors": "library/selectors.html", "selectors.BaseSelector": "library/selectors.html#selectors.BaseSelector", "selectors.BaseSelector.close()": "library/selectors.html#selectors.BaseSelector.close", "selectors.BaseSelector.get_key()": "library/selectors.html#selectors.BaseSelector.get_key", "selectors.BaseSelector.get_map()": "library/selectors.html#selectors.BaseSelector.get_map", "selectors.BaseSelector.modify()": "library/selectors.html#selectors.BaseSelector.modify", "selectors.BaseSelector.register()": "library/selectors.html#selectors.BaseSelector.register", "selectors.BaseSelector.select()": "library/selectors.html#selectors.BaseSelector.select", "selectors.BaseSelector.unregister()": "library/selectors.html#selectors.BaseSelector.unregister", "selectors.DefaultSelector": "library/selectors.html#selectors.DefaultSelector", "selectors.DevpollSelector": "library/selectors.html#selectors.DevpollSelector", "selectors.DevpollSelector.fileno()": "library/selectors.html#selectors.DevpollSelector.fileno", "selectors.EpollSelector": "library/selectors.html#selectors.EpollSelector", "selectors.EpollSelector.fileno()": "library/selectors.html#selectors.EpollSelector.fileno", "selectors.EVENT_READ": "library/selectors.html#selectors.EVENT_READ", "selectors.EVENT_WRITE": "library/selectors.html#selectors.EVENT_WRITE", "selectors.KqueueSelector": "library/selectors.html#selectors.KqueueSelector", "selectors.KqueueSelector.fileno()": "library/selectors.html#selectors.KqueueSelector.fileno", "selectors.PollSelector": "library/selectors.html#selectors.PollSelector", "selectors.SelectorKey": "library/selectors.html#selectors.SelectorKey", "selectors.SelectorKey.data": "library/selectors.html#selectors.SelectorKey.data", "selectors.SelectorKey.events": "library/selectors.html#selectors.SelectorKey.events", "selectors.SelectorKey.fd": "library/selectors.html#selectors.SelectorKey.fd", "selectors.SelectorKey.fileobj": "library/selectors.html#selectors.SelectorKey.fileobj", "selectors.SelectSelector": "library/selectors.html#selectors.SelectSelector", "Semaphore (Synchronization Primitives)": "library/asyncio-sync.html#semaphore", "Semaphore Objects (threading)": "library/threading.html#semaphore-objects", "Separator (tkinter.ttk)": "library/tkinter.ttk.html#separator", "sequence": "glossary.html#term-sequence", "Sequence Protocol": "c-api/sequence.html", "Sequence Types \u2014 list, tuple, range (Types)": "library/stdtypes.html#sequence-types-list-tuple-range", "SequenceMatcher Examples (difflib)": "library/difflib.html#sequencematcher-examples", "SequenceMatcher Objects (difflib)": "library/difflib.html#sequencematcher-objects", "Server Creation Notes (socketserver)": "library/socketserver.html#server-creation-notes", "Server Objects (Event Loop)": "library/asyncio-eventloop.html#server-objects", "Server Objects (socketserver)": "library/socketserver.html#server-objects", "ServerProxy Objects (xmlrpc.client)": "library/xmlrpc.client.html#serverproxy-objects", "set": "library/stdtypes.html#set", "set comprehension": "glossary.html#term-set-comprehension", "Set Objects": "c-api/set.html", "Set Types \u2014 set, frozenset (Types)": "library/stdtypes.html#set-types-set-frozenset", "setattr()": "library/functions.html#setattr", "SHAKE variable length digests (hashlib)": "library/hashlib.html#shake-variable-length-digests", "shelve": "library/shelve.html", "shelve.BsdDbShelf": "library/shelve.html#shelve.BsdDbShelf", "shelve.DbfilenameShelf": "library/shelve.html#shelve.DbfilenameShelf", "shelve.open()": "library/shelve.html#shelve.open", "shelve.Shelf": "library/shelve.html#shelve.Shelf", "shelve.Shelf.close()": "library/shelve.html#shelve.Shelf.close", "shelve.Shelf.sync()": "library/shelve.html#shelve.Shelf.sync", "Shielding From Cancellation (Coroutines and Tasks)": "library/asyncio-task.html#shielding-from-cancellation", "shlex": "library/shlex.html", "shlex Objects (shlex)": "library/shlex.html#shlex-objects", "shlex.join()": "library/shlex.html#shlex.join", "shlex.quote()": "library/shlex.html#shlex.quote", "shlex.shlex": "library/shlex.html#shlex.shlex", "shlex.shlex.commenters": "library/shlex.html#shlex.shlex.commenters", "shlex.shlex.debug": "library/shlex.html#shlex.shlex.debug", "shlex.shlex.eof": "library/shlex.html#shlex.shlex.eof", "shlex.shlex.error_leader()": "library/shlex.html#shlex.shlex.error_leader", "shlex.shlex.escape": "library/shlex.html#shlex.shlex.escape", "shlex.shlex.escapedquotes": "library/shlex.html#shlex.shlex.escapedquotes", "shlex.shlex.get_token()": "library/shlex.html#shlex.shlex.get_token", "shlex.shlex.infile": "library/shlex.html#shlex.shlex.infile", "shlex.shlex.instream": "library/shlex.html#shlex.shlex.instream", "shlex.shlex.lineno": "library/shlex.html#shlex.shlex.lineno", "shlex.shlex.pop_source()": "library/shlex.html#shlex.shlex.pop_source", "shlex.shlex.punctuation_chars": "library/shlex.html#shlex.shlex.punctuation_chars", "shlex.shlex.push_source()": "library/shlex.html#shlex.shlex.push_source", "shlex.shlex.push_token()": "library/shlex.html#shlex.shlex.push_token", "shlex.shlex.quotes": "library/shlex.html#shlex.shlex.quotes", "shlex.shlex.read_token()": "library/shlex.html#shlex.shlex.read_token", "shlex.shlex.source": "library/shlex.html#shlex.shlex.source", "shlex.shlex.sourcehook()": "library/shlex.html#shlex.shlex.sourcehook", "shlex.shlex.token": "library/shlex.html#shlex.shlex.token", "shlex.shlex.whitespace": "library/shlex.html#shlex.shlex.whitespace", "shlex.shlex.whitespace_split": "library/shlex.html#shlex.shlex.whitespace_split", "shlex.shlex.wordchars": "library/shlex.html#shlex.shlex.wordchars", "shlex.split()": "library/shlex.html#shlex.split", "shutil": "library/shutil.html", "shutil.chown()": "library/shutil.html#shutil.chown", "shutil.copy()": "library/shutil.html#shutil.copy", "shutil.copy2()": "library/shutil.html#shutil.copy2", "shutil.copyfile()": "library/shutil.html#shutil.copyfile", "shutil.copyfileobj()": "library/shutil.html#shutil.copyfileobj", "shutil.copymode()": "library/shutil.html#shutil.copymode", "shutil.copystat()": "library/shutil.html#shutil.copystat", "shutil.copytree()": "library/shutil.html#shutil.copytree", "shutil.disk_usage()": "library/shutil.html#shutil.disk_usage", "shutil.Error": "library/shutil.html#shutil.Error", "shutil.get_archive_formats()": "library/shutil.html#shutil.get_archive_formats", "shutil.get_terminal_size()": "library/shutil.html#shutil.get_terminal_size", "shutil.get_unpack_formats()": "library/shutil.html#shutil.get_unpack_formats", "shutil.ignore_patterns()": "library/shutil.html#shutil.ignore_patterns", "shutil.make_archive()": "library/shutil.html#shutil.make_archive", "shutil.move()": "library/shutil.html#shutil.move", "shutil.register_archive_format()": "library/shutil.html#shutil.register_archive_format", "shutil.register_unpack_format()": "library/shutil.html#shutil.register_unpack_format", "shutil.rmtree()": "library/shutil.html#shutil.rmtree", "shutil.rmtree.avoids_symlink_attacks": "library/shutil.html#shutil.rmtree.avoids_symlink_attacks", "shutil.SameFileError": "library/shutil.html#shutil.SameFileError", "shutil.unpack_archive()": "library/shutil.html#shutil.unpack_archive", "shutil.unregister_archive_format()": "library/shutil.html#shutil.unregister_archive_format", "shutil.unregister_unpack_format()": "library/shutil.html#shutil.unregister_unpack_format", "shutil.which()": "library/shutil.html#shutil.which", "signal": "library/signal.html", "Signal Handling (unittest)": "library/unittest.html#signal-handling", "signal.alarm()": "library/signal.html#signal.alarm", "signal.CTRL_BREAK_EVENT": "library/signal.html#signal.CTRL_BREAK_EVENT", "signal.CTRL_C_EVENT": "library/signal.html#signal.CTRL_C_EVENT", "signal.getitimer()": "library/signal.html#signal.getitimer", "signal.getsignal()": "library/signal.html#signal.getsignal", "signal.Handlers": "library/signal.html#signal.Handlers", "signal.ITIMER_PROF": "library/signal.html#signal.ITIMER_PROF", "signal.ITIMER_REAL": "library/signal.html#signal.ITIMER_REAL", "signal.ITIMER_VIRTUAL": "library/signal.html#signal.ITIMER_VIRTUAL", "signal.ItimerError": "library/signal.html#signal.ItimerError", "signal.NSIG": "library/signal.html#signal.NSIG", "signal.pause()": "library/signal.html#signal.pause", "signal.pidfd_send_signal()": "library/signal.html#signal.pidfd_send_signal", "signal.pthread_kill()": "library/signal.html#signal.pthread_kill", "signal.pthread_sigmask()": "library/signal.html#signal.pthread_sigmask", "signal.raise_signal()": "library/signal.html#signal.raise_signal", "signal.set_wakeup_fd()": "library/signal.html#signal.set_wakeup_fd", "signal.setitimer()": "library/signal.html#signal.setitimer", "signal.SIG_BLOCK": "library/signal.html#signal.SIG_BLOCK", "signal.SIG_DFL": "library/signal.html#signal.SIG_DFL", "signal.SIG_IGN": "library/signal.html#signal.SIG_IGN", "signal.SIG_SETMASK": "library/signal.html#signal.SIG_SETMASK", "signal.SIG_UNBLOCK": "library/signal.html#signal.SIG_UNBLOCK", "signal.SIGABRT": "library/signal.html#signal.SIGABRT", "signal.SIGALRM": "library/signal.html#signal.SIGALRM", "signal.SIGBREAK": "library/signal.html#signal.SIGBREAK", "signal.SIGBUS": "library/signal.html#signal.SIGBUS", "signal.SIGCHLD": "library/signal.html#signal.SIGCHLD", "signal.SIGCLD": "library/signal.html#signal.SIGCLD", "signal.SIGCONT": "library/signal.html#signal.SIGCONT", "signal.SIGFPE": "library/signal.html#signal.SIGFPE", "signal.SIGHUP": "library/signal.html#signal.SIGHUP", "signal.SIGILL": "library/signal.html#signal.SIGILL", "signal.SIGINT": "library/signal.html#signal.SIGINT", "signal.siginterrupt()": "library/signal.html#signal.siginterrupt", "signal.SIGKILL": "library/signal.html#signal.SIGKILL", "signal.Sigmasks": "library/signal.html#signal.Sigmasks", "signal.signal()": "library/signal.html#signal.signal", "signal.Signals": "library/signal.html#signal.Signals", "signal.sigpending()": "library/signal.html#signal.sigpending", "signal.SIGPIPE": "library/signal.html#signal.SIGPIPE", "signal.SIGSEGV": "library/signal.html#signal.SIGSEGV", "signal.SIGSTKFLT": "library/signal.html#signal.SIGSTKFLT", "signal.SIGTERM": "library/signal.html#signal.SIGTERM", "signal.sigtimedwait()": "library/signal.html#signal.sigtimedwait", "signal.SIGUSR1": "library/signal.html#signal.SIGUSR1", "signal.SIGUSR2": "library/signal.html#signal.SIGUSR2", "signal.sigwait()": "library/signal.html#signal.sigwait", "signal.sigwaitinfo()": "library/signal.html#signal.sigwaitinfo", "signal.SIGWINCH": "library/signal.html#signal.SIGWINCH", "signal.strsignal()": "library/signal.html#signal.strsignal", "signal.valid_signals()": "library/signal.html#signal.valid_signals", "Signals (decimal)": "library/decimal.html#signals", "simple (statement)": "reference/simple_stmts.html#index-0", "Simple Usage: Checking Examples in a Text File (doctest)": "library/doctest.html#simple-usage-checking-examples-in-a-text-file", "Simple Usage: Checking Examples in Docstrings (doctest)": "library/doctest.html#simple-usage-checking-examples-in-docstrings", "SimpleQueue Objects (queue)": "library/queue.html#simplequeue-objects", "SimpleXMLRPCServer Objects (xmlrpc.server)": "library/xmlrpc.server.html#simplexmlrpcserver-objects", "single dispatch": "glossary.html#term-single-dispatch", "Single use, reusable and reentrant context managers (contextlib)": "library/contextlib.html#single-use-reusable-and-reentrant-context-managers", "site": "library/site.html", "site.addsitedir()": "library/site.html#site.addsitedir", "site.ENABLE_USER_SITE": "library/site.html#site.ENABLE_USER_SITE", "site.getsitepackages()": "library/site.html#site.getsitepackages", "site.getuserbase()": "library/site.html#site.getuserbase", "site.getusersitepackages()": "library/site.html#site.getusersitepackages", "site.main()": "library/site.html#site.main", "site.PREFIXES": "library/site.html#site.PREFIXES", "site.USER_BASE": "library/site.html#site.USER_BASE", "site.USER_SITE": "library/site.html#site.USER_SITE", "sitecustomize (site)": "library/site.html#module-sitecustomize", "Sizegrip (tkinter.ttk)": "library/tkinter.ttk.html#sizegrip", "Skipping tests and expected failures (unittest)": "library/unittest.html#skipping-tests-and-expected-failures", "Sleeping (Coroutines and Tasks)": "library/asyncio-task.html#sleeping", "slice": "library/functions.html#slice", "Slice Objects": "c-api/slice.html", "slice.indices()": "reference/datamodel.html#slice.indices", "slice.start": "library/functions.html#slice.start", "slice.step": "library/functions.html#slice.step", "slice.stop": "library/functions.html#slice.stop", "SMTP Example (smtplib)": "library/smtplib.html#smtp-example", "SMTP Objects (smtplib)": "library/smtplib.html#smtp-objects", "SMTPHandler (logging.handlers)": "library/logging.handlers.html#smtphandler", "smtplib": "library/smtplib.html", "smtplib.LMTP": "library/smtplib.html#smtplib.LMTP", "smtplib.SMTP": "library/smtplib.html#smtplib.SMTP", "smtplib.SMTP.auth()": "library/smtplib.html#smtplib.SMTP.auth", "smtplib.SMTP.connect()": "library/smtplib.html#smtplib.SMTP.connect", "smtplib.SMTP.docmd()": "library/smtplib.html#smtplib.SMTP.docmd", "smtplib.SMTP.ehlo()": "library/smtplib.html#smtplib.SMTP.ehlo", "smtplib.SMTP.ehlo_or_helo_if_needed()": "library/smtplib.html#smtplib.SMTP.ehlo_or_helo_if_needed", "smtplib.SMTP.has_extn()": "library/smtplib.html#smtplib.SMTP.has_extn", "smtplib.SMTP.helo()": "library/smtplib.html#smtplib.SMTP.helo", "smtplib.SMTP.login()": "library/smtplib.html#smtplib.SMTP.login", "smtplib.SMTP.quit()": "library/smtplib.html#smtplib.SMTP.quit", "smtplib.SMTP.send_message()": "library/smtplib.html#smtplib.SMTP.send_message", "smtplib.SMTP.sendmail()": "library/smtplib.html#smtplib.SMTP.sendmail", "smtplib.SMTP.set_debuglevel()": "library/smtplib.html#smtplib.SMTP.set_debuglevel", "smtplib.SMTP.starttls()": "library/smtplib.html#smtplib.SMTP.starttls", "smtplib.SMTP.verify()": "library/smtplib.html#smtplib.SMTP.verify", "smtplib.SMTP_SSL": "library/smtplib.html#smtplib.SMTP_SSL", "smtplib.SMTPAuthenticationError": "library/smtplib.html#smtplib.SMTPAuthenticationError", "smtplib.SMTPConnectError": "library/smtplib.html#smtplib.SMTPConnectError", "smtplib.SMTPDataError": "library/smtplib.html#smtplib.SMTPDataError", "smtplib.SMTPException": "library/smtplib.html#smtplib.SMTPException", "smtplib.SMTPHeloError": "library/smtplib.html#smtplib.SMTPHeloError", "smtplib.SMTPNotSupportedError": "library/smtplib.html#smtplib.SMTPNotSupportedError", "smtplib.SMTPRecipientsRefused": "library/smtplib.html#smtplib.SMTPRecipientsRefused", "smtplib.SMTPResponseException": "library/smtplib.html#smtplib.SMTPResponseException", "smtplib.SMTPSenderRefused": "library/smtplib.html#smtplib.SMTPSenderRefused", "smtplib.SMTPServerDisconnected": "library/smtplib.html#smtplib.SMTPServerDisconnected", "Soapbox (doctest)": "library/doctest.html#soapbox", "socket": "library/socket.html", "Socket families (socket)": "library/socket.html#socket-families", "Socket Objects (socket)": "library/socket.html#socket-objects", "Socket Programming HOWTO": "howto/sockets.html", "socket.AF_ALG": "library/socket.html#socket.AF_ALG", "socket.AF_CAN": "library/socket.html#socket.AF_CAN", "socket.AF_DIVERT": "library/socket.html#socket.AF_DIVERT", "socket.AF_HYPERV": "library/socket.html#socket.AF_HYPERV", "socket.AF_INET": "library/socket.html#socket.AF_INET", "socket.AF_INET6": "library/socket.html#socket.AF_INET6", "socket.AF_LINK": "library/socket.html#socket.AF_LINK", "socket.AF_PACKET": "library/socket.html#socket.AF_PACKET", "socket.AF_QIPCRTR": "library/socket.html#socket.AF_QIPCRTR", "socket.AF_RDS": "library/socket.html#socket.AF_RDS", "socket.AF_UNIX": "library/socket.html#socket.AF_UNIX", "socket.AF_UNSPEC": "library/socket.html#socket.AF_UNSPEC", "socket.AF_VSOCK": "library/socket.html#socket.AF_VSOCK", "socket.BDADDR_ANY": "library/socket.html#socket.BDADDR_ANY", "socket.BDADDR_LOCAL": "library/socket.html#socket.BDADDR_LOCAL", "socket.CAN_BCM": "library/socket.html#socket.CAN_BCM", "socket.CAN_ISOTP": "library/socket.html#socket.CAN_ISOTP", "socket.CAN_J1939": "library/socket.html#socket.CAN_J1939", "socket.CAN_RAW_FD_FRAMES": "library/socket.html#socket.CAN_RAW_FD_FRAMES", "socket.CAN_RAW_JOIN_FILTERS": "library/socket.html#socket.CAN_RAW_JOIN_FILTERS", "socket.close()": "library/socket.html#socket.close", "socket.CMSG_LEN()": "library/socket.html#socket.CMSG_LEN", "socket.CMSG_SPACE()": "library/socket.html#socket.CMSG_SPACE", "socket.create_connection()": "library/socket.html#socket.create_connection", "socket.create_server()": "library/socket.html#socket.create_server", "socket.error": "library/socket.html#socket.error", "socket.ETH_P_ALL": "library/socket.html#socket.ETH_P_ALL", "socket.ETHERTYPE_ARP": "library/socket.html#socket.ETHERTYPE_ARP", "socket.ETHERTYPE_IP": "library/socket.html#socket.ETHERTYPE_IP", "socket.ETHERTYPE_IPV6": "library/socket.html#socket.ETHERTYPE_IPV6", "socket.ETHERTYPE_VLAN": "library/socket.html#socket.ETHERTYPE_VLAN", "socket.fromfd()": "library/socket.html#socket.fromfd", "socket.fromshare()": "library/socket.html#socket.fromshare", "socket.gaierror": "library/socket.html#socket.gaierror", "socket.getaddrinfo()": "library/socket.html#socket.getaddrinfo", "socket.getdefaulttimeout()": "library/socket.html#socket.getdefaulttimeout", "socket.getfqdn()": "library/socket.html#socket.getfqdn", "socket.gethostbyaddr()": "library/socket.html#socket.gethostbyaddr", "socket.gethostbyname()": "library/socket.html#socket.gethostbyname", "socket.gethostbyname_ex()": "library/socket.html#socket.gethostbyname_ex", "socket.gethostname()": "library/socket.html#socket.gethostname", "socket.getnameinfo()": "library/socket.html#socket.getnameinfo", "socket.getprotobyname()": "library/socket.html#socket.getprotobyname", "socket.getservbyname()": "library/socket.html#socket.getservbyname", "socket.getservbyport()": "library/socket.html#socket.getservbyport", "socket.has_dualstack_ipv6()": "library/socket.html#socket.has_dualstack_ipv6", "socket.has_ipv6": "library/socket.html#socket.has_ipv6", "socket.HCI_DATA_DIR": "library/socket.html#socket.HCI_DATA_DIR", "socket.HCI_FILTER": "library/socket.html#socket.HCI_FILTER", "socket.HCI_TIME_STAMP": "library/socket.html#socket.HCI_TIME_STAMP", "socket.herror": "library/socket.html#socket.herror", "socket.htonl()": "library/socket.html#socket.htonl", "socket.htons()": "library/socket.html#socket.htons", "socket.HV_GUID_BROADCAST": "library/socket.html#socket.HV_GUID_BROADCAST", "socket.HV_GUID_CHILDREN": "library/socket.html#socket.HV_GUID_CHILDREN", "socket.HV_GUID_LOOPBACK": "library/socket.html#socket.HV_GUID_LOOPBACK", "socket.HV_GUID_PARENT": "library/socket.html#socket.HV_GUID_PARENT", "socket.HV_GUID_WILDCARD": "library/socket.html#socket.HV_GUID_WILDCARD", "socket.HV_GUID_ZERO": "library/socket.html#socket.HV_GUID_ZERO", "socket.HV_PROTOCOL_RAW": "library/socket.html#socket.HV_PROTOCOL_RAW", "socket.HVSOCKET_ADDRESS_FLAG_PASSTHRU": "library/socket.html#socket.HVSOCKET_ADDRESS_FLAG_PASSTHRU", "socket.HVSOCKET_CONNECT_TIMEOUT": "library/socket.html#socket.HVSOCKET_CONNECT_TIMEOUT", "socket.HVSOCKET_CONNECT_TIMEOUT_MAX": "library/socket.html#socket.HVSOCKET_CONNECT_TIMEOUT_MAX", "socket.HVSOCKET_CONNECTED_SUSPEND": "library/socket.html#socket.HVSOCKET_CONNECTED_SUSPEND", "socket.if_indextoname()": "library/socket.html#socket.if_indextoname", "socket.if_nameindex()": "library/socket.html#socket.if_nameindex", "socket.if_nametoindex()": "library/socket.html#socket.if_nametoindex", "socket.inet_aton()": "library/socket.html#socket.inet_aton", "socket.inet_ntoa()": "library/socket.html#socket.inet_ntoa", "socket.inet_ntop()": "library/socket.html#socket.inet_ntop", "socket.inet_pton()": "library/socket.html#socket.inet_pton", "socket.IOCTL_VM_SOCKETS_GET_LOCAL_CID": "library/socket.html#socket.IOCTL_VM_SOCKETS_GET_LOCAL_CID", "socket.LOCAL_CREDS": "library/socket.html#socket.LOCAL_CREDS", "socket.LOCAL_CREDS_PERSISTENT": "library/socket.html#socket.LOCAL_CREDS_PERSISTENT", "socket.ntohl()": "library/socket.html#socket.ntohl", "socket.ntohs()": "library/socket.html#socket.ntohs", "socket.PF_CAN": "library/socket.html#socket.PF_CAN", "socket.PF_DIVERT": "library/socket.html#socket.PF_DIVERT", "socket.PF_PACKET": "library/socket.html#socket.PF_PACKET", "socket.PF_RDS": "library/socket.html#socket.PF_RDS", "socket.recv_fds()": "library/socket.html#socket.recv_fds", "socket.SCM_CREDS2": "library/socket.html#socket.SCM_CREDS2", "socket.send_fds()": "library/socket.html#socket.send_fds", "socket.setdefaulttimeout()": "library/socket.html#socket.setdefaulttimeout", "socket.sethostname()": "library/socket.html#socket.sethostname", "socket.SIO_KEEPALIVE_VALS": "library/socket.html#socket.SIO_KEEPALIVE_VALS", "socket.SIO_LOOPBACK_FAST_PATH": "library/socket.html#socket.SIO_LOOPBACK_FAST_PATH", "socket.SIO_RCVALL": "library/socket.html#socket.SIO_RCVALL", "socket.SO_INCOMING_CPU": "library/socket.html#socket.SO_INCOMING_CPU", "socket.SOCK_CLOEXEC": "library/socket.html#socket.SOCK_CLOEXEC", "socket.SOCK_DGRAM": "library/socket.html#socket.SOCK_DGRAM", "socket.SOCK_NONBLOCK": "library/socket.html#socket.SOCK_NONBLOCK", "socket.SOCK_RAW": "library/socket.html#socket.SOCK_RAW", "socket.SOCK_RDM": "library/socket.html#socket.SOCK_RDM", "socket.SOCK_SEQPACKET": "library/socket.html#socket.SOCK_SEQPACKET", "socket.SOCK_STREAM": "library/socket.html#socket.SOCK_STREAM", "socket.socket": "library/socket.html#socket.socket", "socket.socket.accept()": "library/socket.html#socket.socket.accept", "socket.socket.bind()": "library/socket.html#socket.socket.bind", "socket.socket.close()": "library/socket.html#socket.socket.close", "socket.socket.connect()": "library/socket.html#socket.socket.connect", "socket.socket.connect_ex()": "library/socket.html#socket.socket.connect_ex", "socket.socket.detach()": "library/socket.html#socket.socket.detach", "socket.socket.dup()": "library/socket.html#socket.socket.dup", "socket.socket.family": "library/socket.html#socket.socket.family", "socket.socket.fileno()": "library/socket.html#socket.socket.fileno", "socket.socket.get_inheritable()": "library/socket.html#socket.socket.get_inheritable", "socket.socket.getblocking()": "library/socket.html#socket.socket.getblocking", "socket.socket.getpeername()": "library/socket.html#socket.socket.getpeername", "socket.socket.getsockname()": "library/socket.html#socket.socket.getsockname", "socket.socket.getsockopt()": "library/socket.html#socket.socket.getsockopt", "socket.socket.gettimeout()": "library/socket.html#socket.socket.gettimeout", "socket.socket.ioctl()": "library/socket.html#socket.socket.ioctl", "socket.socket.listen()": "library/socket.html#socket.socket.listen", "socket.socket.makefile()": "library/socket.html#socket.socket.makefile", "socket.socket.proto": "library/socket.html#socket.socket.proto", "socket.socket.recv()": "library/socket.html#socket.socket.recv", "socket.socket.recv_into()": "library/socket.html#socket.socket.recv_into", "socket.socket.recvfrom()": "library/socket.html#socket.socket.recvfrom", "socket.socket.recvfrom_into()": "library/socket.html#socket.socket.recvfrom_into", "socket.socket.recvmsg()": "library/socket.html#socket.socket.recvmsg", "socket.socket.recvmsg_into()": "library/socket.html#socket.socket.recvmsg_into", "socket.socket.send()": "library/socket.html#socket.socket.send", "socket.socket.sendall()": "library/socket.html#socket.socket.sendall", "socket.socket.sendfile()": "library/socket.html#socket.socket.sendfile", "socket.socket.sendmsg()": "library/socket.html#socket.socket.sendmsg", "socket.socket.sendmsg_afalg()": "library/socket.html#socket.socket.sendmsg_afalg", "socket.socket.sendto()": "library/socket.html#socket.socket.sendto", "socket.socket.set_inheritable()": "library/socket.html#socket.socket.set_inheritable", "socket.socket.setblocking()": "library/socket.html#socket.socket.setblocking", "socket.socket.setsockopt()": "library/socket.html#socket.socket.setsockopt", "socket.socket.settimeout()": "library/socket.html#socket.socket.settimeout", "socket.socket.share()": "library/socket.html#socket.socket.share", "socket.socket.shutdown()": "library/socket.html#socket.socket.shutdown", "socket.socket.type": "library/socket.html#socket.socket.type", "socket.socketpair()": "library/socket.html#socket.socketpair", "socket.SocketType": "library/socket.html#socket.SocketType", "socket.SOL_ALG": "library/socket.html#socket.SOL_ALG", "socket.SOL_RDS": "library/socket.html#socket.SOL_RDS", "socket.SOMAXCONN": "library/socket.html#socket.SOMAXCONN", "socket.timeout": "library/socket.html#socket.timeout", "SocketHandler (logging.handlers)": "library/logging.handlers.html#sockethandler", "socketserver": "library/socketserver.html", "socketserver.BaseRequestHandler": "library/socketserver.html#socketserver.BaseRequestHandler", "socketserver.BaseRequestHandler.client_address": "library/socketserver.html#socketserver.BaseRequestHandler.client_address", "socketserver.BaseRequestHandler.finish()": "library/socketserver.html#socketserver.BaseRequestHandler.finish", "socketserver.BaseRequestHandler.handle()": "library/socketserver.html#socketserver.BaseRequestHandler.handle", "socketserver.BaseRequestHandler.request": "library/socketserver.html#socketserver.BaseRequestHandler.request", "socketserver.BaseRequestHandler.server": "library/socketserver.html#socketserver.BaseRequestHandler.server", "socketserver.BaseRequestHandler.setup()": "library/socketserver.html#socketserver.BaseRequestHandler.setup", "socketserver.BaseServer": "library/socketserver.html#socketserver.BaseServer", "socketserver.BaseServer.address_family": "library/socketserver.html#socketserver.BaseServer.address_family", "socketserver.BaseServer.allow_reuse_address": "library/socketserver.html#socketserver.BaseServer.allow_reuse_address", "socketserver.BaseServer.fileno()": "library/socketserver.html#socketserver.BaseServer.fileno", "socketserver.BaseServer.finish_request()": "library/socketserver.html#socketserver.BaseServer.finish_request", "socketserver.BaseServer.get_request()": "library/socketserver.html#socketserver.BaseServer.get_request", "socketserver.BaseServer.handle_error()": "library/socketserver.html#socketserver.BaseServer.handle_error", "socketserver.BaseServer.handle_request()": "library/socketserver.html#socketserver.BaseServer.handle_request", "socketserver.BaseServer.handle_timeout()": "library/socketserver.html#socketserver.BaseServer.handle_timeout", "socketserver.BaseServer.process_request()": "library/socketserver.html#socketserver.BaseServer.process_request", "socketserver.BaseServer.request_queue_size": "library/socketserver.html#socketserver.BaseServer.request_queue_size", "socketserver.BaseServer.RequestHandlerClass": "library/socketserver.html#socketserver.BaseServer.RequestHandlerClass", "socketserver.BaseServer.serve_forever()": "library/socketserver.html#socketserver.BaseServer.serve_forever", "socketserver.BaseServer.server_activate()": "library/socketserver.html#socketserver.BaseServer.server_activate", "socketserver.BaseServer.server_address": "library/socketserver.html#socketserver.BaseServer.server_address", "socketserver.BaseServer.server_bind()": "library/socketserver.html#socketserver.BaseServer.server_bind", "socketserver.BaseServer.server_close()": "library/socketserver.html#socketserver.BaseServer.server_close", "socketserver.BaseServer.service_actions()": "library/socketserver.html#socketserver.BaseServer.service_actions", "socketserver.BaseServer.shutdown()": "library/socketserver.html#socketserver.BaseServer.shutdown", "socketserver.BaseServer.socket": "library/socketserver.html#socketserver.BaseServer.socket", "socketserver.BaseServer.socket_type": "library/socketserver.html#socketserver.BaseServer.socket_type", "socketserver.BaseServer.timeout": "library/socketserver.html#socketserver.BaseServer.timeout", "socketserver.BaseServer.verify_request()": "library/socketserver.html#socketserver.BaseServer.verify_request", "socketserver.DatagramRequestHandler": "library/socketserver.html#socketserver.DatagramRequestHandler", "socketserver.DatagramRequestHandler.rfile": "library/socketserver.html#socketserver.DatagramRequestHandler.rfile", "socketserver.DatagramRequestHandler.wfile": "library/socketserver.html#socketserver.DatagramRequestHandler.wfile", "socketserver.ForkingMixIn": "library/socketserver.html#socketserver.ForkingMixIn", "socketserver.ForkingTCPServer": "library/socketserver.html#socketserver.ForkingTCPServer", "socketserver.ForkingUDPServer": "library/socketserver.html#socketserver.ForkingUDPServer", "socketserver.ForkingUnixDatagramServer": "library/socketserver.html#socketserver.ForkingUnixDatagramServer", "socketserver.ForkingUnixStreamServer": "library/socketserver.html#socketserver.ForkingUnixStreamServer", "socketserver.StreamRequestHandler": "library/socketserver.html#socketserver.StreamRequestHandler", "socketserver.TCPServer": "library/socketserver.html#socketserver.TCPServer", "socketserver.ThreadingMixIn": "library/socketserver.html#socketserver.ThreadingMixIn", "socketserver.ThreadingMixIn.block_on_close": "library/socketserver.html#socketserver.ThreadingMixIn.block_on_close", "socketserver.ThreadingMixIn.daemon_threads": "library/socketserver.html#socketserver.ThreadingMixIn.daemon_threads", "socketserver.ThreadingTCPServer": "library/socketserver.html#socketserver.ThreadingTCPServer", "socketserver.ThreadingUDPServer": "library/socketserver.html#socketserver.ThreadingUDPServer", "socketserver.ThreadingUnixDatagramServer": "library/socketserver.html#socketserver.ThreadingUnixDatagramServer", "socketserver.ThreadingUnixStreamServer": "library/socketserver.html#socketserver.ThreadingUnixStreamServer", "socketserver.UDPServer": "library/socketserver.html#socketserver.UDPServer", "socketserver.UnixDatagramServer": "library/socketserver.html#socketserver.UnixDatagramServer", "socketserver.UnixStreamServer": "library/socketserver.html#socketserver.UnixStreamServer", "soft deprecated": "glossary.html#term-soft-deprecated", "Software Packaging and Distribution": "library/distribution.html", "sorted()": "library/functions.html#sorted", "Sorting Techniques": "howto/sorting.html", "spec__": "reference/import.html#spec__", "Special Attributes (Types)": "library/stdtypes.html#special-attributes", "Special functions (math)": "library/math.html#special-functions", "special method": "glossary.html#term-special-method", "Specification for the Python Type System (typing)": "library/typing.html#specification-for-the-python-type-system", "Specifying custom filter chains (lzma)": "library/lzma.html#specifying-custom-filter-chains", "Specifying the Interpreter (zipapp)": "library/zipapp.html#specifying-the-interpreter", "Spinbox (tkinter.ttk)": "library/tkinter.ttk.html#spinbox", "sqlite3": "library/sqlite3.html", "sqlite3.apilevel": "library/sqlite3.html#sqlite3.apilevel", "sqlite3.Blob": "library/sqlite3.html#sqlite3.Blob", "sqlite3.Blob.close()": "library/sqlite3.html#sqlite3.Blob.close", "sqlite3.Blob.read()": "library/sqlite3.html#sqlite3.Blob.read", "sqlite3.Blob.seek()": "library/sqlite3.html#sqlite3.Blob.seek", "sqlite3.Blob.tell()": "library/sqlite3.html#sqlite3.Blob.tell", "sqlite3.Blob.write()": "library/sqlite3.html#sqlite3.Blob.write", "sqlite3.complete_statement()": "library/sqlite3.html#sqlite3.complete_statement", "sqlite3.connect()": "library/sqlite3.html#sqlite3.connect", "sqlite3.Connection": "library/sqlite3.html#sqlite3.Connection", "sqlite3.Connection.autocommit": "library/sqlite3.html#sqlite3.Connection.autocommit", "sqlite3.Connection.backup()": "library/sqlite3.html#sqlite3.Connection.backup", "sqlite3.Connection.blobopen()": "library/sqlite3.html#sqlite3.Connection.blobopen", "sqlite3.Connection.close()": "library/sqlite3.html#sqlite3.Connection.close", "sqlite3.Connection.commit()": "library/sqlite3.html#sqlite3.Connection.commit", "sqlite3.Connection.create_aggregate()": "library/sqlite3.html#sqlite3.Connection.create_aggregate", "sqlite3.Connection.create_collation()": "library/sqlite3.html#sqlite3.Connection.create_collation", "sqlite3.Connection.create_function()": "library/sqlite3.html#sqlite3.Connection.create_function", "sqlite3.Connection.create_window_function()": "library/sqlite3.html#sqlite3.Connection.create_window_function", "sqlite3.Connection.cursor()": "library/sqlite3.html#sqlite3.Connection.cursor", "sqlite3.Connection.deserialize()": "library/sqlite3.html#sqlite3.Connection.deserialize", "sqlite3.Connection.enable_load_extension()": "library/sqlite3.html#sqlite3.Connection.enable_load_extension", "sqlite3.Connection.execute()": "library/sqlite3.html#sqlite3.Connection.execute", "sqlite3.Connection.executemany()": "library/sqlite3.html#sqlite3.Connection.executemany", "sqlite3.Connection.executescript()": "library/sqlite3.html#sqlite3.Connection.executescript", "sqlite3.Connection.getconfig()": "library/sqlite3.html#sqlite3.Connection.getconfig", "sqlite3.Connection.getlimit()": "library/sqlite3.html#sqlite3.Connection.getlimit", "sqlite3.Connection.in_transaction": "library/sqlite3.html#sqlite3.Connection.in_transaction", "sqlite3.Connection.interrupt()": "library/sqlite3.html#sqlite3.Connection.interrupt", "sqlite3.Connection.isolation_level": "library/sqlite3.html#sqlite3.Connection.isolation_level", "sqlite3.Connection.iterdump()": "library/sqlite3.html#sqlite3.Connection.iterdump", "sqlite3.Connection.load_extension()": "library/sqlite3.html#sqlite3.Connection.load_extension", "sqlite3.Connection.rollback()": "library/sqlite3.html#sqlite3.Connection.rollback", "sqlite3.Connection.row_factory": "library/sqlite3.html#sqlite3.Connection.row_factory", "sqlite3.Connection.serialize()": "library/sqlite3.html#sqlite3.Connection.serialize", "sqlite3.Connection.set_authorizer()": "library/sqlite3.html#sqlite3.Connection.set_authorizer", "sqlite3.Connection.set_progress_handler()": "library/sqlite3.html#sqlite3.Connection.set_progress_handler", "sqlite3.Connection.set_trace_callback()": "library/sqlite3.html#sqlite3.Connection.set_trace_callback", "sqlite3.Connection.setconfig()": "library/sqlite3.html#sqlite3.Connection.setconfig", "sqlite3.Connection.setlimit()": "library/sqlite3.html#sqlite3.Connection.setlimit", "sqlite3.Connection.text_factory": "library/sqlite3.html#sqlite3.Connection.text_factory", "sqlite3.Connection.total_changes": "library/sqlite3.html#sqlite3.Connection.total_changes", "sqlite3.Cursor": "library/sqlite3.html#sqlite3.Cursor", "sqlite3.Cursor.arraysize": "library/sqlite3.html#sqlite3.Cursor.arraysize", "sqlite3.Cursor.close()": "library/sqlite3.html#sqlite3.Cursor.close", "sqlite3.Cursor.connection": "library/sqlite3.html#sqlite3.Cursor.connection", "sqlite3.Cursor.description": "library/sqlite3.html#sqlite3.Cursor.description", "sqlite3.Cursor.execute()": "library/sqlite3.html#sqlite3.Cursor.execute", "sqlite3.Cursor.executemany()": "library/sqlite3.html#sqlite3.Cursor.executemany", "sqlite3.Cursor.executescript()": "library/sqlite3.html#sqlite3.Cursor.executescript", "sqlite3.Cursor.fetchall()": "library/sqlite3.html#sqlite3.Cursor.fetchall", "sqlite3.Cursor.fetchmany()": "library/sqlite3.html#sqlite3.Cursor.fetchmany", "sqlite3.Cursor.fetchone()": "library/sqlite3.html#sqlite3.Cursor.fetchone", "sqlite3.Cursor.lastrowid": "library/sqlite3.html#sqlite3.Cursor.lastrowid", "sqlite3.Cursor.row_factory": "library/sqlite3.html#sqlite3.Cursor.row_factory", "sqlite3.Cursor.rowcount": "library/sqlite3.html#sqlite3.Cursor.rowcount", "sqlite3.Cursor.setinputsizes()": "library/sqlite3.html#sqlite3.Cursor.setinputsizes", "sqlite3.Cursor.setoutputsize()": "library/sqlite3.html#sqlite3.Cursor.setoutputsize", "sqlite3.DatabaseError": "library/sqlite3.html#sqlite3.DatabaseError", "sqlite3.DataError": "library/sqlite3.html#sqlite3.DataError", "sqlite3.enable_callback_tracebacks()": "library/sqlite3.html#sqlite3.enable_callback_tracebacks", "sqlite3.Error": "library/sqlite3.html#sqlite3.Error", "sqlite3.Error.sqlite_errorcode": "library/sqlite3.html#sqlite3.Error.sqlite_errorcode", "sqlite3.Error.sqlite_errorname": "library/sqlite3.html#sqlite3.Error.sqlite_errorname", "sqlite3.IntegrityError": "library/sqlite3.html#sqlite3.IntegrityError", "sqlite3.InterfaceError": "library/sqlite3.html#sqlite3.InterfaceError", "sqlite3.InternalError": "library/sqlite3.html#sqlite3.InternalError", "sqlite3.LEGACY_TRANSACTION_CONTROL": "library/sqlite3.html#sqlite3.LEGACY_TRANSACTION_CONTROL", "sqlite3.NotSupportedError": "library/sqlite3.html#sqlite3.NotSupportedError", "sqlite3.OperationalError": "library/sqlite3.html#sqlite3.OperationalError", "sqlite3.paramstyle": "library/sqlite3.html#sqlite3.paramstyle", "sqlite3.PARSE_COLNAMES": "library/sqlite3.html#sqlite3.PARSE_COLNAMES", "sqlite3.PARSE_DECLTYPES": "library/sqlite3.html#sqlite3.PARSE_DECLTYPES", "sqlite3.PrepareProtocol": "library/sqlite3.html#sqlite3.PrepareProtocol", "sqlite3.ProgrammingError": "library/sqlite3.html#sqlite3.ProgrammingError", "sqlite3.register_adapter()": "library/sqlite3.html#sqlite3.register_adapter", "sqlite3.register_converter()": "library/sqlite3.html#sqlite3.register_converter", "sqlite3.Row": "library/sqlite3.html#sqlite3.Row", "sqlite3.Row.keys()": "library/sqlite3.html#sqlite3.Row.keys", "sqlite3.SQLITE_DBCONFIG_DEFENSIVE": "library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_DEFENSIVE", "sqlite3.SQLITE_DBCONFIG_DQS_DDL": "library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_DQS_DDL", "sqlite3.SQLITE_DBCONFIG_DQS_DML": "library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_DQS_DML", "sqlite3.SQLITE_DBCONFIG_ENABLE_FKEY": "library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_ENABLE_FKEY", "sqlite3.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER": "library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER", "sqlite3.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION": "library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION", "sqlite3.SQLITE_DBCONFIG_ENABLE_QPSG": "library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_ENABLE_QPSG", "sqlite3.SQLITE_DBCONFIG_ENABLE_TRIGGER": "library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_ENABLE_TRIGGER", "sqlite3.SQLITE_DBCONFIG_ENABLE_VIEW": "library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_ENABLE_VIEW", "sqlite3.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE": "library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE", "sqlite3.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT": "library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT", "sqlite3.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE": "library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE", "sqlite3.SQLITE_DBCONFIG_RESET_DATABASE": "library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_RESET_DATABASE", "sqlite3.SQLITE_DBCONFIG_TRIGGER_EQP": "library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_TRIGGER_EQP", "sqlite3.SQLITE_DBCONFIG_TRUSTED_SCHEMA": "library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_TRUSTED_SCHEMA", "sqlite3.SQLITE_DBCONFIG_WRITABLE_SCHEMA": "library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_WRITABLE_SCHEMA", "sqlite3.SQLITE_DENY": "library/sqlite3.html#sqlite3.SQLITE_DENY", "sqlite3.SQLITE_IGNORE": "library/sqlite3.html#sqlite3.SQLITE_IGNORE", "sqlite3.SQLITE_OK": "library/sqlite3.html#sqlite3.SQLITE_OK", "sqlite3.sqlite_version": "library/sqlite3.html#sqlite3.sqlite_version", "sqlite3.sqlite_version_info": "library/sqlite3.html#sqlite3.sqlite_version_info", "sqlite3.threadsafety": "library/sqlite3.html#sqlite3.threadsafety", "sqlite3.version": "library/sqlite3.html#sqlite3.version", "sqlite3.version_info": "library/sqlite3.html#sqlite3.version_info", "sqlite3.Warning": "library/sqlite3.html#sqlite3.Warning", "ssl": "library/ssl.html", "SSL Contexts (ssl)": "library/ssl.html#ssl-contexts", "SSL session (ssl)": "library/ssl.html#ssl-session", "SSL Sockets (ssl)": "library/ssl.html#ssl-sockets", "ssl.ALERT_DESCRIPTION_HANDSHAKE_FAILURE": "library/ssl.html#ssl.ALERT_DESCRIPTION_HANDSHAKE_FAILURE", "ssl.ALERT_DESCRIPTION_INTERNAL_ERROR": "library/ssl.html#ssl.ALERT_DESCRIPTION_INTERNAL_ERROR", "ssl.AlertDescription": "library/ssl.html#ssl.AlertDescription", "ssl.CERT_NONE": "library/ssl.html#ssl.CERT_NONE", "ssl.CERT_OPTIONAL": "library/ssl.html#ssl.CERT_OPTIONAL", "ssl.CERT_REQUIRED": "library/ssl.html#ssl.CERT_REQUIRED", "ssl.cert_time_to_seconds()": "library/ssl.html#ssl.cert_time_to_seconds", "ssl.CertificateError": "library/ssl.html#ssl.CertificateError", "ssl.CHANNEL_BINDING_TYPES": "library/ssl.html#ssl.CHANNEL_BINDING_TYPES", "ssl.create_default_context()": "library/ssl.html#ssl.create_default_context", "ssl.DER_cert_to_PEM_cert()": "library/ssl.html#ssl.DER_cert_to_PEM_cert", "ssl.enum_certificates()": "library/ssl.html#ssl.enum_certificates", "ssl.enum_crls()": "library/ssl.html#ssl.enum_crls", "ssl.get_default_verify_paths()": "library/ssl.html#ssl.get_default_verify_paths", "ssl.get_server_certificate()": "library/ssl.html#ssl.get_server_certificate", "ssl.HAS_ALPN": "library/ssl.html#ssl.HAS_ALPN", "ssl.HAS_ECDH": "library/ssl.html#ssl.HAS_ECDH", "ssl.HAS_NEVER_CHECK_COMMON_NAME": "library/ssl.html#ssl.HAS_NEVER_CHECK_COMMON_NAME", "ssl.HAS_NPN": "library/ssl.html#ssl.HAS_NPN", "ssl.HAS_PSK": "library/ssl.html#ssl.HAS_PSK", "ssl.HAS_SNI": "library/ssl.html#ssl.HAS_SNI", "ssl.HAS_SSLv2": "library/ssl.html#ssl.HAS_SSLv2", "ssl.HAS_SSLv3": "library/ssl.html#ssl.HAS_SSLv3", "ssl.HAS_TLSv1": "library/ssl.html#ssl.HAS_TLSv1", "ssl.HAS_TLSv1_1": "library/ssl.html#ssl.HAS_TLSv1_1", "ssl.HAS_TLSv1_2": "library/ssl.html#ssl.HAS_TLSv1_2", "ssl.HAS_TLSv1_3": "library/ssl.html#ssl.HAS_TLSv1_3", "ssl.MemoryBIO": "library/ssl.html#ssl.MemoryBIO", "ssl.MemoryBIO.eof": "library/ssl.html#ssl.MemoryBIO.eof", "ssl.MemoryBIO.pending": "library/ssl.html#ssl.MemoryBIO.pending", "ssl.MemoryBIO.read()": "library/ssl.html#ssl.MemoryBIO.read", "ssl.MemoryBIO.write()": "library/ssl.html#ssl.MemoryBIO.write", "ssl.MemoryBIO.write_eof()": "library/ssl.html#ssl.MemoryBIO.write_eof", "ssl.OP_ALL": "library/ssl.html#ssl.OP_ALL", "ssl.OP_CIPHER_SERVER_PREFERENCE": "library/ssl.html#ssl.OP_CIPHER_SERVER_PREFERENCE", "ssl.OP_ENABLE_KTLS": "library/ssl.html#ssl.OP_ENABLE_KTLS", "ssl.OP_ENABLE_MIDDLEBOX_COMPAT": "library/ssl.html#ssl.OP_ENABLE_MIDDLEBOX_COMPAT", "ssl.OP_IGNORE_UNEXPECTED_EOF": "library/ssl.html#ssl.OP_IGNORE_UNEXPECTED_EOF", "ssl.OP_LEGACY_SERVER_CONNECT": "library/ssl.html#ssl.OP_LEGACY_SERVER_CONNECT", "ssl.OP_NO_COMPRESSION": "library/ssl.html#ssl.OP_NO_COMPRESSION", "ssl.OP_NO_RENEGOTIATION": "library/ssl.html#ssl.OP_NO_RENEGOTIATION", "ssl.OP_NO_SSLv2": "library/ssl.html#ssl.OP_NO_SSLv2", "ssl.OP_NO_SSLv3": "library/ssl.html#ssl.OP_NO_SSLv3", "ssl.OP_NO_TICKET": "library/ssl.html#ssl.OP_NO_TICKET", "ssl.OP_NO_TLSv1": "library/ssl.html#ssl.OP_NO_TLSv1", "ssl.OP_NO_TLSv1_1": "library/ssl.html#ssl.OP_NO_TLSv1_1", "ssl.OP_NO_TLSv1_2": "library/ssl.html#ssl.OP_NO_TLSv1_2", "ssl.OP_NO_TLSv1_3": "library/ssl.html#ssl.OP_NO_TLSv1_3", "ssl.OP_SINGLE_DH_USE": "library/ssl.html#ssl.OP_SINGLE_DH_USE", "ssl.OP_SINGLE_ECDH_USE": "library/ssl.html#ssl.OP_SINGLE_ECDH_USE", "ssl.OPENSSL_VERSION": "library/ssl.html#ssl.OPENSSL_VERSION", "ssl.OPENSSL_VERSION_INFO": "library/ssl.html#ssl.OPENSSL_VERSION_INFO", "ssl.OPENSSL_VERSION_NUMBER": "library/ssl.html#ssl.OPENSSL_VERSION_NUMBER", "ssl.Options": "library/ssl.html#ssl.Options", "ssl.PEM_cert_to_DER_cert()": "library/ssl.html#ssl.PEM_cert_to_DER_cert", "ssl.PROTOCOL_SSLv23": "library/ssl.html#ssl.PROTOCOL_SSLv23", "ssl.PROTOCOL_SSLv3": "library/ssl.html#ssl.PROTOCOL_SSLv3", "ssl.PROTOCOL_TLS": "library/ssl.html#ssl.PROTOCOL_TLS", "ssl.PROTOCOL_TLS_CLIENT": "library/ssl.html#ssl.PROTOCOL_TLS_CLIENT", "ssl.PROTOCOL_TLS_SERVER": "library/ssl.html#ssl.PROTOCOL_TLS_SERVER", "ssl.PROTOCOL_TLSv1": "library/ssl.html#ssl.PROTOCOL_TLSv1", "ssl.PROTOCOL_TLSv1_1": "library/ssl.html#ssl.PROTOCOL_TLSv1_1", "ssl.PROTOCOL_TLSv1_2": "library/ssl.html#ssl.PROTOCOL_TLSv1_2", "ssl.Purpose.CLIENT_AUTH": "library/ssl.html#ssl.Purpose.CLIENT_AUTH", "ssl.Purpose.SERVER_AUTH": "library/ssl.html#ssl.Purpose.SERVER_AUTH", "ssl.RAND_add()": "library/ssl.html#ssl.RAND_add", "ssl.RAND_bytes()": "library/ssl.html#ssl.RAND_bytes", "ssl.RAND_status()": "library/ssl.html#ssl.RAND_status", "ssl.SSLCertVerificationError": "library/ssl.html#ssl.SSLCertVerificationError", "ssl.SSLCertVerificationError.verify_code": "library/ssl.html#ssl.SSLCertVerificationError.verify_code", "ssl.SSLCertVerificationError.verify_message": "library/ssl.html#ssl.SSLCertVerificationError.verify_message", "ssl.SSLContext": "library/ssl.html#ssl.SSLContext", "ssl.SSLContext.cert_store_stats()": "library/ssl.html#ssl.SSLContext.cert_store_stats", "ssl.SSLContext.check_hostname": "library/ssl.html#ssl.SSLContext.check_hostname", "ssl.SSLContext.get_ca_certs()": "library/ssl.html#ssl.SSLContext.get_ca_certs", "ssl.SSLContext.get_ciphers()": "library/ssl.html#ssl.SSLContext.get_ciphers", "ssl.SSLContext.hostname_checks_common_name": "library/ssl.html#ssl.SSLContext.hostname_checks_common_name", "ssl.SSLContext.keylog_filename": "library/ssl.html#ssl.SSLContext.keylog_filename", "ssl.SSLContext.load_cert_chain()": "library/ssl.html#ssl.SSLContext.load_cert_chain", "ssl.SSLContext.load_default_certs()": "library/ssl.html#ssl.SSLContext.load_default_certs", "ssl.SSLContext.load_dh_params()": "library/ssl.html#ssl.SSLContext.load_dh_params", "ssl.SSLContext.load_verify_locations()": "library/ssl.html#ssl.SSLContext.load_verify_locations", "ssl.SSLContext.maximum_version": "library/ssl.html#ssl.SSLContext.maximum_version", "ssl.SSLContext.minimum_version": "library/ssl.html#ssl.SSLContext.minimum_version", "ssl.SSLContext.num_tickets": "library/ssl.html#ssl.SSLContext.num_tickets", "ssl.SSLContext.options": "library/ssl.html#ssl.SSLContext.options", "ssl.SSLContext.post_handshake_auth": "library/ssl.html#ssl.SSLContext.post_handshake_auth", "ssl.SSLContext.protocol": "library/ssl.html#ssl.SSLContext.protocol", "ssl.SSLContext.security_level": "library/ssl.html#ssl.SSLContext.security_level", "ssl.SSLContext.session_stats()": "library/ssl.html#ssl.SSLContext.session_stats", "ssl.SSLContext.set_alpn_protocols()": "library/ssl.html#ssl.SSLContext.set_alpn_protocols", "ssl.SSLContext.set_ciphers()": "library/ssl.html#ssl.SSLContext.set_ciphers", "ssl.SSLContext.set_default_verify_paths()": "library/ssl.html#ssl.SSLContext.set_default_verify_paths", "ssl.SSLContext.set_ecdh_curve()": "library/ssl.html#ssl.SSLContext.set_ecdh_curve", "ssl.SSLContext.set_npn_protocols()": "library/ssl.html#ssl.SSLContext.set_npn_protocols", "ssl.SSLContext.set_psk_client_callback()": "library/ssl.html#ssl.SSLContext.set_psk_client_callback", "ssl.SSLContext.set_psk_server_callback()": "library/ssl.html#ssl.SSLContext.set_psk_server_callback", "ssl.SSLContext.set_servername_callback": "library/ssl.html#ssl.SSLContext.set_servername_callback", "ssl.SSLContext.sni_callback": "library/ssl.html#ssl.SSLContext.sni_callback", "ssl.SSLContext.sslobject_class": "library/ssl.html#ssl.SSLContext.sslobject_class", "ssl.SSLContext.sslsocket_class": "library/ssl.html#ssl.SSLContext.sslsocket_class", "ssl.SSLContext.verify_flags": "library/ssl.html#ssl.SSLContext.verify_flags", "ssl.SSLContext.verify_mode": "library/ssl.html#ssl.SSLContext.verify_mode", "ssl.SSLContext.wrap_bio()": "library/ssl.html#ssl.SSLContext.wrap_bio", "ssl.SSLContext.wrap_socket()": "library/ssl.html#ssl.SSLContext.wrap_socket", "ssl.SSLEOFError": "library/ssl.html#ssl.SSLEOFError", "ssl.SSLError": "library/ssl.html#ssl.SSLError", "ssl.SSLError.library": "library/ssl.html#ssl.SSLError.library", "ssl.SSLError.reason": "library/ssl.html#ssl.SSLError.reason", "ssl.SSLErrorNumber": "library/ssl.html#ssl.SSLErrorNumber", "ssl.SSLObject": "library/ssl.html#ssl.SSLObject", "ssl.SSLSession": "library/ssl.html#ssl.SSLSession", "ssl.SSLSession.has_ticket": "library/ssl.html#ssl.SSLSession.has_ticket", "ssl.SSLSession.id": "library/ssl.html#ssl.SSLSession.id", "ssl.SSLSession.ticket_lifetime_hint": "library/ssl.html#ssl.SSLSession.ticket_lifetime_hint", "ssl.SSLSession.time": "library/ssl.html#ssl.SSLSession.time", "ssl.SSLSession.timeout": "library/ssl.html#ssl.SSLSession.timeout", "ssl.SSLSocket": "library/ssl.html#ssl.SSLSocket", "ssl.SSLSocket.cipher()": "library/ssl.html#ssl.SSLSocket.cipher", "ssl.SSLSocket.compression()": "library/ssl.html#ssl.SSLSocket.compression", "ssl.SSLSocket.context": "library/ssl.html#ssl.SSLSocket.context", "ssl.SSLSocket.do_handshake()": "library/ssl.html#ssl.SSLSocket.do_handshake", "ssl.SSLSocket.get_channel_binding()": "library/ssl.html#ssl.SSLSocket.get_channel_binding", "ssl.SSLSocket.get_unverified_chain()": "library/ssl.html#ssl.SSLSocket.get_unverified_chain", "ssl.SSLSocket.get_verified_chain()": "library/ssl.html#ssl.SSLSocket.get_verified_chain", "ssl.SSLSocket.getpeercert()": "library/ssl.html#ssl.SSLSocket.getpeercert", "ssl.SSLSocket.pending()": "library/ssl.html#ssl.SSLSocket.pending", "ssl.SSLSocket.read()": "library/ssl.html#ssl.SSLSocket.read", "ssl.SSLSocket.selected_alpn_protocol()": "library/ssl.html#ssl.SSLSocket.selected_alpn_protocol", "ssl.SSLSocket.selected_npn_protocol()": "library/ssl.html#ssl.SSLSocket.selected_npn_protocol", "ssl.SSLSocket.server_hostname": "library/ssl.html#ssl.SSLSocket.server_hostname", "ssl.SSLSocket.server_side": "library/ssl.html#ssl.SSLSocket.server_side", "ssl.SSLSocket.session": "library/ssl.html#ssl.SSLSocket.session", "ssl.SSLSocket.session_reused": "library/ssl.html#ssl.SSLSocket.session_reused", "ssl.SSLSocket.shared_ciphers()": "library/ssl.html#ssl.SSLSocket.shared_ciphers", "ssl.SSLSocket.unwrap()": "library/ssl.html#ssl.SSLSocket.unwrap", "ssl.SSLSocket.verify_client_post_handshake()": "library/ssl.html#ssl.SSLSocket.verify_client_post_handshake", "ssl.SSLSocket.version()": "library/ssl.html#ssl.SSLSocket.version", "ssl.SSLSocket.write()": "library/ssl.html#ssl.SSLSocket.write", "ssl.SSLSyscallError": "library/ssl.html#ssl.SSLSyscallError", "ssl.SSLWantReadError": "library/ssl.html#ssl.SSLWantReadError", "ssl.SSLWantWriteError": "library/ssl.html#ssl.SSLWantWriteError", "ssl.SSLZeroReturnError": "library/ssl.html#ssl.SSLZeroReturnError", "ssl.TLSVersion": "library/ssl.html#ssl.TLSVersion", "ssl.TLSVersion.MAXIMUM_SUPPORTED": "library/ssl.html#ssl.TLSVersion.MAXIMUM_SUPPORTED", "ssl.TLSVersion.MINIMUM_SUPPORTED": "library/ssl.html#ssl.TLSVersion.MINIMUM_SUPPORTED", "ssl.TLSVersion.SSLv3": "library/ssl.html#ssl.TLSVersion.SSLv3", "ssl.TLSVersion.TLSv1": "library/ssl.html#ssl.TLSVersion.TLSv1", "ssl.TLSVersion.TLSv1_1": "library/ssl.html#ssl.TLSVersion.TLSv1_1", "ssl.TLSVersion.TLSv1_2": "library/ssl.html#ssl.TLSVersion.TLSv1_2", "ssl.TLSVersion.TLSv1_3": "library/ssl.html#ssl.TLSVersion.TLSv1_3", "ssl.VERIFY_ALLOW_PROXY_CERTS": "library/ssl.html#ssl.VERIFY_ALLOW_PROXY_CERTS", "ssl.VERIFY_CRL_CHECK_CHAIN": "library/ssl.html#ssl.VERIFY_CRL_CHECK_CHAIN", "ssl.VERIFY_CRL_CHECK_LEAF": "library/ssl.html#ssl.VERIFY_CRL_CHECK_LEAF", "ssl.VERIFY_DEFAULT": "library/ssl.html#ssl.VERIFY_DEFAULT", "ssl.VERIFY_X509_PARTIAL_CHAIN": "library/ssl.html#ssl.VERIFY_X509_PARTIAL_CHAIN", "ssl.VERIFY_X509_STRICT": "library/ssl.html#ssl.VERIFY_X509_STRICT", "ssl.VERIFY_X509_TRUSTED_FIRST": "library/ssl.html#ssl.VERIFY_X509_TRUSTED_FIRST", "ssl.VerifyFlags": "library/ssl.html#ssl.VerifyFlags", "ssl.VerifyMode": "library/ssl.html#ssl.VerifyMode", "StackSummary Objects (traceback)": "library/traceback.html#stacksummary-objects", "standard (output)": "reference/simple_stmts.html#index-3", "Standard Compliance and Interoperability (json)": "library/json.html#standard-compliance-and-interoperability", "Standard Encodings (codecs)": "library/codecs.html#standard-encodings", "Standard Interpreter Types (types)": "library/types.html#standard-interpreter-types", "Startup and Code Execution (IDLE)": "library/idle.html#startup-and-code-execution", "Startup hooks (readline)": "library/readline.html#startup-hooks", "stat": "library/stat.html", "stat.FILE_ATTRIBUTE_ARCHIVE": "library/stat.html#stat.FILE_ATTRIBUTE_ARCHIVE", "stat.FILE_ATTRIBUTE_COMPRESSED": "library/stat.html#stat.FILE_ATTRIBUTE_COMPRESSED", "stat.FILE_ATTRIBUTE_DEVICE": "library/stat.html#stat.FILE_ATTRIBUTE_DEVICE", "stat.FILE_ATTRIBUTE_DIRECTORY": "library/stat.html#stat.FILE_ATTRIBUTE_DIRECTORY", "stat.FILE_ATTRIBUTE_ENCRYPTED": "library/stat.html#stat.FILE_ATTRIBUTE_ENCRYPTED", "stat.FILE_ATTRIBUTE_HIDDEN": "library/stat.html#stat.FILE_ATTRIBUTE_HIDDEN", "stat.FILE_ATTRIBUTE_INTEGRITY_STREAM": "library/stat.html#stat.FILE_ATTRIBUTE_INTEGRITY_STREAM", "stat.FILE_ATTRIBUTE_NO_SCRUB_DATA": "library/stat.html#stat.FILE_ATTRIBUTE_NO_SCRUB_DATA", "stat.FILE_ATTRIBUTE_NORMAL": "library/stat.html#stat.FILE_ATTRIBUTE_NORMAL", "stat.FILE_ATTRIBUTE_NOT_CONTENT_INDEXED": "library/stat.html#stat.FILE_ATTRIBUTE_NOT_CONTENT_INDEXED", "stat.FILE_ATTRIBUTE_OFFLINE": "library/stat.html#stat.FILE_ATTRIBUTE_OFFLINE", "stat.FILE_ATTRIBUTE_READONLY": "library/stat.html#stat.FILE_ATTRIBUTE_READONLY", "stat.FILE_ATTRIBUTE_REPARSE_POINT": "library/stat.html#stat.FILE_ATTRIBUTE_REPARSE_POINT", "stat.FILE_ATTRIBUTE_SPARSE_FILE": "library/stat.html#stat.FILE_ATTRIBUTE_SPARSE_FILE", "stat.FILE_ATTRIBUTE_SYSTEM": "library/stat.html#stat.FILE_ATTRIBUTE_SYSTEM", "stat.FILE_ATTRIBUTE_TEMPORARY": "library/stat.html#stat.FILE_ATTRIBUTE_TEMPORARY", "stat.FILE_ATTRIBUTE_VIRTUAL": "library/stat.html#stat.FILE_ATTRIBUTE_VIRTUAL", "stat.filemode()": "library/stat.html#stat.filemode", "stat.IO_REPARSE_TAG_APPEXECLINK": "library/stat.html#stat.IO_REPARSE_TAG_APPEXECLINK", "stat.IO_REPARSE_TAG_MOUNT_POINT": "library/stat.html#stat.IO_REPARSE_TAG_MOUNT_POINT", "stat.IO_REPARSE_TAG_SYMLINK": "library/stat.html#stat.IO_REPARSE_TAG_SYMLINK", "stat.S_ENFMT": "library/stat.html#stat.S_ENFMT", "stat.S_IEXEC": "library/stat.html#stat.S_IEXEC", "stat.S_IFBLK": "library/stat.html#stat.S_IFBLK", "stat.S_IFCHR": "library/stat.html#stat.S_IFCHR", "stat.S_IFDIR": "library/stat.html#stat.S_IFDIR", "stat.S_IFDOOR": "library/stat.html#stat.S_IFDOOR", "stat.S_IFIFO": "library/stat.html#stat.S_IFIFO", "stat.S_IFLNK": "library/stat.html#stat.S_IFLNK", "stat.S_IFMT()": "library/stat.html#stat.S_IFMT", "stat.S_IFPORT": "library/stat.html#stat.S_IFPORT", "stat.S_IFREG": "library/stat.html#stat.S_IFREG", "stat.S_IFSOCK": "library/stat.html#stat.S_IFSOCK", "stat.S_IFWHT": "library/stat.html#stat.S_IFWHT", "stat.S_IMODE()": "library/stat.html#stat.S_IMODE", "stat.S_IREAD": "library/stat.html#stat.S_IREAD", "stat.S_IRGRP": "library/stat.html#stat.S_IRGRP", "stat.S_IROTH": "library/stat.html#stat.S_IROTH", "stat.S_IRUSR": "library/stat.html#stat.S_IRUSR", "stat.S_IRWXG": "library/stat.html#stat.S_IRWXG", "stat.S_IRWXO": "library/stat.html#stat.S_IRWXO", "stat.S_IRWXU": "library/stat.html#stat.S_IRWXU", "stat.S_ISBLK()": "library/stat.html#stat.S_ISBLK", "stat.S_ISCHR()": "library/stat.html#stat.S_ISCHR", "stat.S_ISDIR()": "library/stat.html#stat.S_ISDIR", "stat.S_ISDOOR()": "library/stat.html#stat.S_ISDOOR", "stat.S_ISFIFO()": "library/stat.html#stat.S_ISFIFO", "stat.S_ISGID": "library/stat.html#stat.S_ISGID", "stat.S_ISLNK()": "library/stat.html#stat.S_ISLNK", "stat.S_ISPORT()": "library/stat.html#stat.S_ISPORT", "stat.S_ISREG()": "library/stat.html#stat.S_ISREG", "stat.S_ISSOCK()": "library/stat.html#stat.S_ISSOCK", "stat.S_ISUID": "library/stat.html#stat.S_ISUID", "stat.S_ISVTX": "library/stat.html#stat.S_ISVTX", "stat.S_ISWHT()": "library/stat.html#stat.S_ISWHT", "stat.S_IWGRP": "library/stat.html#stat.S_IWGRP", "stat.S_IWOTH": "library/stat.html#stat.S_IWOTH", "stat.S_IWRITE": "library/stat.html#stat.S_IWRITE", "stat.S_IWUSR": "library/stat.html#stat.S_IWUSR", "stat.S_IXGRP": "library/stat.html#stat.S_IXGRP", "stat.S_IXOTH": "library/stat.html#stat.S_IXOTH", "stat.S_IXUSR": "library/stat.html#stat.S_IXUSR", "stat.SF_APPEND": "library/stat.html#stat.SF_APPEND", "stat.SF_ARCHIVED": "library/stat.html#stat.SF_ARCHIVED", "stat.SF_DATALESS": "library/stat.html#stat.SF_DATALESS", "stat.SF_FIRMLINK": "library/stat.html#stat.SF_FIRMLINK", "stat.SF_IMMUTABLE": "library/stat.html#stat.SF_IMMUTABLE", "stat.SF_NOUNLINK": "library/stat.html#stat.SF_NOUNLINK", "stat.SF_RESTRICTED": "library/stat.html#stat.SF_RESTRICTED", "stat.SF_SETTABLE": "library/stat.html#stat.SF_SETTABLE", "stat.SF_SNAPSHOT": "library/stat.html#stat.SF_SNAPSHOT", "stat.SF_SUPPORTED": "library/stat.html#stat.SF_SUPPORTED", "stat.SF_SYNTHETIC": "library/stat.html#stat.SF_SYNTHETIC", "stat.ST_ATIME": "library/stat.html#stat.ST_ATIME", "stat.ST_CTIME": "library/stat.html#stat.ST_CTIME", "stat.ST_DEV": "library/stat.html#stat.ST_DEV", "stat.ST_GID": "library/stat.html#stat.ST_GID", "stat.ST_INO": "library/stat.html#stat.ST_INO", "stat.ST_MODE": "library/stat.html#stat.ST_MODE", "stat.ST_MTIME": "library/stat.html#stat.ST_MTIME", "stat.ST_NLINK": "library/stat.html#stat.ST_NLINK", "stat.ST_SIZE": "library/stat.html#stat.ST_SIZE", "stat.ST_UID": "library/stat.html#stat.ST_UID", "stat.UF_APPEND": "library/stat.html#stat.UF_APPEND", "stat.UF_COMPRESSED": "library/stat.html#stat.UF_COMPRESSED", "stat.UF_DATAVAULT": "library/stat.html#stat.UF_DATAVAULT", "stat.UF_HIDDEN": "library/stat.html#stat.UF_HIDDEN", "stat.UF_IMMUTABLE": "library/stat.html#stat.UF_IMMUTABLE", "stat.UF_NODUMP": "library/stat.html#stat.UF_NODUMP", "stat.UF_NOUNLINK": "library/stat.html#stat.UF_NOUNLINK", "stat.UF_OPAQUE": "library/stat.html#stat.UF_OPAQUE", "stat.UF_SETTABLE": "library/stat.html#stat.UF_SETTABLE", "stat.UF_TRACKED": "library/stat.html#stat.UF_TRACKED", "statement": "glossary.html#term-statement", "static type checker": "glossary.html#term-static-type-checker", "staticmethod()": "library/functions.html#staticmethod", "statistics": "library/statistics.html", "Statistics for relations between two inputs (statistics)": "library/statistics.html#statistics-for-relations-between-two-inputs", "statistics.correlation()": "library/statistics.html#statistics.correlation", "statistics.covariance()": "library/statistics.html#statistics.covariance", "statistics.fmean()": "library/statistics.html#statistics.fmean", "statistics.geometric_mean()": "library/statistics.html#statistics.geometric_mean", "statistics.harmonic_mean()": "library/statistics.html#statistics.harmonic_mean", "statistics.kde()": "library/statistics.html#statistics.kde", "statistics.kde_random()": "library/statistics.html#statistics.kde_random", "statistics.linear_regression()": "library/statistics.html#statistics.linear_regression", "statistics.mean()": "library/statistics.html#statistics.mean", "statistics.median()": "library/statistics.html#statistics.median", "statistics.median_grouped()": "library/statistics.html#statistics.median_grouped", "statistics.median_high()": "library/statistics.html#statistics.median_high", "statistics.median_low()": "library/statistics.html#statistics.median_low", "statistics.mode()": "library/statistics.html#statistics.mode", "statistics.multimode()": "library/statistics.html#statistics.multimode", "statistics.NormalDist": "library/statistics.html#statistics.NormalDist", "statistics.NormalDist.cdf()": "library/statistics.html#statistics.NormalDist.cdf", "statistics.NormalDist.from_samples()": "library/statistics.html#statistics.NormalDist.from_samples", "statistics.NormalDist.inv_cdf()": "library/statistics.html#statistics.NormalDist.inv_cdf", "statistics.NormalDist.mean": "library/statistics.html#statistics.NormalDist.mean", "statistics.NormalDist.median": "library/statistics.html#statistics.NormalDist.median", "statistics.NormalDist.mode": "library/statistics.html#statistics.NormalDist.mode", "statistics.NormalDist.overlap()": "library/statistics.html#statistics.NormalDist.overlap", "statistics.NormalDist.pdf()": "library/statistics.html#statistics.NormalDist.pdf", "statistics.NormalDist.quantiles()": "library/statistics.html#statistics.NormalDist.quantiles", "statistics.NormalDist.samples()": "library/statistics.html#statistics.NormalDist.samples", "statistics.NormalDist.stdev": "library/statistics.html#statistics.NormalDist.stdev", "statistics.NormalDist.variance": "library/statistics.html#statistics.NormalDist.variance", "statistics.NormalDist.zscore()": "library/statistics.html#statistics.NormalDist.zscore", "statistics.pstdev()": "library/statistics.html#statistics.pstdev", "statistics.pvariance()": "library/statistics.html#statistics.pvariance", "statistics.quantiles()": "library/statistics.html#statistics.quantiles", "statistics.StatisticsError": "library/statistics.html#statistics.StatisticsError", "statistics.stdev()": "library/statistics.html#statistics.stdev", "statistics.variance()": "library/statistics.html#statistics.variance", "StopAsyncIteration": "library/exceptions.html#StopAsyncIteration", "StopIteration": "library/exceptions.html#StopIteration", "StopIteration.value": "library/exceptions.html#StopIteration.value", "str": "library/stdtypes.html#str", "str.capitalize()": "library/stdtypes.html#str.capitalize", "str.casefold()": "library/stdtypes.html#str.casefold", "str.center()": "library/stdtypes.html#str.center", "str.count()": "library/stdtypes.html#str.count", "str.encode()": "library/stdtypes.html#str.encode", "str.endswith()": "library/stdtypes.html#str.endswith", "str.expandtabs()": "library/stdtypes.html#str.expandtabs", "str.find()": "library/stdtypes.html#str.find", "str.format()": "library/stdtypes.html#str.format", "str.format_map()": "library/stdtypes.html#str.format_map", "str.index()": "library/stdtypes.html#str.index", "str.isalnum()": "library/stdtypes.html#str.isalnum", "str.isalpha()": "library/stdtypes.html#str.isalpha", "str.isascii()": "library/stdtypes.html#str.isascii", "str.isdecimal()": "library/stdtypes.html#str.isdecimal", "str.isdigit()": "library/stdtypes.html#str.isdigit", "str.isidentifier()": "library/stdtypes.html#str.isidentifier", "str.islower()": "library/stdtypes.html#str.islower", "str.isnumeric()": "library/stdtypes.html#str.isnumeric", "str.isprintable()": "library/stdtypes.html#str.isprintable", "str.isspace()": "library/stdtypes.html#str.isspace", "str.istitle()": "library/stdtypes.html#str.istitle", "str.isupper()": "library/stdtypes.html#str.isupper", "str.join()": "library/stdtypes.html#str.join", "str.ljust()": "library/stdtypes.html#str.ljust", "str.lower()": "library/stdtypes.html#str.lower", "str.lstrip()": "library/stdtypes.html#str.lstrip", "str.maketrans()": "library/stdtypes.html#str.maketrans", "str.partition()": "library/stdtypes.html#str.partition", "str.removeprefix()": "library/stdtypes.html#str.removeprefix", "str.removesuffix()": "library/stdtypes.html#str.removesuffix", "str.replace()": "library/stdtypes.html#str.replace", "str.rfind()": "library/stdtypes.html#str.rfind", "str.rindex()": "library/stdtypes.html#str.rindex", "str.rjust()": "library/stdtypes.html#str.rjust", "str.rpartition()": "library/stdtypes.html#str.rpartition", "str.rsplit()": "library/stdtypes.html#str.rsplit", "str.rstrip()": "library/stdtypes.html#str.rstrip", "str.split()": "library/stdtypes.html#str.split", "str.splitlines()": "library/stdtypes.html#str.splitlines", "str.startswith()": "library/stdtypes.html#str.startswith", "str.strip()": "library/stdtypes.html#str.strip", "str.swapcase()": "library/stdtypes.html#str.swapcase", "str.title()": "library/stdtypes.html#str.title", "str.translate()": "library/stdtypes.html#str.translate", "str.upper()": "library/stdtypes.html#str.upper", "str.zfill()": "library/stdtypes.html#str.zfill", "StreamHandler (logging.handlers)": "library/logging.handlers.html#streamhandler", "StreamReader (Streams)": "library/asyncio-stream.html#streamreader", "Streams": "library/asyncio-stream.html", "Streams (High-level API Index)": "library/asyncio-api-index.html#streams", "StreamWriter (Streams)": "library/asyncio-stream.html#streamwriter", "strftime() and strptime() Behavior (datetime)": "library/datetime.html#strftime-and-strptime-behavior", "string": "library/string.html", "String constants (string)": "library/string.html#string-constants", "String conversion and formatting": "c-api/conversion.html", "string.ascii_letters": "library/string.html#string.ascii_letters", "string.ascii_lowercase": "library/string.html#string.ascii_lowercase", "string.ascii_uppercase": "library/string.html#string.ascii_uppercase", "string.capwords()": "library/string.html#string.capwords", "string.digits": "library/string.html#string.digits", "string.Formatter": "library/string.html#string.Formatter", "string.Formatter.check_unused_args()": "library/string.html#string.Formatter.check_unused_args", "string.Formatter.convert_field()": "library/string.html#string.Formatter.convert_field", "string.Formatter.format()": "library/string.html#string.Formatter.format", "string.Formatter.format_field()": "library/string.html#string.Formatter.format_field", "string.Formatter.get_field()": "library/string.html#string.Formatter.get_field", "string.Formatter.get_value()": "library/string.html#string.Formatter.get_value", "string.Formatter.parse()": "library/string.html#string.Formatter.parse", "string.Formatter.vformat()": "library/string.html#string.Formatter.vformat", "string.hexdigits": "library/string.html#string.hexdigits", "string.octdigits": "library/string.html#string.octdigits", "string.printable": "library/string.html#string.printable", "string.punctuation": "library/string.html#string.punctuation", "string.Template": "library/string.html#string.Template", "string.Template.get_identifiers()": "library/string.html#string.Template.get_identifiers", "string.Template.is_valid()": "library/string.html#string.Template.is_valid", "string.Template.safe_substitute()": "library/string.html#string.Template.safe_substitute", "string.Template.substitute()": "library/string.html#string.Template.substitute", "string.Template.template": "library/string.html#string.Template.template", "string.whitespace": "library/string.html#string.whitespace", "stringprep": "library/stringprep.html", "stringprep.in_table_a1()": "library/stringprep.html#stringprep.in_table_a1", "stringprep.in_table_b1()": "library/stringprep.html#stringprep.in_table_b1", "stringprep.in_table_c11()": "library/stringprep.html#stringprep.in_table_c11", "stringprep.in_table_c11_c12()": "library/stringprep.html#stringprep.in_table_c11_c12", "stringprep.in_table_c12()": "library/stringprep.html#stringprep.in_table_c12", "stringprep.in_table_c21()": "library/stringprep.html#stringprep.in_table_c21", "stringprep.in_table_c21_c22()": "library/stringprep.html#stringprep.in_table_c21_c22", "stringprep.in_table_c22()": "library/stringprep.html#stringprep.in_table_c22", "stringprep.in_table_c3()": "library/stringprep.html#stringprep.in_table_c3", "stringprep.in_table_c4()": "library/stringprep.html#stringprep.in_table_c4", "stringprep.in_table_c5()": "library/stringprep.html#stringprep.in_table_c5", "stringprep.in_table_c6()": "library/stringprep.html#stringprep.in_table_c6", "stringprep.in_table_c7()": "library/stringprep.html#stringprep.in_table_c7", "stringprep.in_table_c8()": "library/stringprep.html#stringprep.in_table_c8", "stringprep.in_table_c9()": "library/stringprep.html#stringprep.in_table_c9", "stringprep.in_table_d1()": "library/stringprep.html#stringprep.in_table_d1", "stringprep.in_table_d2()": "library/stringprep.html#stringprep.in_table_d2", "stringprep.map_table_b2()": "library/stringprep.html#stringprep.map_table_b2", "stringprep.map_table_b3()": "library/stringprep.html#stringprep.map_table_b3", "strong reference": "glossary.html#term-strong-reference", "struct": "library/struct.html", "struct.calcsize()": "library/struct.html#struct.calcsize", "struct.error": "library/struct.html#struct.error", "struct.iter_unpack()": "library/struct.html#struct.iter_unpack", "struct.pack()": "library/struct.html#struct.pack", "struct.pack_into()": "library/struct.html#struct.pack_into", "struct.Struct": "library/struct.html#struct.Struct", "struct.Struct.format": "library/struct.html#struct.Struct.format", "struct.Struct.iter_unpack()": "library/struct.html#struct.Struct.iter_unpack", "struct.Struct.pack()": "library/struct.html#struct.Struct.pack", "struct.Struct.pack_into()": "library/struct.html#struct.Struct.pack_into", "struct.Struct.size": "library/struct.html#struct.Struct.size", "struct.Struct.unpack()": "library/struct.html#struct.Struct.unpack", "struct.Struct.unpack_from()": "library/struct.html#struct.Struct.unpack_from", "struct.unpack()": "library/struct.html#struct.unpack", "struct.unpack_from()": "library/struct.html#struct.unpack_from", "Structured Markup Processing Tools": "library/markup.html", "Structured Parse Results (urllib.parse)": "library/urllib.parse.html#structured-parse-results", "Subclassing Repr Objects (reprlib)": "library/reprlib.html#subclassing-repr-objects", "subprocess": "library/subprocess.html", "subprocess.ABOVE_NORMAL_PRIORITY_CLASS": "library/subprocess.html#subprocess.ABOVE_NORMAL_PRIORITY_CLASS", "subprocess.BELOW_NORMAL_PRIORITY_CLASS": "library/subprocess.html#subprocess.BELOW_NORMAL_PRIORITY_CLASS", "subprocess.call()": "library/subprocess.html#subprocess.call", "subprocess.CalledProcessError": "library/subprocess.html#subprocess.CalledProcessError", "subprocess.CalledProcessError.cmd": "library/subprocess.html#subprocess.CalledProcessError.cmd", "subprocess.CalledProcessError.output": "library/subprocess.html#subprocess.CalledProcessError.output", "subprocess.CalledProcessError.returncode": "library/subprocess.html#subprocess.CalledProcessError.returncode", "subprocess.CalledProcessError.stderr": "library/subprocess.html#subprocess.CalledProcessError.stderr", "subprocess.CalledProcessError.stdout": "library/subprocess.html#subprocess.CalledProcessError.stdout", "subprocess.check_call()": "library/subprocess.html#subprocess.check_call", "subprocess.check_output()": "library/subprocess.html#subprocess.check_output", "subprocess.CompletedProcess": "library/subprocess.html#subprocess.CompletedProcess", "subprocess.CompletedProcess.args": "library/subprocess.html#subprocess.CompletedProcess.args", "subprocess.CompletedProcess.check_returncode()": "library/subprocess.html#subprocess.CompletedProcess.check_returncode", "subprocess.CompletedProcess.returncode": "library/subprocess.html#subprocess.CompletedProcess.returncode", "subprocess.CompletedProcess.stderr": "library/subprocess.html#subprocess.CompletedProcess.stderr", "subprocess.CompletedProcess.stdout": "library/subprocess.html#subprocess.CompletedProcess.stdout", "subprocess.CREATE_BREAKAWAY_FROM_JOB": "library/subprocess.html#subprocess.CREATE_BREAKAWAY_FROM_JOB", "subprocess.CREATE_DEFAULT_ERROR_MODE": "library/subprocess.html#subprocess.CREATE_DEFAULT_ERROR_MODE", "subprocess.CREATE_NEW_CONSOLE": "library/subprocess.html#subprocess.CREATE_NEW_CONSOLE", "subprocess.CREATE_NEW_PROCESS_GROUP": "library/subprocess.html#subprocess.CREATE_NEW_PROCESS_GROUP", "subprocess.CREATE_NO_WINDOW": "library/subprocess.html#subprocess.CREATE_NO_WINDOW", "subprocess.DETACHED_PROCESS": "library/subprocess.html#subprocess.DETACHED_PROCESS", "subprocess.DEVNULL": "library/subprocess.html#subprocess.DEVNULL", "subprocess.getoutput()": "library/subprocess.html#subprocess.getoutput", "subprocess.getstatusoutput()": "library/subprocess.html#subprocess.getstatusoutput", "subprocess.HIGH_PRIORITY_CLASS": "library/subprocess.html#subprocess.HIGH_PRIORITY_CLASS", "subprocess.IDLE_PRIORITY_CLASS": "library/subprocess.html#subprocess.IDLE_PRIORITY_CLASS", "subprocess.NORMAL_PRIORITY_CLASS": "library/subprocess.html#subprocess.NORMAL_PRIORITY_CLASS", "subprocess.PIPE": "library/subprocess.html#subprocess.PIPE", "subprocess.Popen": "library/subprocess.html#subprocess.Popen", "subprocess.Popen.args": "library/subprocess.html#subprocess.Popen.args", "subprocess.Popen.communicate()": "library/subprocess.html#subprocess.Popen.communicate", "subprocess.Popen.kill()": "library/subprocess.html#subprocess.Popen.kill", "subprocess.Popen.pid": "library/subprocess.html#subprocess.Popen.pid", "subprocess.Popen.poll()": "library/subprocess.html#subprocess.Popen.poll", "subprocess.Popen.returncode": "library/subprocess.html#subprocess.Popen.returncode", "subprocess.Popen.send_signal()": "library/subprocess.html#subprocess.Popen.send_signal", "subprocess.Popen.stderr": "library/subprocess.html#subprocess.Popen.stderr", "subprocess.Popen.stdin": "library/subprocess.html#subprocess.Popen.stdin", "subprocess.Popen.stdout": "library/subprocess.html#subprocess.Popen.stdout", "subprocess.Popen.terminate()": "library/subprocess.html#subprocess.Popen.terminate", "subprocess.Popen.wait()": "library/subprocess.html#subprocess.Popen.wait", "subprocess.REALTIME_PRIORITY_CLASS": "library/subprocess.html#subprocess.REALTIME_PRIORITY_CLASS", "subprocess.run()": "library/subprocess.html#subprocess.run", "subprocess.STARTF_FORCEOFFFEEDBACK": "library/subprocess.html#subprocess.STARTF_FORCEOFFFEEDBACK", "subprocess.STARTF_FORCEONFEEDBACK": "library/subprocess.html#subprocess.STARTF_FORCEONFEEDBACK", "subprocess.STARTF_USESHOWWINDOW": "library/subprocess.html#subprocess.STARTF_USESHOWWINDOW", "subprocess.STARTF_USESTDHANDLES": "library/subprocess.html#subprocess.STARTF_USESTDHANDLES", "subprocess.STARTUPINFO": "library/subprocess.html#subprocess.STARTUPINFO", "subprocess.STARTUPINFO.dwFlags": "library/subprocess.html#subprocess.STARTUPINFO.dwFlags", "subprocess.STARTUPINFO.hStdError": "library/subprocess.html#subprocess.STARTUPINFO.hStdError", "subprocess.STARTUPINFO.hStdInput": "library/subprocess.html#subprocess.STARTUPINFO.hStdInput", "subprocess.STARTUPINFO.hStdOutput": "library/subprocess.html#subprocess.STARTUPINFO.hStdOutput", "subprocess.STARTUPINFO.lpAttributeList": "library/subprocess.html#subprocess.STARTUPINFO.lpAttributeList", "subprocess.STARTUPINFO.wShowWindow": "library/subprocess.html#subprocess.STARTUPINFO.wShowWindow", "subprocess.STD_ERROR_HANDLE": "library/subprocess.html#subprocess.STD_ERROR_HANDLE", "subprocess.STD_INPUT_HANDLE": "library/subprocess.html#subprocess.STD_INPUT_HANDLE", "subprocess.STD_OUTPUT_HANDLE": "library/subprocess.html#subprocess.STD_OUTPUT_HANDLE", "subprocess.STDOUT": "library/subprocess.html#subprocess.STDOUT", "subprocess.SubprocessError": "library/subprocess.html#subprocess.SubprocessError", "subprocess.SW_HIDE": "library/subprocess.html#subprocess.SW_HIDE", "subprocess.TimeoutExpired": "library/subprocess.html#subprocess.TimeoutExpired", "subprocess.TimeoutExpired.cmd": "library/subprocess.html#subprocess.TimeoutExpired.cmd", "subprocess.TimeoutExpired.output": "library/subprocess.html#subprocess.TimeoutExpired.output", "subprocess.TimeoutExpired.stderr": "library/subprocess.html#subprocess.TimeoutExpired.stderr", "subprocess.TimeoutExpired.stdout": "library/subprocess.html#subprocess.TimeoutExpired.stdout", "subprocess.TimeoutExpired.timeout": "library/subprocess.html#subprocess.TimeoutExpired.timeout", "Subprocesses": "library/asyncio-subprocess.html", "Subprocesses (High-level API Index)": "library/asyncio-api-index.html#subprocesses", "sum()": "library/functions.html#sum", "super": "library/functions.html#super", "Support for Perf Maps": "c-api/perfmaps.html", "Supported Datatypes (configparser)": "library/configparser.html#supported-datatypes", "Supported INI File Structure (configparser)": "library/configparser.html#supported-ini-file-structure", "Supported tar formats (tarfile)": "library/tarfile.html#supported-tar-formats", "Supporting Cyclic Garbage Collection": "c-api/gcsupport.html", "symtable": "library/symtable.html", "symtable.Class": "library/symtable.html#symtable.Class", "symtable.Class.get_methods()": "library/symtable.html#symtable.Class.get_methods", "symtable.Function": "library/symtable.html#symtable.Function", "symtable.Function.get_frees()": "library/symtable.html#symtable.Function.get_frees", "symtable.Function.get_globals()": "library/symtable.html#symtable.Function.get_globals", "symtable.Function.get_locals()": "library/symtable.html#symtable.Function.get_locals", "symtable.Function.get_nonlocals()": "library/symtable.html#symtable.Function.get_nonlocals", "symtable.Function.get_parameters()": "library/symtable.html#symtable.Function.get_parameters", "symtable.Symbol": "library/symtable.html#symtable.Symbol", "symtable.Symbol.get_name()": "library/symtable.html#symtable.Symbol.get_name", "symtable.Symbol.get_namespace()": "library/symtable.html#symtable.Symbol.get_namespace", "symtable.Symbol.get_namespaces()": "library/symtable.html#symtable.Symbol.get_namespaces", "symtable.Symbol.is_annotated()": "library/symtable.html#symtable.Symbol.is_annotated", "symtable.Symbol.is_assigned()": "library/symtable.html#symtable.Symbol.is_assigned", "symtable.Symbol.is_declared_global()": "library/symtable.html#symtable.Symbol.is_declared_global", "symtable.Symbol.is_free()": "library/symtable.html#symtable.Symbol.is_free", "symtable.Symbol.is_global()": "library/symtable.html#symtable.Symbol.is_global", "symtable.Symbol.is_imported()": "library/symtable.html#symtable.Symbol.is_imported", "symtable.Symbol.is_local()": "library/symtable.html#symtable.Symbol.is_local", "symtable.Symbol.is_namespace()": "library/symtable.html#symtable.Symbol.is_namespace", "symtable.Symbol.is_nonlocal()": "library/symtable.html#symtable.Symbol.is_nonlocal", "symtable.Symbol.is_parameter()": "library/symtable.html#symtable.Symbol.is_parameter", "symtable.Symbol.is_referenced()": "library/symtable.html#symtable.Symbol.is_referenced", "symtable.SymbolTable": "library/symtable.html#symtable.SymbolTable", "symtable.SymbolTable.get_children()": "library/symtable.html#symtable.SymbolTable.get_children", "symtable.SymbolTable.get_id()": "library/symtable.html#symtable.SymbolTable.get_id", "symtable.SymbolTable.get_identifiers()": "library/symtable.html#symtable.SymbolTable.get_identifiers", "symtable.SymbolTable.get_lineno()": "library/symtable.html#symtable.SymbolTable.get_lineno", "symtable.SymbolTable.get_name()": "library/symtable.html#symtable.SymbolTable.get_name", "symtable.SymbolTable.get_symbols()": "library/symtable.html#symtable.SymbolTable.get_symbols", "symtable.SymbolTable.get_type()": "library/symtable.html#symtable.SymbolTable.get_type", "symtable.SymbolTable.has_children()": "library/symtable.html#symtable.SymbolTable.has_children", "symtable.SymbolTable.is_nested()": "library/symtable.html#symtable.SymbolTable.is_nested", "symtable.SymbolTable.is_optimized()": "library/symtable.html#symtable.SymbolTable.is_optimized", "symtable.SymbolTable.lookup()": "library/symtable.html#symtable.SymbolTable.lookup", "symtable.SymbolTableType": "library/symtable.html#symtable.SymbolTableType", "symtable.SymbolTableType.ANNOTATION": "library/symtable.html#symtable.SymbolTableType.ANNOTATION", "symtable.SymbolTableType.CLASS": "library/symtable.html#symtable.SymbolTableType.CLASS", "symtable.SymbolTableType.FUNCTION": "library/symtable.html#symtable.SymbolTableType.FUNCTION", "symtable.SymbolTableType.MODULE": "library/symtable.html#symtable.SymbolTableType.MODULE", "symtable.SymbolTableType.TYPE_ALIAS": "library/symtable.html#symtable.SymbolTableType.TYPE_ALIAS", "symtable.SymbolTableType.TYPE_PARAMETERS": "library/symtable.html#symtable.SymbolTableType.TYPE_PARAMETERS", "symtable.SymbolTableType.TYPE_VARIABLE": "library/symtable.html#symtable.SymbolTableType.TYPE_VARIABLE", "symtable.symtable()": "library/symtable.html#symtable.symtable", "Synchronization (High-level API Index)": "library/asyncio-api-index.html#synchronization", "Synchronization Primitives": "library/asyncio-sync.html", "SyntaxError": "library/exceptions.html#SyntaxError", "SyntaxError.end_lineno": "library/exceptions.html#SyntaxError.end_lineno", "SyntaxError.end_offset": "library/exceptions.html#SyntaxError.end_offset", "SyntaxError.filename": "library/exceptions.html#SyntaxError.filename", "SyntaxError.lineno": "library/exceptions.html#SyntaxError.lineno", "SyntaxError.offset": "library/exceptions.html#SyntaxError.offset", "SyntaxError.text": "library/exceptions.html#SyntaxError.text", "SyntaxWarning": "library/exceptions.html#SyntaxWarning", "sys": "library/sys.html", "sys.__breakpointhook__": "library/sys.html#sys.__breakpointhook__", "sys.__displayhook__": "library/sys.html#sys.__displayhook__", "sys.__excepthook__": "library/sys.html#sys.__excepthook__", "sys.__interactivehook__": "library/sys.html#sys.__interactivehook__", "sys.__stderr__": "library/sys.html#sys.__stderr__", "sys.__stdin__": "library/sys.html#sys.__stdin__", "sys.__stdout__": "library/sys.html#sys.__stdout__", "sys.__unraisablehook__": "library/sys.html#sys.__unraisablehook__", "sys._clear_internal_caches()": "library/sys.html#sys._clear_internal_caches", "sys._clear_type_cache()": "library/sys.html#sys._clear_type_cache", "sys._current_exceptions()": "library/sys.html#sys._current_exceptions", "sys._current_frames()": "library/sys.html#sys._current_frames", "sys._debugmallocstats()": "library/sys.html#sys._debugmallocstats", "sys._emscripten_info": "library/sys.html#sys._emscripten_info", "sys._emscripten_info.emscripten_version": "library/sys.html#sys._emscripten_info.emscripten_version", "sys._emscripten_info.pthreads": "library/sys.html#sys._emscripten_info.pthreads", "sys._emscripten_info.runtime": "library/sys.html#sys._emscripten_info.runtime", "sys._emscripten_info.shared_memory": "library/sys.html#sys._emscripten_info.shared_memory", "sys._enablelegacywindowsfsencoding()": "library/sys.html#sys._enablelegacywindowsfsencoding", "sys._getframe()": "library/sys.html#sys._getframe", "sys._getframemodulename()": "library/sys.html#sys._getframemodulename", "sys._is_gil_enabled()": "library/sys.html#sys._is_gil_enabled", "sys._is_interned()": "library/sys.html#sys._is_interned", "sys._xoptions": "library/sys.html#sys._xoptions", "sys.abiflags": "library/sys.html#sys.abiflags", "sys.activate_stack_trampoline()": "library/sys.html#sys.activate_stack_trampoline", "sys.addaudithook()": "library/sys.html#sys.addaudithook", "sys.api_version": "library/sys.html#sys.api_version", "sys.argv": "library/sys.html#sys.argv", "sys.audit()": "library/sys.html#sys.audit", "sys.base_exec_prefix": "library/sys.html#sys.base_exec_prefix", "sys.base_prefix": "library/sys.html#sys.base_prefix", "sys.breakpointhook()": "library/sys.html#sys.breakpointhook", "sys.builtin_module_names": "library/sys.html#sys.builtin_module_names", "sys.byteorder": "library/sys.html#sys.byteorder", "sys.call_tracing()": "library/sys.html#sys.call_tracing", "sys.copyright": "library/sys.html#sys.copyright", "sys.deactivate_stack_trampoline()": "library/sys.html#sys.deactivate_stack_trampoline", "sys.displayhook()": "library/sys.html#sys.displayhook", "sys.dllhandle": "library/sys.html#sys.dllhandle", "sys.dont_write_bytecode": "library/sys.html#sys.dont_write_bytecode", "sys.exc_info()": "library/sys.html#sys.exc_info", "sys.excepthook()": "library/sys.html#sys.excepthook", "sys.exception()": "library/sys.html#sys.exception", "sys.exec_prefix": "library/sys.html#sys.exec_prefix", "sys.executable": "library/sys.html#sys.executable", "sys.exit()": "library/sys.html#sys.exit", "sys.flags": "library/sys.html#sys.flags", "sys.flags.bytes_warning": "library/sys.html#sys.flags.bytes_warning", "sys.flags.debug": "library/sys.html#sys.flags.debug", "sys.flags.dev_mode": "library/sys.html#sys.flags.dev_mode", "sys.flags.dont_write_bytecode": "library/sys.html#sys.flags.dont_write_bytecode", "sys.flags.hash_randomization": "library/sys.html#sys.flags.hash_randomization", "sys.flags.ignore_environment": "library/sys.html#sys.flags.ignore_environment", "sys.flags.inspect": "library/sys.html#sys.flags.inspect", "sys.flags.int_max_str_digits": "library/sys.html#sys.flags.int_max_str_digits", "sys.flags.interactive": "library/sys.html#sys.flags.interactive", "sys.flags.isolated": "library/sys.html#sys.flags.isolated", "sys.flags.no_site": "library/sys.html#sys.flags.no_site", "sys.flags.no_user_site": "library/sys.html#sys.flags.no_user_site", "sys.flags.optimize": "library/sys.html#sys.flags.optimize", "sys.flags.quiet": "library/sys.html#sys.flags.quiet", "sys.flags.safe_path": "library/sys.html#sys.flags.safe_path", "sys.flags.utf8_mode": "library/sys.html#sys.flags.utf8_mode", "sys.flags.verbose": "library/sys.html#sys.flags.verbose", "sys.flags.warn_default_encoding": "library/sys.html#sys.flags.warn_default_encoding", "sys.float_info": "library/sys.html#sys.float_info", "sys.float_info.dig": "library/sys.html#sys.float_info.dig", "sys.float_info.epsilon": "library/sys.html#sys.float_info.epsilon", "sys.float_info.mant_dig": "library/sys.html#sys.float_info.mant_dig", "sys.float_info.max": "library/sys.html#sys.float_info.max", "sys.float_info.max_10_exp": "library/sys.html#sys.float_info.max_10_exp", "sys.float_info.max_exp": "library/sys.html#sys.float_info.max_exp", "sys.float_info.min": "library/sys.html#sys.float_info.min", "sys.float_info.min_10_exp": "library/sys.html#sys.float_info.min_10_exp", "sys.float_info.min_exp": "library/sys.html#sys.float_info.min_exp", "sys.float_info.radix": "library/sys.html#sys.float_info.radix", "sys.float_info.rounds": "library/sys.html#sys.float_info.rounds", "sys.float_repr_style": "library/sys.html#sys.float_repr_style", "sys.get_asyncgen_hooks()": "library/sys.html#sys.get_asyncgen_hooks", "sys.get_coroutine_origin_tracking_depth()": "library/sys.html#sys.get_coroutine_origin_tracking_depth", "sys.get_int_max_str_digits()": "library/sys.html#sys.get_int_max_str_digits", "sys.getallocatedblocks()": "library/sys.html#sys.getallocatedblocks", "sys.getandroidapilevel()": "library/sys.html#sys.getandroidapilevel", "sys.getdefaultencoding()": "library/sys.html#sys.getdefaultencoding", "sys.getdlopenflags()": "library/sys.html#sys.getdlopenflags", "sys.getfilesystemencodeerrors()": "library/sys.html#sys.getfilesystemencodeerrors", "sys.getfilesystemencoding()": "library/sys.html#sys.getfilesystemencoding", "sys.getprofile()": "library/sys.html#sys.getprofile", "sys.getrecursionlimit()": "library/sys.html#sys.getrecursionlimit", "sys.getrefcount()": "library/sys.html#sys.getrefcount", "sys.getsizeof()": "library/sys.html#sys.getsizeof", "sys.getswitchinterval()": "library/sys.html#sys.getswitchinterval", "sys.gettrace()": "library/sys.html#sys.gettrace", "sys.getunicodeinternedsize()": "library/sys.html#sys.getunicodeinternedsize", "sys.getwindowsversion()": "library/sys.html#sys.getwindowsversion", "sys.hash_info": "library/sys.html#sys.hash_info", "sys.hash_info.algorithm": "library/sys.html#sys.hash_info.algorithm", "sys.hash_info.hash_bits": "library/sys.html#sys.hash_info.hash_bits", "sys.hash_info.imag": "library/sys.html#sys.hash_info.imag", "sys.hash_info.inf": "library/sys.html#sys.hash_info.inf", "sys.hash_info.modulus": "library/sys.html#sys.hash_info.modulus", "sys.hash_info.nan": "library/sys.html#sys.hash_info.nan", "sys.hash_info.seed_bits": "library/sys.html#sys.hash_info.seed_bits", "sys.hash_info.width": "library/sys.html#sys.hash_info.width", "sys.hexversion": "library/sys.html#sys.hexversion", "sys.implementation": "library/sys.html#sys.implementation", "sys.int_info": "library/sys.html#sys.int_info", "sys.int_info.bits_per_digit": "library/sys.html#sys.int_info.bits_per_digit", "sys.int_info.default_max_str_digits": "library/sys.html#sys.int_info.default_max_str_digits", "sys.int_info.sizeof_digit": "library/sys.html#sys.int_info.sizeof_digit", "sys.int_info.str_digits_check_threshold": "library/sys.html#sys.int_info.str_digits_check_threshold", "sys.intern()": "library/sys.html#sys.intern", "sys.is_finalizing()": "library/sys.html#sys.is_finalizing", "sys.is_stack_trampoline_active()": "library/sys.html#sys.is_stack_trampoline_active", "sys.last_exc": "library/sys.html#sys.last_exc", "sys.last_traceback": "library/sys.html#sys.last_traceback", "sys.last_type": "library/sys.html#sys.last_type", "sys.last_value": "library/sys.html#sys.last_value", "sys.maxsize": "library/sys.html#sys.maxsize", "sys.maxunicode": "library/sys.html#sys.maxunicode", "sys.meta_path": "library/sys.html#sys.meta_path", "sys.modules": "library/sys.html#sys.modules", "sys.monitoring": "library/sys.monitoring.html", "sys.monitoring.DISABLE": "library/sys.monitoring.html#sys.monitoring.DISABLE", "sys.monitoring.free_tool_id()": "library/sys.monitoring.html#sys.monitoring.free_tool_id", "sys.monitoring.get_events()": "library/sys.monitoring.html#sys.monitoring.get_events", "sys.monitoring.get_local_events()": "library/sys.monitoring.html#sys.monitoring.get_local_events", "sys.monitoring.get_tool()": "library/sys.monitoring.html#sys.monitoring.get_tool", "sys.monitoring.MISSING": "library/sys.monitoring.html#sys.monitoring.MISSING", "sys.monitoring.register_callback()": "library/sys.monitoring.html#sys.monitoring.register_callback", "sys.monitoring.restart_events()": "library/sys.monitoring.html#sys.monitoring.restart_events", "sys.monitoring.set_events()": "library/sys.monitoring.html#sys.monitoring.set_events", "sys.monitoring.set_local_events()": "library/sys.monitoring.html#sys.monitoring.set_local_events", "sys.monitoring.use_tool_id()": "library/sys.monitoring.html#sys.monitoring.use_tool_id", "sys.orig_argv": "library/sys.html#sys.orig_argv", "sys.path": "library/sys.html#sys.path", "sys.path_hooks": "library/sys.html#sys.path_hooks", "sys.path_importer_cache": "library/sys.html#sys.path_importer_cache", "sys.platform": "library/sys.html#sys.platform", "sys.platlibdir": "library/sys.html#sys.platlibdir", "sys.prefix": "library/sys.html#sys.prefix", "sys.ps1": "library/sys.html#sys.ps1", "sys.ps2": "library/sys.html#sys.ps2", "sys.pycache_prefix": "library/sys.html#sys.pycache_prefix", "sys.set_asyncgen_hooks()": "library/sys.html#sys.set_asyncgen_hooks", "sys.set_coroutine_origin_tracking_depth()": "library/sys.html#sys.set_coroutine_origin_tracking_depth", "sys.set_int_max_str_digits()": "library/sys.html#sys.set_int_max_str_digits", "sys.setdlopenflags()": "library/sys.html#sys.setdlopenflags", "sys.setprofile()": "library/sys.html#sys.setprofile", "sys.setrecursionlimit()": "library/sys.html#sys.setrecursionlimit", "sys.setswitchinterval()": "library/sys.html#sys.setswitchinterval", "sys.settrace()": "library/sys.html#sys.settrace", "sys.stderr": "library/sys.html#sys.stderr", "sys.stdin": "library/sys.html#sys.stdin", "sys.stdlib_module_names": "library/sys.html#sys.stdlib_module_names", "sys.stdout": "library/sys.html#sys.stdout", "sys.thread_info": "library/sys.html#sys.thread_info", "sys.thread_info.lock": "library/sys.html#sys.thread_info.lock", "sys.thread_info.name": "library/sys.html#sys.thread_info.name", "sys.thread_info.version": "library/sys.html#sys.thread_info.version", "sys.tracebacklimit": "library/sys.html#sys.tracebacklimit", "sys.unraisablehook()": "library/sys.html#sys.unraisablehook", "sys.version": "library/sys.html#sys.version", "sys.version_info": "library/sys.html#sys.version_info", "sys.warnoptions": "library/sys.html#sys.warnoptions", "sys.winver": "library/sys.html#sys.winver", "sysconfig": "library/sysconfig.html", "sysconfig._get_preferred_schemes()": "library/sysconfig.html#sysconfig._get_preferred_schemes", "sysconfig.get_config_h_filename()": "library/sysconfig.html#sysconfig.get_config_h_filename", "sysconfig.get_config_var()": "library/sysconfig.html#sysconfig.get_config_var", "sysconfig.get_config_vars()": "library/sysconfig.html#sysconfig.get_config_vars", "sysconfig.get_default_scheme()": "library/sysconfig.html#sysconfig.get_default_scheme", "sysconfig.get_makefile_filename()": "library/sysconfig.html#sysconfig.get_makefile_filename", "sysconfig.get_path()": "library/sysconfig.html#sysconfig.get_path", "sysconfig.get_path_names()": "library/sysconfig.html#sysconfig.get_path_names", "sysconfig.get_paths()": "library/sysconfig.html#sysconfig.get_paths", "sysconfig.get_platform()": "library/sysconfig.html#sysconfig.get_platform", "sysconfig.get_preferred_scheme()": "library/sysconfig.html#sysconfig.get_preferred_scheme", "sysconfig.get_python_version()": "library/sysconfig.html#sysconfig.get_python_version", "sysconfig.get_scheme_names()": "library/sysconfig.html#sysconfig.get_scheme_names", "sysconfig.is_python_build()": "library/sysconfig.html#sysconfig.is_python_build", "sysconfig.parse_config_h()": "library/sysconfig.html#sysconfig.parse_config_h", "syslog": "library/syslog.html", "syslog.closelog()": "library/syslog.html#syslog.closelog", "syslog.LOG_ALERT": "library/syslog.html#syslog.LOG_ALERT", "syslog.LOG_AUTH": "library/syslog.html#syslog.LOG_AUTH", "syslog.LOG_AUTHPRIV": "library/syslog.html#syslog.LOG_AUTHPRIV", "syslog.LOG_CONS": "library/syslog.html#syslog.LOG_CONS", "syslog.LOG_CRIT": "library/syslog.html#syslog.LOG_CRIT", "syslog.LOG_CRON": "library/syslog.html#syslog.LOG_CRON", "syslog.LOG_DAEMON": "library/syslog.html#syslog.LOG_DAEMON", "syslog.LOG_DEBUG": "library/syslog.html#syslog.LOG_DEBUG", "syslog.LOG_EMERG": "library/syslog.html#syslog.LOG_EMERG", "syslog.LOG_ERR": "library/syslog.html#syslog.LOG_ERR", "syslog.LOG_FTP": "library/syslog.html#syslog.LOG_FTP", "syslog.LOG_INFO": "library/syslog.html#syslog.LOG_INFO", "syslog.LOG_INSTALL": "library/syslog.html#syslog.LOG_INSTALL", "syslog.LOG_KERN": "library/syslog.html#syslog.LOG_KERN", "syslog.LOG_LAUNCHD": "library/syslog.html#syslog.LOG_LAUNCHD", "syslog.LOG_LOCAL0": "library/syslog.html#syslog.LOG_LOCAL0", "syslog.LOG_LOCAL1": "library/syslog.html#syslog.LOG_LOCAL1", "syslog.LOG_LOCAL2": "library/syslog.html#syslog.LOG_LOCAL2", "syslog.LOG_LOCAL3": "library/syslog.html#syslog.LOG_LOCAL3", "syslog.LOG_LOCAL4": "library/syslog.html#syslog.LOG_LOCAL4", "syslog.LOG_LOCAL5": "library/syslog.html#syslog.LOG_LOCAL5", "syslog.LOG_LOCAL6": "library/syslog.html#syslog.LOG_LOCAL6", "syslog.LOG_LOCAL7": "library/syslog.html#syslog.LOG_LOCAL7", "syslog.LOG_LPR": "library/syslog.html#syslog.LOG_LPR", "syslog.LOG_MAIL": "library/syslog.html#syslog.LOG_MAIL", "syslog.LOG_NDELAY": "library/syslog.html#syslog.LOG_NDELAY", "syslog.LOG_NETINFO": "library/syslog.html#syslog.LOG_NETINFO", "syslog.LOG_NEWS": "library/syslog.html#syslog.LOG_NEWS", "syslog.LOG_NOTICE": "library/syslog.html#syslog.LOG_NOTICE", "syslog.LOG_NOWAIT": "library/syslog.html#syslog.LOG_NOWAIT", "syslog.LOG_ODELAY": "library/syslog.html#syslog.LOG_ODELAY", "syslog.LOG_PERROR": "library/syslog.html#syslog.LOG_PERROR", "syslog.LOG_PID": "library/syslog.html#syslog.LOG_PID", "syslog.LOG_RAS": "library/syslog.html#syslog.LOG_RAS", "syslog.LOG_REMOTEAUTH": "library/syslog.html#syslog.LOG_REMOTEAUTH", "syslog.LOG_SYSLOG": "library/syslog.html#syslog.LOG_SYSLOG", "syslog.LOG_USER": "library/syslog.html#syslog.LOG_USER", "syslog.LOG_UUCP": "library/syslog.html#syslog.LOG_UUCP", "syslog.LOG_WARNING": "library/syslog.html#syslog.LOG_WARNING", "syslog.openlog()": "library/syslog.html#syslog.openlog", "syslog.setlogmask()": "library/syslog.html#syslog.setlogmask", "syslog.syslog()": "library/syslog.html#syslog.syslog", "SysLogHandler (logging.handlers)": "library/logging.handlers.html#sysloghandler", "SystemError": "library/exceptions.html#SystemError", "SystemExit": "library/exceptions.html#SystemExit", "SystemExit.code": "library/exceptions.html#SystemExit.code", "TabError": "library/exceptions.html#TabError", "tabnanny": "library/tabnanny.html", "tabnanny.check()": "library/tabnanny.html#tabnanny.check", "tabnanny.filename_only": "library/tabnanny.html#tabnanny.filename_only", "tabnanny.NannyNag": "library/tabnanny.html#tabnanny.NannyNag", "tabnanny.process_tokens()": "library/tabnanny.html#tabnanny.process_tokens", "tabnanny.verbose": "library/tabnanny.html#tabnanny.verbose", "tarfile": "library/tarfile.html", "TarFile Objects (tarfile)": "library/tarfile.html#tarfile-objects", "tarfile.AbsoluteLinkError": "library/tarfile.html#tarfile.AbsoluteLinkError", "tarfile.AbsolutePathError": "library/tarfile.html#tarfile.AbsolutePathError", "tarfile.AREGTYPE": "library/tarfile.html#tarfile.AREGTYPE", "tarfile.BLKTYPE": "library/tarfile.html#tarfile.BLKTYPE", "tarfile.CHRTYPE": "library/tarfile.html#tarfile.CHRTYPE", "tarfile.CompressionError": "library/tarfile.html#tarfile.CompressionError", "tarfile.CONTTYPE": "library/tarfile.html#tarfile.CONTTYPE", "tarfile.data_filter()": "library/tarfile.html#tarfile.data_filter", "tarfile.DEFAULT_FORMAT": "library/tarfile.html#tarfile.DEFAULT_FORMAT", "tarfile.DIRTYPE": "library/tarfile.html#tarfile.DIRTYPE", "tarfile.ENCODING": "library/tarfile.html#tarfile.ENCODING", "tarfile.ExtractError": "library/tarfile.html#tarfile.ExtractError", "tarfile.FIFOTYPE": "library/tarfile.html#tarfile.FIFOTYPE", "tarfile.FilterError": "library/tarfile.html#tarfile.FilterError", "tarfile.FilterError.tarinfo": "library/tarfile.html#tarfile.FilterError.tarinfo", "tarfile.fully_trusted_filter()": "library/tarfile.html#tarfile.fully_trusted_filter", "tarfile.GNU_FORMAT": "library/tarfile.html#tarfile.GNU_FORMAT", "tarfile.GNUTYPE_LONGLINK": "library/tarfile.html#tarfile.GNUTYPE_LONGLINK", "tarfile.GNUTYPE_LONGNAME": "library/tarfile.html#tarfile.GNUTYPE_LONGNAME", "tarfile.GNUTYPE_SPARSE": "library/tarfile.html#tarfile.GNUTYPE_SPARSE", "tarfile.HeaderError": "library/tarfile.html#tarfile.HeaderError", "tarfile.is_tarfile()": "library/tarfile.html#tarfile.is_tarfile", "tarfile.LinkOutsideDestinationError": "library/tarfile.html#tarfile.LinkOutsideDestinationError", "tarfile.LNKTYPE": "library/tarfile.html#tarfile.LNKTYPE", "tarfile.open()": "library/tarfile.html#tarfile.open", "tarfile.OutsideDestinationError": "library/tarfile.html#tarfile.OutsideDestinationError", "tarfile.PAX_FORMAT": "library/tarfile.html#tarfile.PAX_FORMAT", "tarfile.ReadError": "library/tarfile.html#tarfile.ReadError", "tarfile.REGTYPE": "library/tarfile.html#tarfile.REGTYPE", "tarfile.SpecialFileError": "library/tarfile.html#tarfile.SpecialFileError", "tarfile.StreamError": "library/tarfile.html#tarfile.StreamError", "tarfile.SYMTYPE": "library/tarfile.html#tarfile.SYMTYPE", "tarfile.tar_filter()": "library/tarfile.html#tarfile.tar_filter", "tarfile.TarError": "library/tarfile.html#tarfile.TarError", "tarfile.TarFile": "library/tarfile.html#tarfile.TarFile", "tarfile.TarFile.add()": "library/tarfile.html#tarfile.TarFile.add", "tarfile.TarFile.addfile()": "library/tarfile.html#tarfile.TarFile.addfile", "tarfile.TarFile.close()": "library/tarfile.html#tarfile.TarFile.close", "tarfile.TarFile.errorlevel": "library/tarfile.html#tarfile.TarFile.errorlevel", "tarfile.TarFile.extract()": "library/tarfile.html#tarfile.TarFile.extract", "tarfile.TarFile.extractall()": "library/tarfile.html#tarfile.TarFile.extractall", "tarfile.TarFile.extractfile()": "library/tarfile.html#tarfile.TarFile.extractfile", "tarfile.TarFile.extraction_filter": "library/tarfile.html#tarfile.TarFile.extraction_filter", "tarfile.TarFile.getmember()": "library/tarfile.html#tarfile.TarFile.getmember", "tarfile.TarFile.getmembers()": "library/tarfile.html#tarfile.TarFile.getmembers", "tarfile.TarFile.getnames()": "library/tarfile.html#tarfile.TarFile.getnames", "tarfile.TarFile.gettarinfo()": "library/tarfile.html#tarfile.TarFile.gettarinfo", "tarfile.TarFile.list()": "library/tarfile.html#tarfile.TarFile.list", "tarfile.TarFile.next()": "library/tarfile.html#tarfile.TarFile.next", "tarfile.TarFile.open()": "library/tarfile.html#tarfile.TarFile.open", "tarfile.TarFile.pax_headers": "library/tarfile.html#tarfile.TarFile.pax_headers", "tarfile.TarInfo": "library/tarfile.html#tarfile.TarInfo", "tarfile.TarInfo.chksum": "library/tarfile.html#tarfile.TarInfo.chksum", "tarfile.TarInfo.devmajor": "library/tarfile.html#tarfile.TarInfo.devmajor", "tarfile.TarInfo.devminor": "library/tarfile.html#tarfile.TarInfo.devminor", "tarfile.TarInfo.frombuf()": "library/tarfile.html#tarfile.TarInfo.frombuf", "tarfile.TarInfo.fromtarfile()": "library/tarfile.html#tarfile.TarInfo.fromtarfile", "tarfile.TarInfo.gid": "library/tarfile.html#tarfile.TarInfo.gid", "tarfile.TarInfo.gname": "library/tarfile.html#tarfile.TarInfo.gname", "tarfile.TarInfo.isblk()": "library/tarfile.html#tarfile.TarInfo.isblk", "tarfile.TarInfo.ischr()": "library/tarfile.html#tarfile.TarInfo.ischr", "tarfile.TarInfo.isdev()": "library/tarfile.html#tarfile.TarInfo.isdev", "tarfile.TarInfo.isdir()": "library/tarfile.html#tarfile.TarInfo.isdir", "tarfile.TarInfo.isfifo()": "library/tarfile.html#tarfile.TarInfo.isfifo", "tarfile.TarInfo.isfile()": "library/tarfile.html#tarfile.TarInfo.isfile", "tarfile.TarInfo.islnk()": "library/tarfile.html#tarfile.TarInfo.islnk", "tarfile.TarInfo.isreg()": "library/tarfile.html#tarfile.TarInfo.isreg", "tarfile.TarInfo.issym()": "library/tarfile.html#tarfile.TarInfo.issym", "tarfile.TarInfo.linkname": "library/tarfile.html#tarfile.TarInfo.linkname", "tarfile.TarInfo.mode": "library/tarfile.html#tarfile.TarInfo.mode", "tarfile.TarInfo.mtime": "library/tarfile.html#tarfile.TarInfo.mtime", "tarfile.TarInfo.name": "library/tarfile.html#tarfile.TarInfo.name", "tarfile.TarInfo.offset": "library/tarfile.html#tarfile.TarInfo.offset", "tarfile.TarInfo.offset_data": "library/tarfile.html#tarfile.TarInfo.offset_data", "tarfile.TarInfo.pax_headers": "library/tarfile.html#tarfile.TarInfo.pax_headers", "tarfile.TarInfo.replace()": "library/tarfile.html#tarfile.TarInfo.replace", "tarfile.TarInfo.size": "library/tarfile.html#tarfile.TarInfo.size", "tarfile.TarInfo.sparse": "library/tarfile.html#tarfile.TarInfo.sparse", "tarfile.TarInfo.tobuf()": "library/tarfile.html#tarfile.TarInfo.tobuf", "tarfile.TarInfo.type": "library/tarfile.html#tarfile.TarInfo.type", "tarfile.TarInfo.uid": "library/tarfile.html#tarfile.TarInfo.uid", "tarfile.TarInfo.uname": "library/tarfile.html#tarfile.TarInfo.uname", "tarfile.USTAR_FORMAT": "library/tarfile.html#tarfile.USTAR_FORMAT", "TarInfo Objects (tarfile)": "library/tarfile.html#tarinfo-objects", "Task Cancellation (Coroutines and Tasks)": "library/asyncio-task.html#task-cancellation", "Task Groups (Coroutines and Tasks)": "library/asyncio-task.html#task-groups", "Task lifetime support (Extending)": "library/asyncio-extending.html#task-lifetime-support", "Task Object (Coroutines and Tasks)": "library/asyncio-task.html#task-object", "Tasks (High-level API Index)": "library/asyncio-api-index.html#tasks", "tempfile": "library/tempfile.html", "tempfile.gettempdir()": "library/tempfile.html#tempfile.gettempdir", "tempfile.gettempdirb()": "library/tempfile.html#tempfile.gettempdirb", "tempfile.gettempprefix()": "library/tempfile.html#tempfile.gettempprefix", "tempfile.gettempprefixb()": "library/tempfile.html#tempfile.gettempprefixb", "tempfile.mkdtemp()": "library/tempfile.html#tempfile.mkdtemp", "tempfile.mkstemp()": "library/tempfile.html#tempfile.mkstemp", "tempfile.mktemp()": "library/tempfile.html#tempfile.mktemp", "tempfile.NamedTemporaryFile()": "library/tempfile.html#tempfile.NamedTemporaryFile", "tempfile.SpooledTemporaryFile": "library/tempfile.html#tempfile.SpooledTemporaryFile", "tempfile.SpooledTemporaryFile.rollover()": "library/tempfile.html#tempfile.SpooledTemporaryFile.rollover", "tempfile.tempdir": "library/tempfile.html#tempfile.tempdir", "tempfile.TemporaryDirectory": "library/tempfile.html#tempfile.TemporaryDirectory", "tempfile.TemporaryDirectory.cleanup()": "library/tempfile.html#tempfile.TemporaryDirectory.cleanup", "tempfile.TemporaryDirectory.name": "library/tempfile.html#tempfile.TemporaryDirectory.name", "tempfile.TemporaryFile()": "library/tempfile.html#tempfile.TemporaryFile", "Template strings (string)": "library/string.html#template-strings", "Temporarily Suppressing Warnings (warnings)": "library/warnings.html#temporarily-suppressing-warnings", "termios": "library/termios.html", "termios.tcdrain()": "library/termios.html#termios.tcdrain", "termios.tcflow()": "library/termios.html#termios.tcflow", "termios.tcflush()": "library/termios.html#termios.tcflush", "termios.tcgetattr()": "library/termios.html#termios.tcgetattr", "termios.tcgetwinsize()": "library/termios.html#termios.tcgetwinsize", "termios.TCSADRAIN": "library/termios.html#termios.TCSADRAIN", "termios.TCSAFLUSH": "library/termios.html#termios.TCSAFLUSH", "termios.TCSANOW": "library/termios.html#termios.TCSANOW", "termios.tcsendbreak()": "library/termios.html#termios.tcsendbreak", "termios.tcsetattr()": "library/termios.html#termios.tcsetattr", "termios.tcsetwinsize()": "library/termios.html#termios.tcsetwinsize", "test": "library/test.html", "Test Discovery (unittest)": "library/unittest.html#test-discovery", "test.support.adjust_int_max_str_digits()": "library/test.html#test.support.adjust_int_max_str_digits", "test.support.ALWAYS_EQ": "library/test.html#test.support.ALWAYS_EQ", "test.support.anticipate_failure()": "library/test.html#test.support.anticipate_failure", "test.support.args_from_interpreter_flags()": "library/test.html#test.support.args_from_interpreter_flags", "test.support.bigaddrspacetest()": "library/test.html#test.support.bigaddrspacetest", "test.support.bigmemtest()": "library/test.html#test.support.bigmemtest", "test.support.busy_retry()": "library/test.html#test.support.busy_retry", "test.support.bytecode_helper.BytecodeTestCase": "library/test.html#test.support.bytecode_helper.BytecodeTestCase", "test.support.bytecode_helper.BytecodeTestCase.assertInBytecode()": "library/test.html#test.support.bytecode_helper.BytecodeTestCase.assertInBytecode", "test.support.bytecode_helper.BytecodeTestCase.assertNotInBytecode()": "library/test.html#test.support.bytecode_helper.BytecodeTestCase.assertNotInBytecode", "test.support.bytecode_helper.BytecodeTestCase.get_disassembly_as_string()": "library/test.html#test.support.bytecode_helper.BytecodeTestCase.get_disassembly_as_string", "test.support.calcobjsize()": "library/test.html#test.support.calcobjsize", "test.support.calcvobjsize()": "library/test.html#test.support.calcvobjsize", "test.support.captured_stderr()": "library/test.html#test.support.captured_stderr", "test.support.captured_stdin()": "library/test.html#test.support.captured_stdin", "test.support.captured_stdout()": "library/test.html#test.support.captured_stdout", "test.support.catch_unraisable_exception()": "library/test.html#test.support.catch_unraisable_exception", "test.support.check__all__()": "library/test.html#test.support.check__all__", "test.support.check_disallow_instantiation()": "library/test.html#test.support.check_disallow_instantiation", "test.support.check_free_after_iterating()": "library/test.html#test.support.check_free_after_iterating", "test.support.check_impl_detail()": "library/test.html#test.support.check_impl_detail", "test.support.check_syntax_error()": "library/test.html#test.support.check_syntax_error", "test.support.checksizeof()": "library/test.html#test.support.checksizeof", "test.support.cpython_only()": "library/test.html#test.support.cpython_only", "test.support.detect_api_mismatch()": "library/test.html#test.support.detect_api_mismatch", "test.support.disable_faulthandler()": "library/test.html#test.support.disable_faulthandler", "test.support.disable_gc()": "library/test.html#test.support.disable_gc", "test.support.findfile()": "library/test.html#test.support.findfile", "test.support.flush_std_streams()": "library/test.html#test.support.flush_std_streams", "test.support.gc_collect()": "library/test.html#test.support.gc_collect", "test.support.get_attribute()": "library/test.html#test.support.get_attribute", "test.support.get_original_stdout()": "library/test.html#test.support.get_original_stdout", "test.support.get_pagesize()": "library/test.html#test.support.get_pagesize", "test.support.HAVE_DOCSTRINGS": "library/test.html#test.support.HAVE_DOCSTRINGS", "test.support.impl_detail()": "library/test.html#test.support.impl_detail", "test.support.import_helper.CleanImport": "library/test.html#test.support.import_helper.CleanImport", "test.support.import_helper.DirsOnSysPath": "library/test.html#test.support.import_helper.DirsOnSysPath", "test.support.import_helper.forget()": "library/test.html#test.support.import_helper.forget", "test.support.import_helper.import_fresh_module()": "library/test.html#test.support.import_helper.import_fresh_module", "test.support.import_helper.import_module()": "library/test.html#test.support.import_helper.import_module", "test.support.import_helper.make_legacy_pyc()": "library/test.html#test.support.import_helper.make_legacy_pyc", "test.support.import_helper.modules_cleanup()": "library/test.html#test.support.import_helper.modules_cleanup", "test.support.import_helper.modules_setup()": "library/test.html#test.support.import_helper.modules_setup", "test.support.import_helper.unload()": "library/test.html#test.support.import_helper.unload", "test.support.INTERNET_TIMEOUT": "library/test.html#test.support.INTERNET_TIMEOUT", "test.support.is_android": "library/test.html#test.support.is_android", "test.support.is_jython": "library/test.html#test.support.is_jython", "test.support.is_resource_enabled()": "library/test.html#test.support.is_resource_enabled", "test.support.LARGEST": "library/test.html#test.support.LARGEST", "test.support.load_package_tests()": "library/test.html#test.support.load_package_tests", "test.support.LONG_TIMEOUT": "library/test.html#test.support.LONG_TIMEOUT", "test.support.LOOPBACK_TIMEOUT": "library/test.html#test.support.LOOPBACK_TIMEOUT", "test.support.Matcher": "library/test.html#test.support.Matcher", "test.support.Matcher.match_value()": "library/test.html#test.support.Matcher.match_value", "test.support.Matcher.matches()": "library/test.html#test.support.Matcher.matches", "test.support.max_memuse": "library/test.html#test.support.max_memuse", "test.support.MAX_Py_ssize_t": "library/test.html#test.support.MAX_Py_ssize_t", "test.support.MISSING_C_DOCSTRINGS": "library/test.html#test.support.MISSING_C_DOCSTRINGS", "test.support.missing_compiler_executable()": "library/test.html#test.support.missing_compiler_executable", "test.support.NEVER_EQ": "library/test.html#test.support.NEVER_EQ", "test.support.no_tracing()": "library/test.html#test.support.no_tracing", "test.support.open_urlresource()": "library/test.html#test.support.open_urlresource", "test.support.optim_args_from_interpreter_flags()": "library/test.html#test.support.optim_args_from_interpreter_flags", "test.support.os_helper.can_symlink()": "library/test.html#test.support.os_helper.can_symlink", "test.support.os_helper.can_xattr()": "library/test.html#test.support.os_helper.can_xattr", "test.support.os_helper.change_cwd()": "library/test.html#test.support.os_helper.change_cwd", "test.support.os_helper.create_empty_file()": "library/test.html#test.support.os_helper.create_empty_file", "test.support.os_helper.EnvironmentVarGuard": "library/test.html#test.support.os_helper.EnvironmentVarGuard", "test.support.os_helper.EnvironmentVarGuard.set()": "library/test.html#test.support.os_helper.EnvironmentVarGuard.set", "test.support.os_helper.EnvironmentVarGuard.unset()": "library/test.html#test.support.os_helper.EnvironmentVarGuard.unset", "test.support.os_helper.FakePath": "library/test.html#test.support.os_helper.FakePath", "test.support.os_helper.fd_count()": "library/test.html#test.support.os_helper.fd_count", "test.support.os_helper.fs_is_case_insensitive()": "library/test.html#test.support.os_helper.fs_is_case_insensitive", "test.support.os_helper.FS_NONASCII": "library/test.html#test.support.os_helper.FS_NONASCII", "test.support.os_helper.make_bad_fd()": "library/test.html#test.support.os_helper.make_bad_fd", "test.support.os_helper.rmdir()": "library/test.html#test.support.os_helper.rmdir", "test.support.os_helper.rmtree()": "library/test.html#test.support.os_helper.rmtree", "test.support.os_helper.SAVEDCWD": "library/test.html#test.support.os_helper.SAVEDCWD", "test.support.os_helper.skip_unless_symlink()": "library/test.html#test.support.os_helper.skip_unless_symlink", "test.support.os_helper.skip_unless_xattr()": "library/test.html#test.support.os_helper.skip_unless_xattr", "test.support.os_helper.temp_cwd()": "library/test.html#test.support.os_helper.temp_cwd", "test.support.os_helper.temp_dir()": "library/test.html#test.support.os_helper.temp_dir", "test.support.os_helper.temp_umask()": "library/test.html#test.support.os_helper.temp_umask", "test.support.os_helper.TESTFN": "library/test.html#test.support.os_helper.TESTFN", "test.support.os_helper.TESTFN_NONASCII": "library/test.html#test.support.os_helper.TESTFN_NONASCII", "test.support.os_helper.TESTFN_UNDECODABLE": "library/test.html#test.support.os_helper.TESTFN_UNDECODABLE", "test.support.os_helper.TESTFN_UNENCODABLE": "library/test.html#test.support.os_helper.TESTFN_UNENCODABLE", "test.support.os_helper.TESTFN_UNICODE": "library/test.html#test.support.os_helper.TESTFN_UNICODE", "test.support.os_helper.unlink()": "library/test.html#test.support.os_helper.unlink", "test.support.patch()": "library/test.html#test.support.patch", "test.support.PGO": "library/test.html#test.support.PGO", "test.support.PIPE_MAX_SIZE": "library/test.html#test.support.PIPE_MAX_SIZE", "test.support.print_warning()": "library/test.html#test.support.print_warning", "test.support.Py_DEBUG": "library/test.html#test.support.Py_DEBUG", "test.support.python_is_optimized()": "library/test.html#test.support.python_is_optimized", "test.support.real_max_memuse": "library/test.html#test.support.real_max_memuse", "test.support.reap_children()": "library/test.html#test.support.reap_children", "test.support.record_original_stdout()": "library/test.html#test.support.record_original_stdout", "test.support.refcount_test()": "library/test.html#test.support.refcount_test", "test.support.requires()": "library/test.html#test.support.requires", "test.support.requires_bz2()": "library/test.html#test.support.requires_bz2", "test.support.requires_docstrings()": "library/test.html#test.support.requires_docstrings", "test.support.requires_freebsd_version()": "library/test.html#test.support.requires_freebsd_version", "test.support.requires_gil_enabled()": "library/test.html#test.support.requires_gil_enabled", "test.support.requires_gzip()": "library/test.html#test.support.requires_gzip", "test.support.requires_IEEE_754()": "library/test.html#test.support.requires_IEEE_754", "test.support.requires_limited_api()": "library/test.html#test.support.requires_limited_api", "test.support.requires_linux_version()": "library/test.html#test.support.requires_linux_version", "test.support.requires_lzma()": "library/test.html#test.support.requires_lzma", "test.support.requires_mac_version()": "library/test.html#test.support.requires_mac_version", "test.support.requires_resource()": "library/test.html#test.support.requires_resource", "test.support.requires_zlib()": "library/test.html#test.support.requires_zlib", "test.support.ResourceDenied": "library/test.html#test.support.ResourceDenied", "test.support.run_in_subinterp()": "library/test.html#test.support.run_in_subinterp", "test.support.run_with_locale()": "library/test.html#test.support.run_with_locale", "test.support.run_with_tz()": "library/test.html#test.support.run_with_tz", "test.support.SaveSignals": "library/test.html#test.support.SaveSignals", "test.support.SaveSignals.restore()": "library/test.html#test.support.SaveSignals.restore", "test.support.SaveSignals.save()": "library/test.html#test.support.SaveSignals.save", "test.support.script_helper.assert_python_failure()": "library/test.html#test.support.script_helper.assert_python_failure", "test.support.script_helper.assert_python_ok()": "library/test.html#test.support.script_helper.assert_python_ok", "test.support.script_helper.interpreter_requires_environment()": "library/test.html#test.support.script_helper.interpreter_requires_environment", "test.support.script_helper.kill_python()": "library/test.html#test.support.script_helper.kill_python", "test.support.script_helper.make_pkg()": "library/test.html#test.support.script_helper.make_pkg", "test.support.script_helper.make_script()": "library/test.html#test.support.script_helper.make_script", "test.support.script_helper.make_zip_pkg()": "library/test.html#test.support.script_helper.make_zip_pkg", "test.support.script_helper.make_zip_script()": "library/test.html#test.support.script_helper.make_zip_script", "test.support.script_helper.run_python_until_end()": "library/test.html#test.support.script_helper.run_python_until_end", "test.support.script_helper.spawn_python()": "library/test.html#test.support.script_helper.spawn_python", "test.support.set_memlimit()": "library/test.html#test.support.set_memlimit", "test.support.setswitchinterval()": "library/test.html#test.support.setswitchinterval", "test.support.SHORT_TIMEOUT": "library/test.html#test.support.SHORT_TIMEOUT", "test.support.skip_if_broken_multiprocessing_synchronize()": "library/test.html#test.support.skip_if_broken_multiprocessing_synchronize", "test.support.sleeping_retry()": "library/test.html#test.support.sleeping_retry", "test.support.SMALLEST": "library/test.html#test.support.SMALLEST", "test.support.SOCK_MAX_SIZE": "library/test.html#test.support.SOCK_MAX_SIZE", "test.support.socket_helper.bind_port()": "library/test.html#test.support.socket_helper.bind_port", "test.support.socket_helper.bind_unix_socket()": "library/test.html#test.support.socket_helper.bind_unix_socket", "test.support.socket_helper.find_unused_port()": "library/test.html#test.support.socket_helper.find_unused_port", "test.support.socket_helper.IPV6_ENABLED": "library/test.html#test.support.socket_helper.IPV6_ENABLED", "test.support.socket_helper.skip_unless_bind_unix_socket()": "library/test.html#test.support.socket_helper.skip_unless_bind_unix_socket", "test.support.socket_helper.transient_internet()": "library/test.html#test.support.socket_helper.transient_internet", "test.support.sortdict()": "library/test.html#test.support.sortdict", "test.support.SuppressCrashReport": "library/test.html#test.support.SuppressCrashReport", "test.support.swap_attr()": "library/test.html#test.support.swap_attr", "test.support.swap_item()": "library/test.html#test.support.swap_item", "test.support.system_must_validate_cert()": "library/test.html#test.support.system_must_validate_cert", "test.support.TEST_DATA_DIR": "library/test.html#test.support.TEST_DATA_DIR", "test.support.TEST_HOME_DIR": "library/test.html#test.support.TEST_HOME_DIR", "test.support.TEST_HTTP_URL": "library/test.html#test.support.TEST_HTTP_URL", "test.support.TEST_SUPPORT_DIR": "library/test.html#test.support.TEST_SUPPORT_DIR", "test.support.TestFailed": "library/test.html#test.support.TestFailed", "test.support.threading_helper.catch_threading_exception()": "library/test.html#test.support.threading_helper.catch_threading_exception", "test.support.threading_helper.join_thread()": "library/test.html#test.support.threading_helper.join_thread", "test.support.threading_helper.reap_threads()": "library/test.html#test.support.threading_helper.reap_threads", "test.support.threading_helper.start_threads()": "library/test.html#test.support.threading_helper.start_threads", "test.support.threading_helper.threading_cleanup()": "library/test.html#test.support.threading_helper.threading_cleanup", "test.support.threading_helper.threading_setup()": "library/test.html#test.support.threading_helper.threading_setup", "test.support.threading_helper.wait_threads_exit()": "library/test.html#test.support.threading_helper.wait_threads_exit", "test.support.unix_shell": "library/test.html#test.support.unix_shell", "test.support.verbose": "library/test.html#test.support.verbose", "test.support.wait_process()": "library/test.html#test.support.wait_process", "test.support.warnings_helper.check_no_resource_warning()": "library/test.html#test.support.warnings_helper.check_no_resource_warning", "test.support.warnings_helper.check_syntax_warning()": "library/test.html#test.support.warnings_helper.check_syntax_warning", "test.support.warnings_helper.check_warnings()": "library/test.html#test.support.warnings_helper.check_warnings", "test.support.warnings_helper.ignore_warnings()": "library/test.html#test.support.warnings_helper.ignore_warnings", "test.support.warnings_helper.WarningsRecorder": "library/test.html#test.support.warnings_helper.WarningsRecorder", "test.support.with_pymalloc()": "library/test.html#test.support.with_pymalloc", "Testing Warnings (warnings)": "library/warnings.html#testing-warnings", "text encoding": "glossary.html#term-text-encoding", "Text Encoding (io)": "library/io.html#text-encoding", "text file": "glossary.html#term-text-file", "Text Processing Services": "library/text.html", "Text Sequence Type \u2014 str (Types)": "library/stdtypes.html#text-sequence-type-str", "Textbox objects (curses)": "library/curses.html#textbox-objects", "textwrap": "library/textwrap.html", "textwrap.dedent()": "library/textwrap.html#textwrap.dedent", "textwrap.fill()": "library/textwrap.html#textwrap.fill", "textwrap.indent()": "library/textwrap.html#textwrap.indent", "textwrap.shorten()": "library/textwrap.html#textwrap.shorten", "textwrap.TextWrapper": "library/textwrap.html#textwrap.TextWrapper", "textwrap.TextWrapper.break_long_words": "library/textwrap.html#textwrap.TextWrapper.break_long_words", "textwrap.TextWrapper.break_on_hyphens": "library/textwrap.html#textwrap.TextWrapper.break_on_hyphens", "textwrap.TextWrapper.drop_whitespace": "library/textwrap.html#textwrap.TextWrapper.drop_whitespace", "textwrap.TextWrapper.expand_tabs": "library/textwrap.html#textwrap.TextWrapper.expand_tabs", "textwrap.TextWrapper.fill()": "library/textwrap.html#textwrap.TextWrapper.fill", "textwrap.TextWrapper.fix_sentence_endings": "library/textwrap.html#textwrap.TextWrapper.fix_sentence_endings", "textwrap.TextWrapper.initial_indent": "library/textwrap.html#textwrap.TextWrapper.initial_indent", "textwrap.TextWrapper.max_lines": "library/textwrap.html#textwrap.TextWrapper.max_lines", "textwrap.TextWrapper.placeholder": "library/textwrap.html#textwrap.TextWrapper.placeholder", "textwrap.TextWrapper.replace_whitespace": "library/textwrap.html#textwrap.TextWrapper.replace_whitespace", "textwrap.TextWrapper.subsequent_indent": "library/textwrap.html#textwrap.TextWrapper.subsequent_indent", "textwrap.TextWrapper.tabsize": "library/textwrap.html#textwrap.TextWrapper.tabsize", "textwrap.TextWrapper.width": "library/textwrap.html#textwrap.TextWrapper.width", "textwrap.TextWrapper.wrap()": "library/textwrap.html#textwrap.TextWrapper.wrap", "textwrap.wrap()": "library/textwrap.html#textwrap.wrap", "The add_argument() method (argparse)": "library/argparse.html#the-add-argument-method", "The Any type (typing)": "library/typing.html#the-any-type", "The Attributes Interface (xml.sax.xmlreader)": "library/xml.sax.reader.html#the-attributes-interface", "The AttributesNS Interface (xml.sax.xmlreader)": "library/xml.sax.reader.html#the-attributesns-interface", "The concurrent package": "library/concurrent.html", "The defusedxml Package (XML Processing Modules)": "library/xml.html#the-defusedxml-package", "The dircmp class (filecmp)": "library/filecmp.html#the-dircmp-class", "The initialization of the sys.path module search path": "library/sys_path_init.html", "The interpreter stack (inspect)": "library/inspect.html#the-interpreter-stack", "The Mock Class (unittest.mock)": "library/unittest.mock.html#the-mock-class", "The None Object": "c-api/none.html", "The numeric tower (numbers)": "library/numbers.html#the-numeric-tower", "The parse_args() method (argparse)": "library/argparse.html#the-parse-args-method", "The patchers (unittest.mock)": "library/unittest.mock.html#the-patchers", "The Python 2.3 Method Resolution Order": "howto/mro.html", "The Python Language Reference": "reference/index.html", "The Python Profilers": "library/profile.html", "The Python Standard Library": "library/index.html", "The Python Tutorial": "tutorial/index.html", "The Python Zip Application Archive Format (zipapp)": "library/zipapp.html#the-python-zip-application-archive-format", "The Stats Class (The Python Profilers)": "library/profile.html#the-stats-class", "The type of class objects (typing)": "library/typing.html#the-type-of-class-objects", "The Very High Level Layer": "c-api/veryhigh.html", "The Warnings Filter (warnings)": "library/warnings.html#the-warnings-filter", "The ZoneInfo class (zoneinfo)": "library/zoneinfo.html#the-zoneinfo-class", "Theory (heapq)": "library/heapq.html#theory", "Thread Objects (threading)": "library/threading.html#thread-objects", "Thread Safety (logging)": "library/logging.html#thread-safety", "Thread-Local Data (threading)": "library/threading.html#thread-local-data", "thread.allocate_lock()": "library/_thread.html#thread.allocate_lock", "thread.error": "library/_thread.html#thread.error", "thread.exit()": "library/_thread.html#thread.exit", "thread.get_ident()": "library/_thread.html#thread.get_ident", "thread.get_native_id()": "library/_thread.html#thread.get_native_id", "thread.interrupt_main()": "library/_thread.html#thread.interrupt_main", "thread.lock.acquire()": "library/_thread.html#thread.lock.acquire", "thread.lock.locked()": "library/_thread.html#thread.lock.locked", "thread.lock.release()": "library/_thread.html#thread.lock.release", "thread.LockType": "library/_thread.html#thread.LockType", "thread.stack_size()": "library/_thread.html#thread.stack_size", "thread.start_new_thread()": "library/_thread.html#thread.start_new_thread", "thread.TIMEOUT_MAX": "library/_thread.html#thread.TIMEOUT_MAX", "threading": "library/threading.html", "Threading model (tkinter)": "library/tkinter.html#threading-model", "threading.__excepthook__": "library/threading.html#threading.__excepthook__", "threading.active_count()": "library/threading.html#threading.active_count", "threading.Barrier": "library/threading.html#threading.Barrier", "threading.Barrier.abort()": "library/threading.html#threading.Barrier.abort", "threading.Barrier.broken": "library/threading.html#threading.Barrier.broken", "threading.Barrier.n_waiting": "library/threading.html#threading.Barrier.n_waiting", "threading.Barrier.parties": "library/threading.html#threading.Barrier.parties", "threading.Barrier.reset()": "library/threading.html#threading.Barrier.reset", "threading.Barrier.wait()": "library/threading.html#threading.Barrier.wait", "threading.BoundedSemaphore": "library/threading.html#threading.BoundedSemaphore", "threading.BrokenBarrierError": "library/threading.html#threading.BrokenBarrierError", "threading.Condition": "library/threading.html#threading.Condition", "threading.Condition.acquire()": "library/threading.html#threading.Condition.acquire", "threading.Condition.notify()": "library/threading.html#threading.Condition.notify", "threading.Condition.notify_all()": "library/threading.html#threading.Condition.notify_all", "threading.Condition.release()": "library/threading.html#threading.Condition.release", "threading.Condition.wait()": "library/threading.html#threading.Condition.wait", "threading.Condition.wait_for()": "library/threading.html#threading.Condition.wait_for", "threading.current_thread()": "library/threading.html#threading.current_thread", "threading.enumerate()": "library/threading.html#threading.enumerate", "threading.Event": "library/threading.html#threading.Event", "threading.Event.clear()": "library/threading.html#threading.Event.clear", "threading.Event.is_set()": "library/threading.html#threading.Event.is_set", "threading.Event.set()": "library/threading.html#threading.Event.set", "threading.Event.wait()": "library/threading.html#threading.Event.wait", "threading.excepthook()": "library/threading.html#threading.excepthook", "threading.get_ident()": "library/threading.html#threading.get_ident", "threading.get_native_id()": "library/threading.html#threading.get_native_id", "threading.getprofile()": "library/threading.html#threading.getprofile", "threading.gettrace()": "library/threading.html#threading.gettrace", "threading.local": "library/threading.html#threading.local", "threading.Lock": "library/threading.html#threading.Lock", "threading.Lock.acquire()": "library/threading.html#threading.Lock.acquire", "threading.Lock.locked()": "library/threading.html#threading.Lock.locked", "threading.Lock.release()": "library/threading.html#threading.Lock.release", "threading.main_thread()": "library/threading.html#threading.main_thread", "threading.RLock": "library/threading.html#threading.RLock", "threading.RLock.acquire()": "library/threading.html#threading.RLock.acquire", "threading.RLock.release()": "library/threading.html#threading.RLock.release", "threading.Semaphore": "library/threading.html#threading.Semaphore", "threading.Semaphore.acquire()": "library/threading.html#threading.Semaphore.acquire", "threading.Semaphore.release()": "library/threading.html#threading.Semaphore.release", "threading.setprofile()": "library/threading.html#threading.setprofile", "threading.setprofile_all_threads()": "library/threading.html#threading.setprofile_all_threads", "threading.settrace()": "library/threading.html#threading.settrace", "threading.settrace_all_threads()": "library/threading.html#threading.settrace_all_threads", "threading.stack_size()": "library/threading.html#threading.stack_size", "threading.Thread": "library/threading.html#threading.Thread", "threading.Thread.daemon": "library/threading.html#threading.Thread.daemon", "threading.Thread.getName()": "library/threading.html#threading.Thread.getName", "threading.Thread.ident": "library/threading.html#threading.Thread.ident", "threading.Thread.is_alive()": "library/threading.html#threading.Thread.is_alive", "threading.Thread.isDaemon()": "library/threading.html#threading.Thread.isDaemon", "threading.Thread.join()": "library/threading.html#threading.Thread.join", "threading.Thread.name": "library/threading.html#threading.Thread.name", "threading.Thread.native_id": "library/threading.html#threading.Thread.native_id", "threading.Thread.run()": "library/threading.html#threading.Thread.run", "threading.Thread.setDaemon()": "library/threading.html#threading.Thread.setDaemon", "threading.Thread.setName()": "library/threading.html#threading.Thread.setName", "threading.Thread.start()": "library/threading.html#threading.Thread.start", "threading.TIMEOUT_MAX": "library/threading.html#threading.TIMEOUT_MAX", "threading.Timer": "library/threading.html#threading.Timer", "threading.Timer.cancel()": "library/threading.html#threading.Timer.cancel", "ThreadPoolExecutor (concurrent.futures)": "library/concurrent.futures.html#threadpoolexecutor", "time": "library/time.html", "time Objects (datetime)": "library/datetime.html#time-objects", "time.altzone": "library/time.html#time.altzone", "time.asctime()": "library/time.html#time.asctime", "time.CLOCK_BOOTTIME": "library/time.html#time.CLOCK_BOOTTIME", "time.clock_getres()": "library/time.html#time.clock_getres", "time.clock_gettime()": "library/time.html#time.clock_gettime", "time.clock_gettime_ns()": "library/time.html#time.clock_gettime_ns", "time.CLOCK_HIGHRES": "library/time.html#time.CLOCK_HIGHRES", "time.CLOCK_MONOTONIC": "library/time.html#time.CLOCK_MONOTONIC", "time.CLOCK_MONOTONIC_RAW": "library/time.html#time.CLOCK_MONOTONIC_RAW", "time.CLOCK_MONOTONIC_RAW_APPROX": "library/time.html#time.CLOCK_MONOTONIC_RAW_APPROX", "time.CLOCK_PROCESS_CPUTIME_ID": "library/time.html#time.CLOCK_PROCESS_CPUTIME_ID", "time.CLOCK_PROF": "library/time.html#time.CLOCK_PROF", "time.CLOCK_REALTIME": "library/time.html#time.CLOCK_REALTIME", "time.clock_settime()": "library/time.html#time.clock_settime", "time.clock_settime_ns()": "library/time.html#time.clock_settime_ns", "time.CLOCK_TAI": "library/time.html#time.CLOCK_TAI", "time.CLOCK_THREAD_CPUTIME_ID": "library/time.html#time.CLOCK_THREAD_CPUTIME_ID", "time.CLOCK_UPTIME": "library/time.html#time.CLOCK_UPTIME", "time.CLOCK_UPTIME_RAW": "library/time.html#time.CLOCK_UPTIME_RAW", "time.CLOCK_UPTIME_RAW_APPROX": "library/time.html#time.CLOCK_UPTIME_RAW_APPROX", "time.ctime()": "library/time.html#time.ctime", "time.daylight": "library/time.html#time.daylight", "time.get_clock_info()": "library/time.html#time.get_clock_info", "time.gmtime()": "library/time.html#time.gmtime", "time.localtime()": "library/time.html#time.localtime", "time.mktime()": "library/time.html#time.mktime", "time.monotonic()": "library/time.html#time.monotonic", "time.monotonic_ns()": "library/time.html#time.monotonic_ns", "time.perf_counter()": "library/time.html#time.perf_counter", "time.perf_counter_ns()": "library/time.html#time.perf_counter_ns", "time.process_time()": "library/time.html#time.process_time", "time.process_time_ns()": "library/time.html#time.process_time_ns", "time.pthread_getcpuclockid()": "library/time.html#time.pthread_getcpuclockid", "time.sleep()": "library/time.html#time.sleep", "time.strftime()": "library/time.html#time.strftime", "time.strptime()": "library/time.html#time.strptime", "time.struct_time": "library/time.html#time.struct_time", "time.struct_time.tm_gmtoff": "library/time.html#time.struct_time.tm_gmtoff", "time.struct_time.tm_hour": "library/time.html#time.struct_time.tm_hour", "time.struct_time.tm_isdst": "library/time.html#time.struct_time.tm_isdst", "time.struct_time.tm_mday": "library/time.html#time.struct_time.tm_mday", "time.struct_time.tm_min": "library/time.html#time.struct_time.tm_min", "time.struct_time.tm_mon": "library/time.html#time.struct_time.tm_mon", "time.struct_time.tm_sec": "library/time.html#time.struct_time.tm_sec", "time.struct_time.tm_wday": "library/time.html#time.struct_time.tm_wday", "time.struct_time.tm_yday": "library/time.html#time.struct_time.tm_yday", "time.struct_time.tm_year": "library/time.html#time.struct_time.tm_year", "time.struct_time.tm_zone": "library/time.html#time.struct_time.tm_zone", "time.thread_time()": "library/time.html#time.thread_time", "time.thread_time_ns()": "library/time.html#time.thread_time_ns", "time.time()": "library/time.html#time.time", "time.time_ns()": "library/time.html#time.time_ns", "time.timezone": "library/time.html#time.timezone", "time.tzname": "library/time.html#time.tzname", "time.tzset()": "library/time.html#time.tzset", "timedelta Objects (datetime)": "library/datetime.html#timedelta-objects", "TimedRotatingFileHandler (logging.handlers)": "library/logging.handlers.html#timedrotatingfilehandler", "timeit": "library/timeit.html", "timeit.default_timer()": "library/timeit.html#timeit.default_timer", "timeit.repeat()": "library/timeit.html#timeit.repeat", "timeit.timeit()": "library/timeit.html#timeit.timeit", "timeit.Timer": "library/timeit.html#timeit.Timer", "timeit.Timer.autorange()": "library/timeit.html#timeit.Timer.autorange", "timeit.Timer.print_exc()": "library/timeit.html#timeit.Timer.print_exc", "timeit.Timer.repeat()": "library/timeit.html#timeit.Timer.repeat", "timeit.Timer.timeit()": "library/timeit.html#timeit.Timer.timeit", "TimeoutError": "library/exceptions.html#TimeoutError", "Timeouts (Coroutines and Tasks)": "library/asyncio-task.html#timeouts", "timer file descriptor HOWTO": "howto/timerfd.html", "Timer Objects (threading)": "library/threading.html#timer-objects", "Timezone Constants (time)": "library/time.html#timezone-constants", "timezone Objects (datetime)": "library/datetime.html#timezone-objects", "tkinter": "library/tkinter.html", "Tkinter Dialogs": "library/dialog.html", "Tkinter Life Preserver (tkinter)": "library/tkinter.html#tkinter-life-preserver", "Tkinter Modules (tkinter)": "library/tkinter.html#tkinter-modules", "tkinter.colorchooser": "library/tkinter.colorchooser.html", "tkinter.colorchooser.askcolor()": "library/tkinter.colorchooser.html#tkinter.colorchooser.askcolor", "tkinter.colorchooser.Chooser": "library/tkinter.colorchooser.html#tkinter.colorchooser.Chooser", "tkinter.commondialog \u2014 Dialog window templates (Tkinter Dialogs)": "library/dialog.html#module-tkinter.commondialog", "tkinter.commondialog.Dialog": "library/dialog.html#tkinter.commondialog.Dialog", "tkinter.commondialog.Dialog.show()": "library/dialog.html#tkinter.commondialog.Dialog.show", "tkinter.dnd": "library/tkinter.dnd.html", "tkinter.dnd.dnd_start()": "library/tkinter.dnd.html#tkinter.dnd.dnd_start", "tkinter.dnd.DndHandler": "library/tkinter.dnd.html#tkinter.dnd.DndHandler", "tkinter.dnd.DndHandler.cancel()": "library/tkinter.dnd.html#tkinter.dnd.DndHandler.cancel", "tkinter.dnd.DndHandler.finish()": "library/tkinter.dnd.html#tkinter.dnd.DndHandler.finish", "tkinter.dnd.DndHandler.on_motion()": "library/tkinter.dnd.html#tkinter.dnd.DndHandler.on_motion", "tkinter.dnd.DndHandler.on_release()": "library/tkinter.dnd.html#tkinter.dnd.DndHandler.on_release", "tkinter.EXCEPTION": "library/tkinter.html#tkinter.EXCEPTION", "tkinter.filedialog \u2014 File selection dialogs (Tkinter Dialogs)": "library/dialog.html#module-tkinter.filedialog", "tkinter.filedialog.askdirectory()": "library/dialog.html#tkinter.filedialog.askdirectory", "tkinter.filedialog.askopenfile()": "library/dialog.html#tkinter.filedialog.askopenfile", "tkinter.filedialog.askopenfilename()": "library/dialog.html#tkinter.filedialog.askopenfilename", "tkinter.filedialog.askopenfilenames()": "library/dialog.html#tkinter.filedialog.askopenfilenames", "tkinter.filedialog.askopenfiles()": "library/dialog.html#tkinter.filedialog.askopenfiles", "tkinter.filedialog.asksaveasfile()": "library/dialog.html#tkinter.filedialog.asksaveasfile", "tkinter.filedialog.asksaveasfilename()": "library/dialog.html#tkinter.filedialog.asksaveasfilename", "tkinter.filedialog.Directory": "library/dialog.html#tkinter.filedialog.Directory", "tkinter.filedialog.FileDialog": "library/dialog.html#tkinter.filedialog.FileDialog", "tkinter.filedialog.FileDialog.cancel_command()": "library/dialog.html#tkinter.filedialog.FileDialog.cancel_command", "tkinter.filedialog.FileDialog.dirs_double_event()": "library/dialog.html#tkinter.filedialog.FileDialog.dirs_double_event", "tkinter.filedialog.FileDialog.dirs_select_event()": "library/dialog.html#tkinter.filedialog.FileDialog.dirs_select_event", "tkinter.filedialog.FileDialog.files_double_event()": "library/dialog.html#tkinter.filedialog.FileDialog.files_double_event", "tkinter.filedialog.FileDialog.files_select_event()": "library/dialog.html#tkinter.filedialog.FileDialog.files_select_event", "tkinter.filedialog.FileDialog.filter_command()": "library/dialog.html#tkinter.filedialog.FileDialog.filter_command", "tkinter.filedialog.FileDialog.get_filter()": "library/dialog.html#tkinter.filedialog.FileDialog.get_filter", "tkinter.filedialog.FileDialog.get_selection()": "library/dialog.html#tkinter.filedialog.FileDialog.get_selection", "tkinter.filedialog.FileDialog.go()": "library/dialog.html#tkinter.filedialog.FileDialog.go", "tkinter.filedialog.FileDialog.ok_event()": "library/dialog.html#tkinter.filedialog.FileDialog.ok_event", "tkinter.filedialog.FileDialog.quit()": "library/dialog.html#tkinter.filedialog.FileDialog.quit", "tkinter.filedialog.FileDialog.set_filter()": "library/dialog.html#tkinter.filedialog.FileDialog.set_filter", "tkinter.filedialog.FileDialog.set_selection()": "library/dialog.html#tkinter.filedialog.FileDialog.set_selection", "tkinter.filedialog.LoadFileDialog": "library/dialog.html#tkinter.filedialog.LoadFileDialog", "tkinter.filedialog.LoadFileDialog.ok_command()": "library/dialog.html#tkinter.filedialog.LoadFileDialog.ok_command", "tkinter.filedialog.Open": "library/dialog.html#tkinter.filedialog.Open", "tkinter.filedialog.SaveAs": "library/dialog.html#tkinter.filedialog.SaveAs", "tkinter.filedialog.SaveFileDialog": "library/dialog.html#tkinter.filedialog.SaveFileDialog", "tkinter.filedialog.SaveFileDialog.ok_command()": "library/dialog.html#tkinter.filedialog.SaveFileDialog.ok_command", "tkinter.font": "library/tkinter.font.html", "tkinter.font.BOLD": "library/tkinter.font.html#tkinter.font.BOLD", "tkinter.font.families()": "library/tkinter.font.html#tkinter.font.families", "tkinter.font.Font": "library/tkinter.font.html#tkinter.font.Font", "tkinter.font.Font.actual()": "library/tkinter.font.html#tkinter.font.Font.actual", "tkinter.font.Font.cget()": "library/tkinter.font.html#tkinter.font.Font.cget", "tkinter.font.Font.config()": "library/tkinter.font.html#tkinter.font.Font.config", "tkinter.font.Font.copy()": "library/tkinter.font.html#tkinter.font.Font.copy", "tkinter.font.Font.measure()": "library/tkinter.font.html#tkinter.font.Font.measure", "tkinter.font.Font.metrics()": "library/tkinter.font.html#tkinter.font.Font.metrics", "tkinter.font.ITALIC": "library/tkinter.font.html#tkinter.font.ITALIC", "tkinter.font.names()": "library/tkinter.font.html#tkinter.font.names", "tkinter.font.nametofont()": "library/tkinter.font.html#tkinter.font.nametofont", "tkinter.font.NORMAL": "library/tkinter.font.html#tkinter.font.NORMAL", "tkinter.font.ROMAN": "library/tkinter.font.html#tkinter.font.ROMAN", "tkinter.messagebox": "library/tkinter.messagebox.html", "tkinter.messagebox.ABORT": "library/tkinter.messagebox.html#tkinter.messagebox.ABORT", "tkinter.messagebox.ABORTRETRYIGNORE": "library/tkinter.messagebox.html#tkinter.messagebox.ABORTRETRYIGNORE", "tkinter.messagebox.askokcancel()": "library/tkinter.messagebox.html#tkinter.messagebox.askokcancel", "tkinter.messagebox.askquestion()": "library/tkinter.messagebox.html#tkinter.messagebox.askquestion", "tkinter.messagebox.askretrycancel()": "library/tkinter.messagebox.html#tkinter.messagebox.askretrycancel", "tkinter.messagebox.askyesno()": "library/tkinter.messagebox.html#tkinter.messagebox.askyesno", "tkinter.messagebox.askyesnocancel()": "library/tkinter.messagebox.html#tkinter.messagebox.askyesnocancel", "tkinter.messagebox.CANCEL": "library/tkinter.messagebox.html#tkinter.messagebox.CANCEL", "tkinter.messagebox.ERROR": "library/tkinter.messagebox.html#tkinter.messagebox.ERROR", "tkinter.messagebox.IGNORE": "library/tkinter.messagebox.html#tkinter.messagebox.IGNORE", "tkinter.messagebox.INFO": "library/tkinter.messagebox.html#tkinter.messagebox.INFO", "tkinter.messagebox.Message": "library/tkinter.messagebox.html#tkinter.messagebox.Message", "tkinter.messagebox.Message.show()": "library/tkinter.messagebox.html#tkinter.messagebox.Message.show", "tkinter.messagebox.NO": "library/tkinter.messagebox.html#tkinter.messagebox.NO", "tkinter.messagebox.OK": "library/tkinter.messagebox.html#tkinter.messagebox.OK", "tkinter.messagebox.OKCANCEL": "library/tkinter.messagebox.html#tkinter.messagebox.OKCANCEL", "tkinter.messagebox.QUESTION": "library/tkinter.messagebox.html#tkinter.messagebox.QUESTION", "tkinter.messagebox.RETRY": "library/tkinter.messagebox.html#tkinter.messagebox.RETRY", "tkinter.messagebox.RETRYCANCEL": "library/tkinter.messagebox.html#tkinter.messagebox.RETRYCANCEL", "tkinter.messagebox.showerror()": "library/tkinter.messagebox.html#tkinter.messagebox.showerror", "tkinter.messagebox.showinfo()": "library/tkinter.messagebox.html#tkinter.messagebox.showinfo", "tkinter.messagebox.showwarning()": "library/tkinter.messagebox.html#tkinter.messagebox.showwarning", "tkinter.messagebox.WARNING": "library/tkinter.messagebox.html#tkinter.messagebox.WARNING", "tkinter.messagebox.YES": "library/tkinter.messagebox.html#tkinter.messagebox.YES", "tkinter.messagebox.YESNO": "library/tkinter.messagebox.html#tkinter.messagebox.YESNO", "tkinter.messagebox.YESNOCANCEL": "library/tkinter.messagebox.html#tkinter.messagebox.YESNOCANCEL", "tkinter.READABLE": "library/tkinter.html#tkinter.READABLE", "tkinter.scrolledtext": "library/tkinter.scrolledtext.html", "tkinter.scrolledtext.ScrolledText": "library/tkinter.scrolledtext.html#tkinter.scrolledtext.ScrolledText", "tkinter.scrolledtext.ScrolledText.frame": "library/tkinter.scrolledtext.html#tkinter.scrolledtext.ScrolledText.frame", "tkinter.scrolledtext.ScrolledText.vbar": "library/tkinter.scrolledtext.html#tkinter.scrolledtext.ScrolledText.vbar", "tkinter.simpledialog \u2014 Standard Tkinter input dialogs (Tkinter Dialogs)": "library/dialog.html#module-tkinter.simpledialog", "tkinter.simpledialog.askfloat()": "library/dialog.html#tkinter.simpledialog.askfloat", "tkinter.simpledialog.askinteger()": "library/dialog.html#tkinter.simpledialog.askinteger", "tkinter.simpledialog.askstring()": "library/dialog.html#tkinter.simpledialog.askstring", "tkinter.simpledialog.Dialog": "library/dialog.html#tkinter.simpledialog.Dialog", "tkinter.simpledialog.Dialog.body()": "library/dialog.html#tkinter.simpledialog.Dialog.body", "tkinter.simpledialog.Dialog.buttonbox()": "library/dialog.html#tkinter.simpledialog.Dialog.buttonbox", "tkinter.Tcl()": "library/tkinter.html#tkinter.Tcl", "tkinter.Tk": "library/tkinter.html#tkinter.Tk", "tkinter.Tk.children": "library/tkinter.html#tkinter.Tk.children", "tkinter.Tk.master": "library/tkinter.html#tkinter.Tk.master", "tkinter.Tk.tk": "library/tkinter.html#tkinter.Tk.tk", "tkinter.ttk": "library/tkinter.ttk.html", "tkinter.ttk.Combobox": "library/tkinter.ttk.html#tkinter.ttk.Combobox", "tkinter.ttk.Combobox.current()": "library/tkinter.ttk.html#tkinter.ttk.Combobox.current", "tkinter.ttk.Combobox.get()": "library/tkinter.ttk.html#tkinter.ttk.Combobox.get", "tkinter.ttk.Combobox.set()": "library/tkinter.ttk.html#tkinter.ttk.Combobox.set", "tkinter.ttk.Notebook": "library/tkinter.ttk.html#tkinter.ttk.Notebook", "tkinter.ttk.Notebook.add()": "library/tkinter.ttk.html#tkinter.ttk.Notebook.add", "tkinter.ttk.Notebook.enable_traversal()": "library/tkinter.ttk.html#tkinter.ttk.Notebook.enable_traversal", "tkinter.ttk.Notebook.forget()": "library/tkinter.ttk.html#tkinter.ttk.Notebook.forget", "tkinter.ttk.Notebook.hide()": "library/tkinter.ttk.html#tkinter.ttk.Notebook.hide", "tkinter.ttk.Notebook.identify()": "library/tkinter.ttk.html#tkinter.ttk.Notebook.identify", "tkinter.ttk.Notebook.index()": "library/tkinter.ttk.html#tkinter.ttk.Notebook.index", "tkinter.ttk.Notebook.insert()": "library/tkinter.ttk.html#tkinter.ttk.Notebook.insert", "tkinter.ttk.Notebook.select()": "library/tkinter.ttk.html#tkinter.ttk.Notebook.select", "tkinter.ttk.Notebook.tab()": "library/tkinter.ttk.html#tkinter.ttk.Notebook.tab", "tkinter.ttk.Notebook.tabs()": "library/tkinter.ttk.html#tkinter.ttk.Notebook.tabs", "tkinter.ttk.Progressbar": "library/tkinter.ttk.html#tkinter.ttk.Progressbar", "tkinter.ttk.Progressbar.start()": "library/tkinter.ttk.html#tkinter.ttk.Progressbar.start", "tkinter.ttk.Progressbar.step()": "library/tkinter.ttk.html#tkinter.ttk.Progressbar.step", "tkinter.ttk.Progressbar.stop()": "library/tkinter.ttk.html#tkinter.ttk.Progressbar.stop", "tkinter.ttk.Spinbox": "library/tkinter.ttk.html#tkinter.ttk.Spinbox", "tkinter.ttk.Spinbox.get()": "library/tkinter.ttk.html#tkinter.ttk.Spinbox.get", "tkinter.ttk.Spinbox.set()": "library/tkinter.ttk.html#tkinter.ttk.Spinbox.set", "tkinter.ttk.Style": "library/tkinter.ttk.html#tkinter.ttk.Style", "tkinter.ttk.Style.configure()": "library/tkinter.ttk.html#tkinter.ttk.Style.configure", "tkinter.ttk.Style.element_create()": "library/tkinter.ttk.html#tkinter.ttk.Style.element_create", "tkinter.ttk.Style.element_names()": "library/tkinter.ttk.html#tkinter.ttk.Style.element_names", "tkinter.ttk.Style.element_options()": "library/tkinter.ttk.html#tkinter.ttk.Style.element_options", "tkinter.ttk.Style.layout()": "library/tkinter.ttk.html#tkinter.ttk.Style.layout", "tkinter.ttk.Style.lookup()": "library/tkinter.ttk.html#tkinter.ttk.Style.lookup", "tkinter.ttk.Style.map()": "library/tkinter.ttk.html#tkinter.ttk.Style.map", "tkinter.ttk.Style.theme_create()": "library/tkinter.ttk.html#tkinter.ttk.Style.theme_create", "tkinter.ttk.Style.theme_names()": "library/tkinter.ttk.html#tkinter.ttk.Style.theme_names", "tkinter.ttk.Style.theme_settings()": "library/tkinter.ttk.html#tkinter.ttk.Style.theme_settings", "tkinter.ttk.Style.theme_use()": "library/tkinter.ttk.html#tkinter.ttk.Style.theme_use", "tkinter.ttk.Treeview": "library/tkinter.ttk.html#tkinter.ttk.Treeview", "tkinter.ttk.Treeview.bbox()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.bbox", "tkinter.ttk.Treeview.column()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.column", "tkinter.ttk.Treeview.delete()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.delete", "tkinter.ttk.Treeview.detach()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.detach", "tkinter.ttk.Treeview.exists()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.exists", "tkinter.ttk.Treeview.focus()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.focus", "tkinter.ttk.Treeview.get_children()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.get_children", "tkinter.ttk.Treeview.heading()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.heading", "tkinter.ttk.Treeview.identify()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.identify", "tkinter.ttk.Treeview.identify_column()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.identify_column", "tkinter.ttk.Treeview.identify_element()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.identify_element", "tkinter.ttk.Treeview.identify_region()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.identify_region", "tkinter.ttk.Treeview.identify_row()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.identify_row", "tkinter.ttk.Treeview.index()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.index", "tkinter.ttk.Treeview.insert()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.insert", "tkinter.ttk.Treeview.item()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.item", "tkinter.ttk.Treeview.move()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.move", "tkinter.ttk.Treeview.next()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.next", "tkinter.ttk.Treeview.parent()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.parent", "tkinter.ttk.Treeview.prev()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.prev", "tkinter.ttk.Treeview.reattach()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.reattach", "tkinter.ttk.Treeview.see()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.see", "tkinter.ttk.Treeview.selection()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.selection", "tkinter.ttk.Treeview.selection_add()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.selection_add", "tkinter.ttk.Treeview.selection_remove()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.selection_remove", "tkinter.ttk.Treeview.selection_set()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.selection_set", "tkinter.ttk.Treeview.selection_toggle()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.selection_toggle", "tkinter.ttk.Treeview.set()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.set", "tkinter.ttk.Treeview.set_children()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.set_children", "tkinter.ttk.Treeview.tag_bind()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.tag_bind", "tkinter.ttk.Treeview.tag_configure()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.tag_configure", "tkinter.ttk.Treeview.tag_has()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.tag_has", "tkinter.ttk.Treeview.xview()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.xview", "tkinter.ttk.Treeview.yview()": "library/tkinter.ttk.html#tkinter.ttk.Treeview.yview", "tkinter.ttk.Widget": "library/tkinter.ttk.html#tkinter.ttk.Widget", "tkinter.ttk.Widget.identify()": "library/tkinter.ttk.html#tkinter.ttk.Widget.identify", "tkinter.ttk.Widget.instate()": "library/tkinter.ttk.html#tkinter.ttk.Widget.instate", "tkinter.ttk.Widget.state()": "library/tkinter.ttk.html#tkinter.ttk.Widget.state", "tkinter.Widget.tk.createfilehandler()": "library/tkinter.html#tkinter.Widget.tk.createfilehandler", "tkinter.Widget.tk.deletefilehandler()": "library/tkinter.html#tkinter.Widget.tk.deletefilehandler", "tkinter.WRITABLE": "library/tkinter.html#tkinter.WRITABLE", "TLS 1.3 (ssl)": "library/ssl.html#tls-1-3", "token": "library/token.html", "token.AMPER": "library/token.html#token.AMPER", "token.AMPEREQUAL": "library/token.html#token.AMPEREQUAL", "token.AT": "library/token.html#token.AT", "token.ATEQUAL": "library/token.html#token.ATEQUAL", "token.CIRCUMFLEX": "library/token.html#token.CIRCUMFLEX", "token.CIRCUMFLEXEQUAL": "library/token.html#token.CIRCUMFLEXEQUAL", "token.COLON": "library/token.html#token.COLON", "token.COLONEQUAL": "library/token.html#token.COLONEQUAL", "token.COMMA": "library/token.html#token.COMMA", "token.COMMENT": "library/token.html#token.COMMENT", "token.DEDENT": "library/token.html#token.DEDENT", "token.DOT": "library/token.html#token.DOT", "token.DOUBLESLASH": "library/token.html#token.DOUBLESLASH", "token.DOUBLESLASHEQUAL": "library/token.html#token.DOUBLESLASHEQUAL", "token.DOUBLESTAR": "library/token.html#token.DOUBLESTAR", "token.DOUBLESTAREQUAL": "library/token.html#token.DOUBLESTAREQUAL", "token.ELLIPSIS": "library/token.html#token.ELLIPSIS", "token.ENCODING": "library/token.html#token.ENCODING", "token.ENDMARKER": "library/token.html#token.ENDMARKER", "token.EQEQUAL": "library/token.html#token.EQEQUAL", "token.EQUAL": "library/token.html#token.EQUAL", "token.ERRORTOKEN": "library/token.html#token.ERRORTOKEN", "token.EXCLAMATION": "library/token.html#token.EXCLAMATION", "token.FSTRING_END": "library/token.html#token.FSTRING_END", "token.FSTRING_MIDDLE": "library/token.html#token.FSTRING_MIDDLE", "token.FSTRING_START": "library/token.html#token.FSTRING_START", "token.GREATER": "library/token.html#token.GREATER", "token.GREATEREQUAL": "library/token.html#token.GREATEREQUAL", "token.INDENT": "library/token.html#token.INDENT", "token.ISEOF()": "library/token.html#token.ISEOF", "token.ISNONTERMINAL()": "library/token.html#token.ISNONTERMINAL", "token.ISTERMINAL()": "library/token.html#token.ISTERMINAL", "token.LBRACE": "library/token.html#token.LBRACE", "token.LEFTSHIFT": "library/token.html#token.LEFTSHIFT", "token.LEFTSHIFTEQUAL": "library/token.html#token.LEFTSHIFTEQUAL", "token.LESS": "library/token.html#token.LESS", "token.LESSEQUAL": "library/token.html#token.LESSEQUAL", "token.LPAR": "library/token.html#token.LPAR", "token.LSQB": "library/token.html#token.LSQB", "token.MINEQUAL": "library/token.html#token.MINEQUAL", "token.MINUS": "library/token.html#token.MINUS", "token.N_TOKENS": "library/token.html#token.N_TOKENS", "token.NAME": "library/token.html#token.NAME", "token.NEWLINE": "library/token.html#token.NEWLINE", "token.NL": "library/token.html#token.NL", "token.NOTEQUAL": "library/token.html#token.NOTEQUAL", "token.NT_OFFSET": "library/token.html#token.NT_OFFSET", "token.NUMBER": "library/token.html#token.NUMBER", "token.OP": "library/token.html#token.OP", "token.PERCENT": "library/token.html#token.PERCENT", "token.PERCENTEQUAL": "library/token.html#token.PERCENTEQUAL", "token.PLUS": "library/token.html#token.PLUS", "token.PLUSEQUAL": "library/token.html#token.PLUSEQUAL", "token.RARROW": "library/token.html#token.RARROW", "token.RBRACE": "library/token.html#token.RBRACE", "token.RIGHTSHIFT": "library/token.html#token.RIGHTSHIFT", "token.RIGHTSHIFTEQUAL": "library/token.html#token.RIGHTSHIFTEQUAL", "token.RPAR": "library/token.html#token.RPAR", "token.RSQB": "library/token.html#token.RSQB", "token.SEMI": "library/token.html#token.SEMI", "token.SLASH": "library/token.html#token.SLASH", "token.SLASHEQUAL": "library/token.html#token.SLASHEQUAL", "token.SOFT_KEYWORD": "library/token.html#token.SOFT_KEYWORD", "token.STAR": "library/token.html#token.STAR", "token.STAREQUAL": "library/token.html#token.STAREQUAL", "token.STRING": "library/token.html#token.STRING", "token.TILDE": "library/token.html#token.TILDE", "token.tok_name": "library/token.html#token.tok_name", "token.TYPE_COMMENT": "library/token.html#token.TYPE_COMMENT", "token.TYPE_IGNORE": "library/token.html#token.TYPE_IGNORE", "token.VBAR": "library/token.html#token.VBAR", "token.VBAREQUAL": "library/token.html#token.VBAREQUAL", "tokenize": "library/tokenize.html", "tokenize.detect_encoding()": "library/tokenize.html#tokenize.detect_encoding", "tokenize.generate_tokens()": "library/tokenize.html#tokenize.generate_tokens", "tokenize.open()": "library/tokenize.html#tokenize.open", "tokenize.TokenError": "library/tokenize.html#tokenize.TokenError", "tokenize.tokenize()": "library/tokenize.html#tokenize.tokenize", "tokenize.untokenize()": "library/tokenize.html#tokenize.untokenize", "Tokenizing Input (tokenize)": "library/tokenize.html#tokenizing-input", "tomllib": "library/tomllib.html", "tomllib.load()": "library/tomllib.html#tomllib.load", "tomllib.loads()": "library/tomllib.html#tomllib.loads", "tomllib.TOMLDecodeError": "library/tomllib.html#tomllib.TOMLDecodeError", "Tool identifiers (sys.monitoring)": "library/sys.monitoring.html#tool-identifiers", "trace": "library/trace.html", "trace.CoverageResults": "library/trace.html#trace.CoverageResults", "trace.CoverageResults.update()": "library/trace.html#trace.CoverageResults.update", "trace.CoverageResults.write_results()": "library/trace.html#trace.CoverageResults.write_results", "trace.Trace": "library/trace.html#trace.Trace", "trace.Trace.results()": "library/trace.html#trace.Trace.results", "trace.Trace.run()": "library/trace.html#trace.Trace.run", "trace.Trace.runctx()": "library/trace.html#trace.Trace.runctx", "trace.Trace.runfunc()": "library/trace.html#trace.Trace.runfunc", "traceback": "library/traceback.html", "Traceback Examples (traceback)": "library/traceback.html#traceback-examples", "traceback.clear_frames()": "library/traceback.html#traceback.clear_frames", "traceback.extract_stack()": "library/traceback.html#traceback.extract_stack", "traceback.extract_tb()": "library/traceback.html#traceback.extract_tb", "traceback.format_exc()": "library/traceback.html#traceback.format_exc", "traceback.format_exception()": "library/traceback.html#traceback.format_exception", "traceback.format_exception_only()": "library/traceback.html#traceback.format_exception_only", "traceback.format_list()": "library/traceback.html#traceback.format_list", "traceback.format_stack()": "library/traceback.html#traceback.format_stack", "traceback.format_tb()": "library/traceback.html#traceback.format_tb", "traceback.FrameSummary": "library/traceback.html#traceback.FrameSummary", "traceback.FrameSummary.filename": "library/traceback.html#traceback.FrameSummary.filename", "traceback.FrameSummary.line": "library/traceback.html#traceback.FrameSummary.line", "traceback.FrameSummary.lineno": "library/traceback.html#traceback.FrameSummary.lineno", "traceback.FrameSummary.name": "library/traceback.html#traceback.FrameSummary.name", "traceback.print_exc()": "library/traceback.html#traceback.print_exc", "traceback.print_exception()": "library/traceback.html#traceback.print_exception", "traceback.print_last()": "library/traceback.html#traceback.print_last", "traceback.print_stack()": "library/traceback.html#traceback.print_stack", "traceback.print_tb()": "library/traceback.html#traceback.print_tb", "traceback.StackSummary": "library/traceback.html#traceback.StackSummary", "traceback.StackSummary.extract()": "library/traceback.html#traceback.StackSummary.extract", "traceback.StackSummary.format()": "library/traceback.html#traceback.StackSummary.format", "traceback.StackSummary.format_frame_summary()": "library/traceback.html#traceback.StackSummary.format_frame_summary", "traceback.StackSummary.from_list()": "library/traceback.html#traceback.StackSummary.from_list", "traceback.tb_frame": "reference/datamodel.html#traceback.tb_frame", "traceback.tb_lasti": "reference/datamodel.html#traceback.tb_lasti", "traceback.tb_lineno": "reference/datamodel.html#traceback.tb_lineno", "traceback.tb_next": "reference/datamodel.html#traceback.tb_next", "traceback.TracebackException": "library/traceback.html#traceback.TracebackException", "traceback.TracebackException.__cause__": "library/traceback.html#traceback.TracebackException.__cause__", "traceback.TracebackException.__context__": "library/traceback.html#traceback.TracebackException.__context__", "traceback.TracebackException.__notes__": "library/traceback.html#traceback.TracebackException.__notes__", "traceback.TracebackException.__suppress_context__": "library/traceback.html#traceback.TracebackException.__suppress_context__", "traceback.TracebackException.end_lineno": "library/traceback.html#traceback.TracebackException.end_lineno", "traceback.TracebackException.end_offset": "library/traceback.html#traceback.TracebackException.end_offset", "traceback.TracebackException.exc_type": "library/traceback.html#traceback.TracebackException.exc_type", "traceback.TracebackException.exc_type_str": "library/traceback.html#traceback.TracebackException.exc_type_str", "traceback.TracebackException.exceptions": "library/traceback.html#traceback.TracebackException.exceptions", "traceback.TracebackException.filename": "library/traceback.html#traceback.TracebackException.filename", "traceback.TracebackException.format()": "library/traceback.html#traceback.TracebackException.format", "traceback.TracebackException.format_exception_only()": "library/traceback.html#traceback.TracebackException.format_exception_only", "traceback.TracebackException.from_exception()": "library/traceback.html#traceback.TracebackException.from_exception", "traceback.TracebackException.lineno": "library/traceback.html#traceback.TracebackException.lineno", "traceback.TracebackException.msg": "library/traceback.html#traceback.TracebackException.msg", "traceback.TracebackException.offset": "library/traceback.html#traceback.TracebackException.offset", "traceback.TracebackException.print()": "library/traceback.html#traceback.TracebackException.print", "traceback.TracebackException.stack": "library/traceback.html#traceback.TracebackException.stack", "traceback.TracebackException.text": "library/traceback.html#traceback.TracebackException.text", "traceback.walk_stack()": "library/traceback.html#traceback.walk_stack", "traceback.walk_tb()": "library/traceback.html#traceback.walk_tb", "TracebackException Objects (traceback)": "library/traceback.html#tracebackexception-objects", "tracemalloc": "library/tracemalloc.html", "tracemalloc.clear_traces()": "library/tracemalloc.html#tracemalloc.clear_traces", "tracemalloc.DomainFilter": "library/tracemalloc.html#tracemalloc.DomainFilter", "tracemalloc.DomainFilter.domain": "library/tracemalloc.html#tracemalloc.DomainFilter.domain", "tracemalloc.DomainFilter.inclusive": "library/tracemalloc.html#tracemalloc.DomainFilter.inclusive", "tracemalloc.Filter": "library/tracemalloc.html#tracemalloc.Filter", "tracemalloc.Filter.all_frames": "library/tracemalloc.html#tracemalloc.Filter.all_frames", "tracemalloc.Filter.domain": "library/tracemalloc.html#tracemalloc.Filter.domain", "tracemalloc.Filter.filename_pattern": "library/tracemalloc.html#tracemalloc.Filter.filename_pattern", "tracemalloc.Filter.inclusive": "library/tracemalloc.html#tracemalloc.Filter.inclusive", "tracemalloc.Filter.lineno": "library/tracemalloc.html#tracemalloc.Filter.lineno", "tracemalloc.Frame": "library/tracemalloc.html#tracemalloc.Frame", "tracemalloc.Frame.filename": "library/tracemalloc.html#tracemalloc.Frame.filename", "tracemalloc.Frame.lineno": "library/tracemalloc.html#tracemalloc.Frame.lineno", "tracemalloc.get_object_traceback()": "library/tracemalloc.html#tracemalloc.get_object_traceback", "tracemalloc.get_traceback_limit()": "library/tracemalloc.html#tracemalloc.get_traceback_limit", "tracemalloc.get_traced_memory()": "library/tracemalloc.html#tracemalloc.get_traced_memory", "tracemalloc.get_tracemalloc_memory()": "library/tracemalloc.html#tracemalloc.get_tracemalloc_memory", "tracemalloc.is_tracing()": "library/tracemalloc.html#tracemalloc.is_tracing", "tracemalloc.reset_peak()": "library/tracemalloc.html#tracemalloc.reset_peak", "tracemalloc.Snapshot": "library/tracemalloc.html#tracemalloc.Snapshot", "tracemalloc.Snapshot.compare_to()": "library/tracemalloc.html#tracemalloc.Snapshot.compare_to", "tracemalloc.Snapshot.dump()": "library/tracemalloc.html#tracemalloc.Snapshot.dump", "tracemalloc.Snapshot.filter_traces()": "library/tracemalloc.html#tracemalloc.Snapshot.filter_traces", "tracemalloc.Snapshot.load()": "library/tracemalloc.html#tracemalloc.Snapshot.load", "tracemalloc.Snapshot.statistics()": "library/tracemalloc.html#tracemalloc.Snapshot.statistics", "tracemalloc.Snapshot.traceback_limit": "library/tracemalloc.html#tracemalloc.Snapshot.traceback_limit", "tracemalloc.Snapshot.traces": "library/tracemalloc.html#tracemalloc.Snapshot.traces", "tracemalloc.start()": "library/tracemalloc.html#tracemalloc.start", "tracemalloc.Statistic": "library/tracemalloc.html#tracemalloc.Statistic", "tracemalloc.Statistic.count": "library/tracemalloc.html#tracemalloc.Statistic.count", "tracemalloc.Statistic.size": "library/tracemalloc.html#tracemalloc.Statistic.size", "tracemalloc.Statistic.traceback": "library/tracemalloc.html#tracemalloc.Statistic.traceback", "tracemalloc.StatisticDiff": "library/tracemalloc.html#tracemalloc.StatisticDiff", "tracemalloc.StatisticDiff.count": "library/tracemalloc.html#tracemalloc.StatisticDiff.count", "tracemalloc.StatisticDiff.count_diff": "library/tracemalloc.html#tracemalloc.StatisticDiff.count_diff", "tracemalloc.StatisticDiff.size": "library/tracemalloc.html#tracemalloc.StatisticDiff.size", "tracemalloc.StatisticDiff.size_diff": "library/tracemalloc.html#tracemalloc.StatisticDiff.size_diff", "tracemalloc.StatisticDiff.traceback": "library/tracemalloc.html#tracemalloc.StatisticDiff.traceback", "tracemalloc.stop()": "library/tracemalloc.html#tracemalloc.stop", "tracemalloc.take_snapshot()": "library/tracemalloc.html#tracemalloc.take_snapshot", "tracemalloc.Trace": "library/tracemalloc.html#tracemalloc.Trace", "tracemalloc.Trace.domain": "library/tracemalloc.html#tracemalloc.Trace.domain", "tracemalloc.Trace.size": "library/tracemalloc.html#tracemalloc.Trace.size", "tracemalloc.Trace.traceback": "library/tracemalloc.html#tracemalloc.Trace.traceback", "tracemalloc.Traceback": "library/tracemalloc.html#tracemalloc.Traceback", "tracemalloc.Traceback.format()": "library/tracemalloc.html#tracemalloc.Traceback.format", "tracemalloc.Traceback.total_nframe": "library/tracemalloc.html#tracemalloc.Traceback.total_nframe", "Transports (Low-level API Index)": "library/asyncio-llapi-index.html#transports", "Transports (Transports and Protocols)": "library/asyncio-protocol.html#transports", "Transports and Protocols": "library/asyncio-protocol.html", "Treeview (tkinter.ttk)": "library/tkinter.ttk.html#treeview", "Trigonometric functions (cmath)": "library/cmath.html#trigonometric-functions", "Trigonometric functions (math)": "library/math.html#trigonometric-functions", "triple-quoted string": "glossary.html#term-triple-quoted-string", "True": "library/constants.html#True", "Truth Value Testing (Types)": "library/stdtypes.html#truth-value-testing", "try (statement)": "reference/compound_stmts.html#index-9", "Ttk Styling (tkinter.ttk)": "library/tkinter.ttk.html#ttk-styling", "Ttk Widgets (tkinter.ttk)": "library/tkinter.ttk.html#ttk-widgets", "tty": "library/tty.html", "tty.cfmakecbreak()": "library/tty.html#tty.cfmakecbreak", "tty.cfmakeraw()": "library/tty.html#tty.cfmakeraw", "tty.setcbreak()": "library/tty.html#tty.setcbreak", "tty.setraw()": "library/tty.html#tty.setraw", "tuple": "library/stdtypes.html#tuple", "Tuple Objects": "c-api/tuple.html", "Turning events on and off (sys.monitoring)": "library/sys.monitoring.html#turning-events-on-and-off", "turtle": "library/turtle.html", "Turtle graphics reference (turtle)": "library/turtle.html#turtle-graphics-reference", "turtle.addshape()": "library/turtle.html#turtle.addshape", "turtle.back()": "library/turtle.html#turtle.back", "turtle.backward()": "library/turtle.html#turtle.backward", "turtle.begin_fill()": "library/turtle.html#turtle.begin_fill", "turtle.begin_poly()": "library/turtle.html#turtle.begin_poly", "turtle.bgcolor()": "library/turtle.html#turtle.bgcolor", "turtle.bgpic()": "library/turtle.html#turtle.bgpic", "turtle.bk()": "library/turtle.html#turtle.bk", "turtle.bye()": "library/turtle.html#turtle.bye", "turtle.circle()": "library/turtle.html#turtle.circle", "turtle.clear()": "library/turtle.html#turtle.clear", "turtle.clearscreen()": "library/turtle.html#turtle.clearscreen", "turtle.clearstamp()": "library/turtle.html#turtle.clearstamp", "turtle.clearstamps()": "library/turtle.html#turtle.clearstamps", "turtle.clone()": "library/turtle.html#turtle.clone", "turtle.color()": "library/turtle.html#turtle.color", "turtle.colormode()": "library/turtle.html#turtle.colormode", "turtle.degrees()": "library/turtle.html#turtle.degrees", "turtle.delay()": "library/turtle.html#turtle.delay", "turtle.distance()": "library/turtle.html#turtle.distance", "turtle.done()": "library/turtle.html#turtle.done", "turtle.dot()": "library/turtle.html#turtle.dot", "turtle.down()": "library/turtle.html#turtle.down", "turtle.end_fill()": "library/turtle.html#turtle.end_fill", "turtle.end_poly()": "library/turtle.html#turtle.end_poly", "turtle.exitonclick()": "library/turtle.html#turtle.exitonclick", "turtle.fd()": "library/turtle.html#turtle.fd", "turtle.fillcolor()": "library/turtle.html#turtle.fillcolor", "turtle.filling()": "library/turtle.html#turtle.filling", "turtle.forward()": "library/turtle.html#turtle.forward", "turtle.get_poly()": "library/turtle.html#turtle.get_poly", "turtle.get_shapepoly()": "library/turtle.html#turtle.get_shapepoly", "turtle.getcanvas()": "library/turtle.html#turtle.getcanvas", "turtle.getpen()": "library/turtle.html#turtle.getpen", "turtle.getscreen()": "library/turtle.html#turtle.getscreen", "turtle.getshapes()": "library/turtle.html#turtle.getshapes", "turtle.getturtle()": "library/turtle.html#turtle.getturtle", "turtle.goto()": "library/turtle.html#turtle.goto", "turtle.heading()": "library/turtle.html#turtle.heading", "turtle.hideturtle()": "library/turtle.html#turtle.hideturtle", "turtle.home()": "library/turtle.html#turtle.home", "turtle.ht()": "library/turtle.html#turtle.ht", "turtle.isdown()": "library/turtle.html#turtle.isdown", "turtle.isvisible()": "library/turtle.html#turtle.isvisible", "turtle.left()": "library/turtle.html#turtle.left", "turtle.listen()": "library/turtle.html#turtle.listen", "turtle.lt()": "library/turtle.html#turtle.lt", "turtle.mainloop()": "library/turtle.html#turtle.mainloop", "turtle.mode()": "library/turtle.html#turtle.mode", "turtle.numinput()": "library/turtle.html#turtle.numinput", "turtle.onclick()": "library/turtle.html#turtle.onclick", "turtle.ondrag()": "library/turtle.html#turtle.ondrag", "turtle.onkey()": "library/turtle.html#turtle.onkey", "turtle.onkeypress()": "library/turtle.html#turtle.onkeypress", "turtle.onkeyrelease()": "library/turtle.html#turtle.onkeyrelease", "turtle.onrelease()": "library/turtle.html#turtle.onrelease", "turtle.onscreenclick()": "library/turtle.html#turtle.onscreenclick", "turtle.ontimer()": "library/turtle.html#turtle.ontimer", "turtle.pd()": "library/turtle.html#turtle.pd", "turtle.pen()": "library/turtle.html#turtle.pen", "turtle.pencolor()": "library/turtle.html#turtle.pencolor", "turtle.pendown()": "library/turtle.html#turtle.pendown", "turtle.pensize()": "library/turtle.html#turtle.pensize", "turtle.penup()": "library/turtle.html#turtle.penup", "turtle.pos()": "library/turtle.html#turtle.pos", "turtle.position()": "library/turtle.html#turtle.position", "turtle.pu()": "library/turtle.html#turtle.pu", "turtle.radians()": "library/turtle.html#turtle.radians", "turtle.RawPen": "library/turtle.html#turtle.RawPen", "turtle.RawTurtle": "library/turtle.html#turtle.RawTurtle", "turtle.register_shape()": "library/turtle.html#turtle.register_shape", "turtle.reset()": "library/turtle.html#turtle.reset", "turtle.resetscreen()": "library/turtle.html#turtle.resetscreen", "turtle.resizemode()": "library/turtle.html#turtle.resizemode", "turtle.right()": "library/turtle.html#turtle.right", "turtle.rt()": "library/turtle.html#turtle.rt", "turtle.Screen": "library/turtle.html#turtle.Screen", "turtle.screensize()": "library/turtle.html#turtle.screensize", "turtle.ScrolledCanvas": "library/turtle.html#turtle.ScrolledCanvas", "turtle.seth()": "library/turtle.html#turtle.seth", "turtle.setheading()": "library/turtle.html#turtle.setheading", "turtle.setpos()": "library/turtle.html#turtle.setpos", "turtle.setposition()": "library/turtle.html#turtle.setposition", "turtle.setundobuffer()": "library/turtle.html#turtle.setundobuffer", "turtle.setup()": "library/turtle.html#turtle.setup", "turtle.setworldcoordinates()": "library/turtle.html#turtle.setworldcoordinates", "turtle.setx()": "library/turtle.html#turtle.setx", "turtle.sety()": "library/turtle.html#turtle.sety", "turtle.Shape": "library/turtle.html#turtle.Shape", "turtle.shape()": "library/turtle.html#turtle.shape", "turtle.Shape.addcomponent()": "library/turtle.html#turtle.Shape.addcomponent", "turtle.shapesize()": "library/turtle.html#turtle.shapesize", "turtle.shapetransform()": "library/turtle.html#turtle.shapetransform", "turtle.shearfactor()": "library/turtle.html#turtle.shearfactor", "turtle.showturtle()": "library/turtle.html#turtle.showturtle", "turtle.speed()": "library/turtle.html#turtle.speed", "turtle.st()": "library/turtle.html#turtle.st", "turtle.stamp()": "library/turtle.html#turtle.stamp", "turtle.teleport()": "library/turtle.html#turtle.teleport", "turtle.textinput()": "library/turtle.html#turtle.textinput", "turtle.tilt()": "library/turtle.html#turtle.tilt", "turtle.tiltangle()": "library/turtle.html#turtle.tiltangle", "turtle.title()": "library/turtle.html#turtle.title", "turtle.towards()": "library/turtle.html#turtle.towards", "turtle.tracer()": "library/turtle.html#turtle.tracer", "turtle.Turtle": "library/turtle.html#turtle.Turtle", "turtle.turtles()": "library/turtle.html#turtle.turtles", "turtle.TurtleScreen": "library/turtle.html#turtle.TurtleScreen", "turtle.turtlesize()": "library/turtle.html#turtle.turtlesize", "turtle.undo()": "library/turtle.html#turtle.undo", "turtle.undobufferentries()": "library/turtle.html#turtle.undobufferentries", "turtle.up()": "library/turtle.html#turtle.up", "turtle.update()": "library/turtle.html#turtle.update", "turtle.Vec2D": "library/turtle.html#turtle.Vec2D", "turtle.width()": "library/turtle.html#turtle.width", "turtle.window_height()": "library/turtle.html#turtle.window_height", "turtle.window_width()": "library/turtle.html#turtle.window_width", "turtle.write()": "library/turtle.html#turtle.write", "turtle.write_docstringdict()": "library/turtle.html#turtle.write_docstringdict", "turtle.xcor()": "library/turtle.html#turtle.xcor", "turtle.ycor()": "library/turtle.html#turtle.ycor", "turtledemo \u2014 Demo scripts (turtle)": "library/turtle.html#module-turtledemo", "Tutorial (sqlite3)": "library/sqlite3.html#tutorial", "Tutorial (turtle)": "library/turtle.html#tutorial", "Tutorial (xml.etree.ElementTree)": "library/xml.etree.elementtree.html#tutorial", "type": "glossary.html#term-type", "type alias": "glossary.html#term-type-alias", "Type aliases (typing)": "library/typing.html#type-aliases", "Type Annotation Types \u2014 Generic Alias, Union (Types)": "library/stdtypes.html#type-annotation-types-generic-alias-union", "type hint": "glossary.html#term-type-hint", "Type Objects": "c-api/typeobj.html", "TypeError": "library/exceptions.html#TypeError", "Types": "library/stdtypes.html", "types": "library/types.html", "Types and members (inspect)": "library/inspect.html#types-and-members", "types.AsyncGeneratorType": "library/types.html#types.AsyncGeneratorType", "types.BuiltinFunctionType": "library/types.html#types.BuiltinFunctionType", "types.BuiltinMethodType": "library/types.html#types.BuiltinMethodType", "types.CapsuleType": "library/types.html#types.CapsuleType", "types.CellType": "library/types.html#types.CellType", "types.ClassMethodDescriptorType": "library/types.html#types.ClassMethodDescriptorType", "types.CodeType": "library/types.html#types.CodeType", "types.coroutine()": "library/types.html#types.coroutine", "types.CoroutineType": "library/types.html#types.CoroutineType", "types.DynamicClassAttribute()": "library/types.html#types.DynamicClassAttribute", "types.EllipsisType": "library/types.html#types.EllipsisType", "types.FrameType": "library/types.html#types.FrameType", "types.FunctionType": "library/types.html#types.FunctionType", "types.GeneratorType": "library/types.html#types.GeneratorType", "types.GenericAlias": "library/types.html#types.GenericAlias", "types.get_original_bases()": "library/types.html#types.get_original_bases", "types.GetSetDescriptorType": "library/types.html#types.GetSetDescriptorType", "types.LambdaType": "library/types.html#types.LambdaType", "types.MappingProxyType": "library/types.html#types.MappingProxyType", "types.MappingProxyType.copy()": "library/types.html#types.MappingProxyType.copy", "types.MappingProxyType.get()": "library/types.html#types.MappingProxyType.get", "types.MappingProxyType.items()": "library/types.html#types.MappingProxyType.items", "types.MappingProxyType.keys()": "library/types.html#types.MappingProxyType.keys", "types.MappingProxyType.values()": "library/types.html#types.MappingProxyType.values", "types.MemberDescriptorType": "library/types.html#types.MemberDescriptorType", "types.MethodDescriptorType": "library/types.html#types.MethodDescriptorType", "types.MethodType": "library/types.html#types.MethodType", "types.MethodWrapperType": "library/types.html#types.MethodWrapperType", "types.ModuleType": "library/types.html#types.ModuleType", "types.ModuleType.__doc__": "library/types.html#types.ModuleType.__doc__", "types.ModuleType.__loader__": "library/types.html#types.ModuleType.__loader__", "types.ModuleType.__name__": "library/types.html#types.ModuleType.__name__", "types.ModuleType.__package__": "library/types.html#types.ModuleType.__package__", "types.ModuleType.__spec__": "library/types.html#types.ModuleType.__spec__", "types.new_class()": "library/types.html#types.new_class", "types.NoneType": "library/types.html#types.NoneType", "types.NotImplementedType": "library/types.html#types.NotImplementedType", "types.prepare_class()": "library/types.html#types.prepare_class", "types.resolve_bases()": "library/types.html#types.resolve_bases", "types.SimpleNamespace": "library/types.html#types.SimpleNamespace", "types.TracebackType": "library/types.html#types.TracebackType", "types.UnionType": "library/types.html#types.UnionType", "types.WrapperDescriptorType": "library/types.html#types.WrapperDescriptorType", "typing": "library/typing.html", "typing.AbstractSet": "library/typing.html#typing.AbstractSet", "typing.Annotated": "library/typing.html#typing.Annotated", "typing.Any": "library/typing.html#typing.Any", "typing.AnyStr": "library/typing.html#typing.AnyStr", "typing.assert_never()": "library/typing.html#typing.assert_never", "typing.assert_type()": "library/typing.html#typing.assert_type", "typing.AsyncContextManager": "library/typing.html#typing.AsyncContextManager", "typing.AsyncGenerator": "library/typing.html#typing.AsyncGenerator", "typing.AsyncIterable": "library/typing.html#typing.AsyncIterable", "typing.AsyncIterator": "library/typing.html#typing.AsyncIterator", "typing.Awaitable": "library/typing.html#typing.Awaitable", "typing.BinaryIO": "library/typing.html#typing.BinaryIO", "typing.ByteString": "library/typing.html#typing.ByteString", "typing.Callable": "library/typing.html#typing.Callable", "typing.cast()": "library/typing.html#typing.cast", "typing.ChainMap": "library/typing.html#typing.ChainMap", "typing.ClassVar": "library/typing.html#typing.ClassVar", "typing.clear_overloads()": "library/typing.html#typing.clear_overloads", "typing.Collection": "library/typing.html#typing.Collection", "typing.Concatenate": "library/typing.html#typing.Concatenate", "typing.Container": "library/typing.html#typing.Container", "typing.ContextManager": "library/typing.html#typing.ContextManager", "typing.Coroutine": "library/typing.html#typing.Coroutine", "typing.Counter": "library/typing.html#typing.Counter", "typing.dataclass_transform()": "library/typing.html#typing.dataclass_transform", "typing.DefaultDict": "library/typing.html#typing.DefaultDict", "typing.Deque": "library/typing.html#typing.Deque", "typing.Dict": "library/typing.html#typing.Dict", "typing.Final": "library/typing.html#typing.Final", "typing.final()": "library/typing.html#typing.final", "typing.ForwardRef": "library/typing.html#typing.ForwardRef", "typing.FrozenSet": "library/typing.html#typing.FrozenSet", "typing.Generator": "library/typing.html#typing.Generator", "typing.Generic": "library/typing.html#typing.Generic", "typing.get_args()": "library/typing.html#typing.get_args", "typing.get_origin()": "library/typing.html#typing.get_origin", "typing.get_overloads()": "library/typing.html#typing.get_overloads", "typing.get_protocol_members()": "library/typing.html#typing.get_protocol_members", "typing.get_type_hints()": "library/typing.html#typing.get_type_hints", "typing.Hashable": "library/typing.html#typing.Hashable", "typing.IO": "library/typing.html#typing.IO", "typing.is_protocol()": "library/typing.html#typing.is_protocol", "typing.is_typeddict()": "library/typing.html#typing.is_typeddict", "typing.ItemsView": "library/typing.html#typing.ItemsView", "typing.Iterable": "library/typing.html#typing.Iterable", "typing.Iterator": "library/typing.html#typing.Iterator", "typing.KeysView": "library/typing.html#typing.KeysView", "typing.List": "library/typing.html#typing.List", "typing.Literal": "library/typing.html#typing.Literal", "typing.LiteralString": "library/typing.html#typing.LiteralString", "typing.Mapping": "library/typing.html#typing.Mapping", "typing.MappingView": "library/typing.html#typing.MappingView", "typing.Match": "library/typing.html#typing.Match", "typing.MutableMapping": "library/typing.html#typing.MutableMapping", "typing.MutableSequence": "library/typing.html#typing.MutableSequence", "typing.MutableSet": "library/typing.html#typing.MutableSet", "typing.NamedTuple": "library/typing.html#typing.NamedTuple", "typing.Never": "library/typing.html#typing.Never", "typing.NewType": "library/typing.html#typing.NewType", "typing.NewType.__module__": "library/typing.html#typing.NewType.__module__", "typing.NewType.__name__": "library/typing.html#typing.NewType.__name__", "typing.NewType.__supertype__": "library/typing.html#typing.NewType.__supertype__", "typing.no_type_check()": "library/typing.html#typing.no_type_check", "typing.no_type_check_decorator()": "library/typing.html#typing.no_type_check_decorator", "typing.NoDefault": "library/typing.html#typing.NoDefault", "typing.NoReturn": "library/typing.html#typing.NoReturn", "typing.NotRequired": "library/typing.html#typing.NotRequired", "typing.Optional": "library/typing.html#typing.Optional", "typing.OrderedDict": "library/typing.html#typing.OrderedDict", "typing.overload()": "library/typing.html#typing.overload", "typing.override()": "library/typing.html#typing.override", "typing.ParamSpec": "library/typing.html#typing.ParamSpec", "typing.ParamSpec.__default__": "library/typing.html#typing.ParamSpec.__default__", "typing.ParamSpec.__name__": "library/typing.html#typing.ParamSpec.__name__", "typing.ParamSpec.args": "library/typing.html#typing.ParamSpec.args", "typing.ParamSpec.has_default()": "library/typing.html#typing.ParamSpec.has_default", "typing.ParamSpec.kwargs": "library/typing.html#typing.ParamSpec.kwargs", "typing.ParamSpecArgs": "library/typing.html#typing.ParamSpecArgs", "typing.ParamSpecKwargs": "library/typing.html#typing.ParamSpecKwargs", "typing.Pattern": "library/typing.html#typing.Pattern", "typing.Protocol": "library/typing.html#typing.Protocol", "typing.ReadOnly": "library/typing.html#typing.ReadOnly", "typing.Required": "library/typing.html#typing.Required", "typing.reveal_type()": "library/typing.html#typing.reveal_type", "typing.Reversible": "library/typing.html#typing.Reversible", "typing.runtime_checkable()": "library/typing.html#typing.runtime_checkable", "typing.Self": "library/typing.html#typing.Self", "typing.Sequence": "library/typing.html#typing.Sequence", "typing.Set": "library/typing.html#typing.Set", "typing.Sized": "library/typing.html#typing.Sized", "typing.SupportsAbs": "library/typing.html#typing.SupportsAbs", "typing.SupportsBytes": "library/typing.html#typing.SupportsBytes", "typing.SupportsComplex": "library/typing.html#typing.SupportsComplex", "typing.SupportsFloat": "library/typing.html#typing.SupportsFloat", "typing.SupportsIndex": "library/typing.html#typing.SupportsIndex", "typing.SupportsInt": "library/typing.html#typing.SupportsInt", "typing.SupportsRound": "library/typing.html#typing.SupportsRound", "typing.Text": "library/typing.html#typing.Text", "typing.TextIO": "library/typing.html#typing.TextIO", "typing.Tuple": "library/typing.html#typing.Tuple", "typing.Type": "library/typing.html#typing.Type", "typing.type_check_only()": "library/typing.html#typing.type_check_only", "typing.TYPE_CHECKING": "library/typing.html#typing.TYPE_CHECKING", "typing.TypeAlias": "library/typing.html#typing.TypeAlias", "typing.TypeAliasType": "library/typing.html#typing.TypeAliasType", "typing.TypeAliasType.__module__": "library/typing.html#typing.TypeAliasType.__module__", "typing.TypeAliasType.__name__": "library/typing.html#typing.TypeAliasType.__name__", "typing.TypeAliasType.__type_params__": "library/typing.html#typing.TypeAliasType.__type_params__", "typing.TypeAliasType.__value__": "library/typing.html#typing.TypeAliasType.__value__", "typing.TypedDict": "library/typing.html#typing.TypedDict", "typing.TypedDict.__mutable_keys__": "library/typing.html#typing.TypedDict.__mutable_keys__", "typing.TypedDict.__optional_keys__": "library/typing.html#typing.TypedDict.__optional_keys__", "typing.TypedDict.__readonly_keys__": "library/typing.html#typing.TypedDict.__readonly_keys__", "typing.TypedDict.__required_keys__": "library/typing.html#typing.TypedDict.__required_keys__", "typing.TypedDict.__total__": "library/typing.html#typing.TypedDict.__total__", "typing.TypeGuard": "library/typing.html#typing.TypeGuard", "typing.TypeIs": "library/typing.html#typing.TypeIs", "typing.TypeVar": "library/typing.html#typing.TypeVar", "typing.TypeVar.__bound__": "library/typing.html#typing.TypeVar.__bound__", "typing.TypeVar.__constraints__": "library/typing.html#typing.TypeVar.__constraints__", "typing.TypeVar.__contravariant__": "library/typing.html#typing.TypeVar.__contravariant__", "typing.TypeVar.__covariant__": "library/typing.html#typing.TypeVar.__covariant__", "typing.TypeVar.__default__": "library/typing.html#typing.TypeVar.__default__", "typing.TypeVar.__infer_variance__": "library/typing.html#typing.TypeVar.__infer_variance__", "typing.TypeVar.__name__": "library/typing.html#typing.TypeVar.__name__", "typing.TypeVar.has_default()": "library/typing.html#typing.TypeVar.has_default", "typing.TypeVarTuple": "library/typing.html#typing.TypeVarTuple", "typing.TypeVarTuple.__default__": "library/typing.html#typing.TypeVarTuple.__default__", "typing.TypeVarTuple.__name__": "library/typing.html#typing.TypeVarTuple.__name__", "typing.TypeVarTuple.has_default()": "library/typing.html#typing.TypeVarTuple.has_default", "typing.Union": "library/typing.html#typing.Union", "typing.Unpack": "library/typing.html#typing.Unpack", "typing.ValuesView": "library/typing.html#typing.ValuesView", "tzinfo Objects (datetime)": "library/datetime.html#tzinfo-objects", "unbinding (name)": "reference/simple_stmts.html#index-22", "UnboundLocalError": "library/exceptions.html#UnboundLocalError", "Unicode HOWTO": "howto/unicode.html", "Unicode issues (tarfile)": "library/tarfile.html#unicode-issues", "Unicode Objects and Codecs": "c-api/unicode.html", "unicodedata": "library/unicodedata.html", "unicodedata.bidirectional()": "library/unicodedata.html#unicodedata.bidirectional", "unicodedata.category()": "library/unicodedata.html#unicodedata.category", "unicodedata.combining()": "library/unicodedata.html#unicodedata.combining", "unicodedata.decimal()": "library/unicodedata.html#unicodedata.decimal", "unicodedata.decomposition()": "library/unicodedata.html#unicodedata.decomposition", "unicodedata.digit()": "library/unicodedata.html#unicodedata.digit", "unicodedata.east_asian_width()": "library/unicodedata.html#unicodedata.east_asian_width", "unicodedata.is_normalized()": "library/unicodedata.html#unicodedata.is_normalized", "unicodedata.lookup()": "library/unicodedata.html#unicodedata.lookup", "unicodedata.mirrored()": "library/unicodedata.html#unicodedata.mirrored", "unicodedata.name()": "library/unicodedata.html#unicodedata.name", "unicodedata.normalize()": "library/unicodedata.html#unicodedata.normalize", "unicodedata.numeric()": "library/unicodedata.html#unicodedata.numeric", "unicodedata.ucd_3_2_0": "library/unicodedata.html#unicodedata.ucd_3_2_0", "unicodedata.unidata_version": "library/unicodedata.html#unicodedata.unidata_version", "UnicodeDecodeError": "library/exceptions.html#UnicodeDecodeError", "UnicodeEncodeError": "library/exceptions.html#UnicodeEncodeError", "UnicodeError": "library/exceptions.html#UnicodeError", "UnicodeError.encoding": "library/exceptions.html#UnicodeError.encoding", "UnicodeError.end": "library/exceptions.html#UnicodeError.end", "UnicodeError.object": "library/exceptions.html#UnicodeError.object", "UnicodeError.reason": "library/exceptions.html#UnicodeError.reason", "UnicodeError.start": "library/exceptions.html#UnicodeError.start", "UnicodeTranslateError": "library/exceptions.html#UnicodeTranslateError", "UnicodeWarning": "library/exceptions.html#UnicodeWarning", "unittest": "library/unittest.html", "Unittest API (doctest)": "library/doctest.html#unittest-api", "unittest.addModuleCleanup()": "library/unittest.html#unittest.addModuleCleanup", "unittest.defaultTestLoader": "library/unittest.html#unittest.defaultTestLoader", "unittest.doModuleCleanups()": "library/unittest.html#unittest.doModuleCleanups", "unittest.enterModuleContext()": "library/unittest.html#unittest.enterModuleContext", "unittest.expectedFailure()": "library/unittest.html#unittest.expectedFailure", "unittest.FunctionTestCase": "library/unittest.html#unittest.FunctionTestCase", "unittest.installHandler()": "library/unittest.html#unittest.installHandler", "unittest.IsolatedAsyncioTestCase": "library/unittest.html#unittest.IsolatedAsyncioTestCase", "unittest.IsolatedAsyncioTestCase.addAsyncCleanup()": "library/unittest.html#unittest.IsolatedAsyncioTestCase.addAsyncCleanup", "unittest.IsolatedAsyncioTestCase.asyncSetUp()": "library/unittest.html#unittest.IsolatedAsyncioTestCase.asyncSetUp", "unittest.IsolatedAsyncioTestCase.asyncTearDown()": "library/unittest.html#unittest.IsolatedAsyncioTestCase.asyncTearDown", "unittest.IsolatedAsyncioTestCase.enterAsyncContext()": "library/unittest.html#unittest.IsolatedAsyncioTestCase.enterAsyncContext", "unittest.IsolatedAsyncioTestCase.loop_factory": "library/unittest.html#unittest.IsolatedAsyncioTestCase.loop_factory", "unittest.IsolatedAsyncioTestCase.run()": "library/unittest.html#unittest.IsolatedAsyncioTestCase.run", "unittest.main()": "library/unittest.html#unittest.main", "unittest.mock": "library/unittest.mock.html", "unittest.mock.ANY": "library/unittest.mock.html#unittest.mock.ANY", "unittest.mock.AsyncMock": "library/unittest.mock.html#unittest.mock.AsyncMock", "unittest.mock.AsyncMock.assert_any_await()": "library/unittest.mock.html#unittest.mock.AsyncMock.assert_any_await", "unittest.mock.AsyncMock.assert_awaited()": "library/unittest.mock.html#unittest.mock.AsyncMock.assert_awaited", "unittest.mock.AsyncMock.assert_awaited_once()": "library/unittest.mock.html#unittest.mock.AsyncMock.assert_awaited_once", "unittest.mock.AsyncMock.assert_awaited_once_with()": "library/unittest.mock.html#unittest.mock.AsyncMock.assert_awaited_once_with", "unittest.mock.AsyncMock.assert_awaited_with()": "library/unittest.mock.html#unittest.mock.AsyncMock.assert_awaited_with", "unittest.mock.AsyncMock.assert_has_awaits()": "library/unittest.mock.html#unittest.mock.AsyncMock.assert_has_awaits", "unittest.mock.AsyncMock.assert_not_awaited()": "library/unittest.mock.html#unittest.mock.AsyncMock.assert_not_awaited", "unittest.mock.AsyncMock.await_args": "library/unittest.mock.html#unittest.mock.AsyncMock.await_args", "unittest.mock.AsyncMock.await_args_list": "library/unittest.mock.html#unittest.mock.AsyncMock.await_args_list", "unittest.mock.AsyncMock.await_count": "library/unittest.mock.html#unittest.mock.AsyncMock.await_count", "unittest.mock.AsyncMock.reset_mock()": "library/unittest.mock.html#unittest.mock.AsyncMock.reset_mock", "unittest.mock.call()": "library/unittest.mock.html#unittest.mock.call", "unittest.mock.call.call_list()": "library/unittest.mock.html#unittest.mock.call.call_list", "unittest.mock.create_autospec()": "library/unittest.mock.html#unittest.mock.create_autospec", "unittest.mock.DEFAULT": "library/unittest.mock.html#unittest.mock.DEFAULT", "unittest.mock.FILTER_DIR": "library/unittest.mock.html#unittest.mock.FILTER_DIR", "unittest.mock.MagicMock": "library/unittest.mock.html#unittest.mock.MagicMock", "unittest.mock.Mock": "library/unittest.mock.html#unittest.mock.Mock", "unittest.mock.Mock.__class__": "library/unittest.mock.html#unittest.mock.Mock.__class__", "unittest.mock.Mock.__dir__()": "library/unittest.mock.html#unittest.mock.Mock.__dir__", "unittest.mock.Mock._get_child_mock()": "library/unittest.mock.html#unittest.mock.Mock._get_child_mock", "unittest.mock.Mock.assert_any_call()": "library/unittest.mock.html#unittest.mock.Mock.assert_any_call", "unittest.mock.Mock.assert_called()": "library/unittest.mock.html#unittest.mock.Mock.assert_called", "unittest.mock.Mock.assert_called_once()": "library/unittest.mock.html#unittest.mock.Mock.assert_called_once", "unittest.mock.Mock.assert_called_once_with()": "library/unittest.mock.html#unittest.mock.Mock.assert_called_once_with", "unittest.mock.Mock.assert_called_with()": "library/unittest.mock.html#unittest.mock.Mock.assert_called_with", "unittest.mock.Mock.assert_has_calls()": "library/unittest.mock.html#unittest.mock.Mock.assert_has_calls", "unittest.mock.Mock.assert_not_called()": "library/unittest.mock.html#unittest.mock.Mock.assert_not_called", "unittest.mock.Mock.attach_mock()": "library/unittest.mock.html#unittest.mock.Mock.attach_mock", "unittest.mock.Mock.call_args": "library/unittest.mock.html#unittest.mock.Mock.call_args", "unittest.mock.Mock.call_args_list": "library/unittest.mock.html#unittest.mock.Mock.call_args_list", "unittest.mock.Mock.call_count": "library/unittest.mock.html#unittest.mock.Mock.call_count", "unittest.mock.Mock.called": "library/unittest.mock.html#unittest.mock.Mock.called", "unittest.mock.Mock.configure_mock()": "library/unittest.mock.html#unittest.mock.Mock.configure_mock", "unittest.mock.Mock.method_calls": "library/unittest.mock.html#unittest.mock.Mock.method_calls", "unittest.mock.Mock.mock_add_spec()": "library/unittest.mock.html#unittest.mock.Mock.mock_add_spec", "unittest.mock.Mock.mock_calls": "library/unittest.mock.html#unittest.mock.Mock.mock_calls", "unittest.mock.Mock.reset_mock()": "library/unittest.mock.html#unittest.mock.Mock.reset_mock", "unittest.mock.Mock.return_value": "library/unittest.mock.html#unittest.mock.Mock.return_value", "unittest.mock.Mock.side_effect": "library/unittest.mock.html#unittest.mock.Mock.side_effect", "unittest.mock.mock_open()": "library/unittest.mock.html#unittest.mock.mock_open", "unittest.mock.NonCallableMagicMock": "library/unittest.mock.html#unittest.mock.NonCallableMagicMock", "unittest.mock.NonCallableMock": "library/unittest.mock.html#unittest.mock.NonCallableMock", "unittest.mock.patch()": "library/unittest.mock.html#unittest.mock.patch", "unittest.mock.patch.dict()": "library/unittest.mock.html#unittest.mock.patch.dict", "unittest.mock.patch.multiple()": "library/unittest.mock.html#unittest.mock.patch.multiple", "unittest.mock.patch.object()": "library/unittest.mock.html#unittest.mock.patch.object", "unittest.mock.patch.stopall()": "library/unittest.mock.html#unittest.mock.patch.stopall", "unittest.mock.PropertyMock": "library/unittest.mock.html#unittest.mock.PropertyMock", "unittest.mock.seal()": "library/unittest.mock.html#unittest.mock.seal", "unittest.mock.sentinel": "library/unittest.mock.html#unittest.mock.sentinel", "unittest.mock.ThreadingMock": "library/unittest.mock.html#unittest.mock.ThreadingMock", "unittest.mock.ThreadingMock.DEFAULT_TIMEOUT": "library/unittest.mock.html#unittest.mock.ThreadingMock.DEFAULT_TIMEOUT", "unittest.mock.ThreadingMock.wait_until_any_call_with()": "library/unittest.mock.html#unittest.mock.ThreadingMock.wait_until_any_call_with", "unittest.mock.ThreadingMock.wait_until_called()": "library/unittest.mock.html#unittest.mock.ThreadingMock.wait_until_called", "unittest.registerResult()": "library/unittest.html#unittest.registerResult", "unittest.removeHandler()": "library/unittest.html#unittest.removeHandler", "unittest.removeResult()": "library/unittest.html#unittest.removeResult", "unittest.skip()": "library/unittest.html#unittest.skip", "unittest.skipIf()": "library/unittest.html#unittest.skipIf", "unittest.SkipTest": "library/unittest.html#unittest.SkipTest", "unittest.skipUnless()": "library/unittest.html#unittest.skipUnless", "unittest.TestCase": "library/unittest.html#unittest.TestCase", "unittest.TestCase.addClassCleanup()": "library/unittest.html#unittest.TestCase.addClassCleanup", "unittest.TestCase.addCleanup()": "library/unittest.html#unittest.TestCase.addCleanup", "unittest.TestCase.addTypeEqualityFunc()": "library/unittest.html#unittest.TestCase.addTypeEqualityFunc", "unittest.TestCase.assertAlmostEqual()": "library/unittest.html#unittest.TestCase.assertAlmostEqual", "unittest.TestCase.assertCountEqual()": "library/unittest.html#unittest.TestCase.assertCountEqual", "unittest.TestCase.assertDictEqual()": "library/unittest.html#unittest.TestCase.assertDictEqual", "unittest.TestCase.assertEqual()": "library/unittest.html#unittest.TestCase.assertEqual", "unittest.TestCase.assertFalse()": "library/unittest.html#unittest.TestCase.assertFalse", "unittest.TestCase.assertGreater()": "library/unittest.html#unittest.TestCase.assertGreater", "unittest.TestCase.assertGreaterEqual()": "library/unittest.html#unittest.TestCase.assertGreaterEqual", "unittest.TestCase.assertIn()": "library/unittest.html#unittest.TestCase.assertIn", "unittest.TestCase.assertIs()": "library/unittest.html#unittest.TestCase.assertIs", "unittest.TestCase.assertIsInstance()": "library/unittest.html#unittest.TestCase.assertIsInstance", "unittest.TestCase.assertIsNone()": "library/unittest.html#unittest.TestCase.assertIsNone", "unittest.TestCase.assertIsNot()": "library/unittest.html#unittest.TestCase.assertIsNot", "unittest.TestCase.assertIsNotNone()": "library/unittest.html#unittest.TestCase.assertIsNotNone", "unittest.TestCase.assertLess()": "library/unittest.html#unittest.TestCase.assertLess", "unittest.TestCase.assertLessEqual()": "library/unittest.html#unittest.TestCase.assertLessEqual", "unittest.TestCase.assertListEqual()": "library/unittest.html#unittest.TestCase.assertListEqual", "unittest.TestCase.assertLogs()": "library/unittest.html#unittest.TestCase.assertLogs", "unittest.TestCase.assertMultiLineEqual()": "library/unittest.html#unittest.TestCase.assertMultiLineEqual", "unittest.TestCase.assertNoLogs()": "library/unittest.html#unittest.TestCase.assertNoLogs", "unittest.TestCase.assertNotAlmostEqual()": "library/unittest.html#unittest.TestCase.assertNotAlmostEqual", "unittest.TestCase.assertNotEqual()": "library/unittest.html#unittest.TestCase.assertNotEqual", "unittest.TestCase.assertNotIn()": "library/unittest.html#unittest.TestCase.assertNotIn", "unittest.TestCase.assertNotIsInstance()": "library/unittest.html#unittest.TestCase.assertNotIsInstance", "unittest.TestCase.assertNotRegex()": "library/unittest.html#unittest.TestCase.assertNotRegex", "unittest.TestCase.assertRaises()": "library/unittest.html#unittest.TestCase.assertRaises", "unittest.TestCase.assertRaisesRegex()": "library/unittest.html#unittest.TestCase.assertRaisesRegex", "unittest.TestCase.assertRegex()": "library/unittest.html#unittest.TestCase.assertRegex", "unittest.TestCase.assertSequenceEqual()": "library/unittest.html#unittest.TestCase.assertSequenceEqual", "unittest.TestCase.assertSetEqual()": "library/unittest.html#unittest.TestCase.assertSetEqual", "unittest.TestCase.assertTrue()": "library/unittest.html#unittest.TestCase.assertTrue", "unittest.TestCase.assertTupleEqual()": "library/unittest.html#unittest.TestCase.assertTupleEqual", "unittest.TestCase.assertWarns()": "library/unittest.html#unittest.TestCase.assertWarns", "unittest.TestCase.assertWarnsRegex()": "library/unittest.html#unittest.TestCase.assertWarnsRegex", "unittest.TestCase.countTestCases()": "library/unittest.html#unittest.TestCase.countTestCases", "unittest.TestCase.debug()": "library/unittest.html#unittest.TestCase.debug", "unittest.TestCase.defaultTestResult()": "library/unittest.html#unittest.TestCase.defaultTestResult", "unittest.TestCase.doClassCleanups()": "library/unittest.html#unittest.TestCase.doClassCleanups", "unittest.TestCase.doCleanups()": "library/unittest.html#unittest.TestCase.doCleanups", "unittest.TestCase.enterClassContext()": "library/unittest.html#unittest.TestCase.enterClassContext", "unittest.TestCase.enterContext()": "library/unittest.html#unittest.TestCase.enterContext", "unittest.TestCase.fail()": "library/unittest.html#unittest.TestCase.fail", "unittest.TestCase.failureException": "library/unittest.html#unittest.TestCase.failureException", "unittest.TestCase.id()": "library/unittest.html#unittest.TestCase.id", "unittest.TestCase.longMessage": "library/unittest.html#unittest.TestCase.longMessage", "unittest.TestCase.maxDiff": "library/unittest.html#unittest.TestCase.maxDiff", "unittest.TestCase.output": "library/unittest.html#unittest.TestCase.output", "unittest.TestCase.records": "library/unittest.html#unittest.TestCase.records", "unittest.TestCase.run()": "library/unittest.html#unittest.TestCase.run", "unittest.TestCase.setUp()": "library/unittest.html#unittest.TestCase.setUp", "unittest.TestCase.setUpClass()": "library/unittest.html#unittest.TestCase.setUpClass", "unittest.TestCase.shortDescription()": "library/unittest.html#unittest.TestCase.shortDescription", "unittest.TestCase.skipTest()": "library/unittest.html#unittest.TestCase.skipTest", "unittest.TestCase.subTest()": "library/unittest.html#unittest.TestCase.subTest", "unittest.TestCase.tearDown()": "library/unittest.html#unittest.TestCase.tearDown", "unittest.TestCase.tearDownClass()": "library/unittest.html#unittest.TestCase.tearDownClass", "unittest.TestLoader": "library/unittest.html#unittest.TestLoader", "unittest.TestLoader.discover()": "library/unittest.html#unittest.TestLoader.discover", "unittest.TestLoader.errors": "library/unittest.html#unittest.TestLoader.errors", "unittest.TestLoader.getTestCaseNames()": "library/unittest.html#unittest.TestLoader.getTestCaseNames", "unittest.TestLoader.loadTestsFromModule()": "library/unittest.html#unittest.TestLoader.loadTestsFromModule", "unittest.TestLoader.loadTestsFromName()": "library/unittest.html#unittest.TestLoader.loadTestsFromName", "unittest.TestLoader.loadTestsFromNames()": "library/unittest.html#unittest.TestLoader.loadTestsFromNames", "unittest.TestLoader.loadTestsFromTestCase()": "library/unittest.html#unittest.TestLoader.loadTestsFromTestCase", "unittest.TestLoader.sortTestMethodsUsing": "library/unittest.html#unittest.TestLoader.sortTestMethodsUsing", "unittest.TestLoader.suiteClass": "library/unittest.html#unittest.TestLoader.suiteClass", "unittest.TestLoader.testMethodPrefix": "library/unittest.html#unittest.TestLoader.testMethodPrefix", "unittest.TestLoader.testNamePatterns": "library/unittest.html#unittest.TestLoader.testNamePatterns", "unittest.TestResult": "library/unittest.html#unittest.TestResult", "unittest.TestResult.addDuration()": "library/unittest.html#unittest.TestResult.addDuration", "unittest.TestResult.addError()": "library/unittest.html#unittest.TestResult.addError", "unittest.TestResult.addExpectedFailure()": "library/unittest.html#unittest.TestResult.addExpectedFailure", "unittest.TestResult.addFailure()": "library/unittest.html#unittest.TestResult.addFailure", "unittest.TestResult.addSkip()": "library/unittest.html#unittest.TestResult.addSkip", "unittest.TestResult.addSubTest()": "library/unittest.html#unittest.TestResult.addSubTest", "unittest.TestResult.addSuccess()": "library/unittest.html#unittest.TestResult.addSuccess", "unittest.TestResult.addUnexpectedSuccess()": "library/unittest.html#unittest.TestResult.addUnexpectedSuccess", "unittest.TestResult.buffer": "library/unittest.html#unittest.TestResult.buffer", "unittest.TestResult.collectedDurations": "library/unittest.html#unittest.TestResult.collectedDurations", "unittest.TestResult.errors": "library/unittest.html#unittest.TestResult.errors", "unittest.TestResult.expectedFailures": "library/unittest.html#unittest.TestResult.expectedFailures", "unittest.TestResult.failfast": "library/unittest.html#unittest.TestResult.failfast", "unittest.TestResult.failures": "library/unittest.html#unittest.TestResult.failures", "unittest.TestResult.shouldStop": "library/unittest.html#unittest.TestResult.shouldStop", "unittest.TestResult.skipped": "library/unittest.html#unittest.TestResult.skipped", "unittest.TestResult.startTest()": "library/unittest.html#unittest.TestResult.startTest", "unittest.TestResult.startTestRun()": "library/unittest.html#unittest.TestResult.startTestRun", "unittest.TestResult.stop()": "library/unittest.html#unittest.TestResult.stop", "unittest.TestResult.stopTest()": "library/unittest.html#unittest.TestResult.stopTest", "unittest.TestResult.stopTestRun()": "library/unittest.html#unittest.TestResult.stopTestRun", "unittest.TestResult.tb_locals": "library/unittest.html#unittest.TestResult.tb_locals", "unittest.TestResult.testsRun": "library/unittest.html#unittest.TestResult.testsRun", "unittest.TestResult.unexpectedSuccesses": "library/unittest.html#unittest.TestResult.unexpectedSuccesses", "unittest.TestResult.wasSuccessful()": "library/unittest.html#unittest.TestResult.wasSuccessful", "unittest.TestSuite": "library/unittest.html#unittest.TestSuite", "unittest.TestSuite.__iter__()": "library/unittest.html#unittest.TestSuite.__iter__", "unittest.TestSuite.addTest()": "library/unittest.html#unittest.TestSuite.addTest", "unittest.TestSuite.addTests()": "library/unittest.html#unittest.TestSuite.addTests", "unittest.TestSuite.countTestCases()": "library/unittest.html#unittest.TestSuite.countTestCases", "unittest.TestSuite.debug()": "library/unittest.html#unittest.TestSuite.debug", "unittest.TestSuite.run()": "library/unittest.html#unittest.TestSuite.run", "unittest.TextTestResult": "library/unittest.html#unittest.TextTestResult", "unittest.TextTestRunner": "library/unittest.html#unittest.TextTestRunner", "unittest.TextTestRunner._makeResult()": "library/unittest.html#unittest.TextTestRunner._makeResult", "unittest.TextTestRunner.run()": "library/unittest.html#unittest.TextTestRunner.run", "universal newlines": "glossary.html#term-universal-newlines", "Unix Platforms (platform)": "library/platform.html#unix-platforms", "Unix Specific Services": "library/unix.html", "UnknownHandler Objects (urllib.request)": "library/urllib.request.html#unknownhandler-objects", "Unnamed Sections (configparser)": "library/configparser.html#unnamed-sections", "Updating Code For New Versions of Dependencies (warnings)": "library/warnings.html#updating-code-for-new-versions-of-dependencies", "Upgrading optparse code (argparse)": "library/argparse.html#upgrading-optparse-code", "URL Parsing (urllib.parse)": "library/urllib.parse.html#url-parsing", "URL parsing security (urllib.parse)": "library/urllib.parse.html#url-parsing-security", "URL Quoting (urllib.parse)": "library/urllib.parse.html#url-quoting", "urllib": "library/urllib.html", "urllib.error": "library/urllib.error.html", "urllib.error.ContentTooShortError": "library/urllib.error.html#urllib.error.ContentTooShortError", "urllib.error.ContentTooShortError.content": "library/urllib.error.html#urllib.error.ContentTooShortError.content", "urllib.error.HTTPError": "library/urllib.error.html#urllib.error.HTTPError", "urllib.error.HTTPError.code": "library/urllib.error.html#urllib.error.HTTPError.code", "urllib.error.HTTPError.fp": "library/urllib.error.html#urllib.error.HTTPError.fp", "urllib.error.HTTPError.headers": "library/urllib.error.html#urllib.error.HTTPError.headers", "urllib.error.HTTPError.reason": "library/urllib.error.html#urllib.error.HTTPError.reason", "urllib.error.HTTPError.url": "library/urllib.error.html#urllib.error.HTTPError.url", "urllib.error.URLError": "library/urllib.error.html#urllib.error.URLError", "urllib.error.URLError.reason": "library/urllib.error.html#urllib.error.URLError.reason", "urllib.parse": "library/urllib.parse.html", "urllib.parse.DefragResult": "library/urllib.parse.html#urllib.parse.DefragResult", "urllib.parse.DefragResultBytes": "library/urllib.parse.html#urllib.parse.DefragResultBytes", "urllib.parse.parse_qs()": "library/urllib.parse.html#urllib.parse.parse_qs", "urllib.parse.parse_qsl()": "library/urllib.parse.html#urllib.parse.parse_qsl", "urllib.parse.ParseResult": "library/urllib.parse.html#urllib.parse.ParseResult", "urllib.parse.ParseResultBytes": "library/urllib.parse.html#urllib.parse.ParseResultBytes", "urllib.parse.quote()": "library/urllib.parse.html#urllib.parse.quote", "urllib.parse.quote_from_bytes()": "library/urllib.parse.html#urllib.parse.quote_from_bytes", "urllib.parse.quote_plus()": "library/urllib.parse.html#urllib.parse.quote_plus", "urllib.parse.SplitResult": "library/urllib.parse.html#urllib.parse.SplitResult", "urllib.parse.SplitResultBytes": "library/urllib.parse.html#urllib.parse.SplitResultBytes", "urllib.parse.unquote()": "library/urllib.parse.html#urllib.parse.unquote", "urllib.parse.unquote_plus()": "library/urllib.parse.html#urllib.parse.unquote_plus", "urllib.parse.unquote_to_bytes()": "library/urllib.parse.html#urllib.parse.unquote_to_bytes", "urllib.parse.unwrap()": "library/urllib.parse.html#urllib.parse.unwrap", "urllib.parse.urldefrag()": "library/urllib.parse.html#urllib.parse.urldefrag", "urllib.parse.urlencode()": "library/urllib.parse.html#urllib.parse.urlencode", "urllib.parse.urljoin()": "library/urllib.parse.html#urllib.parse.urljoin", "urllib.parse.urllib.parse.SplitResult.geturl()": "library/urllib.parse.html#urllib.parse.urllib.parse.SplitResult.geturl", "urllib.parse.urlparse()": "library/urllib.parse.html#urllib.parse.urlparse", "urllib.parse.urlsplit()": "library/urllib.parse.html#urllib.parse.urlsplit", "urllib.parse.urlunparse()": "library/urllib.parse.html#urllib.parse.urlunparse", "urllib.parse.urlunsplit()": "library/urllib.parse.html#urllib.parse.urlunsplit", "urllib.request": "library/urllib.request.html", "urllib.request Restrictions (urllib.request)": "library/urllib.request.html#urllib-request-restrictions", "urllib.request.AbstractBasicAuthHandler": "library/urllib.request.html#urllib.request.AbstractBasicAuthHandler", "urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed()": "library/urllib.request.html#urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed", "urllib.request.AbstractDigestAuthHandler": "library/urllib.request.html#urllib.request.AbstractDigestAuthHandler", "urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed()": "library/urllib.request.html#urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed", "urllib.request.BaseHandler": "library/urllib.request.html#urllib.request.BaseHandler", "urllib.request.BaseHandler.add_parent()": "library/urllib.request.html#urllib.request.BaseHandler.add_parent", "urllib.request.BaseHandler.close()": "library/urllib.request.html#urllib.request.BaseHandler.close", "urllib.request.BaseHandler.default_open()": "library/urllib.request.html#urllib.request.BaseHandler.default_open", "urllib.request.BaseHandler.http_error_default()": "library/urllib.request.html#urllib.request.BaseHandler.http_error_default", "urllib.request.BaseHandler.parent": "library/urllib.request.html#urllib.request.BaseHandler.parent", "urllib.request.BaseHandler.unknown_open()": "library/urllib.request.html#urllib.request.BaseHandler.unknown_open", "urllib.request.build_opener()": "library/urllib.request.html#urllib.request.build_opener", "urllib.request.CacheFTPHandler": "library/urllib.request.html#urllib.request.CacheFTPHandler", "urllib.request.CacheFTPHandler.setMaxConns()": "library/urllib.request.html#urllib.request.CacheFTPHandler.setMaxConns", "urllib.request.CacheFTPHandler.setTimeout()": "library/urllib.request.html#urllib.request.CacheFTPHandler.setTimeout", "urllib.request.DataHandler": "library/urllib.request.html#urllib.request.DataHandler", "urllib.request.DataHandler.data_open()": "library/urllib.request.html#urllib.request.DataHandler.data_open", "urllib.request.FancyURLopener": "library/urllib.request.html#urllib.request.FancyURLopener", "urllib.request.FancyURLopener.prompt_user_passwd()": "library/urllib.request.html#urllib.request.FancyURLopener.prompt_user_passwd", "urllib.request.FileHandler": "library/urllib.request.html#urllib.request.FileHandler", "urllib.request.FileHandler.file_open()": "library/urllib.request.html#urllib.request.FileHandler.file_open", "urllib.request.FTPHandler": "library/urllib.request.html#urllib.request.FTPHandler", "urllib.request.FTPHandler.ftp_open()": "library/urllib.request.html#urllib.request.FTPHandler.ftp_open", "urllib.request.getproxies()": "library/urllib.request.html#urllib.request.getproxies", "urllib.request.HTTPBasicAuthHandler": "library/urllib.request.html#urllib.request.HTTPBasicAuthHandler", "urllib.request.HTTPBasicAuthHandler.http_error_401()": "library/urllib.request.html#urllib.request.HTTPBasicAuthHandler.http_error_401", "urllib.request.HTTPCookieProcessor": "library/urllib.request.html#urllib.request.HTTPCookieProcessor", "urllib.request.HTTPCookieProcessor.cookiejar": "library/urllib.request.html#urllib.request.HTTPCookieProcessor.cookiejar", "urllib.request.HTTPDefaultErrorHandler": "library/urllib.request.html#urllib.request.HTTPDefaultErrorHandler", "urllib.request.HTTPDigestAuthHandler": "library/urllib.request.html#urllib.request.HTTPDigestAuthHandler", "urllib.request.HTTPDigestAuthHandler.http_error_401()": "library/urllib.request.html#urllib.request.HTTPDigestAuthHandler.http_error_401", "urllib.request.HTTPErrorProcessor": "library/urllib.request.html#urllib.request.HTTPErrorProcessor", "urllib.request.HTTPErrorProcessor.http_response()": "library/urllib.request.html#urllib.request.HTTPErrorProcessor.http_response", "urllib.request.HTTPErrorProcessor.https_response()": "library/urllib.request.html#urllib.request.HTTPErrorProcessor.https_response", "urllib.request.HTTPHandler": "library/urllib.request.html#urllib.request.HTTPHandler", "urllib.request.HTTPHandler.http_open()": "library/urllib.request.html#urllib.request.HTTPHandler.http_open", "urllib.request.HTTPPasswordMgr": "library/urllib.request.html#urllib.request.HTTPPasswordMgr", "urllib.request.HTTPPasswordMgr.add_password()": "library/urllib.request.html#urllib.request.HTTPPasswordMgr.add_password", "urllib.request.HTTPPasswordMgr.find_user_password()": "library/urllib.request.html#urllib.request.HTTPPasswordMgr.find_user_password", "urllib.request.HTTPPasswordMgrWithDefaultRealm": "library/urllib.request.html#urllib.request.HTTPPasswordMgrWithDefaultRealm", "urllib.request.HTTPPasswordMgrWithPriorAuth": "library/urllib.request.html#urllib.request.HTTPPasswordMgrWithPriorAuth", "urllib.request.HTTPPasswordMgrWithPriorAuth.add_password()": "library/urllib.request.html#urllib.request.HTTPPasswordMgrWithPriorAuth.add_password", "urllib.request.HTTPPasswordMgrWithPriorAuth.find_user_password()": "library/urllib.request.html#urllib.request.HTTPPasswordMgrWithPriorAuth.find_user_password", "urllib.request.HTTPPasswordMgrWithPriorAuth.is_authenticated()": "library/urllib.request.html#urllib.request.HTTPPasswordMgrWithPriorAuth.is_authenticated", "urllib.request.HTTPPasswordMgrWithPriorAuth.update_authenticated()": "library/urllib.request.html#urllib.request.HTTPPasswordMgrWithPriorAuth.update_authenticated", "urllib.request.HTTPRedirectHandler": "library/urllib.request.html#urllib.request.HTTPRedirectHandler", "urllib.request.HTTPRedirectHandler.http_error_301()": "library/urllib.request.html#urllib.request.HTTPRedirectHandler.http_error_301", "urllib.request.HTTPRedirectHandler.http_error_302()": "library/urllib.request.html#urllib.request.HTTPRedirectHandler.http_error_302", "urllib.request.HTTPRedirectHandler.http_error_303()": "library/urllib.request.html#urllib.request.HTTPRedirectHandler.http_error_303", "urllib.request.HTTPRedirectHandler.http_error_307()": "library/urllib.request.html#urllib.request.HTTPRedirectHandler.http_error_307", "urllib.request.HTTPRedirectHandler.http_error_308()": "library/urllib.request.html#urllib.request.HTTPRedirectHandler.http_error_308", "urllib.request.HTTPRedirectHandler.redirect_request()": "library/urllib.request.html#urllib.request.HTTPRedirectHandler.redirect_request", "urllib.request.HTTPSHandler": "library/urllib.request.html#urllib.request.HTTPSHandler", "urllib.request.HTTPSHandler.https_open()": "library/urllib.request.html#urllib.request.HTTPSHandler.https_open", "urllib.request.install_opener()": "library/urllib.request.html#urllib.request.install_opener", "urllib.request.OpenerDirector": "library/urllib.request.html#urllib.request.OpenerDirector", "urllib.request.OpenerDirector.add_handler()": "library/urllib.request.html#urllib.request.OpenerDirector.add_handler", "urllib.request.OpenerDirector.error()": "library/urllib.request.html#urllib.request.OpenerDirector.error", "urllib.request.OpenerDirector.open()": "library/urllib.request.html#urllib.request.OpenerDirector.open", "urllib.request.pathname2url()": "library/urllib.request.html#urllib.request.pathname2url", "urllib.request.ProxyBasicAuthHandler": "library/urllib.request.html#urllib.request.ProxyBasicAuthHandler", "urllib.request.ProxyBasicAuthHandler.http_error_407()": "library/urllib.request.html#urllib.request.ProxyBasicAuthHandler.http_error_407", "urllib.request.ProxyDigestAuthHandler": "library/urllib.request.html#urllib.request.ProxyDigestAuthHandler", "urllib.request.ProxyDigestAuthHandler.http_error_407()": "library/urllib.request.html#urllib.request.ProxyDigestAuthHandler.http_error_407", "urllib.request.ProxyHandler": "library/urllib.request.html#urllib.request.ProxyHandler", "urllib.request.Request": "library/urllib.request.html#urllib.request.Request", "urllib.request.Request.add_header()": "library/urllib.request.html#urllib.request.Request.add_header", "urllib.request.Request.add_unredirected_header()": "library/urllib.request.html#urllib.request.Request.add_unredirected_header", "urllib.request.Request.data": "library/urllib.request.html#urllib.request.Request.data", "urllib.request.Request.full_url": "library/urllib.request.html#urllib.request.Request.full_url", "urllib.request.Request.get_full_url()": "library/urllib.request.html#urllib.request.Request.get_full_url", "urllib.request.Request.get_header()": "library/urllib.request.html#urllib.request.Request.get_header", "urllib.request.Request.get_method()": "library/urllib.request.html#urllib.request.Request.get_method", "urllib.request.Request.has_header()": "library/urllib.request.html#urllib.request.Request.has_header", "urllib.request.Request.header_items()": "library/urllib.request.html#urllib.request.Request.header_items", "urllib.request.Request.host": "library/urllib.request.html#urllib.request.Request.host", "urllib.request.Request.method": "library/urllib.request.html#urllib.request.Request.method", "urllib.request.Request.origin_req_host": "library/urllib.request.html#urllib.request.Request.origin_req_host", "urllib.request.Request.remove_header()": "library/urllib.request.html#urllib.request.Request.remove_header", "urllib.request.Request.selector": "library/urllib.request.html#urllib.request.Request.selector", "urllib.request.Request.set_proxy()": "library/urllib.request.html#urllib.request.Request.set_proxy", "urllib.request.Request.type": "library/urllib.request.html#urllib.request.Request.type", "urllib.request.Request.unverifiable": "library/urllib.request.html#urllib.request.Request.unverifiable", "urllib.request.UnknownHandler": "library/urllib.request.html#urllib.request.UnknownHandler", "urllib.request.UnknownHandler.unknown_open()": "library/urllib.request.html#urllib.request.UnknownHandler.unknown_open", "urllib.request.url2pathname()": "library/urllib.request.html#urllib.request.url2pathname", "urllib.request.urlcleanup()": "library/urllib.request.html#urllib.request.urlcleanup", "urllib.request.urlopen()": "library/urllib.request.html#urllib.request.urlopen", "urllib.request.URLopener": "library/urllib.request.html#urllib.request.URLopener", "urllib.request.URLopener.open()": "library/urllib.request.html#urllib.request.URLopener.open", "urllib.request.URLopener.open_unknown()": "library/urllib.request.html#urllib.request.URLopener.open_unknown", "urllib.request.URLopener.retrieve()": "library/urllib.request.html#urllib.request.URLopener.retrieve", "urllib.request.URLopener.version": "library/urllib.request.html#urllib.request.URLopener.version", "urllib.request.urlretrieve()": "library/urllib.request.html#urllib.request.urlretrieve", "urllib.response.addinfourl": "library/urllib.request.html#urllib.response.addinfourl", "urllib.response.addinfourl.code": "library/urllib.request.html#urllib.response.addinfourl.code", "urllib.response.addinfourl.getcode()": "library/urllib.request.html#urllib.response.addinfourl.getcode", "urllib.response.addinfourl.geturl()": "library/urllib.request.html#urllib.response.addinfourl.geturl", "urllib.response.addinfourl.headers": "library/urllib.request.html#urllib.response.addinfourl.headers", "urllib.response.addinfourl.info()": "library/urllib.request.html#urllib.response.addinfourl.info", "urllib.response.addinfourl.status": "library/urllib.request.html#urllib.response.addinfourl.status", "urllib.response.addinfourl.url": "library/urllib.request.html#urllib.response.addinfourl.url", "urllib.robotparser": "library/urllib.robotparser.html", "urllib.robotparser.RobotFileParser": "library/urllib.robotparser.html#urllib.robotparser.RobotFileParser", "urllib.robotparser.RobotFileParser.can_fetch()": "library/urllib.robotparser.html#urllib.robotparser.RobotFileParser.can_fetch", "urllib.robotparser.RobotFileParser.crawl_delay()": "library/urllib.robotparser.html#urllib.robotparser.RobotFileParser.crawl_delay", "urllib.robotparser.RobotFileParser.modified()": "library/urllib.robotparser.html#urllib.robotparser.RobotFileParser.modified", "urllib.robotparser.RobotFileParser.mtime()": "library/urllib.robotparser.html#urllib.robotparser.RobotFileParser.mtime", "urllib.robotparser.RobotFileParser.parse()": "library/urllib.robotparser.html#urllib.robotparser.RobotFileParser.parse", "urllib.robotparser.RobotFileParser.read()": "library/urllib.robotparser.html#urllib.robotparser.RobotFileParser.read", "urllib.robotparser.RobotFileParser.request_rate()": "library/urllib.robotparser.html#urllib.robotparser.RobotFileParser.request_rate", "urllib.robotparser.RobotFileParser.set_url()": "library/urllib.robotparser.html#urllib.robotparser.RobotFileParser.set_url", "urllib.robotparser.RobotFileParser.site_maps()": "library/urllib.robotparser.html#urllib.robotparser.RobotFileParser.site_maps", "Usage (hashlib)": "library/hashlib.html#usage", "User scheme (sysconfig)": "library/sysconfig.html#user-scheme", "user-defined function (object)": "reference/compound_stmts.html#index-28", "User-defined generic types (typing)": "library/typing.html#user-defined-generic-types", "usercustomize (site)": "library/site.html#module-usercustomize", "UserDict objects (collections)": "library/collections.html#userdict-objects", "UserList objects (collections)": "library/collections.html#userlist-objects", "UserString objects (collections)": "library/collections.html#userstring-objects", "UserWarning": "library/exceptions.html#UserWarning", "Using a custom timer (The Python Profilers)": "library/profile.html#using-a-custom-timer", "Using locks, conditions, and semaphores in the with statement (threading)": "library/threading.html#using-locks-conditions-and-semaphores-in-the-with-statement", "Using sysconfig as a script (sysconfig)": "library/sysconfig.html#using-sysconfig-as-a-script", "Using the subprocess Module (subprocess)": "library/subprocess.html#using-the-subprocess-module", "Using Ttk (tkinter.ttk)": "library/tkinter.ttk.html#using-ttk", "Using ZoneInfo (zoneinfo)": "library/zoneinfo.html#using-zoneinfo", "Utilities": "c-api/utilities.html", "Utilities (contextlib)": "library/contextlib.html#utilities", "Utilities and Decorators (enum)": "library/enum.html#utilities-and-decorators", "uuid": "library/uuid.html", "uuid.getnode()": "library/uuid.html#uuid.getnode", "uuid.NAMESPACE_DNS": "library/uuid.html#uuid.NAMESPACE_DNS", "uuid.NAMESPACE_OID": "library/uuid.html#uuid.NAMESPACE_OID", "uuid.NAMESPACE_URL": "library/uuid.html#uuid.NAMESPACE_URL", "uuid.NAMESPACE_X500": "library/uuid.html#uuid.NAMESPACE_X500", "uuid.RESERVED_FUTURE": "library/uuid.html#uuid.RESERVED_FUTURE", "uuid.RESERVED_MICROSOFT": "library/uuid.html#uuid.RESERVED_MICROSOFT", "uuid.RESERVED_NCS": "library/uuid.html#uuid.RESERVED_NCS", "uuid.RFC_4122": "library/uuid.html#uuid.RFC_4122", "uuid.SafeUUID": "library/uuid.html#uuid.SafeUUID", "uuid.SafeUUID.safe": "library/uuid.html#uuid.SafeUUID.safe", "uuid.SafeUUID.unknown": "library/uuid.html#uuid.SafeUUID.unknown", "uuid.SafeUUID.unsafe": "library/uuid.html#uuid.SafeUUID.unsafe", "uuid.UUID": "library/uuid.html#uuid.UUID", "uuid.UUID.bytes": "library/uuid.html#uuid.UUID.bytes", "uuid.UUID.bytes_le": "library/uuid.html#uuid.UUID.bytes_le", "uuid.UUID.clock_seq": "library/uuid.html#uuid.UUID.clock_seq", "uuid.UUID.clock_seq_hi_variant": "library/uuid.html#uuid.UUID.clock_seq_hi_variant", "uuid.UUID.clock_seq_low": "library/uuid.html#uuid.UUID.clock_seq_low", "uuid.UUID.fields": "library/uuid.html#uuid.UUID.fields", "uuid.UUID.hex": "library/uuid.html#uuid.UUID.hex", "uuid.UUID.int": "library/uuid.html#uuid.UUID.int", "uuid.UUID.is_safe": "library/uuid.html#uuid.UUID.is_safe", "uuid.UUID.node": "library/uuid.html#uuid.UUID.node", "uuid.UUID.time": "library/uuid.html#uuid.UUID.time", "uuid.UUID.time_hi_version": "library/uuid.html#uuid.UUID.time_hi_version", "uuid.UUID.time_low": "library/uuid.html#uuid.UUID.time_low", "uuid.UUID.time_mid": "library/uuid.html#uuid.UUID.time_mid", "uuid.UUID.urn": "library/uuid.html#uuid.UUID.urn", "uuid.UUID.variant": "library/uuid.html#uuid.UUID.variant", "uuid.UUID.version": "library/uuid.html#uuid.UUID.version", "uuid.uuid1()": "library/uuid.html#uuid.uuid1", "uuid.uuid3()": "library/uuid.html#uuid.uuid3", "uuid.uuid4()": "library/uuid.html#uuid.uuid4", "uuid.uuid5()": "library/uuid.html#uuid.uuid5", "ValueError": "library/exceptions.html#ValueError", "values (writing)": "reference/simple_stmts.html#index-3", "variable annotation": "glossary.html#term-variable-annotation", "vars()": "library/functions.html#vars", "venv": "library/venv.html", "venv.create()": "library/venv.html#venv.create", "venv.EnvBuilder": "library/venv.html#venv.EnvBuilder", "venv.EnvBuilder.create()": "library/venv.html#venv.EnvBuilder.create", "venv.EnvBuilder.create_configuration()": "library/venv.html#venv.EnvBuilder.create_configuration", "venv.EnvBuilder.create_git_ignore_file()": "library/venv.html#venv.EnvBuilder.create_git_ignore_file", "venv.EnvBuilder.ensure_directories()": "library/venv.html#venv.EnvBuilder.ensure_directories", "venv.EnvBuilder.install_scripts()": "library/venv.html#venv.EnvBuilder.install_scripts", "venv.EnvBuilder.post_setup()": "library/venv.html#venv.EnvBuilder.post_setup", "venv.EnvBuilder.setup_python()": "library/venv.html#venv.EnvBuilder.setup_python", "venv.EnvBuilder.setup_scripts()": "library/venv.html#venv.EnvBuilder.setup_scripts", "venv.EnvBuilder.upgrade_dependencies()": "library/venv.html#venv.EnvBuilder.upgrade_dependencies", "virtual environment": "glossary.html#term-virtual-environment", "Virtual environments (The initialization of the sys.path module search path)": "library/sys_path_init.html#virtual-environments", "virtual machine": "glossary.html#term-virtual-machine", "Waiting Primitives (Coroutines and Tasks)": "library/asyncio-task.html#waiting-primitives", "Warning": "library/exceptions.html#Warning", "Warning Categories (warnings)": "library/warnings.html#warning-categories", "warnings": "library/warnings.html", "Warnings (Exceptions)": "library/exceptions.html#warnings", "warnings.catch_warnings": "library/warnings.html#warnings.catch_warnings", "warnings.deprecated()": "library/warnings.html#warnings.deprecated", "warnings.filterwarnings()": "library/warnings.html#warnings.filterwarnings", "warnings.formatwarning()": "library/warnings.html#warnings.formatwarning", "warnings.resetwarnings()": "library/warnings.html#warnings.resetwarnings", "warnings.showwarning()": "library/warnings.html#warnings.showwarning", "warnings.simplefilter()": "library/warnings.html#warnings.simplefilter", "warnings.warn()": "library/warnings.html#warnings.warn", "warnings.warn_explicit()": "library/warnings.html#warnings.warn_explicit", "WatchedFileHandler (logging.handlers)": "library/logging.handlers.html#watchedfilehandler", "wave": "library/wave.html", "wave.Error": "library/wave.html#wave.Error", "wave.open()": "library/wave.html#wave.open", "wave.Wave_read": "library/wave.html#wave.Wave_read", "wave.Wave_read.close()": "library/wave.html#wave.Wave_read.close", "wave.Wave_read.getcompname()": "library/wave.html#wave.Wave_read.getcompname", "wave.Wave_read.getcomptype()": "library/wave.html#wave.Wave_read.getcomptype", "wave.Wave_read.getframerate()": "library/wave.html#wave.Wave_read.getframerate", "wave.Wave_read.getmark()": "library/wave.html#wave.Wave_read.getmark", "wave.Wave_read.getmarkers()": "library/wave.html#wave.Wave_read.getmarkers", "wave.Wave_read.getnchannels()": "library/wave.html#wave.Wave_read.getnchannels", "wave.Wave_read.getnframes()": "library/wave.html#wave.Wave_read.getnframes", "wave.Wave_read.getparams()": "library/wave.html#wave.Wave_read.getparams", "wave.Wave_read.getsampwidth()": "library/wave.html#wave.Wave_read.getsampwidth", "wave.Wave_read.readframes()": "library/wave.html#wave.Wave_read.readframes", "wave.Wave_read.rewind()": "library/wave.html#wave.Wave_read.rewind", "wave.Wave_read.setpos()": "library/wave.html#wave.Wave_read.setpos", "wave.Wave_read.tell()": "library/wave.html#wave.Wave_read.tell", "wave.Wave_write": "library/wave.html#wave.Wave_write", "wave.Wave_write.close()": "library/wave.html#wave.Wave_write.close", "wave.Wave_write.setcomptype()": "library/wave.html#wave.Wave_write.setcomptype", "wave.Wave_write.setframerate()": "library/wave.html#wave.Wave_write.setframerate", "wave.Wave_write.setnchannels()": "library/wave.html#wave.Wave_write.setnchannels", "wave.Wave_write.setnframes()": "library/wave.html#wave.Wave_write.setnframes", "wave.Wave_write.setparams()": "library/wave.html#wave.Wave_write.setparams", "wave.Wave_write.setsampwidth()": "library/wave.html#wave.Wave_write.setsampwidth", "wave.Wave_write.tell()": "library/wave.html#wave.Wave_write.tell", "wave.Wave_write.writeframes()": "library/wave.html#wave.Wave_write.writeframes", "wave.Wave_write.writeframesraw()": "library/wave.html#wave.Wave_write.writeframesraw", "Wave_read Objects (wave)": "library/wave.html#wave-read-objects", "Wave_write Objects (wave)": "library/wave.html#wave-write-objects", "Weak Reference Objects": "c-api/weakref.html", "Weak Reference Objects (weakref)": "library/weakref.html#weak-reference-objects", "weakref": "library/weakref.html", "weakref.CallableProxyType": "library/weakref.html#weakref.CallableProxyType", "weakref.finalize": "library/weakref.html#weakref.finalize", "weakref.finalize.__call__()": "library/weakref.html#weakref.finalize.__call__", "weakref.finalize.alive": "library/weakref.html#weakref.finalize.alive", "weakref.finalize.atexit": "library/weakref.html#weakref.finalize.atexit", "weakref.finalize.detach()": "library/weakref.html#weakref.finalize.detach", "weakref.finalize.peek()": "library/weakref.html#weakref.finalize.peek", "weakref.getweakrefcount()": "library/weakref.html#weakref.getweakrefcount", "weakref.getweakrefs()": "library/weakref.html#weakref.getweakrefs", "weakref.proxy()": "library/weakref.html#weakref.proxy", "weakref.ProxyType": "library/weakref.html#weakref.ProxyType", "weakref.ProxyTypes": "library/weakref.html#weakref.ProxyTypes", "weakref.ref": "library/weakref.html#weakref.ref", "weakref.ref.__callback__": "library/weakref.html#weakref.ref.__callback__", "weakref.ReferenceType": "library/weakref.html#weakref.ReferenceType", "weakref.WeakKeyDictionary": "library/weakref.html#weakref.WeakKeyDictionary", "weakref.WeakKeyDictionary.keyrefs()": "library/weakref.html#weakref.WeakKeyDictionary.keyrefs", "weakref.WeakMethod": "library/weakref.html#weakref.WeakMethod", "weakref.WeakSet": "library/weakref.html#weakref.WeakSet", "weakref.WeakValueDictionary": "library/weakref.html#weakref.WeakValueDictionary", "weakref.WeakValueDictionary.valuerefs()": "library/weakref.html#weakref.WeakValueDictionary.valuerefs", "webbrowser": "library/webbrowser.html", "webbrowser.controller.name": "library/webbrowser.html#webbrowser.controller.name", "webbrowser.controller.open()": "library/webbrowser.html#webbrowser.controller.open", "webbrowser.controller.open_new()": "library/webbrowser.html#webbrowser.controller.open_new", "webbrowser.controller.open_new_tab()": "library/webbrowser.html#webbrowser.controller.open_new_tab", "webbrowser.Error": "library/webbrowser.html#webbrowser.Error", "webbrowser.get()": "library/webbrowser.html#webbrowser.get", "webbrowser.open()": "library/webbrowser.html#webbrowser.open", "webbrowser.open_new()": "library/webbrowser.html#webbrowser.open_new", "webbrowser.open_new_tab()": "library/webbrowser.html#webbrowser.open_new_tab", "webbrowser.register()": "library/webbrowser.html#webbrowser.register", "What can be pickled and unpickled? (pickle)": "library/pickle.html#what-can-be-pickled-and-unpickled", "What Is Deterministic Profiling? (The Python Profilers)": "library/profile.html#what-is-deterministic-profiling", "while (statement)": "reference/compound_stmts.html#index-4", "Widget (tkinter.ttk)": "library/tkinter.ttk.html#widget", "Window Objects (curses)": "library/curses.html#window-objects", "Windows (Platform Support)": "library/asyncio-platforms.html#windows", "Windows Platform (platform)": "library/platform.html#windows-platform", "Windows Popen Helpers (subprocess)": "library/subprocess.html#windows-popen-helpers", "WindowsError": "library/exceptions.html#WindowsError", "winreg": "library/winreg.html", "winreg.CloseKey()": "library/winreg.html#winreg.CloseKey", "winreg.ConnectRegistry()": "library/winreg.html#winreg.ConnectRegistry", "winreg.CreateKey()": "library/winreg.html#winreg.CreateKey", "winreg.CreateKeyEx()": "library/winreg.html#winreg.CreateKeyEx", "winreg.DeleteKey()": "library/winreg.html#winreg.DeleteKey", "winreg.DeleteKeyEx()": "library/winreg.html#winreg.DeleteKeyEx", "winreg.DeleteValue()": "library/winreg.html#winreg.DeleteValue", "winreg.DisableReflectionKey()": "library/winreg.html#winreg.DisableReflectionKey", "winreg.EnableReflectionKey()": "library/winreg.html#winreg.EnableReflectionKey", "winreg.EnumKey()": "library/winreg.html#winreg.EnumKey", "winreg.EnumValue()": "library/winreg.html#winreg.EnumValue", "winreg.ExpandEnvironmentStrings()": "library/winreg.html#winreg.ExpandEnvironmentStrings", "winreg.FlushKey()": "library/winreg.html#winreg.FlushKey", "winreg.HKEY_CLASSES_ROOT": "library/winreg.html#winreg.HKEY_CLASSES_ROOT", "winreg.HKEY_CURRENT_CONFIG": "library/winreg.html#winreg.HKEY_CURRENT_CONFIG", "winreg.HKEY_CURRENT_USER": "library/winreg.html#winreg.HKEY_CURRENT_USER", "winreg.HKEY_DYN_DATA": "library/winreg.html#winreg.HKEY_DYN_DATA", "winreg.HKEY_LOCAL_MACHINE": "library/winreg.html#winreg.HKEY_LOCAL_MACHINE", "winreg.HKEY_PERFORMANCE_DATA": "library/winreg.html#winreg.HKEY_PERFORMANCE_DATA", "winreg.HKEY_USERS": "library/winreg.html#winreg.HKEY_USERS", "winreg.KEY_ALL_ACCESS": "library/winreg.html#winreg.KEY_ALL_ACCESS", "winreg.KEY_CREATE_LINK": "library/winreg.html#winreg.KEY_CREATE_LINK", "winreg.KEY_CREATE_SUB_KEY": "library/winreg.html#winreg.KEY_CREATE_SUB_KEY", "winreg.KEY_ENUMERATE_SUB_KEYS": "library/winreg.html#winreg.KEY_ENUMERATE_SUB_KEYS", "winreg.KEY_EXECUTE": "library/winreg.html#winreg.KEY_EXECUTE", "winreg.KEY_NOTIFY": "library/winreg.html#winreg.KEY_NOTIFY", "winreg.KEY_QUERY_VALUE": "library/winreg.html#winreg.KEY_QUERY_VALUE", "winreg.KEY_READ": "library/winreg.html#winreg.KEY_READ", "winreg.KEY_SET_VALUE": "library/winreg.html#winreg.KEY_SET_VALUE", "winreg.KEY_WOW64_32KEY": "library/winreg.html#winreg.KEY_WOW64_32KEY", "winreg.KEY_WOW64_64KEY": "library/winreg.html#winreg.KEY_WOW64_64KEY", "winreg.KEY_WRITE": "library/winreg.html#winreg.KEY_WRITE", "winreg.LoadKey()": "library/winreg.html#winreg.LoadKey", "winreg.OpenKey()": "library/winreg.html#winreg.OpenKey", "winreg.OpenKeyEx()": "library/winreg.html#winreg.OpenKeyEx", "winreg.PyHKEY.__enter__()": "library/winreg.html#winreg.PyHKEY.__enter__", "winreg.PyHKEY.__exit__()": "library/winreg.html#winreg.PyHKEY.__exit__", "winreg.PyHKEY.Close()": "library/winreg.html#winreg.PyHKEY.Close", "winreg.PyHKEY.Detach()": "library/winreg.html#winreg.PyHKEY.Detach", "winreg.QueryInfoKey()": "library/winreg.html#winreg.QueryInfoKey", "winreg.QueryReflectionKey()": "library/winreg.html#winreg.QueryReflectionKey", "winreg.QueryValue()": "library/winreg.html#winreg.QueryValue", "winreg.QueryValueEx()": "library/winreg.html#winreg.QueryValueEx", "winreg.REG_BINARY": "library/winreg.html#winreg.REG_BINARY", "winreg.REG_DWORD": "library/winreg.html#winreg.REG_DWORD", "winreg.REG_DWORD_BIG_ENDIAN": "library/winreg.html#winreg.REG_DWORD_BIG_ENDIAN", "winreg.REG_DWORD_LITTLE_ENDIAN": "library/winreg.html#winreg.REG_DWORD_LITTLE_ENDIAN", "winreg.REG_EXPAND_SZ": "library/winreg.html#winreg.REG_EXPAND_SZ", "winreg.REG_FULL_RESOURCE_DESCRIPTOR": "library/winreg.html#winreg.REG_FULL_RESOURCE_DESCRIPTOR", "winreg.REG_LINK": "library/winreg.html#winreg.REG_LINK", "winreg.REG_MULTI_SZ": "library/winreg.html#winreg.REG_MULTI_SZ", "winreg.REG_NONE": "library/winreg.html#winreg.REG_NONE", "winreg.REG_QWORD": "library/winreg.html#winreg.REG_QWORD", "winreg.REG_QWORD_LITTLE_ENDIAN": "library/winreg.html#winreg.REG_QWORD_LITTLE_ENDIAN", "winreg.REG_RESOURCE_LIST": "library/winreg.html#winreg.REG_RESOURCE_LIST", "winreg.REG_RESOURCE_REQUIREMENTS_LIST": "library/winreg.html#winreg.REG_RESOURCE_REQUIREMENTS_LIST", "winreg.REG_SZ": "library/winreg.html#winreg.REG_SZ", "winreg.SaveKey()": "library/winreg.html#winreg.SaveKey", "winreg.SetValue()": "library/winreg.html#winreg.SetValue", "winreg.SetValueEx()": "library/winreg.html#winreg.SetValueEx", "winsound": "library/winsound.html", "winsound.Beep()": "library/winsound.html#winsound.Beep", "winsound.MB_ICONASTERISK": "library/winsound.html#winsound.MB_ICONASTERISK", "winsound.MB_ICONEXCLAMATION": "library/winsound.html#winsound.MB_ICONEXCLAMATION", "winsound.MB_ICONHAND": "library/winsound.html#winsound.MB_ICONHAND", "winsound.MB_ICONQUESTION": "library/winsound.html#winsound.MB_ICONQUESTION", "winsound.MB_OK": "library/winsound.html#winsound.MB_OK", "winsound.MessageBeep()": "library/winsound.html#winsound.MessageBeep", "winsound.PlaySound()": "library/winsound.html#winsound.PlaySound", "winsound.SND_ALIAS": "library/winsound.html#winsound.SND_ALIAS", "winsound.SND_ASYNC": "library/winsound.html#winsound.SND_ASYNC", "winsound.SND_FILENAME": "library/winsound.html#winsound.SND_FILENAME", "winsound.SND_LOOP": "library/winsound.html#winsound.SND_LOOP", "winsound.SND_MEMORY": "library/winsound.html#winsound.SND_MEMORY", "winsound.SND_NODEFAULT": "library/winsound.html#winsound.SND_NODEFAULT", "winsound.SND_NOSTOP": "library/winsound.html#winsound.SND_NOSTOP", "winsound.SND_NOWAIT": "library/winsound.html#winsound.SND_NOWAIT", "winsound.SND_PURGE": "library/winsound.html#winsound.SND_PURGE", "with (statement)": "reference/compound_stmts.html#index-16", "Working with threads (decimal)": "library/decimal.html#working-with-threads", "Writer Objects (csv)": "library/csv.html#writer-objects", "writing (values)": "reference/simple_stmts.html#index-3", "Writing a Custom Event Loop (Extending)": "library/asyncio-extending.html#writing-a-custom-event-loop", "Writing Unit Tests for the test package (test)": "library/test.html#writing-unit-tests-for-the-test-package", "wsgiref": "library/wsgiref.html", "wsgiref.handlers \u2013 server/gateway base classes (wsgiref)": "library/wsgiref.html#module-wsgiref.handlers", "wsgiref.handlers.BaseCGIHandler": "library/wsgiref.html#wsgiref.handlers.BaseCGIHandler", "wsgiref.handlers.BaseHandler": "library/wsgiref.html#wsgiref.handlers.BaseHandler", "wsgiref.handlers.BaseHandler._flush()": "library/wsgiref.html#wsgiref.handlers.BaseHandler._flush", "wsgiref.handlers.BaseHandler._write()": "library/wsgiref.html#wsgiref.handlers.BaseHandler._write", "wsgiref.handlers.BaseHandler.add_cgi_vars()": "library/wsgiref.html#wsgiref.handlers.BaseHandler.add_cgi_vars", "wsgiref.handlers.BaseHandler.error_body": "library/wsgiref.html#wsgiref.handlers.BaseHandler.error_body", "wsgiref.handlers.BaseHandler.error_headers": "library/wsgiref.html#wsgiref.handlers.BaseHandler.error_headers", "wsgiref.handlers.BaseHandler.error_output()": "library/wsgiref.html#wsgiref.handlers.BaseHandler.error_output", "wsgiref.handlers.BaseHandler.error_status": "library/wsgiref.html#wsgiref.handlers.BaseHandler.error_status", "wsgiref.handlers.BaseHandler.get_scheme()": "library/wsgiref.html#wsgiref.handlers.BaseHandler.get_scheme", "wsgiref.handlers.BaseHandler.get_stderr()": "library/wsgiref.html#wsgiref.handlers.BaseHandler.get_stderr", "wsgiref.handlers.BaseHandler.get_stdin()": "library/wsgiref.html#wsgiref.handlers.BaseHandler.get_stdin", "wsgiref.handlers.BaseHandler.http_version": "library/wsgiref.html#wsgiref.handlers.BaseHandler.http_version", "wsgiref.handlers.BaseHandler.log_exception()": "library/wsgiref.html#wsgiref.handlers.BaseHandler.log_exception", "wsgiref.handlers.BaseHandler.origin_server": "library/wsgiref.html#wsgiref.handlers.BaseHandler.origin_server", "wsgiref.handlers.BaseHandler.os_environ": "library/wsgiref.html#wsgiref.handlers.BaseHandler.os_environ", "wsgiref.handlers.BaseHandler.run()": "library/wsgiref.html#wsgiref.handlers.BaseHandler.run", "wsgiref.handlers.BaseHandler.sendfile()": "library/wsgiref.html#wsgiref.handlers.BaseHandler.sendfile", "wsgiref.handlers.BaseHandler.server_software": "library/wsgiref.html#wsgiref.handlers.BaseHandler.server_software", "wsgiref.handlers.BaseHandler.setup_environ()": "library/wsgiref.html#wsgiref.handlers.BaseHandler.setup_environ", "wsgiref.handlers.BaseHandler.traceback_limit": "library/wsgiref.html#wsgiref.handlers.BaseHandler.traceback_limit", "wsgiref.handlers.BaseHandler.wsgi_file_wrapper": "library/wsgiref.html#wsgiref.handlers.BaseHandler.wsgi_file_wrapper", "wsgiref.handlers.BaseHandler.wsgi_multiprocess": "library/wsgiref.html#wsgiref.handlers.BaseHandler.wsgi_multiprocess", "wsgiref.handlers.BaseHandler.wsgi_multithread": "library/wsgiref.html#wsgiref.handlers.BaseHandler.wsgi_multithread", "wsgiref.handlers.BaseHandler.wsgi_run_once": "library/wsgiref.html#wsgiref.handlers.BaseHandler.wsgi_run_once", "wsgiref.handlers.CGIHandler": "library/wsgiref.html#wsgiref.handlers.CGIHandler", "wsgiref.handlers.IISCGIHandler": "library/wsgiref.html#wsgiref.handlers.IISCGIHandler", "wsgiref.handlers.read_environ()": "library/wsgiref.html#wsgiref.handlers.read_environ", "wsgiref.handlers.SimpleHandler": "library/wsgiref.html#wsgiref.handlers.SimpleHandler", "wsgiref.headers \u2013 WSGI response header tools (wsgiref)": "library/wsgiref.html#module-wsgiref.headers", "wsgiref.headers.Headers": "library/wsgiref.html#wsgiref.headers.Headers", "wsgiref.headers.Headers.add_header()": "library/wsgiref.html#wsgiref.headers.Headers.add_header", "wsgiref.headers.Headers.get_all()": "library/wsgiref.html#wsgiref.headers.Headers.get_all", "wsgiref.simple_server \u2013 a simple WSGI HTTP server (wsgiref)": "library/wsgiref.html#module-wsgiref.simple_server", "wsgiref.simple_server.demo_app()": "library/wsgiref.html#wsgiref.simple_server.demo_app", "wsgiref.simple_server.make_server()": "library/wsgiref.html#wsgiref.simple_server.make_server", "wsgiref.simple_server.WSGIRequestHandler": "library/wsgiref.html#wsgiref.simple_server.WSGIRequestHandler", "wsgiref.simple_server.WSGIRequestHandler.get_environ()": "library/wsgiref.html#wsgiref.simple_server.WSGIRequestHandler.get_environ", "wsgiref.simple_server.WSGIRequestHandler.get_stderr()": "library/wsgiref.html#wsgiref.simple_server.WSGIRequestHandler.get_stderr", "wsgiref.simple_server.WSGIRequestHandler.handle()": "library/wsgiref.html#wsgiref.simple_server.WSGIRequestHandler.handle", "wsgiref.simple_server.WSGIServer": "library/wsgiref.html#wsgiref.simple_server.WSGIServer", "wsgiref.simple_server.WSGIServer.get_app()": "library/wsgiref.html#wsgiref.simple_server.WSGIServer.get_app", "wsgiref.simple_server.WSGIServer.set_app()": "library/wsgiref.html#wsgiref.simple_server.WSGIServer.set_app", "wsgiref.types \u2013 WSGI types for static type checking (wsgiref)": "library/wsgiref.html#module-wsgiref.types", "wsgiref.types.ErrorStream": "library/wsgiref.html#wsgiref.types.ErrorStream", "wsgiref.types.FileWrapper": "library/wsgiref.html#wsgiref.types.FileWrapper", "wsgiref.types.InputStream": "library/wsgiref.html#wsgiref.types.InputStream", "wsgiref.types.StartResponse": "library/wsgiref.html#wsgiref.types.StartResponse", "wsgiref.types.WSGIApplication": "library/wsgiref.html#wsgiref.types.WSGIApplication", "wsgiref.types.WSGIEnvironment": "library/wsgiref.html#wsgiref.types.WSGIEnvironment", "wsgiref.util \u2013 WSGI environment utilities (wsgiref)": "library/wsgiref.html#module-wsgiref.util", "wsgiref.util.application_uri()": "library/wsgiref.html#wsgiref.util.application_uri", "wsgiref.util.FileWrapper": "library/wsgiref.html#wsgiref.util.FileWrapper", "wsgiref.util.guess_scheme()": "library/wsgiref.html#wsgiref.util.guess_scheme", "wsgiref.util.is_hop_by_hop()": "library/wsgiref.html#wsgiref.util.is_hop_by_hop", "wsgiref.util.request_uri()": "library/wsgiref.html#wsgiref.util.request_uri", "wsgiref.util.setup_testing_defaults()": "library/wsgiref.html#wsgiref.util.setup_testing_defaults", "wsgiref.util.shift_path_info()": "library/wsgiref.html#wsgiref.util.shift_path_info", "wsgiref.validate \u2014 WSGI conformance checker (wsgiref)": "library/wsgiref.html#module-wsgiref.validate", "wsgiref.validate.validator()": "library/wsgiref.html#wsgiref.validate.validator", "XInclude support (xml.etree.ElementTree)": "library/xml.etree.elementtree.html#xinclude-support", "XML Processing Modules": "library/xml.html", "XML vulnerabilities (XML Processing Modules)": "library/xml.html#xml-vulnerabilities", "xml.dom": "library/xml.dom.html", "xml.dom.Attr.localName": "library/xml.dom.html#xml.dom.Attr.localName", "xml.dom.Attr.name": "library/xml.dom.html#xml.dom.Attr.name", "xml.dom.Attr.prefix": "library/xml.dom.html#xml.dom.Attr.prefix", "xml.dom.Attr.value": "library/xml.dom.html#xml.dom.Attr.value", "xml.dom.Comment.data": "library/xml.dom.html#xml.dom.Comment.data", "xml.dom.Document.createAttribute()": "library/xml.dom.html#xml.dom.Document.createAttribute", "xml.dom.Document.createAttributeNS()": "library/xml.dom.html#xml.dom.Document.createAttributeNS", "xml.dom.Document.createComment()": "library/xml.dom.html#xml.dom.Document.createComment", "xml.dom.Document.createElement()": "library/xml.dom.html#xml.dom.Document.createElement", "xml.dom.Document.createElementNS()": "library/xml.dom.html#xml.dom.Document.createElementNS", "xml.dom.Document.createProcessingInstruction()": "library/xml.dom.html#xml.dom.Document.createProcessingInstruction", "xml.dom.Document.createTextNode()": "library/xml.dom.html#xml.dom.Document.createTextNode", "xml.dom.Document.documentElement": "library/xml.dom.html#xml.dom.Document.documentElement", "xml.dom.Document.getElementsByTagName()": "library/xml.dom.html#xml.dom.Document.getElementsByTagName", "xml.dom.Document.getElementsByTagNameNS()": "library/xml.dom.html#xml.dom.Document.getElementsByTagNameNS", "xml.dom.DocumentType.entities": "library/xml.dom.html#xml.dom.DocumentType.entities", "xml.dom.DocumentType.internalSubset": "library/xml.dom.html#xml.dom.DocumentType.internalSubset", "xml.dom.DocumentType.name": "library/xml.dom.html#xml.dom.DocumentType.name", "xml.dom.DocumentType.notations": "library/xml.dom.html#xml.dom.DocumentType.notations", "xml.dom.DocumentType.publicId": "library/xml.dom.html#xml.dom.DocumentType.publicId", "xml.dom.DocumentType.systemId": "library/xml.dom.html#xml.dom.DocumentType.systemId", "xml.dom.DOMException": "library/xml.dom.html#xml.dom.DOMException", "xml.dom.DOMImplementation.createDocument()": "library/xml.dom.html#xml.dom.DOMImplementation.createDocument", "xml.dom.DOMImplementation.createDocumentType()": "library/xml.dom.html#xml.dom.DOMImplementation.createDocumentType", "xml.dom.DOMImplementation.hasFeature()": "library/xml.dom.html#xml.dom.DOMImplementation.hasFeature", "xml.dom.DomstringSizeErr": "library/xml.dom.html#xml.dom.DomstringSizeErr", "xml.dom.Element.getAttribute()": "library/xml.dom.html#xml.dom.Element.getAttribute", "xml.dom.Element.getAttributeNode()": "library/xml.dom.html#xml.dom.Element.getAttributeNode", "xml.dom.Element.getAttributeNodeNS()": "library/xml.dom.html#xml.dom.Element.getAttributeNodeNS", "xml.dom.Element.getAttributeNS()": "library/xml.dom.html#xml.dom.Element.getAttributeNS", "xml.dom.Element.getElementsByTagName()": "library/xml.dom.html#xml.dom.Element.getElementsByTagName", "xml.dom.Element.getElementsByTagNameNS()": "library/xml.dom.html#xml.dom.Element.getElementsByTagNameNS", "xml.dom.Element.hasAttribute()": "library/xml.dom.html#xml.dom.Element.hasAttribute", "xml.dom.Element.hasAttributeNS()": "library/xml.dom.html#xml.dom.Element.hasAttributeNS", "xml.dom.Element.removeAttribute()": "library/xml.dom.html#xml.dom.Element.removeAttribute", "xml.dom.Element.removeAttributeNode()": "library/xml.dom.html#xml.dom.Element.removeAttributeNode", "xml.dom.Element.removeAttributeNS()": "library/xml.dom.html#xml.dom.Element.removeAttributeNS", "xml.dom.Element.setAttribute()": "library/xml.dom.html#xml.dom.Element.setAttribute", "xml.dom.Element.setAttributeNode()": "library/xml.dom.html#xml.dom.Element.setAttributeNode", "xml.dom.Element.setAttributeNodeNS()": "library/xml.dom.html#xml.dom.Element.setAttributeNodeNS", "xml.dom.Element.setAttributeNS()": "library/xml.dom.html#xml.dom.Element.setAttributeNS", "xml.dom.Element.tagName": "library/xml.dom.html#xml.dom.Element.tagName", "xml.dom.EMPTY_NAMESPACE": "library/xml.dom.html#xml.dom.EMPTY_NAMESPACE", "xml.dom.getDOMImplementation()": "library/xml.dom.html#xml.dom.getDOMImplementation", "xml.dom.HierarchyRequestErr": "library/xml.dom.html#xml.dom.HierarchyRequestErr", "xml.dom.IndexSizeErr": "library/xml.dom.html#xml.dom.IndexSizeErr", "xml.dom.InuseAttributeErr": "library/xml.dom.html#xml.dom.InuseAttributeErr", "xml.dom.InvalidAccessErr": "library/xml.dom.html#xml.dom.InvalidAccessErr", "xml.dom.InvalidCharacterErr": "library/xml.dom.html#xml.dom.InvalidCharacterErr", "xml.dom.InvalidModificationErr": "library/xml.dom.html#xml.dom.InvalidModificationErr", "xml.dom.InvalidStateErr": "library/xml.dom.html#xml.dom.InvalidStateErr", "xml.dom.minidom": "library/xml.dom.minidom.html", "xml.dom.minidom.Node.toprettyxml()": "library/xml.dom.minidom.html#xml.dom.minidom.Node.toprettyxml", "xml.dom.minidom.Node.toxml()": "library/xml.dom.minidom.html#xml.dom.minidom.Node.toxml", "xml.dom.minidom.Node.unlink()": "library/xml.dom.minidom.html#xml.dom.minidom.Node.unlink", "xml.dom.minidom.Node.writexml()": "library/xml.dom.minidom.html#xml.dom.minidom.Node.writexml", "xml.dom.minidom.parse()": "library/xml.dom.minidom.html#xml.dom.minidom.parse", "xml.dom.minidom.parseString()": "library/xml.dom.minidom.html#xml.dom.minidom.parseString", "xml.dom.NamedNodeMap.item()": "library/xml.dom.html#xml.dom.NamedNodeMap.item", "xml.dom.NamedNodeMap.length": "library/xml.dom.html#xml.dom.NamedNodeMap.length", "xml.dom.NamespaceErr": "library/xml.dom.html#xml.dom.NamespaceErr", "xml.dom.NoDataAllowedErr": "library/xml.dom.html#xml.dom.NoDataAllowedErr", "xml.dom.Node.appendChild()": "library/xml.dom.html#xml.dom.Node.appendChild", "xml.dom.Node.attributes": "library/xml.dom.html#xml.dom.Node.attributes", "xml.dom.Node.childNodes": "library/xml.dom.html#xml.dom.Node.childNodes", "xml.dom.Node.cloneNode()": "library/xml.dom.html#xml.dom.Node.cloneNode", "xml.dom.Node.firstChild": "library/xml.dom.html#xml.dom.Node.firstChild", "xml.dom.Node.hasAttributes()": "library/xml.dom.html#xml.dom.Node.hasAttributes", "xml.dom.Node.hasChildNodes()": "library/xml.dom.html#xml.dom.Node.hasChildNodes", "xml.dom.Node.insertBefore()": "library/xml.dom.html#xml.dom.Node.insertBefore", "xml.dom.Node.isSameNode()": "library/xml.dom.html#xml.dom.Node.isSameNode", "xml.dom.Node.lastChild": "library/xml.dom.html#xml.dom.Node.lastChild", "xml.dom.Node.localName": "library/xml.dom.html#xml.dom.Node.localName", "xml.dom.Node.namespaceURI": "library/xml.dom.html#xml.dom.Node.namespaceURI", "xml.dom.Node.nextSibling": "library/xml.dom.html#xml.dom.Node.nextSibling", "xml.dom.Node.nodeName": "library/xml.dom.html#xml.dom.Node.nodeName", "xml.dom.Node.nodeType": "library/xml.dom.html#xml.dom.Node.nodeType", "xml.dom.Node.nodeValue": "library/xml.dom.html#xml.dom.Node.nodeValue", "xml.dom.Node.normalize()": "library/xml.dom.html#xml.dom.Node.normalize", "xml.dom.Node.parentNode": "library/xml.dom.html#xml.dom.Node.parentNode", "xml.dom.Node.prefix": "library/xml.dom.html#xml.dom.Node.prefix", "xml.dom.Node.previousSibling": "library/xml.dom.html#xml.dom.Node.previousSibling", "xml.dom.Node.removeChild()": "library/xml.dom.html#xml.dom.Node.removeChild", "xml.dom.Node.replaceChild()": "library/xml.dom.html#xml.dom.Node.replaceChild", "xml.dom.NodeList.item()": "library/xml.dom.html#xml.dom.NodeList.item", "xml.dom.NodeList.length": "library/xml.dom.html#xml.dom.NodeList.length", "xml.dom.NoModificationAllowedErr": "library/xml.dom.html#xml.dom.NoModificationAllowedErr", "xml.dom.NotFoundErr": "library/xml.dom.html#xml.dom.NotFoundErr", "xml.dom.NotSupportedErr": "library/xml.dom.html#xml.dom.NotSupportedErr", "xml.dom.ProcessingInstruction.data": "library/xml.dom.html#xml.dom.ProcessingInstruction.data", "xml.dom.ProcessingInstruction.target": "library/xml.dom.html#xml.dom.ProcessingInstruction.target", "xml.dom.pulldom": "library/xml.dom.pulldom.html", "xml.dom.pulldom.default_bufsize": "library/xml.dom.pulldom.html#xml.dom.pulldom.default_bufsize", "xml.dom.pulldom.DOMEventStream": "library/xml.dom.pulldom.html#xml.dom.pulldom.DOMEventStream", "xml.dom.pulldom.DOMEventStream.expandNode()": "library/xml.dom.pulldom.html#xml.dom.pulldom.DOMEventStream.expandNode", "xml.dom.pulldom.DOMEventStream.getEvent()": "library/xml.dom.pulldom.html#xml.dom.pulldom.DOMEventStream.getEvent", "xml.dom.pulldom.DOMEventStream.reset()": "library/xml.dom.pulldom.html#xml.dom.pulldom.DOMEventStream.reset", "xml.dom.pulldom.parse()": "library/xml.dom.pulldom.html#xml.dom.pulldom.parse", "xml.dom.pulldom.parseString()": "library/xml.dom.pulldom.html#xml.dom.pulldom.parseString", "xml.dom.pulldom.PullDom": "library/xml.dom.pulldom.html#xml.dom.pulldom.PullDom", "xml.dom.pulldom.SAX2DOM": "library/xml.dom.pulldom.html#xml.dom.pulldom.SAX2DOM", "xml.dom.registerDOMImplementation()": "library/xml.dom.html#xml.dom.registerDOMImplementation", "xml.dom.SyntaxErr": "library/xml.dom.html#xml.dom.SyntaxErr", "xml.dom.Text.data": "library/xml.dom.html#xml.dom.Text.data", "xml.dom.WrongDocumentErr": "library/xml.dom.html#xml.dom.WrongDocumentErr", "xml.dom.XHTML_NAMESPACE": "library/xml.dom.html#xml.dom.XHTML_NAMESPACE", "xml.dom.XML_NAMESPACE": "library/xml.dom.html#xml.dom.XML_NAMESPACE", "xml.dom.XMLNS_NAMESPACE": "library/xml.dom.html#xml.dom.XMLNS_NAMESPACE", "xml.etree.ElementInclude.default_loader()": "library/xml.etree.elementtree.html#xml.etree.ElementInclude.default_loader", "xml.etree.ElementInclude.include()": "library/xml.etree.elementtree.html#xml.etree.ElementInclude.include", "xml.etree.ElementTree": "library/xml.etree.elementtree.html", "xml.etree.ElementTree.C14NWriterTarget": "library/xml.etree.elementtree.html#xml.etree.ElementTree.C14NWriterTarget", "xml.etree.ElementTree.canonicalize()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.canonicalize", "xml.etree.ElementTree.Comment()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Comment", "xml.etree.ElementTree.dump()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.dump", "xml.etree.ElementTree.Element": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element", "xml.etree.ElementTree.Element.append()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.append", "xml.etree.ElementTree.Element.attrib": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.attrib", "xml.etree.ElementTree.Element.clear()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.clear", "xml.etree.ElementTree.Element.extend()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.extend", "xml.etree.ElementTree.Element.find()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.find", "xml.etree.ElementTree.Element.findall()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.findall", "xml.etree.ElementTree.Element.findtext()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.findtext", "xml.etree.ElementTree.Element.get()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.get", "xml.etree.ElementTree.Element.insert()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.insert", "xml.etree.ElementTree.Element.items()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.items", "xml.etree.ElementTree.Element.iter()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.iter", "xml.etree.ElementTree.Element.iterfind()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.iterfind", "xml.etree.ElementTree.Element.itertext()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.itertext", "xml.etree.ElementTree.Element.keys()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.keys", "xml.etree.ElementTree.Element.makeelement()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.makeelement", "xml.etree.ElementTree.Element.remove()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.remove", "xml.etree.ElementTree.Element.set()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.set", "xml.etree.ElementTree.Element.tag": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.tag", "xml.etree.ElementTree.Element.tail": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.tail", "xml.etree.ElementTree.Element.text": "library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.text", "xml.etree.ElementTree.ElementTree": "library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree", "xml.etree.ElementTree.ElementTree._setroot()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree._setroot", "xml.etree.ElementTree.ElementTree.find()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.find", "xml.etree.ElementTree.ElementTree.findall()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.findall", "xml.etree.ElementTree.ElementTree.findtext()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.findtext", "xml.etree.ElementTree.ElementTree.getroot()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.getroot", "xml.etree.ElementTree.ElementTree.iter()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.iter", "xml.etree.ElementTree.ElementTree.iterfind()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.iterfind", "xml.etree.ElementTree.ElementTree.parse()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.parse", "xml.etree.ElementTree.ElementTree.write()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.write", "xml.etree.ElementTree.fromstring()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.fromstring", "xml.etree.ElementTree.fromstringlist()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.fromstringlist", "xml.etree.ElementTree.indent()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.indent", "xml.etree.ElementTree.iselement()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.iselement", "xml.etree.ElementTree.iterparse()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.iterparse", "xml.etree.ElementTree.parse()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.parse", "xml.etree.ElementTree.ParseError": "library/xml.etree.elementtree.html#xml.etree.ElementTree.ParseError", "xml.etree.ElementTree.ParseError.code": "library/xml.etree.elementtree.html#xml.etree.ElementTree.ParseError.code", "xml.etree.ElementTree.ParseError.position": "library/xml.etree.elementtree.html#xml.etree.ElementTree.ParseError.position", "xml.etree.ElementTree.ProcessingInstruction()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.ProcessingInstruction", "xml.etree.ElementTree.QName": "library/xml.etree.elementtree.html#xml.etree.ElementTree.QName", "xml.etree.ElementTree.register_namespace()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.register_namespace", "xml.etree.ElementTree.SubElement()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.SubElement", "xml.etree.ElementTree.tostring()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.tostring", "xml.etree.ElementTree.tostringlist()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.tostringlist", "xml.etree.ElementTree.TreeBuilder": "library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder", "xml.etree.ElementTree.TreeBuilder.close()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.close", "xml.etree.ElementTree.TreeBuilder.comment()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.comment", "xml.etree.ElementTree.TreeBuilder.data()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.data", "xml.etree.ElementTree.TreeBuilder.doctype()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.doctype", "xml.etree.ElementTree.TreeBuilder.end()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.end", "xml.etree.ElementTree.TreeBuilder.end_ns()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.end_ns", "xml.etree.ElementTree.TreeBuilder.pi()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.pi", "xml.etree.ElementTree.TreeBuilder.start()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.start", "xml.etree.ElementTree.TreeBuilder.start_ns()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.start_ns", "xml.etree.ElementTree.XML()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.XML", "xml.etree.ElementTree.XMLID()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.XMLID", "xml.etree.ElementTree.XMLParser": "library/xml.etree.elementtree.html#xml.etree.ElementTree.XMLParser", "xml.etree.ElementTree.XMLParser.close()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.XMLParser.close", "xml.etree.ElementTree.XMLParser.feed()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.XMLParser.feed", "xml.etree.ElementTree.XMLParser.flush()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.XMLParser.flush", "xml.etree.ElementTree.XMLPullParser": "library/xml.etree.elementtree.html#xml.etree.ElementTree.XMLPullParser", "xml.etree.ElementTree.XMLPullParser.close()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.XMLPullParser.close", "xml.etree.ElementTree.XMLPullParser.feed()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.XMLPullParser.feed", "xml.etree.ElementTree.XMLPullParser.flush()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.XMLPullParser.flush", "xml.etree.ElementTree.XMLPullParser.read_events()": "library/xml.etree.elementtree.html#xml.etree.ElementTree.XMLPullParser.read_events", "xml.parsers.expat": "library/pyexpat.html", "xml.parsers.expat.error": "library/pyexpat.html#xml.parsers.expat.error", "xml.parsers.expat.errors.codes": "library/pyexpat.html#xml.parsers.expat.errors.codes", "xml.parsers.expat.errors.messages": "library/pyexpat.html#xml.parsers.expat.errors.messages", "xml.parsers.expat.errors.XML_ERROR_ABORTED": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_ABORTED", "xml.parsers.expat.errors.XML_ERROR_AMPLIFICATION_LIMIT_BREACH": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_AMPLIFICATION_LIMIT_BREACH", "xml.parsers.expat.errors.XML_ERROR_ASYNC_ENTITY": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_ASYNC_ENTITY", "xml.parsers.expat.errors.XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF", "xml.parsers.expat.errors.XML_ERROR_BAD_CHAR_REF": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_BAD_CHAR_REF", "xml.parsers.expat.errors.XML_ERROR_BINARY_ENTITY_REF": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_BINARY_ENTITY_REF", "xml.parsers.expat.errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING", "xml.parsers.expat.errors.XML_ERROR_DUPLICATE_ATTRIBUTE": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_DUPLICATE_ATTRIBUTE", "xml.parsers.expat.errors.XML_ERROR_ENTITY_DECLARED_IN_PE": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_ENTITY_DECLARED_IN_PE", "xml.parsers.expat.errors.XML_ERROR_EXTERNAL_ENTITY_HANDLING": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_EXTERNAL_ENTITY_HANDLING", "xml.parsers.expat.errors.XML_ERROR_FEATURE_REQUIRES_XML_DTD": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_FEATURE_REQUIRES_XML_DTD", "xml.parsers.expat.errors.XML_ERROR_FINISHED": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_FINISHED", "xml.parsers.expat.errors.XML_ERROR_INCOMPLETE_PE": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_INCOMPLETE_PE", "xml.parsers.expat.errors.XML_ERROR_INCORRECT_ENCODING": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_INCORRECT_ENCODING", "xml.parsers.expat.errors.XML_ERROR_INVALID_ARGUMENT": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_INVALID_ARGUMENT", "xml.parsers.expat.errors.XML_ERROR_INVALID_TOKEN": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_INVALID_TOKEN", "xml.parsers.expat.errors.XML_ERROR_JUNK_AFTER_DOC_ELEMENT": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_JUNK_AFTER_DOC_ELEMENT", "xml.parsers.expat.errors.XML_ERROR_MISPLACED_XML_PI": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_MISPLACED_XML_PI", "xml.parsers.expat.errors.XML_ERROR_NO_BUFFER": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_NO_BUFFER", "xml.parsers.expat.errors.XML_ERROR_NO_ELEMENTS": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_NO_ELEMENTS", "xml.parsers.expat.errors.XML_ERROR_NO_MEMORY": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_NO_MEMORY", "xml.parsers.expat.errors.XML_ERROR_NOT_STANDALONE": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_NOT_STANDALONE", "xml.parsers.expat.errors.XML_ERROR_NOT_SUSPENDED": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_NOT_SUSPENDED", "xml.parsers.expat.errors.XML_ERROR_PARAM_ENTITY_REF": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_PARAM_ENTITY_REF", "xml.parsers.expat.errors.XML_ERROR_PARTIAL_CHAR": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_PARTIAL_CHAR", "xml.parsers.expat.errors.XML_ERROR_PUBLICID": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_PUBLICID", "xml.parsers.expat.errors.XML_ERROR_RECURSIVE_ENTITY_REF": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_RECURSIVE_ENTITY_REF", "xml.parsers.expat.errors.XML_ERROR_RESERVED_NAMESPACE_URI": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_RESERVED_NAMESPACE_URI", "xml.parsers.expat.errors.XML_ERROR_RESERVED_PREFIX_XML": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_RESERVED_PREFIX_XML", "xml.parsers.expat.errors.XML_ERROR_RESERVED_PREFIX_XMLNS": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_RESERVED_PREFIX_XMLNS", "xml.parsers.expat.errors.XML_ERROR_SUSPEND_PE": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_SUSPEND_PE", "xml.parsers.expat.errors.XML_ERROR_SUSPENDED": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_SUSPENDED", "xml.parsers.expat.errors.XML_ERROR_SYNTAX": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_SYNTAX", "xml.parsers.expat.errors.XML_ERROR_TAG_MISMATCH": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_TAG_MISMATCH", "xml.parsers.expat.errors.XML_ERROR_TEXT_DECL": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_TEXT_DECL", "xml.parsers.expat.errors.XML_ERROR_UNBOUND_PREFIX": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_UNBOUND_PREFIX", "xml.parsers.expat.errors.XML_ERROR_UNCLOSED_CDATA_SECTION": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_UNCLOSED_CDATA_SECTION", "xml.parsers.expat.errors.XML_ERROR_UNCLOSED_TOKEN": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_UNCLOSED_TOKEN", "xml.parsers.expat.errors.XML_ERROR_UNDECLARING_PREFIX": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_UNDECLARING_PREFIX", "xml.parsers.expat.errors.XML_ERROR_UNDEFINED_ENTITY": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_UNDEFINED_ENTITY", "xml.parsers.expat.errors.XML_ERROR_UNEXPECTED_STATE": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_UNEXPECTED_STATE", "xml.parsers.expat.errors.XML_ERROR_UNKNOWN_ENCODING": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_UNKNOWN_ENCODING", "xml.parsers.expat.errors.XML_ERROR_XML_DECL": "library/pyexpat.html#xml.parsers.expat.errors.XML_ERROR_XML_DECL", "xml.parsers.expat.ErrorString()": "library/pyexpat.html#xml.parsers.expat.ErrorString", "xml.parsers.expat.ExpatError": "library/pyexpat.html#xml.parsers.expat.ExpatError", "xml.parsers.expat.ExpatError.code": "library/pyexpat.html#xml.parsers.expat.ExpatError.code", "xml.parsers.expat.ExpatError.lineno": "library/pyexpat.html#xml.parsers.expat.ExpatError.lineno", "xml.parsers.expat.ExpatError.offset": "library/pyexpat.html#xml.parsers.expat.ExpatError.offset", "xml.parsers.expat.ParserCreate()": "library/pyexpat.html#xml.parsers.expat.ParserCreate", "xml.parsers.expat.xmlparser.AttlistDeclHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.AttlistDeclHandler", "xml.parsers.expat.xmlparser.buffer_size": "library/pyexpat.html#xml.parsers.expat.xmlparser.buffer_size", "xml.parsers.expat.xmlparser.buffer_text": "library/pyexpat.html#xml.parsers.expat.xmlparser.buffer_text", "xml.parsers.expat.xmlparser.buffer_used": "library/pyexpat.html#xml.parsers.expat.xmlparser.buffer_used", "xml.parsers.expat.xmlparser.CharacterDataHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.CharacterDataHandler", "xml.parsers.expat.xmlparser.CommentHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.CommentHandler", "xml.parsers.expat.xmlparser.CurrentByteIndex": "library/pyexpat.html#xml.parsers.expat.xmlparser.CurrentByteIndex", "xml.parsers.expat.xmlparser.CurrentColumnNumber": "library/pyexpat.html#xml.parsers.expat.xmlparser.CurrentColumnNumber", "xml.parsers.expat.xmlparser.CurrentLineNumber": "library/pyexpat.html#xml.parsers.expat.xmlparser.CurrentLineNumber", "xml.parsers.expat.xmlparser.DefaultHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.DefaultHandler", "xml.parsers.expat.xmlparser.DefaultHandlerExpand()": "library/pyexpat.html#xml.parsers.expat.xmlparser.DefaultHandlerExpand", "xml.parsers.expat.xmlparser.ElementDeclHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.ElementDeclHandler", "xml.parsers.expat.xmlparser.EndCdataSectionHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.EndCdataSectionHandler", "xml.parsers.expat.xmlparser.EndDoctypeDeclHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.EndDoctypeDeclHandler", "xml.parsers.expat.xmlparser.EndElementHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.EndElementHandler", "xml.parsers.expat.xmlparser.EndNamespaceDeclHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.EndNamespaceDeclHandler", "xml.parsers.expat.xmlparser.EntityDeclHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.EntityDeclHandler", "xml.parsers.expat.xmlparser.ErrorByteIndex": "library/pyexpat.html#xml.parsers.expat.xmlparser.ErrorByteIndex", "xml.parsers.expat.xmlparser.ErrorCode": "library/pyexpat.html#xml.parsers.expat.xmlparser.ErrorCode", "xml.parsers.expat.xmlparser.ErrorColumnNumber": "library/pyexpat.html#xml.parsers.expat.xmlparser.ErrorColumnNumber", "xml.parsers.expat.xmlparser.ErrorLineNumber": "library/pyexpat.html#xml.parsers.expat.xmlparser.ErrorLineNumber", "xml.parsers.expat.xmlparser.ExternalEntityParserCreate()": "library/pyexpat.html#xml.parsers.expat.xmlparser.ExternalEntityParserCreate", "xml.parsers.expat.xmlparser.ExternalEntityRefHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.ExternalEntityRefHandler", "xml.parsers.expat.xmlparser.GetBase()": "library/pyexpat.html#xml.parsers.expat.xmlparser.GetBase", "xml.parsers.expat.xmlparser.GetInputContext()": "library/pyexpat.html#xml.parsers.expat.xmlparser.GetInputContext", "xml.parsers.expat.xmlparser.GetReparseDeferralEnabled()": "library/pyexpat.html#xml.parsers.expat.xmlparser.GetReparseDeferralEnabled", "xml.parsers.expat.xmlparser.NotationDeclHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.NotationDeclHandler", "xml.parsers.expat.xmlparser.NotStandaloneHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.NotStandaloneHandler", "xml.parsers.expat.xmlparser.ordered_attributes": "library/pyexpat.html#xml.parsers.expat.xmlparser.ordered_attributes", "xml.parsers.expat.xmlparser.Parse()": "library/pyexpat.html#xml.parsers.expat.xmlparser.Parse", "xml.parsers.expat.xmlparser.ParseFile()": "library/pyexpat.html#xml.parsers.expat.xmlparser.ParseFile", "xml.parsers.expat.xmlparser.ProcessingInstructionHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.ProcessingInstructionHandler", "xml.parsers.expat.xmlparser.SetBase()": "library/pyexpat.html#xml.parsers.expat.xmlparser.SetBase", "xml.parsers.expat.xmlparser.SetParamEntityParsing()": "library/pyexpat.html#xml.parsers.expat.xmlparser.SetParamEntityParsing", "xml.parsers.expat.xmlparser.SetReparseDeferralEnabled()": "library/pyexpat.html#xml.parsers.expat.xmlparser.SetReparseDeferralEnabled", "xml.parsers.expat.xmlparser.specified_attributes": "library/pyexpat.html#xml.parsers.expat.xmlparser.specified_attributes", "xml.parsers.expat.xmlparser.StartCdataSectionHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.StartCdataSectionHandler", "xml.parsers.expat.xmlparser.StartDoctypeDeclHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.StartDoctypeDeclHandler", "xml.parsers.expat.xmlparser.StartElementHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.StartElementHandler", "xml.parsers.expat.xmlparser.StartNamespaceDeclHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.StartNamespaceDeclHandler", "xml.parsers.expat.xmlparser.UnparsedEntityDeclHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.UnparsedEntityDeclHandler", "xml.parsers.expat.xmlparser.UseForeignDTD()": "library/pyexpat.html#xml.parsers.expat.xmlparser.UseForeignDTD", "xml.parsers.expat.xmlparser.XmlDeclHandler()": "library/pyexpat.html#xml.parsers.expat.xmlparser.XmlDeclHandler", "xml.parsers.expat.XMLParserType": "library/pyexpat.html#xml.parsers.expat.XMLParserType", "xml.sax": "library/xml.sax.html", "xml.sax.handler": "library/xml.sax.handler.html", "xml.sax.handler.all_features": "library/xml.sax.handler.html#xml.sax.handler.all_features", "xml.sax.handler.all_properties": "library/xml.sax.handler.html#xml.sax.handler.all_properties", "xml.sax.handler.ContentHandler": "library/xml.sax.handler.html#xml.sax.handler.ContentHandler", "xml.sax.handler.ContentHandler.characters()": "library/xml.sax.handler.html#xml.sax.handler.ContentHandler.characters", "xml.sax.handler.ContentHandler.endDocument()": "library/xml.sax.handler.html#xml.sax.handler.ContentHandler.endDocument", "xml.sax.handler.ContentHandler.endElement()": "library/xml.sax.handler.html#xml.sax.handler.ContentHandler.endElement", "xml.sax.handler.ContentHandler.endElementNS()": "library/xml.sax.handler.html#xml.sax.handler.ContentHandler.endElementNS", "xml.sax.handler.ContentHandler.endPrefixMapping()": "library/xml.sax.handler.html#xml.sax.handler.ContentHandler.endPrefixMapping", "xml.sax.handler.ContentHandler.ignorableWhitespace()": "library/xml.sax.handler.html#xml.sax.handler.ContentHandler.ignorableWhitespace", "xml.sax.handler.ContentHandler.processingInstruction()": "library/xml.sax.handler.html#xml.sax.handler.ContentHandler.processingInstruction", "xml.sax.handler.ContentHandler.setDocumentLocator()": "library/xml.sax.handler.html#xml.sax.handler.ContentHandler.setDocumentLocator", "xml.sax.handler.ContentHandler.skippedEntity()": "library/xml.sax.handler.html#xml.sax.handler.ContentHandler.skippedEntity", "xml.sax.handler.ContentHandler.startDocument()": "library/xml.sax.handler.html#xml.sax.handler.ContentHandler.startDocument", "xml.sax.handler.ContentHandler.startElement()": "library/xml.sax.handler.html#xml.sax.handler.ContentHandler.startElement", "xml.sax.handler.ContentHandler.startElementNS()": "library/xml.sax.handler.html#xml.sax.handler.ContentHandler.startElementNS", "xml.sax.handler.ContentHandler.startPrefixMapping()": "library/xml.sax.handler.html#xml.sax.handler.ContentHandler.startPrefixMapping", "xml.sax.handler.DTDHandler": "library/xml.sax.handler.html#xml.sax.handler.DTDHandler", "xml.sax.handler.DTDHandler.notationDecl()": "library/xml.sax.handler.html#xml.sax.handler.DTDHandler.notationDecl", "xml.sax.handler.DTDHandler.unparsedEntityDecl()": "library/xml.sax.handler.html#xml.sax.handler.DTDHandler.unparsedEntityDecl", "xml.sax.handler.EntityResolver": "library/xml.sax.handler.html#xml.sax.handler.EntityResolver", "xml.sax.handler.EntityResolver.resolveEntity()": "library/xml.sax.handler.html#xml.sax.handler.EntityResolver.resolveEntity", "xml.sax.handler.ErrorHandler": "library/xml.sax.handler.html#xml.sax.handler.ErrorHandler", "xml.sax.handler.ErrorHandler.error()": "library/xml.sax.handler.html#xml.sax.handler.ErrorHandler.error", "xml.sax.handler.ErrorHandler.fatalError()": "library/xml.sax.handler.html#xml.sax.handler.ErrorHandler.fatalError", "xml.sax.handler.ErrorHandler.warning()": "library/xml.sax.handler.html#xml.sax.handler.ErrorHandler.warning", "xml.sax.handler.feature_external_ges": "library/xml.sax.handler.html#xml.sax.handler.feature_external_ges", "xml.sax.handler.feature_external_pes": "library/xml.sax.handler.html#xml.sax.handler.feature_external_pes", "xml.sax.handler.feature_namespace_prefixes": "library/xml.sax.handler.html#xml.sax.handler.feature_namespace_prefixes", "xml.sax.handler.feature_namespaces": "library/xml.sax.handler.html#xml.sax.handler.feature_namespaces", "xml.sax.handler.feature_string_interning": "library/xml.sax.handler.html#xml.sax.handler.feature_string_interning", "xml.sax.handler.feature_validation": "library/xml.sax.handler.html#xml.sax.handler.feature_validation", "xml.sax.handler.LexicalHandler": "library/xml.sax.handler.html#xml.sax.handler.LexicalHandler", "xml.sax.handler.LexicalHandler.comment()": "library/xml.sax.handler.html#xml.sax.handler.LexicalHandler.comment", "xml.sax.handler.LexicalHandler.endCDATA()": "library/xml.sax.handler.html#xml.sax.handler.LexicalHandler.endCDATA", "xml.sax.handler.LexicalHandler.endDTD()": "library/xml.sax.handler.html#xml.sax.handler.LexicalHandler.endDTD", "xml.sax.handler.LexicalHandler.startCDATA()": "library/xml.sax.handler.html#xml.sax.handler.LexicalHandler.startCDATA", "xml.sax.handler.LexicalHandler.startDTD()": "library/xml.sax.handler.html#xml.sax.handler.LexicalHandler.startDTD", "xml.sax.handler.property_declaration_handler": "library/xml.sax.handler.html#xml.sax.handler.property_declaration_handler", "xml.sax.handler.property_dom_node": "library/xml.sax.handler.html#xml.sax.handler.property_dom_node", "xml.sax.handler.property_lexical_handler": "library/xml.sax.handler.html#xml.sax.handler.property_lexical_handler", "xml.sax.handler.property_xml_string": "library/xml.sax.handler.html#xml.sax.handler.property_xml_string", "xml.sax.make_parser()": "library/xml.sax.html#xml.sax.make_parser", "xml.sax.parse()": "library/xml.sax.html#xml.sax.parse", "xml.sax.parseString()": "library/xml.sax.html#xml.sax.parseString", "xml.sax.SAXException": "library/xml.sax.html#xml.sax.SAXException", "xml.sax.SAXException.getException()": "library/xml.sax.html#xml.sax.SAXException.getException", "xml.sax.SAXException.getMessage()": "library/xml.sax.html#xml.sax.SAXException.getMessage", "xml.sax.SAXNotRecognizedException": "library/xml.sax.html#xml.sax.SAXNotRecognizedException", "xml.sax.SAXNotSupportedException": "library/xml.sax.html#xml.sax.SAXNotSupportedException", "xml.sax.SAXParseException": "library/xml.sax.html#xml.sax.SAXParseException", "xml.sax.saxutils": "library/xml.sax.utils.html", "xml.sax.saxutils.escape()": "library/xml.sax.utils.html#xml.sax.saxutils.escape", "xml.sax.saxutils.prepare_input_source()": "library/xml.sax.utils.html#xml.sax.saxutils.prepare_input_source", "xml.sax.saxutils.quoteattr()": "library/xml.sax.utils.html#xml.sax.saxutils.quoteattr", "xml.sax.saxutils.unescape()": "library/xml.sax.utils.html#xml.sax.saxutils.unescape", "xml.sax.saxutils.XMLFilterBase": "library/xml.sax.utils.html#xml.sax.saxutils.XMLFilterBase", "xml.sax.saxutils.XMLGenerator": "library/xml.sax.utils.html#xml.sax.saxutils.XMLGenerator", "xml.sax.xmlreader": "library/xml.sax.reader.html", "xml.sax.xmlreader.Attributes.getLength()": "library/xml.sax.reader.html#xml.sax.xmlreader.Attributes.getLength", "xml.sax.xmlreader.Attributes.getNames()": "library/xml.sax.reader.html#xml.sax.xmlreader.Attributes.getNames", "xml.sax.xmlreader.Attributes.getType()": "library/xml.sax.reader.html#xml.sax.xmlreader.Attributes.getType", "xml.sax.xmlreader.Attributes.getValue()": "library/xml.sax.reader.html#xml.sax.xmlreader.Attributes.getValue", "xml.sax.xmlreader.AttributesImpl": "library/xml.sax.reader.html#xml.sax.xmlreader.AttributesImpl", "xml.sax.xmlreader.AttributesNS.getNameByQName()": "library/xml.sax.reader.html#xml.sax.xmlreader.AttributesNS.getNameByQName", "xml.sax.xmlreader.AttributesNS.getQNameByName()": "library/xml.sax.reader.html#xml.sax.xmlreader.AttributesNS.getQNameByName", "xml.sax.xmlreader.AttributesNS.getQNames()": "library/xml.sax.reader.html#xml.sax.xmlreader.AttributesNS.getQNames", "xml.sax.xmlreader.AttributesNS.getValueByQName()": "library/xml.sax.reader.html#xml.sax.xmlreader.AttributesNS.getValueByQName", "xml.sax.xmlreader.AttributesNSImpl": "library/xml.sax.reader.html#xml.sax.xmlreader.AttributesNSImpl", "xml.sax.xmlreader.IncrementalParser": "library/xml.sax.reader.html#xml.sax.xmlreader.IncrementalParser", "xml.sax.xmlreader.IncrementalParser.close()": "library/xml.sax.reader.html#xml.sax.xmlreader.IncrementalParser.close", "xml.sax.xmlreader.IncrementalParser.feed()": "library/xml.sax.reader.html#xml.sax.xmlreader.IncrementalParser.feed", "xml.sax.xmlreader.IncrementalParser.reset()": "library/xml.sax.reader.html#xml.sax.xmlreader.IncrementalParser.reset", "xml.sax.xmlreader.InputSource": "library/xml.sax.reader.html#xml.sax.xmlreader.InputSource", "xml.sax.xmlreader.InputSource.getByteStream()": "library/xml.sax.reader.html#xml.sax.xmlreader.InputSource.getByteStream", "xml.sax.xmlreader.InputSource.getCharacterStream()": "library/xml.sax.reader.html#xml.sax.xmlreader.InputSource.getCharacterStream", "xml.sax.xmlreader.InputSource.getEncoding()": "library/xml.sax.reader.html#xml.sax.xmlreader.InputSource.getEncoding", "xml.sax.xmlreader.InputSource.getPublicId()": "library/xml.sax.reader.html#xml.sax.xmlreader.InputSource.getPublicId", "xml.sax.xmlreader.InputSource.getSystemId()": "library/xml.sax.reader.html#xml.sax.xmlreader.InputSource.getSystemId", "xml.sax.xmlreader.InputSource.setByteStream()": "library/xml.sax.reader.html#xml.sax.xmlreader.InputSource.setByteStream", "xml.sax.xmlreader.InputSource.setCharacterStream()": "library/xml.sax.reader.html#xml.sax.xmlreader.InputSource.setCharacterStream", "xml.sax.xmlreader.InputSource.setEncoding()": "library/xml.sax.reader.html#xml.sax.xmlreader.InputSource.setEncoding", "xml.sax.xmlreader.InputSource.setPublicId()": "library/xml.sax.reader.html#xml.sax.xmlreader.InputSource.setPublicId", "xml.sax.xmlreader.InputSource.setSystemId()": "library/xml.sax.reader.html#xml.sax.xmlreader.InputSource.setSystemId", "xml.sax.xmlreader.Locator": "library/xml.sax.reader.html#xml.sax.xmlreader.Locator", "xml.sax.xmlreader.Locator.getColumnNumber()": "library/xml.sax.reader.html#xml.sax.xmlreader.Locator.getColumnNumber", "xml.sax.xmlreader.Locator.getLineNumber()": "library/xml.sax.reader.html#xml.sax.xmlreader.Locator.getLineNumber", "xml.sax.xmlreader.Locator.getPublicId()": "library/xml.sax.reader.html#xml.sax.xmlreader.Locator.getPublicId", "xml.sax.xmlreader.Locator.getSystemId()": "library/xml.sax.reader.html#xml.sax.xmlreader.Locator.getSystemId", "xml.sax.xmlreader.XMLReader": "library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader", "xml.sax.xmlreader.XMLReader.getContentHandler()": "library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader.getContentHandler", "xml.sax.xmlreader.XMLReader.getDTDHandler()": "library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader.getDTDHandler", "xml.sax.xmlreader.XMLReader.getEntityResolver()": "library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader.getEntityResolver", "xml.sax.xmlreader.XMLReader.getErrorHandler()": "library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader.getErrorHandler", "xml.sax.xmlreader.XMLReader.getFeature()": "library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader.getFeature", "xml.sax.xmlreader.XMLReader.getProperty()": "library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader.getProperty", "xml.sax.xmlreader.XMLReader.parse()": "library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader.parse", "xml.sax.xmlreader.XMLReader.setContentHandler()": "library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader.setContentHandler", "xml.sax.xmlreader.XMLReader.setDTDHandler()": "library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader.setDTDHandler", "xml.sax.xmlreader.XMLReader.setEntityResolver()": "library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader.setEntityResolver", "xml.sax.xmlreader.XMLReader.setErrorHandler()": "library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader.setErrorHandler", "xml.sax.xmlreader.XMLReader.setFeature()": "library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader.setFeature", "xml.sax.xmlreader.XMLReader.setLocale()": "library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader.setLocale", "xml.sax.xmlreader.XMLReader.setProperty()": "library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader.setProperty", "XMLParser Objects (xml.parsers.expat)": "library/pyexpat.html#xmlparser-objects", "XMLReader Objects (xml.sax.xmlreader)": "library/xml.sax.reader.html#xmlreader-objects", "xmlrpc": "library/xmlrpc.html", "xmlrpc.client": "library/xmlrpc.client.html", "xmlrpc.client.Binary": "library/xmlrpc.client.html#xmlrpc.client.Binary", "xmlrpc.client.Binary.data": "library/xmlrpc.client.html#xmlrpc.client.Binary.data", "xmlrpc.client.Binary.decode()": "library/xmlrpc.client.html#xmlrpc.client.Binary.decode", "xmlrpc.client.Binary.encode()": "library/xmlrpc.client.html#xmlrpc.client.Binary.encode", "xmlrpc.client.DateTime": "library/xmlrpc.client.html#xmlrpc.client.DateTime", "xmlrpc.client.DateTime.decode()": "library/xmlrpc.client.html#xmlrpc.client.DateTime.decode", "xmlrpc.client.DateTime.encode()": "library/xmlrpc.client.html#xmlrpc.client.DateTime.encode", "xmlrpc.client.dumps()": "library/xmlrpc.client.html#xmlrpc.client.dumps", "xmlrpc.client.Fault": "library/xmlrpc.client.html#xmlrpc.client.Fault", "xmlrpc.client.Fault.faultCode": "library/xmlrpc.client.html#xmlrpc.client.Fault.faultCode", "xmlrpc.client.Fault.faultString": "library/xmlrpc.client.html#xmlrpc.client.Fault.faultString", "xmlrpc.client.loads()": "library/xmlrpc.client.html#xmlrpc.client.loads", "xmlrpc.client.MultiCall": "library/xmlrpc.client.html#xmlrpc.client.MultiCall", "xmlrpc.client.ProtocolError": "library/xmlrpc.client.html#xmlrpc.client.ProtocolError", "xmlrpc.client.ProtocolError.errcode": "library/xmlrpc.client.html#xmlrpc.client.ProtocolError.errcode", "xmlrpc.client.ProtocolError.errmsg": "library/xmlrpc.client.html#xmlrpc.client.ProtocolError.errmsg", "xmlrpc.client.ProtocolError.headers": "library/xmlrpc.client.html#xmlrpc.client.ProtocolError.headers", "xmlrpc.client.ProtocolError.url": "library/xmlrpc.client.html#xmlrpc.client.ProtocolError.url", "xmlrpc.client.ServerProxy": "library/xmlrpc.client.html#xmlrpc.client.ServerProxy", "xmlrpc.client.ServerProxy.system.listMethods()": "library/xmlrpc.client.html#xmlrpc.client.ServerProxy.system.listMethods", "xmlrpc.client.ServerProxy.system.methodHelp()": "library/xmlrpc.client.html#xmlrpc.client.ServerProxy.system.methodHelp", "xmlrpc.client.ServerProxy.system.methodSignature()": "library/xmlrpc.client.html#xmlrpc.client.ServerProxy.system.methodSignature", "xmlrpc.server": "library/xmlrpc.server.html", "xmlrpc.server.CGIXMLRPCRequestHandler": "library/xmlrpc.server.html#xmlrpc.server.CGIXMLRPCRequestHandler", "xmlrpc.server.CGIXMLRPCRequestHandler.handle_request()": "library/xmlrpc.server.html#xmlrpc.server.CGIXMLRPCRequestHandler.handle_request", "xmlrpc.server.CGIXMLRPCRequestHandler.register_function()": "library/xmlrpc.server.html#xmlrpc.server.CGIXMLRPCRequestHandler.register_function", "xmlrpc.server.CGIXMLRPCRequestHandler.register_instance()": "library/xmlrpc.server.html#xmlrpc.server.CGIXMLRPCRequestHandler.register_instance", "xmlrpc.server.CGIXMLRPCRequestHandler.register_introspection_functions()": "library/xmlrpc.server.html#xmlrpc.server.CGIXMLRPCRequestHandler.register_introspection_functions", "xmlrpc.server.CGIXMLRPCRequestHandler.register_multicall_functions()": "library/xmlrpc.server.html#xmlrpc.server.CGIXMLRPCRequestHandler.register_multicall_functions", "xmlrpc.server.DocCGIXMLRPCRequestHandler": "library/xmlrpc.server.html#xmlrpc.server.DocCGIXMLRPCRequestHandler", "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_documentation()": "library/xmlrpc.server.html#xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_documentation", "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_name()": "library/xmlrpc.server.html#xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_name", "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_title()": "library/xmlrpc.server.html#xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_title", "xmlrpc.server.DocXMLRPCRequestHandler": "library/xmlrpc.server.html#xmlrpc.server.DocXMLRPCRequestHandler", "xmlrpc.server.DocXMLRPCServer": "library/xmlrpc.server.html#xmlrpc.server.DocXMLRPCServer", "xmlrpc.server.DocXMLRPCServer.set_server_documentation()": "library/xmlrpc.server.html#xmlrpc.server.DocXMLRPCServer.set_server_documentation", "xmlrpc.server.DocXMLRPCServer.set_server_name()": "library/xmlrpc.server.html#xmlrpc.server.DocXMLRPCServer.set_server_name", "xmlrpc.server.DocXMLRPCServer.set_server_title()": "library/xmlrpc.server.html#xmlrpc.server.DocXMLRPCServer.set_server_title", "xmlrpc.server.SimpleXMLRPCRequestHandler": "library/xmlrpc.server.html#xmlrpc.server.SimpleXMLRPCRequestHandler", "xmlrpc.server.SimpleXMLRPCRequestHandler.rpc_paths": "library/xmlrpc.server.html#xmlrpc.server.SimpleXMLRPCRequestHandler.rpc_paths", "xmlrpc.server.SimpleXMLRPCServer": "library/xmlrpc.server.html#xmlrpc.server.SimpleXMLRPCServer", "xmlrpc.server.SimpleXMLRPCServer.register_function()": "library/xmlrpc.server.html#xmlrpc.server.SimpleXMLRPCServer.register_function", "xmlrpc.server.SimpleXMLRPCServer.register_instance()": "library/xmlrpc.server.html#xmlrpc.server.SimpleXMLRPCServer.register_instance", "xmlrpc.server.SimpleXMLRPCServer.register_introspection_functions()": "library/xmlrpc.server.html#xmlrpc.server.SimpleXMLRPCServer.register_introspection_functions", "xmlrpc.server.SimpleXMLRPCServer.register_multicall_functions()": "library/xmlrpc.server.html#xmlrpc.server.SimpleXMLRPCServer.register_multicall_functions", "XPath support (xml.etree.ElementTree)": "library/xml.etree.elementtree.html#xpath-support", "yield (statement)": "reference/simple_stmts.html#index-26", "Zen of Python": "glossary.html#term-Zen-of-Python", "ZeroDivisionError": "library/exceptions.html#ZeroDivisionError", "zip()": "library/functions.html#zip", "zipapp": "library/zipapp.html", "zipapp.create_archive()": "library/zipapp.html#zipapp.create_archive", "zipapp.get_interpreter()": "library/zipapp.html#zipapp.get_interpreter", "zipfile": "library/zipfile.html", "ZipFile Objects (zipfile)": "library/zipfile.html#zipfile-objects", "zipfile.BadZipFile": "library/zipfile.html#zipfile.BadZipFile", "zipfile.BadZipfile": "library/zipfile.html#zipfile.BadZipfile", "zipfile.is_zipfile()": "library/zipfile.html#zipfile.is_zipfile", "zipfile.LargeZipFile": "library/zipfile.html#zipfile.LargeZipFile", "zipfile.Path": "library/zipfile.html#zipfile.Path", "zipfile.Path.exists()": "library/zipfile.html#zipfile.Path.exists", "zipfile.Path.is_dir()": "library/zipfile.html#zipfile.Path.is_dir", "zipfile.Path.is_file()": "library/zipfile.html#zipfile.Path.is_file", "zipfile.Path.is_symlink()": "library/zipfile.html#zipfile.Path.is_symlink", "zipfile.Path.iterdir()": "library/zipfile.html#zipfile.Path.iterdir", "zipfile.Path.joinpath()": "library/zipfile.html#zipfile.Path.joinpath", "zipfile.Path.name": "library/zipfile.html#zipfile.Path.name", "zipfile.Path.open()": "library/zipfile.html#zipfile.Path.open", "zipfile.Path.read_bytes()": "library/zipfile.html#zipfile.Path.read_bytes", "zipfile.Path.read_text()": "library/zipfile.html#zipfile.Path.read_text", "zipfile.Path.stem": "library/zipfile.html#zipfile.Path.stem", "zipfile.Path.suffix": "library/zipfile.html#zipfile.Path.suffix", "zipfile.Path.suffixes": "library/zipfile.html#zipfile.Path.suffixes", "zipfile.PyZipFile": "library/zipfile.html#zipfile.PyZipFile", "zipfile.PyZipFile.writepy()": "library/zipfile.html#zipfile.PyZipFile.writepy", "zipfile.ZIP_BZIP2": "library/zipfile.html#zipfile.ZIP_BZIP2", "zipfile.ZIP_DEFLATED": "library/zipfile.html#zipfile.ZIP_DEFLATED", "zipfile.ZIP_LZMA": "library/zipfile.html#zipfile.ZIP_LZMA", "zipfile.ZIP_STORED": "library/zipfile.html#zipfile.ZIP_STORED", "zipfile.ZipFile": "library/zipfile.html#zipfile.ZipFile", "zipfile.ZipFile.close()": "library/zipfile.html#zipfile.ZipFile.close", "zipfile.ZipFile.comment": "library/zipfile.html#zipfile.ZipFile.comment", "zipfile.ZipFile.debug": "library/zipfile.html#zipfile.ZipFile.debug", "zipfile.ZipFile.extract()": "library/zipfile.html#zipfile.ZipFile.extract", "zipfile.ZipFile.extractall()": "library/zipfile.html#zipfile.ZipFile.extractall", "zipfile.ZipFile.filename": "library/zipfile.html#zipfile.ZipFile.filename", "zipfile.ZipFile.getinfo()": "library/zipfile.html#zipfile.ZipFile.getinfo", "zipfile.ZipFile.infolist()": "library/zipfile.html#zipfile.ZipFile.infolist", "zipfile.ZipFile.mkdir()": "library/zipfile.html#zipfile.ZipFile.mkdir", "zipfile.ZipFile.namelist()": "library/zipfile.html#zipfile.ZipFile.namelist", "zipfile.ZipFile.open()": "library/zipfile.html#zipfile.ZipFile.open", "zipfile.ZipFile.printdir()": "library/zipfile.html#zipfile.ZipFile.printdir", "zipfile.ZipFile.read()": "library/zipfile.html#zipfile.ZipFile.read", "zipfile.ZipFile.setpassword()": "library/zipfile.html#zipfile.ZipFile.setpassword", "zipfile.ZipFile.testzip()": "library/zipfile.html#zipfile.ZipFile.testzip", "zipfile.ZipFile.write()": "library/zipfile.html#zipfile.ZipFile.write", "zipfile.ZipFile.writestr()": "library/zipfile.html#zipfile.ZipFile.writestr", "zipfile.ZipInfo": "library/zipfile.html#zipfile.ZipInfo", "zipfile.ZipInfo.comment": "library/zipfile.html#zipfile.ZipInfo.comment", "zipfile.ZipInfo.compress_size": "library/zipfile.html#zipfile.ZipInfo.compress_size", "zipfile.ZipInfo.compress_type": "library/zipfile.html#zipfile.ZipInfo.compress_type", "zipfile.ZipInfo.CRC": "library/zipfile.html#zipfile.ZipInfo.CRC", "zipfile.ZipInfo.create_system": "library/zipfile.html#zipfile.ZipInfo.create_system", "zipfile.ZipInfo.create_version": "library/zipfile.html#zipfile.ZipInfo.create_version", "zipfile.ZipInfo.date_time": "library/zipfile.html#zipfile.ZipInfo.date_time", "zipfile.ZipInfo.external_attr": "library/zipfile.html#zipfile.ZipInfo.external_attr", "zipfile.ZipInfo.extra": "library/zipfile.html#zipfile.ZipInfo.extra", "zipfile.ZipInfo.extract_version": "library/zipfile.html#zipfile.ZipInfo.extract_version", "zipfile.ZipInfo.file_size": "library/zipfile.html#zipfile.ZipInfo.file_size", "zipfile.ZipInfo.filename": "library/zipfile.html#zipfile.ZipInfo.filename", "zipfile.ZipInfo.flag_bits": "library/zipfile.html#zipfile.ZipInfo.flag_bits", "zipfile.ZipInfo.from_file()": "library/zipfile.html#zipfile.ZipInfo.from_file", "zipfile.ZipInfo.header_offset": "library/zipfile.html#zipfile.ZipInfo.header_offset", "zipfile.ZipInfo.internal_attr": "library/zipfile.html#zipfile.ZipInfo.internal_attr", "zipfile.ZipInfo.is_dir()": "library/zipfile.html#zipfile.ZipInfo.is_dir", "zipfile.ZipInfo.reserved": "library/zipfile.html#zipfile.ZipInfo.reserved", "zipfile.ZipInfo.volume": "library/zipfile.html#zipfile.ZipInfo.volume", "zipimport": "library/zipimport.html", "zipimport.zipimporter": "library/zipimport.html#zipimport.zipimporter", "zipimport.zipimporter.archive": "library/zipimport.html#zipimport.zipimporter.archive", "zipimport.zipimporter.create_module()": "library/zipimport.html#zipimport.zipimporter.create_module", "zipimport.zipimporter.exec_module()": "library/zipimport.html#zipimport.zipimporter.exec_module", "zipimport.zipimporter.find_spec()": "library/zipimport.html#zipimport.zipimporter.find_spec", "zipimport.zipimporter.get_code()": "library/zipimport.html#zipimport.zipimporter.get_code", "zipimport.zipimporter.get_data()": "library/zipimport.html#zipimport.zipimporter.get_data", "zipimport.zipimporter.get_filename()": "library/zipimport.html#zipimport.zipimporter.get_filename", "zipimport.zipimporter.get_source()": "library/zipimport.html#zipimport.zipimporter.get_source", "zipimport.zipimporter.invalidate_caches()": "library/zipimport.html#zipimport.zipimporter.invalidate_caches", "zipimport.zipimporter.is_package()": "library/zipimport.html#zipimport.zipimporter.is_package", "zipimport.zipimporter.load_module()": "library/zipimport.html#zipimport.zipimporter.load_module", "zipimport.zipimporter.prefix": "library/zipimport.html#zipimport.zipimporter.prefix", "zipimport.ZipImportError": "library/zipimport.html#zipimport.ZipImportError", "zipimporter Objects (zipimport)": "library/zipimport.html#zipimporter-objects", "ZipInfo Objects (zipfile)": "library/zipfile.html#zipinfo-objects", "zlib": "library/zlib.html", "zlib.adler32()": "library/zlib.html#zlib.adler32", "zlib.compress()": "library/zlib.html#zlib.compress", "zlib.Compress.compress()": "library/zlib.html#zlib.Compress.compress", "zlib.Compress.copy()": "library/zlib.html#zlib.Compress.copy", "zlib.Compress.flush()": "library/zlib.html#zlib.Compress.flush", "zlib.compressobj()": "library/zlib.html#zlib.compressobj", "zlib.crc32()": "library/zlib.html#zlib.crc32", "zlib.decompress()": "library/zlib.html#zlib.decompress", "zlib.Decompress.copy()": "library/zlib.html#zlib.Decompress.copy", "zlib.Decompress.decompress()": "library/zlib.html#zlib.Decompress.decompress", "zlib.Decompress.eof": "library/zlib.html#zlib.Decompress.eof", "zlib.Decompress.flush()": "library/zlib.html#zlib.Decompress.flush", "zlib.Decompress.unconsumed_tail": "library/zlib.html#zlib.Decompress.unconsumed_tail", "zlib.Decompress.unused_data": "library/zlib.html#zlib.Decompress.unused_data", "zlib.decompressobj()": "library/zlib.html#zlib.decompressobj", "zlib.error": "library/zlib.html#zlib.error", "zlib.ZLIB_RUNTIME_VERSION": "library/zlib.html#zlib.ZLIB_RUNTIME_VERSION", "zlib.ZLIB_VERSION": "library/zlib.html#zlib.ZLIB_VERSION", "zoneinfo": "library/zoneinfo.html", "zoneinfo.available_timezones()": "library/zoneinfo.html#zoneinfo.available_timezones", "zoneinfo.InvalidTZPathWarning": "library/zoneinfo.html#zoneinfo.InvalidTZPathWarning", "zoneinfo.reset_tzpath()": "library/zoneinfo.html#zoneinfo.reset_tzpath", "zoneinfo.TZPATH": "library/zoneinfo.html#zoneinfo.TZPATH", "zoneinfo.ZoneInfo": "library/zoneinfo.html#zoneinfo.ZoneInfo", "zoneinfo.ZoneInfo.clear_cache()": "library/zoneinfo.html#zoneinfo.ZoneInfo.clear_cache", "zoneinfo.ZoneInfo.from_file()": "library/zoneinfo.html#zoneinfo.ZoneInfo.from_file", "zoneinfo.ZoneInfo.key": "library/zoneinfo.html#zoneinfo.ZoneInfo.key", "zoneinfo.ZoneInfo.no_cache()": "library/zoneinfo.html#zoneinfo.ZoneInfo.no_cache", "zoneinfo.ZoneInfoNotFoundError": "library/zoneinfo.html#zoneinfo.ZoneInfoNotFoundError", "{} (curly brackets) (dictionary expression)": "reference/expressions.html#index-17", "{} (curly brackets) (in formatted string literal)": "reference/lexical_analysis.html#index-25", "{} (curly brackets) (in regular expressions)": "library/re.html#index-8", "{} (curly brackets) (in string formatting)": "library/string.html#index-2", "{} (curly brackets) (set expression)": "reference/expressions.html#index-16", "| (vertical bar) (in regular expressions)": "library/re.html#index-14", "| (vertical bar) (operator)": "library/stdtypes.html#index-16", "|= (augmented assignment)": "reference/simple_stmts.html#index-14", "~ (tilde) (home directory expansion)": "library/os.path.html#index-1", "~ (tilde) (operator)": "library/stdtypes.html#index-16", "\u201cWhy is Python Installed on my Computer?\u201d FAQ": "faq/installed.html"}