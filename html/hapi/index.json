{"server([options])": "index.html#-serveroptions", "Server options": "index.html#-server-options", "server.options.address": "index.html#-serveroptionsaddress", "server.options.app": "index.html#-serveroptionsapp", "server.options.autoListen": "index.html#-serveroptionsautolisten", "server.options.cache": "index.html#-serveroptionscache", "server.options.compression": "index.html#-serveroptionscompression", "server.options.debug": "index.html#-serveroptionsdebug", "server.options.host": "index.html#-serveroptionshost", "server.options.info.remote": "index.html#-serveroptionsinforemote", "server.options.listener": "index.html#-serveroptionslistener", "server.options.load": "index.html#-serveroptionsload", "server.options.mime": "index.html#-serveroptionsmime", "server.options.operations": "index.html#-serveroptionsoperations", "server.options.plugins": "index.html#-serveroptionsplugins", "server.options.port": "index.html#-serveroptionsport", "server.options.query": "index.html#-serveroptionsquery", "server.options.router": "index.html#-serveroptionsrouter", "server.options.routes": "index.html#-serveroptionsroutes", "server.options.state": "index.html#-serveroptionsstate", "server.options.tls": "index.html#-serveroptionstls", "server.options.uri": "index.html#-serveroptionsuri", "Server properties": "index.html#server-properties", "server.app": "index.html#-serverapp", "server.auth.api": "index.html#-serverauthapi", "server.auth.settings.default": "index.html#-serverauthsettingsdefault", "server.decorations": "index.html#-serverdecorations", "server.events": "index.html#-serverevents", "server.info": "index.html#-serverinfo", "server.listener": "index.html#-serverlistener", "server.load": "index.html#-serverload", "server.methods": "index.html#-servermethods", "server.mime": "index.html#-servermime", "server.plugins": "index.html#-serverplugins", "server.realm": "index.html#-serverrealm", "server.registrations": "index.html#-serverregistrations", "server.settings": "index.html#-serversettings", "server.states": "index.html#-serverstates", "server.states.settings": "index.html#-serverstatessettings", "server.states.cookies": "index.html#-serverstatescookies", "server.states.names": "index.html#-serverstatesnames", "server.type": "index.html#-servertype", "server.version": "index.html#-serverversion", "server.auth.default(options)": "index.html#-serverauthdefaultoptions", "server.auth.scheme(name, scheme)": "index.html#-serverauthschemename-scheme", "Authentication scheme": "index.html#authentication-scheme", "server.auth.strategy(name, scheme, [options])": "index.html#-serverauthstrategyname-scheme-options", "server.auth.test(strategy, request)": "index.html#-await-serverauthteststrategy-request", "server.auth.verify(request)": "index.html#-await-serverauthverifyrequest", "server.bind(context)": "index.html#-serverbindcontext", "server.cache(options)": "index.html#-servercacheoptions", "server.cache.provision(options)": "index.html#-await-servercacheprovisionoptions", "server.control(server)": "index.html#-servercontrolserver", "server.decoder(encoding, decoder)": "index.html#-serverdecoderencoding-decoder", "server.decorate(type, property, method, [options])": "index.html#-serverdecoratetype-property-method-options", "server.dependency(dependencies, [after])": "index.html#-serverdependencydependencies-after", "server.encoder(encoding, encoder)": "index.html#-serverencoderencoding-encoder", "server.event(events)": "index.html#-servereventevents", "server.events.emit(criteria, data)": "index.html#-servereventsemitcriteria-data", "server.events.on(criteria, listener, context)": "index.html#-servereventsoncriteria-listener-context", "server.events.once(criteria, listener, context)": "index.html#-servereventsoncecriteria-listener-context", "server.events.once(criteria)": "index.html#-await-servereventsoncecriteria", "server.events.gauge(criteria, data)": "index.html#-await-servereventsgaugecriteria-data", "server.expose(key, value, [options])": "index.html#-serverexposekey-value-options", "server.expose(obj)": "index.html#-serverexposeobj", "server.ext(events)": "index.html#-serverextevents", "server.ext(event, [method, [options]])": "index.html#-serverextevent-method-options", "server.initialize()": "index.html#-await-serverinitialize", "server.inject(options)": "index.html#-await-serverinjectoptions", "server.log(tags, [data, [timestamp]])": "index.html#-serverlogtags-data-timestamp", "server.lookup(id)": "index.html#-serverlookupid", "server.match(method, path, [host])": "index.html#-servermatchmethod-path-host", "server.method(name, method, [options])": "index.html#-servermethodname-method-options", "server.method(methods)": "index.html#-servermethodmethods", "server.path(relativeTo)": "index.html#-serverpathrelativeto", "server.register(plugins, [options])": "index.html#-await-serverregisterplugins-options", "server.route(route)": "index.html#-serverrouteroute", "Path parameters": "index.html#path-parameters", "Path matching order": "index.html#path-matching-order", "Catch all route": "index.html#catch-all-route", "server.rules(processor, [options])": "index.html#-serverrulesprocessor-options", "server.start()": "index.html#-await-serverstart", "server.state(name, [options])": "index.html#-serverstatename-options", "server.states.add(name, [options])": "index.html#-serverstatesaddname-options", "server.states.format(cookies)": "index.html#-await-serverstatesformatcookies", "server.states.parse(header)": "index.html#-await-serverstatesparseheader", "server.stop([options])": "index.html#-await-serverstopoptions", "server.table([host])": "index.html#-servertablehost", "server.validator(validator)": "index.html#-servervalidatorvalidator", "route.options.app": "index.html#-routeoptionsapp", "route.options.auth": "index.html#-routeoptionsauth", "route.options.auth.access": "index.html#-routeoptionsauthaccess", "route.options.auth.access.scope": "index.html#-routeoptionsauthaccessscope", "route.options.auth.access.entity": "index.html#-routeoptionsauthaccessentity", "route.options.auth.mode": "index.html#-routeoptionsauthmode", "route.options.auth.payload": "index.html#-routeoptionsauthpayload", "route.options.auth.strategies": "index.html#-routeoptionsauthstrategies", "route.options.auth.strategy": "index.html#-routeoptionsauthstrategy", "route.options.bind": "index.html#-routeoptionsbind", "route.options.cache": "index.html#-routeoptionscache", "route.options.compression": "index.html#-routeoptionscompression", "route.options.cors": "index.html#-routeoptionscors", "route.options.description": "index.html#-routeoptionsdescription", "route.options.ext": "index.html#-routeoptionsext", "route.options.files": "index.html#-routeoptionsfiles", "route.options.handler": "index.html#-routeoptionshandler", "route.options.id": "index.html#-routeoptionsid", "route.options.isInternal": "index.html#-routeoptionsisinternal", "route.options.json": "index.html#-routeoptionsjson", "route.options.log": "index.html#-routeoptionslog", "route.options.notes": "index.html#-routeoptionsnotes", "route.options.payload": "index.html#-routeoptionspayload", "route.options.payload.allow": "index.html#-routeoptionspayloadallow", "route.options.payload.compression": "index.html#-routeoptionspayloadcompression", "route.options.payload.defaultContentType": "index.html#-routeoptionspayloaddefaultcontenttype", "route.options.payload.failAction": "index.html#-routeoptionspayloadfailaction", "route.options.payload.maxBytes": "index.html#-routeoptionspayloadmaxbytes", "route.options.payload.maxParts": "index.html#-routeoptionspayloadmaxparts", "route.options.payload.multipart": "index.html#-routeoptionspayloadmultipart", "route.options.payload.output": "index.html#-routeoptionspayloadoutput", "route.options.payload.override": "index.html#-routeoptionspayloadoverride", "route.options.payload.parse": "index.html#-routeoptionspayloadparse", "route.options.payload.protoAction": "index.html#-routeoptionspayloadprotoaction", "route.options.payload.timeout": "index.html#-routeoptionspayloadtimeout", "route.options.payload.uploads": "index.html#-routeoptionspayloaduploads", "route.options.plugins": "index.html#-routeoptionsplugins", "route.options.pre": "index.html#-routeoptionspre", "route.options.response": "index.html#-routeoptionsresponse", "route.options.response.disconnectStatusCode": "index.html#-routeoptionsresponsedisconnectstatuscode", "route.options.response.emptyStatusCode": "index.html#-routeoptionsresponseemptystatuscode", "route.options.response.failAction": "index.html#-routeoptionsresponsefailaction", "route.options.response.modify": "index.html#-routeoptionsresponsemodify", "route.options.response.options": "index.html#-routeoptionsresponseoptions", "route.options.response.ranges": "index.html#-routeoptionsresponseranges", "route.options.response.sample": "index.html#-routeoptionsresponsesample", "route.options.response.schema": "index.html#-routeoptionsresponseschema", "route.options.response.status": "index.html#-routeoptionsresponsestatus", "route.options.rules": "index.html#-routeoptionsrules", "route.options.security": "index.html#-routeoptionssecurity", "route.options.state": "index.html#-routeoptionsstate", "route.options.tags": "index.html#-routeoptionstags", "route.options.timeout": "index.html#-routeoptionstimeout", "route.options.timeout.server": "index.html#-routeoptionstimeoutserver", "route.options.timeout.socket": "index.html#-routeoptionstimeoutsocket", "route.options.validate": "index.html#-routeoptionsvalidate", "route.options.validate.errorFields": "index.html#-routeoptionsvalidateerrorfields", "route.options.validate.failAction": "index.html#-routeoptionsvalidatefailaction", "route.options.validate.headers": "index.html#-routeoptionsvalidateheaders", "route.options.validate.options": "index.html#-routeoptionsvalidateoptions", "route.options.validate.params": "index.html#-routeoptionsvalidateparams", "route.options.validate.payload": "index.html#-routeoptionsvalidatepayload", "route.options.validate.query": "index.html#-routeoptionsvalidatequery", "route.options.validate.state": "index.html#-routeoptionsvalidatestate", "route.options.validate.validator": "index.html#-routeoptionsvalidatevalidator", "Lifecycle methods": "index.html#lifecycle-methods", "Lifecycle workflow": "index.html#lifecycle-workflow", "Takeover response": "index.html#takeover-response", "failAction configuration": "index.html#-failaction-configuration", "Errors": "index.html#errors", "Response Toolkit": "index.html#response-toolkit", "Toolkit properties": "index.html#toolkit-properties", "h.authenticated(data)": "index.html#-hauthenticateddata", "h.entity(options)": "index.html#-hentityoptions", "h.redirect(uri)": "index.html#-hredirecturi", "h.response([value])": "index.html#-hresponsevalue", "h.state(name, value, [options])": "index.html#-hstatename-value-options", "h.unauthenticated(error, [data])": "index.html#-hunauthenticatederror-data", "h.unstate(name, [options])": "index.html#-hunstatename-options", "Response object": "index.html#response-object", "Response properties": "index.html#response-properties", "response.bytes(length)": "index.html#-responsebyteslength", "response.charset(charset)": "index.html#-responsecharsetcharset", "response.code(statusCode)": "index.html#-responsecodestatuscode", "response.message(httpMessage)": "index.html#-responsemessagehttpmessage", "response.compressed(encoding)": "index.html#-responsecompressedencoding", "response.created(uri)": "index.html#-responsecreateduri", "response.encoding(encoding)": "index.html#-responseencodingencoding", "response.etag(tag, options)": "index.html#-responseetagtag-options", "response.header(name, value, options)": "index.html#-responseheadername-value-options", "response.location(uri)": "index.html#-responselocationuri", "response.redirect(uri)": "index.html#-responseredirecturi", "response.replacer(method)": "index.html#-responsereplacermethod", "response.spaces(count)": "index.html#-responsespacescount", "response.state(name, value, [options])": "index.html#-responsestatename-value-options", "response.suffix(suffix)": "index.html#-responsesuffixsuffix", "response.ttl(msec)": "index.html#-responsettlmsec", "response.type(mimeType)": "index.html#-responsetypemimetype", "response.unstate(name, [options])": "index.html#-responseunstatename-options", "response.vary(header)": "index.html#-responsevaryheader", "response.takeover()": "index.html#-responsetakeover", "response.temporary(isTemporary)": "index.html#-responsetemporaryistemporary", "response.permanent(isPermanent)": "index.html#-responsepermanentispermanent", "response.rewritable(isRewritable)": "index.html#-responserewritableisrewritable", "Request properties": "index.html#request-properties", "request.app": "index.html#-requestapp", "request.auth": "index.html#-requestauth", "request.events": "index.html#-requestevents", "request.headers": "index.html#-requestheaders", "request.info": "index.html#-requestinfo", "request.isInjected": "index.html#-requestisinjected", "request.logs": "index.html#-requestlogs", "request.method": "index.html#-requestmethod", "request.mime": "index.html#-requestmime", "request.orig": "index.html#-requestorig", "request.params": "index.html#-requestparams", "request.paramsArray": "index.html#-requestparamsarray", "request.path": "index.html#-requestpath", "request.payload": "index.html#-requestpayload", "request.plugins": "index.html#-requestplugins", "request.pre": "index.html#-requestpre", "request.response": "index.html#-requestresponse", "request.preResponses": "index.html#-requestpreresponses", "request.query": "index.html#-requestquery", "request.raw": "index.html#-requestraw", "request.route": "index.html#-requestroute", "request.server": "index.html#-requestserver", "request.state": "index.html#-requeststate", "request.url": "index.html#-requesturl", "request.generateResponse(source, [options])": "index.html#-requestgenerateresponsesource-options", "request.active()": "index.html#-requestactive", "request.log(tags, [data])": "index.html#-requestlogtags-data", "request.route.auth.access(request)": "index.html#-requestrouteauthaccessrequest", "request.setMethod(method)": "index.html#-requestsetmethodmethod", "request.setUrl(url, [stripTrailingSlash]": "index.html#-requestseturlurl-striptrailingslash"}