{"1.1. Linear Models": "modules/linear_model.html", "1.2. Linear and Quadratic Discriminant Analysis": "modules/lda_qda.html", "1.3. Kernel ridge regression": "modules/kernel_ridge.html", "1.4. Support Vector Machines": "modules/svm.html", "1.5. Stochastic Gradient Descent": "modules/sgd.html", "1.6. Nearest Neighbors": "modules/neighbors.html", "1.7. Gaussian Processes": "modules/gaussian_process.html", "1.8. Cross decomposition": "modules/cross_decomposition.html", "1.9. Naive Bayes": "modules/naive_bayes.html", "1.10. Decision Trees": "modules/tree.html", "1.11. Ensemble methods": "modules/ensemble.html", "1.12. Multiclass and multioutput algorithms": "modules/multiclass.html", "1.13. Feature selection": "modules/feature_selection.html", "1.14. Semi-supervised learning": "modules/semi_supervised.html", "1.15. Isotonic regression": "modules/isotonic.html", "1.16. Probability calibration": "modules/calibration.html", "1.17. Neural network models": "modules/neural_networks_supervised.html", "2.1. Gaussian mixture models": "modules/mixture.html", "2.2. Manifold learning": "modules/manifold.html", "2.3. Clustering": "modules/clustering.html", "2.4. Biclustering": "modules/biclustering.html", "2.5. Decomposing signals in components": "modules/decomposition.html", "2.6. Covariance estimation": "modules/covariance.html", "2.7. Novelty and Outlier Detection": "modules/outlier_detection.html", "2.8. Density Estimation": "modules/density.html", "2.9. Neural network models": "modules/neural_networks_unsupervised.html", "3.1. Cross-validation": "modules/cross_validation.html", "3.2. Tuning the hyper-parameters of an estimator": "modules/grid_search.html", "3.3. Metrics and scoring": "modules/model_evaluation.html", "3.4. Validation curves": "modules/learning_curve.html", "4.1. Partial Dependence and Individual Conditional Expectation plots": "modules/partial_dependence.html", "4.2. Permutation feature importance": "modules/permutation_importance.html", "6.1. Pipelines and composite estimators": "modules/compose.html", "6.2. Feature extraction": "modules/feature_extraction.html", "6.3. Preprocessing data": "modules/preprocessing.html", "6.4. Imputation of missing values": "modules/impute.html", "6.5. Unsupervised dimensionality reduction": "modules/unsupervised_reduction.html", "6.6. Random Projection": "modules/random_projection.html", "6.7. Kernel Approximation": "modules/kernel_approximation.html", "6.8. Pairwise metrics, Affinities and Kernels": "modules/metrics.html", "6.9. Transforming the prediction target": "modules/preprocessing_targets.html", "7. Dataset loading utilities": "datasets.html", "API Reference": "modules/classes.html", "base.BaseEstimator": "modules/generated/sklearn.base.baseestimator.html", "base.BaseEstimator.get_params()": "modules/generated/sklearn.base.baseestimator.html#sklearn.base.BaseEstimator.get_params", "base.BaseEstimator.set_params()": "modules/generated/sklearn.base.baseestimator.html#sklearn.base.BaseEstimator.set_params", "base.BiclusterMixin": "modules/generated/sklearn.base.biclustermixin.html", "base.BiclusterMixin.get_indices()": "modules/generated/sklearn.base.biclustermixin.html#sklearn.base.BiclusterMixin.get_indices", "base.BiclusterMixin.get_shape()": "modules/generated/sklearn.base.biclustermixin.html#sklearn.base.BiclusterMixin.get_shape", "base.BiclusterMixin.get_submatrix()": "modules/generated/sklearn.base.biclustermixin.html#sklearn.base.BiclusterMixin.get_submatrix", "base.ClassifierMixin": "modules/generated/sklearn.base.classifiermixin.html#sklearn.base.ClassifierMixin", "base.ClassifierMixin.score()": "modules/generated/sklearn.base.classifiermixin.html#sklearn.base.ClassifierMixin.score", "base.clone()": "modules/generated/sklearn.base.clone.html#sklearn.base.clone", "base.ClusterMixin": "modules/generated/sklearn.base.clustermixin.html#sklearn.base.ClusterMixin", "base.ClusterMixin.fit_predict()": "modules/generated/sklearn.base.clustermixin.html#sklearn.base.ClusterMixin.fit_predict", "base.DensityMixin": "modules/generated/sklearn.base.densitymixin.html", "base.DensityMixin.score()": "modules/generated/sklearn.base.densitymixin.html#sklearn.base.DensityMixin.score", "base.is_classifier()": "modules/generated/sklearn.base.is_classifier.html#sklearn.base.is_classifier", "base.is_regressor()": "modules/generated/sklearn.base.is_regressor.html#sklearn.base.is_regressor", "base.RegressorMixin": "modules/generated/sklearn.base.regressormixin.html#sklearn.base.RegressorMixin", "base.RegressorMixin.score()": "modules/generated/sklearn.base.regressormixin.html#sklearn.base.RegressorMixin.score", "base.TransformerMixin": "modules/generated/sklearn.base.transformermixin.html#sklearn.base.TransformerMixin", "base.TransformerMixin.fit_transform()": "modules/generated/sklearn.base.transformermixin.html#sklearn.base.TransformerMixin.fit_transform", "calibration.CalibratedClassifierCV": "modules/generated/sklearn.calibration.calibratedclassifiercv.html#sklearn.calibration.CalibratedClassifierCV", "calibration.CalibratedClassifierCV()": "modules/generated/sklearn.calibration.calibratedclassifiercv.html", "calibration.CalibratedClassifierCV.fit()": "modules/generated/sklearn.calibration.calibratedclassifiercv.html#sklearn.calibration.CalibratedClassifierCV.fit", "calibration.CalibratedClassifierCV.get_params()": "modules/generated/sklearn.calibration.calibratedclassifiercv.html#sklearn.calibration.CalibratedClassifierCV.get_params", "calibration.CalibratedClassifierCV.predict()": "modules/generated/sklearn.calibration.calibratedclassifiercv.html#sklearn.calibration.CalibratedClassifierCV.predict", "calibration.CalibratedClassifierCV.predict_proba()": "modules/generated/sklearn.calibration.calibratedclassifiercv.html#sklearn.calibration.CalibratedClassifierCV.predict_proba", "calibration.CalibratedClassifierCV.score()": "modules/generated/sklearn.calibration.calibratedclassifiercv.html#sklearn.calibration.CalibratedClassifierCV.score", "calibration.CalibratedClassifierCV.set_params()": "modules/generated/sklearn.calibration.calibratedclassifiercv.html#sklearn.calibration.CalibratedClassifierCV.set_params", "calibration.calibration_curve()": "modules/generated/sklearn.calibration.calibration_curve.html#sklearn.calibration.calibration_curve", "calibration.CalibrationDisplay": "modules/generated/sklearn.calibration.calibrationdisplay.html#sklearn.calibration.CalibrationDisplay", "calibration.CalibrationDisplay()": "modules/generated/sklearn.calibration.calibrationdisplay.html", "calibration.CalibrationDisplay.from_estimator()": "modules/generated/sklearn.calibration.calibrationdisplay.html#sklearn.calibration.CalibrationDisplay.from_estimator", "calibration.CalibrationDisplay.from_predictions()": "modules/generated/sklearn.calibration.calibrationdisplay.html#sklearn.calibration.CalibrationDisplay.from_predictions", "calibration.CalibrationDisplay.plot()": "modules/generated/sklearn.calibration.calibrationdisplay.html#sklearn.calibration.CalibrationDisplay.plot", "cluster.affinity_propagation()": "modules/generated/sklearn.cluster.affinity_propagation.html#sklearn.cluster.affinity_propagation", "cluster.AffinityPropagation": "modules/generated/sklearn.cluster.affinitypropagation.html#sklearn.cluster.AffinityPropagation", "cluster.AffinityPropagation()": "modules/generated/sklearn.cluster.affinitypropagation.html", "cluster.AffinityPropagation.fit()": "modules/generated/sklearn.cluster.affinitypropagation.html#sklearn.cluster.AffinityPropagation.fit", "cluster.AffinityPropagation.fit_predict()": "modules/generated/sklearn.cluster.affinitypropagation.html#sklearn.cluster.AffinityPropagation.fit_predict", "cluster.AffinityPropagation.get_params()": "modules/generated/sklearn.cluster.affinitypropagation.html#sklearn.cluster.AffinityPropagation.get_params", "cluster.AffinityPropagation.predict()": "modules/generated/sklearn.cluster.affinitypropagation.html#sklearn.cluster.AffinityPropagation.predict", "cluster.AffinityPropagation.set_params()": "modules/generated/sklearn.cluster.affinitypropagation.html#sklearn.cluster.AffinityPropagation.set_params", "cluster.AgglomerativeClustering": "modules/generated/sklearn.cluster.agglomerativeclustering.html#sklearn.cluster.AgglomerativeClustering", "cluster.AgglomerativeClustering()": "modules/generated/sklearn.cluster.agglomerativeclustering.html", "cluster.AgglomerativeClustering.fit()": "modules/generated/sklearn.cluster.agglomerativeclustering.html#sklearn.cluster.AgglomerativeClustering.fit", "cluster.AgglomerativeClustering.fit_predict()": "modules/generated/sklearn.cluster.agglomerativeclustering.html#sklearn.cluster.AgglomerativeClustering.fit_predict", "cluster.AgglomerativeClustering.get_params()": "modules/generated/sklearn.cluster.agglomerativeclustering.html#sklearn.cluster.AgglomerativeClustering.get_params", "cluster.AgglomerativeClustering.set_params()": "modules/generated/sklearn.cluster.agglomerativeclustering.html#sklearn.cluster.AgglomerativeClustering.set_params", "cluster.Birch": "modules/generated/sklearn.cluster.birch.html#sklearn.cluster.Birch", "cluster.Birch()": "modules/generated/sklearn.cluster.birch.html", "cluster.Birch.fit()": "modules/generated/sklearn.cluster.birch.html#sklearn.cluster.Birch.fit", "cluster.Birch.fit_predict()": "modules/generated/sklearn.cluster.birch.html#sklearn.cluster.Birch.fit_predict", "cluster.Birch.fit_transform()": "modules/generated/sklearn.cluster.birch.html#sklearn.cluster.Birch.fit_transform", "cluster.Birch.get_feature_names_out()": "modules/generated/sklearn.cluster.birch.html#sklearn.cluster.Birch.get_feature_names_out", "cluster.Birch.get_params()": "modules/generated/sklearn.cluster.birch.html#sklearn.cluster.Birch.get_params", "cluster.Birch.partial_fit()": "modules/generated/sklearn.cluster.birch.html#sklearn.cluster.Birch.partial_fit", "cluster.Birch.predict()": "modules/generated/sklearn.cluster.birch.html#sklearn.cluster.Birch.predict", "cluster.Birch.set_params()": "modules/generated/sklearn.cluster.birch.html#sklearn.cluster.Birch.set_params", "cluster.Birch.transform()": "modules/generated/sklearn.cluster.birch.html#sklearn.cluster.Birch.transform", "cluster.BisectingKMeans": "modules/generated/sklearn.cluster.bisectingkmeans.html#sklearn.cluster.BisectingKMeans", "cluster.BisectingKMeans()": "modules/generated/sklearn.cluster.bisectingkmeans.html", "cluster.BisectingKMeans.fit()": "modules/generated/sklearn.cluster.bisectingkmeans.html#sklearn.cluster.BisectingKMeans.fit", "cluster.BisectingKMeans.fit_predict()": "modules/generated/sklearn.cluster.bisectingkmeans.html#sklearn.cluster.BisectingKMeans.fit_predict", "cluster.BisectingKMeans.fit_transform()": "modules/generated/sklearn.cluster.bisectingkmeans.html#sklearn.cluster.BisectingKMeans.fit_transform", "cluster.BisectingKMeans.get_feature_names_out()": "modules/generated/sklearn.cluster.bisectingkmeans.html#sklearn.cluster.BisectingKMeans.get_feature_names_out", "cluster.BisectingKMeans.get_params()": "modules/generated/sklearn.cluster.bisectingkmeans.html#sklearn.cluster.BisectingKMeans.get_params", "cluster.BisectingKMeans.predict()": "modules/generated/sklearn.cluster.bisectingkmeans.html#sklearn.cluster.BisectingKMeans.predict", "cluster.BisectingKMeans.score()": "modules/generated/sklearn.cluster.bisectingkmeans.html#sklearn.cluster.BisectingKMeans.score", "cluster.BisectingKMeans.set_params()": "modules/generated/sklearn.cluster.bisectingkmeans.html#sklearn.cluster.BisectingKMeans.set_params", "cluster.BisectingKMeans.transform()": "modules/generated/sklearn.cluster.bisectingkmeans.html#sklearn.cluster.BisectingKMeans.transform", "cluster.cluster_optics_dbscan()": "modules/generated/sklearn.cluster.cluster_optics_dbscan.html#sklearn.cluster.cluster_optics_dbscan", "cluster.cluster_optics_xi()": "modules/generated/sklearn.cluster.cluster_optics_xi.html#sklearn.cluster.cluster_optics_xi", "cluster.compute_optics_graph()": "modules/generated/sklearn.cluster.compute_optics_graph.html#sklearn.cluster.compute_optics_graph", "cluster.DBSCAN": "modules/generated/sklearn.cluster.dbscan.html#sklearn.cluster.DBSCAN", "cluster.DBSCAN()": "modules/generated/sklearn.cluster.dbscan.html", "cluster.dbscan()": "modules/generated/dbscan-function.html#sklearn.cluster.dbscan", "cluster.DBSCAN.fit()": "modules/generated/sklearn.cluster.dbscan.html#sklearn.cluster.DBSCAN.fit", "cluster.DBSCAN.fit_predict()": "modules/generated/sklearn.cluster.dbscan.html#sklearn.cluster.DBSCAN.fit_predict", "cluster.DBSCAN.get_params()": "modules/generated/sklearn.cluster.dbscan.html#sklearn.cluster.DBSCAN.get_params", "cluster.DBSCAN.set_params()": "modules/generated/sklearn.cluster.dbscan.html#sklearn.cluster.DBSCAN.set_params", "cluster.estimate_bandwidth()": "modules/generated/sklearn.cluster.estimate_bandwidth.html#sklearn.cluster.estimate_bandwidth", "cluster.FeatureAgglomeration": "modules/generated/sklearn.cluster.featureagglomeration.html#sklearn.cluster.FeatureAgglomeration", "cluster.FeatureAgglomeration()": "modules/generated/sklearn.cluster.featureagglomeration.html", "cluster.FeatureAgglomeration.fit()": "modules/generated/sklearn.cluster.featureagglomeration.html#sklearn.cluster.FeatureAgglomeration.fit", "cluster.FeatureAgglomeration.fit_transform()": "modules/generated/sklearn.cluster.featureagglomeration.html#sklearn.cluster.FeatureAgglomeration.fit_transform", "cluster.FeatureAgglomeration.get_feature_names_out()": "modules/generated/sklearn.cluster.featureagglomeration.html#sklearn.cluster.FeatureAgglomeration.get_feature_names_out", "cluster.FeatureAgglomeration.get_params()": "modules/generated/sklearn.cluster.featureagglomeration.html#sklearn.cluster.FeatureAgglomeration.get_params", "cluster.FeatureAgglomeration.inverse_transform()": "modules/generated/sklearn.cluster.featureagglomeration.html#sklearn.cluster.FeatureAgglomeration.inverse_transform", "cluster.FeatureAgglomeration.set_params()": "modules/generated/sklearn.cluster.featureagglomeration.html#sklearn.cluster.FeatureAgglomeration.set_params", "cluster.FeatureAgglomeration.transform()": "modules/generated/sklearn.cluster.featureagglomeration.html#sklearn.cluster.FeatureAgglomeration.transform", "cluster.k_means()": "modules/generated/sklearn.cluster.k_means.html#sklearn.cluster.k_means", "cluster.KMeans": "modules/generated/sklearn.cluster.kmeans.html#sklearn.cluster.KMeans", "cluster.KMeans()": "modules/generated/sklearn.cluster.kmeans.html", "cluster.KMeans.fit()": "modules/generated/sklearn.cluster.kmeans.html#sklearn.cluster.KMeans.fit", "cluster.KMeans.fit_predict()": "modules/generated/sklearn.cluster.kmeans.html#sklearn.cluster.KMeans.fit_predict", "cluster.KMeans.fit_transform()": "modules/generated/sklearn.cluster.kmeans.html#sklearn.cluster.KMeans.fit_transform", "cluster.KMeans.get_feature_names_out()": "modules/generated/sklearn.cluster.kmeans.html#sklearn.cluster.KMeans.get_feature_names_out", "cluster.KMeans.get_params()": "modules/generated/sklearn.cluster.kmeans.html#sklearn.cluster.KMeans.get_params", "cluster.KMeans.predict()": "modules/generated/sklearn.cluster.kmeans.html#sklearn.cluster.KMeans.predict", "cluster.KMeans.score()": "modules/generated/sklearn.cluster.kmeans.html#sklearn.cluster.KMeans.score", "cluster.KMeans.set_params()": "modules/generated/sklearn.cluster.kmeans.html#sklearn.cluster.KMeans.set_params", "cluster.KMeans.transform()": "modules/generated/sklearn.cluster.kmeans.html#sklearn.cluster.KMeans.transform", "cluster.kmeans_plusplus()": "modules/generated/sklearn.cluster.kmeans_plusplus.html#sklearn.cluster.kmeans_plusplus", "cluster.mean_shift()": "modules/generated/sklearn.cluster.mean_shift.html#sklearn.cluster.mean_shift", "cluster.MeanShift": "modules/generated/sklearn.cluster.meanshift.html#sklearn.cluster.MeanShift", "cluster.MeanShift()": "modules/generated/sklearn.cluster.meanshift.html", "cluster.MeanShift.fit()": "modules/generated/sklearn.cluster.meanshift.html#sklearn.cluster.MeanShift.fit", "cluster.MeanShift.fit_predict()": "modules/generated/sklearn.cluster.meanshift.html#sklearn.cluster.MeanShift.fit_predict", "cluster.MeanShift.get_params()": "modules/generated/sklearn.cluster.meanshift.html#sklearn.cluster.MeanShift.get_params", "cluster.MeanShift.predict()": "modules/generated/sklearn.cluster.meanshift.html#sklearn.cluster.MeanShift.predict", "cluster.MeanShift.set_params()": "modules/generated/sklearn.cluster.meanshift.html#sklearn.cluster.MeanShift.set_params", "cluster.MiniBatchKMeans": "modules/generated/sklearn.cluster.minibatchkmeans.html#sklearn.cluster.MiniBatchKMeans", "cluster.MiniBatchKMeans()": "modules/generated/sklearn.cluster.minibatchkmeans.html", "cluster.MiniBatchKMeans.fit()": "modules/generated/sklearn.cluster.minibatchkmeans.html#sklearn.cluster.MiniBatchKMeans.fit", "cluster.MiniBatchKMeans.fit_predict()": "modules/generated/sklearn.cluster.minibatchkmeans.html#sklearn.cluster.MiniBatchKMeans.fit_predict", "cluster.MiniBatchKMeans.fit_transform()": "modules/generated/sklearn.cluster.minibatchkmeans.html#sklearn.cluster.MiniBatchKMeans.fit_transform", "cluster.MiniBatchKMeans.get_feature_names_out()": "modules/generated/sklearn.cluster.minibatchkmeans.html#sklearn.cluster.MiniBatchKMeans.get_feature_names_out", "cluster.MiniBatchKMeans.get_params()": "modules/generated/sklearn.cluster.minibatchkmeans.html#sklearn.cluster.MiniBatchKMeans.get_params", "cluster.MiniBatchKMeans.partial_fit()": "modules/generated/sklearn.cluster.minibatchkmeans.html#sklearn.cluster.MiniBatchKMeans.partial_fit", "cluster.MiniBatchKMeans.predict()": "modules/generated/sklearn.cluster.minibatchkmeans.html#sklearn.cluster.MiniBatchKMeans.predict", "cluster.MiniBatchKMeans.score()": "modules/generated/sklearn.cluster.minibatchkmeans.html#sklearn.cluster.MiniBatchKMeans.score", "cluster.MiniBatchKMeans.set_params()": "modules/generated/sklearn.cluster.minibatchkmeans.html#sklearn.cluster.MiniBatchKMeans.set_params", "cluster.MiniBatchKMeans.transform()": "modules/generated/sklearn.cluster.minibatchkmeans.html#sklearn.cluster.MiniBatchKMeans.transform", "cluster.OPTICS": "modules/generated/sklearn.cluster.optics.html#sklearn.cluster.OPTICS", "cluster.OPTICS()": "modules/generated/sklearn.cluster.optics.html", "cluster.OPTICS.fit()": "modules/generated/sklearn.cluster.optics.html#sklearn.cluster.OPTICS.fit", "cluster.OPTICS.fit_predict()": "modules/generated/sklearn.cluster.optics.html#sklearn.cluster.OPTICS.fit_predict", "cluster.OPTICS.get_params()": "modules/generated/sklearn.cluster.optics.html#sklearn.cluster.OPTICS.get_params", "cluster.OPTICS.set_params()": "modules/generated/sklearn.cluster.optics.html#sklearn.cluster.OPTICS.set_params", "cluster.spectral_clustering()": "modules/generated/sklearn.cluster.spectral_clustering.html#sklearn.cluster.spectral_clustering", "cluster.SpectralBiclustering": "modules/generated/sklearn.cluster.spectralbiclustering.html#sklearn.cluster.SpectralBiclustering", "cluster.SpectralBiclustering()": "modules/generated/sklearn.cluster.spectralbiclustering.html", "cluster.SpectralBiclustering.fit()": "modules/generated/sklearn.cluster.spectralbiclustering.html#sklearn.cluster.SpectralBiclustering.fit", "cluster.SpectralBiclustering.get_indices()": "modules/generated/sklearn.cluster.spectralbiclustering.html#sklearn.cluster.SpectralBiclustering.get_indices", "cluster.SpectralBiclustering.get_params()": "modules/generated/sklearn.cluster.spectralbiclustering.html#sklearn.cluster.SpectralBiclustering.get_params", "cluster.SpectralBiclustering.get_shape()": "modules/generated/sklearn.cluster.spectralbiclustering.html#sklearn.cluster.SpectralBiclustering.get_shape", "cluster.SpectralBiclustering.get_submatrix()": "modules/generated/sklearn.cluster.spectralbiclustering.html#sklearn.cluster.SpectralBiclustering.get_submatrix", "cluster.SpectralBiclustering.set_params()": "modules/generated/sklearn.cluster.spectralbiclustering.html#sklearn.cluster.SpectralBiclustering.set_params", "cluster.SpectralClustering": "modules/generated/sklearn.cluster.spectralclustering.html#sklearn.cluster.SpectralClustering", "cluster.SpectralClustering()": "modules/generated/sklearn.cluster.spectralclustering.html", "cluster.SpectralClustering.fit()": "modules/generated/sklearn.cluster.spectralclustering.html#sklearn.cluster.SpectralClustering.fit", "cluster.SpectralClustering.fit_predict()": "modules/generated/sklearn.cluster.spectralclustering.html#sklearn.cluster.SpectralClustering.fit_predict", "cluster.SpectralClustering.get_params()": "modules/generated/sklearn.cluster.spectralclustering.html#sklearn.cluster.SpectralClustering.get_params", "cluster.SpectralClustering.set_params()": "modules/generated/sklearn.cluster.spectralclustering.html#sklearn.cluster.SpectralClustering.set_params", "cluster.SpectralCoclustering": "modules/generated/sklearn.cluster.spectralcoclustering.html#sklearn.cluster.SpectralCoclustering", "cluster.SpectralCoclustering()": "modules/generated/sklearn.cluster.spectralcoclustering.html", "cluster.SpectralCoclustering.fit()": "modules/generated/sklearn.cluster.spectralcoclustering.html#sklearn.cluster.SpectralCoclustering.fit", "cluster.SpectralCoclustering.get_indices()": "modules/generated/sklearn.cluster.spectralcoclustering.html#sklearn.cluster.SpectralCoclustering.get_indices", "cluster.SpectralCoclustering.get_params()": "modules/generated/sklearn.cluster.spectralcoclustering.html#sklearn.cluster.SpectralCoclustering.get_params", "cluster.SpectralCoclustering.get_shape()": "modules/generated/sklearn.cluster.spectralcoclustering.html#sklearn.cluster.SpectralCoclustering.get_shape", "cluster.SpectralCoclustering.get_submatrix()": "modules/generated/sklearn.cluster.spectralcoclustering.html#sklearn.cluster.SpectralCoclustering.get_submatrix", "cluster.SpectralCoclustering.set_params()": "modules/generated/sklearn.cluster.spectralcoclustering.html#sklearn.cluster.SpectralCoclustering.set_params", "cluster.ward_tree()": "modules/generated/sklearn.cluster.ward_tree.html#sklearn.cluster.ward_tree", "compose.ColumnTransformer": "modules/generated/sklearn.compose.columntransformer.html#sklearn.compose.ColumnTransformer", "compose.ColumnTransformer()": "modules/generated/sklearn.compose.columntransformer.html", "compose.ColumnTransformer.fit()": "modules/generated/sklearn.compose.columntransformer.html#sklearn.compose.ColumnTransformer.fit", "compose.ColumnTransformer.fit_transform()": "modules/generated/sklearn.compose.columntransformer.html#sklearn.compose.ColumnTransformer.fit_transform", "compose.ColumnTransformer.get_feature_names()": "modules/generated/sklearn.compose.columntransformer.html#sklearn.compose.ColumnTransformer.get_feature_names", "compose.ColumnTransformer.get_feature_names_out()": "modules/generated/sklearn.compose.columntransformer.html#sklearn.compose.ColumnTransformer.get_feature_names_out", "compose.ColumnTransformer.get_params()": "modules/generated/sklearn.compose.columntransformer.html#sklearn.compose.ColumnTransformer.get_params", "compose.ColumnTransformer.set_params()": "modules/generated/sklearn.compose.columntransformer.html#sklearn.compose.ColumnTransformer.set_params", "compose.ColumnTransformer.transform()": "modules/generated/sklearn.compose.columntransformer.html#sklearn.compose.ColumnTransformer.transform", "compose.make_column_selector()": "modules/generated/sklearn.compose.make_column_selector.html#sklearn.compose.make_column_selector", "compose.make_column_transformer()": "modules/generated/sklearn.compose.make_column_transformer.html#sklearn.compose.make_column_transformer", "compose.TransformedTargetRegressor": "modules/generated/sklearn.compose.transformedtargetregressor.html#sklearn.compose.TransformedTargetRegressor", "compose.TransformedTargetRegressor()": "modules/generated/sklearn.compose.transformedtargetregressor.html", "compose.TransformedTargetRegressor.fit()": "modules/generated/sklearn.compose.transformedtargetregressor.html#sklearn.compose.TransformedTargetRegressor.fit", "compose.TransformedTargetRegressor.get_params()": "modules/generated/sklearn.compose.transformedtargetregressor.html#sklearn.compose.TransformedTargetRegressor.get_params", "compose.TransformedTargetRegressor.predict()": "modules/generated/sklearn.compose.transformedtargetregressor.html#sklearn.compose.TransformedTargetRegressor.predict", "compose.TransformedTargetRegressor.score()": "modules/generated/sklearn.compose.transformedtargetregressor.html#sklearn.compose.TransformedTargetRegressor.score", "compose.TransformedTargetRegressor.set_params()": "modules/generated/sklearn.compose.transformedtargetregressor.html#sklearn.compose.TransformedTargetRegressor.set_params", "config_context()": "modules/generated/sklearn.config_context.html#sklearn.config_context", "covariance.EllipticEnvelope": "modules/generated/sklearn.covariance.ellipticenvelope.html#sklearn.covariance.EllipticEnvelope", "covariance.EllipticEnvelope()": "modules/generated/sklearn.covariance.ellipticenvelope.html", "covariance.EllipticEnvelope.correct_covariance()": "modules/generated/sklearn.covariance.ellipticenvelope.html#sklearn.covariance.EllipticEnvelope.correct_covariance", "covariance.EllipticEnvelope.decision_function()": "modules/generated/sklearn.covariance.ellipticenvelope.html#sklearn.covariance.EllipticEnvelope.decision_function", "covariance.EllipticEnvelope.error_norm()": "modules/generated/sklearn.covariance.ellipticenvelope.html#sklearn.covariance.EllipticEnvelope.error_norm", "covariance.EllipticEnvelope.fit()": "modules/generated/sklearn.covariance.ellipticenvelope.html#sklearn.covariance.EllipticEnvelope.fit", "covariance.EllipticEnvelope.fit_predict()": "modules/generated/sklearn.covariance.ellipticenvelope.html#sklearn.covariance.EllipticEnvelope.fit_predict", "covariance.EllipticEnvelope.get_params()": "modules/generated/sklearn.covariance.ellipticenvelope.html#sklearn.covariance.EllipticEnvelope.get_params", "covariance.EllipticEnvelope.get_precision()": "modules/generated/sklearn.covariance.ellipticenvelope.html#sklearn.covariance.EllipticEnvelope.get_precision", "covariance.EllipticEnvelope.mahalanobis()": "modules/generated/sklearn.covariance.ellipticenvelope.html#sklearn.covariance.EllipticEnvelope.mahalanobis", "covariance.EllipticEnvelope.predict()": "modules/generated/sklearn.covariance.ellipticenvelope.html#sklearn.covariance.EllipticEnvelope.predict", "covariance.EllipticEnvelope.reweight_covariance()": "modules/generated/sklearn.covariance.ellipticenvelope.html#sklearn.covariance.EllipticEnvelope.reweight_covariance", "covariance.EllipticEnvelope.score()": "modules/generated/sklearn.covariance.ellipticenvelope.html#sklearn.covariance.EllipticEnvelope.score", "covariance.EllipticEnvelope.score_samples()": "modules/generated/sklearn.covariance.ellipticenvelope.html#sklearn.covariance.EllipticEnvelope.score_samples", "covariance.EllipticEnvelope.set_params()": "modules/generated/sklearn.covariance.ellipticenvelope.html#sklearn.covariance.EllipticEnvelope.set_params", "covariance.empirical_covariance()": "modules/generated/sklearn.covariance.empirical_covariance.html#sklearn.covariance.empirical_covariance", "covariance.EmpiricalCovariance": "modules/generated/sklearn.covariance.empiricalcovariance.html#sklearn.covariance.EmpiricalCovariance", "covariance.EmpiricalCovariance()": "modules/generated/sklearn.covariance.empiricalcovariance.html", "covariance.EmpiricalCovariance.error_norm()": "modules/generated/sklearn.covariance.empiricalcovariance.html#sklearn.covariance.EmpiricalCovariance.error_norm", "covariance.EmpiricalCovariance.fit()": "modules/generated/sklearn.covariance.empiricalcovariance.html#sklearn.covariance.EmpiricalCovariance.fit", "covariance.EmpiricalCovariance.get_params()": "modules/generated/sklearn.covariance.empiricalcovariance.html#sklearn.covariance.EmpiricalCovariance.get_params", "covariance.EmpiricalCovariance.get_precision()": "modules/generated/sklearn.covariance.empiricalcovariance.html#sklearn.covariance.EmpiricalCovariance.get_precision", "covariance.EmpiricalCovariance.mahalanobis()": "modules/generated/sklearn.covariance.empiricalcovariance.html#sklearn.covariance.EmpiricalCovariance.mahalanobis", "covariance.EmpiricalCovariance.score()": "modules/generated/sklearn.covariance.empiricalcovariance.html#sklearn.covariance.EmpiricalCovariance.score", "covariance.EmpiricalCovariance.set_params()": "modules/generated/sklearn.covariance.empiricalcovariance.html#sklearn.covariance.EmpiricalCovariance.set_params", "covariance.graphical_lasso()": "modules/generated/sklearn.covariance.graphical_lasso.html#sklearn.covariance.graphical_lasso", "covariance.GraphicalLasso": "modules/generated/sklearn.covariance.graphicallasso.html#sklearn.covariance.GraphicalLasso", "covariance.GraphicalLasso()": "modules/generated/sklearn.covariance.graphicallasso.html", "covariance.GraphicalLasso.error_norm()": "modules/generated/sklearn.covariance.graphicallasso.html#sklearn.covariance.GraphicalLasso.error_norm", "covariance.GraphicalLasso.fit()": "modules/generated/sklearn.covariance.graphicallasso.html#sklearn.covariance.GraphicalLasso.fit", "covariance.GraphicalLasso.get_params()": "modules/generated/sklearn.covariance.graphicallasso.html#sklearn.covariance.GraphicalLasso.get_params", "covariance.GraphicalLasso.get_precision()": "modules/generated/sklearn.covariance.graphicallasso.html#sklearn.covariance.GraphicalLasso.get_precision", "covariance.GraphicalLasso.mahalanobis()": "modules/generated/sklearn.covariance.graphicallasso.html#sklearn.covariance.GraphicalLasso.mahalanobis", "covariance.GraphicalLasso.score()": "modules/generated/sklearn.covariance.graphicallasso.html#sklearn.covariance.GraphicalLasso.score", "covariance.GraphicalLasso.set_params()": "modules/generated/sklearn.covariance.graphicallasso.html#sklearn.covariance.GraphicalLasso.set_params", "covariance.GraphicalLassoCV": "modules/generated/sklearn.covariance.graphicallassocv.html#sklearn.covariance.GraphicalLassoCV", "covariance.GraphicalLassoCV()": "modules/generated/sklearn.covariance.graphicallassocv.html", "covariance.GraphicalLassoCV.error_norm()": "modules/generated/sklearn.covariance.graphicallassocv.html#sklearn.covariance.GraphicalLassoCV.error_norm", "covariance.GraphicalLassoCV.fit()": "modules/generated/sklearn.covariance.graphicallassocv.html#sklearn.covariance.GraphicalLassoCV.fit", "covariance.GraphicalLassoCV.get_params()": "modules/generated/sklearn.covariance.graphicallassocv.html#sklearn.covariance.GraphicalLassoCV.get_params", "covariance.GraphicalLassoCV.get_precision()": "modules/generated/sklearn.covariance.graphicallassocv.html#sklearn.covariance.GraphicalLassoCV.get_precision", "covariance.GraphicalLassoCV.mahalanobis()": "modules/generated/sklearn.covariance.graphicallassocv.html#sklearn.covariance.GraphicalLassoCV.mahalanobis", "covariance.GraphicalLassoCV.score()": "modules/generated/sklearn.covariance.graphicallassocv.html#sklearn.covariance.GraphicalLassoCV.score", "covariance.GraphicalLassoCV.set_params()": "modules/generated/sklearn.covariance.graphicallassocv.html#sklearn.covariance.GraphicalLassoCV.set_params", "covariance.ledoit_wolf()": "modules/generated/sklearn.covariance.ledoit_wolf.html#sklearn.covariance.ledoit_wolf", "covariance.LedoitWolf": "modules/generated/sklearn.covariance.ledoitwolf.html#sklearn.covariance.LedoitWolf", "covariance.LedoitWolf()": "modules/generated/sklearn.covariance.ledoitwolf.html", "covariance.LedoitWolf.error_norm()": "modules/generated/sklearn.covariance.ledoitwolf.html#sklearn.covariance.LedoitWolf.error_norm", "covariance.LedoitWolf.fit()": "modules/generated/sklearn.covariance.ledoitwolf.html#sklearn.covariance.LedoitWolf.fit", "covariance.LedoitWolf.get_params()": "modules/generated/sklearn.covariance.ledoitwolf.html#sklearn.covariance.LedoitWolf.get_params", "covariance.LedoitWolf.get_precision()": "modules/generated/sklearn.covariance.ledoitwolf.html#sklearn.covariance.LedoitWolf.get_precision", "covariance.LedoitWolf.mahalanobis()": "modules/generated/sklearn.covariance.ledoitwolf.html#sklearn.covariance.LedoitWolf.mahalanobis", "covariance.LedoitWolf.score()": "modules/generated/sklearn.covariance.ledoitwolf.html#sklearn.covariance.LedoitWolf.score", "covariance.LedoitWolf.set_params()": "modules/generated/sklearn.covariance.ledoitwolf.html#sklearn.covariance.LedoitWolf.set_params", "covariance.MinCovDet": "modules/generated/sklearn.covariance.mincovdet.html#sklearn.covariance.MinCovDet", "covariance.MinCovDet()": "modules/generated/sklearn.covariance.mincovdet.html", "covariance.MinCovDet.correct_covariance()": "modules/generated/sklearn.covariance.mincovdet.html#sklearn.covariance.MinCovDet.correct_covariance", "covariance.MinCovDet.error_norm()": "modules/generated/sklearn.covariance.mincovdet.html#sklearn.covariance.MinCovDet.error_norm", "covariance.MinCovDet.fit()": "modules/generated/sklearn.covariance.mincovdet.html#sklearn.covariance.MinCovDet.fit", "covariance.MinCovDet.get_params()": "modules/generated/sklearn.covariance.mincovdet.html#sklearn.covariance.MinCovDet.get_params", "covariance.MinCovDet.get_precision()": "modules/generated/sklearn.covariance.mincovdet.html#sklearn.covariance.MinCovDet.get_precision", "covariance.MinCovDet.mahalanobis()": "modules/generated/sklearn.covariance.mincovdet.html#sklearn.covariance.MinCovDet.mahalanobis", "covariance.MinCovDet.reweight_covariance()": "modules/generated/sklearn.covariance.mincovdet.html#sklearn.covariance.MinCovDet.reweight_covariance", "covariance.MinCovDet.score()": "modules/generated/sklearn.covariance.mincovdet.html#sklearn.covariance.MinCovDet.score", "covariance.MinCovDet.set_params()": "modules/generated/sklearn.covariance.mincovdet.html#sklearn.covariance.MinCovDet.set_params", "covariance.OAS": "modules/generated/sklearn.covariance.oas.html#sklearn.covariance.OAS", "covariance.OAS()": "modules/generated/sklearn.covariance.oas.html", "covariance.oas()": "modules/generated/oas-function.html#sklearn.covariance.oas", "covariance.OAS.error_norm()": "modules/generated/sklearn.covariance.oas.html#sklearn.covariance.OAS.error_norm", "covariance.OAS.fit()": "modules/generated/sklearn.covariance.oas.html#sklearn.covariance.OAS.fit", "covariance.OAS.get_params()": "modules/generated/sklearn.covariance.oas.html#sklearn.covariance.OAS.get_params", "covariance.OAS.get_precision()": "modules/generated/sklearn.covariance.oas.html#sklearn.covariance.OAS.get_precision", "covariance.OAS.mahalanobis()": "modules/generated/sklearn.covariance.oas.html#sklearn.covariance.OAS.mahalanobis", "covariance.OAS.score()": "modules/generated/sklearn.covariance.oas.html#sklearn.covariance.OAS.score", "covariance.OAS.set_params()": "modules/generated/sklearn.covariance.oas.html#sklearn.covariance.OAS.set_params", "covariance.shrunk_covariance()": "modules/generated/sklearn.covariance.shrunk_covariance.html#sklearn.covariance.shrunk_covariance", "covariance.ShrunkCovariance": "modules/generated/sklearn.covariance.shrunkcovariance.html#sklearn.covariance.ShrunkCovariance", "covariance.ShrunkCovariance()": "modules/generated/sklearn.covariance.shrunkcovariance.html", "covariance.ShrunkCovariance.error_norm()": "modules/generated/sklearn.covariance.shrunkcovariance.html#sklearn.covariance.ShrunkCovariance.error_norm", "covariance.ShrunkCovariance.fit()": "modules/generated/sklearn.covariance.shrunkcovariance.html#sklearn.covariance.ShrunkCovariance.fit", "covariance.ShrunkCovariance.get_params()": "modules/generated/sklearn.covariance.shrunkcovariance.html#sklearn.covariance.ShrunkCovariance.get_params", "covariance.ShrunkCovariance.get_precision()": "modules/generated/sklearn.covariance.shrunkcovariance.html#sklearn.covariance.ShrunkCovariance.get_precision", "covariance.ShrunkCovariance.mahalanobis()": "modules/generated/sklearn.covariance.shrunkcovariance.html#sklearn.covariance.ShrunkCovariance.mahalanobis", "covariance.ShrunkCovariance.score()": "modules/generated/sklearn.covariance.shrunkcovariance.html#sklearn.covariance.ShrunkCovariance.score", "covariance.ShrunkCovariance.set_params()": "modules/generated/sklearn.covariance.shrunkcovariance.html#sklearn.covariance.ShrunkCovariance.set_params", "cross_decomposition.CCA": "modules/generated/sklearn.cross_decomposition.cca.html#sklearn.cross_decomposition.CCA", "cross_decomposition.CCA()": "modules/generated/sklearn.cross_decomposition.cca.html", "cross_decomposition.CCA.fit()": "modules/generated/sklearn.cross_decomposition.cca.html#sklearn.cross_decomposition.CCA.fit", "cross_decomposition.CCA.fit_transform()": "modules/generated/sklearn.cross_decomposition.cca.html#sklearn.cross_decomposition.CCA.fit_transform", "cross_decomposition.CCA.get_feature_names_out()": "modules/generated/sklearn.cross_decomposition.cca.html#sklearn.cross_decomposition.CCA.get_feature_names_out", "cross_decomposition.CCA.get_params()": "modules/generated/sklearn.cross_decomposition.cca.html#sklearn.cross_decomposition.CCA.get_params", "cross_decomposition.CCA.inverse_transform()": "modules/generated/sklearn.cross_decomposition.cca.html#sklearn.cross_decomposition.CCA.inverse_transform", "cross_decomposition.CCA.predict()": "modules/generated/sklearn.cross_decomposition.cca.html#sklearn.cross_decomposition.CCA.predict", "cross_decomposition.CCA.score()": "modules/generated/sklearn.cross_decomposition.cca.html#sklearn.cross_decomposition.CCA.score", "cross_decomposition.CCA.set_params()": "modules/generated/sklearn.cross_decomposition.cca.html#sklearn.cross_decomposition.CCA.set_params", "cross_decomposition.CCA.transform()": "modules/generated/sklearn.cross_decomposition.cca.html#sklearn.cross_decomposition.CCA.transform", "cross_decomposition.PLSCanonical": "modules/generated/sklearn.cross_decomposition.plscanonical.html#sklearn.cross_decomposition.PLSCanonical", "cross_decomposition.PLSCanonical()": "modules/generated/sklearn.cross_decomposition.plscanonical.html", "cross_decomposition.PLSCanonical.fit()": "modules/generated/sklearn.cross_decomposition.plscanonical.html#sklearn.cross_decomposition.PLSCanonical.fit", "cross_decomposition.PLSCanonical.fit_transform()": "modules/generated/sklearn.cross_decomposition.plscanonical.html#sklearn.cross_decomposition.PLSCanonical.fit_transform", "cross_decomposition.PLSCanonical.get_feature_names_out()": "modules/generated/sklearn.cross_decomposition.plscanonical.html#sklearn.cross_decomposition.PLSCanonical.get_feature_names_out", "cross_decomposition.PLSCanonical.get_params()": "modules/generated/sklearn.cross_decomposition.plscanonical.html#sklearn.cross_decomposition.PLSCanonical.get_params", "cross_decomposition.PLSCanonical.inverse_transform()": "modules/generated/sklearn.cross_decomposition.plscanonical.html#sklearn.cross_decomposition.PLSCanonical.inverse_transform", "cross_decomposition.PLSCanonical.predict()": "modules/generated/sklearn.cross_decomposition.plscanonical.html#sklearn.cross_decomposition.PLSCanonical.predict", "cross_decomposition.PLSCanonical.score()": "modules/generated/sklearn.cross_decomposition.plscanonical.html#sklearn.cross_decomposition.PLSCanonical.score", "cross_decomposition.PLSCanonical.set_params()": "modules/generated/sklearn.cross_decomposition.plscanonical.html#sklearn.cross_decomposition.PLSCanonical.set_params", "cross_decomposition.PLSCanonical.transform()": "modules/generated/sklearn.cross_decomposition.plscanonical.html#sklearn.cross_decomposition.PLSCanonical.transform", "cross_decomposition.PLSRegression": "modules/generated/sklearn.cross_decomposition.plsregression.html#sklearn.cross_decomposition.PLSRegression", "cross_decomposition.PLSRegression()": "modules/generated/sklearn.cross_decomposition.plsregression.html", "cross_decomposition.PLSRegression.fit()": "modules/generated/sklearn.cross_decomposition.plsregression.html#sklearn.cross_decomposition.PLSRegression.fit", "cross_decomposition.PLSRegression.fit_transform()": "modules/generated/sklearn.cross_decomposition.plsregression.html#sklearn.cross_decomposition.PLSRegression.fit_transform", "cross_decomposition.PLSRegression.get_feature_names_out()": "modules/generated/sklearn.cross_decomposition.plsregression.html#sklearn.cross_decomposition.PLSRegression.get_feature_names_out", "cross_decomposition.PLSRegression.get_params()": "modules/generated/sklearn.cross_decomposition.plsregression.html#sklearn.cross_decomposition.PLSRegression.get_params", "cross_decomposition.PLSRegression.inverse_transform()": "modules/generated/sklearn.cross_decomposition.plsregression.html#sklearn.cross_decomposition.PLSRegression.inverse_transform", "cross_decomposition.PLSRegression.predict()": "modules/generated/sklearn.cross_decomposition.plsregression.html#sklearn.cross_decomposition.PLSRegression.predict", "cross_decomposition.PLSRegression.score()": "modules/generated/sklearn.cross_decomposition.plsregression.html#sklearn.cross_decomposition.PLSRegression.score", "cross_decomposition.PLSRegression.set_params()": "modules/generated/sklearn.cross_decomposition.plsregression.html#sklearn.cross_decomposition.PLSRegression.set_params", "cross_decomposition.PLSRegression.transform()": "modules/generated/sklearn.cross_decomposition.plsregression.html#sklearn.cross_decomposition.PLSRegression.transform", "cross_decomposition.PLSSVD": "modules/generated/sklearn.cross_decomposition.plssvd.html#sklearn.cross_decomposition.PLSSVD", "cross_decomposition.PLSSVD()": "modules/generated/sklearn.cross_decomposition.plssvd.html", "cross_decomposition.PLSSVD.fit()": "modules/generated/sklearn.cross_decomposition.plssvd.html#sklearn.cross_decomposition.PLSSVD.fit", "cross_decomposition.PLSSVD.fit_transform()": "modules/generated/sklearn.cross_decomposition.plssvd.html#sklearn.cross_decomposition.PLSSVD.fit_transform", "cross_decomposition.PLSSVD.get_feature_names_out()": "modules/generated/sklearn.cross_decomposition.plssvd.html#sklearn.cross_decomposition.PLSSVD.get_feature_names_out", "cross_decomposition.PLSSVD.get_params()": "modules/generated/sklearn.cross_decomposition.plssvd.html#sklearn.cross_decomposition.PLSSVD.get_params", "cross_decomposition.PLSSVD.set_params()": "modules/generated/sklearn.cross_decomposition.plssvd.html#sklearn.cross_decomposition.PLSSVD.set_params", "cross_decomposition.PLSSVD.transform()": "modules/generated/sklearn.cross_decomposition.plssvd.html#sklearn.cross_decomposition.PLSSVD.transform", "datasets.clear_data_home()": "modules/generated/sklearn.datasets.clear_data_home.html#sklearn.datasets.clear_data_home", "datasets.dump_svmlight_file()": "modules/generated/sklearn.datasets.dump_svmlight_file.html#sklearn.datasets.dump_svmlight_file", "datasets.fetch_20newsgroups()": "modules/generated/sklearn.datasets.fetch_20newsgroups.html#sklearn.datasets.fetch_20newsgroups", "datasets.fetch_20newsgroups_vectorized()": "modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized.html#sklearn.datasets.fetch_20newsgroups_vectorized", "datasets.fetch_california_housing()": "modules/generated/sklearn.datasets.fetch_california_housing.html#sklearn.datasets.fetch_california_housing", "datasets.fetch_covtype()": "modules/generated/sklearn.datasets.fetch_covtype.html#sklearn.datasets.fetch_covtype", "datasets.fetch_kddcup99()": "modules/generated/sklearn.datasets.fetch_kddcup99.html#sklearn.datasets.fetch_kddcup99", "datasets.fetch_lfw_pairs()": "modules/generated/sklearn.datasets.fetch_lfw_pairs.html#sklearn.datasets.fetch_lfw_pairs", "datasets.fetch_lfw_people()": "modules/generated/sklearn.datasets.fetch_lfw_people.html#sklearn.datasets.fetch_lfw_people", "datasets.fetch_olivetti_faces()": "modules/generated/sklearn.datasets.fetch_olivetti_faces.html#sklearn.datasets.fetch_olivetti_faces", "datasets.fetch_openml()": "modules/generated/sklearn.datasets.fetch_openml.html#sklearn.datasets.fetch_openml", "datasets.fetch_rcv1()": "modules/generated/sklearn.datasets.fetch_rcv1.html#sklearn.datasets.fetch_rcv1", "datasets.fetch_species_distributions()": "modules/generated/sklearn.datasets.fetch_species_distributions.html#sklearn.datasets.fetch_species_distributions", "datasets.get_data_home()": "modules/generated/sklearn.datasets.get_data_home.html#sklearn.datasets.get_data_home", "datasets.load_boston()": "modules/generated/sklearn.datasets.load_boston.html#sklearn.datasets.load_boston", "datasets.load_breast_cancer()": "modules/generated/sklearn.datasets.load_breast_cancer.html#sklearn.datasets.load_breast_cancer", "datasets.load_diabetes()": "modules/generated/sklearn.datasets.load_diabetes.html#sklearn.datasets.load_diabetes", "datasets.load_digits()": "modules/generated/sklearn.datasets.load_digits.html#sklearn.datasets.load_digits", "datasets.load_files()": "modules/generated/sklearn.datasets.load_files.html#sklearn.datasets.load_files", "datasets.load_iris()": "modules/generated/sklearn.datasets.load_iris.html#sklearn.datasets.load_iris", "datasets.load_linnerud()": "modules/generated/sklearn.datasets.load_linnerud.html#sklearn.datasets.load_linnerud", "datasets.load_sample_image()": "modules/generated/sklearn.datasets.load_sample_image.html#sklearn.datasets.load_sample_image", "datasets.load_sample_images()": "modules/generated/sklearn.datasets.load_sample_images.html#sklearn.datasets.load_sample_images", "datasets.load_svmlight_file()": "modules/generated/sklearn.datasets.load_svmlight_file.html#sklearn.datasets.load_svmlight_file", "datasets.load_svmlight_files()": "modules/generated/sklearn.datasets.load_svmlight_files.html#sklearn.datasets.load_svmlight_files", "datasets.load_wine()": "modules/generated/sklearn.datasets.load_wine.html#sklearn.datasets.load_wine", "datasets.make_biclusters()": "modules/generated/sklearn.datasets.make_biclusters.html#sklearn.datasets.make_biclusters", "datasets.make_blobs()": "modules/generated/sklearn.datasets.make_blobs.html#sklearn.datasets.make_blobs", "datasets.make_checkerboard()": "modules/generated/sklearn.datasets.make_checkerboard.html#sklearn.datasets.make_checkerboard", "datasets.make_circles()": "modules/generated/sklearn.datasets.make_circles.html#sklearn.datasets.make_circles", "datasets.make_classification()": "modules/generated/sklearn.datasets.make_classification.html#sklearn.datasets.make_classification", "datasets.make_friedman1()": "modules/generated/sklearn.datasets.make_friedman1.html#sklearn.datasets.make_friedman1", "datasets.make_friedman2()": "modules/generated/sklearn.datasets.make_friedman2.html#sklearn.datasets.make_friedman2", "datasets.make_friedman3()": "modules/generated/sklearn.datasets.make_friedman3.html#sklearn.datasets.make_friedman3", "datasets.make_gaussian_quantiles()": "modules/generated/sklearn.datasets.make_gaussian_quantiles.html#sklearn.datasets.make_gaussian_quantiles", "datasets.make_hastie_10_2()": "modules/generated/sklearn.datasets.make_hastie_10_2.html#sklearn.datasets.make_hastie_10_2", "datasets.make_low_rank_matrix()": "modules/generated/sklearn.datasets.make_low_rank_matrix.html#sklearn.datasets.make_low_rank_matrix", "datasets.make_moons()": "modules/generated/sklearn.datasets.make_moons.html#sklearn.datasets.make_moons", "datasets.make_multilabel_classification()": "modules/generated/sklearn.datasets.make_multilabel_classification.html#sklearn.datasets.make_multilabel_classification", "datasets.make_regression()": "modules/generated/sklearn.datasets.make_regression.html#sklearn.datasets.make_regression", "datasets.make_s_curve()": "modules/generated/sklearn.datasets.make_s_curve.html#sklearn.datasets.make_s_curve", "datasets.make_sparse_coded_signal()": "modules/generated/sklearn.datasets.make_sparse_coded_signal.html#sklearn.datasets.make_sparse_coded_signal", "datasets.make_sparse_spd_matrix()": "modules/generated/sklearn.datasets.make_sparse_spd_matrix.html#sklearn.datasets.make_sparse_spd_matrix", "datasets.make_sparse_uncorrelated()": "modules/generated/sklearn.datasets.make_sparse_uncorrelated.html#sklearn.datasets.make_sparse_uncorrelated", "datasets.make_spd_matrix()": "modules/generated/sklearn.datasets.make_spd_matrix.html#sklearn.datasets.make_spd_matrix", "datasets.make_swiss_roll()": "modules/generated/sklearn.datasets.make_swiss_roll.html#sklearn.datasets.make_swiss_roll", "decomposition.dict_learning()": "modules/generated/sklearn.decomposition.dict_learning.html#sklearn.decomposition.dict_learning", "decomposition.dict_learning_online()": "modules/generated/sklearn.decomposition.dict_learning_online.html#sklearn.decomposition.dict_learning_online", "decomposition.DictionaryLearning": "modules/generated/sklearn.decomposition.dictionarylearning.html#sklearn.decomposition.DictionaryLearning", "decomposition.DictionaryLearning()": "modules/generated/sklearn.decomposition.dictionarylearning.html", "decomposition.DictionaryLearning.fit()": "modules/generated/sklearn.decomposition.dictionarylearning.html#sklearn.decomposition.DictionaryLearning.fit", "decomposition.DictionaryLearning.fit_transform()": "modules/generated/sklearn.decomposition.dictionarylearning.html#sklearn.decomposition.DictionaryLearning.fit_transform", "decomposition.DictionaryLearning.get_feature_names_out()": "modules/generated/sklearn.decomposition.dictionarylearning.html#sklearn.decomposition.DictionaryLearning.get_feature_names_out", "decomposition.DictionaryLearning.get_params()": "modules/generated/sklearn.decomposition.dictionarylearning.html#sklearn.decomposition.DictionaryLearning.get_params", "decomposition.DictionaryLearning.set_params()": "modules/generated/sklearn.decomposition.dictionarylearning.html#sklearn.decomposition.DictionaryLearning.set_params", "decomposition.DictionaryLearning.transform()": "modules/generated/sklearn.decomposition.dictionarylearning.html#sklearn.decomposition.DictionaryLearning.transform", "decomposition.FactorAnalysis": "modules/generated/sklearn.decomposition.factoranalysis.html#sklearn.decomposition.FactorAnalysis", "decomposition.FactorAnalysis()": "modules/generated/sklearn.decomposition.factoranalysis.html", "decomposition.FactorAnalysis.fit()": "modules/generated/sklearn.decomposition.factoranalysis.html#sklearn.decomposition.FactorAnalysis.fit", "decomposition.FactorAnalysis.fit_transform()": "modules/generated/sklearn.decomposition.factoranalysis.html#sklearn.decomposition.FactorAnalysis.fit_transform", "decomposition.FactorAnalysis.get_covariance()": "modules/generated/sklearn.decomposition.factoranalysis.html#sklearn.decomposition.FactorAnalysis.get_covariance", "decomposition.FactorAnalysis.get_feature_names_out()": "modules/generated/sklearn.decomposition.factoranalysis.html#sklearn.decomposition.FactorAnalysis.get_feature_names_out", "decomposition.FactorAnalysis.get_params()": "modules/generated/sklearn.decomposition.factoranalysis.html#sklearn.decomposition.FactorAnalysis.get_params", "decomposition.FactorAnalysis.get_precision()": "modules/generated/sklearn.decomposition.factoranalysis.html#sklearn.decomposition.FactorAnalysis.get_precision", "decomposition.FactorAnalysis.score()": "modules/generated/sklearn.decomposition.factoranalysis.html#sklearn.decomposition.FactorAnalysis.score", "decomposition.FactorAnalysis.score_samples()": "modules/generated/sklearn.decomposition.factoranalysis.html#sklearn.decomposition.FactorAnalysis.score_samples", "decomposition.FactorAnalysis.set_params()": "modules/generated/sklearn.decomposition.factoranalysis.html#sklearn.decomposition.FactorAnalysis.set_params", "decomposition.FactorAnalysis.transform()": "modules/generated/sklearn.decomposition.factoranalysis.html#sklearn.decomposition.FactorAnalysis.transform", "decomposition.FastICA": "modules/generated/sklearn.decomposition.fastica.html#sklearn.decomposition.FastICA", "decomposition.fastica()": "modules/generated/fastica-function.html#sklearn.decomposition.fastica", "decomposition.FastICA()": "modules/generated/sklearn.decomposition.fastica.html", "decomposition.FastICA.fit()": "modules/generated/sklearn.decomposition.fastica.html#sklearn.decomposition.FastICA.fit", "decomposition.FastICA.fit_transform()": "modules/generated/sklearn.decomposition.fastica.html#sklearn.decomposition.FastICA.fit_transform", "decomposition.FastICA.get_feature_names_out()": "modules/generated/sklearn.decomposition.fastica.html#sklearn.decomposition.FastICA.get_feature_names_out", "decomposition.FastICA.get_params()": "modules/generated/sklearn.decomposition.fastica.html#sklearn.decomposition.FastICA.get_params", "decomposition.FastICA.inverse_transform()": "modules/generated/sklearn.decomposition.fastica.html#sklearn.decomposition.FastICA.inverse_transform", "decomposition.FastICA.set_params()": "modules/generated/sklearn.decomposition.fastica.html#sklearn.decomposition.FastICA.set_params", "decomposition.FastICA.transform()": "modules/generated/sklearn.decomposition.fastica.html#sklearn.decomposition.FastICA.transform", "decomposition.IncrementalPCA": "modules/generated/sklearn.decomposition.incrementalpca.html#sklearn.decomposition.IncrementalPCA", "decomposition.IncrementalPCA()": "modules/generated/sklearn.decomposition.incrementalpca.html", "decomposition.IncrementalPCA.fit()": "modules/generated/sklearn.decomposition.incrementalpca.html#sklearn.decomposition.IncrementalPCA.fit", "decomposition.IncrementalPCA.fit_transform()": "modules/generated/sklearn.decomposition.incrementalpca.html#sklearn.decomposition.IncrementalPCA.fit_transform", "decomposition.IncrementalPCA.get_covariance()": "modules/generated/sklearn.decomposition.incrementalpca.html#sklearn.decomposition.IncrementalPCA.get_covariance", "decomposition.IncrementalPCA.get_feature_names_out()": "modules/generated/sklearn.decomposition.incrementalpca.html#sklearn.decomposition.IncrementalPCA.get_feature_names_out", "decomposition.IncrementalPCA.get_params()": "modules/generated/sklearn.decomposition.incrementalpca.html#sklearn.decomposition.IncrementalPCA.get_params", "decomposition.IncrementalPCA.get_precision()": "modules/generated/sklearn.decomposition.incrementalpca.html#sklearn.decomposition.IncrementalPCA.get_precision", "decomposition.IncrementalPCA.inverse_transform()": "modules/generated/sklearn.decomposition.incrementalpca.html#sklearn.decomposition.IncrementalPCA.inverse_transform", "decomposition.IncrementalPCA.partial_fit()": "modules/generated/sklearn.decomposition.incrementalpca.html#sklearn.decomposition.IncrementalPCA.partial_fit", "decomposition.IncrementalPCA.set_params()": "modules/generated/sklearn.decomposition.incrementalpca.html#sklearn.decomposition.IncrementalPCA.set_params", "decomposition.IncrementalPCA.transform()": "modules/generated/sklearn.decomposition.incrementalpca.html#sklearn.decomposition.IncrementalPCA.transform", "decomposition.KernelPCA": "modules/generated/sklearn.decomposition.kernelpca.html#sklearn.decomposition.KernelPCA", "decomposition.KernelPCA()": "modules/generated/sklearn.decomposition.kernelpca.html", "decomposition.KernelPCA.fit()": "modules/generated/sklearn.decomposition.kernelpca.html#sklearn.decomposition.KernelPCA.fit", "decomposition.KernelPCA.fit_transform()": "modules/generated/sklearn.decomposition.kernelpca.html#sklearn.decomposition.KernelPCA.fit_transform", "decomposition.KernelPCA.get_feature_names_out()": "modules/generated/sklearn.decomposition.kernelpca.html#sklearn.decomposition.KernelPCA.get_feature_names_out", "decomposition.KernelPCA.get_params()": "modules/generated/sklearn.decomposition.kernelpca.html#sklearn.decomposition.KernelPCA.get_params", "decomposition.KernelPCA.inverse_transform()": "modules/generated/sklearn.decomposition.kernelpca.html#sklearn.decomposition.KernelPCA.inverse_transform", "decomposition.KernelPCA.set_params()": "modules/generated/sklearn.decomposition.kernelpca.html#sklearn.decomposition.KernelPCA.set_params", "decomposition.KernelPCA.transform()": "modules/generated/sklearn.decomposition.kernelpca.html#sklearn.decomposition.KernelPCA.transform", "decomposition.LatentDirichletAllocation": "modules/generated/sklearn.decomposition.latentdirichletallocation.html#sklearn.decomposition.LatentDirichletAllocation", "decomposition.LatentDirichletAllocation()": "modules/generated/sklearn.decomposition.latentdirichletallocation.html", "decomposition.LatentDirichletAllocation.fit()": "modules/generated/sklearn.decomposition.latentdirichletallocation.html#sklearn.decomposition.LatentDirichletAllocation.fit", "decomposition.LatentDirichletAllocation.fit_transform()": "modules/generated/sklearn.decomposition.latentdirichletallocation.html#sklearn.decomposition.LatentDirichletAllocation.fit_transform", "decomposition.LatentDirichletAllocation.get_feature_names_out()": "modules/generated/sklearn.decomposition.latentdirichletallocation.html#sklearn.decomposition.LatentDirichletAllocation.get_feature_names_out", "decomposition.LatentDirichletAllocation.get_params()": "modules/generated/sklearn.decomposition.latentdirichletallocation.html#sklearn.decomposition.LatentDirichletAllocation.get_params", "decomposition.LatentDirichletAllocation.partial_fit()": "modules/generated/sklearn.decomposition.latentdirichletallocation.html#sklearn.decomposition.LatentDirichletAllocation.partial_fit", "decomposition.LatentDirichletAllocation.perplexity()": "modules/generated/sklearn.decomposition.latentdirichletallocation.html#sklearn.decomposition.LatentDirichletAllocation.perplexity", "decomposition.LatentDirichletAllocation.score()": "modules/generated/sklearn.decomposition.latentdirichletallocation.html#sklearn.decomposition.LatentDirichletAllocation.score", "decomposition.LatentDirichletAllocation.set_params()": "modules/generated/sklearn.decomposition.latentdirichletallocation.html#sklearn.decomposition.LatentDirichletAllocation.set_params", "decomposition.LatentDirichletAllocation.transform()": "modules/generated/sklearn.decomposition.latentdirichletallocation.html#sklearn.decomposition.LatentDirichletAllocation.transform", "decomposition.MiniBatchDictionaryLearning": "modules/generated/sklearn.decomposition.minibatchdictionarylearning.html#sklearn.decomposition.MiniBatchDictionaryLearning", "decomposition.MiniBatchDictionaryLearning()": "modules/generated/sklearn.decomposition.minibatchdictionarylearning.html", "decomposition.MiniBatchDictionaryLearning.fit()": "modules/generated/sklearn.decomposition.minibatchdictionarylearning.html#sklearn.decomposition.MiniBatchDictionaryLearning.fit", "decomposition.MiniBatchDictionaryLearning.fit_transform()": "modules/generated/sklearn.decomposition.minibatchdictionarylearning.html#sklearn.decomposition.MiniBatchDictionaryLearning.fit_transform", "decomposition.MiniBatchDictionaryLearning.get_feature_names_out()": "modules/generated/sklearn.decomposition.minibatchdictionarylearning.html#sklearn.decomposition.MiniBatchDictionaryLearning.get_feature_names_out", "decomposition.MiniBatchDictionaryLearning.get_params()": "modules/generated/sklearn.decomposition.minibatchdictionarylearning.html#sklearn.decomposition.MiniBatchDictionaryLearning.get_params", "decomposition.MiniBatchDictionaryLearning.partial_fit()": "modules/generated/sklearn.decomposition.minibatchdictionarylearning.html#sklearn.decomposition.MiniBatchDictionaryLearning.partial_fit", "decomposition.MiniBatchDictionaryLearning.set_params()": "modules/generated/sklearn.decomposition.minibatchdictionarylearning.html#sklearn.decomposition.MiniBatchDictionaryLearning.set_params", "decomposition.MiniBatchDictionaryLearning.transform()": "modules/generated/sklearn.decomposition.minibatchdictionarylearning.html#sklearn.decomposition.MiniBatchDictionaryLearning.transform", "decomposition.MiniBatchNMF": "modules/generated/sklearn.decomposition.minibatchnmf.html#sklearn.decomposition.MiniBatchNMF", "decomposition.MiniBatchNMF()": "modules/generated/sklearn.decomposition.minibatchnmf.html", "decomposition.MiniBatchNMF.fit()": "modules/generated/sklearn.decomposition.minibatchnmf.html#sklearn.decomposition.MiniBatchNMF.fit", "decomposition.MiniBatchNMF.fit_transform()": "modules/generated/sklearn.decomposition.minibatchnmf.html#sklearn.decomposition.MiniBatchNMF.fit_transform", "decomposition.MiniBatchNMF.get_feature_names_out()": "modules/generated/sklearn.decomposition.minibatchnmf.html#sklearn.decomposition.MiniBatchNMF.get_feature_names_out", "decomposition.MiniBatchNMF.get_params()": "modules/generated/sklearn.decomposition.minibatchnmf.html#sklearn.decomposition.MiniBatchNMF.get_params", "decomposition.MiniBatchNMF.inverse_transform()": "modules/generated/sklearn.decomposition.minibatchnmf.html#sklearn.decomposition.MiniBatchNMF.inverse_transform", "decomposition.MiniBatchNMF.partial_fit()": "modules/generated/sklearn.decomposition.minibatchnmf.html#sklearn.decomposition.MiniBatchNMF.partial_fit", "decomposition.MiniBatchNMF.set_params()": "modules/generated/sklearn.decomposition.minibatchnmf.html#sklearn.decomposition.MiniBatchNMF.set_params", "decomposition.MiniBatchNMF.transform()": "modules/generated/sklearn.decomposition.minibatchnmf.html#sklearn.decomposition.MiniBatchNMF.transform", "decomposition.MiniBatchSparsePCA": "modules/generated/sklearn.decomposition.minibatchsparsepca.html#sklearn.decomposition.MiniBatchSparsePCA", "decomposition.MiniBatchSparsePCA()": "modules/generated/sklearn.decomposition.minibatchsparsepca.html", "decomposition.MiniBatchSparsePCA.fit()": "modules/generated/sklearn.decomposition.minibatchsparsepca.html#sklearn.decomposition.MiniBatchSparsePCA.fit", "decomposition.MiniBatchSparsePCA.fit_transform()": "modules/generated/sklearn.decomposition.minibatchsparsepca.html#sklearn.decomposition.MiniBatchSparsePCA.fit_transform", "decomposition.MiniBatchSparsePCA.get_feature_names_out()": "modules/generated/sklearn.decomposition.minibatchsparsepca.html#sklearn.decomposition.MiniBatchSparsePCA.get_feature_names_out", "decomposition.MiniBatchSparsePCA.get_params()": "modules/generated/sklearn.decomposition.minibatchsparsepca.html#sklearn.decomposition.MiniBatchSparsePCA.get_params", "decomposition.MiniBatchSparsePCA.set_params()": "modules/generated/sklearn.decomposition.minibatchsparsepca.html#sklearn.decomposition.MiniBatchSparsePCA.set_params", "decomposition.MiniBatchSparsePCA.transform()": "modules/generated/sklearn.decomposition.minibatchsparsepca.html#sklearn.decomposition.MiniBatchSparsePCA.transform", "decomposition.NMF": "modules/generated/sklearn.decomposition.nmf.html#sklearn.decomposition.NMF", "decomposition.NMF()": "modules/generated/sklearn.decomposition.nmf.html", "decomposition.NMF.fit()": "modules/generated/sklearn.decomposition.nmf.html#sklearn.decomposition.NMF.fit", "decomposition.NMF.fit_transform()": "modules/generated/sklearn.decomposition.nmf.html#sklearn.decomposition.NMF.fit_transform", "decomposition.NMF.get_feature_names_out()": "modules/generated/sklearn.decomposition.nmf.html#sklearn.decomposition.NMF.get_feature_names_out", "decomposition.NMF.get_params()": "modules/generated/sklearn.decomposition.nmf.html#sklearn.decomposition.NMF.get_params", "decomposition.NMF.inverse_transform()": "modules/generated/sklearn.decomposition.nmf.html#sklearn.decomposition.NMF.inverse_transform", "decomposition.NMF.set_params()": "modules/generated/sklearn.decomposition.nmf.html#sklearn.decomposition.NMF.set_params", "decomposition.NMF.transform()": "modules/generated/sklearn.decomposition.nmf.html#sklearn.decomposition.NMF.transform", "decomposition.non_negative_factorization()": "modules/generated/sklearn.decomposition.non_negative_factorization.html#sklearn.decomposition.non_negative_factorization", "decomposition.PCA": "modules/generated/sklearn.decomposition.pca.html#sklearn.decomposition.PCA", "decomposition.PCA()": "modules/generated/sklearn.decomposition.pca.html", "decomposition.PCA.fit()": "modules/generated/sklearn.decomposition.pca.html#sklearn.decomposition.PCA.fit", "decomposition.PCA.fit_transform()": "modules/generated/sklearn.decomposition.pca.html#sklearn.decomposition.PCA.fit_transform", "decomposition.PCA.get_covariance()": "modules/generated/sklearn.decomposition.pca.html#sklearn.decomposition.PCA.get_covariance", "decomposition.PCA.get_feature_names_out()": "modules/generated/sklearn.decomposition.pca.html#sklearn.decomposition.PCA.get_feature_names_out", "decomposition.PCA.get_params()": "modules/generated/sklearn.decomposition.pca.html#sklearn.decomposition.PCA.get_params", "decomposition.PCA.get_precision()": "modules/generated/sklearn.decomposition.pca.html#sklearn.decomposition.PCA.get_precision", "decomposition.PCA.inverse_transform()": "modules/generated/sklearn.decomposition.pca.html#sklearn.decomposition.PCA.inverse_transform", "decomposition.PCA.score()": "modules/generated/sklearn.decomposition.pca.html#sklearn.decomposition.PCA.score", "decomposition.PCA.score_samples()": "modules/generated/sklearn.decomposition.pca.html#sklearn.decomposition.PCA.score_samples", "decomposition.PCA.set_params()": "modules/generated/sklearn.decomposition.pca.html#sklearn.decomposition.PCA.set_params", "decomposition.PCA.transform()": "modules/generated/sklearn.decomposition.pca.html#sklearn.decomposition.PCA.transform", "decomposition.sparse_encode()": "modules/generated/sklearn.decomposition.sparse_encode.html#sklearn.decomposition.sparse_encode", "decomposition.SparseCoder": "modules/generated/sklearn.decomposition.sparsecoder.html#sklearn.decomposition.SparseCoder", "decomposition.SparseCoder()": "modules/generated/sklearn.decomposition.sparsecoder.html", "decomposition.SparseCoder.fit()": "modules/generated/sklearn.decomposition.sparsecoder.html#sklearn.decomposition.SparseCoder.fit", "decomposition.SparseCoder.fit_transform()": "modules/generated/sklearn.decomposition.sparsecoder.html#sklearn.decomposition.SparseCoder.fit_transform", "decomposition.SparseCoder.get_feature_names_out()": "modules/generated/sklearn.decomposition.sparsecoder.html#sklearn.decomposition.SparseCoder.get_feature_names_out", "decomposition.SparseCoder.get_params()": "modules/generated/sklearn.decomposition.sparsecoder.html#sklearn.decomposition.SparseCoder.get_params", "decomposition.SparseCoder.set_params()": "modules/generated/sklearn.decomposition.sparsecoder.html#sklearn.decomposition.SparseCoder.set_params", "decomposition.SparseCoder.transform()": "modules/generated/sklearn.decomposition.sparsecoder.html#sklearn.decomposition.SparseCoder.transform", "decomposition.SparsePCA": "modules/generated/sklearn.decomposition.sparsepca.html#sklearn.decomposition.SparsePCA", "decomposition.SparsePCA()": "modules/generated/sklearn.decomposition.sparsepca.html", "decomposition.SparsePCA.fit()": "modules/generated/sklearn.decomposition.sparsepca.html#sklearn.decomposition.SparsePCA.fit", "decomposition.SparsePCA.fit_transform()": "modules/generated/sklearn.decomposition.sparsepca.html#sklearn.decomposition.SparsePCA.fit_transform", "decomposition.SparsePCA.get_feature_names_out()": "modules/generated/sklearn.decomposition.sparsepca.html#sklearn.decomposition.SparsePCA.get_feature_names_out", "decomposition.SparsePCA.get_params()": "modules/generated/sklearn.decomposition.sparsepca.html#sklearn.decomposition.SparsePCA.get_params", "decomposition.SparsePCA.set_params()": "modules/generated/sklearn.decomposition.sparsepca.html#sklearn.decomposition.SparsePCA.set_params", "decomposition.SparsePCA.transform()": "modules/generated/sklearn.decomposition.sparsepca.html#sklearn.decomposition.SparsePCA.transform", "decomposition.TruncatedSVD": "modules/generated/sklearn.decomposition.truncatedsvd.html#sklearn.decomposition.TruncatedSVD", "decomposition.TruncatedSVD()": "modules/generated/sklearn.decomposition.truncatedsvd.html", "decomposition.TruncatedSVD.fit()": "modules/generated/sklearn.decomposition.truncatedsvd.html#sklearn.decomposition.TruncatedSVD.fit", "decomposition.TruncatedSVD.fit_transform()": "modules/generated/sklearn.decomposition.truncatedsvd.html#sklearn.decomposition.TruncatedSVD.fit_transform", "decomposition.TruncatedSVD.get_feature_names_out()": "modules/generated/sklearn.decomposition.truncatedsvd.html#sklearn.decomposition.TruncatedSVD.get_feature_names_out", "decomposition.TruncatedSVD.get_params()": "modules/generated/sklearn.decomposition.truncatedsvd.html#sklearn.decomposition.TruncatedSVD.get_params", "decomposition.TruncatedSVD.inverse_transform()": "modules/generated/sklearn.decomposition.truncatedsvd.html#sklearn.decomposition.TruncatedSVD.inverse_transform", "decomposition.TruncatedSVD.set_params()": "modules/generated/sklearn.decomposition.truncatedsvd.html#sklearn.decomposition.TruncatedSVD.set_params", "decomposition.TruncatedSVD.transform()": "modules/generated/sklearn.decomposition.truncatedsvd.html#sklearn.decomposition.TruncatedSVD.transform", "discriminant_analysis.LinearDiscriminantAnalysis": "modules/generated/sklearn.discriminant_analysis.lineardiscriminantanalysis.html#sklearn.discriminant_analysis.LinearDiscriminantAnalysis", "discriminant_analysis.LinearDiscriminantAnalysis()": "modules/generated/sklearn.discriminant_analysis.lineardiscriminantanalysis.html", "discriminant_analysis.LinearDiscriminantAnalysis.decision_function()": "modules/generated/sklearn.discriminant_analysis.lineardiscriminantanalysis.html#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.decision_function", "discriminant_analysis.LinearDiscriminantAnalysis.fit()": "modules/generated/sklearn.discriminant_analysis.lineardiscriminantanalysis.html#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.fit", "discriminant_analysis.LinearDiscriminantAnalysis.fit_transform()": "modules/generated/sklearn.discriminant_analysis.lineardiscriminantanalysis.html#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.fit_transform", "discriminant_analysis.LinearDiscriminantAnalysis.get_feature_names_out()": "modules/generated/sklearn.discriminant_analysis.lineardiscriminantanalysis.html#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.get_feature_names_out", "discriminant_analysis.LinearDiscriminantAnalysis.get_params()": "modules/generated/sklearn.discriminant_analysis.lineardiscriminantanalysis.html#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.get_params", "discriminant_analysis.LinearDiscriminantAnalysis.predict()": "modules/generated/sklearn.discriminant_analysis.lineardiscriminantanalysis.html#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.predict", "discriminant_analysis.LinearDiscriminantAnalysis.predict_log_proba()": "modules/generated/sklearn.discriminant_analysis.lineardiscriminantanalysis.html#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.predict_log_proba", "discriminant_analysis.LinearDiscriminantAnalysis.predict_proba()": "modules/generated/sklearn.discriminant_analysis.lineardiscriminantanalysis.html#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.predict_proba", "discriminant_analysis.LinearDiscriminantAnalysis.score()": "modules/generated/sklearn.discriminant_analysis.lineardiscriminantanalysis.html#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.score", "discriminant_analysis.LinearDiscriminantAnalysis.set_params()": "modules/generated/sklearn.discriminant_analysis.lineardiscriminantanalysis.html#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.set_params", "discriminant_analysis.LinearDiscriminantAnalysis.transform()": "modules/generated/sklearn.discriminant_analysis.lineardiscriminantanalysis.html#sklearn.discriminant_analysis.LinearDiscriminantAnalysis.transform", "discriminant_analysis.QuadraticDiscriminantAnalysis": "modules/generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis.html#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis", "discriminant_analysis.QuadraticDiscriminantAnalysis()": "modules/generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis.html", "discriminant_analysis.QuadraticDiscriminantAnalysis.decision_function()": "modules/generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis.html#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.decision_function", "discriminant_analysis.QuadraticDiscriminantAnalysis.fit()": "modules/generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis.html#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.fit", "discriminant_analysis.QuadraticDiscriminantAnalysis.get_params()": "modules/generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis.html#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.get_params", "discriminant_analysis.QuadraticDiscriminantAnalysis.predict()": "modules/generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis.html#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict", "discriminant_analysis.QuadraticDiscriminantAnalysis.predict_log_proba()": "modules/generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis.html#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_log_proba", "discriminant_analysis.QuadraticDiscriminantAnalysis.predict_proba()": "modules/generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis.html#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_proba", "discriminant_analysis.QuadraticDiscriminantAnalysis.score()": "modules/generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis.html#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.score", "discriminant_analysis.QuadraticDiscriminantAnalysis.set_params()": "modules/generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis.html#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.set_params", "dummy.DummyClassifier": "modules/generated/sklearn.dummy.dummyclassifier.html#sklearn.dummy.DummyClassifier", "dummy.DummyClassifier()": "modules/generated/sklearn.dummy.dummyclassifier.html", "dummy.DummyClassifier.fit()": "modules/generated/sklearn.dummy.dummyclassifier.html#sklearn.dummy.DummyClassifier.fit", "dummy.DummyClassifier.get_params()": "modules/generated/sklearn.dummy.dummyclassifier.html#sklearn.dummy.DummyClassifier.get_params", "dummy.DummyClassifier.predict()": "modules/generated/sklearn.dummy.dummyclassifier.html#sklearn.dummy.DummyClassifier.predict", "dummy.DummyClassifier.predict_log_proba()": "modules/generated/sklearn.dummy.dummyclassifier.html#sklearn.dummy.DummyClassifier.predict_log_proba", "dummy.DummyClassifier.predict_proba()": "modules/generated/sklearn.dummy.dummyclassifier.html#sklearn.dummy.DummyClassifier.predict_proba", "dummy.DummyClassifier.score()": "modules/generated/sklearn.dummy.dummyclassifier.html#sklearn.dummy.DummyClassifier.score", "dummy.DummyClassifier.set_params()": "modules/generated/sklearn.dummy.dummyclassifier.html#sklearn.dummy.DummyClassifier.set_params", "dummy.DummyRegressor": "modules/generated/sklearn.dummy.dummyregressor.html#sklearn.dummy.DummyRegressor", "dummy.DummyRegressor()": "modules/generated/sklearn.dummy.dummyregressor.html", "dummy.DummyRegressor.fit()": "modules/generated/sklearn.dummy.dummyregressor.html#sklearn.dummy.DummyRegressor.fit", "dummy.DummyRegressor.get_params()": "modules/generated/sklearn.dummy.dummyregressor.html#sklearn.dummy.DummyRegressor.get_params", "dummy.DummyRegressor.predict()": "modules/generated/sklearn.dummy.dummyregressor.html#sklearn.dummy.DummyRegressor.predict", "dummy.DummyRegressor.score()": "modules/generated/sklearn.dummy.dummyregressor.html#sklearn.dummy.DummyRegressor.score", "dummy.DummyRegressor.set_params()": "modules/generated/sklearn.dummy.dummyregressor.html#sklearn.dummy.DummyRegressor.set_params", "ensemble.AdaBoostClassifier": "modules/generated/sklearn.ensemble.adaboostclassifier.html#sklearn.ensemble.AdaBoostClassifier", "ensemble.AdaBoostClassifier()": "modules/generated/sklearn.ensemble.adaboostclassifier.html", "ensemble.AdaBoostClassifier.decision_function()": "modules/generated/sklearn.ensemble.adaboostclassifier.html#sklearn.ensemble.AdaBoostClassifier.decision_function", "ensemble.AdaBoostClassifier.fit()": "modules/generated/sklearn.ensemble.adaboostclassifier.html#sklearn.ensemble.AdaBoostClassifier.fit", "ensemble.AdaBoostClassifier.get_params()": "modules/generated/sklearn.ensemble.adaboostclassifier.html#sklearn.ensemble.AdaBoostClassifier.get_params", "ensemble.AdaBoostClassifier.predict()": "modules/generated/sklearn.ensemble.adaboostclassifier.html#sklearn.ensemble.AdaBoostClassifier.predict", "ensemble.AdaBoostClassifier.predict_log_proba()": "modules/generated/sklearn.ensemble.adaboostclassifier.html#sklearn.ensemble.AdaBoostClassifier.predict_log_proba", "ensemble.AdaBoostClassifier.predict_proba()": "modules/generated/sklearn.ensemble.adaboostclassifier.html#sklearn.ensemble.AdaBoostClassifier.predict_proba", "ensemble.AdaBoostClassifier.score()": "modules/generated/sklearn.ensemble.adaboostclassifier.html#sklearn.ensemble.AdaBoostClassifier.score", "ensemble.AdaBoostClassifier.set_params()": "modules/generated/sklearn.ensemble.adaboostclassifier.html#sklearn.ensemble.AdaBoostClassifier.set_params", "ensemble.AdaBoostClassifier.staged_decision_function()": "modules/generated/sklearn.ensemble.adaboostclassifier.html#sklearn.ensemble.AdaBoostClassifier.staged_decision_function", "ensemble.AdaBoostClassifier.staged_predict()": "modules/generated/sklearn.ensemble.adaboostclassifier.html#sklearn.ensemble.AdaBoostClassifier.staged_predict", "ensemble.AdaBoostClassifier.staged_predict_proba()": "modules/generated/sklearn.ensemble.adaboostclassifier.html#sklearn.ensemble.AdaBoostClassifier.staged_predict_proba", "ensemble.AdaBoostClassifier.staged_score()": "modules/generated/sklearn.ensemble.adaboostclassifier.html#sklearn.ensemble.AdaBoostClassifier.staged_score", "ensemble.AdaBoostRegressor": "modules/generated/sklearn.ensemble.adaboostregressor.html#sklearn.ensemble.AdaBoostRegressor", "ensemble.AdaBoostRegressor()": "modules/generated/sklearn.ensemble.adaboostregressor.html", "ensemble.AdaBoostRegressor.fit()": "modules/generated/sklearn.ensemble.adaboostregressor.html#sklearn.ensemble.AdaBoostRegressor.fit", "ensemble.AdaBoostRegressor.get_params()": "modules/generated/sklearn.ensemble.adaboostregressor.html#sklearn.ensemble.AdaBoostRegressor.get_params", "ensemble.AdaBoostRegressor.predict()": "modules/generated/sklearn.ensemble.adaboostregressor.html#sklearn.ensemble.AdaBoostRegressor.predict", "ensemble.AdaBoostRegressor.score()": "modules/generated/sklearn.ensemble.adaboostregressor.html#sklearn.ensemble.AdaBoostRegressor.score", "ensemble.AdaBoostRegressor.set_params()": "modules/generated/sklearn.ensemble.adaboostregressor.html#sklearn.ensemble.AdaBoostRegressor.set_params", "ensemble.AdaBoostRegressor.staged_predict()": "modules/generated/sklearn.ensemble.adaboostregressor.html#sklearn.ensemble.AdaBoostRegressor.staged_predict", "ensemble.AdaBoostRegressor.staged_score()": "modules/generated/sklearn.ensemble.adaboostregressor.html#sklearn.ensemble.AdaBoostRegressor.staged_score", "ensemble.BaggingClassifier": "modules/generated/sklearn.ensemble.baggingclassifier.html#sklearn.ensemble.BaggingClassifier", "ensemble.BaggingClassifier()": "modules/generated/sklearn.ensemble.baggingclassifier.html", "ensemble.BaggingClassifier.decision_function()": "modules/generated/sklearn.ensemble.baggingclassifier.html#sklearn.ensemble.BaggingClassifier.decision_function", "ensemble.BaggingClassifier.fit()": "modules/generated/sklearn.ensemble.baggingclassifier.html#sklearn.ensemble.BaggingClassifier.fit", "ensemble.BaggingClassifier.get_params()": "modules/generated/sklearn.ensemble.baggingclassifier.html#sklearn.ensemble.BaggingClassifier.get_params", "ensemble.BaggingClassifier.predict()": "modules/generated/sklearn.ensemble.baggingclassifier.html#sklearn.ensemble.BaggingClassifier.predict", "ensemble.BaggingClassifier.predict_log_proba()": "modules/generated/sklearn.ensemble.baggingclassifier.html#sklearn.ensemble.BaggingClassifier.predict_log_proba", "ensemble.BaggingClassifier.predict_proba()": "modules/generated/sklearn.ensemble.baggingclassifier.html#sklearn.ensemble.BaggingClassifier.predict_proba", "ensemble.BaggingClassifier.score()": "modules/generated/sklearn.ensemble.baggingclassifier.html#sklearn.ensemble.BaggingClassifier.score", "ensemble.BaggingClassifier.set_params()": "modules/generated/sklearn.ensemble.baggingclassifier.html#sklearn.ensemble.BaggingClassifier.set_params", "ensemble.BaggingRegressor": "modules/generated/sklearn.ensemble.baggingregressor.html#sklearn.ensemble.BaggingRegressor", "ensemble.BaggingRegressor()": "modules/generated/sklearn.ensemble.baggingregressor.html", "ensemble.BaggingRegressor.fit()": "modules/generated/sklearn.ensemble.baggingregressor.html#sklearn.ensemble.BaggingRegressor.fit", "ensemble.BaggingRegressor.get_params()": "modules/generated/sklearn.ensemble.baggingregressor.html#sklearn.ensemble.BaggingRegressor.get_params", "ensemble.BaggingRegressor.predict()": "modules/generated/sklearn.ensemble.baggingregressor.html#sklearn.ensemble.BaggingRegressor.predict", "ensemble.BaggingRegressor.score()": "modules/generated/sklearn.ensemble.baggingregressor.html#sklearn.ensemble.BaggingRegressor.score", "ensemble.BaggingRegressor.set_params()": "modules/generated/sklearn.ensemble.baggingregressor.html#sklearn.ensemble.BaggingRegressor.set_params", "ensemble.ExtraTreesClassifier": "modules/generated/sklearn.ensemble.extratreesclassifier.html#sklearn.ensemble.ExtraTreesClassifier", "ensemble.ExtraTreesClassifier()": "modules/generated/sklearn.ensemble.extratreesclassifier.html", "ensemble.ExtraTreesClassifier.apply()": "modules/generated/sklearn.ensemble.extratreesclassifier.html#sklearn.ensemble.ExtraTreesClassifier.apply", "ensemble.ExtraTreesClassifier.decision_path()": "modules/generated/sklearn.ensemble.extratreesclassifier.html#sklearn.ensemble.ExtraTreesClassifier.decision_path", "ensemble.ExtraTreesClassifier.fit()": "modules/generated/sklearn.ensemble.extratreesclassifier.html#sklearn.ensemble.ExtraTreesClassifier.fit", "ensemble.ExtraTreesClassifier.get_params()": "modules/generated/sklearn.ensemble.extratreesclassifier.html#sklearn.ensemble.ExtraTreesClassifier.get_params", "ensemble.ExtraTreesClassifier.predict()": "modules/generated/sklearn.ensemble.extratreesclassifier.html#sklearn.ensemble.ExtraTreesClassifier.predict", "ensemble.ExtraTreesClassifier.predict_log_proba()": "modules/generated/sklearn.ensemble.extratreesclassifier.html#sklearn.ensemble.ExtraTreesClassifier.predict_log_proba", "ensemble.ExtraTreesClassifier.predict_proba()": "modules/generated/sklearn.ensemble.extratreesclassifier.html#sklearn.ensemble.ExtraTreesClassifier.predict_proba", "ensemble.ExtraTreesClassifier.score()": "modules/generated/sklearn.ensemble.extratreesclassifier.html#sklearn.ensemble.ExtraTreesClassifier.score", "ensemble.ExtraTreesClassifier.set_params()": "modules/generated/sklearn.ensemble.extratreesclassifier.html#sklearn.ensemble.ExtraTreesClassifier.set_params", "ensemble.ExtraTreesRegressor": "modules/generated/sklearn.ensemble.extratreesregressor.html#sklearn.ensemble.ExtraTreesRegressor", "ensemble.ExtraTreesRegressor()": "modules/generated/sklearn.ensemble.extratreesregressor.html", "ensemble.ExtraTreesRegressor.apply()": "modules/generated/sklearn.ensemble.extratreesregressor.html#sklearn.ensemble.ExtraTreesRegressor.apply", "ensemble.ExtraTreesRegressor.decision_path()": "modules/generated/sklearn.ensemble.extratreesregressor.html#sklearn.ensemble.ExtraTreesRegressor.decision_path", "ensemble.ExtraTreesRegressor.fit()": "modules/generated/sklearn.ensemble.extratreesregressor.html#sklearn.ensemble.ExtraTreesRegressor.fit", "ensemble.ExtraTreesRegressor.get_params()": "modules/generated/sklearn.ensemble.extratreesregressor.html#sklearn.ensemble.ExtraTreesRegressor.get_params", "ensemble.ExtraTreesRegressor.predict()": "modules/generated/sklearn.ensemble.extratreesregressor.html#sklearn.ensemble.ExtraTreesRegressor.predict", "ensemble.ExtraTreesRegressor.score()": "modules/generated/sklearn.ensemble.extratreesregressor.html#sklearn.ensemble.ExtraTreesRegressor.score", "ensemble.ExtraTreesRegressor.set_params()": "modules/generated/sklearn.ensemble.extratreesregressor.html#sklearn.ensemble.ExtraTreesRegressor.set_params", "ensemble.GradientBoostingClassifier": "modules/generated/sklearn.ensemble.gradientboostingclassifier.html#sklearn.ensemble.GradientBoostingClassifier", "ensemble.GradientBoostingClassifier()": "modules/generated/sklearn.ensemble.gradientboostingclassifier.html", "ensemble.GradientBoostingClassifier.apply()": "modules/generated/sklearn.ensemble.gradientboostingclassifier.html#sklearn.ensemble.GradientBoostingClassifier.apply", "ensemble.GradientBoostingClassifier.decision_function()": "modules/generated/sklearn.ensemble.gradientboostingclassifier.html#sklearn.ensemble.GradientBoostingClassifier.decision_function", "ensemble.GradientBoostingClassifier.fit()": "modules/generated/sklearn.ensemble.gradientboostingclassifier.html#sklearn.ensemble.GradientBoostingClassifier.fit", "ensemble.GradientBoostingClassifier.get_params()": "modules/generated/sklearn.ensemble.gradientboostingclassifier.html#sklearn.ensemble.GradientBoostingClassifier.get_params", "ensemble.GradientBoostingClassifier.predict()": "modules/generated/sklearn.ensemble.gradientboostingclassifier.html#sklearn.ensemble.GradientBoostingClassifier.predict", "ensemble.GradientBoostingClassifier.predict_log_proba()": "modules/generated/sklearn.ensemble.gradientboostingclassifier.html#sklearn.ensemble.GradientBoostingClassifier.predict_log_proba", "ensemble.GradientBoostingClassifier.predict_proba()": "modules/generated/sklearn.ensemble.gradientboostingclassifier.html#sklearn.ensemble.GradientBoostingClassifier.predict_proba", "ensemble.GradientBoostingClassifier.score()": "modules/generated/sklearn.ensemble.gradientboostingclassifier.html#sklearn.ensemble.GradientBoostingClassifier.score", "ensemble.GradientBoostingClassifier.set_params()": "modules/generated/sklearn.ensemble.gradientboostingclassifier.html#sklearn.ensemble.GradientBoostingClassifier.set_params", "ensemble.GradientBoostingClassifier.staged_decision_function()": "modules/generated/sklearn.ensemble.gradientboostingclassifier.html#sklearn.ensemble.GradientBoostingClassifier.staged_decision_function", "ensemble.GradientBoostingClassifier.staged_predict()": "modules/generated/sklearn.ensemble.gradientboostingclassifier.html#sklearn.ensemble.GradientBoostingClassifier.staged_predict", "ensemble.GradientBoostingClassifier.staged_predict_proba()": "modules/generated/sklearn.ensemble.gradientboostingclassifier.html#sklearn.ensemble.GradientBoostingClassifier.staged_predict_proba", "ensemble.GradientBoostingRegressor": "modules/generated/sklearn.ensemble.gradientboostingregressor.html#sklearn.ensemble.GradientBoostingRegressor", "ensemble.GradientBoostingRegressor()": "modules/generated/sklearn.ensemble.gradientboostingregressor.html", "ensemble.GradientBoostingRegressor.apply()": "modules/generated/sklearn.ensemble.gradientboostingregressor.html#sklearn.ensemble.GradientBoostingRegressor.apply", "ensemble.GradientBoostingRegressor.fit()": "modules/generated/sklearn.ensemble.gradientboostingregressor.html#sklearn.ensemble.GradientBoostingRegressor.fit", "ensemble.GradientBoostingRegressor.get_params()": "modules/generated/sklearn.ensemble.gradientboostingregressor.html#sklearn.ensemble.GradientBoostingRegressor.get_params", "ensemble.GradientBoostingRegressor.predict()": "modules/generated/sklearn.ensemble.gradientboostingregressor.html#sklearn.ensemble.GradientBoostingRegressor.predict", "ensemble.GradientBoostingRegressor.score()": "modules/generated/sklearn.ensemble.gradientboostingregressor.html#sklearn.ensemble.GradientBoostingRegressor.score", "ensemble.GradientBoostingRegressor.set_params()": "modules/generated/sklearn.ensemble.gradientboostingregressor.html#sklearn.ensemble.GradientBoostingRegressor.set_params", "ensemble.GradientBoostingRegressor.staged_predict()": "modules/generated/sklearn.ensemble.gradientboostingregressor.html#sklearn.ensemble.GradientBoostingRegressor.staged_predict", "ensemble.HistGradientBoostingClassifier": "modules/generated/sklearn.ensemble.histgradientboostingclassifier.html#sklearn.ensemble.HistGradientBoostingClassifier", "ensemble.HistGradientBoostingClassifier()": "modules/generated/sklearn.ensemble.histgradientboostingclassifier.html", "ensemble.HistGradientBoostingClassifier.decision_function()": "modules/generated/sklearn.ensemble.histgradientboostingclassifier.html#sklearn.ensemble.HistGradientBoostingClassifier.decision_function", "ensemble.HistGradientBoostingClassifier.fit()": "modules/generated/sklearn.ensemble.histgradientboostingclassifier.html#sklearn.ensemble.HistGradientBoostingClassifier.fit", "ensemble.HistGradientBoostingClassifier.get_params()": "modules/generated/sklearn.ensemble.histgradientboostingclassifier.html#sklearn.ensemble.HistGradientBoostingClassifier.get_params", "ensemble.HistGradientBoostingClassifier.predict()": "modules/generated/sklearn.ensemble.histgradientboostingclassifier.html#sklearn.ensemble.HistGradientBoostingClassifier.predict", "ensemble.HistGradientBoostingClassifier.predict_proba()": "modules/generated/sklearn.ensemble.histgradientboostingclassifier.html#sklearn.ensemble.HistGradientBoostingClassifier.predict_proba", "ensemble.HistGradientBoostingClassifier.score()": "modules/generated/sklearn.ensemble.histgradientboostingclassifier.html#sklearn.ensemble.HistGradientBoostingClassifier.score", "ensemble.HistGradientBoostingClassifier.set_params()": "modules/generated/sklearn.ensemble.histgradientboostingclassifier.html#sklearn.ensemble.HistGradientBoostingClassifier.set_params", "ensemble.HistGradientBoostingClassifier.staged_decision_function()": "modules/generated/sklearn.ensemble.histgradientboostingclassifier.html#sklearn.ensemble.HistGradientBoostingClassifier.staged_decision_function", "ensemble.HistGradientBoostingClassifier.staged_predict()": "modules/generated/sklearn.ensemble.histgradientboostingclassifier.html#sklearn.ensemble.HistGradientBoostingClassifier.staged_predict", "ensemble.HistGradientBoostingClassifier.staged_predict_proba()": "modules/generated/sklearn.ensemble.histgradientboostingclassifier.html#sklearn.ensemble.HistGradientBoostingClassifier.staged_predict_proba", "ensemble.HistGradientBoostingRegressor": "modules/generated/sklearn.ensemble.histgradientboostingregressor.html#sklearn.ensemble.HistGradientBoostingRegressor", "ensemble.HistGradientBoostingRegressor()": "modules/generated/sklearn.ensemble.histgradientboostingregressor.html", "ensemble.HistGradientBoostingRegressor.fit()": "modules/generated/sklearn.ensemble.histgradientboostingregressor.html#sklearn.ensemble.HistGradientBoostingRegressor.fit", "ensemble.HistGradientBoostingRegressor.get_params()": "modules/generated/sklearn.ensemble.histgradientboostingregressor.html#sklearn.ensemble.HistGradientBoostingRegressor.get_params", "ensemble.HistGradientBoostingRegressor.predict()": "modules/generated/sklearn.ensemble.histgradientboostingregressor.html#sklearn.ensemble.HistGradientBoostingRegressor.predict", "ensemble.HistGradientBoostingRegressor.score()": "modules/generated/sklearn.ensemble.histgradientboostingregressor.html#sklearn.ensemble.HistGradientBoostingRegressor.score", "ensemble.HistGradientBoostingRegressor.set_params()": "modules/generated/sklearn.ensemble.histgradientboostingregressor.html#sklearn.ensemble.HistGradientBoostingRegressor.set_params", "ensemble.HistGradientBoostingRegressor.staged_predict()": "modules/generated/sklearn.ensemble.histgradientboostingregressor.html#sklearn.ensemble.HistGradientBoostingRegressor.staged_predict", "ensemble.IsolationForest": "modules/generated/sklearn.ensemble.isolationforest.html#sklearn.ensemble.IsolationForest", "ensemble.IsolationForest()": "modules/generated/sklearn.ensemble.isolationforest.html", "ensemble.IsolationForest.decision_function()": "modules/generated/sklearn.ensemble.isolationforest.html#sklearn.ensemble.IsolationForest.decision_function", "ensemble.IsolationForest.fit()": "modules/generated/sklearn.ensemble.isolationforest.html#sklearn.ensemble.IsolationForest.fit", "ensemble.IsolationForest.fit_predict()": "modules/generated/sklearn.ensemble.isolationforest.html#sklearn.ensemble.IsolationForest.fit_predict", "ensemble.IsolationForest.get_params()": "modules/generated/sklearn.ensemble.isolationforest.html#sklearn.ensemble.IsolationForest.get_params", "ensemble.IsolationForest.predict()": "modules/generated/sklearn.ensemble.isolationforest.html#sklearn.ensemble.IsolationForest.predict", "ensemble.IsolationForest.score_samples()": "modules/generated/sklearn.ensemble.isolationforest.html#sklearn.ensemble.IsolationForest.score_samples", "ensemble.IsolationForest.set_params()": "modules/generated/sklearn.ensemble.isolationforest.html#sklearn.ensemble.IsolationForest.set_params", "ensemble.RandomForestClassifier": "modules/generated/sklearn.ensemble.randomforestclassifier.html#sklearn.ensemble.RandomForestClassifier", "ensemble.RandomForestClassifier()": "modules/generated/sklearn.ensemble.randomforestclassifier.html", "ensemble.RandomForestClassifier.apply()": "modules/generated/sklearn.ensemble.randomforestclassifier.html#sklearn.ensemble.RandomForestClassifier.apply", "ensemble.RandomForestClassifier.decision_path()": "modules/generated/sklearn.ensemble.randomforestclassifier.html#sklearn.ensemble.RandomForestClassifier.decision_path", "ensemble.RandomForestClassifier.fit()": "modules/generated/sklearn.ensemble.randomforestclassifier.html#sklearn.ensemble.RandomForestClassifier.fit", "ensemble.RandomForestClassifier.get_params()": "modules/generated/sklearn.ensemble.randomforestclassifier.html#sklearn.ensemble.RandomForestClassifier.get_params", "ensemble.RandomForestClassifier.predict()": "modules/generated/sklearn.ensemble.randomforestclassifier.html#sklearn.ensemble.RandomForestClassifier.predict", "ensemble.RandomForestClassifier.predict_log_proba()": "modules/generated/sklearn.ensemble.randomforestclassifier.html#sklearn.ensemble.RandomForestClassifier.predict_log_proba", "ensemble.RandomForestClassifier.predict_proba()": "modules/generated/sklearn.ensemble.randomforestclassifier.html#sklearn.ensemble.RandomForestClassifier.predict_proba", "ensemble.RandomForestClassifier.score()": "modules/generated/sklearn.ensemble.randomforestclassifier.html#sklearn.ensemble.RandomForestClassifier.score", "ensemble.RandomForestClassifier.set_params()": "modules/generated/sklearn.ensemble.randomforestclassifier.html#sklearn.ensemble.RandomForestClassifier.set_params", "ensemble.RandomForestRegressor": "modules/generated/sklearn.ensemble.randomforestregressor.html#sklearn.ensemble.RandomForestRegressor", "ensemble.RandomForestRegressor()": "modules/generated/sklearn.ensemble.randomforestregressor.html", "ensemble.RandomForestRegressor.apply()": "modules/generated/sklearn.ensemble.randomforestregressor.html#sklearn.ensemble.RandomForestRegressor.apply", "ensemble.RandomForestRegressor.decision_path()": "modules/generated/sklearn.ensemble.randomforestregressor.html#sklearn.ensemble.RandomForestRegressor.decision_path", "ensemble.RandomForestRegressor.fit()": "modules/generated/sklearn.ensemble.randomforestregressor.html#sklearn.ensemble.RandomForestRegressor.fit", "ensemble.RandomForestRegressor.get_params()": "modules/generated/sklearn.ensemble.randomforestregressor.html#sklearn.ensemble.RandomForestRegressor.get_params", "ensemble.RandomForestRegressor.predict()": "modules/generated/sklearn.ensemble.randomforestregressor.html#sklearn.ensemble.RandomForestRegressor.predict", "ensemble.RandomForestRegressor.score()": "modules/generated/sklearn.ensemble.randomforestregressor.html#sklearn.ensemble.RandomForestRegressor.score", "ensemble.RandomForestRegressor.set_params()": "modules/generated/sklearn.ensemble.randomforestregressor.html#sklearn.ensemble.RandomForestRegressor.set_params", "ensemble.RandomTreesEmbedding": "modules/generated/sklearn.ensemble.randomtreesembedding.html#sklearn.ensemble.RandomTreesEmbedding", "ensemble.RandomTreesEmbedding()": "modules/generated/sklearn.ensemble.randomtreesembedding.html", "ensemble.RandomTreesEmbedding.apply()": "modules/generated/sklearn.ensemble.randomtreesembedding.html#sklearn.ensemble.RandomTreesEmbedding.apply", "ensemble.RandomTreesEmbedding.decision_path()": "modules/generated/sklearn.ensemble.randomtreesembedding.html#sklearn.ensemble.RandomTreesEmbedding.decision_path", "ensemble.RandomTreesEmbedding.fit()": "modules/generated/sklearn.ensemble.randomtreesembedding.html#sklearn.ensemble.RandomTreesEmbedding.fit", "ensemble.RandomTreesEmbedding.fit_transform()": "modules/generated/sklearn.ensemble.randomtreesembedding.html#sklearn.ensemble.RandomTreesEmbedding.fit_transform", "ensemble.RandomTreesEmbedding.get_feature_names_out()": "modules/generated/sklearn.ensemble.randomtreesembedding.html#sklearn.ensemble.RandomTreesEmbedding.get_feature_names_out", "ensemble.RandomTreesEmbedding.get_params()": "modules/generated/sklearn.ensemble.randomtreesembedding.html#sklearn.ensemble.RandomTreesEmbedding.get_params", "ensemble.RandomTreesEmbedding.set_params()": "modules/generated/sklearn.ensemble.randomtreesembedding.html#sklearn.ensemble.RandomTreesEmbedding.set_params", "ensemble.RandomTreesEmbedding.transform()": "modules/generated/sklearn.ensemble.randomtreesembedding.html#sklearn.ensemble.RandomTreesEmbedding.transform", "ensemble.StackingClassifier": "modules/generated/sklearn.ensemble.stackingclassifier.html#sklearn.ensemble.StackingClassifier", "ensemble.StackingClassifier()": "modules/generated/sklearn.ensemble.stackingclassifier.html", "ensemble.StackingClassifier.decision_function()": "modules/generated/sklearn.ensemble.stackingclassifier.html#sklearn.ensemble.StackingClassifier.decision_function", "ensemble.StackingClassifier.fit()": "modules/generated/sklearn.ensemble.stackingclassifier.html#sklearn.ensemble.StackingClassifier.fit", "ensemble.StackingClassifier.fit_transform()": "modules/generated/sklearn.ensemble.stackingclassifier.html#sklearn.ensemble.StackingClassifier.fit_transform", "ensemble.StackingClassifier.get_feature_names_out()": "modules/generated/sklearn.ensemble.stackingclassifier.html#sklearn.ensemble.StackingClassifier.get_feature_names_out", "ensemble.StackingClassifier.get_params()": "modules/generated/sklearn.ensemble.stackingclassifier.html#sklearn.ensemble.StackingClassifier.get_params", "ensemble.StackingClassifier.predict()": "modules/generated/sklearn.ensemble.stackingclassifier.html#sklearn.ensemble.StackingClassifier.predict", "ensemble.StackingClassifier.predict_proba()": "modules/generated/sklearn.ensemble.stackingclassifier.html#sklearn.ensemble.StackingClassifier.predict_proba", "ensemble.StackingClassifier.score()": "modules/generated/sklearn.ensemble.stackingclassifier.html#sklearn.ensemble.StackingClassifier.score", "ensemble.StackingClassifier.set_params()": "modules/generated/sklearn.ensemble.stackingclassifier.html#sklearn.ensemble.StackingClassifier.set_params", "ensemble.StackingClassifier.transform()": "modules/generated/sklearn.ensemble.stackingclassifier.html#sklearn.ensemble.StackingClassifier.transform", "ensemble.StackingRegressor": "modules/generated/sklearn.ensemble.stackingregressor.html#sklearn.ensemble.StackingRegressor", "ensemble.StackingRegressor()": "modules/generated/sklearn.ensemble.stackingregressor.html", "ensemble.StackingRegressor.fit()": "modules/generated/sklearn.ensemble.stackingregressor.html#sklearn.ensemble.StackingRegressor.fit", "ensemble.StackingRegressor.fit_transform()": "modules/generated/sklearn.ensemble.stackingregressor.html#sklearn.ensemble.StackingRegressor.fit_transform", "ensemble.StackingRegressor.get_feature_names_out()": "modules/generated/sklearn.ensemble.stackingregressor.html#sklearn.ensemble.StackingRegressor.get_feature_names_out", "ensemble.StackingRegressor.get_params()": "modules/generated/sklearn.ensemble.stackingregressor.html#sklearn.ensemble.StackingRegressor.get_params", "ensemble.StackingRegressor.predict()": "modules/generated/sklearn.ensemble.stackingregressor.html#sklearn.ensemble.StackingRegressor.predict", "ensemble.StackingRegressor.score()": "modules/generated/sklearn.ensemble.stackingregressor.html#sklearn.ensemble.StackingRegressor.score", "ensemble.StackingRegressor.set_params()": "modules/generated/sklearn.ensemble.stackingregressor.html#sklearn.ensemble.StackingRegressor.set_params", "ensemble.StackingRegressor.transform()": "modules/generated/sklearn.ensemble.stackingregressor.html#sklearn.ensemble.StackingRegressor.transform", "ensemble.VotingClassifier": "modules/generated/sklearn.ensemble.votingclassifier.html#sklearn.ensemble.VotingClassifier", "ensemble.VotingClassifier()": "modules/generated/sklearn.ensemble.votingclassifier.html", "ensemble.VotingClassifier.fit()": "modules/generated/sklearn.ensemble.votingclassifier.html#sklearn.ensemble.VotingClassifier.fit", "ensemble.VotingClassifier.fit_transform()": "modules/generated/sklearn.ensemble.votingclassifier.html#sklearn.ensemble.VotingClassifier.fit_transform", "ensemble.VotingClassifier.get_feature_names_out()": "modules/generated/sklearn.ensemble.votingclassifier.html#sklearn.ensemble.VotingClassifier.get_feature_names_out", "ensemble.VotingClassifier.get_params()": "modules/generated/sklearn.ensemble.votingclassifier.html#sklearn.ensemble.VotingClassifier.get_params", "ensemble.VotingClassifier.predict()": "modules/generated/sklearn.ensemble.votingclassifier.html#sklearn.ensemble.VotingClassifier.predict", "ensemble.VotingClassifier.predict_proba()": "modules/generated/sklearn.ensemble.votingclassifier.html#sklearn.ensemble.VotingClassifier.predict_proba", "ensemble.VotingClassifier.score()": "modules/generated/sklearn.ensemble.votingclassifier.html#sklearn.ensemble.VotingClassifier.score", "ensemble.VotingClassifier.set_params()": "modules/generated/sklearn.ensemble.votingclassifier.html#sklearn.ensemble.VotingClassifier.set_params", "ensemble.VotingClassifier.transform()": "modules/generated/sklearn.ensemble.votingclassifier.html#sklearn.ensemble.VotingClassifier.transform", "ensemble.VotingRegressor": "modules/generated/sklearn.ensemble.votingregressor.html#sklearn.ensemble.VotingRegressor", "ensemble.VotingRegressor()": "modules/generated/sklearn.ensemble.votingregressor.html", "ensemble.VotingRegressor.fit()": "modules/generated/sklearn.ensemble.votingregressor.html#sklearn.ensemble.VotingRegressor.fit", "ensemble.VotingRegressor.fit_transform()": "modules/generated/sklearn.ensemble.votingregressor.html#sklearn.ensemble.VotingRegressor.fit_transform", "ensemble.VotingRegressor.get_feature_names_out()": "modules/generated/sklearn.ensemble.votingregressor.html#sklearn.ensemble.VotingRegressor.get_feature_names_out", "ensemble.VotingRegressor.get_params()": "modules/generated/sklearn.ensemble.votingregressor.html#sklearn.ensemble.VotingRegressor.get_params", "ensemble.VotingRegressor.predict()": "modules/generated/sklearn.ensemble.votingregressor.html#sklearn.ensemble.VotingRegressor.predict", "ensemble.VotingRegressor.score()": "modules/generated/sklearn.ensemble.votingregressor.html#sklearn.ensemble.VotingRegressor.score", "ensemble.VotingRegressor.set_params()": "modules/generated/sklearn.ensemble.votingregressor.html#sklearn.ensemble.VotingRegressor.set_params", "ensemble.VotingRegressor.transform()": "modules/generated/sklearn.ensemble.votingregressor.html#sklearn.ensemble.VotingRegressor.transform", "Example: A demo of K-Means clustering on the handwritten digits data": "auto_examples/cluster/plot_kmeans_digits.html", "Example: A demo of structured Ward hierarchical clustering on an image of coins": "auto_examples/cluster/plot_coin_ward_segmentation.html", "Example: A demo of the mean-shift clustering algorithm": "auto_examples/cluster/plot_mean_shift.html", "Example: A demo of the Spectral Biclustering algorithm": "auto_examples/bicluster/plot_spectral_biclustering.html", "Example: A demo of the Spectral Co-Clustering algorithm": "auto_examples/bicluster/plot_spectral_coclustering.html", "Example: Adjustment for chance in clustering performance evaluation": "auto_examples/cluster/plot_adjusted_for_chance_measures.html", "Example: Advanced Plotting With Partial Dependence": "auto_examples/miscellaneous/plot_partial_dependence_visualization_api.html", "Example: Agglomerative clustering with and without structure": "auto_examples/cluster/plot_agglomerative_clustering.html", "Example: Agglomerative clustering with different metrics": "auto_examples/cluster/plot_agglomerative_clustering_metrics.html", "Example: An example of K-Means++ initialization": "auto_examples/cluster/plot_kmeans_plusplus.html", "Example: Approximate nearest neighbors in TSNE": "auto_examples/neighbors/approximate_nearest_neighbors.html", "Example: Balance model complexity and cross-validated score": "auto_examples/model_selection/plot_grid_search_refit_callable.html", "Example: Beta-divergence loss functions": "auto_examples/decomposition/plot_beta_divergence.html", "Example: Biclustering documents with the Spectral Co-clustering algorithm": "auto_examples/bicluster/plot_bicluster_newsgroups.html", "Example: Bisecting K-Means and Regular K-Means Performance Comparison": "auto_examples/cluster/plot_bisect_kmeans.html", "Example: Blind source separation using FastICA": "auto_examples/decomposition/plot_ica_blind_source_separation.html", "Example: Caching nearest neighbors": "auto_examples/neighbors/plot_caching_nearest_neighbors.html", "Example: Categorical Feature Support in Gradient Boosting": "auto_examples/ensemble/plot_gradient_boosting_categorical.html", "Example: Classification of text documents using sparse features": "auto_examples/text/plot_document_classification_20newsgroups.html", "Example: Classifier Chain": "auto_examples/multioutput/plot_classifier_chain_yeast.html", "Example: Classifier comparison": "auto_examples/classification/plot_classifier_comparison.html", "Example: Clustering text documents using k-means": "auto_examples/text/plot_document_clustering.html", "Example: Color Quantization using K-Means": "auto_examples/cluster/plot_color_quantization.html", "Example: Column Transformer with Heterogeneous Data Sources": "auto_examples/compose/plot_column_transformer.html", "Example: Column Transformer with Mixed Types": "auto_examples/compose/plot_column_transformer_mixed_types.html", "Example: Combine predictors using stacking": "auto_examples/ensemble/plot_stack_predictors.html", "Example: Common pitfalls in the interpretation of coefficients of linear models": "auto_examples/inspection/plot_linear_model_coefficient_interpretation.html", "Example: Compact estimator representations": "auto_examples/miscellaneous/plot_changed_only_pprint_parameter.html", "Example: Compare BIRCH and MiniBatchKMeans": "auto_examples/cluster/plot_birch_vs_minibatchkmeans.html", "Example: Compare cross decomposition methods": "auto_examples/cross_decomposition/plot_compare_cross_decomposition.html", "Example: Compare Stochastic learning strategies for MLPClassifier": "auto_examples/neural_networks/plot_mlp_training_curves.html", "Example: Compare the effect of different scalers on data with outliers": "auto_examples/preprocessing/plot_all_scaling.html", "Example: Comparing anomaly detection algorithms for outlier detection on toy datasets": "auto_examples/miscellaneous/plot_anomaly_comparison.html", "Example: Comparing different clustering algorithms on toy datasets": "auto_examples/cluster/plot_cluster_comparison.html", "Example: Comparing different hierarchical linkage methods on toy datasets": "auto_examples/cluster/plot_linkage_comparison.html", "Example: Comparing Linear Bayesian Regressors": "auto_examples/linear_model/plot_ard.html", "Example: Comparing Nearest Neighbors with and without Neighborhood Components Analysis": "auto_examples/neighbors/plot_nca_classification.html", "Example: Comparing random forests and the multi-output meta estimator": "auto_examples/ensemble/plot_random_forest_regression_multioutput.html", "Example: Comparing randomized search and grid search for hyperparameter estimation": "auto_examples/model_selection/plot_randomized_search.html", "Example: Comparing various online solvers": "auto_examples/linear_model/plot_sgd_comparison.html", "Example: Comparison between grid search and successive halving": "auto_examples/model_selection/plot_successive_halving_heatmap.html", "Example: Comparison of Calibration of Classifiers": "auto_examples/calibration/plot_compare_calibration.html", "Example: Comparison of F-test and mutual information": "auto_examples/feature_selection/plot_f_test_vs_mi.html", "Example: Comparison of kernel ridge and Gaussian process regression": "auto_examples/gaussian_process/plot_compare_gpr_krr.html", "Example: Comparison of kernel ridge regression and SVR": "auto_examples/miscellaneous/plot_kernel_ridge_regression.html", "Example: Comparison of LDA and PCA 2D projection of Iris dataset": "auto_examples/decomposition/plot_pca_vs_lda.html", "Example: Comparison of Manifold Learning methods": "auto_examples/manifold/plot_compare_methods.html", "Example: Comparison of the K-Means and MiniBatchKMeans clustering algorithms": "auto_examples/cluster/plot_mini_batch_kmeans.html", "Example: Compressive sensing": "auto_examples/applications/plot_tomography_l1_reconstruction.html", "Example: Concatenating multiple feature extraction methods": "auto_examples/compose/plot_feature_union.html", "Example: Concentration Prior Type Analysis of Variation Bayesian Gaussian Mixture": "auto_examples/mixture/plot_concentration_prior.html", "Example: Confusion matrix": "auto_examples/model_selection/plot_confusion_matrix.html", "Example: Cross-validation on diabetes Dataset Exercise": "auto_examples/exercises/plot_cv_diabetes.html", "Example: Cross-validation on Digits Dataset Exercise": "auto_examples/exercises/plot_cv_digits.html", "Example: Curve Fitting with Bayesian Ridge Regression": "auto_examples/linear_model/plot_bayesian_ridge_curvefit.html", "Example: Custom refit strategy of a grid search with cross-validation": "auto_examples/model_selection/plot_grid_search_digits.html", "Example: Decision boundary of semi-supervised classifiers versus SVM on the Iris dataset": "auto_examples/semi_supervised/plot_semi_supervised_versus_svm_iris.html", "Example: Decision Tree Regression": "auto_examples/tree/plot_tree_regression.html", "Example: Decision Tree Regression with AdaBoost": "auto_examples/ensemble/plot_adaboost_regression.html", "Example: Demo of affinity propagation clustering algorithm": "auto_examples/cluster/plot_affinity_propagation.html", "Example: Demo of DBSCAN clustering algorithm": "auto_examples/cluster/plot_dbscan.html", "Example: Demo of OPTICS clustering algorithm": "auto_examples/cluster/plot_optics.html", "Example: Demonstrating the different strategies of KBinsDiscretizer": "auto_examples/preprocessing/plot_discretization_strategies.html", "Example: Demonstration of k-means assumptions": "auto_examples/cluster/plot_kmeans_assumptions.html", "Example: Demonstration of multi-metric evaluation on cross_val_score and GridSearchCV": "auto_examples/model_selection/plot_multi_metric_evaluation.html", "Example: Density Estimation for a Gaussian mixture": "auto_examples/mixture/plot_gmm_pdf.html", "Example: Detection error tradeoff  curve": "auto_examples/model_selection/plot_det.html", "Example: Digits Classification Exercise": "auto_examples/exercises/plot_digits_classification_exercise.html", "Example: Dimensionality Reduction with Neighborhood Components Analysis": "auto_examples/neighbors/plot_nca_dim_reduction.html", "Example: Discrete versus Real AdaBoost": "auto_examples/ensemble/plot_adaboost_hastie_10_2.html", "Example: Displaying Pipelines": "auto_examples/miscellaneous/plot_pipeline_display.html", "Example: Early stopping of Gradient Boosting": "auto_examples/ensemble/plot_gradient_boosting_early_stopping.html", "Example: Early stopping of Stochastic Gradient Descent": "auto_examples/linear_model/plot_sgd_early_stopping.html", "Example: Effect of transforming the targets in regression model": "auto_examples/compose/plot_transformed_target.html", "Example: Effect of varying threshold for self-training": "auto_examples/semi_supervised/plot_self_training_varying_threshold.html", "Example: Empirical evaluation of the impact of k-means initialization": "auto_examples/cluster/plot_kmeans_stability_low_dim_dense.html", "Example: Evaluation of outlier detection estimators": "auto_examples/miscellaneous/plot_outlier_detection_bench.html", "Example: Examples": "auto_examples/index.html", "Example: Explicit feature map approximation for RBF kernels": "auto_examples/miscellaneous/plot_kernel_approximation.html", "Example: Face completion with a multi-output estimators": "auto_examples/miscellaneous/plot_multioutput_face_completion.html", "Example: Faces dataset decompositions": "auto_examples/decomposition/plot_faces_decomposition.html", "Example: Faces recognition example using eigenfaces and SVMs": "auto_examples/applications/plot_face_recognition.html", "Example: Factor Analysis  to visualize patterns": "auto_examples/decomposition/plot_varimax_fa.html", "Example: FastICA on 2D point clouds": "auto_examples/decomposition/plot_ica_vs_pca.html", "Example: Feature agglomeration": "auto_examples/cluster/plot_digits_agglomeration.html", "Example: Feature agglomeration vs. univariate selection": "auto_examples/cluster/plot_feature_agglomeration_vs_univariate_selection.html", "Example: Feature discretization": "auto_examples/preprocessing/plot_discretization_classification.html", "Example: Feature importances with a forest of trees": "auto_examples/ensemble/plot_forest_importances.html", "Example: Feature transformations with ensembles of trees": "auto_examples/ensemble/plot_feature_transformation.html", "Example: FeatureHasher and DictVectorizer Comparison": "auto_examples/text/plot_hashing_vs_dict_vectorizer.html", "Example: Fitting an Elastic Net with a precomputed Gram Matrix and Weighted Samples": "auto_examples/linear_model/plot_elastic_net_precomputed_gram_matrix_with_weighted_samples.html", "Example: Gaussian Mixture Model Ellipsoids": "auto_examples/mixture/plot_gmm.html", "Example: Gaussian Mixture Model Selection": "auto_examples/mixture/plot_gmm_selection.html", "Example: Gaussian Mixture Model Sine Curve": "auto_examples/mixture/plot_gmm_sin.html", "Example: Gaussian process classification  on iris dataset": "auto_examples/gaussian_process/plot_gpc_iris.html", "Example: Gaussian process regression  on Mauna Loa CO2 data": "auto_examples/gaussian_process/plot_gpr_co2.html", "Example: Gaussian process regression  with noise-level estimation": "auto_examples/gaussian_process/plot_gpr_noisy.html", "Example: Gaussian processes on discrete data structures": "auto_examples/gaussian_process/plot_gpr_on_structured_data.html", "Example: Gaussian Processes regression": "auto_examples/gaussian_process/plot_gpr_noisy_targets.html", "Example: GMM covariances": "auto_examples/mixture/plot_gmm_covariances.html", "Example: GMM Initialization Methods": "auto_examples/mixture/plot_gmm_init.html", "Example: Gradient Boosting Out-of-Bag estimates": "auto_examples/ensemble/plot_gradient_boosting_oob.html", "Example: Gradient Boosting regression": "auto_examples/ensemble/plot_gradient_boosting_regression.html", "Example: Gradient Boosting regularization": "auto_examples/ensemble/plot_gradient_boosting_regularization.html", "Example: Hashing feature transformation using Totally Random Trees": "auto_examples/ensemble/plot_random_forest_embedding.html", "Example: Hierarchical clustering": "auto_examples/cluster/plot_ward_structured_vs_unstructured.html", "Example: HuberRegressor vs Ridge on dataset with strong outliers": "auto_examples/linear_model/plot_huber_vs_ridge.html", "Example: Illustration of Gaussian process classification  on the XOR dataset": "auto_examples/gaussian_process/plot_gpc_xor.html", "Example: Illustration of prior and posterior Gaussian process for different kernels": "auto_examples/gaussian_process/plot_gpr_prior_posterior.html", "Example: Image denoising using dictionary learning": "auto_examples/decomposition/plot_image_denoising.html", "Example: Image denoising using kernel PCA": "auto_examples/applications/plot_digits_denoising.html", "Example: Importance of Feature Scaling": "auto_examples/preprocessing/plot_scaling_importance.html", "Example: Imputing missing values before building an estimator": "auto_examples/impute/plot_missing_values.html", "Example: Imputing missing values with variants of IterativeImputer": "auto_examples/impute/plot_iterative_imputer_variants_comparison.html", "Example: Incremental PCA": "auto_examples/decomposition/plot_incremental_pca.html", "Example: Inductive Clustering": "auto_examples/cluster/plot_inductive_clustering.html", "Example: Iso-probability lines for Gaussian Processes classification": "auto_examples/gaussian_process/plot_gpc_isoprobability.html", "Example: IsolationForest example": "auto_examples/ensemble/plot_isolation_forest.html", "Example: Isotonic Regression": "auto_examples/miscellaneous/plot_isotonic_regression.html", "Example: Joint feature selection with multi-task Lasso": "auto_examples/linear_model/plot_multi_task_lasso_support.html", "Example: K-means Clustering": "auto_examples/cluster/plot_cluster_iris.html", "Example: Kernel Density Estimate of Species Distributions": "auto_examples/neighbors/plot_species_kde.html", "Example: Kernel Density Estimation": "auto_examples/neighbors/plot_digits_kde_sampling.html", "Example: Kernel PCA": "auto_examples/decomposition/plot_kernel_pca.html", "Example: L1 Penalty and Sparsity in Logistic Regression": "auto_examples/linear_model/plot_logistic_l1_l2_sparsity.html", "Example: Label Propagation digits": "auto_examples/semi_supervised/plot_label_propagation_digits.html", "Example: Label Propagation digits active learning": "auto_examples/semi_supervised/plot_label_propagation_digits_active_learning.html", "Example: Label Propagation learning a complex structure": "auto_examples/semi_supervised/plot_label_propagation_structure.html", "Example: Lasso and Elastic Net": "auto_examples/linear_model/plot_lasso_coordinate_descent_path.html", "Example: Lasso and Elastic Net for Sparse Signals": "auto_examples/linear_model/plot_lasso_and_elasticnet.html", "Example: Lasso model selection": "auto_examples/linear_model/plot_lasso_model_selection.html", "Example: Lasso model selection via information criteria": "auto_examples/linear_model/plot_lasso_lars_ic.html", "Example: Lasso on dense and sparse data": "auto_examples/linear_model/plot_lasso_dense_vs_sparse_data.html", "Example: Lasso path using LARS": "auto_examples/linear_model/plot_lasso_lars.html", "Example: Ledoit-Wolf vs OAS estimation": "auto_examples/covariance/plot_lw_vs_oas.html", "Example: Libsvm GUI": "auto_examples/applications/svm_gui.html", "Example: Linear and Quadratic Discriminant Analysis with covariance ellipsoid": "auto_examples/classification/plot_lda_qda.html", "Example: Linear Regression Example": "auto_examples/linear_model/plot_ols.html", "Example: Logistic function": "auto_examples/linear_model/plot_logistic.html", "Example: Logistic Regression 3-class Classifier": "auto_examples/linear_model/plot_iris_logistic.html", "Example: Manifold Learning methods on a severed sphere": "auto_examples/manifold/plot_manifold_sphere.html", "Example: Manifold learning on handwritten digits": "auto_examples/manifold/plot_lle_digits.html", "Example: Map data to a normal distribution": "auto_examples/preprocessing/plot_map_data_to_normal.html", "Example: MNIST classification using multinomial logistic + L1": "auto_examples/linear_model/plot_sparse_logistic_regression_mnist.html", "Example: Model Complexity Influence": "auto_examples/applications/plot_model_complexity_influence.html", "Example: Model selection with Probabilistic PCA and Factor Analysis": "auto_examples/decomposition/plot_pca_vs_fa_model_selection.html", "Example: Model-based and sequential feature selection": "auto_examples/feature_selection/plot_select_from_model_diabetes.html", "Example: Monotonic Constraints": "auto_examples/ensemble/plot_monotonic_constraints.html", "Example: Multi-class AdaBoosted Decision Trees": "auto_examples/ensemble/plot_adaboost_multiclass.html", "Example: Multi-dimensional scaling": "auto_examples/manifold/plot_mds.html", "Example: Multi-output Decision Tree Regression": "auto_examples/tree/plot_tree_regression_multioutput.html", "Example: Multiclass sparse logistic regression on 20newgroups": "auto_examples/linear_model/plot_sparse_logistic_regression_20newsgroups.html", "Example: Multilabel classification": "auto_examples/miscellaneous/plot_multilabel.html", "Example: Nearest Centroid Classification": "auto_examples/neighbors/plot_nearest_centroid.html", "Example: Nearest Neighbors Classification": "auto_examples/neighbors/plot_classification.html", "Example: Nearest Neighbors regression": "auto_examples/neighbors/plot_regression.html", "Example: Neighborhood Components Analysis Illustration": "auto_examples/neighbors/plot_nca_illustration.html", "Example: Nested versus non-nested cross-validation": "auto_examples/model_selection/plot_nested_cross_validation_iris.html", "Example: Non-linear SVM": "auto_examples/svm/plot_svm_nonlinear.html", "Example: Non-negative least squares": "auto_examples/linear_model/plot_nnls.html", "Example: Normal, Ledoit-Wolf and OAS Linear Discriminant Analysis for classification": "auto_examples/classification/plot_lda.html", "Example: Novelty detection with Local Outlier Factor": "auto_examples/neighbors/plot_lof_novelty_detection.html", "Example: One-Class SVM versus One-Class SVM using Stochastic Gradient Descent": "auto_examples/linear_model/plot_sgdocsvm_vs_ocsvm.html", "Example: One-class SVM with non-linear kernel": "auto_examples/svm/plot_oneclass.html", "Example: Online learning of a dictionary of parts of faces": "auto_examples/cluster/plot_dict_face_patches.html", "Example: OOB Errors for Random Forests": "auto_examples/ensemble/plot_ensemble_oob.html", "Example: Ordinary Least Squares and Ridge Regression Variance": "auto_examples/linear_model/plot_ols_ridge_variance.html", "Example: Orthogonal Matching Pursuit": "auto_examples/linear_model/plot_omp.html", "Example: Out-of-core classification of text documents": "auto_examples/applications/plot_out_of_core_classification.html", "Example: Outlier detection on a real data set": "auto_examples/applications/plot_outlier_detection_wine.html", "Example: Outlier detection with Local Outlier Factor": "auto_examples/neighbors/plot_lof_outlier_detection.html", "Example: Partial Dependence and Individual Conditional Expectation Plots": "auto_examples/inspection/plot_partial_dependence.html", "Example: PCA example with Iris Data-set": "auto_examples/decomposition/plot_pca_iris.html", "Example: Permutation Importance vs Random Forest Feature Importance": "auto_examples/inspection/plot_permutation_importance.html", "Example: Permutation Importance with Multicollinear or Correlated Features": "auto_examples/inspection/plot_permutation_importance_multicollinear.html", "Example: Pipeline ANOVA SVM": "auto_examples/feature_selection/plot_feature_selection_pipeline.html", "Example: Pipelining": "auto_examples/compose/plot_digits_pipe.html", "Example: Pixel importances with a parallel forest of trees": "auto_examples/ensemble/plot_forest_importances_faces.html", "Example: Plot class probabilities calculated by the VotingClassifier": "auto_examples/ensemble/plot_voting_probas.html", "Example: Plot classification probability": "auto_examples/classification/plot_classification_probability.html", "Example: Plot different SVM classifiers in the iris dataset": "auto_examples/svm/plot_iris_svc.html", "Example: Plot Hierarchical Clustering Dendrogram": "auto_examples/cluster/plot_agglomerative_dendrogram.html", "Example: Plot individual and voting regression predictions": "auto_examples/ensemble/plot_voting_regressor.html", "Example: Plot multi-class SGD on the iris dataset": "auto_examples/linear_model/plot_sgd_iris.html", "Example: Plot multinomial and One-vs-Rest Logistic Regression": "auto_examples/linear_model/plot_logistic_multinomial.html", "Example: Plot randomly generated classification dataset": "auto_examples/datasets/plot_random_dataset.html", "Example: Plot randomly generated multilabel dataset": "auto_examples/datasets/plot_random_multilabel_dataset.html", "Example: Plot Ridge coefficients as a function of the L2 regularization": "auto_examples/linear_model/plot_ridge_coeffs.html", "Example: Plot Ridge coefficients as a function of the regularization": "auto_examples/linear_model/plot_ridge_path.html", "Example: Plot the decision boundaries of a VotingClassifier": "auto_examples/ensemble/plot_voting_decision_regions.html", "Example: Plot the decision surface of decision trees trained on the iris dataset": "auto_examples/tree/plot_iris_dtc.html", "Example: Plot the decision surfaces of ensembles of trees on the iris dataset": "auto_examples/ensemble/plot_forest_iris.html", "Example: Plot the support vectors in LinearSVC": "auto_examples/svm/plot_linearsvc_support_vectors.html", "Example: Plotting Cross-Validated Predictions": "auto_examples/model_selection/plot_cv_predict.html", "Example: Plotting Learning Curves": "auto_examples/model_selection/plot_learning_curve.html", "Example: Plotting Validation Curves": "auto_examples/model_selection/plot_validation_curve.html", "Example: Poisson regression and non-normal loss": "auto_examples/linear_model/plot_poisson_regression_non_normal_loss.html", "Example: Polynomial and Spline interpolation": "auto_examples/linear_model/plot_polynomial_interpolation.html", "Example: Post pruning decision trees with cost complexity pruning": "auto_examples/tree/plot_cost_complexity_pruning.html", "Example: Precision-Recall": "auto_examples/model_selection/plot_precision_recall.html", "Example: Prediction Intervals for Gradient Boosting Regression": "auto_examples/ensemble/plot_gradient_boosting_quantile.html", "Example: Prediction Latency": "auto_examples/applications/plot_prediction_latency.html", "Example: Principal Component Regression vs Partial Least Squares Regression": "auto_examples/cross_decomposition/plot_pcr_vs_pls.html", "Example: Principal components analysis": "auto_examples/decomposition/plot_pca_3d.html", "Example: Probabilistic predictions with Gaussian process classification": "auto_examples/gaussian_process/plot_gpc.html", "Example: Probability Calibration curves": "auto_examples/calibration/plot_calibration_curve.html", "Example: Probability Calibration for 3-class classification": "auto_examples/calibration/plot_calibration_multiclass.html", "Example: Probability calibration of classifiers": "auto_examples/calibration/plot_calibration.html", "Example: Quantile regression": "auto_examples/linear_model/plot_quantile_regression.html", "Example: RBF SVM parameters": "auto_examples/svm/plot_rbf_parameters.html", "Example: Receiver Operating Characteristic": "auto_examples/model_selection/plot_roc.html", "Example: Receiver Operating Characteristic  with cross validation": "auto_examples/model_selection/plot_roc_crossval.html", "Example: Recognizing hand-written digits": "auto_examples/classification/plot_digits_classification.html", "Example: Recursive feature elimination": "auto_examples/feature_selection/plot_rfe_digits.html", "Example: Recursive feature elimination with cross-validation": "auto_examples/feature_selection/plot_rfe_with_cross_validation.html", "Example: Regularization path of L1- Logistic Regression": "auto_examples/linear_model/plot_logistic_path.html", "Example: Release Highlights for scikit-learn 0.22": "auto_examples/release_highlights/plot_release_highlights_0_22_0.html", "Example: Release Highlights for scikit-learn 0.23": "auto_examples/release_highlights/plot_release_highlights_0_23_0.html", "Example: Release Highlights for scikit-learn 0.24": "auto_examples/release_highlights/plot_release_highlights_0_24_0.html", "Example: Release Highlights for scikit-learn 1.0": "auto_examples/release_highlights/plot_release_highlights_1_0_0.html", "Example: Release Highlights for scikit-learn 1.1": "auto_examples/release_highlights/plot_release_highlights_1_1_0.html", "Example: Restricted Boltzmann Machine features for digit classification": "auto_examples/neural_networks/plot_rbm_logistic_classification.html", "Example: Robust covariance estimation and Mahalanobis distances relevance": "auto_examples/covariance/plot_mahalanobis_distances.html", "Example: Robust linear estimator fitting": "auto_examples/linear_model/plot_robust_fit.html", "Example: Robust linear model estimation using RANSAC": "auto_examples/linear_model/plot_ransac.html", "Example: Robust vs Empirical covariance estimate": "auto_examples/covariance/plot_robust_vs_empirical_covariance.html", "Example: ROC Curve with Visualization API": "auto_examples/miscellaneous/plot_roc_curve_visualization_api.html", "Example: Sample pipeline for text feature extraction and evaluation": "auto_examples/model_selection/grid_search_text_feature_extraction.html", "Example: Scalable learning with polynomial kernel approximation": "auto_examples/kernel_approximation/plot_scalable_poly_kernels.html", "Example: Scaling the regularization parameter for SVCs": "auto_examples/svm/plot_svm_scale_c.html", "Example: Segmenting the picture of greek coins in regions": "auto_examples/cluster/plot_coin_segmentation.html", "Example: Selecting dimensionality reduction with Pipeline and GridSearchCV": "auto_examples/compose/plot_compare_reduction.html", "Example: Selecting the number of clusters with silhouette analysis on KMeans clustering": "auto_examples/cluster/plot_kmeans_silhouette_analysis.html", "Example: Semi-supervised Classification on a Text Dataset": "auto_examples/semi_supervised/plot_semi_supervised_newsgroups.html", "Example: SGD: convex loss functions": "auto_examples/linear_model/plot_sgd_loss_functions.html", "Example: SGD: Maximum margin separating hyperplane": "auto_examples/linear_model/plot_sgd_separating_hyperplane.html", "Example: SGD: Penalties": "auto_examples/linear_model/plot_sgd_penalties.html", "Example: SGD: Weighted samples": "auto_examples/linear_model/plot_sgd_weighted_samples.html", "Example: Shrinkage covariance estimation": "auto_examples/covariance/plot_covariance_estimation.html", "Example: Simple 1D Kernel Density Estimation": "auto_examples/neighbors/plot_kde_1d.html", "Example: Single estimator versus bagging": "auto_examples/ensemble/plot_bias_variance.html", "Example: Sparse coding with a precomputed dictionary": "auto_examples/decomposition/plot_sparse_coding.html", "Example: Sparse inverse covariance estimation": "auto_examples/covariance/plot_sparse_cov.html", "Example: Sparsity Example": "auto_examples/linear_model/plot_ols_3d.html", "Example: Species distribution modeling": "auto_examples/applications/plot_species_distribution_modeling.html", "Example: Spectral clustering for image segmentation": "auto_examples/cluster/plot_segmentation_toy.html", "Example: Statistical comparison of models using grid search": "auto_examples/model_selection/plot_grid_search_stats.html", "Example: Successive Halving Iterations": "auto_examples/model_selection/plot_successive_halving_iterations.html", "Example: Support Vector Regression  using linear and non-linear kernels": "auto_examples/svm/plot_svm_regression.html", "Example: SVM Exercise": "auto_examples/exercises/plot_iris_exercise.html", "Example: SVM Margins Example": "auto_examples/svm/plot_svm_margin.html", "Example: SVM Tie Breaking Example": "auto_examples/svm/plot_svm_tie_breaking.html", "Example: SVM with custom kernel": "auto_examples/svm/plot_custom_kernel.html", "Example: SVM-Anova": "auto_examples/svm/plot_svm_anova.html", "Example: SVM-Kernels": "auto_examples/svm/plot_svm_kernels.html", "Example: SVM: Maximum margin separating hyperplane": "auto_examples/svm/plot_separating_hyperplane.html", "Example: SVM: Separating hyperplane for unbalanced classes": "auto_examples/svm/plot_separating_hyperplane_unbalanced.html", "Example: SVM: Weighted samples": "auto_examples/svm/plot_weighted_samples.html", "Example: Swiss Roll And Swiss-Hole Reduction": "auto_examples/manifold/plot_swissroll.html", "Example: t-SNE: The effect of various perplexity values on the shape": "auto_examples/manifold/plot_t_sne_perplexity.html", "Example: Test with permutations the significance of a classification score": "auto_examples/model_selection/plot_permutation_tests_for_classification.html", "Example: The Digit Dataset": "auto_examples/datasets/plot_digits_last_image.html", "Example: The Iris Dataset": "auto_examples/datasets/plot_iris_dataset.html", "Example: The Johnson-Lindenstrauss bound for embedding with random projections": "auto_examples/miscellaneous/plot_johnson_lindenstrauss_bound.html", "Example: Theil-Sen Regression": "auto_examples/linear_model/plot_theilsen.html", "Example: Time-related feature engineering": "auto_examples/applications/plot_cyclical_feature_engineering.html", "Example: Topic extraction with Non-negative Matrix Factorization and Latent Dirichlet Allocation": "auto_examples/applications/plot_topics_extraction_with_nmf_lda.html", "Example: Train error vs Test error": "auto_examples/model_selection/plot_train_error_vs_test_error.html", "Example: Tweedie regression on insurance claims": "auto_examples/linear_model/plot_tweedie_regression_insurance_claims.html", "Example: Two-class AdaBoost": "auto_examples/ensemble/plot_adaboost_twoclass.html", "Example: Underfitting vs. Overfitting": "auto_examples/model_selection/plot_underfitting_overfitting.html", "Example: Understanding the decision tree structure": "auto_examples/tree/plot_unveil_tree_structure.html", "Example: Univariate Feature Selection": "auto_examples/feature_selection/plot_feature_selection.html", "Example: Using KBinsDiscretizer to discretize continuous features": "auto_examples/preprocessing/plot_discretization.html", "Example: Various Agglomerative Clustering on a 2D embedding of digits": "auto_examples/cluster/plot_digits_linkage.html", "Example: Varying regularization in Multi-layer Perceptron": "auto_examples/neural_networks/plot_mlp_alpha.html", "Example: Vector Quantization Example": "auto_examples/cluster/plot_face_compress.html", "Example: Visualization of MLP weights on MNIST": "auto_examples/neural_networks/plot_mnist_filters.html", "Example: Visualizations with Display Objects": "auto_examples/miscellaneous/plot_display_object_visualization.html", "Example: Visualizing cross-validation behavior in scikit-learn": "auto_examples/model_selection/plot_cv_indices.html", "Example: Visualizing the stock market structure": "auto_examples/applications/plot_stock_market.html", "Example: Wikipedia principal eigenvector": "auto_examples/applications/wikipedia_principal_eigenvector.html", "exceptions.ConvergenceWarning": "modules/generated/sklearn.exceptions.convergencewarning.html", "exceptions.ConvergenceWarning.with_traceback()": "modules/generated/sklearn.exceptions.convergencewarning.html#sklearn.exceptions.ConvergenceWarning.with_traceback", "exceptions.DataConversionWarning": "modules/generated/sklearn.exceptions.dataconversionwarning.html", "exceptions.DataConversionWarning.with_traceback()": "modules/generated/sklearn.exceptions.dataconversionwarning.html#sklearn.exceptions.DataConversionWarning.with_traceback", "exceptions.DataDimensionalityWarning": "modules/generated/sklearn.exceptions.datadimensionalitywarning.html#sklearn.exceptions.DataDimensionalityWarning", "exceptions.DataDimensionalityWarning.with_traceback()": "modules/generated/sklearn.exceptions.datadimensionalitywarning.html#sklearn.exceptions.DataDimensionalityWarning.with_traceback", "exceptions.EfficiencyWarning": "modules/generated/sklearn.exceptions.efficiencywarning.html", "exceptions.EfficiencyWarning.with_traceback()": "modules/generated/sklearn.exceptions.efficiencywarning.html#sklearn.exceptions.EfficiencyWarning.with_traceback", "exceptions.FitFailedWarning": "modules/generated/sklearn.exceptions.fitfailedwarning.html#sklearn.exceptions.FitFailedWarning", "exceptions.FitFailedWarning.with_traceback()": "modules/generated/sklearn.exceptions.fitfailedwarning.html#sklearn.exceptions.FitFailedWarning.with_traceback", "exceptions.NotFittedError": "modules/generated/sklearn.exceptions.notfittederror.html", "exceptions.NotFittedError.with_traceback()": "modules/generated/sklearn.exceptions.notfittederror.html#sklearn.exceptions.NotFittedError.with_traceback", "exceptions.UndefinedMetricWarning": "modules/generated/sklearn.exceptions.undefinedmetricwarning.html", "exceptions.UndefinedMetricWarning.with_traceback()": "modules/generated/sklearn.exceptions.undefinedmetricwarning.html#sklearn.exceptions.UndefinedMetricWarning.with_traceback", "feature_extraction.DictVectorizer": "modules/generated/sklearn.feature_extraction.dictvectorizer.html#sklearn.feature_extraction.DictVectorizer", "feature_extraction.DictVectorizer()": "modules/generated/sklearn.feature_extraction.dictvectorizer.html", "feature_extraction.DictVectorizer.fit()": "modules/generated/sklearn.feature_extraction.dictvectorizer.html#sklearn.feature_extraction.DictVectorizer.fit", "feature_extraction.DictVectorizer.fit_transform()": "modules/generated/sklearn.feature_extraction.dictvectorizer.html#sklearn.feature_extraction.DictVectorizer.fit_transform", "feature_extraction.DictVectorizer.get_feature_names()": "modules/generated/sklearn.feature_extraction.dictvectorizer.html#sklearn.feature_extraction.DictVectorizer.get_feature_names", "feature_extraction.DictVectorizer.get_feature_names_out()": "modules/generated/sklearn.feature_extraction.dictvectorizer.html#sklearn.feature_extraction.DictVectorizer.get_feature_names_out", "feature_extraction.DictVectorizer.get_params()": "modules/generated/sklearn.feature_extraction.dictvectorizer.html#sklearn.feature_extraction.DictVectorizer.get_params", "feature_extraction.DictVectorizer.inverse_transform()": "modules/generated/sklearn.feature_extraction.dictvectorizer.html#sklearn.feature_extraction.DictVectorizer.inverse_transform", "feature_extraction.DictVectorizer.restrict()": "modules/generated/sklearn.feature_extraction.dictvectorizer.html#sklearn.feature_extraction.DictVectorizer.restrict", "feature_extraction.DictVectorizer.set_params()": "modules/generated/sklearn.feature_extraction.dictvectorizer.html#sklearn.feature_extraction.DictVectorizer.set_params", "feature_extraction.DictVectorizer.transform()": "modules/generated/sklearn.feature_extraction.dictvectorizer.html#sklearn.feature_extraction.DictVectorizer.transform", "feature_extraction.FeatureHasher": "modules/generated/sklearn.feature_extraction.featurehasher.html#sklearn.feature_extraction.FeatureHasher", "feature_extraction.FeatureHasher()": "modules/generated/sklearn.feature_extraction.featurehasher.html", "feature_extraction.FeatureHasher.fit()": "modules/generated/sklearn.feature_extraction.featurehasher.html#sklearn.feature_extraction.FeatureHasher.fit", "feature_extraction.FeatureHasher.fit_transform()": "modules/generated/sklearn.feature_extraction.featurehasher.html#sklearn.feature_extraction.FeatureHasher.fit_transform", "feature_extraction.FeatureHasher.get_params()": "modules/generated/sklearn.feature_extraction.featurehasher.html#sklearn.feature_extraction.FeatureHasher.get_params", "feature_extraction.FeatureHasher.set_params()": "modules/generated/sklearn.feature_extraction.featurehasher.html#sklearn.feature_extraction.FeatureHasher.set_params", "feature_extraction.FeatureHasher.transform()": "modules/generated/sklearn.feature_extraction.featurehasher.html#sklearn.feature_extraction.FeatureHasher.transform", "feature_extraction.image.extract_patches_2d()": "modules/generated/sklearn.feature_extraction.image.extract_patches_2d.html#sklearn.feature_extraction.image.extract_patches_2d", "feature_extraction.image.grid_to_graph()": "modules/generated/sklearn.feature_extraction.image.grid_to_graph.html#sklearn.feature_extraction.image.grid_to_graph", "feature_extraction.image.img_to_graph()": "modules/generated/sklearn.feature_extraction.image.img_to_graph.html#sklearn.feature_extraction.image.img_to_graph", "feature_extraction.image.PatchExtractor": "modules/generated/sklearn.feature_extraction.image.patchextractor.html#sklearn.feature_extraction.image.PatchExtractor", "feature_extraction.image.PatchExtractor()": "modules/generated/sklearn.feature_extraction.image.patchextractor.html", "feature_extraction.image.PatchExtractor.fit()": "modules/generated/sklearn.feature_extraction.image.patchextractor.html#sklearn.feature_extraction.image.PatchExtractor.fit", "feature_extraction.image.PatchExtractor.get_params()": "modules/generated/sklearn.feature_extraction.image.patchextractor.html#sklearn.feature_extraction.image.PatchExtractor.get_params", "feature_extraction.image.PatchExtractor.set_params()": "modules/generated/sklearn.feature_extraction.image.patchextractor.html#sklearn.feature_extraction.image.PatchExtractor.set_params", "feature_extraction.image.PatchExtractor.transform()": "modules/generated/sklearn.feature_extraction.image.patchextractor.html#sklearn.feature_extraction.image.PatchExtractor.transform", "feature_extraction.image.reconstruct_from_patches_2d()": "modules/generated/sklearn.feature_extraction.image.reconstruct_from_patches_2d.html#sklearn.feature_extraction.image.reconstruct_from_patches_2d", "feature_extraction.text.CountVectorizer": "modules/generated/sklearn.feature_extraction.text.countvectorizer.html#sklearn.feature_extraction.text.CountVectorizer", "feature_extraction.text.CountVectorizer()": "modules/generated/sklearn.feature_extraction.text.countvectorizer.html", "feature_extraction.text.CountVectorizer.build_analyzer()": "modules/generated/sklearn.feature_extraction.text.countvectorizer.html#sklearn.feature_extraction.text.CountVectorizer.build_analyzer", "feature_extraction.text.CountVectorizer.build_preprocessor()": "modules/generated/sklearn.feature_extraction.text.countvectorizer.html#sklearn.feature_extraction.text.CountVectorizer.build_preprocessor", "feature_extraction.text.CountVectorizer.build_tokenizer()": "modules/generated/sklearn.feature_extraction.text.countvectorizer.html#sklearn.feature_extraction.text.CountVectorizer.build_tokenizer", "feature_extraction.text.CountVectorizer.decode()": "modules/generated/sklearn.feature_extraction.text.countvectorizer.html#sklearn.feature_extraction.text.CountVectorizer.decode", "feature_extraction.text.CountVectorizer.fit()": "modules/generated/sklearn.feature_extraction.text.countvectorizer.html#sklearn.feature_extraction.text.CountVectorizer.fit", "feature_extraction.text.CountVectorizer.fit_transform()": "modules/generated/sklearn.feature_extraction.text.countvectorizer.html#sklearn.feature_extraction.text.CountVectorizer.fit_transform", "feature_extraction.text.CountVectorizer.get_feature_names()": "modules/generated/sklearn.feature_extraction.text.countvectorizer.html#sklearn.feature_extraction.text.CountVectorizer.get_feature_names", "feature_extraction.text.CountVectorizer.get_feature_names_out()": "modules/generated/sklearn.feature_extraction.text.countvectorizer.html#sklearn.feature_extraction.text.CountVectorizer.get_feature_names_out", "feature_extraction.text.CountVectorizer.get_params()": "modules/generated/sklearn.feature_extraction.text.countvectorizer.html#sklearn.feature_extraction.text.CountVectorizer.get_params", "feature_extraction.text.CountVectorizer.get_stop_words()": "modules/generated/sklearn.feature_extraction.text.countvectorizer.html#sklearn.feature_extraction.text.CountVectorizer.get_stop_words", "feature_extraction.text.CountVectorizer.inverse_transform()": "modules/generated/sklearn.feature_extraction.text.countvectorizer.html#sklearn.feature_extraction.text.CountVectorizer.inverse_transform", "feature_extraction.text.CountVectorizer.set_params()": "modules/generated/sklearn.feature_extraction.text.countvectorizer.html#sklearn.feature_extraction.text.CountVectorizer.set_params", "feature_extraction.text.CountVectorizer.transform()": "modules/generated/sklearn.feature_extraction.text.countvectorizer.html#sklearn.feature_extraction.text.CountVectorizer.transform", "feature_extraction.text.HashingVectorizer": "modules/generated/sklearn.feature_extraction.text.hashingvectorizer.html#sklearn.feature_extraction.text.HashingVectorizer", "feature_extraction.text.HashingVectorizer()": "modules/generated/sklearn.feature_extraction.text.hashingvectorizer.html", "feature_extraction.text.HashingVectorizer.build_analyzer()": "modules/generated/sklearn.feature_extraction.text.hashingvectorizer.html#sklearn.feature_extraction.text.HashingVectorizer.build_analyzer", "feature_extraction.text.HashingVectorizer.build_preprocessor()": "modules/generated/sklearn.feature_extraction.text.hashingvectorizer.html#sklearn.feature_extraction.text.HashingVectorizer.build_preprocessor", "feature_extraction.text.HashingVectorizer.build_tokenizer()": "modules/generated/sklearn.feature_extraction.text.hashingvectorizer.html#sklearn.feature_extraction.text.HashingVectorizer.build_tokenizer", "feature_extraction.text.HashingVectorizer.decode()": "modules/generated/sklearn.feature_extraction.text.hashingvectorizer.html#sklearn.feature_extraction.text.HashingVectorizer.decode", "feature_extraction.text.HashingVectorizer.fit()": "modules/generated/sklearn.feature_extraction.text.hashingvectorizer.html#sklearn.feature_extraction.text.HashingVectorizer.fit", "feature_extraction.text.HashingVectorizer.fit_transform()": "modules/generated/sklearn.feature_extraction.text.hashingvectorizer.html#sklearn.feature_extraction.text.HashingVectorizer.fit_transform", "feature_extraction.text.HashingVectorizer.get_params()": "modules/generated/sklearn.feature_extraction.text.hashingvectorizer.html#sklearn.feature_extraction.text.HashingVectorizer.get_params", "feature_extraction.text.HashingVectorizer.get_stop_words()": "modules/generated/sklearn.feature_extraction.text.hashingvectorizer.html#sklearn.feature_extraction.text.HashingVectorizer.get_stop_words", "feature_extraction.text.HashingVectorizer.partial_fit()": "modules/generated/sklearn.feature_extraction.text.hashingvectorizer.html#sklearn.feature_extraction.text.HashingVectorizer.partial_fit", "feature_extraction.text.HashingVectorizer.set_params()": "modules/generated/sklearn.feature_extraction.text.hashingvectorizer.html#sklearn.feature_extraction.text.HashingVectorizer.set_params", "feature_extraction.text.HashingVectorizer.transform()": "modules/generated/sklearn.feature_extraction.text.hashingvectorizer.html#sklearn.feature_extraction.text.HashingVectorizer.transform", "feature_extraction.text.TfidfTransformer": "modules/generated/sklearn.feature_extraction.text.tfidftransformer.html#sklearn.feature_extraction.text.TfidfTransformer", "feature_extraction.text.TfidfTransformer()": "modules/generated/sklearn.feature_extraction.text.tfidftransformer.html", "feature_extraction.text.TfidfTransformer.fit()": "modules/generated/sklearn.feature_extraction.text.tfidftransformer.html#sklearn.feature_extraction.text.TfidfTransformer.fit", "feature_extraction.text.TfidfTransformer.fit_transform()": "modules/generated/sklearn.feature_extraction.text.tfidftransformer.html#sklearn.feature_extraction.text.TfidfTransformer.fit_transform", "feature_extraction.text.TfidfTransformer.get_feature_names_out()": "modules/generated/sklearn.feature_extraction.text.tfidftransformer.html#sklearn.feature_extraction.text.TfidfTransformer.get_feature_names_out", "feature_extraction.text.TfidfTransformer.get_params()": "modules/generated/sklearn.feature_extraction.text.tfidftransformer.html#sklearn.feature_extraction.text.TfidfTransformer.get_params", "feature_extraction.text.TfidfTransformer.set_params()": "modules/generated/sklearn.feature_extraction.text.tfidftransformer.html#sklearn.feature_extraction.text.TfidfTransformer.set_params", "feature_extraction.text.TfidfTransformer.transform()": "modules/generated/sklearn.feature_extraction.text.tfidftransformer.html#sklearn.feature_extraction.text.TfidfTransformer.transform", "feature_extraction.text.TfidfVectorizer": "modules/generated/sklearn.feature_extraction.text.tfidfvectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer", "feature_extraction.text.TfidfVectorizer()": "modules/generated/sklearn.feature_extraction.text.tfidfvectorizer.html", "feature_extraction.text.TfidfVectorizer.build_analyzer()": "modules/generated/sklearn.feature_extraction.text.tfidfvectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer.build_analyzer", "feature_extraction.text.TfidfVectorizer.build_preprocessor()": "modules/generated/sklearn.feature_extraction.text.tfidfvectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer.build_preprocessor", "feature_extraction.text.TfidfVectorizer.build_tokenizer()": "modules/generated/sklearn.feature_extraction.text.tfidfvectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer.build_tokenizer", "feature_extraction.text.TfidfVectorizer.decode()": "modules/generated/sklearn.feature_extraction.text.tfidfvectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer.decode", "feature_extraction.text.TfidfVectorizer.fit()": "modules/generated/sklearn.feature_extraction.text.tfidfvectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer.fit", "feature_extraction.text.TfidfVectorizer.fit_transform()": "modules/generated/sklearn.feature_extraction.text.tfidfvectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer.fit_transform", "feature_extraction.text.TfidfVectorizer.get_feature_names()": "modules/generated/sklearn.feature_extraction.text.tfidfvectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer.get_feature_names", "feature_extraction.text.TfidfVectorizer.get_feature_names_out()": "modules/generated/sklearn.feature_extraction.text.tfidfvectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer.get_feature_names_out", "feature_extraction.text.TfidfVectorizer.get_params()": "modules/generated/sklearn.feature_extraction.text.tfidfvectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer.get_params", "feature_extraction.text.TfidfVectorizer.get_stop_words()": "modules/generated/sklearn.feature_extraction.text.tfidfvectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer.get_stop_words", "feature_extraction.text.TfidfVectorizer.inverse_transform()": "modules/generated/sklearn.feature_extraction.text.tfidfvectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer.inverse_transform", "feature_extraction.text.TfidfVectorizer.set_params()": "modules/generated/sklearn.feature_extraction.text.tfidfvectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer.set_params", "feature_extraction.text.TfidfVectorizer.transform()": "modules/generated/sklearn.feature_extraction.text.tfidfvectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer.transform", "feature_selection.chi2()": "modules/generated/sklearn.feature_selection.chi2.html#sklearn.feature_selection.chi2", "feature_selection.f_classif()": "modules/generated/sklearn.feature_selection.f_classif.html#sklearn.feature_selection.f_classif", "feature_selection.f_regression()": "modules/generated/sklearn.feature_selection.f_regression.html#sklearn.feature_selection.f_regression", "feature_selection.GenericUnivariateSelect": "modules/generated/sklearn.feature_selection.genericunivariateselect.html#sklearn.feature_selection.GenericUnivariateSelect", "feature_selection.GenericUnivariateSelect()": "modules/generated/sklearn.feature_selection.genericunivariateselect.html", "feature_selection.GenericUnivariateSelect.fit()": "modules/generated/sklearn.feature_selection.genericunivariateselect.html#sklearn.feature_selection.GenericUnivariateSelect.fit", "feature_selection.GenericUnivariateSelect.fit_transform()": "modules/generated/sklearn.feature_selection.genericunivariateselect.html#sklearn.feature_selection.GenericUnivariateSelect.fit_transform", "feature_selection.GenericUnivariateSelect.get_feature_names_out()": "modules/generated/sklearn.feature_selection.genericunivariateselect.html#sklearn.feature_selection.GenericUnivariateSelect.get_feature_names_out", "feature_selection.GenericUnivariateSelect.get_params()": "modules/generated/sklearn.feature_selection.genericunivariateselect.html#sklearn.feature_selection.GenericUnivariateSelect.get_params", "feature_selection.GenericUnivariateSelect.get_support()": "modules/generated/sklearn.feature_selection.genericunivariateselect.html#sklearn.feature_selection.GenericUnivariateSelect.get_support", "feature_selection.GenericUnivariateSelect.inverse_transform()": "modules/generated/sklearn.feature_selection.genericunivariateselect.html#sklearn.feature_selection.GenericUnivariateSelect.inverse_transform", "feature_selection.GenericUnivariateSelect.set_params()": "modules/generated/sklearn.feature_selection.genericunivariateselect.html#sklearn.feature_selection.GenericUnivariateSelect.set_params", "feature_selection.GenericUnivariateSelect.transform()": "modules/generated/sklearn.feature_selection.genericunivariateselect.html#sklearn.feature_selection.GenericUnivariateSelect.transform", "feature_selection.mutual_info_classif()": "modules/generated/sklearn.feature_selection.mutual_info_classif.html#sklearn.feature_selection.mutual_info_classif", "feature_selection.mutual_info_regression()": "modules/generated/sklearn.feature_selection.mutual_info_regression.html#sklearn.feature_selection.mutual_info_regression", "feature_selection.r_regression()": "modules/generated/sklearn.feature_selection.r_regression.html#sklearn.feature_selection.r_regression", "feature_selection.RFE": "modules/generated/sklearn.feature_selection.rfe.html#sklearn.feature_selection.RFE", "feature_selection.RFE()": "modules/generated/sklearn.feature_selection.rfe.html", "feature_selection.RFE.decision_function()": "modules/generated/sklearn.feature_selection.rfe.html#sklearn.feature_selection.RFE.decision_function", "feature_selection.RFE.fit()": "modules/generated/sklearn.feature_selection.rfe.html#sklearn.feature_selection.RFE.fit", "feature_selection.RFE.fit_transform()": "modules/generated/sklearn.feature_selection.rfe.html#sklearn.feature_selection.RFE.fit_transform", "feature_selection.RFE.get_feature_names_out()": "modules/generated/sklearn.feature_selection.rfe.html#sklearn.feature_selection.RFE.get_feature_names_out", "feature_selection.RFE.get_params()": "modules/generated/sklearn.feature_selection.rfe.html#sklearn.feature_selection.RFE.get_params", "feature_selection.RFE.get_support()": "modules/generated/sklearn.feature_selection.rfe.html#sklearn.feature_selection.RFE.get_support", "feature_selection.RFE.inverse_transform()": "modules/generated/sklearn.feature_selection.rfe.html#sklearn.feature_selection.RFE.inverse_transform", "feature_selection.RFE.predict()": "modules/generated/sklearn.feature_selection.rfe.html#sklearn.feature_selection.RFE.predict", "feature_selection.RFE.predict_log_proba()": "modules/generated/sklearn.feature_selection.rfe.html#sklearn.feature_selection.RFE.predict_log_proba", "feature_selection.RFE.predict_proba()": "modules/generated/sklearn.feature_selection.rfe.html#sklearn.feature_selection.RFE.predict_proba", "feature_selection.RFE.score()": "modules/generated/sklearn.feature_selection.rfe.html#sklearn.feature_selection.RFE.score", "feature_selection.RFE.set_params()": "modules/generated/sklearn.feature_selection.rfe.html#sklearn.feature_selection.RFE.set_params", "feature_selection.RFE.transform()": "modules/generated/sklearn.feature_selection.rfe.html#sklearn.feature_selection.RFE.transform", "feature_selection.RFECV": "modules/generated/sklearn.feature_selection.rfecv.html#sklearn.feature_selection.RFECV", "feature_selection.RFECV()": "modules/generated/sklearn.feature_selection.rfecv.html", "feature_selection.RFECV.decision_function()": "modules/generated/sklearn.feature_selection.rfecv.html#sklearn.feature_selection.RFECV.decision_function", "feature_selection.RFECV.fit()": "modules/generated/sklearn.feature_selection.rfecv.html#sklearn.feature_selection.RFECV.fit", "feature_selection.RFECV.fit_transform()": "modules/generated/sklearn.feature_selection.rfecv.html#sklearn.feature_selection.RFECV.fit_transform", "feature_selection.RFECV.get_feature_names_out()": "modules/generated/sklearn.feature_selection.rfecv.html#sklearn.feature_selection.RFECV.get_feature_names_out", "feature_selection.RFECV.get_params()": "modules/generated/sklearn.feature_selection.rfecv.html#sklearn.feature_selection.RFECV.get_params", "feature_selection.RFECV.get_support()": "modules/generated/sklearn.feature_selection.rfecv.html#sklearn.feature_selection.RFECV.get_support", "feature_selection.RFECV.inverse_transform()": "modules/generated/sklearn.feature_selection.rfecv.html#sklearn.feature_selection.RFECV.inverse_transform", "feature_selection.RFECV.predict()": "modules/generated/sklearn.feature_selection.rfecv.html#sklearn.feature_selection.RFECV.predict", "feature_selection.RFECV.predict_log_proba()": "modules/generated/sklearn.feature_selection.rfecv.html#sklearn.feature_selection.RFECV.predict_log_proba", "feature_selection.RFECV.predict_proba()": "modules/generated/sklearn.feature_selection.rfecv.html#sklearn.feature_selection.RFECV.predict_proba", "feature_selection.RFECV.score()": "modules/generated/sklearn.feature_selection.rfecv.html#sklearn.feature_selection.RFECV.score", "feature_selection.RFECV.set_params()": "modules/generated/sklearn.feature_selection.rfecv.html#sklearn.feature_selection.RFECV.set_params", "feature_selection.RFECV.transform()": "modules/generated/sklearn.feature_selection.rfecv.html#sklearn.feature_selection.RFECV.transform", "feature_selection.SelectFdr": "modules/generated/sklearn.feature_selection.selectfdr.html#sklearn.feature_selection.SelectFdr", "feature_selection.SelectFdr()": "modules/generated/sklearn.feature_selection.selectfdr.html", "feature_selection.SelectFdr.fit()": "modules/generated/sklearn.feature_selection.selectfdr.html#sklearn.feature_selection.SelectFdr.fit", "feature_selection.SelectFdr.fit_transform()": "modules/generated/sklearn.feature_selection.selectfdr.html#sklearn.feature_selection.SelectFdr.fit_transform", "feature_selection.SelectFdr.get_feature_names_out()": "modules/generated/sklearn.feature_selection.selectfdr.html#sklearn.feature_selection.SelectFdr.get_feature_names_out", "feature_selection.SelectFdr.get_params()": "modules/generated/sklearn.feature_selection.selectfdr.html#sklearn.feature_selection.SelectFdr.get_params", "feature_selection.SelectFdr.get_support()": "modules/generated/sklearn.feature_selection.selectfdr.html#sklearn.feature_selection.SelectFdr.get_support", "feature_selection.SelectFdr.inverse_transform()": "modules/generated/sklearn.feature_selection.selectfdr.html#sklearn.feature_selection.SelectFdr.inverse_transform", "feature_selection.SelectFdr.set_params()": "modules/generated/sklearn.feature_selection.selectfdr.html#sklearn.feature_selection.SelectFdr.set_params", "feature_selection.SelectFdr.transform()": "modules/generated/sklearn.feature_selection.selectfdr.html#sklearn.feature_selection.SelectFdr.transform", "feature_selection.SelectFpr": "modules/generated/sklearn.feature_selection.selectfpr.html#sklearn.feature_selection.SelectFpr", "feature_selection.SelectFpr()": "modules/generated/sklearn.feature_selection.selectfpr.html", "feature_selection.SelectFpr.fit()": "modules/generated/sklearn.feature_selection.selectfpr.html#sklearn.feature_selection.SelectFpr.fit", "feature_selection.SelectFpr.fit_transform()": "modules/generated/sklearn.feature_selection.selectfpr.html#sklearn.feature_selection.SelectFpr.fit_transform", "feature_selection.SelectFpr.get_feature_names_out()": "modules/generated/sklearn.feature_selection.selectfpr.html#sklearn.feature_selection.SelectFpr.get_feature_names_out", "feature_selection.SelectFpr.get_params()": "modules/generated/sklearn.feature_selection.selectfpr.html#sklearn.feature_selection.SelectFpr.get_params", "feature_selection.SelectFpr.get_support()": "modules/generated/sklearn.feature_selection.selectfpr.html#sklearn.feature_selection.SelectFpr.get_support", "feature_selection.SelectFpr.inverse_transform()": "modules/generated/sklearn.feature_selection.selectfpr.html#sklearn.feature_selection.SelectFpr.inverse_transform", "feature_selection.SelectFpr.set_params()": "modules/generated/sklearn.feature_selection.selectfpr.html#sklearn.feature_selection.SelectFpr.set_params", "feature_selection.SelectFpr.transform()": "modules/generated/sklearn.feature_selection.selectfpr.html#sklearn.feature_selection.SelectFpr.transform", "feature_selection.SelectFromModel": "modules/generated/sklearn.feature_selection.selectfrommodel.html#sklearn.feature_selection.SelectFromModel", "feature_selection.SelectFromModel()": "modules/generated/sklearn.feature_selection.selectfrommodel.html", "feature_selection.SelectFromModel.fit()": "modules/generated/sklearn.feature_selection.selectfrommodel.html#sklearn.feature_selection.SelectFromModel.fit", "feature_selection.SelectFromModel.fit_transform()": "modules/generated/sklearn.feature_selection.selectfrommodel.html#sklearn.feature_selection.SelectFromModel.fit_transform", "feature_selection.SelectFromModel.get_feature_names_out()": "modules/generated/sklearn.feature_selection.selectfrommodel.html#sklearn.feature_selection.SelectFromModel.get_feature_names_out", "feature_selection.SelectFromModel.get_params()": "modules/generated/sklearn.feature_selection.selectfrommodel.html#sklearn.feature_selection.SelectFromModel.get_params", "feature_selection.SelectFromModel.get_support()": "modules/generated/sklearn.feature_selection.selectfrommodel.html#sklearn.feature_selection.SelectFromModel.get_support", "feature_selection.SelectFromModel.inverse_transform()": "modules/generated/sklearn.feature_selection.selectfrommodel.html#sklearn.feature_selection.SelectFromModel.inverse_transform", "feature_selection.SelectFromModel.partial_fit()": "modules/generated/sklearn.feature_selection.selectfrommodel.html#sklearn.feature_selection.SelectFromModel.partial_fit", "feature_selection.SelectFromModel.set_params()": "modules/generated/sklearn.feature_selection.selectfrommodel.html#sklearn.feature_selection.SelectFromModel.set_params", "feature_selection.SelectFromModel.transform()": "modules/generated/sklearn.feature_selection.selectfrommodel.html#sklearn.feature_selection.SelectFromModel.transform", "feature_selection.SelectFwe": "modules/generated/sklearn.feature_selection.selectfwe.html#sklearn.feature_selection.SelectFwe", "feature_selection.SelectFwe()": "modules/generated/sklearn.feature_selection.selectfwe.html", "feature_selection.SelectFwe.fit()": "modules/generated/sklearn.feature_selection.selectfwe.html#sklearn.feature_selection.SelectFwe.fit", "feature_selection.SelectFwe.fit_transform()": "modules/generated/sklearn.feature_selection.selectfwe.html#sklearn.feature_selection.SelectFwe.fit_transform", "feature_selection.SelectFwe.get_feature_names_out()": "modules/generated/sklearn.feature_selection.selectfwe.html#sklearn.feature_selection.SelectFwe.get_feature_names_out", "feature_selection.SelectFwe.get_params()": "modules/generated/sklearn.feature_selection.selectfwe.html#sklearn.feature_selection.SelectFwe.get_params", "feature_selection.SelectFwe.get_support()": "modules/generated/sklearn.feature_selection.selectfwe.html#sklearn.feature_selection.SelectFwe.get_support", "feature_selection.SelectFwe.inverse_transform()": "modules/generated/sklearn.feature_selection.selectfwe.html#sklearn.feature_selection.SelectFwe.inverse_transform", "feature_selection.SelectFwe.set_params()": "modules/generated/sklearn.feature_selection.selectfwe.html#sklearn.feature_selection.SelectFwe.set_params", "feature_selection.SelectFwe.transform()": "modules/generated/sklearn.feature_selection.selectfwe.html#sklearn.feature_selection.SelectFwe.transform", "feature_selection.SelectKBest": "modules/generated/sklearn.feature_selection.selectkbest.html#sklearn.feature_selection.SelectKBest", "feature_selection.SelectKBest()": "modules/generated/sklearn.feature_selection.selectkbest.html", "feature_selection.SelectKBest.fit()": "modules/generated/sklearn.feature_selection.selectkbest.html#sklearn.feature_selection.SelectKBest.fit", "feature_selection.SelectKBest.fit_transform()": "modules/generated/sklearn.feature_selection.selectkbest.html#sklearn.feature_selection.SelectKBest.fit_transform", "feature_selection.SelectKBest.get_feature_names_out()": "modules/generated/sklearn.feature_selection.selectkbest.html#sklearn.feature_selection.SelectKBest.get_feature_names_out", "feature_selection.SelectKBest.get_params()": "modules/generated/sklearn.feature_selection.selectkbest.html#sklearn.feature_selection.SelectKBest.get_params", "feature_selection.SelectKBest.get_support()": "modules/generated/sklearn.feature_selection.selectkbest.html#sklearn.feature_selection.SelectKBest.get_support", "feature_selection.SelectKBest.inverse_transform()": "modules/generated/sklearn.feature_selection.selectkbest.html#sklearn.feature_selection.SelectKBest.inverse_transform", "feature_selection.SelectKBest.set_params()": "modules/generated/sklearn.feature_selection.selectkbest.html#sklearn.feature_selection.SelectKBest.set_params", "feature_selection.SelectKBest.transform()": "modules/generated/sklearn.feature_selection.selectkbest.html#sklearn.feature_selection.SelectKBest.transform", "feature_selection.SelectorMixin": "modules/generated/sklearn.feature_selection.selectormixin.html", "feature_selection.SelectorMixin.fit_transform()": "modules/generated/sklearn.feature_selection.selectormixin.html#sklearn.feature_selection.SelectorMixin.fit_transform", "feature_selection.SelectorMixin.get_feature_names_out()": "modules/generated/sklearn.feature_selection.selectormixin.html#sklearn.feature_selection.SelectorMixin.get_feature_names_out", "feature_selection.SelectorMixin.get_support()": "modules/generated/sklearn.feature_selection.selectormixin.html#sklearn.feature_selection.SelectorMixin.get_support", "feature_selection.SelectorMixin.inverse_transform()": "modules/generated/sklearn.feature_selection.selectormixin.html#sklearn.feature_selection.SelectorMixin.inverse_transform", "feature_selection.SelectorMixin.transform()": "modules/generated/sklearn.feature_selection.selectormixin.html#sklearn.feature_selection.SelectorMixin.transform", "feature_selection.SelectPercentile": "modules/generated/sklearn.feature_selection.selectpercentile.html#sklearn.feature_selection.SelectPercentile", "feature_selection.SelectPercentile()": "modules/generated/sklearn.feature_selection.selectpercentile.html", "feature_selection.SelectPercentile.fit()": "modules/generated/sklearn.feature_selection.selectpercentile.html#sklearn.feature_selection.SelectPercentile.fit", "feature_selection.SelectPercentile.fit_transform()": "modules/generated/sklearn.feature_selection.selectpercentile.html#sklearn.feature_selection.SelectPercentile.fit_transform", "feature_selection.SelectPercentile.get_feature_names_out()": "modules/generated/sklearn.feature_selection.selectpercentile.html#sklearn.feature_selection.SelectPercentile.get_feature_names_out", "feature_selection.SelectPercentile.get_params()": "modules/generated/sklearn.feature_selection.selectpercentile.html#sklearn.feature_selection.SelectPercentile.get_params", "feature_selection.SelectPercentile.get_support()": "modules/generated/sklearn.feature_selection.selectpercentile.html#sklearn.feature_selection.SelectPercentile.get_support", "feature_selection.SelectPercentile.inverse_transform()": "modules/generated/sklearn.feature_selection.selectpercentile.html#sklearn.feature_selection.SelectPercentile.inverse_transform", "feature_selection.SelectPercentile.set_params()": "modules/generated/sklearn.feature_selection.selectpercentile.html#sklearn.feature_selection.SelectPercentile.set_params", "feature_selection.SelectPercentile.transform()": "modules/generated/sklearn.feature_selection.selectpercentile.html#sklearn.feature_selection.SelectPercentile.transform", "feature_selection.SequentialFeatureSelector": "modules/generated/sklearn.feature_selection.sequentialfeatureselector.html#sklearn.feature_selection.SequentialFeatureSelector", "feature_selection.SequentialFeatureSelector()": "modules/generated/sklearn.feature_selection.sequentialfeatureselector.html", "feature_selection.SequentialFeatureSelector.fit()": "modules/generated/sklearn.feature_selection.sequentialfeatureselector.html#sklearn.feature_selection.SequentialFeatureSelector.fit", "feature_selection.SequentialFeatureSelector.fit_transform()": "modules/generated/sklearn.feature_selection.sequentialfeatureselector.html#sklearn.feature_selection.SequentialFeatureSelector.fit_transform", "feature_selection.SequentialFeatureSelector.get_feature_names_out()": "modules/generated/sklearn.feature_selection.sequentialfeatureselector.html#sklearn.feature_selection.SequentialFeatureSelector.get_feature_names_out", "feature_selection.SequentialFeatureSelector.get_params()": "modules/generated/sklearn.feature_selection.sequentialfeatureselector.html#sklearn.feature_selection.SequentialFeatureSelector.get_params", "feature_selection.SequentialFeatureSelector.get_support()": "modules/generated/sklearn.feature_selection.sequentialfeatureselector.html#sklearn.feature_selection.SequentialFeatureSelector.get_support", "feature_selection.SequentialFeatureSelector.inverse_transform()": "modules/generated/sklearn.feature_selection.sequentialfeatureselector.html#sklearn.feature_selection.SequentialFeatureSelector.inverse_transform", "feature_selection.SequentialFeatureSelector.set_params()": "modules/generated/sklearn.feature_selection.sequentialfeatureselector.html#sklearn.feature_selection.SequentialFeatureSelector.set_params", "feature_selection.SequentialFeatureSelector.transform()": "modules/generated/sklearn.feature_selection.sequentialfeatureselector.html#sklearn.feature_selection.SequentialFeatureSelector.transform", "feature_selection.VarianceThreshold": "modules/generated/sklearn.feature_selection.variancethreshold.html#sklearn.feature_selection.VarianceThreshold", "feature_selection.VarianceThreshold()": "modules/generated/sklearn.feature_selection.variancethreshold.html", "feature_selection.VarianceThreshold.fit()": "modules/generated/sklearn.feature_selection.variancethreshold.html#sklearn.feature_selection.VarianceThreshold.fit", "feature_selection.VarianceThreshold.fit_transform()": "modules/generated/sklearn.feature_selection.variancethreshold.html#sklearn.feature_selection.VarianceThreshold.fit_transform", "feature_selection.VarianceThreshold.get_feature_names_out()": "modules/generated/sklearn.feature_selection.variancethreshold.html#sklearn.feature_selection.VarianceThreshold.get_feature_names_out", "feature_selection.VarianceThreshold.get_params()": "modules/generated/sklearn.feature_selection.variancethreshold.html#sklearn.feature_selection.VarianceThreshold.get_params", "feature_selection.VarianceThreshold.get_support()": "modules/generated/sklearn.feature_selection.variancethreshold.html#sklearn.feature_selection.VarianceThreshold.get_support", "feature_selection.VarianceThreshold.inverse_transform()": "modules/generated/sklearn.feature_selection.variancethreshold.html#sklearn.feature_selection.VarianceThreshold.inverse_transform", "feature_selection.VarianceThreshold.set_params()": "modules/generated/sklearn.feature_selection.variancethreshold.html#sklearn.feature_selection.VarianceThreshold.set_params", "feature_selection.VarianceThreshold.transform()": "modules/generated/sklearn.feature_selection.variancethreshold.html#sklearn.feature_selection.VarianceThreshold.transform", "gaussian_process.GaussianProcessClassifier": "modules/generated/sklearn.gaussian_process.gaussianprocessclassifier.html#sklearn.gaussian_process.GaussianProcessClassifier", "gaussian_process.GaussianProcessClassifier()": "modules/generated/sklearn.gaussian_process.gaussianprocessclassifier.html", "gaussian_process.GaussianProcessClassifier.fit()": "modules/generated/sklearn.gaussian_process.gaussianprocessclassifier.html#sklearn.gaussian_process.GaussianProcessClassifier.fit", "gaussian_process.GaussianProcessClassifier.get_params()": "modules/generated/sklearn.gaussian_process.gaussianprocessclassifier.html#sklearn.gaussian_process.GaussianProcessClassifier.get_params", "gaussian_process.GaussianProcessClassifier.log_marginal_likelihood()": "modules/generated/sklearn.gaussian_process.gaussianprocessclassifier.html#sklearn.gaussian_process.GaussianProcessClassifier.log_marginal_likelihood", "gaussian_process.GaussianProcessClassifier.predict()": "modules/generated/sklearn.gaussian_process.gaussianprocessclassifier.html#sklearn.gaussian_process.GaussianProcessClassifier.predict", "gaussian_process.GaussianProcessClassifier.predict_proba()": "modules/generated/sklearn.gaussian_process.gaussianprocessclassifier.html#sklearn.gaussian_process.GaussianProcessClassifier.predict_proba", "gaussian_process.GaussianProcessClassifier.score()": "modules/generated/sklearn.gaussian_process.gaussianprocessclassifier.html#sklearn.gaussian_process.GaussianProcessClassifier.score", "gaussian_process.GaussianProcessClassifier.set_params()": "modules/generated/sklearn.gaussian_process.gaussianprocessclassifier.html#sklearn.gaussian_process.GaussianProcessClassifier.set_params", "gaussian_process.GaussianProcessRegressor": "modules/generated/sklearn.gaussian_process.gaussianprocessregressor.html#sklearn.gaussian_process.GaussianProcessRegressor", "gaussian_process.GaussianProcessRegressor()": "modules/generated/sklearn.gaussian_process.gaussianprocessregressor.html", "gaussian_process.GaussianProcessRegressor.fit()": "modules/generated/sklearn.gaussian_process.gaussianprocessregressor.html#sklearn.gaussian_process.GaussianProcessRegressor.fit", "gaussian_process.GaussianProcessRegressor.get_params()": "modules/generated/sklearn.gaussian_process.gaussianprocessregressor.html#sklearn.gaussian_process.GaussianProcessRegressor.get_params", "gaussian_process.GaussianProcessRegressor.log_marginal_likelihood()": "modules/generated/sklearn.gaussian_process.gaussianprocessregressor.html#sklearn.gaussian_process.GaussianProcessRegressor.log_marginal_likelihood", "gaussian_process.GaussianProcessRegressor.predict()": "modules/generated/sklearn.gaussian_process.gaussianprocessregressor.html#sklearn.gaussian_process.GaussianProcessRegressor.predict", "gaussian_process.GaussianProcessRegressor.sample_y()": "modules/generated/sklearn.gaussian_process.gaussianprocessregressor.html#sklearn.gaussian_process.GaussianProcessRegressor.sample_y", "gaussian_process.GaussianProcessRegressor.score()": "modules/generated/sklearn.gaussian_process.gaussianprocessregressor.html#sklearn.gaussian_process.GaussianProcessRegressor.score", "gaussian_process.GaussianProcessRegressor.set_params()": "modules/generated/sklearn.gaussian_process.gaussianprocessregressor.html#sklearn.gaussian_process.GaussianProcessRegressor.set_params", "gaussian_process.kernels.CompoundKernel": "modules/generated/sklearn.gaussian_process.kernels.compoundkernel.html#sklearn.gaussian_process.kernels.CompoundKernel", "gaussian_process.kernels.CompoundKernel()": "modules/generated/sklearn.gaussian_process.kernels.compoundkernel.html", "gaussian_process.kernels.CompoundKernel.__call__()": "modules/generated/sklearn.gaussian_process.kernels.compoundkernel.html#sklearn.gaussian_process.kernels.CompoundKernel.__call__", "gaussian_process.kernels.CompoundKernel.clone_with_theta()": "modules/generated/sklearn.gaussian_process.kernels.compoundkernel.html#sklearn.gaussian_process.kernels.CompoundKernel.clone_with_theta", "gaussian_process.kernels.CompoundKernel.diag()": "modules/generated/sklearn.gaussian_process.kernels.compoundkernel.html#sklearn.gaussian_process.kernels.CompoundKernel.diag", "gaussian_process.kernels.CompoundKernel.get_params()": "modules/generated/sklearn.gaussian_process.kernels.compoundkernel.html#sklearn.gaussian_process.kernels.CompoundKernel.get_params", "gaussian_process.kernels.CompoundKernel.is_stationary()": "modules/generated/sklearn.gaussian_process.kernels.compoundkernel.html#sklearn.gaussian_process.kernels.CompoundKernel.is_stationary", "gaussian_process.kernels.CompoundKernel.set_params()": "modules/generated/sklearn.gaussian_process.kernels.compoundkernel.html#sklearn.gaussian_process.kernels.CompoundKernel.set_params", "gaussian_process.kernels.ConstantKernel": "modules/generated/sklearn.gaussian_process.kernels.constantkernel.html#sklearn.gaussian_process.kernels.ConstantKernel", "gaussian_process.kernels.ConstantKernel()": "modules/generated/sklearn.gaussian_process.kernels.constantkernel.html", "gaussian_process.kernels.ConstantKernel.__call__()": "modules/generated/sklearn.gaussian_process.kernels.constantkernel.html#sklearn.gaussian_process.kernels.ConstantKernel.__call__", "gaussian_process.kernels.ConstantKernel.clone_with_theta()": "modules/generated/sklearn.gaussian_process.kernels.constantkernel.html#sklearn.gaussian_process.kernels.ConstantKernel.clone_with_theta", "gaussian_process.kernels.ConstantKernel.diag()": "modules/generated/sklearn.gaussian_process.kernels.constantkernel.html#sklearn.gaussian_process.kernels.ConstantKernel.diag", "gaussian_process.kernels.ConstantKernel.get_params()": "modules/generated/sklearn.gaussian_process.kernels.constantkernel.html#sklearn.gaussian_process.kernels.ConstantKernel.get_params", "gaussian_process.kernels.ConstantKernel.is_stationary()": "modules/generated/sklearn.gaussian_process.kernels.constantkernel.html#sklearn.gaussian_process.kernels.ConstantKernel.is_stationary", "gaussian_process.kernels.ConstantKernel.set_params()": "modules/generated/sklearn.gaussian_process.kernels.constantkernel.html#sklearn.gaussian_process.kernels.ConstantKernel.set_params", "gaussian_process.kernels.DotProduct": "modules/generated/sklearn.gaussian_process.kernels.dotproduct.html#sklearn.gaussian_process.kernels.DotProduct", "gaussian_process.kernels.DotProduct()": "modules/generated/sklearn.gaussian_process.kernels.dotproduct.html", "gaussian_process.kernels.DotProduct.__call__()": "modules/generated/sklearn.gaussian_process.kernels.dotproduct.html#sklearn.gaussian_process.kernels.DotProduct.__call__", "gaussian_process.kernels.DotProduct.clone_with_theta()": "modules/generated/sklearn.gaussian_process.kernels.dotproduct.html#sklearn.gaussian_process.kernels.DotProduct.clone_with_theta", "gaussian_process.kernels.DotProduct.diag()": "modules/generated/sklearn.gaussian_process.kernels.dotproduct.html#sklearn.gaussian_process.kernels.DotProduct.diag", "gaussian_process.kernels.DotProduct.get_params()": "modules/generated/sklearn.gaussian_process.kernels.dotproduct.html#sklearn.gaussian_process.kernels.DotProduct.get_params", "gaussian_process.kernels.DotProduct.is_stationary()": "modules/generated/sklearn.gaussian_process.kernels.dotproduct.html#sklearn.gaussian_process.kernels.DotProduct.is_stationary", "gaussian_process.kernels.DotProduct.set_params()": "modules/generated/sklearn.gaussian_process.kernels.dotproduct.html#sklearn.gaussian_process.kernels.DotProduct.set_params", "gaussian_process.kernels.Exponentiation": "modules/generated/sklearn.gaussian_process.kernels.exponentiation.html#sklearn.gaussian_process.kernels.Exponentiation", "gaussian_process.kernels.Exponentiation()": "modules/generated/sklearn.gaussian_process.kernels.exponentiation.html", "gaussian_process.kernels.Exponentiation.__call__()": "modules/generated/sklearn.gaussian_process.kernels.exponentiation.html#sklearn.gaussian_process.kernels.Exponentiation.__call__", "gaussian_process.kernels.Exponentiation.clone_with_theta()": "modules/generated/sklearn.gaussian_process.kernels.exponentiation.html#sklearn.gaussian_process.kernels.Exponentiation.clone_with_theta", "gaussian_process.kernels.Exponentiation.diag()": "modules/generated/sklearn.gaussian_process.kernels.exponentiation.html#sklearn.gaussian_process.kernels.Exponentiation.diag", "gaussian_process.kernels.Exponentiation.get_params()": "modules/generated/sklearn.gaussian_process.kernels.exponentiation.html#sklearn.gaussian_process.kernels.Exponentiation.get_params", "gaussian_process.kernels.Exponentiation.is_stationary()": "modules/generated/sklearn.gaussian_process.kernels.exponentiation.html#sklearn.gaussian_process.kernels.Exponentiation.is_stationary", "gaussian_process.kernels.Exponentiation.set_params()": "modules/generated/sklearn.gaussian_process.kernels.exponentiation.html#sklearn.gaussian_process.kernels.Exponentiation.set_params", "gaussian_process.kernels.ExpSineSquared": "modules/generated/sklearn.gaussian_process.kernels.expsinesquared.html#sklearn.gaussian_process.kernels.ExpSineSquared", "gaussian_process.kernels.ExpSineSquared()": "modules/generated/sklearn.gaussian_process.kernels.expsinesquared.html", "gaussian_process.kernels.ExpSineSquared.__call__()": "modules/generated/sklearn.gaussian_process.kernels.expsinesquared.html#sklearn.gaussian_process.kernels.ExpSineSquared.__call__", "gaussian_process.kernels.ExpSineSquared.clone_with_theta()": "modules/generated/sklearn.gaussian_process.kernels.expsinesquared.html#sklearn.gaussian_process.kernels.ExpSineSquared.clone_with_theta", "gaussian_process.kernels.ExpSineSquared.diag()": "modules/generated/sklearn.gaussian_process.kernels.expsinesquared.html#sklearn.gaussian_process.kernels.ExpSineSquared.diag", "gaussian_process.kernels.ExpSineSquared.get_params()": "modules/generated/sklearn.gaussian_process.kernels.expsinesquared.html#sklearn.gaussian_process.kernels.ExpSineSquared.get_params", "gaussian_process.kernels.ExpSineSquared.is_stationary()": "modules/generated/sklearn.gaussian_process.kernels.expsinesquared.html#sklearn.gaussian_process.kernels.ExpSineSquared.is_stationary", "gaussian_process.kernels.ExpSineSquared.set_params()": "modules/generated/sklearn.gaussian_process.kernels.expsinesquared.html#sklearn.gaussian_process.kernels.ExpSineSquared.set_params", "gaussian_process.kernels.Hyperparameter": "modules/generated/sklearn.gaussian_process.kernels.hyperparameter.html#sklearn.gaussian_process.kernels.Hyperparameter", "gaussian_process.kernels.Hyperparameter()": "modules/generated/sklearn.gaussian_process.kernels.hyperparameter.html", "gaussian_process.kernels.Hyperparameter.__call__()": "modules/generated/sklearn.gaussian_process.kernels.hyperparameter.html#sklearn.gaussian_process.kernels.Hyperparameter.__call__", "gaussian_process.kernels.Hyperparameter.bounds": "modules/generated/sklearn.gaussian_process.kernels.hyperparameter.html#sklearn.gaussian_process.kernels.Hyperparameter.bounds", "gaussian_process.kernels.Hyperparameter.count()": "modules/generated/sklearn.gaussian_process.kernels.hyperparameter.html#sklearn.gaussian_process.kernels.Hyperparameter.count", "gaussian_process.kernels.Hyperparameter.fixed": "modules/generated/sklearn.gaussian_process.kernels.hyperparameter.html#sklearn.gaussian_process.kernels.Hyperparameter.fixed", "gaussian_process.kernels.Hyperparameter.index()": "modules/generated/sklearn.gaussian_process.kernels.hyperparameter.html#sklearn.gaussian_process.kernels.Hyperparameter.index", "gaussian_process.kernels.Hyperparameter.n_elements": "modules/generated/sklearn.gaussian_process.kernels.hyperparameter.html#sklearn.gaussian_process.kernels.Hyperparameter.n_elements", "gaussian_process.kernels.Hyperparameter.name": "modules/generated/sklearn.gaussian_process.kernels.hyperparameter.html#sklearn.gaussian_process.kernels.Hyperparameter.name", "gaussian_process.kernels.Hyperparameter.value_type": "modules/generated/sklearn.gaussian_process.kernels.hyperparameter.html#sklearn.gaussian_process.kernels.Hyperparameter.value_type", "gaussian_process.kernels.Kernel": "modules/generated/sklearn.gaussian_process.kernels.kernel.html#sklearn.gaussian_process.kernels.Kernel", "gaussian_process.kernels.Kernel.__call__()": "modules/generated/sklearn.gaussian_process.kernels.kernel.html#sklearn.gaussian_process.kernels.Kernel.__call__", "gaussian_process.kernels.Kernel.clone_with_theta()": "modules/generated/sklearn.gaussian_process.kernels.kernel.html#sklearn.gaussian_process.kernels.Kernel.clone_with_theta", "gaussian_process.kernels.Kernel.diag()": "modules/generated/sklearn.gaussian_process.kernels.kernel.html#sklearn.gaussian_process.kernels.Kernel.diag", "gaussian_process.kernels.Kernel.get_params()": "modules/generated/sklearn.gaussian_process.kernels.kernel.html#sklearn.gaussian_process.kernels.Kernel.get_params", "gaussian_process.kernels.Kernel.is_stationary()": "modules/generated/sklearn.gaussian_process.kernels.kernel.html#sklearn.gaussian_process.kernels.Kernel.is_stationary", "gaussian_process.kernels.Kernel.set_params()": "modules/generated/sklearn.gaussian_process.kernels.kernel.html#sklearn.gaussian_process.kernels.Kernel.set_params", "gaussian_process.kernels.Matern": "modules/generated/sklearn.gaussian_process.kernels.matern.html#sklearn.gaussian_process.kernels.Matern", "gaussian_process.kernels.Matern()": "modules/generated/sklearn.gaussian_process.kernels.matern.html", "gaussian_process.kernels.Matern.__call__()": "modules/generated/sklearn.gaussian_process.kernels.matern.html#sklearn.gaussian_process.kernels.Matern.__call__", "gaussian_process.kernels.Matern.clone_with_theta()": "modules/generated/sklearn.gaussian_process.kernels.matern.html#sklearn.gaussian_process.kernels.Matern.clone_with_theta", "gaussian_process.kernels.Matern.diag()": "modules/generated/sklearn.gaussian_process.kernels.matern.html#sklearn.gaussian_process.kernels.Matern.diag", "gaussian_process.kernels.Matern.get_params()": "modules/generated/sklearn.gaussian_process.kernels.matern.html#sklearn.gaussian_process.kernels.Matern.get_params", "gaussian_process.kernels.Matern.is_stationary()": "modules/generated/sklearn.gaussian_process.kernels.matern.html#sklearn.gaussian_process.kernels.Matern.is_stationary", "gaussian_process.kernels.Matern.set_params()": "modules/generated/sklearn.gaussian_process.kernels.matern.html#sklearn.gaussian_process.kernels.Matern.set_params", "gaussian_process.kernels.PairwiseKernel": "modules/generated/sklearn.gaussian_process.kernels.pairwisekernel.html#sklearn.gaussian_process.kernels.PairwiseKernel", "gaussian_process.kernels.PairwiseKernel()": "modules/generated/sklearn.gaussian_process.kernels.pairwisekernel.html", "gaussian_process.kernels.PairwiseKernel.__call__()": "modules/generated/sklearn.gaussian_process.kernels.pairwisekernel.html#sklearn.gaussian_process.kernels.PairwiseKernel.__call__", "gaussian_process.kernels.PairwiseKernel.clone_with_theta()": "modules/generated/sklearn.gaussian_process.kernels.pairwisekernel.html#sklearn.gaussian_process.kernels.PairwiseKernel.clone_with_theta", "gaussian_process.kernels.PairwiseKernel.diag()": "modules/generated/sklearn.gaussian_process.kernels.pairwisekernel.html#sklearn.gaussian_process.kernels.PairwiseKernel.diag", "gaussian_process.kernels.PairwiseKernel.get_params()": "modules/generated/sklearn.gaussian_process.kernels.pairwisekernel.html#sklearn.gaussian_process.kernels.PairwiseKernel.get_params", "gaussian_process.kernels.PairwiseKernel.is_stationary()": "modules/generated/sklearn.gaussian_process.kernels.pairwisekernel.html#sklearn.gaussian_process.kernels.PairwiseKernel.is_stationary", "gaussian_process.kernels.PairwiseKernel.set_params()": "modules/generated/sklearn.gaussian_process.kernels.pairwisekernel.html#sklearn.gaussian_process.kernels.PairwiseKernel.set_params", "gaussian_process.kernels.Product": "modules/generated/sklearn.gaussian_process.kernels.product.html#sklearn.gaussian_process.kernels.Product", "gaussian_process.kernels.Product()": "modules/generated/sklearn.gaussian_process.kernels.product.html", "gaussian_process.kernels.Product.__call__()": "modules/generated/sklearn.gaussian_process.kernels.product.html#sklearn.gaussian_process.kernels.Product.__call__", "gaussian_process.kernels.Product.clone_with_theta()": "modules/generated/sklearn.gaussian_process.kernels.product.html#sklearn.gaussian_process.kernels.Product.clone_with_theta", "gaussian_process.kernels.Product.diag()": "modules/generated/sklearn.gaussian_process.kernels.product.html#sklearn.gaussian_process.kernels.Product.diag", "gaussian_process.kernels.Product.get_params()": "modules/generated/sklearn.gaussian_process.kernels.product.html#sklearn.gaussian_process.kernels.Product.get_params", "gaussian_process.kernels.Product.is_stationary()": "modules/generated/sklearn.gaussian_process.kernels.product.html#sklearn.gaussian_process.kernels.Product.is_stationary", "gaussian_process.kernels.Product.set_params()": "modules/generated/sklearn.gaussian_process.kernels.product.html#sklearn.gaussian_process.kernels.Product.set_params", "gaussian_process.kernels.RationalQuadratic": "modules/generated/sklearn.gaussian_process.kernels.rationalquadratic.html#sklearn.gaussian_process.kernels.RationalQuadratic", "gaussian_process.kernels.RationalQuadratic()": "modules/generated/sklearn.gaussian_process.kernels.rationalquadratic.html", "gaussian_process.kernels.RationalQuadratic.__call__()": "modules/generated/sklearn.gaussian_process.kernels.rationalquadratic.html#sklearn.gaussian_process.kernels.RationalQuadratic.__call__", "gaussian_process.kernels.RationalQuadratic.clone_with_theta()": "modules/generated/sklearn.gaussian_process.kernels.rationalquadratic.html#sklearn.gaussian_process.kernels.RationalQuadratic.clone_with_theta", "gaussian_process.kernels.RationalQuadratic.diag()": "modules/generated/sklearn.gaussian_process.kernels.rationalquadratic.html#sklearn.gaussian_process.kernels.RationalQuadratic.diag", "gaussian_process.kernels.RationalQuadratic.get_params()": "modules/generated/sklearn.gaussian_process.kernels.rationalquadratic.html#sklearn.gaussian_process.kernels.RationalQuadratic.get_params", "gaussian_process.kernels.RationalQuadratic.is_stationary()": "modules/generated/sklearn.gaussian_process.kernels.rationalquadratic.html#sklearn.gaussian_process.kernels.RationalQuadratic.is_stationary", "gaussian_process.kernels.RationalQuadratic.set_params()": "modules/generated/sklearn.gaussian_process.kernels.rationalquadratic.html#sklearn.gaussian_process.kernels.RationalQuadratic.set_params", "gaussian_process.kernels.RBF": "modules/generated/sklearn.gaussian_process.kernels.rbf.html#sklearn.gaussian_process.kernels.RBF", "gaussian_process.kernels.RBF()": "modules/generated/sklearn.gaussian_process.kernels.rbf.html", "gaussian_process.kernels.RBF.__call__()": "modules/generated/sklearn.gaussian_process.kernels.rbf.html#sklearn.gaussian_process.kernels.RBF.__call__", "gaussian_process.kernels.RBF.clone_with_theta()": "modules/generated/sklearn.gaussian_process.kernels.rbf.html#sklearn.gaussian_process.kernels.RBF.clone_with_theta", "gaussian_process.kernels.RBF.diag()": "modules/generated/sklearn.gaussian_process.kernels.rbf.html#sklearn.gaussian_process.kernels.RBF.diag", "gaussian_process.kernels.RBF.get_params()": "modules/generated/sklearn.gaussian_process.kernels.rbf.html#sklearn.gaussian_process.kernels.RBF.get_params", "gaussian_process.kernels.RBF.is_stationary()": "modules/generated/sklearn.gaussian_process.kernels.rbf.html#sklearn.gaussian_process.kernels.RBF.is_stationary", "gaussian_process.kernels.RBF.set_params()": "modules/generated/sklearn.gaussian_process.kernels.rbf.html#sklearn.gaussian_process.kernels.RBF.set_params", "gaussian_process.kernels.Sum": "modules/generated/sklearn.gaussian_process.kernels.sum.html#sklearn.gaussian_process.kernels.Sum", "gaussian_process.kernels.Sum()": "modules/generated/sklearn.gaussian_process.kernels.sum.html", "gaussian_process.kernels.Sum.__call__()": "modules/generated/sklearn.gaussian_process.kernels.sum.html#sklearn.gaussian_process.kernels.Sum.__call__", "gaussian_process.kernels.Sum.clone_with_theta()": "modules/generated/sklearn.gaussian_process.kernels.sum.html#sklearn.gaussian_process.kernels.Sum.clone_with_theta", "gaussian_process.kernels.Sum.diag()": "modules/generated/sklearn.gaussian_process.kernels.sum.html#sklearn.gaussian_process.kernels.Sum.diag", "gaussian_process.kernels.Sum.get_params()": "modules/generated/sklearn.gaussian_process.kernels.sum.html#sklearn.gaussian_process.kernels.Sum.get_params", "gaussian_process.kernels.Sum.is_stationary()": "modules/generated/sklearn.gaussian_process.kernels.sum.html#sklearn.gaussian_process.kernels.Sum.is_stationary", "gaussian_process.kernels.Sum.set_params()": "modules/generated/sklearn.gaussian_process.kernels.sum.html#sklearn.gaussian_process.kernels.Sum.set_params", "gaussian_process.kernels.WhiteKernel": "modules/generated/sklearn.gaussian_process.kernels.whitekernel.html#sklearn.gaussian_process.kernels.WhiteKernel", "gaussian_process.kernels.WhiteKernel()": "modules/generated/sklearn.gaussian_process.kernels.whitekernel.html", "gaussian_process.kernels.WhiteKernel.__call__()": "modules/generated/sklearn.gaussian_process.kernels.whitekernel.html#sklearn.gaussian_process.kernels.WhiteKernel.__call__", "gaussian_process.kernels.WhiteKernel.clone_with_theta()": "modules/generated/sklearn.gaussian_process.kernels.whitekernel.html#sklearn.gaussian_process.kernels.WhiteKernel.clone_with_theta", "gaussian_process.kernels.WhiteKernel.diag()": "modules/generated/sklearn.gaussian_process.kernels.whitekernel.html#sklearn.gaussian_process.kernels.WhiteKernel.diag", "gaussian_process.kernels.WhiteKernel.get_params()": "modules/generated/sklearn.gaussian_process.kernels.whitekernel.html#sklearn.gaussian_process.kernels.WhiteKernel.get_params", "gaussian_process.kernels.WhiteKernel.is_stationary()": "modules/generated/sklearn.gaussian_process.kernels.whitekernel.html#sklearn.gaussian_process.kernels.WhiteKernel.is_stationary", "gaussian_process.kernels.WhiteKernel.set_params()": "modules/generated/sklearn.gaussian_process.kernels.whitekernel.html#sklearn.gaussian_process.kernels.WhiteKernel.set_params", "get_config()": "modules/generated/sklearn.get_config.html#sklearn.get_config", "impute.IterativeImputer": "modules/generated/sklearn.impute.iterativeimputer.html#sklearn.impute.IterativeImputer", "impute.IterativeImputer()": "modules/generated/sklearn.impute.iterativeimputer.html", "impute.IterativeImputer.fit()": "modules/generated/sklearn.impute.iterativeimputer.html#sklearn.impute.IterativeImputer.fit", "impute.IterativeImputer.fit_transform()": "modules/generated/sklearn.impute.iterativeimputer.html#sklearn.impute.IterativeImputer.fit_transform", "impute.IterativeImputer.get_feature_names_out()": "modules/generated/sklearn.impute.iterativeimputer.html#sklearn.impute.IterativeImputer.get_feature_names_out", "impute.IterativeImputer.get_params()": "modules/generated/sklearn.impute.iterativeimputer.html#sklearn.impute.IterativeImputer.get_params", "impute.IterativeImputer.set_params()": "modules/generated/sklearn.impute.iterativeimputer.html#sklearn.impute.IterativeImputer.set_params", "impute.IterativeImputer.transform()": "modules/generated/sklearn.impute.iterativeimputer.html#sklearn.impute.IterativeImputer.transform", "impute.KNNImputer": "modules/generated/sklearn.impute.knnimputer.html#sklearn.impute.KNNImputer", "impute.KNNImputer()": "modules/generated/sklearn.impute.knnimputer.html", "impute.KNNImputer.fit()": "modules/generated/sklearn.impute.knnimputer.html#sklearn.impute.KNNImputer.fit", "impute.KNNImputer.fit_transform()": "modules/generated/sklearn.impute.knnimputer.html#sklearn.impute.KNNImputer.fit_transform", "impute.KNNImputer.get_feature_names_out()": "modules/generated/sklearn.impute.knnimputer.html#sklearn.impute.KNNImputer.get_feature_names_out", "impute.KNNImputer.get_params()": "modules/generated/sklearn.impute.knnimputer.html#sklearn.impute.KNNImputer.get_params", "impute.KNNImputer.set_params()": "modules/generated/sklearn.impute.knnimputer.html#sklearn.impute.KNNImputer.set_params", "impute.KNNImputer.transform()": "modules/generated/sklearn.impute.knnimputer.html#sklearn.impute.KNNImputer.transform", "impute.MissingIndicator": "modules/generated/sklearn.impute.missingindicator.html#sklearn.impute.MissingIndicator", "impute.MissingIndicator()": "modules/generated/sklearn.impute.missingindicator.html", "impute.MissingIndicator.fit()": "modules/generated/sklearn.impute.missingindicator.html#sklearn.impute.MissingIndicator.fit", "impute.MissingIndicator.fit_transform()": "modules/generated/sklearn.impute.missingindicator.html#sklearn.impute.MissingIndicator.fit_transform", "impute.MissingIndicator.get_feature_names_out()": "modules/generated/sklearn.impute.missingindicator.html#sklearn.impute.MissingIndicator.get_feature_names_out", "impute.MissingIndicator.get_params()": "modules/generated/sklearn.impute.missingindicator.html#sklearn.impute.MissingIndicator.get_params", "impute.MissingIndicator.set_params()": "modules/generated/sklearn.impute.missingindicator.html#sklearn.impute.MissingIndicator.set_params", "impute.MissingIndicator.transform()": "modules/generated/sklearn.impute.missingindicator.html#sklearn.impute.MissingIndicator.transform", "impute.SimpleImputer": "modules/generated/sklearn.impute.simpleimputer.html#sklearn.impute.SimpleImputer", "impute.SimpleImputer()": "modules/generated/sklearn.impute.simpleimputer.html", "impute.SimpleImputer.fit()": "modules/generated/sklearn.impute.simpleimputer.html#sklearn.impute.SimpleImputer.fit", "impute.SimpleImputer.fit_transform()": "modules/generated/sklearn.impute.simpleimputer.html#sklearn.impute.SimpleImputer.fit_transform", "impute.SimpleImputer.get_feature_names_out()": "modules/generated/sklearn.impute.simpleimputer.html#sklearn.impute.SimpleImputer.get_feature_names_out", "impute.SimpleImputer.get_params()": "modules/generated/sklearn.impute.simpleimputer.html#sklearn.impute.SimpleImputer.get_params", "impute.SimpleImputer.inverse_transform()": "modules/generated/sklearn.impute.simpleimputer.html#sklearn.impute.SimpleImputer.inverse_transform", "impute.SimpleImputer.set_params()": "modules/generated/sklearn.impute.simpleimputer.html#sklearn.impute.SimpleImputer.set_params", "impute.SimpleImputer.transform()": "modules/generated/sklearn.impute.simpleimputer.html#sklearn.impute.SimpleImputer.transform", "inspection.DecisionBoundaryDisplay": "modules/generated/sklearn.inspection.decisionboundarydisplay.html#sklearn.inspection.DecisionBoundaryDisplay", "inspection.DecisionBoundaryDisplay()": "modules/generated/sklearn.inspection.decisionboundarydisplay.html", "inspection.DecisionBoundaryDisplay.from_estimator()": "modules/generated/sklearn.inspection.decisionboundarydisplay.html#sklearn.inspection.DecisionBoundaryDisplay.from_estimator", "inspection.DecisionBoundaryDisplay.plot()": "modules/generated/sklearn.inspection.decisionboundarydisplay.html#sklearn.inspection.DecisionBoundaryDisplay.plot", "inspection.partial_dependence()": "modules/generated/sklearn.inspection.partial_dependence.html#sklearn.inspection.partial_dependence", "inspection.PartialDependenceDisplay": "modules/generated/sklearn.inspection.partialdependencedisplay.html#sklearn.inspection.PartialDependenceDisplay", "inspection.PartialDependenceDisplay()": "modules/generated/sklearn.inspection.partialdependencedisplay.html", "inspection.PartialDependenceDisplay.from_estimator()": "modules/generated/sklearn.inspection.partialdependencedisplay.html#sklearn.inspection.PartialDependenceDisplay.from_estimator", "inspection.PartialDependenceDisplay.plot()": "modules/generated/sklearn.inspection.partialdependencedisplay.html#sklearn.inspection.PartialDependenceDisplay.plot", "inspection.permutation_importance()": "modules/generated/sklearn.inspection.permutation_importance.html#sklearn.inspection.permutation_importance", "inspection.plot_partial_dependence()": "modules/generated/sklearn.inspection.plot_partial_dependence.html#sklearn.inspection.plot_partial_dependence", "isotonic.check_increasing()": "modules/generated/sklearn.isotonic.check_increasing.html#sklearn.isotonic.check_increasing", "isotonic.isotonic_regression()": "modules/generated/sklearn.isotonic.isotonic_regression.html#sklearn.isotonic.isotonic_regression", "isotonic.IsotonicRegression": "modules/generated/sklearn.isotonic.isotonicregression.html#sklearn.isotonic.IsotonicRegression", "isotonic.IsotonicRegression()": "modules/generated/sklearn.isotonic.isotonicregression.html", "isotonic.IsotonicRegression.fit()": "modules/generated/sklearn.isotonic.isotonicregression.html#sklearn.isotonic.IsotonicRegression.fit", "isotonic.IsotonicRegression.fit_transform()": "modules/generated/sklearn.isotonic.isotonicregression.html#sklearn.isotonic.IsotonicRegression.fit_transform", "isotonic.IsotonicRegression.get_feature_names_out()": "modules/generated/sklearn.isotonic.isotonicregression.html#sklearn.isotonic.IsotonicRegression.get_feature_names_out", "isotonic.IsotonicRegression.get_params()": "modules/generated/sklearn.isotonic.isotonicregression.html#sklearn.isotonic.IsotonicRegression.get_params", "isotonic.IsotonicRegression.predict()": "modules/generated/sklearn.isotonic.isotonicregression.html#sklearn.isotonic.IsotonicRegression.predict", "isotonic.IsotonicRegression.score()": "modules/generated/sklearn.isotonic.isotonicregression.html#sklearn.isotonic.IsotonicRegression.score", "isotonic.IsotonicRegression.set_params()": "modules/generated/sklearn.isotonic.isotonicregression.html#sklearn.isotonic.IsotonicRegression.set_params", "isotonic.IsotonicRegression.transform()": "modules/generated/sklearn.isotonic.isotonicregression.html#sklearn.isotonic.IsotonicRegression.transform", "kernel_approximation.AdditiveChi2Sampler": "modules/generated/sklearn.kernel_approximation.additivechi2sampler.html#sklearn.kernel_approximation.AdditiveChi2Sampler", "kernel_approximation.AdditiveChi2Sampler()": "modules/generated/sklearn.kernel_approximation.additivechi2sampler.html", "kernel_approximation.AdditiveChi2Sampler.fit()": "modules/generated/sklearn.kernel_approximation.additivechi2sampler.html#sklearn.kernel_approximation.AdditiveChi2Sampler.fit", "kernel_approximation.AdditiveChi2Sampler.fit_transform()": "modules/generated/sklearn.kernel_approximation.additivechi2sampler.html#sklearn.kernel_approximation.AdditiveChi2Sampler.fit_transform", "kernel_approximation.AdditiveChi2Sampler.get_feature_names_out()": "modules/generated/sklearn.kernel_approximation.additivechi2sampler.html#sklearn.kernel_approximation.AdditiveChi2Sampler.get_feature_names_out", "kernel_approximation.AdditiveChi2Sampler.get_params()": "modules/generated/sklearn.kernel_approximation.additivechi2sampler.html#sklearn.kernel_approximation.AdditiveChi2Sampler.get_params", "kernel_approximation.AdditiveChi2Sampler.set_params()": "modules/generated/sklearn.kernel_approximation.additivechi2sampler.html#sklearn.kernel_approximation.AdditiveChi2Sampler.set_params", "kernel_approximation.AdditiveChi2Sampler.transform()": "modules/generated/sklearn.kernel_approximation.additivechi2sampler.html#sklearn.kernel_approximation.AdditiveChi2Sampler.transform", "kernel_approximation.Nystroem": "modules/generated/sklearn.kernel_approximation.nystroem.html#sklearn.kernel_approximation.Nystroem", "kernel_approximation.Nystroem()": "modules/generated/sklearn.kernel_approximation.nystroem.html", "kernel_approximation.Nystroem.fit()": "modules/generated/sklearn.kernel_approximation.nystroem.html#sklearn.kernel_approximation.Nystroem.fit", "kernel_approximation.Nystroem.fit_transform()": "modules/generated/sklearn.kernel_approximation.nystroem.html#sklearn.kernel_approximation.Nystroem.fit_transform", "kernel_approximation.Nystroem.get_feature_names_out()": "modules/generated/sklearn.kernel_approximation.nystroem.html#sklearn.kernel_approximation.Nystroem.get_feature_names_out", "kernel_approximation.Nystroem.get_params()": "modules/generated/sklearn.kernel_approximation.nystroem.html#sklearn.kernel_approximation.Nystroem.get_params", "kernel_approximation.Nystroem.set_params()": "modules/generated/sklearn.kernel_approximation.nystroem.html#sklearn.kernel_approximation.Nystroem.set_params", "kernel_approximation.Nystroem.transform()": "modules/generated/sklearn.kernel_approximation.nystroem.html#sklearn.kernel_approximation.Nystroem.transform", "kernel_approximation.PolynomialCountSketch": "modules/generated/sklearn.kernel_approximation.polynomialcountsketch.html#sklearn.kernel_approximation.PolynomialCountSketch", "kernel_approximation.PolynomialCountSketch()": "modules/generated/sklearn.kernel_approximation.polynomialcountsketch.html", "kernel_approximation.PolynomialCountSketch.fit()": "modules/generated/sklearn.kernel_approximation.polynomialcountsketch.html#sklearn.kernel_approximation.PolynomialCountSketch.fit", "kernel_approximation.PolynomialCountSketch.fit_transform()": "modules/generated/sklearn.kernel_approximation.polynomialcountsketch.html#sklearn.kernel_approximation.PolynomialCountSketch.fit_transform", "kernel_approximation.PolynomialCountSketch.get_feature_names_out()": "modules/generated/sklearn.kernel_approximation.polynomialcountsketch.html#sklearn.kernel_approximation.PolynomialCountSketch.get_feature_names_out", "kernel_approximation.PolynomialCountSketch.get_params()": "modules/generated/sklearn.kernel_approximation.polynomialcountsketch.html#sklearn.kernel_approximation.PolynomialCountSketch.get_params", "kernel_approximation.PolynomialCountSketch.set_params()": "modules/generated/sklearn.kernel_approximation.polynomialcountsketch.html#sklearn.kernel_approximation.PolynomialCountSketch.set_params", "kernel_approximation.PolynomialCountSketch.transform()": "modules/generated/sklearn.kernel_approximation.polynomialcountsketch.html#sklearn.kernel_approximation.PolynomialCountSketch.transform", "kernel_approximation.RBFSampler": "modules/generated/sklearn.kernel_approximation.rbfsampler.html#sklearn.kernel_approximation.RBFSampler", "kernel_approximation.RBFSampler()": "modules/generated/sklearn.kernel_approximation.rbfsampler.html", "kernel_approximation.RBFSampler.fit()": "modules/generated/sklearn.kernel_approximation.rbfsampler.html#sklearn.kernel_approximation.RBFSampler.fit", "kernel_approximation.RBFSampler.fit_transform()": "modules/generated/sklearn.kernel_approximation.rbfsampler.html#sklearn.kernel_approximation.RBFSampler.fit_transform", "kernel_approximation.RBFSampler.get_feature_names_out()": "modules/generated/sklearn.kernel_approximation.rbfsampler.html#sklearn.kernel_approximation.RBFSampler.get_feature_names_out", "kernel_approximation.RBFSampler.get_params()": "modules/generated/sklearn.kernel_approximation.rbfsampler.html#sklearn.kernel_approximation.RBFSampler.get_params", "kernel_approximation.RBFSampler.set_params()": "modules/generated/sklearn.kernel_approximation.rbfsampler.html#sklearn.kernel_approximation.RBFSampler.set_params", "kernel_approximation.RBFSampler.transform()": "modules/generated/sklearn.kernel_approximation.rbfsampler.html#sklearn.kernel_approximation.RBFSampler.transform", "kernel_approximation.SkewedChi2Sampler": "modules/generated/sklearn.kernel_approximation.skewedchi2sampler.html#sklearn.kernel_approximation.SkewedChi2Sampler", "kernel_approximation.SkewedChi2Sampler()": "modules/generated/sklearn.kernel_approximation.skewedchi2sampler.html", "kernel_approximation.SkewedChi2Sampler.fit()": "modules/generated/sklearn.kernel_approximation.skewedchi2sampler.html#sklearn.kernel_approximation.SkewedChi2Sampler.fit", "kernel_approximation.SkewedChi2Sampler.fit_transform()": "modules/generated/sklearn.kernel_approximation.skewedchi2sampler.html#sklearn.kernel_approximation.SkewedChi2Sampler.fit_transform", "kernel_approximation.SkewedChi2Sampler.get_feature_names_out()": "modules/generated/sklearn.kernel_approximation.skewedchi2sampler.html#sklearn.kernel_approximation.SkewedChi2Sampler.get_feature_names_out", "kernel_approximation.SkewedChi2Sampler.get_params()": "modules/generated/sklearn.kernel_approximation.skewedchi2sampler.html#sklearn.kernel_approximation.SkewedChi2Sampler.get_params", "kernel_approximation.SkewedChi2Sampler.set_params()": "modules/generated/sklearn.kernel_approximation.skewedchi2sampler.html#sklearn.kernel_approximation.SkewedChi2Sampler.set_params", "kernel_approximation.SkewedChi2Sampler.transform()": "modules/generated/sklearn.kernel_approximation.skewedchi2sampler.html#sklearn.kernel_approximation.SkewedChi2Sampler.transform", "kernel_ridge.KernelRidge": "modules/generated/sklearn.kernel_ridge.kernelridge.html#sklearn.kernel_ridge.KernelRidge", "kernel_ridge.KernelRidge()": "modules/generated/sklearn.kernel_ridge.kernelridge.html", "kernel_ridge.KernelRidge.fit()": "modules/generated/sklearn.kernel_ridge.kernelridge.html#sklearn.kernel_ridge.KernelRidge.fit", "kernel_ridge.KernelRidge.get_params()": "modules/generated/sklearn.kernel_ridge.kernelridge.html#sklearn.kernel_ridge.KernelRidge.get_params", "kernel_ridge.KernelRidge.predict()": "modules/generated/sklearn.kernel_ridge.kernelridge.html#sklearn.kernel_ridge.KernelRidge.predict", "kernel_ridge.KernelRidge.score()": "modules/generated/sklearn.kernel_ridge.kernelridge.html#sklearn.kernel_ridge.KernelRidge.score", "kernel_ridge.KernelRidge.set_params()": "modules/generated/sklearn.kernel_ridge.kernelridge.html#sklearn.kernel_ridge.KernelRidge.set_params", "linear_model.ARDRegression": "modules/generated/sklearn.linear_model.ardregression.html#sklearn.linear_model.ARDRegression", "linear_model.ARDRegression()": "modules/generated/sklearn.linear_model.ardregression.html", "linear_model.ARDRegression.fit()": "modules/generated/sklearn.linear_model.ardregression.html#sklearn.linear_model.ARDRegression.fit", "linear_model.ARDRegression.get_params()": "modules/generated/sklearn.linear_model.ardregression.html#sklearn.linear_model.ARDRegression.get_params", "linear_model.ARDRegression.predict()": "modules/generated/sklearn.linear_model.ardregression.html#sklearn.linear_model.ARDRegression.predict", "linear_model.ARDRegression.score()": "modules/generated/sklearn.linear_model.ardregression.html#sklearn.linear_model.ARDRegression.score", "linear_model.ARDRegression.set_params()": "modules/generated/sklearn.linear_model.ardregression.html#sklearn.linear_model.ARDRegression.set_params", "linear_model.BayesianRidge": "modules/generated/sklearn.linear_model.bayesianridge.html#sklearn.linear_model.BayesianRidge", "linear_model.BayesianRidge()": "modules/generated/sklearn.linear_model.bayesianridge.html", "linear_model.BayesianRidge.fit()": "modules/generated/sklearn.linear_model.bayesianridge.html#sklearn.linear_model.BayesianRidge.fit", "linear_model.BayesianRidge.get_params()": "modules/generated/sklearn.linear_model.bayesianridge.html#sklearn.linear_model.BayesianRidge.get_params", "linear_model.BayesianRidge.predict()": "modules/generated/sklearn.linear_model.bayesianridge.html#sklearn.linear_model.BayesianRidge.predict", "linear_model.BayesianRidge.score()": "modules/generated/sklearn.linear_model.bayesianridge.html#sklearn.linear_model.BayesianRidge.score", "linear_model.BayesianRidge.set_params()": "modules/generated/sklearn.linear_model.bayesianridge.html#sklearn.linear_model.BayesianRidge.set_params", "linear_model.ElasticNet": "modules/generated/sklearn.linear_model.elasticnet.html#sklearn.linear_model.ElasticNet", "linear_model.ElasticNet()": "modules/generated/sklearn.linear_model.elasticnet.html", "linear_model.ElasticNet.fit()": "modules/generated/sklearn.linear_model.elasticnet.html#sklearn.linear_model.ElasticNet.fit", "linear_model.ElasticNet.get_params()": "modules/generated/sklearn.linear_model.elasticnet.html#sklearn.linear_model.ElasticNet.get_params", "linear_model.ElasticNet.path()": "modules/generated/sklearn.linear_model.elasticnet.html#sklearn.linear_model.ElasticNet.path", "linear_model.ElasticNet.predict()": "modules/generated/sklearn.linear_model.elasticnet.html#sklearn.linear_model.ElasticNet.predict", "linear_model.ElasticNet.score()": "modules/generated/sklearn.linear_model.elasticnet.html#sklearn.linear_model.ElasticNet.score", "linear_model.ElasticNet.set_params()": "modules/generated/sklearn.linear_model.elasticnet.html#sklearn.linear_model.ElasticNet.set_params", "linear_model.ElasticNetCV": "modules/generated/sklearn.linear_model.elasticnetcv.html#sklearn.linear_model.ElasticNetCV", "linear_model.ElasticNetCV()": "modules/generated/sklearn.linear_model.elasticnetcv.html", "linear_model.ElasticNetCV.fit()": "modules/generated/sklearn.linear_model.elasticnetcv.html#sklearn.linear_model.ElasticNetCV.fit", "linear_model.ElasticNetCV.get_params()": "modules/generated/sklearn.linear_model.elasticnetcv.html#sklearn.linear_model.ElasticNetCV.get_params", "linear_model.ElasticNetCV.path()": "modules/generated/sklearn.linear_model.elasticnetcv.html#sklearn.linear_model.ElasticNetCV.path", "linear_model.ElasticNetCV.predict()": "modules/generated/sklearn.linear_model.elasticnetcv.html#sklearn.linear_model.ElasticNetCV.predict", "linear_model.ElasticNetCV.score()": "modules/generated/sklearn.linear_model.elasticnetcv.html#sklearn.linear_model.ElasticNetCV.score", "linear_model.ElasticNetCV.set_params()": "modules/generated/sklearn.linear_model.elasticnetcv.html#sklearn.linear_model.ElasticNetCV.set_params", "linear_model.enet_path()": "modules/generated/sklearn.linear_model.enet_path.html#sklearn.linear_model.enet_path", "linear_model.GammaRegressor": "modules/generated/sklearn.linear_model.gammaregressor.html#sklearn.linear_model.GammaRegressor", "linear_model.GammaRegressor()": "modules/generated/sklearn.linear_model.gammaregressor.html", "linear_model.GammaRegressor.fit()": "modules/generated/sklearn.linear_model.gammaregressor.html#sklearn.linear_model.GammaRegressor.fit", "linear_model.GammaRegressor.get_params()": "modules/generated/sklearn.linear_model.gammaregressor.html#sklearn.linear_model.GammaRegressor.get_params", "linear_model.GammaRegressor.predict()": "modules/generated/sklearn.linear_model.gammaregressor.html#sklearn.linear_model.GammaRegressor.predict", "linear_model.GammaRegressor.score()": "modules/generated/sklearn.linear_model.gammaregressor.html#sklearn.linear_model.GammaRegressor.score", "linear_model.GammaRegressor.set_params()": "modules/generated/sklearn.linear_model.gammaregressor.html#sklearn.linear_model.GammaRegressor.set_params", "linear_model.HuberRegressor": "modules/generated/sklearn.linear_model.huberregressor.html#sklearn.linear_model.HuberRegressor", "linear_model.HuberRegressor()": "modules/generated/sklearn.linear_model.huberregressor.html", "linear_model.HuberRegressor.fit()": "modules/generated/sklearn.linear_model.huberregressor.html#sklearn.linear_model.HuberRegressor.fit", "linear_model.HuberRegressor.get_params()": "modules/generated/sklearn.linear_model.huberregressor.html#sklearn.linear_model.HuberRegressor.get_params", "linear_model.HuberRegressor.predict()": "modules/generated/sklearn.linear_model.huberregressor.html#sklearn.linear_model.HuberRegressor.predict", "linear_model.HuberRegressor.score()": "modules/generated/sklearn.linear_model.huberregressor.html#sklearn.linear_model.HuberRegressor.score", "linear_model.HuberRegressor.set_params()": "modules/generated/sklearn.linear_model.huberregressor.html#sklearn.linear_model.HuberRegressor.set_params", "linear_model.Lars": "modules/generated/sklearn.linear_model.lars.html#sklearn.linear_model.Lars", "linear_model.Lars()": "modules/generated/sklearn.linear_model.lars.html", "linear_model.Lars.fit()": "modules/generated/sklearn.linear_model.lars.html#sklearn.linear_model.Lars.fit", "linear_model.Lars.get_params()": "modules/generated/sklearn.linear_model.lars.html#sklearn.linear_model.Lars.get_params", "linear_model.Lars.predict()": "modules/generated/sklearn.linear_model.lars.html#sklearn.linear_model.Lars.predict", "linear_model.Lars.score()": "modules/generated/sklearn.linear_model.lars.html#sklearn.linear_model.Lars.score", "linear_model.Lars.set_params()": "modules/generated/sklearn.linear_model.lars.html#sklearn.linear_model.Lars.set_params", "linear_model.lars_path()": "modules/generated/sklearn.linear_model.lars_path.html#sklearn.linear_model.lars_path", "linear_model.lars_path_gram()": "modules/generated/sklearn.linear_model.lars_path_gram.html#sklearn.linear_model.lars_path_gram", "linear_model.LarsCV": "modules/generated/sklearn.linear_model.larscv.html#sklearn.linear_model.LarsCV", "linear_model.LarsCV()": "modules/generated/sklearn.linear_model.larscv.html", "linear_model.LarsCV.fit()": "modules/generated/sklearn.linear_model.larscv.html#sklearn.linear_model.LarsCV.fit", "linear_model.LarsCV.get_params()": "modules/generated/sklearn.linear_model.larscv.html#sklearn.linear_model.LarsCV.get_params", "linear_model.LarsCV.predict()": "modules/generated/sklearn.linear_model.larscv.html#sklearn.linear_model.LarsCV.predict", "linear_model.LarsCV.score()": "modules/generated/sklearn.linear_model.larscv.html#sklearn.linear_model.LarsCV.score", "linear_model.LarsCV.set_params()": "modules/generated/sklearn.linear_model.larscv.html#sklearn.linear_model.LarsCV.set_params", "linear_model.Lasso": "modules/generated/sklearn.linear_model.lasso.html#sklearn.linear_model.Lasso", "linear_model.Lasso()": "modules/generated/sklearn.linear_model.lasso.html", "linear_model.Lasso.fit()": "modules/generated/sklearn.linear_model.lasso.html#sklearn.linear_model.Lasso.fit", "linear_model.Lasso.get_params()": "modules/generated/sklearn.linear_model.lasso.html#sklearn.linear_model.Lasso.get_params", "linear_model.Lasso.path()": "modules/generated/sklearn.linear_model.lasso.html#sklearn.linear_model.Lasso.path", "linear_model.Lasso.predict()": "modules/generated/sklearn.linear_model.lasso.html#sklearn.linear_model.Lasso.predict", "linear_model.Lasso.score()": "modules/generated/sklearn.linear_model.lasso.html#sklearn.linear_model.Lasso.score", "linear_model.Lasso.set_params()": "modules/generated/sklearn.linear_model.lasso.html#sklearn.linear_model.Lasso.set_params", "linear_model.lasso_path()": "modules/generated/sklearn.linear_model.lasso_path.html#sklearn.linear_model.lasso_path", "linear_model.LassoCV": "modules/generated/sklearn.linear_model.lassocv.html#sklearn.linear_model.LassoCV", "linear_model.LassoCV()": "modules/generated/sklearn.linear_model.lassocv.html", "linear_model.LassoCV.fit()": "modules/generated/sklearn.linear_model.lassocv.html#sklearn.linear_model.LassoCV.fit", "linear_model.LassoCV.get_params()": "modules/generated/sklearn.linear_model.lassocv.html#sklearn.linear_model.LassoCV.get_params", "linear_model.LassoCV.path()": "modules/generated/sklearn.linear_model.lassocv.html#sklearn.linear_model.LassoCV.path", "linear_model.LassoCV.predict()": "modules/generated/sklearn.linear_model.lassocv.html#sklearn.linear_model.LassoCV.predict", "linear_model.LassoCV.score()": "modules/generated/sklearn.linear_model.lassocv.html#sklearn.linear_model.LassoCV.score", "linear_model.LassoCV.set_params()": "modules/generated/sklearn.linear_model.lassocv.html#sklearn.linear_model.LassoCV.set_params", "linear_model.LassoLars": "modules/generated/sklearn.linear_model.lassolars.html#sklearn.linear_model.LassoLars", "linear_model.LassoLars()": "modules/generated/sklearn.linear_model.lassolars.html", "linear_model.LassoLars.fit()": "modules/generated/sklearn.linear_model.lassolars.html#sklearn.linear_model.LassoLars.fit", "linear_model.LassoLars.get_params()": "modules/generated/sklearn.linear_model.lassolars.html#sklearn.linear_model.LassoLars.get_params", "linear_model.LassoLars.predict()": "modules/generated/sklearn.linear_model.lassolars.html#sklearn.linear_model.LassoLars.predict", "linear_model.LassoLars.score()": "modules/generated/sklearn.linear_model.lassolars.html#sklearn.linear_model.LassoLars.score", "linear_model.LassoLars.set_params()": "modules/generated/sklearn.linear_model.lassolars.html#sklearn.linear_model.LassoLars.set_params", "linear_model.LassoLarsCV": "modules/generated/sklearn.linear_model.lassolarscv.html#sklearn.linear_model.LassoLarsCV", "linear_model.LassoLarsCV()": "modules/generated/sklearn.linear_model.lassolarscv.html", "linear_model.LassoLarsCV.fit()": "modules/generated/sklearn.linear_model.lassolarscv.html#sklearn.linear_model.LassoLarsCV.fit", "linear_model.LassoLarsCV.get_params()": "modules/generated/sklearn.linear_model.lassolarscv.html#sklearn.linear_model.LassoLarsCV.get_params", "linear_model.LassoLarsCV.predict()": "modules/generated/sklearn.linear_model.lassolarscv.html#sklearn.linear_model.LassoLarsCV.predict", "linear_model.LassoLarsCV.score()": "modules/generated/sklearn.linear_model.lassolarscv.html#sklearn.linear_model.LassoLarsCV.score", "linear_model.LassoLarsCV.set_params()": "modules/generated/sklearn.linear_model.lassolarscv.html#sklearn.linear_model.LassoLarsCV.set_params", "linear_model.LassoLarsIC": "modules/generated/sklearn.linear_model.lassolarsic.html#sklearn.linear_model.LassoLarsIC", "linear_model.LassoLarsIC()": "modules/generated/sklearn.linear_model.lassolarsic.html", "linear_model.LassoLarsIC.fit()": "modules/generated/sklearn.linear_model.lassolarsic.html#sklearn.linear_model.LassoLarsIC.fit", "linear_model.LassoLarsIC.get_params()": "modules/generated/sklearn.linear_model.lassolarsic.html#sklearn.linear_model.LassoLarsIC.get_params", "linear_model.LassoLarsIC.predict()": "modules/generated/sklearn.linear_model.lassolarsic.html#sklearn.linear_model.LassoLarsIC.predict", "linear_model.LassoLarsIC.score()": "modules/generated/sklearn.linear_model.lassolarsic.html#sklearn.linear_model.LassoLarsIC.score", "linear_model.LassoLarsIC.set_params()": "modules/generated/sklearn.linear_model.lassolarsic.html#sklearn.linear_model.LassoLarsIC.set_params", "linear_model.LinearRegression": "modules/generated/sklearn.linear_model.linearregression.html#sklearn.linear_model.LinearRegression", "linear_model.LinearRegression()": "modules/generated/sklearn.linear_model.linearregression.html", "linear_model.LinearRegression.fit()": "modules/generated/sklearn.linear_model.linearregression.html#sklearn.linear_model.LinearRegression.fit", "linear_model.LinearRegression.get_params()": "modules/generated/sklearn.linear_model.linearregression.html#sklearn.linear_model.LinearRegression.get_params", "linear_model.LinearRegression.predict()": "modules/generated/sklearn.linear_model.linearregression.html#sklearn.linear_model.LinearRegression.predict", "linear_model.LinearRegression.score()": "modules/generated/sklearn.linear_model.linearregression.html#sklearn.linear_model.LinearRegression.score", "linear_model.LinearRegression.set_params()": "modules/generated/sklearn.linear_model.linearregression.html#sklearn.linear_model.LinearRegression.set_params", "linear_model.LogisticRegression": "modules/generated/sklearn.linear_model.logisticregression.html#sklearn.linear_model.LogisticRegression", "linear_model.LogisticRegression()": "modules/generated/sklearn.linear_model.logisticregression.html", "linear_model.LogisticRegression.decision_function()": "modules/generated/sklearn.linear_model.logisticregression.html#sklearn.linear_model.LogisticRegression.decision_function", "linear_model.LogisticRegression.densify()": "modules/generated/sklearn.linear_model.logisticregression.html#sklearn.linear_model.LogisticRegression.densify", "linear_model.LogisticRegression.fit()": "modules/generated/sklearn.linear_model.logisticregression.html#sklearn.linear_model.LogisticRegression.fit", "linear_model.LogisticRegression.get_params()": "modules/generated/sklearn.linear_model.logisticregression.html#sklearn.linear_model.LogisticRegression.get_params", "linear_model.LogisticRegression.predict()": "modules/generated/sklearn.linear_model.logisticregression.html#sklearn.linear_model.LogisticRegression.predict", "linear_model.LogisticRegression.predict_log_proba()": "modules/generated/sklearn.linear_model.logisticregression.html#sklearn.linear_model.LogisticRegression.predict_log_proba", "linear_model.LogisticRegression.predict_proba()": "modules/generated/sklearn.linear_model.logisticregression.html#sklearn.linear_model.LogisticRegression.predict_proba", "linear_model.LogisticRegression.score()": "modules/generated/sklearn.linear_model.logisticregression.html#sklearn.linear_model.LogisticRegression.score", "linear_model.LogisticRegression.set_params()": "modules/generated/sklearn.linear_model.logisticregression.html#sklearn.linear_model.LogisticRegression.set_params", "linear_model.LogisticRegression.sparsify()": "modules/generated/sklearn.linear_model.logisticregression.html#sklearn.linear_model.LogisticRegression.sparsify", "linear_model.LogisticRegressionCV": "modules/generated/sklearn.linear_model.logisticregressioncv.html#sklearn.linear_model.LogisticRegressionCV", "linear_model.LogisticRegressionCV()": "modules/generated/sklearn.linear_model.logisticregressioncv.html", "linear_model.LogisticRegressionCV.decision_function()": "modules/generated/sklearn.linear_model.logisticregressioncv.html#sklearn.linear_model.LogisticRegressionCV.decision_function", "linear_model.LogisticRegressionCV.densify()": "modules/generated/sklearn.linear_model.logisticregressioncv.html#sklearn.linear_model.LogisticRegressionCV.densify", "linear_model.LogisticRegressionCV.fit()": "modules/generated/sklearn.linear_model.logisticregressioncv.html#sklearn.linear_model.LogisticRegressionCV.fit", "linear_model.LogisticRegressionCV.get_params()": "modules/generated/sklearn.linear_model.logisticregressioncv.html#sklearn.linear_model.LogisticRegressionCV.get_params", "linear_model.LogisticRegressionCV.predict()": "modules/generated/sklearn.linear_model.logisticregressioncv.html#sklearn.linear_model.LogisticRegressionCV.predict", "linear_model.LogisticRegressionCV.predict_log_proba()": "modules/generated/sklearn.linear_model.logisticregressioncv.html#sklearn.linear_model.LogisticRegressionCV.predict_log_proba", "linear_model.LogisticRegressionCV.predict_proba()": "modules/generated/sklearn.linear_model.logisticregressioncv.html#sklearn.linear_model.LogisticRegressionCV.predict_proba", "linear_model.LogisticRegressionCV.score()": "modules/generated/sklearn.linear_model.logisticregressioncv.html#sklearn.linear_model.LogisticRegressionCV.score", "linear_model.LogisticRegressionCV.set_params()": "modules/generated/sklearn.linear_model.logisticregressioncv.html#sklearn.linear_model.LogisticRegressionCV.set_params", "linear_model.LogisticRegressionCV.sparsify()": "modules/generated/sklearn.linear_model.logisticregressioncv.html#sklearn.linear_model.LogisticRegressionCV.sparsify", "linear_model.MultiTaskElasticNet": "modules/generated/sklearn.linear_model.multitaskelasticnet.html#sklearn.linear_model.MultiTaskElasticNet", "linear_model.MultiTaskElasticNet()": "modules/generated/sklearn.linear_model.multitaskelasticnet.html", "linear_model.MultiTaskElasticNet.fit()": "modules/generated/sklearn.linear_model.multitaskelasticnet.html#sklearn.linear_model.MultiTaskElasticNet.fit", "linear_model.MultiTaskElasticNet.get_params()": "modules/generated/sklearn.linear_model.multitaskelasticnet.html#sklearn.linear_model.MultiTaskElasticNet.get_params", "linear_model.MultiTaskElasticNet.path()": "modules/generated/sklearn.linear_model.multitaskelasticnet.html#sklearn.linear_model.MultiTaskElasticNet.path", "linear_model.MultiTaskElasticNet.predict()": "modules/generated/sklearn.linear_model.multitaskelasticnet.html#sklearn.linear_model.MultiTaskElasticNet.predict", "linear_model.MultiTaskElasticNet.score()": "modules/generated/sklearn.linear_model.multitaskelasticnet.html#sklearn.linear_model.MultiTaskElasticNet.score", "linear_model.MultiTaskElasticNet.set_params()": "modules/generated/sklearn.linear_model.multitaskelasticnet.html#sklearn.linear_model.MultiTaskElasticNet.set_params", "linear_model.MultiTaskElasticNetCV": "modules/generated/sklearn.linear_model.multitaskelasticnetcv.html#sklearn.linear_model.MultiTaskElasticNetCV", "linear_model.MultiTaskElasticNetCV()": "modules/generated/sklearn.linear_model.multitaskelasticnetcv.html", "linear_model.MultiTaskElasticNetCV.fit()": "modules/generated/sklearn.linear_model.multitaskelasticnetcv.html#sklearn.linear_model.MultiTaskElasticNetCV.fit", "linear_model.MultiTaskElasticNetCV.get_params()": "modules/generated/sklearn.linear_model.multitaskelasticnetcv.html#sklearn.linear_model.MultiTaskElasticNetCV.get_params", "linear_model.MultiTaskElasticNetCV.path()": "modules/generated/sklearn.linear_model.multitaskelasticnetcv.html#sklearn.linear_model.MultiTaskElasticNetCV.path", "linear_model.MultiTaskElasticNetCV.predict()": "modules/generated/sklearn.linear_model.multitaskelasticnetcv.html#sklearn.linear_model.MultiTaskElasticNetCV.predict", "linear_model.MultiTaskElasticNetCV.score()": "modules/generated/sklearn.linear_model.multitaskelasticnetcv.html#sklearn.linear_model.MultiTaskElasticNetCV.score", "linear_model.MultiTaskElasticNetCV.set_params()": "modules/generated/sklearn.linear_model.multitaskelasticnetcv.html#sklearn.linear_model.MultiTaskElasticNetCV.set_params", "linear_model.MultiTaskLasso": "modules/generated/sklearn.linear_model.multitasklasso.html#sklearn.linear_model.MultiTaskLasso", "linear_model.MultiTaskLasso()": "modules/generated/sklearn.linear_model.multitasklasso.html", "linear_model.MultiTaskLasso.fit()": "modules/generated/sklearn.linear_model.multitasklasso.html#sklearn.linear_model.MultiTaskLasso.fit", "linear_model.MultiTaskLasso.get_params()": "modules/generated/sklearn.linear_model.multitasklasso.html#sklearn.linear_model.MultiTaskLasso.get_params", "linear_model.MultiTaskLasso.path()": "modules/generated/sklearn.linear_model.multitasklasso.html#sklearn.linear_model.MultiTaskLasso.path", "linear_model.MultiTaskLasso.predict()": "modules/generated/sklearn.linear_model.multitasklasso.html#sklearn.linear_model.MultiTaskLasso.predict", "linear_model.MultiTaskLasso.score()": "modules/generated/sklearn.linear_model.multitasklasso.html#sklearn.linear_model.MultiTaskLasso.score", "linear_model.MultiTaskLasso.set_params()": "modules/generated/sklearn.linear_model.multitasklasso.html#sklearn.linear_model.MultiTaskLasso.set_params", "linear_model.MultiTaskLassoCV": "modules/generated/sklearn.linear_model.multitasklassocv.html#sklearn.linear_model.MultiTaskLassoCV", "linear_model.MultiTaskLassoCV()": "modules/generated/sklearn.linear_model.multitasklassocv.html", "linear_model.MultiTaskLassoCV.fit()": "modules/generated/sklearn.linear_model.multitasklassocv.html#sklearn.linear_model.MultiTaskLassoCV.fit", "linear_model.MultiTaskLassoCV.get_params()": "modules/generated/sklearn.linear_model.multitasklassocv.html#sklearn.linear_model.MultiTaskLassoCV.get_params", "linear_model.MultiTaskLassoCV.path()": "modules/generated/sklearn.linear_model.multitasklassocv.html#sklearn.linear_model.MultiTaskLassoCV.path", "linear_model.MultiTaskLassoCV.predict()": "modules/generated/sklearn.linear_model.multitasklassocv.html#sklearn.linear_model.MultiTaskLassoCV.predict", "linear_model.MultiTaskLassoCV.score()": "modules/generated/sklearn.linear_model.multitasklassocv.html#sklearn.linear_model.MultiTaskLassoCV.score", "linear_model.MultiTaskLassoCV.set_params()": "modules/generated/sklearn.linear_model.multitasklassocv.html#sklearn.linear_model.MultiTaskLassoCV.set_params", "linear_model.orthogonal_mp()": "modules/generated/sklearn.linear_model.orthogonal_mp.html#sklearn.linear_model.orthogonal_mp", "linear_model.orthogonal_mp_gram()": "modules/generated/sklearn.linear_model.orthogonal_mp_gram.html#sklearn.linear_model.orthogonal_mp_gram", "linear_model.OrthogonalMatchingPursuit": "modules/generated/sklearn.linear_model.orthogonalmatchingpursuit.html#sklearn.linear_model.OrthogonalMatchingPursuit", "linear_model.OrthogonalMatchingPursuit()": "modules/generated/sklearn.linear_model.orthogonalmatchingpursuit.html", "linear_model.OrthogonalMatchingPursuit.fit()": "modules/generated/sklearn.linear_model.orthogonalmatchingpursuit.html#sklearn.linear_model.OrthogonalMatchingPursuit.fit", "linear_model.OrthogonalMatchingPursuit.get_params()": "modules/generated/sklearn.linear_model.orthogonalmatchingpursuit.html#sklearn.linear_model.OrthogonalMatchingPursuit.get_params", "linear_model.OrthogonalMatchingPursuit.predict()": "modules/generated/sklearn.linear_model.orthogonalmatchingpursuit.html#sklearn.linear_model.OrthogonalMatchingPursuit.predict", "linear_model.OrthogonalMatchingPursuit.score()": "modules/generated/sklearn.linear_model.orthogonalmatchingpursuit.html#sklearn.linear_model.OrthogonalMatchingPursuit.score", "linear_model.OrthogonalMatchingPursuit.set_params()": "modules/generated/sklearn.linear_model.orthogonalmatchingpursuit.html#sklearn.linear_model.OrthogonalMatchingPursuit.set_params", "linear_model.OrthogonalMatchingPursuitCV": "modules/generated/sklearn.linear_model.orthogonalmatchingpursuitcv.html#sklearn.linear_model.OrthogonalMatchingPursuitCV", "linear_model.OrthogonalMatchingPursuitCV()": "modules/generated/sklearn.linear_model.orthogonalmatchingpursuitcv.html", "linear_model.OrthogonalMatchingPursuitCV.fit()": "modules/generated/sklearn.linear_model.orthogonalmatchingpursuitcv.html#sklearn.linear_model.OrthogonalMatchingPursuitCV.fit", "linear_model.OrthogonalMatchingPursuitCV.get_params()": "modules/generated/sklearn.linear_model.orthogonalmatchingpursuitcv.html#sklearn.linear_model.OrthogonalMatchingPursuitCV.get_params", "linear_model.OrthogonalMatchingPursuitCV.predict()": "modules/generated/sklearn.linear_model.orthogonalmatchingpursuitcv.html#sklearn.linear_model.OrthogonalMatchingPursuitCV.predict", "linear_model.OrthogonalMatchingPursuitCV.score()": "modules/generated/sklearn.linear_model.orthogonalmatchingpursuitcv.html#sklearn.linear_model.OrthogonalMatchingPursuitCV.score", "linear_model.OrthogonalMatchingPursuitCV.set_params()": "modules/generated/sklearn.linear_model.orthogonalmatchingpursuitcv.html#sklearn.linear_model.OrthogonalMatchingPursuitCV.set_params", "linear_model.PassiveAggressiveClassifier": "modules/generated/sklearn.linear_model.passiveaggressiveclassifier.html#sklearn.linear_model.PassiveAggressiveClassifier", "linear_model.PassiveAggressiveClassifier()": "modules/generated/sklearn.linear_model.passiveaggressiveclassifier.html", "linear_model.PassiveAggressiveClassifier.decision_function()": "modules/generated/sklearn.linear_model.passiveaggressiveclassifier.html#sklearn.linear_model.PassiveAggressiveClassifier.decision_function", "linear_model.PassiveAggressiveClassifier.densify()": "modules/generated/sklearn.linear_model.passiveaggressiveclassifier.html#sklearn.linear_model.PassiveAggressiveClassifier.densify", "linear_model.PassiveAggressiveClassifier.fit()": "modules/generated/sklearn.linear_model.passiveaggressiveclassifier.html#sklearn.linear_model.PassiveAggressiveClassifier.fit", "linear_model.PassiveAggressiveClassifier.get_params()": "modules/generated/sklearn.linear_model.passiveaggressiveclassifier.html#sklearn.linear_model.PassiveAggressiveClassifier.get_params", "linear_model.PassiveAggressiveClassifier.partial_fit()": "modules/generated/sklearn.linear_model.passiveaggressiveclassifier.html#sklearn.linear_model.PassiveAggressiveClassifier.partial_fit", "linear_model.PassiveAggressiveClassifier.predict()": "modules/generated/sklearn.linear_model.passiveaggressiveclassifier.html#sklearn.linear_model.PassiveAggressiveClassifier.predict", "linear_model.PassiveAggressiveClassifier.score()": "modules/generated/sklearn.linear_model.passiveaggressiveclassifier.html#sklearn.linear_model.PassiveAggressiveClassifier.score", "linear_model.PassiveAggressiveClassifier.set_params()": "modules/generated/sklearn.linear_model.passiveaggressiveclassifier.html#sklearn.linear_model.PassiveAggressiveClassifier.set_params", "linear_model.PassiveAggressiveClassifier.sparsify()": "modules/generated/sklearn.linear_model.passiveaggressiveclassifier.html#sklearn.linear_model.PassiveAggressiveClassifier.sparsify", "linear_model.PassiveAggressiveRegressor()": "modules/generated/sklearn.linear_model.passiveaggressiveregressor.html#sklearn.linear_model.PassiveAggressiveRegressor", "linear_model.Perceptron": "modules/generated/sklearn.linear_model.perceptron.html#sklearn.linear_model.Perceptron", "linear_model.Perceptron()": "modules/generated/sklearn.linear_model.perceptron.html", "linear_model.Perceptron.decision_function()": "modules/generated/sklearn.linear_model.perceptron.html#sklearn.linear_model.Perceptron.decision_function", "linear_model.Perceptron.densify()": "modules/generated/sklearn.linear_model.perceptron.html#sklearn.linear_model.Perceptron.densify", "linear_model.Perceptron.fit()": "modules/generated/sklearn.linear_model.perceptron.html#sklearn.linear_model.Perceptron.fit", "linear_model.Perceptron.get_params()": "modules/generated/sklearn.linear_model.perceptron.html#sklearn.linear_model.Perceptron.get_params", "linear_model.Perceptron.partial_fit()": "modules/generated/sklearn.linear_model.perceptron.html#sklearn.linear_model.Perceptron.partial_fit", "linear_model.Perceptron.predict()": "modules/generated/sklearn.linear_model.perceptron.html#sklearn.linear_model.Perceptron.predict", "linear_model.Perceptron.score()": "modules/generated/sklearn.linear_model.perceptron.html#sklearn.linear_model.Perceptron.score", "linear_model.Perceptron.set_params()": "modules/generated/sklearn.linear_model.perceptron.html#sklearn.linear_model.Perceptron.set_params", "linear_model.Perceptron.sparsify()": "modules/generated/sklearn.linear_model.perceptron.html#sklearn.linear_model.Perceptron.sparsify", "linear_model.PoissonRegressor": "modules/generated/sklearn.linear_model.poissonregressor.html#sklearn.linear_model.PoissonRegressor", "linear_model.PoissonRegressor()": "modules/generated/sklearn.linear_model.poissonregressor.html", "linear_model.PoissonRegressor.fit()": "modules/generated/sklearn.linear_model.poissonregressor.html#sklearn.linear_model.PoissonRegressor.fit", "linear_model.PoissonRegressor.get_params()": "modules/generated/sklearn.linear_model.poissonregressor.html#sklearn.linear_model.PoissonRegressor.get_params", "linear_model.PoissonRegressor.predict()": "modules/generated/sklearn.linear_model.poissonregressor.html#sklearn.linear_model.PoissonRegressor.predict", "linear_model.PoissonRegressor.score()": "modules/generated/sklearn.linear_model.poissonregressor.html#sklearn.linear_model.PoissonRegressor.score", "linear_model.PoissonRegressor.set_params()": "modules/generated/sklearn.linear_model.poissonregressor.html#sklearn.linear_model.PoissonRegressor.set_params", "linear_model.QuantileRegressor": "modules/generated/sklearn.linear_model.quantileregressor.html#sklearn.linear_model.QuantileRegressor", "linear_model.QuantileRegressor()": "modules/generated/sklearn.linear_model.quantileregressor.html", "linear_model.QuantileRegressor.fit()": "modules/generated/sklearn.linear_model.quantileregressor.html#sklearn.linear_model.QuantileRegressor.fit", "linear_model.QuantileRegressor.get_params()": "modules/generated/sklearn.linear_model.quantileregressor.html#sklearn.linear_model.QuantileRegressor.get_params", "linear_model.QuantileRegressor.predict()": "modules/generated/sklearn.linear_model.quantileregressor.html#sklearn.linear_model.QuantileRegressor.predict", "linear_model.QuantileRegressor.score()": "modules/generated/sklearn.linear_model.quantileregressor.html#sklearn.linear_model.QuantileRegressor.score", "linear_model.QuantileRegressor.set_params()": "modules/generated/sklearn.linear_model.quantileregressor.html#sklearn.linear_model.QuantileRegressor.set_params", "linear_model.RANSACRegressor": "modules/generated/sklearn.linear_model.ransacregressor.html#sklearn.linear_model.RANSACRegressor", "linear_model.RANSACRegressor()": "modules/generated/sklearn.linear_model.ransacregressor.html", "linear_model.RANSACRegressor.fit()": "modules/generated/sklearn.linear_model.ransacregressor.html#sklearn.linear_model.RANSACRegressor.fit", "linear_model.RANSACRegressor.get_params()": "modules/generated/sklearn.linear_model.ransacregressor.html#sklearn.linear_model.RANSACRegressor.get_params", "linear_model.RANSACRegressor.predict()": "modules/generated/sklearn.linear_model.ransacregressor.html#sklearn.linear_model.RANSACRegressor.predict", "linear_model.RANSACRegressor.score()": "modules/generated/sklearn.linear_model.ransacregressor.html#sklearn.linear_model.RANSACRegressor.score", "linear_model.RANSACRegressor.set_params()": "modules/generated/sklearn.linear_model.ransacregressor.html#sklearn.linear_model.RANSACRegressor.set_params", "linear_model.Ridge": "modules/generated/sklearn.linear_model.ridge.html#sklearn.linear_model.Ridge", "linear_model.Ridge()": "modules/generated/sklearn.linear_model.ridge.html", "linear_model.Ridge.fit()": "modules/generated/sklearn.linear_model.ridge.html#sklearn.linear_model.Ridge.fit", "linear_model.Ridge.get_params()": "modules/generated/sklearn.linear_model.ridge.html#sklearn.linear_model.Ridge.get_params", "linear_model.Ridge.predict()": "modules/generated/sklearn.linear_model.ridge.html#sklearn.linear_model.Ridge.predict", "linear_model.Ridge.score()": "modules/generated/sklearn.linear_model.ridge.html#sklearn.linear_model.Ridge.score", "linear_model.Ridge.set_params()": "modules/generated/sklearn.linear_model.ridge.html#sklearn.linear_model.Ridge.set_params", "linear_model.ridge_regression()": "modules/generated/sklearn.linear_model.ridge_regression.html#sklearn.linear_model.ridge_regression", "linear_model.RidgeClassifier": "modules/generated/sklearn.linear_model.ridgeclassifier.html#sklearn.linear_model.RidgeClassifier", "linear_model.RidgeClassifier()": "modules/generated/sklearn.linear_model.ridgeclassifier.html", "linear_model.RidgeClassifier.decision_function()": "modules/generated/sklearn.linear_model.ridgeclassifier.html#sklearn.linear_model.RidgeClassifier.decision_function", "linear_model.RidgeClassifier.fit()": "modules/generated/sklearn.linear_model.ridgeclassifier.html#sklearn.linear_model.RidgeClassifier.fit", "linear_model.RidgeClassifier.get_params()": "modules/generated/sklearn.linear_model.ridgeclassifier.html#sklearn.linear_model.RidgeClassifier.get_params", "linear_model.RidgeClassifier.predict()": "modules/generated/sklearn.linear_model.ridgeclassifier.html#sklearn.linear_model.RidgeClassifier.predict", "linear_model.RidgeClassifier.score()": "modules/generated/sklearn.linear_model.ridgeclassifier.html#sklearn.linear_model.RidgeClassifier.score", "linear_model.RidgeClassifier.set_params()": "modules/generated/sklearn.linear_model.ridgeclassifier.html#sklearn.linear_model.RidgeClassifier.set_params", "linear_model.RidgeClassifierCV": "modules/generated/sklearn.linear_model.ridgeclassifiercv.html#sklearn.linear_model.RidgeClassifierCV", "linear_model.RidgeClassifierCV()": "modules/generated/sklearn.linear_model.ridgeclassifiercv.html", "linear_model.RidgeClassifierCV.decision_function()": "modules/generated/sklearn.linear_model.ridgeclassifiercv.html#sklearn.linear_model.RidgeClassifierCV.decision_function", "linear_model.RidgeClassifierCV.fit()": "modules/generated/sklearn.linear_model.ridgeclassifiercv.html#sklearn.linear_model.RidgeClassifierCV.fit", "linear_model.RidgeClassifierCV.get_params()": "modules/generated/sklearn.linear_model.ridgeclassifiercv.html#sklearn.linear_model.RidgeClassifierCV.get_params", "linear_model.RidgeClassifierCV.predict()": "modules/generated/sklearn.linear_model.ridgeclassifiercv.html#sklearn.linear_model.RidgeClassifierCV.predict", "linear_model.RidgeClassifierCV.score()": "modules/generated/sklearn.linear_model.ridgeclassifiercv.html#sklearn.linear_model.RidgeClassifierCV.score", "linear_model.RidgeClassifierCV.set_params()": "modules/generated/sklearn.linear_model.ridgeclassifiercv.html#sklearn.linear_model.RidgeClassifierCV.set_params", "linear_model.RidgeCV": "modules/generated/sklearn.linear_model.ridgecv.html#sklearn.linear_model.RidgeCV", "linear_model.RidgeCV()": "modules/generated/sklearn.linear_model.ridgecv.html", "linear_model.RidgeCV.fit()": "modules/generated/sklearn.linear_model.ridgecv.html#sklearn.linear_model.RidgeCV.fit", "linear_model.RidgeCV.get_params()": "modules/generated/sklearn.linear_model.ridgecv.html#sklearn.linear_model.RidgeCV.get_params", "linear_model.RidgeCV.predict()": "modules/generated/sklearn.linear_model.ridgecv.html#sklearn.linear_model.RidgeCV.predict", "linear_model.RidgeCV.score()": "modules/generated/sklearn.linear_model.ridgecv.html#sklearn.linear_model.RidgeCV.score", "linear_model.RidgeCV.set_params()": "modules/generated/sklearn.linear_model.ridgecv.html#sklearn.linear_model.RidgeCV.set_params", "linear_model.SGDClassifier": "modules/generated/sklearn.linear_model.sgdclassifier.html#sklearn.linear_model.SGDClassifier", "linear_model.SGDClassifier()": "modules/generated/sklearn.linear_model.sgdclassifier.html", "linear_model.SGDClassifier.decision_function()": "modules/generated/sklearn.linear_model.sgdclassifier.html#sklearn.linear_model.SGDClassifier.decision_function", "linear_model.SGDClassifier.densify()": "modules/generated/sklearn.linear_model.sgdclassifier.html#sklearn.linear_model.SGDClassifier.densify", "linear_model.SGDClassifier.fit()": "modules/generated/sklearn.linear_model.sgdclassifier.html#sklearn.linear_model.SGDClassifier.fit", "linear_model.SGDClassifier.get_params()": "modules/generated/sklearn.linear_model.sgdclassifier.html#sklearn.linear_model.SGDClassifier.get_params", "linear_model.SGDClassifier.partial_fit()": "modules/generated/sklearn.linear_model.sgdclassifier.html#sklearn.linear_model.SGDClassifier.partial_fit", "linear_model.SGDClassifier.predict()": "modules/generated/sklearn.linear_model.sgdclassifier.html#sklearn.linear_model.SGDClassifier.predict", "linear_model.SGDClassifier.predict_log_proba()": "modules/generated/sklearn.linear_model.sgdclassifier.html#sklearn.linear_model.SGDClassifier.predict_log_proba", "linear_model.SGDClassifier.predict_proba()": "modules/generated/sklearn.linear_model.sgdclassifier.html#sklearn.linear_model.SGDClassifier.predict_proba", "linear_model.SGDClassifier.score()": "modules/generated/sklearn.linear_model.sgdclassifier.html#sklearn.linear_model.SGDClassifier.score", "linear_model.SGDClassifier.set_params()": "modules/generated/sklearn.linear_model.sgdclassifier.html#sklearn.linear_model.SGDClassifier.set_params", "linear_model.SGDClassifier.sparsify()": "modules/generated/sklearn.linear_model.sgdclassifier.html#sklearn.linear_model.SGDClassifier.sparsify", "linear_model.SGDOneClassSVM": "modules/generated/sklearn.linear_model.sgdoneclasssvm.html#sklearn.linear_model.SGDOneClassSVM", "linear_model.SGDOneClassSVM()": "modules/generated/sklearn.linear_model.sgdoneclasssvm.html", "linear_model.SGDOneClassSVM.decision_function()": "modules/generated/sklearn.linear_model.sgdoneclasssvm.html#sklearn.linear_model.SGDOneClassSVM.decision_function", "linear_model.SGDOneClassSVM.densify()": "modules/generated/sklearn.linear_model.sgdoneclasssvm.html#sklearn.linear_model.SGDOneClassSVM.densify", "linear_model.SGDOneClassSVM.fit()": "modules/generated/sklearn.linear_model.sgdoneclasssvm.html#sklearn.linear_model.SGDOneClassSVM.fit", "linear_model.SGDOneClassSVM.fit_predict()": "modules/generated/sklearn.linear_model.sgdoneclasssvm.html#sklearn.linear_model.SGDOneClassSVM.fit_predict", "linear_model.SGDOneClassSVM.get_params()": "modules/generated/sklearn.linear_model.sgdoneclasssvm.html#sklearn.linear_model.SGDOneClassSVM.get_params", "linear_model.SGDOneClassSVM.partial_fit()": "modules/generated/sklearn.linear_model.sgdoneclasssvm.html#sklearn.linear_model.SGDOneClassSVM.partial_fit", "linear_model.SGDOneClassSVM.predict()": "modules/generated/sklearn.linear_model.sgdoneclasssvm.html#sklearn.linear_model.SGDOneClassSVM.predict", "linear_model.SGDOneClassSVM.score_samples()": "modules/generated/sklearn.linear_model.sgdoneclasssvm.html#sklearn.linear_model.SGDOneClassSVM.score_samples", "linear_model.SGDOneClassSVM.set_params()": "modules/generated/sklearn.linear_model.sgdoneclasssvm.html#sklearn.linear_model.SGDOneClassSVM.set_params", "linear_model.SGDOneClassSVM.sparsify()": "modules/generated/sklearn.linear_model.sgdoneclasssvm.html#sklearn.linear_model.SGDOneClassSVM.sparsify", "linear_model.SGDRegressor": "modules/generated/sklearn.linear_model.sgdregressor.html#sklearn.linear_model.SGDRegressor", "linear_model.SGDRegressor()": "modules/generated/sklearn.linear_model.sgdregressor.html", "linear_model.SGDRegressor.densify()": "modules/generated/sklearn.linear_model.sgdregressor.html#sklearn.linear_model.SGDRegressor.densify", "linear_model.SGDRegressor.fit()": "modules/generated/sklearn.linear_model.sgdregressor.html#sklearn.linear_model.SGDRegressor.fit", "linear_model.SGDRegressor.get_params()": "modules/generated/sklearn.linear_model.sgdregressor.html#sklearn.linear_model.SGDRegressor.get_params", "linear_model.SGDRegressor.partial_fit()": "modules/generated/sklearn.linear_model.sgdregressor.html#sklearn.linear_model.SGDRegressor.partial_fit", "linear_model.SGDRegressor.predict()": "modules/generated/sklearn.linear_model.sgdregressor.html#sklearn.linear_model.SGDRegressor.predict", "linear_model.SGDRegressor.score()": "modules/generated/sklearn.linear_model.sgdregressor.html#sklearn.linear_model.SGDRegressor.score", "linear_model.SGDRegressor.set_params()": "modules/generated/sklearn.linear_model.sgdregressor.html#sklearn.linear_model.SGDRegressor.set_params", "linear_model.SGDRegressor.sparsify()": "modules/generated/sklearn.linear_model.sgdregressor.html#sklearn.linear_model.SGDRegressor.sparsify", "linear_model.TheilSenRegressor": "modules/generated/sklearn.linear_model.theilsenregressor.html#sklearn.linear_model.TheilSenRegressor", "linear_model.TheilSenRegressor()": "modules/generated/sklearn.linear_model.theilsenregressor.html", "linear_model.TheilSenRegressor.fit()": "modules/generated/sklearn.linear_model.theilsenregressor.html#sklearn.linear_model.TheilSenRegressor.fit", "linear_model.TheilSenRegressor.get_params()": "modules/generated/sklearn.linear_model.theilsenregressor.html#sklearn.linear_model.TheilSenRegressor.get_params", "linear_model.TheilSenRegressor.predict()": "modules/generated/sklearn.linear_model.theilsenregressor.html#sklearn.linear_model.TheilSenRegressor.predict", "linear_model.TheilSenRegressor.score()": "modules/generated/sklearn.linear_model.theilsenregressor.html#sklearn.linear_model.TheilSenRegressor.score", "linear_model.TheilSenRegressor.set_params()": "modules/generated/sklearn.linear_model.theilsenregressor.html#sklearn.linear_model.TheilSenRegressor.set_params", "linear_model.TweedieRegressor": "modules/generated/sklearn.linear_model.tweedieregressor.html#sklearn.linear_model.TweedieRegressor", "linear_model.TweedieRegressor()": "modules/generated/sklearn.linear_model.tweedieregressor.html", "linear_model.TweedieRegressor.fit()": "modules/generated/sklearn.linear_model.tweedieregressor.html#sklearn.linear_model.TweedieRegressor.fit", "linear_model.TweedieRegressor.get_params()": "modules/generated/sklearn.linear_model.tweedieregressor.html#sklearn.linear_model.TweedieRegressor.get_params", "linear_model.TweedieRegressor.predict()": "modules/generated/sklearn.linear_model.tweedieregressor.html#sklearn.linear_model.TweedieRegressor.predict", "linear_model.TweedieRegressor.score()": "modules/generated/sklearn.linear_model.tweedieregressor.html#sklearn.linear_model.TweedieRegressor.score", "linear_model.TweedieRegressor.set_params()": "modules/generated/sklearn.linear_model.tweedieregressor.html#sklearn.linear_model.TweedieRegressor.set_params", "manifold.Isomap": "modules/generated/sklearn.manifold.isomap.html#sklearn.manifold.Isomap", "manifold.Isomap()": "modules/generated/sklearn.manifold.isomap.html", "manifold.Isomap.fit()": "modules/generated/sklearn.manifold.isomap.html#sklearn.manifold.Isomap.fit", "manifold.Isomap.fit_transform()": "modules/generated/sklearn.manifold.isomap.html#sklearn.manifold.Isomap.fit_transform", "manifold.Isomap.get_feature_names_out()": "modules/generated/sklearn.manifold.isomap.html#sklearn.manifold.Isomap.get_feature_names_out", "manifold.Isomap.get_params()": "modules/generated/sklearn.manifold.isomap.html#sklearn.manifold.Isomap.get_params", "manifold.Isomap.reconstruction_error()": "modules/generated/sklearn.manifold.isomap.html#sklearn.manifold.Isomap.reconstruction_error", "manifold.Isomap.set_params()": "modules/generated/sklearn.manifold.isomap.html#sklearn.manifold.Isomap.set_params", "manifold.Isomap.transform()": "modules/generated/sklearn.manifold.isomap.html#sklearn.manifold.Isomap.transform", "manifold.locally_linear_embedding()": "modules/generated/sklearn.manifold.locally_linear_embedding.html#sklearn.manifold.locally_linear_embedding", "manifold.LocallyLinearEmbedding": "modules/generated/sklearn.manifold.locallylinearembedding.html#sklearn.manifold.LocallyLinearEmbedding", "manifold.LocallyLinearEmbedding()": "modules/generated/sklearn.manifold.locallylinearembedding.html", "manifold.LocallyLinearEmbedding.fit()": "modules/generated/sklearn.manifold.locallylinearembedding.html#sklearn.manifold.LocallyLinearEmbedding.fit", "manifold.LocallyLinearEmbedding.fit_transform()": "modules/generated/sklearn.manifold.locallylinearembedding.html#sklearn.manifold.LocallyLinearEmbedding.fit_transform", "manifold.LocallyLinearEmbedding.get_feature_names_out()": "modules/generated/sklearn.manifold.locallylinearembedding.html#sklearn.manifold.LocallyLinearEmbedding.get_feature_names_out", "manifold.LocallyLinearEmbedding.get_params()": "modules/generated/sklearn.manifold.locallylinearembedding.html#sklearn.manifold.LocallyLinearEmbedding.get_params", "manifold.LocallyLinearEmbedding.set_params()": "modules/generated/sklearn.manifold.locallylinearembedding.html#sklearn.manifold.LocallyLinearEmbedding.set_params", "manifold.LocallyLinearEmbedding.transform()": "modules/generated/sklearn.manifold.locallylinearembedding.html#sklearn.manifold.LocallyLinearEmbedding.transform", "manifold.MDS": "modules/generated/sklearn.manifold.mds.html#sklearn.manifold.MDS", "manifold.MDS()": "modules/generated/sklearn.manifold.mds.html", "manifold.MDS.fit()": "modules/generated/sklearn.manifold.mds.html#sklearn.manifold.MDS.fit", "manifold.MDS.fit_transform()": "modules/generated/sklearn.manifold.mds.html#sklearn.manifold.MDS.fit_transform", "manifold.MDS.get_params()": "modules/generated/sklearn.manifold.mds.html#sklearn.manifold.MDS.get_params", "manifold.MDS.set_params()": "modules/generated/sklearn.manifold.mds.html#sklearn.manifold.MDS.set_params", "manifold.smacof()": "modules/generated/sklearn.manifold.smacof.html#sklearn.manifold.smacof", "manifold.spectral_embedding()": "modules/generated/sklearn.manifold.spectral_embedding.html#sklearn.manifold.spectral_embedding", "manifold.SpectralEmbedding": "modules/generated/sklearn.manifold.spectralembedding.html#sklearn.manifold.SpectralEmbedding", "manifold.SpectralEmbedding()": "modules/generated/sklearn.manifold.spectralembedding.html", "manifold.SpectralEmbedding.fit()": "modules/generated/sklearn.manifold.spectralembedding.html#sklearn.manifold.SpectralEmbedding.fit", "manifold.SpectralEmbedding.fit_transform()": "modules/generated/sklearn.manifold.spectralembedding.html#sklearn.manifold.SpectralEmbedding.fit_transform", "manifold.SpectralEmbedding.get_params()": "modules/generated/sklearn.manifold.spectralembedding.html#sklearn.manifold.SpectralEmbedding.get_params", "manifold.SpectralEmbedding.set_params()": "modules/generated/sklearn.manifold.spectralembedding.html#sklearn.manifold.SpectralEmbedding.set_params", "manifold.trustworthiness()": "modules/generated/sklearn.manifold.trustworthiness.html#sklearn.manifold.trustworthiness", "manifold.TSNE": "modules/generated/sklearn.manifold.tsne.html#sklearn.manifold.TSNE", "manifold.TSNE()": "modules/generated/sklearn.manifold.tsne.html", "manifold.TSNE.fit()": "modules/generated/sklearn.manifold.tsne.html#sklearn.manifold.TSNE.fit", "manifold.TSNE.fit_transform()": "modules/generated/sklearn.manifold.tsne.html#sklearn.manifold.TSNE.fit_transform", "manifold.TSNE.get_params()": "modules/generated/sklearn.manifold.tsne.html#sklearn.manifold.TSNE.get_params", "manifold.TSNE.set_params()": "modules/generated/sklearn.manifold.tsne.html#sklearn.manifold.TSNE.set_params", "metrics.accuracy_score()": "modules/generated/sklearn.metrics.accuracy_score.html#sklearn.metrics.accuracy_score", "metrics.adjusted_mutual_info_score()": "modules/generated/sklearn.metrics.adjusted_mutual_info_score.html#sklearn.metrics.adjusted_mutual_info_score", "metrics.adjusted_rand_score()": "modules/generated/sklearn.metrics.adjusted_rand_score.html#sklearn.metrics.adjusted_rand_score", "metrics.auc()": "modules/generated/sklearn.metrics.auc.html#sklearn.metrics.auc", "metrics.average_precision_score()": "modules/generated/sklearn.metrics.average_precision_score.html#sklearn.metrics.average_precision_score", "metrics.balanced_accuracy_score()": "modules/generated/sklearn.metrics.balanced_accuracy_score.html#sklearn.metrics.balanced_accuracy_score", "metrics.brier_score_loss()": "modules/generated/sklearn.metrics.brier_score_loss.html#sklearn.metrics.brier_score_loss", "metrics.calinski_harabasz_score()": "modules/generated/sklearn.metrics.calinski_harabasz_score.html#sklearn.metrics.calinski_harabasz_score", "metrics.check_scoring()": "modules/generated/sklearn.metrics.check_scoring.html#sklearn.metrics.check_scoring", "metrics.classification_report()": "modules/generated/sklearn.metrics.classification_report.html#sklearn.metrics.classification_report", "metrics.cluster.contingency_matrix()": "modules/generated/sklearn.metrics.cluster.contingency_matrix.html#sklearn.metrics.cluster.contingency_matrix", "metrics.cluster.pair_confusion_matrix()": "modules/generated/sklearn.metrics.cluster.pair_confusion_matrix.html#sklearn.metrics.cluster.pair_confusion_matrix", "metrics.cohen_kappa_score()": "modules/generated/sklearn.metrics.cohen_kappa_score.html#sklearn.metrics.cohen_kappa_score", "metrics.completeness_score()": "modules/generated/sklearn.metrics.completeness_score.html#sklearn.metrics.completeness_score", "metrics.confusion_matrix()": "modules/generated/sklearn.metrics.confusion_matrix.html#sklearn.metrics.confusion_matrix", "metrics.ConfusionMatrixDisplay": "modules/generated/sklearn.metrics.confusionmatrixdisplay.html#sklearn.metrics.ConfusionMatrixDisplay", "metrics.ConfusionMatrixDisplay()": "modules/generated/sklearn.metrics.confusionmatrixdisplay.html", "metrics.ConfusionMatrixDisplay.from_estimator()": "modules/generated/sklearn.metrics.confusionmatrixdisplay.html#sklearn.metrics.ConfusionMatrixDisplay.from_estimator", "metrics.ConfusionMatrixDisplay.from_predictions()": "modules/generated/sklearn.metrics.confusionmatrixdisplay.html#sklearn.metrics.ConfusionMatrixDisplay.from_predictions", "metrics.ConfusionMatrixDisplay.plot()": "modules/generated/sklearn.metrics.confusionmatrixdisplay.html#sklearn.metrics.ConfusionMatrixDisplay.plot", "metrics.consensus_score()": "modules/generated/sklearn.metrics.consensus_score.html#sklearn.metrics.consensus_score", "metrics.coverage_error()": "modules/generated/sklearn.metrics.coverage_error.html#sklearn.metrics.coverage_error", "metrics.d2_absolute_error_score()": "modules/generated/sklearn.metrics.d2_absolute_error_score.html#sklearn.metrics.d2_absolute_error_score", "metrics.d2_pinball_score()": "modules/generated/sklearn.metrics.d2_pinball_score.html#sklearn.metrics.d2_pinball_score", "metrics.d2_tweedie_score()": "modules/generated/sklearn.metrics.d2_tweedie_score.html#sklearn.metrics.d2_tweedie_score", "metrics.davies_bouldin_score()": "modules/generated/sklearn.metrics.davies_bouldin_score.html#sklearn.metrics.davies_bouldin_score", "metrics.dcg_score()": "modules/generated/sklearn.metrics.dcg_score.html#sklearn.metrics.dcg_score", "metrics.det_curve()": "modules/generated/sklearn.metrics.det_curve.html#sklearn.metrics.det_curve", "metrics.DetCurveDisplay": "modules/generated/sklearn.metrics.detcurvedisplay.html#sklearn.metrics.DetCurveDisplay", "metrics.DetCurveDisplay()": "modules/generated/sklearn.metrics.detcurvedisplay.html", "metrics.DetCurveDisplay.from_estimator()": "modules/generated/sklearn.metrics.detcurvedisplay.html#sklearn.metrics.DetCurveDisplay.from_estimator", "metrics.DetCurveDisplay.from_predictions()": "modules/generated/sklearn.metrics.detcurvedisplay.html#sklearn.metrics.DetCurveDisplay.from_predictions", "metrics.DetCurveDisplay.plot()": "modules/generated/sklearn.metrics.detcurvedisplay.html#sklearn.metrics.DetCurveDisplay.plot", "metrics.DistanceMetric": "modules/generated/sklearn.metrics.distancemetric.html", "metrics.DistanceMetric.dist_to_rdist()": "modules/generated/sklearn.metrics.distancemetric.html#sklearn.metrics.DistanceMetric.dist_to_rdist", "metrics.DistanceMetric.get_metric()": "modules/generated/sklearn.metrics.distancemetric.html#sklearn.metrics.DistanceMetric.get_metric", "metrics.DistanceMetric.pairwise()": "modules/generated/sklearn.metrics.distancemetric.html#sklearn.metrics.DistanceMetric.pairwise", "metrics.DistanceMetric.rdist_to_dist()": "modules/generated/sklearn.metrics.distancemetric.html#sklearn.metrics.DistanceMetric.rdist_to_dist", "metrics.explained_variance_score()": "modules/generated/sklearn.metrics.explained_variance_score.html#sklearn.metrics.explained_variance_score", "metrics.f1_score()": "modules/generated/sklearn.metrics.f1_score.html#sklearn.metrics.f1_score", "metrics.fbeta_score()": "modules/generated/sklearn.metrics.fbeta_score.html#sklearn.metrics.fbeta_score", "metrics.fowlkes_mallows_score()": "modules/generated/sklearn.metrics.fowlkes_mallows_score.html#sklearn.metrics.fowlkes_mallows_score", "metrics.get_scorer()": "modules/generated/sklearn.metrics.get_scorer.html#sklearn.metrics.get_scorer", "metrics.get_scorer_names()": "modules/generated/sklearn.metrics.get_scorer_names.html#sklearn.metrics.get_scorer_names", "metrics.hamming_loss()": "modules/generated/sklearn.metrics.hamming_loss.html#sklearn.metrics.hamming_loss", "metrics.hinge_loss()": "modules/generated/sklearn.metrics.hinge_loss.html#sklearn.metrics.hinge_loss", "metrics.homogeneity_completeness_v_measure()": "modules/generated/sklearn.metrics.homogeneity_completeness_v_measure.html#sklearn.metrics.homogeneity_completeness_v_measure", "metrics.homogeneity_score()": "modules/generated/sklearn.metrics.homogeneity_score.html#sklearn.metrics.homogeneity_score", "metrics.jaccard_score()": "modules/generated/sklearn.metrics.jaccard_score.html#sklearn.metrics.jaccard_score", "metrics.label_ranking_average_precision_score()": "modules/generated/sklearn.metrics.label_ranking_average_precision_score.html#sklearn.metrics.label_ranking_average_precision_score", "metrics.label_ranking_loss()": "modules/generated/sklearn.metrics.label_ranking_loss.html#sklearn.metrics.label_ranking_loss", "metrics.log_loss()": "modules/generated/sklearn.metrics.log_loss.html#sklearn.metrics.log_loss", "metrics.make_scorer()": "modules/generated/sklearn.metrics.make_scorer.html#sklearn.metrics.make_scorer", "metrics.matthews_corrcoef()": "modules/generated/sklearn.metrics.matthews_corrcoef.html#sklearn.metrics.matthews_corrcoef", "metrics.max_error()": "modules/generated/sklearn.metrics.max_error.html#sklearn.metrics.max_error", "metrics.mean_absolute_error()": "modules/generated/sklearn.metrics.mean_absolute_error.html#sklearn.metrics.mean_absolute_error", "metrics.mean_absolute_percentage_error()": "modules/generated/sklearn.metrics.mean_absolute_percentage_error.html#sklearn.metrics.mean_absolute_percentage_error", "metrics.mean_gamma_deviance()": "modules/generated/sklearn.metrics.mean_gamma_deviance.html#sklearn.metrics.mean_gamma_deviance", "metrics.mean_pinball_loss()": "modules/generated/sklearn.metrics.mean_pinball_loss.html#sklearn.metrics.mean_pinball_loss", "metrics.mean_poisson_deviance()": "modules/generated/sklearn.metrics.mean_poisson_deviance.html#sklearn.metrics.mean_poisson_deviance", "metrics.mean_squared_error()": "modules/generated/sklearn.metrics.mean_squared_error.html#sklearn.metrics.mean_squared_error", "metrics.mean_squared_log_error()": "modules/generated/sklearn.metrics.mean_squared_log_error.html#sklearn.metrics.mean_squared_log_error", "metrics.mean_tweedie_deviance()": "modules/generated/sklearn.metrics.mean_tweedie_deviance.html#sklearn.metrics.mean_tweedie_deviance", "metrics.median_absolute_error()": "modules/generated/sklearn.metrics.median_absolute_error.html#sklearn.metrics.median_absolute_error", "metrics.multilabel_confusion_matrix()": "modules/generated/sklearn.metrics.multilabel_confusion_matrix.html#sklearn.metrics.multilabel_confusion_matrix", "metrics.mutual_info_score()": "modules/generated/sklearn.metrics.mutual_info_score.html#sklearn.metrics.mutual_info_score", "metrics.ndcg_score()": "modules/generated/sklearn.metrics.ndcg_score.html#sklearn.metrics.ndcg_score", "metrics.normalized_mutual_info_score()": "modules/generated/sklearn.metrics.normalized_mutual_info_score.html#sklearn.metrics.normalized_mutual_info_score", "metrics.pairwise.additive_chi2_kernel()": "modules/generated/sklearn.metrics.pairwise.additive_chi2_kernel.html#sklearn.metrics.pairwise.additive_chi2_kernel", "metrics.pairwise.chi2_kernel()": "modules/generated/sklearn.metrics.pairwise.chi2_kernel.html#sklearn.metrics.pairwise.chi2_kernel", "metrics.pairwise.cosine_distances()": "modules/generated/sklearn.metrics.pairwise.cosine_distances.html#sklearn.metrics.pairwise.cosine_distances", "metrics.pairwise.cosine_similarity()": "modules/generated/sklearn.metrics.pairwise.cosine_similarity.html#sklearn.metrics.pairwise.cosine_similarity", "metrics.pairwise.distance_metrics()": "modules/generated/sklearn.metrics.pairwise.distance_metrics.html#sklearn.metrics.pairwise.distance_metrics", "metrics.pairwise.euclidean_distances()": "modules/generated/sklearn.metrics.pairwise.euclidean_distances.html#sklearn.metrics.pairwise.euclidean_distances", "metrics.pairwise.haversine_distances()": "modules/generated/sklearn.metrics.pairwise.haversine_distances.html#sklearn.metrics.pairwise.haversine_distances", "metrics.pairwise.kernel_metrics()": "modules/generated/sklearn.metrics.pairwise.kernel_metrics.html#sklearn.metrics.pairwise.kernel_metrics", "metrics.pairwise.laplacian_kernel()": "modules/generated/sklearn.metrics.pairwise.laplacian_kernel.html#sklearn.metrics.pairwise.laplacian_kernel", "metrics.pairwise.linear_kernel()": "modules/generated/sklearn.metrics.pairwise.linear_kernel.html#sklearn.metrics.pairwise.linear_kernel", "metrics.pairwise.manhattan_distances()": "modules/generated/sklearn.metrics.pairwise.manhattan_distances.html#sklearn.metrics.pairwise.manhattan_distances", "metrics.pairwise.nan_euclidean_distances()": "modules/generated/sklearn.metrics.pairwise.nan_euclidean_distances.html#sklearn.metrics.pairwise.nan_euclidean_distances", "metrics.pairwise.paired_cosine_distances()": "modules/generated/sklearn.metrics.pairwise.paired_cosine_distances.html#sklearn.metrics.pairwise.paired_cosine_distances", "metrics.pairwise.paired_distances()": "modules/generated/sklearn.metrics.pairwise.paired_distances.html#sklearn.metrics.pairwise.paired_distances", "metrics.pairwise.paired_euclidean_distances()": "modules/generated/sklearn.metrics.pairwise.paired_euclidean_distances.html#sklearn.metrics.pairwise.paired_euclidean_distances", "metrics.pairwise.paired_manhattan_distances()": "modules/generated/sklearn.metrics.pairwise.paired_manhattan_distances.html#sklearn.metrics.pairwise.paired_manhattan_distances", "metrics.pairwise.pairwise_kernels()": "modules/generated/sklearn.metrics.pairwise.pairwise_kernels.html#sklearn.metrics.pairwise.pairwise_kernels", "metrics.pairwise.polynomial_kernel()": "modules/generated/sklearn.metrics.pairwise.polynomial_kernel.html#sklearn.metrics.pairwise.polynomial_kernel", "metrics.pairwise.rbf_kernel()": "modules/generated/sklearn.metrics.pairwise.rbf_kernel.html#sklearn.metrics.pairwise.rbf_kernel", "metrics.pairwise.sigmoid_kernel()": "modules/generated/sklearn.metrics.pairwise.sigmoid_kernel.html#sklearn.metrics.pairwise.sigmoid_kernel", "metrics.pairwise_distances()": "modules/generated/sklearn.metrics.pairwise_distances.html#sklearn.metrics.pairwise_distances", "metrics.pairwise_distances_argmin()": "modules/generated/sklearn.metrics.pairwise_distances_argmin.html#sklearn.metrics.pairwise_distances_argmin", "metrics.pairwise_distances_argmin_min()": "modules/generated/sklearn.metrics.pairwise_distances_argmin_min.html#sklearn.metrics.pairwise_distances_argmin_min", "metrics.pairwise_distances_chunked()": "modules/generated/sklearn.metrics.pairwise_distances_chunked.html#sklearn.metrics.pairwise_distances_chunked", "metrics.plot_confusion_matrix()": "modules/generated/sklearn.metrics.plot_confusion_matrix.html#sklearn.metrics.plot_confusion_matrix", "metrics.plot_det_curve()": "modules/generated/sklearn.metrics.plot_det_curve.html#sklearn.metrics.plot_det_curve", "metrics.plot_precision_recall_curve()": "modules/generated/sklearn.metrics.plot_precision_recall_curve.html#sklearn.metrics.plot_precision_recall_curve", "metrics.plot_roc_curve()": "modules/generated/sklearn.metrics.plot_roc_curve.html#sklearn.metrics.plot_roc_curve", "metrics.precision_recall_curve()": "modules/generated/sklearn.metrics.precision_recall_curve.html#sklearn.metrics.precision_recall_curve", "metrics.precision_recall_fscore_support()": "modules/generated/sklearn.metrics.precision_recall_fscore_support.html#sklearn.metrics.precision_recall_fscore_support", "metrics.precision_score()": "modules/generated/sklearn.metrics.precision_score.html#sklearn.metrics.precision_score", "metrics.PrecisionRecallDisplay": "modules/generated/sklearn.metrics.precisionrecalldisplay.html#sklearn.metrics.PrecisionRecallDisplay", "metrics.PrecisionRecallDisplay()": "modules/generated/sklearn.metrics.precisionrecalldisplay.html", "metrics.PrecisionRecallDisplay.from_estimator()": "modules/generated/sklearn.metrics.precisionrecalldisplay.html#sklearn.metrics.PrecisionRecallDisplay.from_estimator", "metrics.PrecisionRecallDisplay.from_predictions()": "modules/generated/sklearn.metrics.precisionrecalldisplay.html#sklearn.metrics.PrecisionRecallDisplay.from_predictions", "metrics.PrecisionRecallDisplay.plot()": "modules/generated/sklearn.metrics.precisionrecalldisplay.html#sklearn.metrics.PrecisionRecallDisplay.plot", "metrics.r2_score()": "modules/generated/sklearn.metrics.r2_score.html#sklearn.metrics.r2_score", "metrics.rand_score()": "modules/generated/sklearn.metrics.rand_score.html#sklearn.metrics.rand_score", "metrics.recall_score()": "modules/generated/sklearn.metrics.recall_score.html#sklearn.metrics.recall_score", "metrics.roc_auc_score()": "modules/generated/sklearn.metrics.roc_auc_score.html#sklearn.metrics.roc_auc_score", "metrics.roc_curve()": "modules/generated/sklearn.metrics.roc_curve.html#sklearn.metrics.roc_curve", "metrics.RocCurveDisplay": "modules/generated/sklearn.metrics.roccurvedisplay.html#sklearn.metrics.RocCurveDisplay", "metrics.RocCurveDisplay()": "modules/generated/sklearn.metrics.roccurvedisplay.html", "metrics.RocCurveDisplay.from_estimator()": "modules/generated/sklearn.metrics.roccurvedisplay.html#sklearn.metrics.RocCurveDisplay.from_estimator", "metrics.RocCurveDisplay.from_predictions()": "modules/generated/sklearn.metrics.roccurvedisplay.html#sklearn.metrics.RocCurveDisplay.from_predictions", "metrics.RocCurveDisplay.plot()": "modules/generated/sklearn.metrics.roccurvedisplay.html#sklearn.metrics.RocCurveDisplay.plot", "metrics.silhouette_samples()": "modules/generated/sklearn.metrics.silhouette_samples.html#sklearn.metrics.silhouette_samples", "metrics.silhouette_score()": "modules/generated/sklearn.metrics.silhouette_score.html#sklearn.metrics.silhouette_score", "metrics.top_k_accuracy_score()": "modules/generated/sklearn.metrics.top_k_accuracy_score.html#sklearn.metrics.top_k_accuracy_score", "metrics.v_measure_score()": "modules/generated/sklearn.metrics.v_measure_score.html#sklearn.metrics.v_measure_score", "metrics.zero_one_loss()": "modules/generated/sklearn.metrics.zero_one_loss.html#sklearn.metrics.zero_one_loss", "mixture.BayesianGaussianMixture": "modules/generated/sklearn.mixture.bayesiangaussianmixture.html#sklearn.mixture.BayesianGaussianMixture", "mixture.BayesianGaussianMixture()": "modules/generated/sklearn.mixture.bayesiangaussianmixture.html", "mixture.BayesianGaussianMixture.fit()": "modules/generated/sklearn.mixture.bayesiangaussianmixture.html#sklearn.mixture.BayesianGaussianMixture.fit", "mixture.BayesianGaussianMixture.fit_predict()": "modules/generated/sklearn.mixture.bayesiangaussianmixture.html#sklearn.mixture.BayesianGaussianMixture.fit_predict", "mixture.BayesianGaussianMixture.get_params()": "modules/generated/sklearn.mixture.bayesiangaussianmixture.html#sklearn.mixture.BayesianGaussianMixture.get_params", "mixture.BayesianGaussianMixture.predict()": "modules/generated/sklearn.mixture.bayesiangaussianmixture.html#sklearn.mixture.BayesianGaussianMixture.predict", "mixture.BayesianGaussianMixture.predict_proba()": "modules/generated/sklearn.mixture.bayesiangaussianmixture.html#sklearn.mixture.BayesianGaussianMixture.predict_proba", "mixture.BayesianGaussianMixture.sample()": "modules/generated/sklearn.mixture.bayesiangaussianmixture.html#sklearn.mixture.BayesianGaussianMixture.sample", "mixture.BayesianGaussianMixture.score()": "modules/generated/sklearn.mixture.bayesiangaussianmixture.html#sklearn.mixture.BayesianGaussianMixture.score", "mixture.BayesianGaussianMixture.score_samples()": "modules/generated/sklearn.mixture.bayesiangaussianmixture.html#sklearn.mixture.BayesianGaussianMixture.score_samples", "mixture.BayesianGaussianMixture.set_params()": "modules/generated/sklearn.mixture.bayesiangaussianmixture.html#sklearn.mixture.BayesianGaussianMixture.set_params", "mixture.GaussianMixture": "modules/generated/sklearn.mixture.gaussianmixture.html#sklearn.mixture.GaussianMixture", "mixture.GaussianMixture()": "modules/generated/sklearn.mixture.gaussianmixture.html", "mixture.GaussianMixture.aic()": "modules/generated/sklearn.mixture.gaussianmixture.html#sklearn.mixture.GaussianMixture.aic", "mixture.GaussianMixture.bic()": "modules/generated/sklearn.mixture.gaussianmixture.html#sklearn.mixture.GaussianMixture.bic", "mixture.GaussianMixture.fit()": "modules/generated/sklearn.mixture.gaussianmixture.html#sklearn.mixture.GaussianMixture.fit", "mixture.GaussianMixture.fit_predict()": "modules/generated/sklearn.mixture.gaussianmixture.html#sklearn.mixture.GaussianMixture.fit_predict", "mixture.GaussianMixture.get_params()": "modules/generated/sklearn.mixture.gaussianmixture.html#sklearn.mixture.GaussianMixture.get_params", "mixture.GaussianMixture.predict()": "modules/generated/sklearn.mixture.gaussianmixture.html#sklearn.mixture.GaussianMixture.predict", "mixture.GaussianMixture.predict_proba()": "modules/generated/sklearn.mixture.gaussianmixture.html#sklearn.mixture.GaussianMixture.predict_proba", "mixture.GaussianMixture.sample()": "modules/generated/sklearn.mixture.gaussianmixture.html#sklearn.mixture.GaussianMixture.sample", "mixture.GaussianMixture.score()": "modules/generated/sklearn.mixture.gaussianmixture.html#sklearn.mixture.GaussianMixture.score", "mixture.GaussianMixture.score_samples()": "modules/generated/sklearn.mixture.gaussianmixture.html#sklearn.mixture.GaussianMixture.score_samples", "mixture.GaussianMixture.set_params()": "modules/generated/sklearn.mixture.gaussianmixture.html#sklearn.mixture.GaussianMixture.set_params", "model_selection.check_cv()": "modules/generated/sklearn.model_selection.check_cv.html#sklearn.model_selection.check_cv", "model_selection.cross_val_predict()": "modules/generated/sklearn.model_selection.cross_val_predict.html#sklearn.model_selection.cross_val_predict", "model_selection.cross_val_score()": "modules/generated/sklearn.model_selection.cross_val_score.html#sklearn.model_selection.cross_val_score", "model_selection.cross_validate()": "modules/generated/sklearn.model_selection.cross_validate.html#sklearn.model_selection.cross_validate", "model_selection.GridSearchCV": "modules/generated/sklearn.model_selection.gridsearchcv.html#sklearn.model_selection.GridSearchCV", "model_selection.GridSearchCV()": "modules/generated/sklearn.model_selection.gridsearchcv.html", "model_selection.GridSearchCV.decision_function()": "modules/generated/sklearn.model_selection.gridsearchcv.html#sklearn.model_selection.GridSearchCV.decision_function", "model_selection.GridSearchCV.fit()": "modules/generated/sklearn.model_selection.gridsearchcv.html#sklearn.model_selection.GridSearchCV.fit", "model_selection.GridSearchCV.get_params()": "modules/generated/sklearn.model_selection.gridsearchcv.html#sklearn.model_selection.GridSearchCV.get_params", "model_selection.GridSearchCV.inverse_transform()": "modules/generated/sklearn.model_selection.gridsearchcv.html#sklearn.model_selection.GridSearchCV.inverse_transform", "model_selection.GridSearchCV.predict()": "modules/generated/sklearn.model_selection.gridsearchcv.html#sklearn.model_selection.GridSearchCV.predict", "model_selection.GridSearchCV.predict_log_proba()": "modules/generated/sklearn.model_selection.gridsearchcv.html#sklearn.model_selection.GridSearchCV.predict_log_proba", "model_selection.GridSearchCV.predict_proba()": "modules/generated/sklearn.model_selection.gridsearchcv.html#sklearn.model_selection.GridSearchCV.predict_proba", "model_selection.GridSearchCV.score()": "modules/generated/sklearn.model_selection.gridsearchcv.html#sklearn.model_selection.GridSearchCV.score", "model_selection.GridSearchCV.score_samples()": "modules/generated/sklearn.model_selection.gridsearchcv.html#sklearn.model_selection.GridSearchCV.score_samples", "model_selection.GridSearchCV.set_params()": "modules/generated/sklearn.model_selection.gridsearchcv.html#sklearn.model_selection.GridSearchCV.set_params", "model_selection.GridSearchCV.transform()": "modules/generated/sklearn.model_selection.gridsearchcv.html#sklearn.model_selection.GridSearchCV.transform", "model_selection.GroupKFold": "modules/generated/sklearn.model_selection.groupkfold.html#sklearn.model_selection.GroupKFold", "model_selection.GroupKFold()": "modules/generated/sklearn.model_selection.groupkfold.html", "model_selection.GroupKFold.get_n_splits()": "modules/generated/sklearn.model_selection.groupkfold.html#sklearn.model_selection.GroupKFold.get_n_splits", "model_selection.GroupKFold.split()": "modules/generated/sklearn.model_selection.groupkfold.html#sklearn.model_selection.GroupKFold.split", "model_selection.GroupShuffleSplit": "modules/generated/sklearn.model_selection.groupshufflesplit.html#sklearn.model_selection.GroupShuffleSplit", "model_selection.GroupShuffleSplit()": "modules/generated/sklearn.model_selection.groupshufflesplit.html", "model_selection.GroupShuffleSplit.get_n_splits()": "modules/generated/sklearn.model_selection.groupshufflesplit.html#sklearn.model_selection.GroupShuffleSplit.get_n_splits", "model_selection.GroupShuffleSplit.split()": "modules/generated/sklearn.model_selection.groupshufflesplit.html#sklearn.model_selection.GroupShuffleSplit.split", "model_selection.HalvingGridSearchCV": "modules/generated/sklearn.model_selection.halvinggridsearchcv.html#sklearn.model_selection.HalvingGridSearchCV", "model_selection.HalvingGridSearchCV()": "modules/generated/sklearn.model_selection.halvinggridsearchcv.html", "model_selection.HalvingGridSearchCV.decision_function()": "modules/generated/sklearn.model_selection.halvinggridsearchcv.html#sklearn.model_selection.HalvingGridSearchCV.decision_function", "model_selection.HalvingGridSearchCV.fit()": "modules/generated/sklearn.model_selection.halvinggridsearchcv.html#sklearn.model_selection.HalvingGridSearchCV.fit", "model_selection.HalvingGridSearchCV.get_params()": "modules/generated/sklearn.model_selection.halvinggridsearchcv.html#sklearn.model_selection.HalvingGridSearchCV.get_params", "model_selection.HalvingGridSearchCV.inverse_transform()": "modules/generated/sklearn.model_selection.halvinggridsearchcv.html#sklearn.model_selection.HalvingGridSearchCV.inverse_transform", "model_selection.HalvingGridSearchCV.predict()": "modules/generated/sklearn.model_selection.halvinggridsearchcv.html#sklearn.model_selection.HalvingGridSearchCV.predict", "model_selection.HalvingGridSearchCV.predict_log_proba()": "modules/generated/sklearn.model_selection.halvinggridsearchcv.html#sklearn.model_selection.HalvingGridSearchCV.predict_log_proba", "model_selection.HalvingGridSearchCV.predict_proba()": "modules/generated/sklearn.model_selection.halvinggridsearchcv.html#sklearn.model_selection.HalvingGridSearchCV.predict_proba", "model_selection.HalvingGridSearchCV.score()": "modules/generated/sklearn.model_selection.halvinggridsearchcv.html#sklearn.model_selection.HalvingGridSearchCV.score", "model_selection.HalvingGridSearchCV.score_samples()": "modules/generated/sklearn.model_selection.halvinggridsearchcv.html#sklearn.model_selection.HalvingGridSearchCV.score_samples", "model_selection.HalvingGridSearchCV.set_params()": "modules/generated/sklearn.model_selection.halvinggridsearchcv.html#sklearn.model_selection.HalvingGridSearchCV.set_params", "model_selection.HalvingGridSearchCV.transform()": "modules/generated/sklearn.model_selection.halvinggridsearchcv.html#sklearn.model_selection.HalvingGridSearchCV.transform", "model_selection.HalvingRandomSearchCV": "modules/generated/sklearn.model_selection.halvingrandomsearchcv.html#sklearn.model_selection.HalvingRandomSearchCV", "model_selection.HalvingRandomSearchCV()": "modules/generated/sklearn.model_selection.halvingrandomsearchcv.html", "model_selection.HalvingRandomSearchCV.decision_function()": "modules/generated/sklearn.model_selection.halvingrandomsearchcv.html#sklearn.model_selection.HalvingRandomSearchCV.decision_function", "model_selection.HalvingRandomSearchCV.fit()": "modules/generated/sklearn.model_selection.halvingrandomsearchcv.html#sklearn.model_selection.HalvingRandomSearchCV.fit", "model_selection.HalvingRandomSearchCV.get_params()": "modules/generated/sklearn.model_selection.halvingrandomsearchcv.html#sklearn.model_selection.HalvingRandomSearchCV.get_params", "model_selection.HalvingRandomSearchCV.inverse_transform()": "modules/generated/sklearn.model_selection.halvingrandomsearchcv.html#sklearn.model_selection.HalvingRandomSearchCV.inverse_transform", "model_selection.HalvingRandomSearchCV.predict()": "modules/generated/sklearn.model_selection.halvingrandomsearchcv.html#sklearn.model_selection.HalvingRandomSearchCV.predict", "model_selection.HalvingRandomSearchCV.predict_log_proba()": "modules/generated/sklearn.model_selection.halvingrandomsearchcv.html#sklearn.model_selection.HalvingRandomSearchCV.predict_log_proba", "model_selection.HalvingRandomSearchCV.predict_proba()": "modules/generated/sklearn.model_selection.halvingrandomsearchcv.html#sklearn.model_selection.HalvingRandomSearchCV.predict_proba", "model_selection.HalvingRandomSearchCV.score()": "modules/generated/sklearn.model_selection.halvingrandomsearchcv.html#sklearn.model_selection.HalvingRandomSearchCV.score", "model_selection.HalvingRandomSearchCV.score_samples()": "modules/generated/sklearn.model_selection.halvingrandomsearchcv.html#sklearn.model_selection.HalvingRandomSearchCV.score_samples", "model_selection.HalvingRandomSearchCV.set_params()": "modules/generated/sklearn.model_selection.halvingrandomsearchcv.html#sklearn.model_selection.HalvingRandomSearchCV.set_params", "model_selection.HalvingRandomSearchCV.transform()": "modules/generated/sklearn.model_selection.halvingrandomsearchcv.html#sklearn.model_selection.HalvingRandomSearchCV.transform", "model_selection.KFold": "modules/generated/sklearn.model_selection.kfold.html#sklearn.model_selection.KFold", "model_selection.KFold()": "modules/generated/sklearn.model_selection.kfold.html", "model_selection.KFold.get_n_splits()": "modules/generated/sklearn.model_selection.kfold.html#sklearn.model_selection.KFold.get_n_splits", "model_selection.KFold.split()": "modules/generated/sklearn.model_selection.kfold.html#sklearn.model_selection.KFold.split", "model_selection.learning_curve()": "modules/generated/sklearn.model_selection.learning_curve.html#sklearn.model_selection.learning_curve", "model_selection.LeaveOneGroupOut": "modules/generated/sklearn.model_selection.leaveonegroupout.html", "model_selection.LeaveOneGroupOut.get_n_splits()": "modules/generated/sklearn.model_selection.leaveonegroupout.html#sklearn.model_selection.LeaveOneGroupOut.get_n_splits", "model_selection.LeaveOneGroupOut.split()": "modules/generated/sklearn.model_selection.leaveonegroupout.html#sklearn.model_selection.LeaveOneGroupOut.split", "model_selection.LeaveOneOut": "modules/generated/sklearn.model_selection.leaveoneout.html#sklearn.model_selection.LeaveOneOut", "model_selection.LeaveOneOut.get_n_splits()": "modules/generated/sklearn.model_selection.leaveoneout.html#sklearn.model_selection.LeaveOneOut.get_n_splits", "model_selection.LeaveOneOut.split()": "modules/generated/sklearn.model_selection.leaveoneout.html#sklearn.model_selection.LeaveOneOut.split", "model_selection.LeavePGroupsOut": "modules/generated/sklearn.model_selection.leavepgroupsout.html#sklearn.model_selection.LeavePGroupsOut", "model_selection.LeavePGroupsOut()": "modules/generated/sklearn.model_selection.leavepgroupsout.html", "model_selection.LeavePGroupsOut.get_n_splits()": "modules/generated/sklearn.model_selection.leavepgroupsout.html#sklearn.model_selection.LeavePGroupsOut.get_n_splits", "model_selection.LeavePGroupsOut.split()": "modules/generated/sklearn.model_selection.leavepgroupsout.html#sklearn.model_selection.LeavePGroupsOut.split", "model_selection.LeavePOut": "modules/generated/sklearn.model_selection.leavepout.html#sklearn.model_selection.LeavePOut", "model_selection.LeavePOut()": "modules/generated/sklearn.model_selection.leavepout.html", "model_selection.LeavePOut.get_n_splits()": "modules/generated/sklearn.model_selection.leavepout.html#sklearn.model_selection.LeavePOut.get_n_splits", "model_selection.LeavePOut.split()": "modules/generated/sklearn.model_selection.leavepout.html#sklearn.model_selection.LeavePOut.split", "model_selection.ParameterGrid": "modules/generated/sklearn.model_selection.parametergrid.html#sklearn.model_selection.ParameterGrid", "model_selection.ParameterGrid()": "modules/generated/sklearn.model_selection.parametergrid.html", "model_selection.ParameterSampler": "modules/generated/sklearn.model_selection.parametersampler.html#sklearn.model_selection.ParameterSampler", "model_selection.ParameterSampler()": "modules/generated/sklearn.model_selection.parametersampler.html", "model_selection.permutation_test_score()": "modules/generated/sklearn.model_selection.permutation_test_score.html#sklearn.model_selection.permutation_test_score", "model_selection.PredefinedSplit": "modules/generated/sklearn.model_selection.predefinedsplit.html#sklearn.model_selection.PredefinedSplit", "model_selection.PredefinedSplit()": "modules/generated/sklearn.model_selection.predefinedsplit.html", "model_selection.PredefinedSplit.get_n_splits()": "modules/generated/sklearn.model_selection.predefinedsplit.html#sklearn.model_selection.PredefinedSplit.get_n_splits", "model_selection.PredefinedSplit.split()": "modules/generated/sklearn.model_selection.predefinedsplit.html#sklearn.model_selection.PredefinedSplit.split", "model_selection.RandomizedSearchCV": "modules/generated/sklearn.model_selection.randomizedsearchcv.html#sklearn.model_selection.RandomizedSearchCV", "model_selection.RandomizedSearchCV()": "modules/generated/sklearn.model_selection.randomizedsearchcv.html", "model_selection.RandomizedSearchCV.decision_function()": "modules/generated/sklearn.model_selection.randomizedsearchcv.html#sklearn.model_selection.RandomizedSearchCV.decision_function", "model_selection.RandomizedSearchCV.fit()": "modules/generated/sklearn.model_selection.randomizedsearchcv.html#sklearn.model_selection.RandomizedSearchCV.fit", "model_selection.RandomizedSearchCV.get_params()": "modules/generated/sklearn.model_selection.randomizedsearchcv.html#sklearn.model_selection.RandomizedSearchCV.get_params", "model_selection.RandomizedSearchCV.inverse_transform()": "modules/generated/sklearn.model_selection.randomizedsearchcv.html#sklearn.model_selection.RandomizedSearchCV.inverse_transform", "model_selection.RandomizedSearchCV.predict()": "modules/generated/sklearn.model_selection.randomizedsearchcv.html#sklearn.model_selection.RandomizedSearchCV.predict", "model_selection.RandomizedSearchCV.predict_log_proba()": "modules/generated/sklearn.model_selection.randomizedsearchcv.html#sklearn.model_selection.RandomizedSearchCV.predict_log_proba", "model_selection.RandomizedSearchCV.predict_proba()": "modules/generated/sklearn.model_selection.randomizedsearchcv.html#sklearn.model_selection.RandomizedSearchCV.predict_proba", "model_selection.RandomizedSearchCV.score()": "modules/generated/sklearn.model_selection.randomizedsearchcv.html#sklearn.model_selection.RandomizedSearchCV.score", "model_selection.RandomizedSearchCV.score_samples()": "modules/generated/sklearn.model_selection.randomizedsearchcv.html#sklearn.model_selection.RandomizedSearchCV.score_samples", "model_selection.RandomizedSearchCV.set_params()": "modules/generated/sklearn.model_selection.randomizedsearchcv.html#sklearn.model_selection.RandomizedSearchCV.set_params", "model_selection.RandomizedSearchCV.transform()": "modules/generated/sklearn.model_selection.randomizedsearchcv.html#sklearn.model_selection.RandomizedSearchCV.transform", "model_selection.RepeatedKFold": "modules/generated/sklearn.model_selection.repeatedkfold.html#sklearn.model_selection.RepeatedKFold", "model_selection.RepeatedKFold()": "modules/generated/sklearn.model_selection.repeatedkfold.html", "model_selection.RepeatedKFold.get_n_splits()": "modules/generated/sklearn.model_selection.repeatedkfold.html#sklearn.model_selection.RepeatedKFold.get_n_splits", "model_selection.RepeatedKFold.split()": "modules/generated/sklearn.model_selection.repeatedkfold.html#sklearn.model_selection.RepeatedKFold.split", "model_selection.RepeatedStratifiedKFold": "modules/generated/sklearn.model_selection.repeatedstratifiedkfold.html#sklearn.model_selection.RepeatedStratifiedKFold", "model_selection.RepeatedStratifiedKFold()": "modules/generated/sklearn.model_selection.repeatedstratifiedkfold.html", "model_selection.RepeatedStratifiedKFold.get_n_splits()": "modules/generated/sklearn.model_selection.repeatedstratifiedkfold.html#sklearn.model_selection.RepeatedStratifiedKFold.get_n_splits", "model_selection.RepeatedStratifiedKFold.split()": "modules/generated/sklearn.model_selection.repeatedstratifiedkfold.html#sklearn.model_selection.RepeatedStratifiedKFold.split", "model_selection.ShuffleSplit": "modules/generated/sklearn.model_selection.shufflesplit.html#sklearn.model_selection.ShuffleSplit", "model_selection.ShuffleSplit()": "modules/generated/sklearn.model_selection.shufflesplit.html", "model_selection.ShuffleSplit.get_n_splits()": "modules/generated/sklearn.model_selection.shufflesplit.html#sklearn.model_selection.ShuffleSplit.get_n_splits", "model_selection.ShuffleSplit.split()": "modules/generated/sklearn.model_selection.shufflesplit.html#sklearn.model_selection.ShuffleSplit.split", "model_selection.StratifiedGroupKFold": "modules/generated/sklearn.model_selection.stratifiedgroupkfold.html#sklearn.model_selection.StratifiedGroupKFold", "model_selection.StratifiedGroupKFold()": "modules/generated/sklearn.model_selection.stratifiedgroupkfold.html", "model_selection.StratifiedGroupKFold.get_n_splits()": "modules/generated/sklearn.model_selection.stratifiedgroupkfold.html#sklearn.model_selection.StratifiedGroupKFold.get_n_splits", "model_selection.StratifiedGroupKFold.split()": "modules/generated/sklearn.model_selection.stratifiedgroupkfold.html#sklearn.model_selection.StratifiedGroupKFold.split", "model_selection.StratifiedKFold": "modules/generated/sklearn.model_selection.stratifiedkfold.html#sklearn.model_selection.StratifiedKFold", "model_selection.StratifiedKFold()": "modules/generated/sklearn.model_selection.stratifiedkfold.html", "model_selection.StratifiedKFold.get_n_splits()": "modules/generated/sklearn.model_selection.stratifiedkfold.html#sklearn.model_selection.StratifiedKFold.get_n_splits", "model_selection.StratifiedKFold.split()": "modules/generated/sklearn.model_selection.stratifiedkfold.html#sklearn.model_selection.StratifiedKFold.split", "model_selection.StratifiedShuffleSplit": "modules/generated/sklearn.model_selection.stratifiedshufflesplit.html#sklearn.model_selection.StratifiedShuffleSplit", "model_selection.StratifiedShuffleSplit()": "modules/generated/sklearn.model_selection.stratifiedshufflesplit.html", "model_selection.StratifiedShuffleSplit.get_n_splits()": "modules/generated/sklearn.model_selection.stratifiedshufflesplit.html#sklearn.model_selection.StratifiedShuffleSplit.get_n_splits", "model_selection.StratifiedShuffleSplit.split()": "modules/generated/sklearn.model_selection.stratifiedshufflesplit.html#sklearn.model_selection.StratifiedShuffleSplit.split", "model_selection.TimeSeriesSplit": "modules/generated/sklearn.model_selection.timeseriessplit.html#sklearn.model_selection.TimeSeriesSplit", "model_selection.TimeSeriesSplit()": "modules/generated/sklearn.model_selection.timeseriessplit.html", "model_selection.TimeSeriesSplit.get_n_splits()": "modules/generated/sklearn.model_selection.timeseriessplit.html#sklearn.model_selection.TimeSeriesSplit.get_n_splits", "model_selection.TimeSeriesSplit.split()": "modules/generated/sklearn.model_selection.timeseriessplit.html#sklearn.model_selection.TimeSeriesSplit.split", "model_selection.train_test_split()": "modules/generated/sklearn.model_selection.train_test_split.html#sklearn.model_selection.train_test_split", "model_selection.validation_curve()": "modules/generated/sklearn.model_selection.validation_curve.html#sklearn.model_selection.validation_curve", "multiclass.OneVsOneClassifier": "modules/generated/sklearn.multiclass.onevsoneclassifier.html#sklearn.multiclass.OneVsOneClassifier", "multiclass.OneVsOneClassifier()": "modules/generated/sklearn.multiclass.onevsoneclassifier.html", "multiclass.OneVsOneClassifier.decision_function()": "modules/generated/sklearn.multiclass.onevsoneclassifier.html#sklearn.multiclass.OneVsOneClassifier.decision_function", "multiclass.OneVsOneClassifier.fit()": "modules/generated/sklearn.multiclass.onevsoneclassifier.html#sklearn.multiclass.OneVsOneClassifier.fit", "multiclass.OneVsOneClassifier.get_params()": "modules/generated/sklearn.multiclass.onevsoneclassifier.html#sklearn.multiclass.OneVsOneClassifier.get_params", "multiclass.OneVsOneClassifier.partial_fit()": "modules/generated/sklearn.multiclass.onevsoneclassifier.html#sklearn.multiclass.OneVsOneClassifier.partial_fit", "multiclass.OneVsOneClassifier.predict()": "modules/generated/sklearn.multiclass.onevsoneclassifier.html#sklearn.multiclass.OneVsOneClassifier.predict", "multiclass.OneVsOneClassifier.score()": "modules/generated/sklearn.multiclass.onevsoneclassifier.html#sklearn.multiclass.OneVsOneClassifier.score", "multiclass.OneVsOneClassifier.set_params()": "modules/generated/sklearn.multiclass.onevsoneclassifier.html#sklearn.multiclass.OneVsOneClassifier.set_params", "multiclass.OneVsRestClassifier": "modules/generated/sklearn.multiclass.onevsrestclassifier.html#sklearn.multiclass.OneVsRestClassifier", "multiclass.OneVsRestClassifier()": "modules/generated/sklearn.multiclass.onevsrestclassifier.html", "multiclass.OneVsRestClassifier.decision_function()": "modules/generated/sklearn.multiclass.onevsrestclassifier.html#sklearn.multiclass.OneVsRestClassifier.decision_function", "multiclass.OneVsRestClassifier.fit()": "modules/generated/sklearn.multiclass.onevsrestclassifier.html#sklearn.multiclass.OneVsRestClassifier.fit", "multiclass.OneVsRestClassifier.get_params()": "modules/generated/sklearn.multiclass.onevsrestclassifier.html#sklearn.multiclass.OneVsRestClassifier.get_params", "multiclass.OneVsRestClassifier.partial_fit()": "modules/generated/sklearn.multiclass.onevsrestclassifier.html#sklearn.multiclass.OneVsRestClassifier.partial_fit", "multiclass.OneVsRestClassifier.predict()": "modules/generated/sklearn.multiclass.onevsrestclassifier.html#sklearn.multiclass.OneVsRestClassifier.predict", "multiclass.OneVsRestClassifier.predict_proba()": "modules/generated/sklearn.multiclass.onevsrestclassifier.html#sklearn.multiclass.OneVsRestClassifier.predict_proba", "multiclass.OneVsRestClassifier.score()": "modules/generated/sklearn.multiclass.onevsrestclassifier.html#sklearn.multiclass.OneVsRestClassifier.score", "multiclass.OneVsRestClassifier.set_params()": "modules/generated/sklearn.multiclass.onevsrestclassifier.html#sklearn.multiclass.OneVsRestClassifier.set_params", "multiclass.OutputCodeClassifier": "modules/generated/sklearn.multiclass.outputcodeclassifier.html#sklearn.multiclass.OutputCodeClassifier", "multiclass.OutputCodeClassifier()": "modules/generated/sklearn.multiclass.outputcodeclassifier.html", "multiclass.OutputCodeClassifier.fit()": "modules/generated/sklearn.multiclass.outputcodeclassifier.html#sklearn.multiclass.OutputCodeClassifier.fit", "multiclass.OutputCodeClassifier.get_params()": "modules/generated/sklearn.multiclass.outputcodeclassifier.html#sklearn.multiclass.OutputCodeClassifier.get_params", "multiclass.OutputCodeClassifier.predict()": "modules/generated/sklearn.multiclass.outputcodeclassifier.html#sklearn.multiclass.OutputCodeClassifier.predict", "multiclass.OutputCodeClassifier.score()": "modules/generated/sklearn.multiclass.outputcodeclassifier.html#sklearn.multiclass.OutputCodeClassifier.score", "multiclass.OutputCodeClassifier.set_params()": "modules/generated/sklearn.multiclass.outputcodeclassifier.html#sklearn.multiclass.OutputCodeClassifier.set_params", "multioutput.ClassifierChain": "modules/generated/sklearn.multioutput.classifierchain.html#sklearn.multioutput.ClassifierChain", "multioutput.ClassifierChain()": "modules/generated/sklearn.multioutput.classifierchain.html", "multioutput.ClassifierChain.decision_function()": "modules/generated/sklearn.multioutput.classifierchain.html#sklearn.multioutput.ClassifierChain.decision_function", "multioutput.ClassifierChain.fit()": "modules/generated/sklearn.multioutput.classifierchain.html#sklearn.multioutput.ClassifierChain.fit", "multioutput.ClassifierChain.get_params()": "modules/generated/sklearn.multioutput.classifierchain.html#sklearn.multioutput.ClassifierChain.get_params", "multioutput.ClassifierChain.predict()": "modules/generated/sklearn.multioutput.classifierchain.html#sklearn.multioutput.ClassifierChain.predict", "multioutput.ClassifierChain.predict_proba()": "modules/generated/sklearn.multioutput.classifierchain.html#sklearn.multioutput.ClassifierChain.predict_proba", "multioutput.ClassifierChain.score()": "modules/generated/sklearn.multioutput.classifierchain.html#sklearn.multioutput.ClassifierChain.score", "multioutput.ClassifierChain.set_params()": "modules/generated/sklearn.multioutput.classifierchain.html#sklearn.multioutput.ClassifierChain.set_params", "multioutput.MultiOutputClassifier": "modules/generated/sklearn.multioutput.multioutputclassifier.html#sklearn.multioutput.MultiOutputClassifier", "multioutput.MultiOutputClassifier()": "modules/generated/sklearn.multioutput.multioutputclassifier.html", "multioutput.MultiOutputClassifier.fit()": "modules/generated/sklearn.multioutput.multioutputclassifier.html#sklearn.multioutput.MultiOutputClassifier.fit", "multioutput.MultiOutputClassifier.get_params()": "modules/generated/sklearn.multioutput.multioutputclassifier.html#sklearn.multioutput.MultiOutputClassifier.get_params", "multioutput.MultiOutputClassifier.partial_fit()": "modules/generated/sklearn.multioutput.multioutputclassifier.html#sklearn.multioutput.MultiOutputClassifier.partial_fit", "multioutput.MultiOutputClassifier.predict()": "modules/generated/sklearn.multioutput.multioutputclassifier.html#sklearn.multioutput.MultiOutputClassifier.predict", "multioutput.MultiOutputClassifier.predict_proba()": "modules/generated/sklearn.multioutput.multioutputclassifier.html#sklearn.multioutput.MultiOutputClassifier.predict_proba", "multioutput.MultiOutputClassifier.score()": "modules/generated/sklearn.multioutput.multioutputclassifier.html#sklearn.multioutput.MultiOutputClassifier.score", "multioutput.MultiOutputClassifier.set_params()": "modules/generated/sklearn.multioutput.multioutputclassifier.html#sklearn.multioutput.MultiOutputClassifier.set_params", "multioutput.MultiOutputRegressor": "modules/generated/sklearn.multioutput.multioutputregressor.html#sklearn.multioutput.MultiOutputRegressor", "multioutput.MultiOutputRegressor()": "modules/generated/sklearn.multioutput.multioutputregressor.html", "multioutput.MultiOutputRegressor.fit()": "modules/generated/sklearn.multioutput.multioutputregressor.html#sklearn.multioutput.MultiOutputRegressor.fit", "multioutput.MultiOutputRegressor.get_params()": "modules/generated/sklearn.multioutput.multioutputregressor.html#sklearn.multioutput.MultiOutputRegressor.get_params", "multioutput.MultiOutputRegressor.partial_fit()": "modules/generated/sklearn.multioutput.multioutputregressor.html#sklearn.multioutput.MultiOutputRegressor.partial_fit", "multioutput.MultiOutputRegressor.predict()": "modules/generated/sklearn.multioutput.multioutputregressor.html#sklearn.multioutput.MultiOutputRegressor.predict", "multioutput.MultiOutputRegressor.score()": "modules/generated/sklearn.multioutput.multioutputregressor.html#sklearn.multioutput.MultiOutputRegressor.score", "multioutput.MultiOutputRegressor.set_params()": "modules/generated/sklearn.multioutput.multioutputregressor.html#sklearn.multioutput.MultiOutputRegressor.set_params", "multioutput.RegressorChain": "modules/generated/sklearn.multioutput.regressorchain.html#sklearn.multioutput.RegressorChain", "multioutput.RegressorChain()": "modules/generated/sklearn.multioutput.regressorchain.html", "multioutput.RegressorChain.fit()": "modules/generated/sklearn.multioutput.regressorchain.html#sklearn.multioutput.RegressorChain.fit", "multioutput.RegressorChain.get_params()": "modules/generated/sklearn.multioutput.regressorchain.html#sklearn.multioutput.RegressorChain.get_params", "multioutput.RegressorChain.predict()": "modules/generated/sklearn.multioutput.regressorchain.html#sklearn.multioutput.RegressorChain.predict", "multioutput.RegressorChain.score()": "modules/generated/sklearn.multioutput.regressorchain.html#sklearn.multioutput.RegressorChain.score", "multioutput.RegressorChain.set_params()": "modules/generated/sklearn.multioutput.regressorchain.html#sklearn.multioutput.RegressorChain.set_params", "naive_bayes.BernoulliNB": "modules/generated/sklearn.naive_bayes.bernoullinb.html#sklearn.naive_bayes.BernoulliNB", "naive_bayes.BernoulliNB()": "modules/generated/sklearn.naive_bayes.bernoullinb.html", "naive_bayes.BernoulliNB.fit()": "modules/generated/sklearn.naive_bayes.bernoullinb.html#sklearn.naive_bayes.BernoulliNB.fit", "naive_bayes.BernoulliNB.get_params()": "modules/generated/sklearn.naive_bayes.bernoullinb.html#sklearn.naive_bayes.BernoulliNB.get_params", "naive_bayes.BernoulliNB.partial_fit()": "modules/generated/sklearn.naive_bayes.bernoullinb.html#sklearn.naive_bayes.BernoulliNB.partial_fit", "naive_bayes.BernoulliNB.predict()": "modules/generated/sklearn.naive_bayes.bernoullinb.html#sklearn.naive_bayes.BernoulliNB.predict", "naive_bayes.BernoulliNB.predict_log_proba()": "modules/generated/sklearn.naive_bayes.bernoullinb.html#sklearn.naive_bayes.BernoulliNB.predict_log_proba", "naive_bayes.BernoulliNB.predict_proba()": "modules/generated/sklearn.naive_bayes.bernoullinb.html#sklearn.naive_bayes.BernoulliNB.predict_proba", "naive_bayes.BernoulliNB.score()": "modules/generated/sklearn.naive_bayes.bernoullinb.html#sklearn.naive_bayes.BernoulliNB.score", "naive_bayes.BernoulliNB.set_params()": "modules/generated/sklearn.naive_bayes.bernoullinb.html#sklearn.naive_bayes.BernoulliNB.set_params", "naive_bayes.CategoricalNB": "modules/generated/sklearn.naive_bayes.categoricalnb.html#sklearn.naive_bayes.CategoricalNB", "naive_bayes.CategoricalNB()": "modules/generated/sklearn.naive_bayes.categoricalnb.html", "naive_bayes.CategoricalNB.fit()": "modules/generated/sklearn.naive_bayes.categoricalnb.html#sklearn.naive_bayes.CategoricalNB.fit", "naive_bayes.CategoricalNB.get_params()": "modules/generated/sklearn.naive_bayes.categoricalnb.html#sklearn.naive_bayes.CategoricalNB.get_params", "naive_bayes.CategoricalNB.partial_fit()": "modules/generated/sklearn.naive_bayes.categoricalnb.html#sklearn.naive_bayes.CategoricalNB.partial_fit", "naive_bayes.CategoricalNB.predict()": "modules/generated/sklearn.naive_bayes.categoricalnb.html#sklearn.naive_bayes.CategoricalNB.predict", "naive_bayes.CategoricalNB.predict_log_proba()": "modules/generated/sklearn.naive_bayes.categoricalnb.html#sklearn.naive_bayes.CategoricalNB.predict_log_proba", "naive_bayes.CategoricalNB.predict_proba()": "modules/generated/sklearn.naive_bayes.categoricalnb.html#sklearn.naive_bayes.CategoricalNB.predict_proba", "naive_bayes.CategoricalNB.score()": "modules/generated/sklearn.naive_bayes.categoricalnb.html#sklearn.naive_bayes.CategoricalNB.score", "naive_bayes.CategoricalNB.set_params()": "modules/generated/sklearn.naive_bayes.categoricalnb.html#sklearn.naive_bayes.CategoricalNB.set_params", "naive_bayes.ComplementNB": "modules/generated/sklearn.naive_bayes.complementnb.html#sklearn.naive_bayes.ComplementNB", "naive_bayes.ComplementNB()": "modules/generated/sklearn.naive_bayes.complementnb.html", "naive_bayes.ComplementNB.fit()": "modules/generated/sklearn.naive_bayes.complementnb.html#sklearn.naive_bayes.ComplementNB.fit", "naive_bayes.ComplementNB.get_params()": "modules/generated/sklearn.naive_bayes.complementnb.html#sklearn.naive_bayes.ComplementNB.get_params", "naive_bayes.ComplementNB.partial_fit()": "modules/generated/sklearn.naive_bayes.complementnb.html#sklearn.naive_bayes.ComplementNB.partial_fit", "naive_bayes.ComplementNB.predict()": "modules/generated/sklearn.naive_bayes.complementnb.html#sklearn.naive_bayes.ComplementNB.predict", "naive_bayes.ComplementNB.predict_log_proba()": "modules/generated/sklearn.naive_bayes.complementnb.html#sklearn.naive_bayes.ComplementNB.predict_log_proba", "naive_bayes.ComplementNB.predict_proba()": "modules/generated/sklearn.naive_bayes.complementnb.html#sklearn.naive_bayes.ComplementNB.predict_proba", "naive_bayes.ComplementNB.score()": "modules/generated/sklearn.naive_bayes.complementnb.html#sklearn.naive_bayes.ComplementNB.score", "naive_bayes.ComplementNB.set_params()": "modules/generated/sklearn.naive_bayes.complementnb.html#sklearn.naive_bayes.ComplementNB.set_params", "naive_bayes.GaussianNB": "modules/generated/sklearn.naive_bayes.gaussiannb.html#sklearn.naive_bayes.GaussianNB", "naive_bayes.GaussianNB()": "modules/generated/sklearn.naive_bayes.gaussiannb.html", "naive_bayes.GaussianNB.fit()": "modules/generated/sklearn.naive_bayes.gaussiannb.html#sklearn.naive_bayes.GaussianNB.fit", "naive_bayes.GaussianNB.get_params()": "modules/generated/sklearn.naive_bayes.gaussiannb.html#sklearn.naive_bayes.GaussianNB.get_params", "naive_bayes.GaussianNB.partial_fit()": "modules/generated/sklearn.naive_bayes.gaussiannb.html#sklearn.naive_bayes.GaussianNB.partial_fit", "naive_bayes.GaussianNB.predict()": "modules/generated/sklearn.naive_bayes.gaussiannb.html#sklearn.naive_bayes.GaussianNB.predict", "naive_bayes.GaussianNB.predict_log_proba()": "modules/generated/sklearn.naive_bayes.gaussiannb.html#sklearn.naive_bayes.GaussianNB.predict_log_proba", "naive_bayes.GaussianNB.predict_proba()": "modules/generated/sklearn.naive_bayes.gaussiannb.html#sklearn.naive_bayes.GaussianNB.predict_proba", "naive_bayes.GaussianNB.score()": "modules/generated/sklearn.naive_bayes.gaussiannb.html#sklearn.naive_bayes.GaussianNB.score", "naive_bayes.GaussianNB.set_params()": "modules/generated/sklearn.naive_bayes.gaussiannb.html#sklearn.naive_bayes.GaussianNB.set_params", "naive_bayes.MultinomialNB": "modules/generated/sklearn.naive_bayes.multinomialnb.html#sklearn.naive_bayes.MultinomialNB", "naive_bayes.MultinomialNB()": "modules/generated/sklearn.naive_bayes.multinomialnb.html", "naive_bayes.MultinomialNB.fit()": "modules/generated/sklearn.naive_bayes.multinomialnb.html#sklearn.naive_bayes.MultinomialNB.fit", "naive_bayes.MultinomialNB.get_params()": "modules/generated/sklearn.naive_bayes.multinomialnb.html#sklearn.naive_bayes.MultinomialNB.get_params", "naive_bayes.MultinomialNB.partial_fit()": "modules/generated/sklearn.naive_bayes.multinomialnb.html#sklearn.naive_bayes.MultinomialNB.partial_fit", "naive_bayes.MultinomialNB.predict()": "modules/generated/sklearn.naive_bayes.multinomialnb.html#sklearn.naive_bayes.MultinomialNB.predict", "naive_bayes.MultinomialNB.predict_log_proba()": "modules/generated/sklearn.naive_bayes.multinomialnb.html#sklearn.naive_bayes.MultinomialNB.predict_log_proba", "naive_bayes.MultinomialNB.predict_proba()": "modules/generated/sklearn.naive_bayes.multinomialnb.html#sklearn.naive_bayes.MultinomialNB.predict_proba", "naive_bayes.MultinomialNB.score()": "modules/generated/sklearn.naive_bayes.multinomialnb.html#sklearn.naive_bayes.MultinomialNB.score", "naive_bayes.MultinomialNB.set_params()": "modules/generated/sklearn.naive_bayes.multinomialnb.html#sklearn.naive_bayes.MultinomialNB.set_params", "neighbors.BallTree": "modules/generated/sklearn.neighbors.balltree.html#sklearn.neighbors.BallTree", "neighbors.BallTree()": "modules/generated/sklearn.neighbors.balltree.html", "neighbors.BallTree.get_arrays()": "modules/generated/sklearn.neighbors.balltree.html#sklearn.neighbors.BallTree.get_arrays", "neighbors.BallTree.get_n_calls()": "modules/generated/sklearn.neighbors.balltree.html#sklearn.neighbors.BallTree.get_n_calls", "neighbors.BallTree.get_tree_stats()": "modules/generated/sklearn.neighbors.balltree.html#sklearn.neighbors.BallTree.get_tree_stats", "neighbors.BallTree.kernel_density()": "modules/generated/sklearn.neighbors.balltree.html#sklearn.neighbors.BallTree.kernel_density", "neighbors.BallTree.query()": "modules/generated/sklearn.neighbors.balltree.html#sklearn.neighbors.BallTree.query", "neighbors.BallTree.query_radius()": "modules/generated/sklearn.neighbors.balltree.html#sklearn.neighbors.BallTree.query_radius", "neighbors.BallTree.reset_n_calls()": "modules/generated/sklearn.neighbors.balltree.html#sklearn.neighbors.BallTree.reset_n_calls", "neighbors.BallTree.two_point_correlation()": "modules/generated/sklearn.neighbors.balltree.html#sklearn.neighbors.BallTree.two_point_correlation", "neighbors.KDTree": "modules/generated/sklearn.neighbors.kdtree.html#sklearn.neighbors.KDTree", "neighbors.KDTree()": "modules/generated/sklearn.neighbors.kdtree.html", "neighbors.KDTree.get_arrays()": "modules/generated/sklearn.neighbors.kdtree.html#sklearn.neighbors.KDTree.get_arrays", "neighbors.KDTree.get_n_calls()": "modules/generated/sklearn.neighbors.kdtree.html#sklearn.neighbors.KDTree.get_n_calls", "neighbors.KDTree.get_tree_stats()": "modules/generated/sklearn.neighbors.kdtree.html#sklearn.neighbors.KDTree.get_tree_stats", "neighbors.KDTree.kernel_density()": "modules/generated/sklearn.neighbors.kdtree.html#sklearn.neighbors.KDTree.kernel_density", "neighbors.KDTree.query()": "modules/generated/sklearn.neighbors.kdtree.html#sklearn.neighbors.KDTree.query", "neighbors.KDTree.query_radius()": "modules/generated/sklearn.neighbors.kdtree.html#sklearn.neighbors.KDTree.query_radius", "neighbors.KDTree.reset_n_calls()": "modules/generated/sklearn.neighbors.kdtree.html#sklearn.neighbors.KDTree.reset_n_calls", "neighbors.KDTree.two_point_correlation()": "modules/generated/sklearn.neighbors.kdtree.html#sklearn.neighbors.KDTree.two_point_correlation", "neighbors.KernelDensity": "modules/generated/sklearn.neighbors.kerneldensity.html#sklearn.neighbors.KernelDensity", "neighbors.KernelDensity()": "modules/generated/sklearn.neighbors.kerneldensity.html", "neighbors.KernelDensity.fit()": "modules/generated/sklearn.neighbors.kerneldensity.html#sklearn.neighbors.KernelDensity.fit", "neighbors.KernelDensity.get_params()": "modules/generated/sklearn.neighbors.kerneldensity.html#sklearn.neighbors.KernelDensity.get_params", "neighbors.KernelDensity.sample()": "modules/generated/sklearn.neighbors.kerneldensity.html#sklearn.neighbors.KernelDensity.sample", "neighbors.KernelDensity.score()": "modules/generated/sklearn.neighbors.kerneldensity.html#sklearn.neighbors.KernelDensity.score", "neighbors.KernelDensity.score_samples()": "modules/generated/sklearn.neighbors.kerneldensity.html#sklearn.neighbors.KernelDensity.score_samples", "neighbors.KernelDensity.set_params()": "modules/generated/sklearn.neighbors.kerneldensity.html#sklearn.neighbors.KernelDensity.set_params", "neighbors.kneighbors_graph()": "modules/generated/sklearn.neighbors.kneighbors_graph.html#sklearn.neighbors.kneighbors_graph", "neighbors.KNeighborsClassifier": "modules/generated/sklearn.neighbors.kneighborsclassifier.html#sklearn.neighbors.KNeighborsClassifier", "neighbors.KNeighborsClassifier()": "modules/generated/sklearn.neighbors.kneighborsclassifier.html", "neighbors.KNeighborsClassifier.fit()": "modules/generated/sklearn.neighbors.kneighborsclassifier.html#sklearn.neighbors.KNeighborsClassifier.fit", "neighbors.KNeighborsClassifier.get_params()": "modules/generated/sklearn.neighbors.kneighborsclassifier.html#sklearn.neighbors.KNeighborsClassifier.get_params", "neighbors.KNeighborsClassifier.kneighbors()": "modules/generated/sklearn.neighbors.kneighborsclassifier.html#sklearn.neighbors.KNeighborsClassifier.kneighbors", "neighbors.KNeighborsClassifier.kneighbors_graph()": "modules/generated/sklearn.neighbors.kneighborsclassifier.html#sklearn.neighbors.KNeighborsClassifier.kneighbors_graph", "neighbors.KNeighborsClassifier.predict()": "modules/generated/sklearn.neighbors.kneighborsclassifier.html#sklearn.neighbors.KNeighborsClassifier.predict", "neighbors.KNeighborsClassifier.predict_proba()": "modules/generated/sklearn.neighbors.kneighborsclassifier.html#sklearn.neighbors.KNeighborsClassifier.predict_proba", "neighbors.KNeighborsClassifier.score()": "modules/generated/sklearn.neighbors.kneighborsclassifier.html#sklearn.neighbors.KNeighborsClassifier.score", "neighbors.KNeighborsClassifier.set_params()": "modules/generated/sklearn.neighbors.kneighborsclassifier.html#sklearn.neighbors.KNeighborsClassifier.set_params", "neighbors.KNeighborsRegressor": "modules/generated/sklearn.neighbors.kneighborsregressor.html#sklearn.neighbors.KNeighborsRegressor", "neighbors.KNeighborsRegressor()": "modules/generated/sklearn.neighbors.kneighborsregressor.html", "neighbors.KNeighborsRegressor.fit()": "modules/generated/sklearn.neighbors.kneighborsregressor.html#sklearn.neighbors.KNeighborsRegressor.fit", "neighbors.KNeighborsRegressor.get_params()": "modules/generated/sklearn.neighbors.kneighborsregressor.html#sklearn.neighbors.KNeighborsRegressor.get_params", "neighbors.KNeighborsRegressor.kneighbors()": "modules/generated/sklearn.neighbors.kneighborsregressor.html#sklearn.neighbors.KNeighborsRegressor.kneighbors", "neighbors.KNeighborsRegressor.kneighbors_graph()": "modules/generated/sklearn.neighbors.kneighborsregressor.html#sklearn.neighbors.KNeighborsRegressor.kneighbors_graph", "neighbors.KNeighborsRegressor.predict()": "modules/generated/sklearn.neighbors.kneighborsregressor.html#sklearn.neighbors.KNeighborsRegressor.predict", "neighbors.KNeighborsRegressor.score()": "modules/generated/sklearn.neighbors.kneighborsregressor.html#sklearn.neighbors.KNeighborsRegressor.score", "neighbors.KNeighborsRegressor.set_params()": "modules/generated/sklearn.neighbors.kneighborsregressor.html#sklearn.neighbors.KNeighborsRegressor.set_params", "neighbors.KNeighborsTransformer": "modules/generated/sklearn.neighbors.kneighborstransformer.html#sklearn.neighbors.KNeighborsTransformer", "neighbors.KNeighborsTransformer()": "modules/generated/sklearn.neighbors.kneighborstransformer.html", "neighbors.KNeighborsTransformer.fit()": "modules/generated/sklearn.neighbors.kneighborstransformer.html#sklearn.neighbors.KNeighborsTransformer.fit", "neighbors.KNeighborsTransformer.fit_transform()": "modules/generated/sklearn.neighbors.kneighborstransformer.html#sklearn.neighbors.KNeighborsTransformer.fit_transform", "neighbors.KNeighborsTransformer.get_feature_names_out()": "modules/generated/sklearn.neighbors.kneighborstransformer.html#sklearn.neighbors.KNeighborsTransformer.get_feature_names_out", "neighbors.KNeighborsTransformer.get_params()": "modules/generated/sklearn.neighbors.kneighborstransformer.html#sklearn.neighbors.KNeighborsTransformer.get_params", "neighbors.KNeighborsTransformer.kneighbors()": "modules/generated/sklearn.neighbors.kneighborstransformer.html#sklearn.neighbors.KNeighborsTransformer.kneighbors", "neighbors.KNeighborsTransformer.kneighbors_graph()": "modules/generated/sklearn.neighbors.kneighborstransformer.html#sklearn.neighbors.KNeighborsTransformer.kneighbors_graph", "neighbors.KNeighborsTransformer.set_params()": "modules/generated/sklearn.neighbors.kneighborstransformer.html#sklearn.neighbors.KNeighborsTransformer.set_params", "neighbors.KNeighborsTransformer.transform()": "modules/generated/sklearn.neighbors.kneighborstransformer.html#sklearn.neighbors.KNeighborsTransformer.transform", "neighbors.LocalOutlierFactor": "modules/generated/sklearn.neighbors.localoutlierfactor.html#sklearn.neighbors.LocalOutlierFactor", "neighbors.LocalOutlierFactor()": "modules/generated/sklearn.neighbors.localoutlierfactor.html", "neighbors.LocalOutlierFactor.decision_function()": "modules/generated/sklearn.neighbors.localoutlierfactor.html#sklearn.neighbors.LocalOutlierFactor.decision_function", "neighbors.LocalOutlierFactor.fit()": "modules/generated/sklearn.neighbors.localoutlierfactor.html#sklearn.neighbors.LocalOutlierFactor.fit", "neighbors.LocalOutlierFactor.fit_predict()": "modules/generated/sklearn.neighbors.localoutlierfactor.html#sklearn.neighbors.LocalOutlierFactor.fit_predict", "neighbors.LocalOutlierFactor.get_params()": "modules/generated/sklearn.neighbors.localoutlierfactor.html#sklearn.neighbors.LocalOutlierFactor.get_params", "neighbors.LocalOutlierFactor.kneighbors()": "modules/generated/sklearn.neighbors.localoutlierfactor.html#sklearn.neighbors.LocalOutlierFactor.kneighbors", "neighbors.LocalOutlierFactor.kneighbors_graph()": "modules/generated/sklearn.neighbors.localoutlierfactor.html#sklearn.neighbors.LocalOutlierFactor.kneighbors_graph", "neighbors.LocalOutlierFactor.predict()": "modules/generated/sklearn.neighbors.localoutlierfactor.html#sklearn.neighbors.LocalOutlierFactor.predict", "neighbors.LocalOutlierFactor.score_samples()": "modules/generated/sklearn.neighbors.localoutlierfactor.html#sklearn.neighbors.LocalOutlierFactor.score_samples", "neighbors.LocalOutlierFactor.set_params()": "modules/generated/sklearn.neighbors.localoutlierfactor.html#sklearn.neighbors.LocalOutlierFactor.set_params", "neighbors.NearestCentroid": "modules/generated/sklearn.neighbors.nearestcentroid.html#sklearn.neighbors.NearestCentroid", "neighbors.NearestCentroid()": "modules/generated/sklearn.neighbors.nearestcentroid.html", "neighbors.NearestCentroid.fit()": "modules/generated/sklearn.neighbors.nearestcentroid.html#sklearn.neighbors.NearestCentroid.fit", "neighbors.NearestCentroid.get_params()": "modules/generated/sklearn.neighbors.nearestcentroid.html#sklearn.neighbors.NearestCentroid.get_params", "neighbors.NearestCentroid.predict()": "modules/generated/sklearn.neighbors.nearestcentroid.html#sklearn.neighbors.NearestCentroid.predict", "neighbors.NearestCentroid.score()": "modules/generated/sklearn.neighbors.nearestcentroid.html#sklearn.neighbors.NearestCentroid.score", "neighbors.NearestCentroid.set_params()": "modules/generated/sklearn.neighbors.nearestcentroid.html#sklearn.neighbors.NearestCentroid.set_params", "neighbors.NearestNeighbors": "modules/generated/sklearn.neighbors.nearestneighbors.html#sklearn.neighbors.NearestNeighbors", "neighbors.NearestNeighbors()": "modules/generated/sklearn.neighbors.nearestneighbors.html", "neighbors.NearestNeighbors.fit()": "modules/generated/sklearn.neighbors.nearestneighbors.html#sklearn.neighbors.NearestNeighbors.fit", "neighbors.NearestNeighbors.get_params()": "modules/generated/sklearn.neighbors.nearestneighbors.html#sklearn.neighbors.NearestNeighbors.get_params", "neighbors.NearestNeighbors.kneighbors()": "modules/generated/sklearn.neighbors.nearestneighbors.html#sklearn.neighbors.NearestNeighbors.kneighbors", "neighbors.NearestNeighbors.kneighbors_graph()": "modules/generated/sklearn.neighbors.nearestneighbors.html#sklearn.neighbors.NearestNeighbors.kneighbors_graph", "neighbors.NearestNeighbors.radius_neighbors()": "modules/generated/sklearn.neighbors.nearestneighbors.html#sklearn.neighbors.NearestNeighbors.radius_neighbors", "neighbors.NearestNeighbors.radius_neighbors_graph()": "modules/generated/sklearn.neighbors.nearestneighbors.html#sklearn.neighbors.NearestNeighbors.radius_neighbors_graph", "neighbors.NearestNeighbors.set_params()": "modules/generated/sklearn.neighbors.nearestneighbors.html#sklearn.neighbors.NearestNeighbors.set_params", "neighbors.NeighborhoodComponentsAnalysis": "modules/generated/sklearn.neighbors.neighborhoodcomponentsanalysis.html#sklearn.neighbors.NeighborhoodComponentsAnalysis", "neighbors.NeighborhoodComponentsAnalysis()": "modules/generated/sklearn.neighbors.neighborhoodcomponentsanalysis.html", "neighbors.NeighborhoodComponentsAnalysis.fit()": "modules/generated/sklearn.neighbors.neighborhoodcomponentsanalysis.html#sklearn.neighbors.NeighborhoodComponentsAnalysis.fit", "neighbors.NeighborhoodComponentsAnalysis.fit_transform()": "modules/generated/sklearn.neighbors.neighborhoodcomponentsanalysis.html#sklearn.neighbors.NeighborhoodComponentsAnalysis.fit_transform", "neighbors.NeighborhoodComponentsAnalysis.get_feature_names_out()": "modules/generated/sklearn.neighbors.neighborhoodcomponentsanalysis.html#sklearn.neighbors.NeighborhoodComponentsAnalysis.get_feature_names_out", "neighbors.NeighborhoodComponentsAnalysis.get_params()": "modules/generated/sklearn.neighbors.neighborhoodcomponentsanalysis.html#sklearn.neighbors.NeighborhoodComponentsAnalysis.get_params", "neighbors.NeighborhoodComponentsAnalysis.set_params()": "modules/generated/sklearn.neighbors.neighborhoodcomponentsanalysis.html#sklearn.neighbors.NeighborhoodComponentsAnalysis.set_params", "neighbors.NeighborhoodComponentsAnalysis.transform()": "modules/generated/sklearn.neighbors.neighborhoodcomponentsanalysis.html#sklearn.neighbors.NeighborhoodComponentsAnalysis.transform", "neighbors.radius_neighbors_graph()": "modules/generated/sklearn.neighbors.radius_neighbors_graph.html#sklearn.neighbors.radius_neighbors_graph", "neighbors.RadiusNeighborsClassifier": "modules/generated/sklearn.neighbors.radiusneighborsclassifier.html#sklearn.neighbors.RadiusNeighborsClassifier", "neighbors.RadiusNeighborsClassifier()": "modules/generated/sklearn.neighbors.radiusneighborsclassifier.html", "neighbors.RadiusNeighborsClassifier.fit()": "modules/generated/sklearn.neighbors.radiusneighborsclassifier.html#sklearn.neighbors.RadiusNeighborsClassifier.fit", "neighbors.RadiusNeighborsClassifier.get_params()": "modules/generated/sklearn.neighbors.radiusneighborsclassifier.html#sklearn.neighbors.RadiusNeighborsClassifier.get_params", "neighbors.RadiusNeighborsClassifier.predict()": "modules/generated/sklearn.neighbors.radiusneighborsclassifier.html#sklearn.neighbors.RadiusNeighborsClassifier.predict", "neighbors.RadiusNeighborsClassifier.predict_proba()": "modules/generated/sklearn.neighbors.radiusneighborsclassifier.html#sklearn.neighbors.RadiusNeighborsClassifier.predict_proba", "neighbors.RadiusNeighborsClassifier.radius_neighbors()": "modules/generated/sklearn.neighbors.radiusneighborsclassifier.html#sklearn.neighbors.RadiusNeighborsClassifier.radius_neighbors", "neighbors.RadiusNeighborsClassifier.radius_neighbors_graph()": "modules/generated/sklearn.neighbors.radiusneighborsclassifier.html#sklearn.neighbors.RadiusNeighborsClassifier.radius_neighbors_graph", "neighbors.RadiusNeighborsClassifier.score()": "modules/generated/sklearn.neighbors.radiusneighborsclassifier.html#sklearn.neighbors.RadiusNeighborsClassifier.score", "neighbors.RadiusNeighborsClassifier.set_params()": "modules/generated/sklearn.neighbors.radiusneighborsclassifier.html#sklearn.neighbors.RadiusNeighborsClassifier.set_params", "neighbors.RadiusNeighborsRegressor": "modules/generated/sklearn.neighbors.radiusneighborsregressor.html#sklearn.neighbors.RadiusNeighborsRegressor", "neighbors.RadiusNeighborsRegressor()": "modules/generated/sklearn.neighbors.radiusneighborsregressor.html", "neighbors.RadiusNeighborsRegressor.fit()": "modules/generated/sklearn.neighbors.radiusneighborsregressor.html#sklearn.neighbors.RadiusNeighborsRegressor.fit", "neighbors.RadiusNeighborsRegressor.get_params()": "modules/generated/sklearn.neighbors.radiusneighborsregressor.html#sklearn.neighbors.RadiusNeighborsRegressor.get_params", "neighbors.RadiusNeighborsRegressor.predict()": "modules/generated/sklearn.neighbors.radiusneighborsregressor.html#sklearn.neighbors.RadiusNeighborsRegressor.predict", "neighbors.RadiusNeighborsRegressor.radius_neighbors()": "modules/generated/sklearn.neighbors.radiusneighborsregressor.html#sklearn.neighbors.RadiusNeighborsRegressor.radius_neighbors", "neighbors.RadiusNeighborsRegressor.radius_neighbors_graph()": "modules/generated/sklearn.neighbors.radiusneighborsregressor.html#sklearn.neighbors.RadiusNeighborsRegressor.radius_neighbors_graph", "neighbors.RadiusNeighborsRegressor.score()": "modules/generated/sklearn.neighbors.radiusneighborsregressor.html#sklearn.neighbors.RadiusNeighborsRegressor.score", "neighbors.RadiusNeighborsRegressor.set_params()": "modules/generated/sklearn.neighbors.radiusneighborsregressor.html#sklearn.neighbors.RadiusNeighborsRegressor.set_params", "neighbors.RadiusNeighborsTransformer": "modules/generated/sklearn.neighbors.radiusneighborstransformer.html#sklearn.neighbors.RadiusNeighborsTransformer", "neighbors.RadiusNeighborsTransformer()": "modules/generated/sklearn.neighbors.radiusneighborstransformer.html", "neighbors.RadiusNeighborsTransformer.fit()": "modules/generated/sklearn.neighbors.radiusneighborstransformer.html#sklearn.neighbors.RadiusNeighborsTransformer.fit", "neighbors.RadiusNeighborsTransformer.fit_transform()": "modules/generated/sklearn.neighbors.radiusneighborstransformer.html#sklearn.neighbors.RadiusNeighborsTransformer.fit_transform", "neighbors.RadiusNeighborsTransformer.get_feature_names_out()": "modules/generated/sklearn.neighbors.radiusneighborstransformer.html#sklearn.neighbors.RadiusNeighborsTransformer.get_feature_names_out", "neighbors.RadiusNeighborsTransformer.get_params()": "modules/generated/sklearn.neighbors.radiusneighborstransformer.html#sklearn.neighbors.RadiusNeighborsTransformer.get_params", "neighbors.RadiusNeighborsTransformer.radius_neighbors()": "modules/generated/sklearn.neighbors.radiusneighborstransformer.html#sklearn.neighbors.RadiusNeighborsTransformer.radius_neighbors", "neighbors.RadiusNeighborsTransformer.radius_neighbors_graph()": "modules/generated/sklearn.neighbors.radiusneighborstransformer.html#sklearn.neighbors.RadiusNeighborsTransformer.radius_neighbors_graph", "neighbors.RadiusNeighborsTransformer.set_params()": "modules/generated/sklearn.neighbors.radiusneighborstransformer.html#sklearn.neighbors.RadiusNeighborsTransformer.set_params", "neighbors.RadiusNeighborsTransformer.transform()": "modules/generated/sklearn.neighbors.radiusneighborstransformer.html#sklearn.neighbors.RadiusNeighborsTransformer.transform", "neural_network.BernoulliRBM": "modules/generated/sklearn.neural_network.bernoullirbm.html#sklearn.neural_network.BernoulliRBM", "neural_network.BernoulliRBM()": "modules/generated/sklearn.neural_network.bernoullirbm.html", "neural_network.BernoulliRBM.fit()": "modules/generated/sklearn.neural_network.bernoullirbm.html#sklearn.neural_network.BernoulliRBM.fit", "neural_network.BernoulliRBM.fit_transform()": "modules/generated/sklearn.neural_network.bernoullirbm.html#sklearn.neural_network.BernoulliRBM.fit_transform", "neural_network.BernoulliRBM.get_feature_names_out()": "modules/generated/sklearn.neural_network.bernoullirbm.html#sklearn.neural_network.BernoulliRBM.get_feature_names_out", "neural_network.BernoulliRBM.get_params()": "modules/generated/sklearn.neural_network.bernoullirbm.html#sklearn.neural_network.BernoulliRBM.get_params", "neural_network.BernoulliRBM.gibbs()": "modules/generated/sklearn.neural_network.bernoullirbm.html#sklearn.neural_network.BernoulliRBM.gibbs", "neural_network.BernoulliRBM.partial_fit()": "modules/generated/sklearn.neural_network.bernoullirbm.html#sklearn.neural_network.BernoulliRBM.partial_fit", "neural_network.BernoulliRBM.score_samples()": "modules/generated/sklearn.neural_network.bernoullirbm.html#sklearn.neural_network.BernoulliRBM.score_samples", "neural_network.BernoulliRBM.set_params()": "modules/generated/sklearn.neural_network.bernoullirbm.html#sklearn.neural_network.BernoulliRBM.set_params", "neural_network.BernoulliRBM.transform()": "modules/generated/sklearn.neural_network.bernoullirbm.html#sklearn.neural_network.BernoulliRBM.transform", "neural_network.MLPClassifier": "modules/generated/sklearn.neural_network.mlpclassifier.html#sklearn.neural_network.MLPClassifier", "neural_network.MLPClassifier()": "modules/generated/sklearn.neural_network.mlpclassifier.html", "neural_network.MLPClassifier.fit()": "modules/generated/sklearn.neural_network.mlpclassifier.html#sklearn.neural_network.MLPClassifier.fit", "neural_network.MLPClassifier.get_params()": "modules/generated/sklearn.neural_network.mlpclassifier.html#sklearn.neural_network.MLPClassifier.get_params", "neural_network.MLPClassifier.partial_fit()": "modules/generated/sklearn.neural_network.mlpclassifier.html#sklearn.neural_network.MLPClassifier.partial_fit", "neural_network.MLPClassifier.predict()": "modules/generated/sklearn.neural_network.mlpclassifier.html#sklearn.neural_network.MLPClassifier.predict", "neural_network.MLPClassifier.predict_log_proba()": "modules/generated/sklearn.neural_network.mlpclassifier.html#sklearn.neural_network.MLPClassifier.predict_log_proba", "neural_network.MLPClassifier.predict_proba()": "modules/generated/sklearn.neural_network.mlpclassifier.html#sklearn.neural_network.MLPClassifier.predict_proba", "neural_network.MLPClassifier.score()": "modules/generated/sklearn.neural_network.mlpclassifier.html#sklearn.neural_network.MLPClassifier.score", "neural_network.MLPClassifier.set_params()": "modules/generated/sklearn.neural_network.mlpclassifier.html#sklearn.neural_network.MLPClassifier.set_params", "neural_network.MLPRegressor": "modules/generated/sklearn.neural_network.mlpregressor.html#sklearn.neural_network.MLPRegressor", "neural_network.MLPRegressor()": "modules/generated/sklearn.neural_network.mlpregressor.html", "neural_network.MLPRegressor.fit()": "modules/generated/sklearn.neural_network.mlpregressor.html#sklearn.neural_network.MLPRegressor.fit", "neural_network.MLPRegressor.get_params()": "modules/generated/sklearn.neural_network.mlpregressor.html#sklearn.neural_network.MLPRegressor.get_params", "neural_network.MLPRegressor.partial_fit()": "modules/generated/sklearn.neural_network.mlpregressor.html#sklearn.neural_network.MLPRegressor.partial_fit", "neural_network.MLPRegressor.predict()": "modules/generated/sklearn.neural_network.mlpregressor.html#sklearn.neural_network.MLPRegressor.predict", "neural_network.MLPRegressor.score()": "modules/generated/sklearn.neural_network.mlpregressor.html#sklearn.neural_network.MLPRegressor.score", "neural_network.MLPRegressor.set_params()": "modules/generated/sklearn.neural_network.mlpregressor.html#sklearn.neural_network.MLPRegressor.set_params", "pipeline.FeatureUnion": "modules/generated/sklearn.pipeline.featureunion.html#sklearn.pipeline.FeatureUnion", "pipeline.FeatureUnion()": "modules/generated/sklearn.pipeline.featureunion.html", "pipeline.FeatureUnion.fit()": "modules/generated/sklearn.pipeline.featureunion.html#sklearn.pipeline.FeatureUnion.fit", "pipeline.FeatureUnion.fit_transform()": "modules/generated/sklearn.pipeline.featureunion.html#sklearn.pipeline.FeatureUnion.fit_transform", "pipeline.FeatureUnion.get_feature_names()": "modules/generated/sklearn.pipeline.featureunion.html#sklearn.pipeline.FeatureUnion.get_feature_names", "pipeline.FeatureUnion.get_feature_names_out()": "modules/generated/sklearn.pipeline.featureunion.html#sklearn.pipeline.FeatureUnion.get_feature_names_out", "pipeline.FeatureUnion.get_params()": "modules/generated/sklearn.pipeline.featureunion.html#sklearn.pipeline.FeatureUnion.get_params", "pipeline.FeatureUnion.set_params()": "modules/generated/sklearn.pipeline.featureunion.html#sklearn.pipeline.FeatureUnion.set_params", "pipeline.FeatureUnion.transform()": "modules/generated/sklearn.pipeline.featureunion.html#sklearn.pipeline.FeatureUnion.transform", "pipeline.make_pipeline()": "modules/generated/sklearn.pipeline.make_pipeline.html#sklearn.pipeline.make_pipeline", "pipeline.make_union()": "modules/generated/sklearn.pipeline.make_union.html#sklearn.pipeline.make_union", "pipeline.Pipeline": "modules/generated/sklearn.pipeline.pipeline.html#sklearn.pipeline.Pipeline", "pipeline.Pipeline()": "modules/generated/sklearn.pipeline.pipeline.html", "pipeline.Pipeline.decision_function()": "modules/generated/sklearn.pipeline.pipeline.html#sklearn.pipeline.Pipeline.decision_function", "pipeline.Pipeline.fit()": "modules/generated/sklearn.pipeline.pipeline.html#sklearn.pipeline.Pipeline.fit", "pipeline.Pipeline.fit_predict()": "modules/generated/sklearn.pipeline.pipeline.html#sklearn.pipeline.Pipeline.fit_predict", "pipeline.Pipeline.fit_transform()": "modules/generated/sklearn.pipeline.pipeline.html#sklearn.pipeline.Pipeline.fit_transform", "pipeline.Pipeline.get_feature_names_out()": "modules/generated/sklearn.pipeline.pipeline.html#sklearn.pipeline.Pipeline.get_feature_names_out", "pipeline.Pipeline.get_params()": "modules/generated/sklearn.pipeline.pipeline.html#sklearn.pipeline.Pipeline.get_params", "pipeline.Pipeline.inverse_transform()": "modules/generated/sklearn.pipeline.pipeline.html#sklearn.pipeline.Pipeline.inverse_transform", "pipeline.Pipeline.predict()": "modules/generated/sklearn.pipeline.pipeline.html#sklearn.pipeline.Pipeline.predict", "pipeline.Pipeline.predict_log_proba()": "modules/generated/sklearn.pipeline.pipeline.html#sklearn.pipeline.Pipeline.predict_log_proba", "pipeline.Pipeline.predict_proba()": "modules/generated/sklearn.pipeline.pipeline.html#sklearn.pipeline.Pipeline.predict_proba", "pipeline.Pipeline.score()": "modules/generated/sklearn.pipeline.pipeline.html#sklearn.pipeline.Pipeline.score", "pipeline.Pipeline.score_samples()": "modules/generated/sklearn.pipeline.pipeline.html#sklearn.pipeline.Pipeline.score_samples", "pipeline.Pipeline.set_params()": "modules/generated/sklearn.pipeline.pipeline.html#sklearn.pipeline.Pipeline.set_params", "pipeline.Pipeline.transform()": "modules/generated/sklearn.pipeline.pipeline.html#sklearn.pipeline.Pipeline.transform", "preprocessing.add_dummy_feature()": "modules/generated/sklearn.preprocessing.add_dummy_feature.html#sklearn.preprocessing.add_dummy_feature", "preprocessing.binarize()": "modules/generated/sklearn.preprocessing.binarize.html#sklearn.preprocessing.binarize", "preprocessing.Binarizer": "modules/generated/sklearn.preprocessing.binarizer.html#sklearn.preprocessing.Binarizer", "preprocessing.Binarizer()": "modules/generated/sklearn.preprocessing.binarizer.html", "preprocessing.Binarizer.fit()": "modules/generated/sklearn.preprocessing.binarizer.html#sklearn.preprocessing.Binarizer.fit", "preprocessing.Binarizer.fit_transform()": "modules/generated/sklearn.preprocessing.binarizer.html#sklearn.preprocessing.Binarizer.fit_transform", "preprocessing.Binarizer.get_feature_names_out()": "modules/generated/sklearn.preprocessing.binarizer.html#sklearn.preprocessing.Binarizer.get_feature_names_out", "preprocessing.Binarizer.get_params()": "modules/generated/sklearn.preprocessing.binarizer.html#sklearn.preprocessing.Binarizer.get_params", "preprocessing.Binarizer.set_params()": "modules/generated/sklearn.preprocessing.binarizer.html#sklearn.preprocessing.Binarizer.set_params", "preprocessing.Binarizer.transform()": "modules/generated/sklearn.preprocessing.binarizer.html#sklearn.preprocessing.Binarizer.transform", "preprocessing.FunctionTransformer": "modules/generated/sklearn.preprocessing.functiontransformer.html#sklearn.preprocessing.FunctionTransformer", "preprocessing.FunctionTransformer()": "modules/generated/sklearn.preprocessing.functiontransformer.html", "preprocessing.FunctionTransformer.fit()": "modules/generated/sklearn.preprocessing.functiontransformer.html#sklearn.preprocessing.FunctionTransformer.fit", "preprocessing.FunctionTransformer.fit_transform()": "modules/generated/sklearn.preprocessing.functiontransformer.html#sklearn.preprocessing.FunctionTransformer.fit_transform", "preprocessing.FunctionTransformer.get_feature_names_out()": "modules/generated/sklearn.preprocessing.functiontransformer.html#sklearn.preprocessing.FunctionTransformer.get_feature_names_out", "preprocessing.FunctionTransformer.get_params()": "modules/generated/sklearn.preprocessing.functiontransformer.html#sklearn.preprocessing.FunctionTransformer.get_params", "preprocessing.FunctionTransformer.inverse_transform()": "modules/generated/sklearn.preprocessing.functiontransformer.html#sklearn.preprocessing.FunctionTransformer.inverse_transform", "preprocessing.FunctionTransformer.set_params()": "modules/generated/sklearn.preprocessing.functiontransformer.html#sklearn.preprocessing.FunctionTransformer.set_params", "preprocessing.FunctionTransformer.transform()": "modules/generated/sklearn.preprocessing.functiontransformer.html#sklearn.preprocessing.FunctionTransformer.transform", "preprocessing.KBinsDiscretizer": "modules/generated/sklearn.preprocessing.kbinsdiscretizer.html#sklearn.preprocessing.KBinsDiscretizer", "preprocessing.KBinsDiscretizer()": "modules/generated/sklearn.preprocessing.kbinsdiscretizer.html", "preprocessing.KBinsDiscretizer.fit()": "modules/generated/sklearn.preprocessing.kbinsdiscretizer.html#sklearn.preprocessing.KBinsDiscretizer.fit", "preprocessing.KBinsDiscretizer.fit_transform()": "modules/generated/sklearn.preprocessing.kbinsdiscretizer.html#sklearn.preprocessing.KBinsDiscretizer.fit_transform", "preprocessing.KBinsDiscretizer.get_feature_names_out()": "modules/generated/sklearn.preprocessing.kbinsdiscretizer.html#sklearn.preprocessing.KBinsDiscretizer.get_feature_names_out", "preprocessing.KBinsDiscretizer.get_params()": "modules/generated/sklearn.preprocessing.kbinsdiscretizer.html#sklearn.preprocessing.KBinsDiscretizer.get_params", "preprocessing.KBinsDiscretizer.inverse_transform()": "modules/generated/sklearn.preprocessing.kbinsdiscretizer.html#sklearn.preprocessing.KBinsDiscretizer.inverse_transform", "preprocessing.KBinsDiscretizer.set_params()": "modules/generated/sklearn.preprocessing.kbinsdiscretizer.html#sklearn.preprocessing.KBinsDiscretizer.set_params", "preprocessing.KBinsDiscretizer.transform()": "modules/generated/sklearn.preprocessing.kbinsdiscretizer.html#sklearn.preprocessing.KBinsDiscretizer.transform", "preprocessing.KernelCenterer": "modules/generated/sklearn.preprocessing.kernelcenterer.html#sklearn.preprocessing.KernelCenterer", "preprocessing.KernelCenterer.fit()": "modules/generated/sklearn.preprocessing.kernelcenterer.html#sklearn.preprocessing.KernelCenterer.fit", "preprocessing.KernelCenterer.fit_transform()": "modules/generated/sklearn.preprocessing.kernelcenterer.html#sklearn.preprocessing.KernelCenterer.fit_transform", "preprocessing.KernelCenterer.get_feature_names_out()": "modules/generated/sklearn.preprocessing.kernelcenterer.html#sklearn.preprocessing.KernelCenterer.get_feature_names_out", "preprocessing.KernelCenterer.get_params()": "modules/generated/sklearn.preprocessing.kernelcenterer.html#sklearn.preprocessing.KernelCenterer.get_params", "preprocessing.KernelCenterer.set_params()": "modules/generated/sklearn.preprocessing.kernelcenterer.html#sklearn.preprocessing.KernelCenterer.set_params", "preprocessing.KernelCenterer.transform()": "modules/generated/sklearn.preprocessing.kernelcenterer.html#sklearn.preprocessing.KernelCenterer.transform", "preprocessing.label_binarize()": "modules/generated/sklearn.preprocessing.label_binarize.html#sklearn.preprocessing.label_binarize", "preprocessing.LabelBinarizer": "modules/generated/sklearn.preprocessing.labelbinarizer.html#sklearn.preprocessing.LabelBinarizer", "preprocessing.LabelBinarizer()": "modules/generated/sklearn.preprocessing.labelbinarizer.html", "preprocessing.LabelBinarizer.fit()": "modules/generated/sklearn.preprocessing.labelbinarizer.html#sklearn.preprocessing.LabelBinarizer.fit", "preprocessing.LabelBinarizer.fit_transform()": "modules/generated/sklearn.preprocessing.labelbinarizer.html#sklearn.preprocessing.LabelBinarizer.fit_transform", "preprocessing.LabelBinarizer.get_params()": "modules/generated/sklearn.preprocessing.labelbinarizer.html#sklearn.preprocessing.LabelBinarizer.get_params", "preprocessing.LabelBinarizer.inverse_transform()": "modules/generated/sklearn.preprocessing.labelbinarizer.html#sklearn.preprocessing.LabelBinarizer.inverse_transform", "preprocessing.LabelBinarizer.set_params()": "modules/generated/sklearn.preprocessing.labelbinarizer.html#sklearn.preprocessing.LabelBinarizer.set_params", "preprocessing.LabelBinarizer.transform()": "modules/generated/sklearn.preprocessing.labelbinarizer.html#sklearn.preprocessing.LabelBinarizer.transform", "preprocessing.LabelEncoder": "modules/generated/sklearn.preprocessing.labelencoder.html#sklearn.preprocessing.LabelEncoder", "preprocessing.LabelEncoder.fit()": "modules/generated/sklearn.preprocessing.labelencoder.html#sklearn.preprocessing.LabelEncoder.fit", "preprocessing.LabelEncoder.fit_transform()": "modules/generated/sklearn.preprocessing.labelencoder.html#sklearn.preprocessing.LabelEncoder.fit_transform", "preprocessing.LabelEncoder.get_params()": "modules/generated/sklearn.preprocessing.labelencoder.html#sklearn.preprocessing.LabelEncoder.get_params", "preprocessing.LabelEncoder.inverse_transform()": "modules/generated/sklearn.preprocessing.labelencoder.html#sklearn.preprocessing.LabelEncoder.inverse_transform", "preprocessing.LabelEncoder.set_params()": "modules/generated/sklearn.preprocessing.labelencoder.html#sklearn.preprocessing.LabelEncoder.set_params", "preprocessing.LabelEncoder.transform()": "modules/generated/sklearn.preprocessing.labelencoder.html#sklearn.preprocessing.LabelEncoder.transform", "preprocessing.maxabs_scale()": "modules/generated/sklearn.preprocessing.maxabs_scale.html#sklearn.preprocessing.maxabs_scale", "preprocessing.MaxAbsScaler": "modules/generated/sklearn.preprocessing.maxabsscaler.html#sklearn.preprocessing.MaxAbsScaler", "preprocessing.MaxAbsScaler()": "modules/generated/sklearn.preprocessing.maxabsscaler.html", "preprocessing.MaxAbsScaler.fit()": "modules/generated/sklearn.preprocessing.maxabsscaler.html#sklearn.preprocessing.MaxAbsScaler.fit", "preprocessing.MaxAbsScaler.fit_transform()": "modules/generated/sklearn.preprocessing.maxabsscaler.html#sklearn.preprocessing.MaxAbsScaler.fit_transform", "preprocessing.MaxAbsScaler.get_feature_names_out()": "modules/generated/sklearn.preprocessing.maxabsscaler.html#sklearn.preprocessing.MaxAbsScaler.get_feature_names_out", "preprocessing.MaxAbsScaler.get_params()": "modules/generated/sklearn.preprocessing.maxabsscaler.html#sklearn.preprocessing.MaxAbsScaler.get_params", "preprocessing.MaxAbsScaler.inverse_transform()": "modules/generated/sklearn.preprocessing.maxabsscaler.html#sklearn.preprocessing.MaxAbsScaler.inverse_transform", "preprocessing.MaxAbsScaler.partial_fit()": "modules/generated/sklearn.preprocessing.maxabsscaler.html#sklearn.preprocessing.MaxAbsScaler.partial_fit", "preprocessing.MaxAbsScaler.set_params()": "modules/generated/sklearn.preprocessing.maxabsscaler.html#sklearn.preprocessing.MaxAbsScaler.set_params", "preprocessing.MaxAbsScaler.transform()": "modules/generated/sklearn.preprocessing.maxabsscaler.html#sklearn.preprocessing.MaxAbsScaler.transform", "preprocessing.minmax_scale()": "modules/generated/sklearn.preprocessing.minmax_scale.html#sklearn.preprocessing.minmax_scale", "preprocessing.MinMaxScaler": "modules/generated/sklearn.preprocessing.minmaxscaler.html#sklearn.preprocessing.MinMaxScaler", "preprocessing.MinMaxScaler()": "modules/generated/sklearn.preprocessing.minmaxscaler.html", "preprocessing.MinMaxScaler.fit()": "modules/generated/sklearn.preprocessing.minmaxscaler.html#sklearn.preprocessing.MinMaxScaler.fit", "preprocessing.MinMaxScaler.fit_transform()": "modules/generated/sklearn.preprocessing.minmaxscaler.html#sklearn.preprocessing.MinMaxScaler.fit_transform", "preprocessing.MinMaxScaler.get_feature_names_out()": "modules/generated/sklearn.preprocessing.minmaxscaler.html#sklearn.preprocessing.MinMaxScaler.get_feature_names_out", "preprocessing.MinMaxScaler.get_params()": "modules/generated/sklearn.preprocessing.minmaxscaler.html#sklearn.preprocessing.MinMaxScaler.get_params", "preprocessing.MinMaxScaler.inverse_transform()": "modules/generated/sklearn.preprocessing.minmaxscaler.html#sklearn.preprocessing.MinMaxScaler.inverse_transform", "preprocessing.MinMaxScaler.partial_fit()": "modules/generated/sklearn.preprocessing.minmaxscaler.html#sklearn.preprocessing.MinMaxScaler.partial_fit", "preprocessing.MinMaxScaler.set_params()": "modules/generated/sklearn.preprocessing.minmaxscaler.html#sklearn.preprocessing.MinMaxScaler.set_params", "preprocessing.MinMaxScaler.transform()": "modules/generated/sklearn.preprocessing.minmaxscaler.html#sklearn.preprocessing.MinMaxScaler.transform", "preprocessing.MultiLabelBinarizer": "modules/generated/sklearn.preprocessing.multilabelbinarizer.html#sklearn.preprocessing.MultiLabelBinarizer", "preprocessing.MultiLabelBinarizer()": "modules/generated/sklearn.preprocessing.multilabelbinarizer.html", "preprocessing.MultiLabelBinarizer.fit()": "modules/generated/sklearn.preprocessing.multilabelbinarizer.html#sklearn.preprocessing.MultiLabelBinarizer.fit", "preprocessing.MultiLabelBinarizer.fit_transform()": "modules/generated/sklearn.preprocessing.multilabelbinarizer.html#sklearn.preprocessing.MultiLabelBinarizer.fit_transform", "preprocessing.MultiLabelBinarizer.get_params()": "modules/generated/sklearn.preprocessing.multilabelbinarizer.html#sklearn.preprocessing.MultiLabelBinarizer.get_params", "preprocessing.MultiLabelBinarizer.inverse_transform()": "modules/generated/sklearn.preprocessing.multilabelbinarizer.html#sklearn.preprocessing.MultiLabelBinarizer.inverse_transform", "preprocessing.MultiLabelBinarizer.set_params()": "modules/generated/sklearn.preprocessing.multilabelbinarizer.html#sklearn.preprocessing.MultiLabelBinarizer.set_params", "preprocessing.MultiLabelBinarizer.transform()": "modules/generated/sklearn.preprocessing.multilabelbinarizer.html#sklearn.preprocessing.MultiLabelBinarizer.transform", "preprocessing.normalize()": "modules/generated/sklearn.preprocessing.normalize.html#sklearn.preprocessing.normalize", "preprocessing.Normalizer": "modules/generated/sklearn.preprocessing.normalizer.html#sklearn.preprocessing.Normalizer", "preprocessing.Normalizer()": "modules/generated/sklearn.preprocessing.normalizer.html", "preprocessing.Normalizer.fit()": "modules/generated/sklearn.preprocessing.normalizer.html#sklearn.preprocessing.Normalizer.fit", "preprocessing.Normalizer.fit_transform()": "modules/generated/sklearn.preprocessing.normalizer.html#sklearn.preprocessing.Normalizer.fit_transform", "preprocessing.Normalizer.get_feature_names_out()": "modules/generated/sklearn.preprocessing.normalizer.html#sklearn.preprocessing.Normalizer.get_feature_names_out", "preprocessing.Normalizer.get_params()": "modules/generated/sklearn.preprocessing.normalizer.html#sklearn.preprocessing.Normalizer.get_params", "preprocessing.Normalizer.set_params()": "modules/generated/sklearn.preprocessing.normalizer.html#sklearn.preprocessing.Normalizer.set_params", "preprocessing.Normalizer.transform()": "modules/generated/sklearn.preprocessing.normalizer.html#sklearn.preprocessing.Normalizer.transform", "preprocessing.OneHotEncoder": "modules/generated/sklearn.preprocessing.onehotencoder.html#sklearn.preprocessing.OneHotEncoder", "preprocessing.OneHotEncoder()": "modules/generated/sklearn.preprocessing.onehotencoder.html", "preprocessing.OneHotEncoder.fit()": "modules/generated/sklearn.preprocessing.onehotencoder.html#sklearn.preprocessing.OneHotEncoder.fit", "preprocessing.OneHotEncoder.fit_transform()": "modules/generated/sklearn.preprocessing.onehotencoder.html#sklearn.preprocessing.OneHotEncoder.fit_transform", "preprocessing.OneHotEncoder.get_feature_names()": "modules/generated/sklearn.preprocessing.onehotencoder.html#sklearn.preprocessing.OneHotEncoder.get_feature_names", "preprocessing.OneHotEncoder.get_feature_names_out()": "modules/generated/sklearn.preprocessing.onehotencoder.html#sklearn.preprocessing.OneHotEncoder.get_feature_names_out", "preprocessing.OneHotEncoder.get_params()": "modules/generated/sklearn.preprocessing.onehotencoder.html#sklearn.preprocessing.OneHotEncoder.get_params", "preprocessing.OneHotEncoder.inverse_transform()": "modules/generated/sklearn.preprocessing.onehotencoder.html#sklearn.preprocessing.OneHotEncoder.inverse_transform", "preprocessing.OneHotEncoder.set_params()": "modules/generated/sklearn.preprocessing.onehotencoder.html#sklearn.preprocessing.OneHotEncoder.set_params", "preprocessing.OneHotEncoder.transform()": "modules/generated/sklearn.preprocessing.onehotencoder.html#sklearn.preprocessing.OneHotEncoder.transform", "preprocessing.OrdinalEncoder": "modules/generated/sklearn.preprocessing.ordinalencoder.html#sklearn.preprocessing.OrdinalEncoder", "preprocessing.OrdinalEncoder()": "modules/generated/sklearn.preprocessing.ordinalencoder.html", "preprocessing.OrdinalEncoder.fit()": "modules/generated/sklearn.preprocessing.ordinalencoder.html#sklearn.preprocessing.OrdinalEncoder.fit", "preprocessing.OrdinalEncoder.fit_transform()": "modules/generated/sklearn.preprocessing.ordinalencoder.html#sklearn.preprocessing.OrdinalEncoder.fit_transform", "preprocessing.OrdinalEncoder.get_feature_names_out()": "modules/generated/sklearn.preprocessing.ordinalencoder.html#sklearn.preprocessing.OrdinalEncoder.get_feature_names_out", "preprocessing.OrdinalEncoder.get_params()": "modules/generated/sklearn.preprocessing.ordinalencoder.html#sklearn.preprocessing.OrdinalEncoder.get_params", "preprocessing.OrdinalEncoder.inverse_transform()": "modules/generated/sklearn.preprocessing.ordinalencoder.html#sklearn.preprocessing.OrdinalEncoder.inverse_transform", "preprocessing.OrdinalEncoder.set_params()": "modules/generated/sklearn.preprocessing.ordinalencoder.html#sklearn.preprocessing.OrdinalEncoder.set_params", "preprocessing.OrdinalEncoder.transform()": "modules/generated/sklearn.preprocessing.ordinalencoder.html#sklearn.preprocessing.OrdinalEncoder.transform", "preprocessing.PolynomialFeatures": "modules/generated/sklearn.preprocessing.polynomialfeatures.html#sklearn.preprocessing.PolynomialFeatures", "preprocessing.PolynomialFeatures()": "modules/generated/sklearn.preprocessing.polynomialfeatures.html", "preprocessing.PolynomialFeatures.fit()": "modules/generated/sklearn.preprocessing.polynomialfeatures.html#sklearn.preprocessing.PolynomialFeatures.fit", "preprocessing.PolynomialFeatures.fit_transform()": "modules/generated/sklearn.preprocessing.polynomialfeatures.html#sklearn.preprocessing.PolynomialFeatures.fit_transform", "preprocessing.PolynomialFeatures.get_feature_names()": "modules/generated/sklearn.preprocessing.polynomialfeatures.html#sklearn.preprocessing.PolynomialFeatures.get_feature_names", "preprocessing.PolynomialFeatures.get_feature_names_out()": "modules/generated/sklearn.preprocessing.polynomialfeatures.html#sklearn.preprocessing.PolynomialFeatures.get_feature_names_out", "preprocessing.PolynomialFeatures.get_params()": "modules/generated/sklearn.preprocessing.polynomialfeatures.html#sklearn.preprocessing.PolynomialFeatures.get_params", "preprocessing.PolynomialFeatures.set_params()": "modules/generated/sklearn.preprocessing.polynomialfeatures.html#sklearn.preprocessing.PolynomialFeatures.set_params", "preprocessing.PolynomialFeatures.transform()": "modules/generated/sklearn.preprocessing.polynomialfeatures.html#sklearn.preprocessing.PolynomialFeatures.transform", "preprocessing.power_transform()": "modules/generated/sklearn.preprocessing.power_transform.html#sklearn.preprocessing.power_transform", "preprocessing.PowerTransformer": "modules/generated/sklearn.preprocessing.powertransformer.html#sklearn.preprocessing.PowerTransformer", "preprocessing.PowerTransformer()": "modules/generated/sklearn.preprocessing.powertransformer.html", "preprocessing.PowerTransformer.fit()": "modules/generated/sklearn.preprocessing.powertransformer.html#sklearn.preprocessing.PowerTransformer.fit", "preprocessing.PowerTransformer.fit_transform()": "modules/generated/sklearn.preprocessing.powertransformer.html#sklearn.preprocessing.PowerTransformer.fit_transform", "preprocessing.PowerTransformer.get_feature_names_out()": "modules/generated/sklearn.preprocessing.powertransformer.html#sklearn.preprocessing.PowerTransformer.get_feature_names_out", "preprocessing.PowerTransformer.get_params()": "modules/generated/sklearn.preprocessing.powertransformer.html#sklearn.preprocessing.PowerTransformer.get_params", "preprocessing.PowerTransformer.inverse_transform()": "modules/generated/sklearn.preprocessing.powertransformer.html#sklearn.preprocessing.PowerTransformer.inverse_transform", "preprocessing.PowerTransformer.set_params()": "modules/generated/sklearn.preprocessing.powertransformer.html#sklearn.preprocessing.PowerTransformer.set_params", "preprocessing.PowerTransformer.transform()": "modules/generated/sklearn.preprocessing.powertransformer.html#sklearn.preprocessing.PowerTransformer.transform", "preprocessing.quantile_transform()": "modules/generated/sklearn.preprocessing.quantile_transform.html#sklearn.preprocessing.quantile_transform", "preprocessing.QuantileTransformer": "modules/generated/sklearn.preprocessing.quantiletransformer.html#sklearn.preprocessing.QuantileTransformer", "preprocessing.QuantileTransformer()": "modules/generated/sklearn.preprocessing.quantiletransformer.html", "preprocessing.QuantileTransformer.fit()": "modules/generated/sklearn.preprocessing.quantiletransformer.html#sklearn.preprocessing.QuantileTransformer.fit", "preprocessing.QuantileTransformer.fit_transform()": "modules/generated/sklearn.preprocessing.quantiletransformer.html#sklearn.preprocessing.QuantileTransformer.fit_transform", "preprocessing.QuantileTransformer.get_feature_names_out()": "modules/generated/sklearn.preprocessing.quantiletransformer.html#sklearn.preprocessing.QuantileTransformer.get_feature_names_out", "preprocessing.QuantileTransformer.get_params()": "modules/generated/sklearn.preprocessing.quantiletransformer.html#sklearn.preprocessing.QuantileTransformer.get_params", "preprocessing.QuantileTransformer.inverse_transform()": "modules/generated/sklearn.preprocessing.quantiletransformer.html#sklearn.preprocessing.QuantileTransformer.inverse_transform", "preprocessing.QuantileTransformer.set_params()": "modules/generated/sklearn.preprocessing.quantiletransformer.html#sklearn.preprocessing.QuantileTransformer.set_params", "preprocessing.QuantileTransformer.transform()": "modules/generated/sklearn.preprocessing.quantiletransformer.html#sklearn.preprocessing.QuantileTransformer.transform", "preprocessing.robust_scale()": "modules/generated/sklearn.preprocessing.robust_scale.html#sklearn.preprocessing.robust_scale", "preprocessing.RobustScaler": "modules/generated/sklearn.preprocessing.robustscaler.html#sklearn.preprocessing.RobustScaler", "preprocessing.RobustScaler()": "modules/generated/sklearn.preprocessing.robustscaler.html", "preprocessing.RobustScaler.fit()": "modules/generated/sklearn.preprocessing.robustscaler.html#sklearn.preprocessing.RobustScaler.fit", "preprocessing.RobustScaler.fit_transform()": "modules/generated/sklearn.preprocessing.robustscaler.html#sklearn.preprocessing.RobustScaler.fit_transform", "preprocessing.RobustScaler.get_feature_names_out()": "modules/generated/sklearn.preprocessing.robustscaler.html#sklearn.preprocessing.RobustScaler.get_feature_names_out", "preprocessing.RobustScaler.get_params()": "modules/generated/sklearn.preprocessing.robustscaler.html#sklearn.preprocessing.RobustScaler.get_params", "preprocessing.RobustScaler.inverse_transform()": "modules/generated/sklearn.preprocessing.robustscaler.html#sklearn.preprocessing.RobustScaler.inverse_transform", "preprocessing.RobustScaler.set_params()": "modules/generated/sklearn.preprocessing.robustscaler.html#sklearn.preprocessing.RobustScaler.set_params", "preprocessing.RobustScaler.transform()": "modules/generated/sklearn.preprocessing.robustscaler.html#sklearn.preprocessing.RobustScaler.transform", "preprocessing.scale()": "modules/generated/sklearn.preprocessing.scale.html#sklearn.preprocessing.scale", "preprocessing.SplineTransformer": "modules/generated/sklearn.preprocessing.splinetransformer.html#sklearn.preprocessing.SplineTransformer", "preprocessing.SplineTransformer()": "modules/generated/sklearn.preprocessing.splinetransformer.html", "preprocessing.SplineTransformer.fit()": "modules/generated/sklearn.preprocessing.splinetransformer.html#sklearn.preprocessing.SplineTransformer.fit", "preprocessing.SplineTransformer.fit_transform()": "modules/generated/sklearn.preprocessing.splinetransformer.html#sklearn.preprocessing.SplineTransformer.fit_transform", "preprocessing.SplineTransformer.get_feature_names()": "modules/generated/sklearn.preprocessing.splinetransformer.html#sklearn.preprocessing.SplineTransformer.get_feature_names", "preprocessing.SplineTransformer.get_feature_names_out()": "modules/generated/sklearn.preprocessing.splinetransformer.html#sklearn.preprocessing.SplineTransformer.get_feature_names_out", "preprocessing.SplineTransformer.get_params()": "modules/generated/sklearn.preprocessing.splinetransformer.html#sklearn.preprocessing.SplineTransformer.get_params", "preprocessing.SplineTransformer.set_params()": "modules/generated/sklearn.preprocessing.splinetransformer.html#sklearn.preprocessing.SplineTransformer.set_params", "preprocessing.SplineTransformer.transform()": "modules/generated/sklearn.preprocessing.splinetransformer.html#sklearn.preprocessing.SplineTransformer.transform", "preprocessing.StandardScaler": "modules/generated/sklearn.preprocessing.standardscaler.html#sklearn.preprocessing.StandardScaler", "preprocessing.StandardScaler()": "modules/generated/sklearn.preprocessing.standardscaler.html", "preprocessing.StandardScaler.fit()": "modules/generated/sklearn.preprocessing.standardscaler.html#sklearn.preprocessing.StandardScaler.fit", "preprocessing.StandardScaler.fit_transform()": "modules/generated/sklearn.preprocessing.standardscaler.html#sklearn.preprocessing.StandardScaler.fit_transform", "preprocessing.StandardScaler.get_feature_names_out()": "modules/generated/sklearn.preprocessing.standardscaler.html#sklearn.preprocessing.StandardScaler.get_feature_names_out", "preprocessing.StandardScaler.get_params()": "modules/generated/sklearn.preprocessing.standardscaler.html#sklearn.preprocessing.StandardScaler.get_params", "preprocessing.StandardScaler.inverse_transform()": "modules/generated/sklearn.preprocessing.standardscaler.html#sklearn.preprocessing.StandardScaler.inverse_transform", "preprocessing.StandardScaler.partial_fit()": "modules/generated/sklearn.preprocessing.standardscaler.html#sklearn.preprocessing.StandardScaler.partial_fit", "preprocessing.StandardScaler.set_params()": "modules/generated/sklearn.preprocessing.standardscaler.html#sklearn.preprocessing.StandardScaler.set_params", "preprocessing.StandardScaler.transform()": "modules/generated/sklearn.preprocessing.standardscaler.html#sklearn.preprocessing.StandardScaler.transform", "random_projection.GaussianRandomProjection": "modules/generated/sklearn.random_projection.gaussianrandomprojection.html#sklearn.random_projection.GaussianRandomProjection", "random_projection.GaussianRandomProjection()": "modules/generated/sklearn.random_projection.gaussianrandomprojection.html", "random_projection.GaussianRandomProjection.fit()": "modules/generated/sklearn.random_projection.gaussianrandomprojection.html#sklearn.random_projection.GaussianRandomProjection.fit", "random_projection.GaussianRandomProjection.fit_transform()": "modules/generated/sklearn.random_projection.gaussianrandomprojection.html#sklearn.random_projection.GaussianRandomProjection.fit_transform", "random_projection.GaussianRandomProjection.get_feature_names_out()": "modules/generated/sklearn.random_projection.gaussianrandomprojection.html#sklearn.random_projection.GaussianRandomProjection.get_feature_names_out", "random_projection.GaussianRandomProjection.get_params()": "modules/generated/sklearn.random_projection.gaussianrandomprojection.html#sklearn.random_projection.GaussianRandomProjection.get_params", "random_projection.GaussianRandomProjection.inverse_transform()": "modules/generated/sklearn.random_projection.gaussianrandomprojection.html#sklearn.random_projection.GaussianRandomProjection.inverse_transform", "random_projection.GaussianRandomProjection.set_params()": "modules/generated/sklearn.random_projection.gaussianrandomprojection.html#sklearn.random_projection.GaussianRandomProjection.set_params", "random_projection.GaussianRandomProjection.transform()": "modules/generated/sklearn.random_projection.gaussianrandomprojection.html#sklearn.random_projection.GaussianRandomProjection.transform", "random_projection.johnson_lindenstrauss_min_dim()": "modules/generated/sklearn.random_projection.johnson_lindenstrauss_min_dim.html#sklearn.random_projection.johnson_lindenstrauss_min_dim", "random_projection.SparseRandomProjection": "modules/generated/sklearn.random_projection.sparserandomprojection.html#sklearn.random_projection.SparseRandomProjection", "random_projection.SparseRandomProjection()": "modules/generated/sklearn.random_projection.sparserandomprojection.html", "random_projection.SparseRandomProjection.fit()": "modules/generated/sklearn.random_projection.sparserandomprojection.html#sklearn.random_projection.SparseRandomProjection.fit", "random_projection.SparseRandomProjection.fit_transform()": "modules/generated/sklearn.random_projection.sparserandomprojection.html#sklearn.random_projection.SparseRandomProjection.fit_transform", "random_projection.SparseRandomProjection.get_feature_names_out()": "modules/generated/sklearn.random_projection.sparserandomprojection.html#sklearn.random_projection.SparseRandomProjection.get_feature_names_out", "random_projection.SparseRandomProjection.get_params()": "modules/generated/sklearn.random_projection.sparserandomprojection.html#sklearn.random_projection.SparseRandomProjection.get_params", "random_projection.SparseRandomProjection.inverse_transform()": "modules/generated/sklearn.random_projection.sparserandomprojection.html#sklearn.random_projection.SparseRandomProjection.inverse_transform", "random_projection.SparseRandomProjection.set_params()": "modules/generated/sklearn.random_projection.sparserandomprojection.html#sklearn.random_projection.SparseRandomProjection.set_params", "random_projection.SparseRandomProjection.transform()": "modules/generated/sklearn.random_projection.sparserandomprojection.html#sklearn.random_projection.SparseRandomProjection.transform", "semi_supervised.LabelPropagation": "modules/generated/sklearn.semi_supervised.labelpropagation.html#sklearn.semi_supervised.LabelPropagation", "semi_supervised.LabelPropagation()": "modules/generated/sklearn.semi_supervised.labelpropagation.html", "semi_supervised.LabelPropagation.fit()": "modules/generated/sklearn.semi_supervised.labelpropagation.html#sklearn.semi_supervised.LabelPropagation.fit", "semi_supervised.LabelPropagation.get_params()": "modules/generated/sklearn.semi_supervised.labelpropagation.html#sklearn.semi_supervised.LabelPropagation.get_params", "semi_supervised.LabelPropagation.predict()": "modules/generated/sklearn.semi_supervised.labelpropagation.html#sklearn.semi_supervised.LabelPropagation.predict", "semi_supervised.LabelPropagation.predict_proba()": "modules/generated/sklearn.semi_supervised.labelpropagation.html#sklearn.semi_supervised.LabelPropagation.predict_proba", "semi_supervised.LabelPropagation.score()": "modules/generated/sklearn.semi_supervised.labelpropagation.html#sklearn.semi_supervised.LabelPropagation.score", "semi_supervised.LabelPropagation.set_params()": "modules/generated/sklearn.semi_supervised.labelpropagation.html#sklearn.semi_supervised.LabelPropagation.set_params", "semi_supervised.LabelSpreading": "modules/generated/sklearn.semi_supervised.labelspreading.html#sklearn.semi_supervised.LabelSpreading", "semi_supervised.LabelSpreading()": "modules/generated/sklearn.semi_supervised.labelspreading.html", "semi_supervised.LabelSpreading.fit()": "modules/generated/sklearn.semi_supervised.labelspreading.html#sklearn.semi_supervised.LabelSpreading.fit", "semi_supervised.LabelSpreading.get_params()": "modules/generated/sklearn.semi_supervised.labelspreading.html#sklearn.semi_supervised.LabelSpreading.get_params", "semi_supervised.LabelSpreading.predict()": "modules/generated/sklearn.semi_supervised.labelspreading.html#sklearn.semi_supervised.LabelSpreading.predict", "semi_supervised.LabelSpreading.predict_proba()": "modules/generated/sklearn.semi_supervised.labelspreading.html#sklearn.semi_supervised.LabelSpreading.predict_proba", "semi_supervised.LabelSpreading.score()": "modules/generated/sklearn.semi_supervised.labelspreading.html#sklearn.semi_supervised.LabelSpreading.score", "semi_supervised.LabelSpreading.set_params()": "modules/generated/sklearn.semi_supervised.labelspreading.html#sklearn.semi_supervised.LabelSpreading.set_params", "semi_supervised.SelfTrainingClassifier": "modules/generated/sklearn.semi_supervised.selftrainingclassifier.html#sklearn.semi_supervised.SelfTrainingClassifier", "semi_supervised.SelfTrainingClassifier()": "modules/generated/sklearn.semi_supervised.selftrainingclassifier.html", "semi_supervised.SelfTrainingClassifier.decision_function()": "modules/generated/sklearn.semi_supervised.selftrainingclassifier.html#sklearn.semi_supervised.SelfTrainingClassifier.decision_function", "semi_supervised.SelfTrainingClassifier.fit()": "modules/generated/sklearn.semi_supervised.selftrainingclassifier.html#sklearn.semi_supervised.SelfTrainingClassifier.fit", "semi_supervised.SelfTrainingClassifier.get_params()": "modules/generated/sklearn.semi_supervised.selftrainingclassifier.html#sklearn.semi_supervised.SelfTrainingClassifier.get_params", "semi_supervised.SelfTrainingClassifier.predict()": "modules/generated/sklearn.semi_supervised.selftrainingclassifier.html#sklearn.semi_supervised.SelfTrainingClassifier.predict", "semi_supervised.SelfTrainingClassifier.predict_log_proba()": "modules/generated/sklearn.semi_supervised.selftrainingclassifier.html#sklearn.semi_supervised.SelfTrainingClassifier.predict_log_proba", "semi_supervised.SelfTrainingClassifier.predict_proba()": "modules/generated/sklearn.semi_supervised.selftrainingclassifier.html#sklearn.semi_supervised.SelfTrainingClassifier.predict_proba", "semi_supervised.SelfTrainingClassifier.score()": "modules/generated/sklearn.semi_supervised.selftrainingclassifier.html#sklearn.semi_supervised.SelfTrainingClassifier.score", "semi_supervised.SelfTrainingClassifier.set_params()": "modules/generated/sklearn.semi_supervised.selftrainingclassifier.html#sklearn.semi_supervised.SelfTrainingClassifier.set_params", "set_config()": "modules/generated/sklearn.set_config.html#sklearn.set_config", "show_versions()": "modules/generated/sklearn.show_versions.html#sklearn.show_versions", "sklearn.base.clone()": "modules/generated/sklearn.base.clone.html", "sklearn.base.is_classifier()": "modules/generated/sklearn.base.is_classifier.html", "sklearn.base.is_regressor()": "modules/generated/sklearn.base.is_regressor.html", "sklearn.calibration.calibration_curve()": "modules/generated/sklearn.calibration.calibration_curve.html", "sklearn.cluster.affinity_propagation()": "modules/generated/sklearn.cluster.affinity_propagation.html", "sklearn.cluster.cluster_optics_dbscan()": "modules/generated/sklearn.cluster.cluster_optics_dbscan.html", "sklearn.cluster.cluster_optics_xi()": "modules/generated/sklearn.cluster.cluster_optics_xi.html", "sklearn.cluster.compute_optics_graph()": "modules/generated/sklearn.cluster.compute_optics_graph.html", "sklearn.cluster.dbscan()": "modules/generated/dbscan-function.html", "sklearn.cluster.estimate_bandwidth()": "modules/generated/sklearn.cluster.estimate_bandwidth.html", "sklearn.cluster.k_means()": "modules/generated/sklearn.cluster.k_means.html", "sklearn.cluster.kmeans_plusplus()": "modules/generated/sklearn.cluster.kmeans_plusplus.html", "sklearn.cluster.mean_shift()": "modules/generated/sklearn.cluster.mean_shift.html", "sklearn.cluster.spectral_clustering()": "modules/generated/sklearn.cluster.spectral_clustering.html", "sklearn.cluster.ward_tree()": "modules/generated/sklearn.cluster.ward_tree.html", "sklearn.compose.make_column_selector()": "modules/generated/sklearn.compose.make_column_selector.html", "sklearn.compose.make_column_transformer()": "modules/generated/sklearn.compose.make_column_transformer.html", "sklearn.config_context()": "modules/generated/sklearn.config_context.html", "sklearn.covariance.empirical_covariance()": "modules/generated/sklearn.covariance.empirical_covariance.html", "sklearn.covariance.graphical_lasso()": "modules/generated/sklearn.covariance.graphical_lasso.html", "sklearn.covariance.ledoit_wolf()": "modules/generated/sklearn.covariance.ledoit_wolf.html", "sklearn.covariance.oas()": "modules/generated/oas-function.html", "sklearn.covariance.shrunk_covariance()": "modules/generated/sklearn.covariance.shrunk_covariance.html", "sklearn.datasets.clear_data_home()": "modules/generated/sklearn.datasets.clear_data_home.html", "sklearn.datasets.dump_svmlight_file()": "modules/generated/sklearn.datasets.dump_svmlight_file.html", "sklearn.datasets.fetch_20newsgroups()": "modules/generated/sklearn.datasets.fetch_20newsgroups.html", "sklearn.datasets.fetch_20newsgroups_vectorized()": "modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized.html", "sklearn.datasets.fetch_california_housing()": "modules/generated/sklearn.datasets.fetch_california_housing.html", "sklearn.datasets.fetch_covtype()": "modules/generated/sklearn.datasets.fetch_covtype.html", "sklearn.datasets.fetch_kddcup99()": "modules/generated/sklearn.datasets.fetch_kddcup99.html", "sklearn.datasets.fetch_lfw_pairs()": "modules/generated/sklearn.datasets.fetch_lfw_pairs.html", "sklearn.datasets.fetch_lfw_people()": "modules/generated/sklearn.datasets.fetch_lfw_people.html", "sklearn.datasets.fetch_olivetti_faces()": "modules/generated/sklearn.datasets.fetch_olivetti_faces.html", "sklearn.datasets.fetch_openml()": "modules/generated/sklearn.datasets.fetch_openml.html", "sklearn.datasets.fetch_rcv1()": "modules/generated/sklearn.datasets.fetch_rcv1.html", "sklearn.datasets.fetch_species_distributions()": "modules/generated/sklearn.datasets.fetch_species_distributions.html", "sklearn.datasets.get_data_home()": "modules/generated/sklearn.datasets.get_data_home.html", "sklearn.datasets.load_boston()": "modules/generated/sklearn.datasets.load_boston.html", "sklearn.datasets.load_breast_cancer()": "modules/generated/sklearn.datasets.load_breast_cancer.html", "sklearn.datasets.load_diabetes()": "modules/generated/sklearn.datasets.load_diabetes.html", "sklearn.datasets.load_digits()": "modules/generated/sklearn.datasets.load_digits.html", "sklearn.datasets.load_files()": "modules/generated/sklearn.datasets.load_files.html", "sklearn.datasets.load_iris()": "modules/generated/sklearn.datasets.load_iris.html", "sklearn.datasets.load_linnerud()": "modules/generated/sklearn.datasets.load_linnerud.html", "sklearn.datasets.load_sample_image()": "modules/generated/sklearn.datasets.load_sample_image.html", "sklearn.datasets.load_sample_images()": "modules/generated/sklearn.datasets.load_sample_images.html", "sklearn.datasets.load_svmlight_file()": "modules/generated/sklearn.datasets.load_svmlight_file.html", "sklearn.datasets.load_svmlight_files()": "modules/generated/sklearn.datasets.load_svmlight_files.html", "sklearn.datasets.load_wine()": "modules/generated/sklearn.datasets.load_wine.html", "sklearn.datasets.make_biclusters()": "modules/generated/sklearn.datasets.make_biclusters.html", "sklearn.datasets.make_blobs()": "modules/generated/sklearn.datasets.make_blobs.html", "sklearn.datasets.make_checkerboard()": "modules/generated/sklearn.datasets.make_checkerboard.html", "sklearn.datasets.make_circles()": "modules/generated/sklearn.datasets.make_circles.html", "sklearn.datasets.make_classification()": "modules/generated/sklearn.datasets.make_classification.html", "sklearn.datasets.make_friedman1()": "modules/generated/sklearn.datasets.make_friedman1.html", "sklearn.datasets.make_friedman2()": "modules/generated/sklearn.datasets.make_friedman2.html", "sklearn.datasets.make_friedman3()": "modules/generated/sklearn.datasets.make_friedman3.html", "sklearn.datasets.make_gaussian_quantiles()": "modules/generated/sklearn.datasets.make_gaussian_quantiles.html", "sklearn.datasets.make_hastie_10_2()": "modules/generated/sklearn.datasets.make_hastie_10_2.html", "sklearn.datasets.make_low_rank_matrix()": "modules/generated/sklearn.datasets.make_low_rank_matrix.html", "sklearn.datasets.make_moons()": "modules/generated/sklearn.datasets.make_moons.html", "sklearn.datasets.make_multilabel_classification()": "modules/generated/sklearn.datasets.make_multilabel_classification.html", "sklearn.datasets.make_regression()": "modules/generated/sklearn.datasets.make_regression.html", "sklearn.datasets.make_s_curve()": "modules/generated/sklearn.datasets.make_s_curve.html", "sklearn.datasets.make_sparse_coded_signal()": "modules/generated/sklearn.datasets.make_sparse_coded_signal.html", "sklearn.datasets.make_sparse_spd_matrix()": "modules/generated/sklearn.datasets.make_sparse_spd_matrix.html", "sklearn.datasets.make_sparse_uncorrelated()": "modules/generated/sklearn.datasets.make_sparse_uncorrelated.html", "sklearn.datasets.make_spd_matrix()": "modules/generated/sklearn.datasets.make_spd_matrix.html", "sklearn.datasets.make_swiss_roll()": "modules/generated/sklearn.datasets.make_swiss_roll.html", "sklearn.decomposition.dict_learning()": "modules/generated/sklearn.decomposition.dict_learning.html", "sklearn.decomposition.dict_learning_online()": "modules/generated/sklearn.decomposition.dict_learning_online.html", "sklearn.decomposition.fastica()": "modules/generated/fastica-function.html", "sklearn.decomposition.non_negative_factorization()": "modules/generated/sklearn.decomposition.non_negative_factorization.html", "sklearn.decomposition.sparse_encode()": "modules/generated/sklearn.decomposition.sparse_encode.html", "sklearn.feature_extraction.image.extract_patches_2d()": "modules/generated/sklearn.feature_extraction.image.extract_patches_2d.html", "sklearn.feature_extraction.image.grid_to_graph()": "modules/generated/sklearn.feature_extraction.image.grid_to_graph.html", "sklearn.feature_extraction.image.img_to_graph()": "modules/generated/sklearn.feature_extraction.image.img_to_graph.html", "sklearn.feature_extraction.image.reconstruct_from_patches_2d()": "modules/generated/sklearn.feature_extraction.image.reconstruct_from_patches_2d.html", "sklearn.feature_selection.chi2()": "modules/generated/sklearn.feature_selection.chi2.html", "sklearn.feature_selection.f_classif()": "modules/generated/sklearn.feature_selection.f_classif.html", "sklearn.feature_selection.f_regression()": "modules/generated/sklearn.feature_selection.f_regression.html", "sklearn.feature_selection.mutual_info_classif()": "modules/generated/sklearn.feature_selection.mutual_info_classif.html", "sklearn.feature_selection.mutual_info_regression()": "modules/generated/sklearn.feature_selection.mutual_info_regression.html", "sklearn.feature_selection.r_regression()": "modules/generated/sklearn.feature_selection.r_regression.html", "sklearn.get_config()": "modules/generated/sklearn.get_config.html", "sklearn.inspection.partial_dependence()": "modules/generated/sklearn.inspection.partial_dependence.html", "sklearn.inspection.permutation_importance()": "modules/generated/sklearn.inspection.permutation_importance.html", "sklearn.inspection.plot_partial_dependence()": "modules/generated/sklearn.inspection.plot_partial_dependence.html", "sklearn.isotonic.check_increasing()": "modules/generated/sklearn.isotonic.check_increasing.html", "sklearn.isotonic.isotonic_regression()": "modules/generated/sklearn.isotonic.isotonic_regression.html", "sklearn.linear_model.enet_path()": "modules/generated/sklearn.linear_model.enet_path.html", "sklearn.linear_model.lars_path()": "modules/generated/sklearn.linear_model.lars_path.html", "sklearn.linear_model.lars_path_gram()": "modules/generated/sklearn.linear_model.lars_path_gram.html", "sklearn.linear_model.lasso_path()": "modules/generated/sklearn.linear_model.lasso_path.html", "sklearn.linear_model.orthogonal_mp()": "modules/generated/sklearn.linear_model.orthogonal_mp.html", "sklearn.linear_model.orthogonal_mp_gram()": "modules/generated/sklearn.linear_model.orthogonal_mp_gram.html", "sklearn.linear_model.PassiveAggressiveRegressor()": "modules/generated/sklearn.linear_model.passiveaggressiveregressor.html", "sklearn.linear_model.ridge_regression()": "modules/generated/sklearn.linear_model.ridge_regression.html", "sklearn.manifold.locally_linear_embedding()": "modules/generated/sklearn.manifold.locally_linear_embedding.html", "sklearn.manifold.smacof()": "modules/generated/sklearn.manifold.smacof.html", "sklearn.manifold.spectral_embedding()": "modules/generated/sklearn.manifold.spectral_embedding.html", "sklearn.manifold.trustworthiness()": "modules/generated/sklearn.manifold.trustworthiness.html", "sklearn.metrics.accuracy_score()": "modules/generated/sklearn.metrics.accuracy_score.html", "sklearn.metrics.adjusted_mutual_info_score()": "modules/generated/sklearn.metrics.adjusted_mutual_info_score.html", "sklearn.metrics.adjusted_rand_score()": "modules/generated/sklearn.metrics.adjusted_rand_score.html", "sklearn.metrics.auc()": "modules/generated/sklearn.metrics.auc.html", "sklearn.metrics.average_precision_score()": "modules/generated/sklearn.metrics.average_precision_score.html", "sklearn.metrics.balanced_accuracy_score()": "modules/generated/sklearn.metrics.balanced_accuracy_score.html", "sklearn.metrics.brier_score_loss()": "modules/generated/sklearn.metrics.brier_score_loss.html", "sklearn.metrics.calinski_harabasz_score()": "modules/generated/sklearn.metrics.calinski_harabasz_score.html", "sklearn.metrics.check_scoring()": "modules/generated/sklearn.metrics.check_scoring.html", "sklearn.metrics.classification_report()": "modules/generated/sklearn.metrics.classification_report.html", "sklearn.metrics.cluster.contingency_matrix()": "modules/generated/sklearn.metrics.cluster.contingency_matrix.html", "sklearn.metrics.cluster.pair_confusion_matrix()": "modules/generated/sklearn.metrics.cluster.pair_confusion_matrix.html", "sklearn.metrics.cohen_kappa_score()": "modules/generated/sklearn.metrics.cohen_kappa_score.html", "sklearn.metrics.completeness_score()": "modules/generated/sklearn.metrics.completeness_score.html", "sklearn.metrics.confusion_matrix()": "modules/generated/sklearn.metrics.confusion_matrix.html", "sklearn.metrics.consensus_score()": "modules/generated/sklearn.metrics.consensus_score.html", "sklearn.metrics.coverage_error()": "modules/generated/sklearn.metrics.coverage_error.html", "sklearn.metrics.d2_absolute_error_score()": "modules/generated/sklearn.metrics.d2_absolute_error_score.html", "sklearn.metrics.d2_pinball_score()": "modules/generated/sklearn.metrics.d2_pinball_score.html", "sklearn.metrics.d2_tweedie_score()": "modules/generated/sklearn.metrics.d2_tweedie_score.html", "sklearn.metrics.davies_bouldin_score()": "modules/generated/sklearn.metrics.davies_bouldin_score.html", "sklearn.metrics.dcg_score()": "modules/generated/sklearn.metrics.dcg_score.html", "sklearn.metrics.det_curve()": "modules/generated/sklearn.metrics.det_curve.html", "sklearn.metrics.explained_variance_score()": "modules/generated/sklearn.metrics.explained_variance_score.html", "sklearn.metrics.f1_score()": "modules/generated/sklearn.metrics.f1_score.html", "sklearn.metrics.fbeta_score()": "modules/generated/sklearn.metrics.fbeta_score.html", "sklearn.metrics.fowlkes_mallows_score()": "modules/generated/sklearn.metrics.fowlkes_mallows_score.html", "sklearn.metrics.get_scorer()": "modules/generated/sklearn.metrics.get_scorer.html", "sklearn.metrics.get_scorer_names()": "modules/generated/sklearn.metrics.get_scorer_names.html", "sklearn.metrics.hamming_loss()": "modules/generated/sklearn.metrics.hamming_loss.html", "sklearn.metrics.hinge_loss()": "modules/generated/sklearn.metrics.hinge_loss.html", "sklearn.metrics.homogeneity_completeness_v_measure()": "modules/generated/sklearn.metrics.homogeneity_completeness_v_measure.html", "sklearn.metrics.homogeneity_score()": "modules/generated/sklearn.metrics.homogeneity_score.html", "sklearn.metrics.jaccard_score()": "modules/generated/sklearn.metrics.jaccard_score.html", "sklearn.metrics.label_ranking_average_precision_score()": "modules/generated/sklearn.metrics.label_ranking_average_precision_score.html", "sklearn.metrics.label_ranking_loss()": "modules/generated/sklearn.metrics.label_ranking_loss.html", "sklearn.metrics.log_loss()": "modules/generated/sklearn.metrics.log_loss.html", "sklearn.metrics.make_scorer()": "modules/generated/sklearn.metrics.make_scorer.html", "sklearn.metrics.matthews_corrcoef()": "modules/generated/sklearn.metrics.matthews_corrcoef.html", "sklearn.metrics.max_error()": "modules/generated/sklearn.metrics.max_error.html", "sklearn.metrics.mean_absolute_error()": "modules/generated/sklearn.metrics.mean_absolute_error.html", "sklearn.metrics.mean_absolute_percentage_error()": "modules/generated/sklearn.metrics.mean_absolute_percentage_error.html", "sklearn.metrics.mean_gamma_deviance()": "modules/generated/sklearn.metrics.mean_gamma_deviance.html", "sklearn.metrics.mean_pinball_loss()": "modules/generated/sklearn.metrics.mean_pinball_loss.html", "sklearn.metrics.mean_poisson_deviance()": "modules/generated/sklearn.metrics.mean_poisson_deviance.html", "sklearn.metrics.mean_squared_error()": "modules/generated/sklearn.metrics.mean_squared_error.html", "sklearn.metrics.mean_squared_log_error()": "modules/generated/sklearn.metrics.mean_squared_log_error.html", "sklearn.metrics.mean_tweedie_deviance()": "modules/generated/sklearn.metrics.mean_tweedie_deviance.html", "sklearn.metrics.median_absolute_error()": "modules/generated/sklearn.metrics.median_absolute_error.html", "sklearn.metrics.multilabel_confusion_matrix()": "modules/generated/sklearn.metrics.multilabel_confusion_matrix.html", "sklearn.metrics.mutual_info_score()": "modules/generated/sklearn.metrics.mutual_info_score.html", "sklearn.metrics.ndcg_score()": "modules/generated/sklearn.metrics.ndcg_score.html", "sklearn.metrics.normalized_mutual_info_score()": "modules/generated/sklearn.metrics.normalized_mutual_info_score.html", "sklearn.metrics.pairwise.additive_chi2_kernel()": "modules/generated/sklearn.metrics.pairwise.additive_chi2_kernel.html", "sklearn.metrics.pairwise.chi2_kernel()": "modules/generated/sklearn.metrics.pairwise.chi2_kernel.html", "sklearn.metrics.pairwise.cosine_distances()": "modules/generated/sklearn.metrics.pairwise.cosine_distances.html", "sklearn.metrics.pairwise.cosine_similarity()": "modules/generated/sklearn.metrics.pairwise.cosine_similarity.html", "sklearn.metrics.pairwise.distance_metrics()": "modules/generated/sklearn.metrics.pairwise.distance_metrics.html", "sklearn.metrics.pairwise.euclidean_distances()": "modules/generated/sklearn.metrics.pairwise.euclidean_distances.html", "sklearn.metrics.pairwise.haversine_distances()": "modules/generated/sklearn.metrics.pairwise.haversine_distances.html", "sklearn.metrics.pairwise.kernel_metrics()": "modules/generated/sklearn.metrics.pairwise.kernel_metrics.html", "sklearn.metrics.pairwise.laplacian_kernel()": "modules/generated/sklearn.metrics.pairwise.laplacian_kernel.html", "sklearn.metrics.pairwise.linear_kernel()": "modules/generated/sklearn.metrics.pairwise.linear_kernel.html", "sklearn.metrics.pairwise.manhattan_distances()": "modules/generated/sklearn.metrics.pairwise.manhattan_distances.html", "sklearn.metrics.pairwise.nan_euclidean_distances()": "modules/generated/sklearn.metrics.pairwise.nan_euclidean_distances.html", "sklearn.metrics.pairwise.paired_cosine_distances()": "modules/generated/sklearn.metrics.pairwise.paired_cosine_distances.html", "sklearn.metrics.pairwise.paired_distances()": "modules/generated/sklearn.metrics.pairwise.paired_distances.html", "sklearn.metrics.pairwise.paired_euclidean_distances()": "modules/generated/sklearn.metrics.pairwise.paired_euclidean_distances.html", "sklearn.metrics.pairwise.paired_manhattan_distances()": "modules/generated/sklearn.metrics.pairwise.paired_manhattan_distances.html", "sklearn.metrics.pairwise.pairwise_kernels()": "modules/generated/sklearn.metrics.pairwise.pairwise_kernels.html", "sklearn.metrics.pairwise.polynomial_kernel()": "modules/generated/sklearn.metrics.pairwise.polynomial_kernel.html", "sklearn.metrics.pairwise.rbf_kernel()": "modules/generated/sklearn.metrics.pairwise.rbf_kernel.html", "sklearn.metrics.pairwise.sigmoid_kernel()": "modules/generated/sklearn.metrics.pairwise.sigmoid_kernel.html", "sklearn.metrics.pairwise_distances()": "modules/generated/sklearn.metrics.pairwise_distances.html", "sklearn.metrics.pairwise_distances_argmin()": "modules/generated/sklearn.metrics.pairwise_distances_argmin.html", "sklearn.metrics.pairwise_distances_argmin_min()": "modules/generated/sklearn.metrics.pairwise_distances_argmin_min.html", "sklearn.metrics.pairwise_distances_chunked()": "modules/generated/sklearn.metrics.pairwise_distances_chunked.html", "sklearn.metrics.plot_confusion_matrix()": "modules/generated/sklearn.metrics.plot_confusion_matrix.html", "sklearn.metrics.plot_det_curve()": "modules/generated/sklearn.metrics.plot_det_curve.html", "sklearn.metrics.plot_precision_recall_curve()": "modules/generated/sklearn.metrics.plot_precision_recall_curve.html", "sklearn.metrics.plot_roc_curve()": "modules/generated/sklearn.metrics.plot_roc_curve.html", "sklearn.metrics.precision_recall_curve()": "modules/generated/sklearn.metrics.precision_recall_curve.html", "sklearn.metrics.precision_recall_fscore_support()": "modules/generated/sklearn.metrics.precision_recall_fscore_support.html", "sklearn.metrics.precision_score()": "modules/generated/sklearn.metrics.precision_score.html", "sklearn.metrics.r2_score()": "modules/generated/sklearn.metrics.r2_score.html", "sklearn.metrics.rand_score()": "modules/generated/sklearn.metrics.rand_score.html", "sklearn.metrics.recall_score()": "modules/generated/sklearn.metrics.recall_score.html", "sklearn.metrics.roc_auc_score()": "modules/generated/sklearn.metrics.roc_auc_score.html", "sklearn.metrics.roc_curve()": "modules/generated/sklearn.metrics.roc_curve.html", "sklearn.metrics.silhouette_samples()": "modules/generated/sklearn.metrics.silhouette_samples.html", "sklearn.metrics.silhouette_score()": "modules/generated/sklearn.metrics.silhouette_score.html", "sklearn.metrics.top_k_accuracy_score()": "modules/generated/sklearn.metrics.top_k_accuracy_score.html", "sklearn.metrics.v_measure_score()": "modules/generated/sklearn.metrics.v_measure_score.html", "sklearn.metrics.zero_one_loss()": "modules/generated/sklearn.metrics.zero_one_loss.html", "sklearn.model_selection.check_cv()": "modules/generated/sklearn.model_selection.check_cv.html", "sklearn.model_selection.cross_val_predict()": "modules/generated/sklearn.model_selection.cross_val_predict.html", "sklearn.model_selection.cross_val_score()": "modules/generated/sklearn.model_selection.cross_val_score.html", "sklearn.model_selection.cross_validate()": "modules/generated/sklearn.model_selection.cross_validate.html", "sklearn.model_selection.learning_curve()": "modules/generated/sklearn.model_selection.learning_curve.html", "sklearn.model_selection.permutation_test_score()": "modules/generated/sklearn.model_selection.permutation_test_score.html", "sklearn.model_selection.train_test_split()": "modules/generated/sklearn.model_selection.train_test_split.html", "sklearn.model_selection.validation_curve()": "modules/generated/sklearn.model_selection.validation_curve.html", "sklearn.neighbors.kneighbors_graph()": "modules/generated/sklearn.neighbors.kneighbors_graph.html", "sklearn.neighbors.radius_neighbors_graph()": "modules/generated/sklearn.neighbors.radius_neighbors_graph.html", "sklearn.pipeline.make_pipeline()": "modules/generated/sklearn.pipeline.make_pipeline.html", "sklearn.pipeline.make_union()": "modules/generated/sklearn.pipeline.make_union.html", "sklearn.preprocessing.add_dummy_feature()": "modules/generated/sklearn.preprocessing.add_dummy_feature.html", "sklearn.preprocessing.binarize()": "modules/generated/sklearn.preprocessing.binarize.html", "sklearn.preprocessing.label_binarize()": "modules/generated/sklearn.preprocessing.label_binarize.html", "sklearn.preprocessing.maxabs_scale()": "modules/generated/sklearn.preprocessing.maxabs_scale.html", "sklearn.preprocessing.minmax_scale()": "modules/generated/sklearn.preprocessing.minmax_scale.html", "sklearn.preprocessing.normalize()": "modules/generated/sklearn.preprocessing.normalize.html", "sklearn.preprocessing.power_transform()": "modules/generated/sklearn.preprocessing.power_transform.html", "sklearn.preprocessing.quantile_transform()": "modules/generated/sklearn.preprocessing.quantile_transform.html", "sklearn.preprocessing.robust_scale()": "modules/generated/sklearn.preprocessing.robust_scale.html", "sklearn.preprocessing.scale()": "modules/generated/sklearn.preprocessing.scale.html", "sklearn.random_projection.johnson_lindenstrauss_min_dim()": "modules/generated/sklearn.random_projection.johnson_lindenstrauss_min_dim.html", "sklearn.set_config()": "modules/generated/sklearn.set_config.html", "sklearn.show_versions()": "modules/generated/sklearn.show_versions.html", "sklearn.svm.l1_min_c()": "modules/generated/sklearn.svm.l1_min_c.html", "sklearn.tree.export_graphviz()": "modules/generated/sklearn.tree.export_graphviz.html", "sklearn.tree.export_text()": "modules/generated/sklearn.tree.export_text.html", "sklearn.tree.plot_tree()": "modules/generated/sklearn.tree.plot_tree.html", "sklearn.utils._safe_indexing()": "modules/generated/sklearn.utils._safe_indexing.html", "sklearn.utils.all_estimators()": "modules/generated/sklearn.utils.all_estimators.html", "sklearn.utils.arrayfuncs.min_pos()": "modules/generated/sklearn.utils.arrayfuncs.min_pos.html", "sklearn.utils.as_float_array()": "modules/generated/sklearn.utils.as_float_array.html", "sklearn.utils.assert_all_finite()": "modules/generated/sklearn.utils.assert_all_finite.html", "sklearn.utils.check_array()": "modules/generated/sklearn.utils.check_array.html", "sklearn.utils.check_consistent_length()": "modules/generated/sklearn.utils.check_consistent_length.html", "sklearn.utils.check_random_state()": "modules/generated/sklearn.utils.check_random_state.html", "sklearn.utils.check_scalar()": "modules/generated/sklearn.utils.check_scalar.html", "sklearn.utils.check_X_y()": "modules/generated/sklearn.utils.check_x_y.html", "sklearn.utils.class_weight.compute_class_weight()": "modules/generated/sklearn.utils.class_weight.compute_class_weight.html", "sklearn.utils.class_weight.compute_sample_weight()": "modules/generated/sklearn.utils.class_weight.compute_sample_weight.html", "sklearn.utils.deprecated()": "modules/generated/sklearn.utils.deprecated.html", "sklearn.utils.estimator_checks.check_estimator()": "modules/generated/sklearn.utils.estimator_checks.check_estimator.html", "sklearn.utils.estimator_checks.parametrize_with_checks()": "modules/generated/sklearn.utils.estimator_checks.parametrize_with_checks.html", "sklearn.utils.estimator_html_repr()": "modules/generated/sklearn.utils.estimator_html_repr.html", "sklearn.utils.extmath.density()": "modules/generated/sklearn.utils.extmath.density.html", "sklearn.utils.extmath.fast_logdet()": "modules/generated/sklearn.utils.extmath.fast_logdet.html", "sklearn.utils.extmath.randomized_range_finder()": "modules/generated/sklearn.utils.extmath.randomized_range_finder.html", "sklearn.utils.extmath.randomized_svd()": "modules/generated/sklearn.utils.extmath.randomized_svd.html", "sklearn.utils.extmath.safe_sparse_dot()": "modules/generated/sklearn.utils.extmath.safe_sparse_dot.html", "sklearn.utils.extmath.weighted_mode()": "modules/generated/sklearn.utils.extmath.weighted_mode.html", "sklearn.utils.gen_batches()": "modules/generated/sklearn.utils.gen_batches.html", "sklearn.utils.gen_even_slices()": "modules/generated/sklearn.utils.gen_even_slices.html", "sklearn.utils.graph.single_source_shortest_path_length()": "modules/generated/sklearn.utils.graph.single_source_shortest_path_length.html", "sklearn.utils.indexable()": "modules/generated/sklearn.utils.indexable.html", "sklearn.utils.metaestimators.available_if()": "modules/generated/sklearn.utils.metaestimators.available_if.html", "sklearn.utils.metaestimators.if_delegate_has_method()": "modules/generated/sklearn.utils.metaestimators.if_delegate_has_method.html", "sklearn.utils.multiclass.is_multilabel()": "modules/generated/sklearn.utils.multiclass.is_multilabel.html", "sklearn.utils.multiclass.type_of_target()": "modules/generated/sklearn.utils.multiclass.type_of_target.html", "sklearn.utils.multiclass.unique_labels()": "modules/generated/sklearn.utils.multiclass.unique_labels.html", "sklearn.utils.murmurhash3_32()": "modules/generated/sklearn.utils.murmurhash3_32.html", "sklearn.utils.parallel_backend()": "modules/generated/sklearn.utils.parallel_backend.html", "sklearn.utils.random.sample_without_replacement()": "modules/generated/sklearn.utils.random.sample_without_replacement.html", "sklearn.utils.register_parallel_backend()": "modules/generated/sklearn.utils.register_parallel_backend.html", "sklearn.utils.resample()": "modules/generated/sklearn.utils.resample.html", "sklearn.utils.safe_mask()": "modules/generated/sklearn.utils.safe_mask.html", "sklearn.utils.safe_sqr()": "modules/generated/sklearn.utils.safe_sqr.html", "sklearn.utils.shuffle()": "modules/generated/sklearn.utils.shuffle.html", "sklearn.utils.sparsefuncs.incr_mean_variance_axis()": "modules/generated/sklearn.utils.sparsefuncs.incr_mean_variance_axis.html", "sklearn.utils.sparsefuncs.inplace_column_scale()": "modules/generated/sklearn.utils.sparsefuncs.inplace_column_scale.html", "sklearn.utils.sparsefuncs.inplace_csr_column_scale()": "modules/generated/sklearn.utils.sparsefuncs.inplace_csr_column_scale.html", "sklearn.utils.sparsefuncs.inplace_row_scale()": "modules/generated/sklearn.utils.sparsefuncs.inplace_row_scale.html", "sklearn.utils.sparsefuncs.inplace_swap_column()": "modules/generated/sklearn.utils.sparsefuncs.inplace_swap_column.html", "sklearn.utils.sparsefuncs.inplace_swap_row()": "modules/generated/sklearn.utils.sparsefuncs.inplace_swap_row.html", "sklearn.utils.sparsefuncs.mean_variance_axis()": "modules/generated/sklearn.utils.sparsefuncs.mean_variance_axis.html", "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1()": "modules/generated/sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1.html", "sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2()": "modules/generated/sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2.html", "sklearn.utils.validation.check_is_fitted()": "modules/generated/sklearn.utils.validation.check_is_fitted.html", "sklearn.utils.validation.check_memory()": "modules/generated/sklearn.utils.validation.check_memory.html", "sklearn.utils.validation.check_symmetric()": "modules/generated/sklearn.utils.validation.check_symmetric.html", "sklearn.utils.validation.column_or_1d()": "modules/generated/sklearn.utils.validation.column_or_1d.html", "sklearn.utils.validation.has_fit_parameter()": "modules/generated/sklearn.utils.validation.has_fit_parameter.html", "svm.l1_min_c()": "modules/generated/sklearn.svm.l1_min_c.html#sklearn.svm.l1_min_c", "svm.LinearSVC": "modules/generated/sklearn.svm.linearsvc.html#sklearn.svm.LinearSVC", "svm.LinearSVC()": "modules/generated/sklearn.svm.linearsvc.html", "svm.LinearSVC.decision_function()": "modules/generated/sklearn.svm.linearsvc.html#sklearn.svm.LinearSVC.decision_function", "svm.LinearSVC.densify()": "modules/generated/sklearn.svm.linearsvc.html#sklearn.svm.LinearSVC.densify", "svm.LinearSVC.fit()": "modules/generated/sklearn.svm.linearsvc.html#sklearn.svm.LinearSVC.fit", "svm.LinearSVC.get_params()": "modules/generated/sklearn.svm.linearsvc.html#sklearn.svm.LinearSVC.get_params", "svm.LinearSVC.predict()": "modules/generated/sklearn.svm.linearsvc.html#sklearn.svm.LinearSVC.predict", "svm.LinearSVC.score()": "modules/generated/sklearn.svm.linearsvc.html#sklearn.svm.LinearSVC.score", "svm.LinearSVC.set_params()": "modules/generated/sklearn.svm.linearsvc.html#sklearn.svm.LinearSVC.set_params", "svm.LinearSVC.sparsify()": "modules/generated/sklearn.svm.linearsvc.html#sklearn.svm.LinearSVC.sparsify", "svm.LinearSVR": "modules/generated/sklearn.svm.linearsvr.html#sklearn.svm.LinearSVR", "svm.LinearSVR()": "modules/generated/sklearn.svm.linearsvr.html", "svm.LinearSVR.fit()": "modules/generated/sklearn.svm.linearsvr.html#sklearn.svm.LinearSVR.fit", "svm.LinearSVR.get_params()": "modules/generated/sklearn.svm.linearsvr.html#sklearn.svm.LinearSVR.get_params", "svm.LinearSVR.predict()": "modules/generated/sklearn.svm.linearsvr.html#sklearn.svm.LinearSVR.predict", "svm.LinearSVR.score()": "modules/generated/sklearn.svm.linearsvr.html#sklearn.svm.LinearSVR.score", "svm.LinearSVR.set_params()": "modules/generated/sklearn.svm.linearsvr.html#sklearn.svm.LinearSVR.set_params", "svm.NuSVC": "modules/generated/sklearn.svm.nusvc.html#sklearn.svm.NuSVC", "svm.NuSVC()": "modules/generated/sklearn.svm.nusvc.html", "svm.NuSVC.decision_function()": "modules/generated/sklearn.svm.nusvc.html#sklearn.svm.NuSVC.decision_function", "svm.NuSVC.fit()": "modules/generated/sklearn.svm.nusvc.html#sklearn.svm.NuSVC.fit", "svm.NuSVC.get_params()": "modules/generated/sklearn.svm.nusvc.html#sklearn.svm.NuSVC.get_params", "svm.NuSVC.predict()": "modules/generated/sklearn.svm.nusvc.html#sklearn.svm.NuSVC.predict", "svm.NuSVC.predict_log_proba()": "modules/generated/sklearn.svm.nusvc.html#sklearn.svm.NuSVC.predict_log_proba", "svm.NuSVC.predict_proba()": "modules/generated/sklearn.svm.nusvc.html#sklearn.svm.NuSVC.predict_proba", "svm.NuSVC.score()": "modules/generated/sklearn.svm.nusvc.html#sklearn.svm.NuSVC.score", "svm.NuSVC.set_params()": "modules/generated/sklearn.svm.nusvc.html#sklearn.svm.NuSVC.set_params", "svm.NuSVR": "modules/generated/sklearn.svm.nusvr.html#sklearn.svm.NuSVR", "svm.NuSVR()": "modules/generated/sklearn.svm.nusvr.html", "svm.NuSVR.fit()": "modules/generated/sklearn.svm.nusvr.html#sklearn.svm.NuSVR.fit", "svm.NuSVR.get_params()": "modules/generated/sklearn.svm.nusvr.html#sklearn.svm.NuSVR.get_params", "svm.NuSVR.predict()": "modules/generated/sklearn.svm.nusvr.html#sklearn.svm.NuSVR.predict", "svm.NuSVR.score()": "modules/generated/sklearn.svm.nusvr.html#sklearn.svm.NuSVR.score", "svm.NuSVR.set_params()": "modules/generated/sklearn.svm.nusvr.html#sklearn.svm.NuSVR.set_params", "svm.OneClassSVM": "modules/generated/sklearn.svm.oneclasssvm.html#sklearn.svm.OneClassSVM", "svm.OneClassSVM()": "modules/generated/sklearn.svm.oneclasssvm.html", "svm.OneClassSVM.decision_function()": "modules/generated/sklearn.svm.oneclasssvm.html#sklearn.svm.OneClassSVM.decision_function", "svm.OneClassSVM.fit()": "modules/generated/sklearn.svm.oneclasssvm.html#sklearn.svm.OneClassSVM.fit", "svm.OneClassSVM.fit_predict()": "modules/generated/sklearn.svm.oneclasssvm.html#sklearn.svm.OneClassSVM.fit_predict", "svm.OneClassSVM.get_params()": "modules/generated/sklearn.svm.oneclasssvm.html#sklearn.svm.OneClassSVM.get_params", "svm.OneClassSVM.predict()": "modules/generated/sklearn.svm.oneclasssvm.html#sklearn.svm.OneClassSVM.predict", "svm.OneClassSVM.score_samples()": "modules/generated/sklearn.svm.oneclasssvm.html#sklearn.svm.OneClassSVM.score_samples", "svm.OneClassSVM.set_params()": "modules/generated/sklearn.svm.oneclasssvm.html#sklearn.svm.OneClassSVM.set_params", "svm.SVC": "modules/generated/sklearn.svm.svc.html#sklearn.svm.SVC", "svm.SVC()": "modules/generated/sklearn.svm.svc.html", "svm.SVC.decision_function()": "modules/generated/sklearn.svm.svc.html#sklearn.svm.SVC.decision_function", "svm.SVC.fit()": "modules/generated/sklearn.svm.svc.html#sklearn.svm.SVC.fit", "svm.SVC.get_params()": "modules/generated/sklearn.svm.svc.html#sklearn.svm.SVC.get_params", "svm.SVC.predict()": "modules/generated/sklearn.svm.svc.html#sklearn.svm.SVC.predict", "svm.SVC.predict_log_proba()": "modules/generated/sklearn.svm.svc.html#sklearn.svm.SVC.predict_log_proba", "svm.SVC.predict_proba()": "modules/generated/sklearn.svm.svc.html#sklearn.svm.SVC.predict_proba", "svm.SVC.score()": "modules/generated/sklearn.svm.svc.html#sklearn.svm.SVC.score", "svm.SVC.set_params()": "modules/generated/sklearn.svm.svc.html#sklearn.svm.SVC.set_params", "svm.SVR": "modules/generated/sklearn.svm.svr.html#sklearn.svm.SVR", "svm.SVR()": "modules/generated/sklearn.svm.svr.html", "svm.SVR.fit()": "modules/generated/sklearn.svm.svr.html#sklearn.svm.SVR.fit", "svm.SVR.get_params()": "modules/generated/sklearn.svm.svr.html#sklearn.svm.SVR.get_params", "svm.SVR.predict()": "modules/generated/sklearn.svm.svr.html#sklearn.svm.SVR.predict", "svm.SVR.score()": "modules/generated/sklearn.svm.svr.html#sklearn.svm.SVR.score", "svm.SVR.set_params()": "modules/generated/sklearn.svm.svr.html#sklearn.svm.SVR.set_params", "tree.DecisionTreeClassifier": "modules/generated/sklearn.tree.decisiontreeclassifier.html#sklearn.tree.DecisionTreeClassifier", "tree.DecisionTreeClassifier()": "modules/generated/sklearn.tree.decisiontreeclassifier.html", "tree.DecisionTreeClassifier.apply()": "modules/generated/sklearn.tree.decisiontreeclassifier.html#sklearn.tree.DecisionTreeClassifier.apply", "tree.DecisionTreeClassifier.cost_complexity_pruning_path()": "modules/generated/sklearn.tree.decisiontreeclassifier.html#sklearn.tree.DecisionTreeClassifier.cost_complexity_pruning_path", "tree.DecisionTreeClassifier.decision_path()": "modules/generated/sklearn.tree.decisiontreeclassifier.html#sklearn.tree.DecisionTreeClassifier.decision_path", "tree.DecisionTreeClassifier.fit()": "modules/generated/sklearn.tree.decisiontreeclassifier.html#sklearn.tree.DecisionTreeClassifier.fit", "tree.DecisionTreeClassifier.get_depth()": "modules/generated/sklearn.tree.decisiontreeclassifier.html#sklearn.tree.DecisionTreeClassifier.get_depth", "tree.DecisionTreeClassifier.get_n_leaves()": "modules/generated/sklearn.tree.decisiontreeclassifier.html#sklearn.tree.DecisionTreeClassifier.get_n_leaves", "tree.DecisionTreeClassifier.get_params()": "modules/generated/sklearn.tree.decisiontreeclassifier.html#sklearn.tree.DecisionTreeClassifier.get_params", "tree.DecisionTreeClassifier.predict()": "modules/generated/sklearn.tree.decisiontreeclassifier.html#sklearn.tree.DecisionTreeClassifier.predict", "tree.DecisionTreeClassifier.predict_log_proba()": "modules/generated/sklearn.tree.decisiontreeclassifier.html#sklearn.tree.DecisionTreeClassifier.predict_log_proba", "tree.DecisionTreeClassifier.predict_proba()": "modules/generated/sklearn.tree.decisiontreeclassifier.html#sklearn.tree.DecisionTreeClassifier.predict_proba", "tree.DecisionTreeClassifier.score()": "modules/generated/sklearn.tree.decisiontreeclassifier.html#sklearn.tree.DecisionTreeClassifier.score", "tree.DecisionTreeClassifier.set_params()": "modules/generated/sklearn.tree.decisiontreeclassifier.html#sklearn.tree.DecisionTreeClassifier.set_params", "tree.DecisionTreeRegressor": "modules/generated/sklearn.tree.decisiontreeregressor.html#sklearn.tree.DecisionTreeRegressor", "tree.DecisionTreeRegressor()": "modules/generated/sklearn.tree.decisiontreeregressor.html", "tree.DecisionTreeRegressor.apply()": "modules/generated/sklearn.tree.decisiontreeregressor.html#sklearn.tree.DecisionTreeRegressor.apply", "tree.DecisionTreeRegressor.cost_complexity_pruning_path()": "modules/generated/sklearn.tree.decisiontreeregressor.html#sklearn.tree.DecisionTreeRegressor.cost_complexity_pruning_path", "tree.DecisionTreeRegressor.decision_path()": "modules/generated/sklearn.tree.decisiontreeregressor.html#sklearn.tree.DecisionTreeRegressor.decision_path", "tree.DecisionTreeRegressor.fit()": "modules/generated/sklearn.tree.decisiontreeregressor.html#sklearn.tree.DecisionTreeRegressor.fit", "tree.DecisionTreeRegressor.get_depth()": "modules/generated/sklearn.tree.decisiontreeregressor.html#sklearn.tree.DecisionTreeRegressor.get_depth", "tree.DecisionTreeRegressor.get_n_leaves()": "modules/generated/sklearn.tree.decisiontreeregressor.html#sklearn.tree.DecisionTreeRegressor.get_n_leaves", "tree.DecisionTreeRegressor.get_params()": "modules/generated/sklearn.tree.decisiontreeregressor.html#sklearn.tree.DecisionTreeRegressor.get_params", "tree.DecisionTreeRegressor.predict()": "modules/generated/sklearn.tree.decisiontreeregressor.html#sklearn.tree.DecisionTreeRegressor.predict", "tree.DecisionTreeRegressor.score()": "modules/generated/sklearn.tree.decisiontreeregressor.html#sklearn.tree.DecisionTreeRegressor.score", "tree.DecisionTreeRegressor.set_params()": "modules/generated/sklearn.tree.decisiontreeregressor.html#sklearn.tree.DecisionTreeRegressor.set_params", "tree.export_graphviz()": "modules/generated/sklearn.tree.export_graphviz.html#sklearn.tree.export_graphviz", "tree.export_text()": "modules/generated/sklearn.tree.export_text.html#sklearn.tree.export_text", "tree.ExtraTreeClassifier": "modules/generated/sklearn.tree.extratreeclassifier.html#sklearn.tree.ExtraTreeClassifier", "tree.ExtraTreeClassifier()": "modules/generated/sklearn.tree.extratreeclassifier.html", "tree.ExtraTreeClassifier.apply()": "modules/generated/sklearn.tree.extratreeclassifier.html#sklearn.tree.ExtraTreeClassifier.apply", "tree.ExtraTreeClassifier.cost_complexity_pruning_path()": "modules/generated/sklearn.tree.extratreeclassifier.html#sklearn.tree.ExtraTreeClassifier.cost_complexity_pruning_path", "tree.ExtraTreeClassifier.decision_path()": "modules/generated/sklearn.tree.extratreeclassifier.html#sklearn.tree.ExtraTreeClassifier.decision_path", "tree.ExtraTreeClassifier.fit()": "modules/generated/sklearn.tree.extratreeclassifier.html#sklearn.tree.ExtraTreeClassifier.fit", "tree.ExtraTreeClassifier.get_depth()": "modules/generated/sklearn.tree.extratreeclassifier.html#sklearn.tree.ExtraTreeClassifier.get_depth", "tree.ExtraTreeClassifier.get_n_leaves()": "modules/generated/sklearn.tree.extratreeclassifier.html#sklearn.tree.ExtraTreeClassifier.get_n_leaves", "tree.ExtraTreeClassifier.get_params()": "modules/generated/sklearn.tree.extratreeclassifier.html#sklearn.tree.ExtraTreeClassifier.get_params", "tree.ExtraTreeClassifier.predict()": "modules/generated/sklearn.tree.extratreeclassifier.html#sklearn.tree.ExtraTreeClassifier.predict", "tree.ExtraTreeClassifier.predict_log_proba()": "modules/generated/sklearn.tree.extratreeclassifier.html#sklearn.tree.ExtraTreeClassifier.predict_log_proba", "tree.ExtraTreeClassifier.predict_proba()": "modules/generated/sklearn.tree.extratreeclassifier.html#sklearn.tree.ExtraTreeClassifier.predict_proba", "tree.ExtraTreeClassifier.score()": "modules/generated/sklearn.tree.extratreeclassifier.html#sklearn.tree.ExtraTreeClassifier.score", "tree.ExtraTreeClassifier.set_params()": "modules/generated/sklearn.tree.extratreeclassifier.html#sklearn.tree.ExtraTreeClassifier.set_params", "tree.ExtraTreeRegressor": "modules/generated/sklearn.tree.extratreeregressor.html#sklearn.tree.ExtraTreeRegressor", "tree.ExtraTreeRegressor()": "modules/generated/sklearn.tree.extratreeregressor.html", "tree.ExtraTreeRegressor.apply()": "modules/generated/sklearn.tree.extratreeregressor.html#sklearn.tree.ExtraTreeRegressor.apply", "tree.ExtraTreeRegressor.cost_complexity_pruning_path()": "modules/generated/sklearn.tree.extratreeregressor.html#sklearn.tree.ExtraTreeRegressor.cost_complexity_pruning_path", "tree.ExtraTreeRegressor.decision_path()": "modules/generated/sklearn.tree.extratreeregressor.html#sklearn.tree.ExtraTreeRegressor.decision_path", "tree.ExtraTreeRegressor.fit()": "modules/generated/sklearn.tree.extratreeregressor.html#sklearn.tree.ExtraTreeRegressor.fit", "tree.ExtraTreeRegressor.get_depth()": "modules/generated/sklearn.tree.extratreeregressor.html#sklearn.tree.ExtraTreeRegressor.get_depth", "tree.ExtraTreeRegressor.get_n_leaves()": "modules/generated/sklearn.tree.extratreeregressor.html#sklearn.tree.ExtraTreeRegressor.get_n_leaves", "tree.ExtraTreeRegressor.get_params()": "modules/generated/sklearn.tree.extratreeregressor.html#sklearn.tree.ExtraTreeRegressor.get_params", "tree.ExtraTreeRegressor.predict()": "modules/generated/sklearn.tree.extratreeregressor.html#sklearn.tree.ExtraTreeRegressor.predict", "tree.ExtraTreeRegressor.score()": "modules/generated/sklearn.tree.extratreeregressor.html#sklearn.tree.ExtraTreeRegressor.score", "tree.ExtraTreeRegressor.set_params()": "modules/generated/sklearn.tree.extratreeregressor.html#sklearn.tree.ExtraTreeRegressor.set_params", "tree.plot_tree()": "modules/generated/sklearn.tree.plot_tree.html#sklearn.tree.plot_tree", "Tutorial: A tutorial on statistical-learning for scientific data processing": "tutorial/statistical_inference/index.html", "Tutorial: An introduction to machine learning with scikit-learn": "tutorial/basic/tutorial.html", "Tutorial: Model selection": "tutorial/statistical_inference/model_selection.html", "Tutorial: Putting it all together": "tutorial/statistical_inference/putting_together.html", "Tutorial: Statistical learning": "tutorial/statistical_inference/settings.html", "Tutorial: Supervised learning": "tutorial/statistical_inference/supervised_learning.html", "Tutorial: Unsupervised learning": "tutorial/statistical_inference/unsupervised_learning.html", "utils._safe_indexing()": "modules/generated/sklearn.utils._safe_indexing.html#sklearn.utils._safe_indexing", "utils.all_estimators()": "modules/generated/sklearn.utils.all_estimators.html#sklearn.utils.all_estimators", "utils.arrayfuncs.min_pos()": "modules/generated/sklearn.utils.arrayfuncs.min_pos.html#sklearn.utils.arrayfuncs.min_pos", "utils.as_float_array()": "modules/generated/sklearn.utils.as_float_array.html#sklearn.utils.as_float_array", "utils.assert_all_finite()": "modules/generated/sklearn.utils.assert_all_finite.html#sklearn.utils.assert_all_finite", "utils.Bunch": "modules/generated/sklearn.utils.bunch.html#sklearn.utils.Bunch", "utils.Bunch()": "modules/generated/sklearn.utils.bunch.html", "utils.Bunch.clear()": "modules/generated/sklearn.utils.bunch.html#sklearn.utils.Bunch.clear", "utils.Bunch.copy()": "modules/generated/sklearn.utils.bunch.html#sklearn.utils.Bunch.copy", "utils.Bunch.fromkeys()": "modules/generated/sklearn.utils.bunch.html#sklearn.utils.Bunch.fromkeys", "utils.Bunch.get()": "modules/generated/sklearn.utils.bunch.html#sklearn.utils.Bunch.get", "utils.Bunch.items()": "modules/generated/sklearn.utils.bunch.html#sklearn.utils.Bunch.items", "utils.Bunch.keys()": "modules/generated/sklearn.utils.bunch.html#sklearn.utils.Bunch.keys", "utils.Bunch.pop()": "modules/generated/sklearn.utils.bunch.html#sklearn.utils.Bunch.pop", "utils.Bunch.popitem()": "modules/generated/sklearn.utils.bunch.html#sklearn.utils.Bunch.popitem", "utils.Bunch.setdefault()": "modules/generated/sklearn.utils.bunch.html#sklearn.utils.Bunch.setdefault", "utils.Bunch.update()": "modules/generated/sklearn.utils.bunch.html#sklearn.utils.Bunch.update", "utils.Bunch.values()": "modules/generated/sklearn.utils.bunch.html#sklearn.utils.Bunch.values", "utils.check_array()": "modules/generated/sklearn.utils.check_array.html#sklearn.utils.check_array", "utils.check_consistent_length()": "modules/generated/sklearn.utils.check_consistent_length.html#sklearn.utils.check_consistent_length", "utils.check_random_state()": "modules/generated/sklearn.utils.check_random_state.html#sklearn.utils.check_random_state", "utils.check_scalar()": "modules/generated/sklearn.utils.check_scalar.html#sklearn.utils.check_scalar", "utils.check_X_y()": "modules/generated/sklearn.utils.check_x_y.html#sklearn.utils.check_X_y", "utils.class_weight.compute_class_weight()": "modules/generated/sklearn.utils.class_weight.compute_class_weight.html#sklearn.utils.class_weight.compute_class_weight", "utils.class_weight.compute_sample_weight()": "modules/generated/sklearn.utils.class_weight.compute_sample_weight.html#sklearn.utils.class_weight.compute_sample_weight", "utils.deprecated()": "modules/generated/sklearn.utils.deprecated.html#sklearn.utils.deprecated", "utils.estimator_checks.check_estimator()": "modules/generated/sklearn.utils.estimator_checks.check_estimator.html#sklearn.utils.estimator_checks.check_estimator", "utils.estimator_checks.parametrize_with_checks()": "modules/generated/sklearn.utils.estimator_checks.parametrize_with_checks.html#sklearn.utils.estimator_checks.parametrize_with_checks", "utils.estimator_html_repr()": "modules/generated/sklearn.utils.estimator_html_repr.html#sklearn.utils.estimator_html_repr", "utils.extmath.density()": "modules/generated/sklearn.utils.extmath.density.html#sklearn.utils.extmath.density", "utils.extmath.fast_logdet()": "modules/generated/sklearn.utils.extmath.fast_logdet.html#sklearn.utils.extmath.fast_logdet", "utils.extmath.randomized_range_finder()": "modules/generated/sklearn.utils.extmath.randomized_range_finder.html#sklearn.utils.extmath.randomized_range_finder", "utils.extmath.randomized_svd()": "modules/generated/sklearn.utils.extmath.randomized_svd.html#sklearn.utils.extmath.randomized_svd", "utils.extmath.safe_sparse_dot()": "modules/generated/sklearn.utils.extmath.safe_sparse_dot.html#sklearn.utils.extmath.safe_sparse_dot", "utils.extmath.weighted_mode()": "modules/generated/sklearn.utils.extmath.weighted_mode.html#sklearn.utils.extmath.weighted_mode", "utils.gen_batches()": "modules/generated/sklearn.utils.gen_batches.html#sklearn.utils.gen_batches", "utils.gen_even_slices()": "modules/generated/sklearn.utils.gen_even_slices.html#sklearn.utils.gen_even_slices", "utils.graph.single_source_shortest_path_length()": "modules/generated/sklearn.utils.graph.single_source_shortest_path_length.html#sklearn.utils.graph.single_source_shortest_path_length", "utils.indexable()": "modules/generated/sklearn.utils.indexable.html#sklearn.utils.indexable", "utils.metaestimators.available_if()": "modules/generated/sklearn.utils.metaestimators.available_if.html#sklearn.utils.metaestimators.available_if", "utils.metaestimators.if_delegate_has_method()": "modules/generated/sklearn.utils.metaestimators.if_delegate_has_method.html#sklearn.utils.metaestimators.if_delegate_has_method", "utils.multiclass.is_multilabel()": "modules/generated/sklearn.utils.multiclass.is_multilabel.html#sklearn.utils.multiclass.is_multilabel", "utils.multiclass.type_of_target()": "modules/generated/sklearn.utils.multiclass.type_of_target.html#sklearn.utils.multiclass.type_of_target", "utils.multiclass.unique_labels()": "modules/generated/sklearn.utils.multiclass.unique_labels.html#sklearn.utils.multiclass.unique_labels", "utils.murmurhash3_32()": "modules/generated/sklearn.utils.murmurhash3_32.html#sklearn.utils.murmurhash3_32", "utils.parallel_backend()": "modules/generated/sklearn.utils.parallel_backend.html#sklearn.utils.parallel_backend", "utils.random.sample_without_replacement()": "modules/generated/sklearn.utils.random.sample_without_replacement.html#sklearn.utils.random.sample_without_replacement", "utils.register_parallel_backend()": "modules/generated/sklearn.utils.register_parallel_backend.html#sklearn.utils.register_parallel_backend", "utils.resample()": "modules/generated/sklearn.utils.resample.html#sklearn.utils.resample", "utils.safe_mask()": "modules/generated/sklearn.utils.safe_mask.html#sklearn.utils.safe_mask", "utils.safe_sqr()": "modules/generated/sklearn.utils.safe_sqr.html#sklearn.utils.safe_sqr", "utils.shuffle()": "modules/generated/sklearn.utils.shuffle.html#sklearn.utils.shuffle", "utils.sparsefuncs.incr_mean_variance_axis()": "modules/generated/sklearn.utils.sparsefuncs.incr_mean_variance_axis.html#sklearn.utils.sparsefuncs.incr_mean_variance_axis", "utils.sparsefuncs.inplace_column_scale()": "modules/generated/sklearn.utils.sparsefuncs.inplace_column_scale.html#sklearn.utils.sparsefuncs.inplace_column_scale", "utils.sparsefuncs.inplace_csr_column_scale()": "modules/generated/sklearn.utils.sparsefuncs.inplace_csr_column_scale.html#sklearn.utils.sparsefuncs.inplace_csr_column_scale", "utils.sparsefuncs.inplace_row_scale()": "modules/generated/sklearn.utils.sparsefuncs.inplace_row_scale.html#sklearn.utils.sparsefuncs.inplace_row_scale", "utils.sparsefuncs.inplace_swap_column()": "modules/generated/sklearn.utils.sparsefuncs.inplace_swap_column.html#sklearn.utils.sparsefuncs.inplace_swap_column", "utils.sparsefuncs.inplace_swap_row()": "modules/generated/sklearn.utils.sparsefuncs.inplace_swap_row.html#sklearn.utils.sparsefuncs.inplace_swap_row", "utils.sparsefuncs.mean_variance_axis()": "modules/generated/sklearn.utils.sparsefuncs.mean_variance_axis.html#sklearn.utils.sparsefuncs.mean_variance_axis", "utils.sparsefuncs_fast.inplace_csr_row_normalize_l1()": "modules/generated/sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1.html#sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l1", "utils.sparsefuncs_fast.inplace_csr_row_normalize_l2()": "modules/generated/sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2.html#sklearn.utils.sparsefuncs_fast.inplace_csr_row_normalize_l2", "utils.validation.check_is_fitted()": "modules/generated/sklearn.utils.validation.check_is_fitted.html#sklearn.utils.validation.check_is_fitted", "utils.validation.check_memory()": "modules/generated/sklearn.utils.validation.check_memory.html#sklearn.utils.validation.check_memory", "utils.validation.check_symmetric()": "modules/generated/sklearn.utils.validation.check_symmetric.html#sklearn.utils.validation.check_symmetric", "utils.validation.column_or_1d()": "modules/generated/sklearn.utils.validation.column_or_1d.html#sklearn.utils.validation.column_or_1d", "utils.validation.has_fit_parameter()": "modules/generated/sklearn.utils.validation.has_fit_parameter.html#sklearn.utils.validation.has_fit_parameter"}