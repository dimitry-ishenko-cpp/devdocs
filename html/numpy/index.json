{"()": "glossary.html", "*": "user/depending_on_numpy.html", "--cpu-baseline: minimal set of required CPU features.": "reference/simd/build-options.html", "--overwrite-signature": "f2py/usage.html", "1": "reference/random/parallel.html", "add_data_dir()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.add_data_dir", "add_data_files()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.add_data_files", "add_extension()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.add_extension", "add_headers()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.add_headers", "add_include_dirs()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.add_include_dirs", "add_installed_library()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.add_installed_library", "add_library()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.add_library", "add_npy_pkg_config()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.add_npy_pkg_config", "add_scripts()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.add_scripts", "add_subpackage()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.add_subpackage", "Additional": "dev/gitwash/git_resources.html", "Advanced debugging tools": "dev/development_advanced_debugging.html", "Advanced F2PY use cases": "f2py/advanced.html", "Array API Standard Compatibility": "reference/array_api.html", "Array creation": "user/basics.creation.html", "Array creation routines": "reference/routines.array-creation.html", "Array manipulation routines": "reference/routines.array-manipulation.html", "Array objects": "reference/arrays.html", "Binary operations": "reference/routines.bitwise.html", "Bit Generators": "reference/random/bit_generators/index.html", "broadcast.index": "reference/generated/numpy.broadcast.index.html", "broadcast.iters": "reference/generated/numpy.broadcast.iters.html", "broadcast.nd": "reference/generated/numpy.broadcast.nd.html", "broadcast.ndim": "reference/generated/numpy.broadcast.ndim.html", "broadcast.numiter": "reference/generated/numpy.broadcast.numiter.html", "broadcast.reset()": "reference/generated/numpy.broadcast.reset.html", "broadcast.size": "reference/generated/numpy.broadcast.size.html", "build_src": "f2py/buildtools/distutils.html", "Building from source": "user/building.html", "Building the NumPy API and reference docs": "dev/howto_build_docs.html", "busdaycalendar.holidays": "reference/generated/numpy.busdaycalendar.holidays.html", "busdaycalendar.weekmask": "reference/generated/numpy.busdaycalendar.weekmask.html", "Byte-swapping": "user/basics.byteswapping.html", "C API Deprecations": "reference/c-api/deprecations.html", "char **NpyIter_GetDataPtrArray()": "reference/c-api/iterator.html#c.NpyIter_GetDataPtrArray", "char **NpyIter_GetInitialDataPtrArray()": "reference/c-api/iterator.html#c.NpyIter_GetInitialDataPtrArray", "char *core_signature": "reference/c-api/types-and-structures.html#c.PyUFuncObject.core_signature", "char *data": "reference/c-api/types-and-structures.html#c.NPY_AO.data", "char *dataptr": "reference/c-api/types-and-structures.html#c.PyArrayIterObject.dataptr", "char *doc": "reference/c-api/types-and-structures.html#c.PyUFuncObject.doc", "char *name": "reference/c-api/types-and-structures.html#c.PyUFuncObject.name", "char *PyArray_BYTES()": "reference/c-api/array.html#c.PyArray_BYTES", "char *PyArray_One()": "reference/c-api/array.html#c.PyArray_One", "char *PyArray_Zero()": "reference/c-api/array.html#c.PyArray_Zero", "char *PyDataMem_RENEW()": "reference/c-api/array.html#c.PyDataMem_RENEW", "char *types": "reference/c-api/types-and-structures.html#c.PyUFuncObject.types", "char byteorder": "reference/c-api/types-and-structures.html#c.PyArray_Descr.byteorder", "char flags": "reference/c-api/types-and-structures.html#c.PyArray_Descr.flags", "char kind": "reference/c-api/types-and-structures.html#c.PyArray_Descr.kind", "char type": "reference/c-api/types-and-structures.html#c.PyArray_Descr.type", "char typekind": "reference/c-api/types-and-structures.html#c.PyArrayInterface.typekind", "char.add()": "reference/generated/numpy.char.add.html", "char.array()": "reference/generated/numpy.char.array.html", "char.asarray()": "reference/generated/numpy.char.asarray.html", "char.capitalize()": "reference/generated/numpy.char.capitalize.html", "char.center()": "reference/generated/numpy.char.center.html", "char.chararray.argsort()": "reference/generated/numpy.char.chararray.argsort.html", "char.chararray.astype()": "reference/generated/numpy.char.chararray.astype.html", "char.chararray.base": "reference/generated/numpy.char.chararray.base.html", "char.chararray.copy()": "reference/generated/numpy.char.chararray.copy.html", "char.chararray.count()": "reference/generated/numpy.char.chararray.count.html", "char.chararray.ctypes": "reference/generated/numpy.char.chararray.ctypes.html", "char.chararray.data": "reference/generated/numpy.char.chararray.data.html", "char.chararray.decode()": "reference/generated/numpy.char.chararray.decode.html", "char.chararray.dtype": "reference/generated/numpy.char.chararray.dtype.html", "char.chararray.dump()": "reference/generated/numpy.char.chararray.dump.html", "char.chararray.dumps()": "reference/generated/numpy.char.chararray.dumps.html", "char.chararray.encode()": "reference/generated/numpy.char.chararray.encode.html", "char.chararray.endswith()": "reference/generated/numpy.char.chararray.endswith.html", "char.chararray.expandtabs()": "reference/generated/numpy.char.chararray.expandtabs.html", "char.chararray.fill()": "reference/generated/numpy.char.chararray.fill.html", "char.chararray.find()": "reference/generated/numpy.char.chararray.find.html", "char.chararray.flags": "reference/generated/numpy.char.chararray.flags.html", "char.chararray.flat": "reference/generated/numpy.char.chararray.flat.html", "char.chararray.flatten()": "reference/generated/numpy.char.chararray.flatten.html", "char.chararray.getfield()": "reference/generated/numpy.char.chararray.getfield.html", "char.chararray.imag": "reference/generated/numpy.char.chararray.imag.html", "char.chararray.index()": "reference/generated/numpy.char.chararray.index.html", "char.chararray.isalnum()": "reference/generated/numpy.char.chararray.isalnum.html", "char.chararray.isalpha()": "reference/generated/numpy.char.chararray.isalpha.html", "char.chararray.isdecimal()": "reference/generated/numpy.char.chararray.isdecimal.html", "char.chararray.isdigit()": "reference/generated/numpy.char.chararray.isdigit.html", "char.chararray.islower()": "reference/generated/numpy.char.chararray.islower.html", "char.chararray.isnumeric()": "reference/generated/numpy.char.chararray.isnumeric.html", "char.chararray.isspace()": "reference/generated/numpy.char.chararray.isspace.html", "char.chararray.istitle()": "reference/generated/numpy.char.chararray.istitle.html", "char.chararray.isupper()": "reference/generated/numpy.char.chararray.isupper.html", "char.chararray.item()": "reference/generated/numpy.char.chararray.item.html", "char.chararray.itemsize": "reference/generated/numpy.char.chararray.itemsize.html", "char.chararray.join()": "reference/generated/numpy.char.chararray.join.html", "char.chararray.ljust()": "reference/generated/numpy.char.chararray.ljust.html", "char.chararray.lower()": "reference/generated/numpy.char.chararray.lower.html", "char.chararray.lstrip()": "reference/generated/numpy.char.chararray.lstrip.html", "char.chararray.nbytes": "reference/generated/numpy.char.chararray.nbytes.html", "char.chararray.ndim": "reference/generated/numpy.char.chararray.ndim.html", "char.chararray.nonzero()": "reference/generated/numpy.char.chararray.nonzero.html", "char.chararray.put()": "reference/generated/numpy.char.chararray.put.html", "char.chararray.ravel()": "reference/generated/numpy.char.chararray.ravel.html", "char.chararray.real": "reference/generated/numpy.char.chararray.real.html", "char.chararray.repeat()": "reference/generated/numpy.char.chararray.repeat.html", "char.chararray.replace()": "reference/generated/numpy.char.chararray.replace.html", "char.chararray.reshape()": "reference/generated/numpy.char.chararray.reshape.html", "char.chararray.resize()": "reference/generated/numpy.char.chararray.resize.html", "char.chararray.rfind()": "reference/generated/numpy.char.chararray.rfind.html", "char.chararray.rindex()": "reference/generated/numpy.char.chararray.rindex.html", "char.chararray.rjust()": "reference/generated/numpy.char.chararray.rjust.html", "char.chararray.rsplit()": "reference/generated/numpy.char.chararray.rsplit.html", "char.chararray.rstrip()": "reference/generated/numpy.char.chararray.rstrip.html", "char.chararray.searchsorted()": "reference/generated/numpy.char.chararray.searchsorted.html", "char.chararray.setfield()": "reference/generated/numpy.char.chararray.setfield.html", "char.chararray.setflags()": "reference/generated/numpy.char.chararray.setflags.html", "char.chararray.shape": "reference/generated/numpy.char.chararray.shape.html", "char.chararray.size": "reference/generated/numpy.char.chararray.size.html", "char.chararray.sort()": "reference/generated/numpy.char.chararray.sort.html", "char.chararray.split()": "reference/generated/numpy.char.chararray.split.html", "char.chararray.splitlines()": "reference/generated/numpy.char.chararray.splitlines.html", "char.chararray.squeeze()": "reference/generated/numpy.char.chararray.squeeze.html", "char.chararray.startswith()": "reference/generated/numpy.char.chararray.startswith.html", "char.chararray.strides": "reference/generated/numpy.char.chararray.strides.html", "char.chararray.strip()": "reference/generated/numpy.char.chararray.strip.html", "char.chararray.swapaxes()": "reference/generated/numpy.char.chararray.swapaxes.html", "char.chararray.swapcase()": "reference/generated/numpy.char.chararray.swapcase.html", "char.chararray.T": "reference/generated/numpy.char.chararray.t.html", "char.chararray.take()": "reference/generated/numpy.char.chararray.take.html", "char.chararray.title()": "reference/generated/numpy.char.chararray.title.html", "char.chararray.tobytes()": "reference/generated/numpy.char.chararray.tobytes.html", "char.chararray.tofile()": "reference/generated/numpy.char.chararray.tofile.html", "char.chararray.tolist()": "reference/generated/numpy.char.chararray.tolist.html", "char.chararray.tostring()": "reference/generated/numpy.char.chararray.tostring.html", "char.chararray.translate()": "reference/generated/numpy.char.chararray.translate.html", "char.chararray.transpose()": "reference/generated/numpy.char.chararray.transpose.html", "char.chararray.upper()": "reference/generated/numpy.char.chararray.upper.html", "char.chararray.view()": "reference/generated/numpy.char.chararray.view.html", "char.chararray.zfill()": "reference/generated/numpy.char.chararray.zfill.html", "char.compare_chararrays()": "reference/generated/numpy.char.compare_chararrays.html", "char.count()": "reference/generated/numpy.char.count.html", "char.decode()": "reference/generated/numpy.char.decode.html", "char.encode()": "reference/generated/numpy.char.encode.html", "char.endswith()": "reference/generated/numpy.char.endswith.html", "char.equal()": "reference/generated/numpy.char.equal.html", "char.expandtabs()": "reference/generated/numpy.char.expandtabs.html", "char.find()": "reference/generated/numpy.char.find.html", "char.greater()": "reference/generated/numpy.char.greater.html", "char.greater_equal()": "reference/generated/numpy.char.greater_equal.html", "char.index()": "reference/generated/numpy.char.index.html", "char.isalnum()": "reference/generated/numpy.char.isalnum.html", "char.isalpha()": "reference/generated/numpy.char.isalpha.html", "char.isdecimal()": "reference/generated/numpy.char.isdecimal.html", "char.isdigit()": "reference/generated/numpy.char.isdigit.html", "char.islower()": "reference/generated/numpy.char.islower.html", "char.isnumeric()": "reference/generated/numpy.char.isnumeric.html", "char.isspace()": "reference/generated/numpy.char.isspace.html", "char.istitle()": "reference/generated/numpy.char.istitle.html", "char.isupper()": "reference/generated/numpy.char.isupper.html", "char.join()": "reference/generated/numpy.char.join.html", "char.less()": "reference/generated/numpy.char.less.html", "char.less_equal()": "reference/generated/numpy.char.less_equal.html", "char.ljust()": "reference/generated/numpy.char.ljust.html", "char.lower()": "reference/generated/numpy.char.lower.html", "char.lstrip()": "reference/generated/numpy.char.lstrip.html", "char.mod()": "reference/generated/numpy.char.mod.html", "char.multiply()": "reference/generated/numpy.char.multiply.html", "char.not_equal()": "reference/generated/numpy.char.not_equal.html", "char.partition()": "reference/generated/numpy.char.partition.html", "char.replace()": "reference/generated/numpy.char.replace.html", "char.rfind()": "reference/generated/numpy.char.rfind.html", "char.rindex()": "reference/generated/numpy.char.rindex.html", "char.rjust()": "reference/generated/numpy.char.rjust.html", "char.rpartition()": "reference/generated/numpy.char.rpartition.html", "char.rsplit()": "reference/generated/numpy.char.rsplit.html", "char.rstrip()": "reference/generated/numpy.char.rstrip.html", "char.split()": "reference/generated/numpy.char.split.html", "char.splitlines()": "reference/generated/numpy.char.splitlines.html", "char.startswith()": "reference/generated/numpy.char.startswith.html", "char.str_len()": "reference/generated/numpy.char.str_len.html", "char.strip()": "reference/generated/numpy.char.strip.html", "char.swapcase()": "reference/generated/numpy.char.swapcase.html", "char.title()": "reference/generated/numpy.char.title.html", "char.translate()": "reference/generated/numpy.char.translate.html", "char.upper()": "reference/generated/numpy.char.upper.html", "char.zfill()": "reference/generated/numpy.char.zfill.html", "chararray.argsort()": "reference/generated/numpy.chararray.argsort.html", "chararray.astype()": "reference/generated/numpy.chararray.astype.html", "chararray.base": "reference/generated/numpy.chararray.base.html", "chararray.copy()": "reference/generated/numpy.chararray.copy.html", "chararray.count()": "reference/generated/numpy.chararray.count.html", "chararray.ctypes": "reference/generated/numpy.chararray.ctypes.html", "chararray.data": "reference/generated/numpy.chararray.data.html", "chararray.decode()": "reference/generated/numpy.chararray.decode.html", "chararray.dump()": "reference/generated/numpy.chararray.dump.html", "chararray.dumps()": "reference/generated/numpy.chararray.dumps.html", "chararray.encode()": "reference/generated/numpy.chararray.encode.html", "chararray.endswith()": "reference/generated/numpy.chararray.endswith.html", "chararray.expandtabs()": "reference/generated/numpy.chararray.expandtabs.html", "chararray.fill()": "reference/generated/numpy.chararray.fill.html", "chararray.find()": "reference/generated/numpy.chararray.find.html", "chararray.flags": "reference/generated/numpy.chararray.flags.html", "chararray.flat": "reference/generated/numpy.chararray.flat.html", "chararray.flatten()": "reference/generated/numpy.chararray.flatten.html", "chararray.getfield()": "reference/generated/numpy.chararray.getfield.html", "chararray.index()": "reference/generated/numpy.chararray.index.html", "chararray.isalnum()": "reference/generated/numpy.chararray.isalnum.html", "chararray.isalpha()": "reference/generated/numpy.chararray.isalpha.html", "chararray.isdecimal()": "reference/generated/numpy.chararray.isdecimal.html", "chararray.isdigit()": "reference/generated/numpy.chararray.isdigit.html", "chararray.islower()": "reference/generated/numpy.chararray.islower.html", "chararray.isnumeric()": "reference/generated/numpy.chararray.isnumeric.html", "chararray.isspace()": "reference/generated/numpy.chararray.isspace.html", "chararray.istitle()": "reference/generated/numpy.chararray.istitle.html", "chararray.isupper()": "reference/generated/numpy.chararray.isupper.html", "chararray.item()": "reference/generated/numpy.chararray.item.html", "chararray.itemsize": "reference/generated/numpy.chararray.itemsize.html", "chararray.join()": "reference/generated/numpy.chararray.join.html", "chararray.ljust()": "reference/generated/numpy.chararray.ljust.html", "chararray.lower()": "reference/generated/numpy.chararray.lower.html", "chararray.lstrip()": "reference/generated/numpy.chararray.lstrip.html", "chararray.nbytes": "reference/generated/numpy.chararray.nbytes.html", "chararray.ndim": "reference/generated/numpy.chararray.ndim.html", "chararray.nonzero()": "reference/generated/numpy.chararray.nonzero.html", "chararray.put()": "reference/generated/numpy.chararray.put.html", "chararray.ravel()": "reference/generated/numpy.chararray.ravel.html", "chararray.repeat()": "reference/generated/numpy.chararray.repeat.html", "chararray.replace()": "reference/generated/numpy.chararray.replace.html", "chararray.reshape()": "reference/generated/numpy.chararray.reshape.html", "chararray.resize()": "reference/generated/numpy.chararray.resize.html", "chararray.rfind()": "reference/generated/numpy.chararray.rfind.html", "chararray.rindex()": "reference/generated/numpy.chararray.rindex.html", "chararray.rjust()": "reference/generated/numpy.chararray.rjust.html", "chararray.rsplit()": "reference/generated/numpy.chararray.rsplit.html", "chararray.rstrip()": "reference/generated/numpy.chararray.rstrip.html", "chararray.searchsorted()": "reference/generated/numpy.chararray.searchsorted.html", "chararray.setfield()": "reference/generated/numpy.chararray.setfield.html", "chararray.setflags()": "reference/generated/numpy.chararray.setflags.html", "chararray.size": "reference/generated/numpy.chararray.size.html", "chararray.sort()": "reference/generated/numpy.chararray.sort.html", "chararray.split()": "reference/generated/numpy.chararray.split.html", "chararray.splitlines()": "reference/generated/numpy.chararray.splitlines.html", "chararray.squeeze()": "reference/generated/numpy.chararray.squeeze.html", "chararray.startswith()": "reference/generated/numpy.chararray.startswith.html", "chararray.strides": "reference/generated/numpy.chararray.strides.html", "chararray.strip()": "reference/generated/numpy.chararray.strip.html", "chararray.swapaxes()": "reference/generated/numpy.chararray.swapaxes.html", "chararray.swapcase()": "reference/generated/numpy.chararray.swapcase.html", "chararray.T": "reference/generated/numpy.chararray.t.html", "chararray.take()": "reference/generated/numpy.chararray.take.html", "chararray.title()": "reference/generated/numpy.chararray.title.html", "chararray.tobytes()": "reference/generated/numpy.chararray.tobytes.html", "chararray.tofile()": "reference/generated/numpy.chararray.tofile.html", "chararray.tolist()": "reference/generated/numpy.chararray.tolist.html", "chararray.tostring()": "reference/generated/numpy.chararray.tostring.html", "chararray.translate()": "reference/generated/numpy.chararray.translate.html", "chararray.transpose()": "reference/generated/numpy.chararray.transpose.html", "chararray.upper()": "reference/generated/numpy.chararray.upper.html", "chararray.view()": "reference/generated/numpy.chararray.view.html", "chararray.zfill()": "reference/generated/numpy.chararray.zfill.html", "class.__array__()": "reference/arrays.classes.html#numpy.class.__array__", "class.__array_finalize__()": "reference/arrays.classes.html#numpy.class.__array_finalize__", "class.__array_function__()": "reference/arrays.classes.html#numpy.class.__array_function__", "class.__array_prepare__()": "reference/arrays.classes.html#numpy.class.__array_prepare__", "class.__array_priority__": "reference/arrays.classes.html#numpy.class.__array_priority__", "class.__array_ufunc__()": "reference/arrays.classes.html", "class.__array_wrap__()": "reference/arrays.classes.html#numpy.class.__array_wrap__", "Classic Intel Compilers ()": "f2py/windows/index.html", "config.add_library()": "reference/distutils_guide.html", "const Tp *data()": "dev/howto-docs.html#_CPPv4N9DoxyLimbo4dataEv", "Contributing to NumPy": "dev/index.html", "Convenience Classes": "reference/routines.polynomials.package.html", "Copies and views": "user/basics.copies.html", "core.defchararray.array()": "reference/generated/numpy.core.defchararray.array.html", "core.defchararray.asarray()": "reference/generated/numpy.core.defchararray.asarray.html", "core.records.array()": "reference/generated/numpy.core.records.array.html", "core.records.fromarrays()": "reference/generated/numpy.core.records.fromarrays.html", "core.records.fromfile()": "reference/generated/numpy.core.records.fromfile.html", "core.records.fromrecords()": "reference/generated/numpy.core.records.fromrecords.html", "core.records.fromstring()": "reference/generated/numpy.core.records.fromstring.html", "CPU/SIMD Optimizations": "reference/simd/index.html", "CT": "reference/routines.fft.html", "Data type routines": "reference/routines.dtype.html", "Data types": "user/basics.types.html", "DataSource.abspath()": "reference/generated/numpy.datasource.abspath.html", "DataSource.exists()": "reference/generated/numpy.datasource.exists.html", "DataSource.open()": "reference/generated/numpy.datasource.open.html", "Datetime Support Functions": "reference/routines.datetime.html", "deletechars": "user/basics.io.genfromtxt.html", "Development workflow": "dev/development_workflow.html", "distutils.ccompiler.CCompiler_compile()": "reference/generated/numpy.distutils.ccompiler.ccompiler_compile.html", "distutils.ccompiler.CCompiler_customize()": "reference/generated/numpy.distutils.ccompiler.ccompiler_customize.html", "distutils.ccompiler.CCompiler_customize_cmd()": "reference/generated/numpy.distutils.ccompiler.ccompiler_customize_cmd.html", "distutils.ccompiler.CCompiler_cxx_compiler()": "reference/generated/numpy.distutils.ccompiler.ccompiler_cxx_compiler.html", "distutils.ccompiler.CCompiler_find_executables()": "reference/generated/numpy.distutils.ccompiler.ccompiler_find_executables.html", "distutils.ccompiler.CCompiler_get_version()": "reference/generated/numpy.distutils.ccompiler.ccompiler_get_version.html", "distutils.ccompiler.CCompiler_object_filenames()": "reference/generated/numpy.distutils.ccompiler.ccompiler_object_filenames.html", "distutils.ccompiler.CCompiler_show_customization()": "reference/generated/numpy.distutils.ccompiler.ccompiler_show_customization.html", "distutils.ccompiler.CCompiler_spawn()": "reference/generated/numpy.distutils.ccompiler.ccompiler_spawn.html", "distutils.ccompiler.gen_lib_options()": "reference/generated/numpy.distutils.ccompiler.gen_lib_options.html", "distutils.ccompiler.new_compiler()": "reference/generated/numpy.distutils.ccompiler.new_compiler.html", "distutils.ccompiler.replace_method()": "reference/generated/numpy.distutils.ccompiler.replace_method.html", "distutils.ccompiler.simple_version_match()": "reference/generated/numpy.distutils.ccompiler.simple_version_match.html", "distutils.ccompiler_opt.CCompilerOpt.cache_flush()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.cache_flush.html", "distutils.ccompiler_opt.CCompilerOpt.cc_normalize_flags()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.cc_normalize_flags.html", "distutils.ccompiler_opt.CCompilerOpt.conf_features": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.conf_features.html", "distutils.ccompiler_opt.CCompilerOpt.conf_features_partial()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.conf_features_partial.html", "distutils.ccompiler_opt.CCompilerOpt.cpu_baseline_flags()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.cpu_baseline_flags.html", "distutils.ccompiler_opt.CCompilerOpt.cpu_baseline_names()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.cpu_baseline_names.html", "distutils.ccompiler_opt.CCompilerOpt.cpu_dispatch_names()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.cpu_dispatch_names.html", "distutils.ccompiler_opt.CCompilerOpt.dist_compile()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.dist_compile.html", "distutils.ccompiler_opt.CCompilerOpt.dist_info()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.dist_info.html", "distutils.ccompiler_opt.CCompilerOpt.dist_test()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.dist_test.html", "distutils.ccompiler_opt.CCompilerOpt.feature_ahead()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.feature_ahead.html", "distutils.ccompiler_opt.CCompilerOpt.feature_c_preprocessor()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.feature_c_preprocessor.html", "distutils.ccompiler_opt.CCompilerOpt.feature_detect()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.feature_detect.html", "distutils.ccompiler_opt.CCompilerOpt.feature_get_til()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.feature_get_til.html", "distutils.ccompiler_opt.CCompilerOpt.feature_implies()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.feature_implies.html", "distutils.ccompiler_opt.CCompilerOpt.feature_implies_c()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.feature_implies_c.html", "distutils.ccompiler_opt.CCompilerOpt.feature_is_exist()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.feature_is_exist.html", "distutils.ccompiler_opt.CCompilerOpt.feature_names()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.feature_names.html", "distutils.ccompiler_opt.CCompilerOpt.feature_sorted()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.feature_sorted.html", "distutils.ccompiler_opt.CCompilerOpt.feature_untied()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.feature_untied.html", "distutils.ccompiler_opt.CCompilerOpt.generate_dispatch_header()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.generate_dispatch_header.html", "distutils.ccompiler_opt.CCompilerOpt.is_cached()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.is_cached.html", "distutils.ccompiler_opt.CCompilerOpt.parse_targets()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.parse_targets.html", "distutils.ccompiler_opt.CCompilerOpt.try_dispatch()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.try_dispatch.html", "distutils.ccompiler_opt.new_ccompiler_opt()": "reference/generated/numpy.distutils.ccompiler_opt.new_ccompiler_opt.html", "distutils.cpuinfo.cpu": "reference/generated/numpy.distutils.cpuinfo.cpu.html", "distutils.exec_command.exec_command()": "reference/generated/numpy.distutils.exec_command.exec_command.html", "distutils.exec_command.filepath_from_subprocess_output()": "reference/generated/numpy.distutils.exec_command.filepath_from_subprocess_output.html", "distutils.exec_command.find_executable()": "reference/generated/numpy.distutils.exec_command.find_executable.html", "distutils.exec_command.forward_bytes_to_stdout()": "reference/generated/numpy.distutils.exec_command.forward_bytes_to_stdout.html", "distutils.exec_command.get_pythonexe()": "reference/generated/numpy.distutils.exec_command.get_pythonexe.html", "distutils.exec_command.temp_file_name()": "reference/generated/numpy.distutils.exec_command.temp_file_name.html", "distutils.log.set_verbosity()": "reference/generated/numpy.distutils.log.set_verbosity.html", "distutils.system_info.get_info()": "reference/generated/numpy.distutils.system_info.get_info.html", "distutils.system_info.get_standard_file()": "reference/generated/numpy.distutils.system_info.get_standard_file.html", "double npy_half_to_double()": "reference/c-api/coremath.html#c.npy_half_to_double", "double npy_spacing()": "reference/c-api/coremath.html#c.npy_spacing", "double PyArray_GetPriority()": "reference/c-api/array.html#c.PyArray_GetPriority", "double random_beta()": "reference/random/c-api.html#c.random_beta", "double random_chisquare()": "reference/random/c-api.html#c.random_chisquare", "double random_exponential()": "reference/random/c-api.html#c.random_exponential", "double random_f()": "reference/random/c-api.html#c.random_f", "double random_gamma()": "reference/random/c-api.html#c.random_gamma", "double random_gumbel()": "reference/random/c-api.html#c.random_gumbel", "double random_laplace()": "reference/random/c-api.html#c.random_laplace", "double random_logistic()": "reference/random/c-api.html#c.random_logistic", "double random_lognormal()": "reference/random/c-api.html#c.random_lognormal", "double random_noncentral_chisquare()": "reference/random/c-api.html#c.random_noncentral_chisquare", "double random_noncentral_f()": "reference/random/c-api.html#c.random_noncentral_f", "double random_normal()": "reference/random/c-api.html#c.random_normal", "double random_pareto()": "reference/random/c-api.html#c.random_pareto", "double random_power()": "reference/random/c-api.html#c.random_power", "double random_rayleigh()": "reference/random/c-api.html#c.random_rayleigh", "double random_standard_cauchy()": "reference/random/c-api.html#c.random_standard_cauchy", "double random_standard_exponential()": "reference/random/c-api.html#c.random_standard_exponential", "double random_standard_gamma()": "reference/random/c-api.html#c.random_standard_gamma", "double random_standard_normal()": "reference/random/c-api.html#c.random_standard_normal", "double random_standard_t()": "reference/random/c-api.html#c.random_standard_t", "double random_standard_uniform()": "reference/random/c-api.html#c.random_standard_uniform", "double random_triangular()": "reference/random/c-api.html#c.random_triangular", "double random_uniform()": "reference/random/c-api.html#c.random_uniform", "double random_vonmises()": "reference/random/c-api.html#c.random_vonmises", "double random_wald()": "reference/random/c-api.html#c.random_wald", "double random_weibull()": "reference/random/c-api.html#c.random_weibull", "DoxyLimbo()": "dev/howto-docs.html#_CPPv4N9DoxyLimbo9DoxyLimboERK9DoxyLimboI2Tp1NE", "dtype object": "reference/arrays.dtypes.html", "dtype.__class_getitem__()": "reference/generated/numpy.dtype.__class_getitem__.html", "dtype.__ge__()": "reference/generated/numpy.dtype.__ge__.html", "dtype.__gt__()": "reference/generated/numpy.dtype.__gt__.html", "dtype.__le__()": "reference/generated/numpy.dtype.__le__.html", "dtype.__lt__()": "reference/generated/numpy.dtype.__lt__.html", "dtype.__reduce__()": "reference/generated/numpy.dtype.__reduce__.html", "dtype.__setstate__()": "reference/generated/numpy.dtype.__setstate__.html", "dtype.alignment": "reference/generated/numpy.dtype.alignment.html", "dtype.base": "reference/generated/numpy.dtype.base.html", "dtype.byteorder": "reference/generated/numpy.dtype.byteorder.html", "dtype.char": "reference/generated/numpy.dtype.char.html", "dtype.descr": "reference/generated/numpy.dtype.descr.html", "dtype.fields": "reference/generated/numpy.dtype.fields.html", "dtype.flags": "reference/generated/numpy.dtype.flags.html", "dtype.hasobject": "reference/generated/numpy.dtype.hasobject.html", "dtype.isalignedstruct": "reference/generated/numpy.dtype.isalignedstruct.html", "dtype.isbuiltin": "reference/generated/numpy.dtype.isbuiltin.html", "dtype.isnative": "reference/generated/numpy.dtype.isnative.html", "dtype.itemsize": "reference/generated/numpy.dtype.itemsize.html", "dtype.kind": "reference/generated/numpy.dtype.kind.html", "dtype.metadata": "reference/generated/numpy.dtype.metadata.html", "dtype.name": "reference/generated/numpy.dtype.name.html", "dtype.names": "reference/generated/numpy.dtype.names.html", "dtype.ndim": "reference/generated/numpy.dtype.ndim.html", "dtype.newbyteorder()": "reference/generated/numpy.dtype.newbyteorder.html", "dtype.num": "reference/generated/numpy.dtype.num.html", "dtype.shape": "reference/generated/numpy.dtype.shape.html", "dtype.str": "reference/generated/numpy.dtype.str.html", "dtype.subdtype": "reference/generated/numpy.dtype.subdtype.html", "dtype.type": "reference/generated/numpy.dtype.type.html", "Elementary Function": "reference/c-api/generalized-ufuncs.html", "emath.arccos()": "reference/generated/numpy.emath.arccos.html", "emath.arcsin()": "reference/generated/numpy.emath.arcsin.html", "emath.arctanh()": "reference/generated/numpy.emath.arctanh.html", "emath.log()": "reference/generated/numpy.emath.log.html", "emath.log10()": "reference/generated/numpy.emath.log10.html", "emath.log2()": "reference/generated/numpy.emath.log2.html", "emath.logn()": "reference/generated/numpy.emath.logn.html", "emath.power()": "reference/generated/numpy.emath.power.html", "emath.sqrt()": "reference/generated/numpy.emath.sqrt.html", "enum NPY_CASTING": "reference/c-api/array.html#c.NPY_CASTING", "enum NPY_CLIPMODE": "reference/c-api/array.html#c.NPY_CLIPMODE", "enum NPY_ORDER": "reference/c-api/array.html#c.NPY_ORDER", "enum NPY_SCALARKIND": "reference/c-api/array.html#c.NPY_SCALARKIND", "enum NPY_SEARCHSIDE": "reference/c-api/array.html#c.NPY_SEARCHSIDE", "enum NPY_SELECTKIND": "reference/c-api/array.html#c.NPY_SELECTKIND", "enumerator NPY_BOOL": "reference/c-api/dtype.html#c.NPY_BOOL", "enumerator NPY_BOOL_SCALAR": "reference/c-api/array.html#c.NPY_SCALARKIND.NPY_BOOL_SCALAR", "enumerator NPY_BYTE": "reference/c-api/dtype.html#c.NPY_BYTE", "enumerator NPY_CDOUBLE": "reference/c-api/dtype.html#c.NPY_CDOUBLE", "enumerator NPY_CFLOAT": "reference/c-api/dtype.html#c.NPY_CFLOAT", "enumerator NPY_CLIP": "reference/c-api/array.html#c.NPY_CLIPMODE.NPY_CLIP", "enumerator NPY_CLONGDOUBLE": "reference/c-api/dtype.html#c.NPY_CLONGDOUBLE", "enumerator NPY_COMPLEX128": "reference/c-api/dtype.html#c.NPY_COMPLEX128", "enumerator NPY_COMPLEX64": "reference/c-api/dtype.html#c.NPY_COMPLEX64", "enumerator NPY_COMPLEX_SCALAR": "reference/c-api/array.html#c.NPY_SCALARKIND.NPY_COMPLEX_SCALAR", "enumerator NPY_CORDER": "reference/c-api/array.html#c.NPY_ORDER.NPY_CORDER", "enumerator NPY_DATETIME": "reference/c-api/dtype.html#c.NPY_DATETIME", "enumerator NPY_DEFAULT_TYPE": "reference/c-api/dtype.html#c.NPY_DEFAULT_TYPE", "enumerator NPY_DOUBLE": "reference/c-api/dtype.html#c.NPY_DOUBLE", "enumerator NPY_EQUIV_CASTING": "reference/c-api/array.html#c.NPY_CASTING.NPY_EQUIV_CASTING", "enumerator NPY_FLOAT": "reference/c-api/dtype.html#c.NPY_FLOAT", "enumerator NPY_FLOAT16": "reference/c-api/dtype.html#c.NPY_FLOAT16", "enumerator NPY_FLOAT32": "reference/c-api/dtype.html#c.NPY_FLOAT32", "enumerator NPY_FLOAT64": "reference/c-api/dtype.html#c.NPY_FLOAT64", "enumerator NPY_FLOAT_SCALAR": "reference/c-api/array.html#c.NPY_SCALARKIND.NPY_FLOAT_SCALAR", "enumerator NPY_FORTRANORDER": "reference/c-api/array.html#c.NPY_ORDER.NPY_FORTRANORDER", "enumerator NPY_HALF": "reference/c-api/dtype.html#c.NPY_HALF", "enumerator NPY_HEAPSORT": "reference/c-api/array.html#c.NPY_SORTKIND.NPY_HEAPSORT", "enumerator NPY_INT": "reference/c-api/dtype.html#c.NPY_INT", "enumerator NPY_INT16": "reference/c-api/dtype.html#c.NPY_INT16", "enumerator NPY_INT32": "reference/c-api/dtype.html#c.NPY_INT32", "enumerator NPY_INT64": "reference/c-api/dtype.html#c.NPY_INT64", "enumerator NPY_INT8": "reference/c-api/dtype.html#c.NPY_INT8", "enumerator NPY_INTNEG_SCALAR": "reference/c-api/array.html#c.NPY_SCALARKIND.NPY_INTNEG_SCALAR", "enumerator NPY_INTP": "reference/c-api/dtype.html#c.NPY_INTP", "enumerator NPY_INTPOS_SCALAR": "reference/c-api/array.html#c.NPY_SCALARKIND.NPY_INTPOS_SCALAR", "enumerator NPY_KEEPORDER": "reference/c-api/array.html#c.NPY_ORDER.NPY_KEEPORDER", "enumerator NPY_LONG": "reference/c-api/dtype.html#c.NPY_LONG", "enumerator NPY_LONGDOUBLE": "reference/c-api/dtype.html#c.NPY_LONGDOUBLE", "enumerator NPY_LONGLONG": "reference/c-api/dtype.html#c.NPY_LONGLONG", "enumerator NPY_MASK": "reference/c-api/dtype.html#c.NPY_MASK", "enumerator NPY_MERGESORT": "reference/c-api/array.html#c.NPY_SORTKIND.NPY_MERGESORT", "enumerator NPY_NSCALARKINDS": "reference/c-api/array.html#c.NPY_SCALARKIND.NPY_NSCALARKINDS", "enumerator NPY_NSORTS": "reference/c-api/array.html#c.NPY_SORTKIND.NPY_NSORTS", "enumerator NPY_OBJECT": "reference/c-api/dtype.html#c.NPY_OBJECT", "enumerator NPY_OBJECT_SCALAR": "reference/c-api/array.html#c.NPY_SCALARKIND.NPY_OBJECT_SCALAR", "enumerator NPY_SAFE_CASTING": "reference/c-api/array.html#c.NPY_CASTING.NPY_SAFE_CASTING", "enumerator NPY_SAME_KIND_CASTING": "reference/c-api/array.html#c.NPY_CASTING.NPY_SAME_KIND_CASTING", "enumerator NPY_SEARCHRIGHT": "reference/c-api/array.html#c.NPY_SEARCHSIDE.NPY_SEARCHRIGHT", "enumerator NPY_SHORT": "reference/c-api/dtype.html#c.NPY_SHORT", "enumerator NPY_STABLESORT": "reference/c-api/array.html#c.NPY_SORTKIND.NPY_STABLESORT", "enumerator NPY_STRING": "reference/c-api/dtype.html#c.NPY_STRING", "enumerator NPY_TIMEDELTA": "reference/c-api/dtype.html#c.NPY_TIMEDELTA", "enumerator NPY_TYPES": "reference/c-api/dtype.html", "enumerator NPY_UBYTE": "reference/c-api/dtype.html#c.NPY_UBYTE", "enumerator NPY_UINT": "reference/c-api/dtype.html#c.NPY_UINT", "enumerator NPY_UINT16": "reference/c-api/dtype.html#c.NPY_UINT16", "enumerator NPY_UINT32": "reference/c-api/dtype.html#c.NPY_UINT32", "enumerator NPY_UINT64": "reference/c-api/dtype.html#c.NPY_UINT64", "enumerator NPY_UINT8": "reference/c-api/dtype.html#c.NPY_UINT8", "enumerator NPY_UINTP": "reference/c-api/dtype.html#c.NPY_UINTP", "enumerator NPY_ULONG": "reference/c-api/dtype.html#c.NPY_ULONG", "enumerator NPY_ULONGLONG": "reference/c-api/dtype.html#c.NPY_ULONGLONG", "enumerator NPY_UNICODE": "reference/c-api/dtype.html#c.NPY_UNICODE", "enumerator NPY_UNSAFE_CASTING": "reference/c-api/array.html#c.NPY_CASTING.NPY_UNSAFE_CASTING", "enumerator NPY_USHORT": "reference/c-api/dtype.html#c.NPY_USHORT", "enumerator NPY_VOID": "reference/c-api/dtype.html#c.NPY_VOID", "enumerator NPY_WRAP": "reference/c-api/array.html#c.NPY_CLIPMODE.NPY_WRAP", "errstate.__call__()": "reference/generated/numpy.errstate.__call__.html", "exec_command": "reference/generated/numpy.distutils.exec_command.html", "Extending": "reference/random/extending.html", "Extending via CFFI": "reference/random/examples/cffi.html", "Extending via Numba": "reference/random/examples/numba.html", "Extending via Numba and CFFI": "reference/random/examples/numba_cffi.html", "extending.pyx": "reference/random/examples/cython/extending.pyx.html", "extending_distributions.pyx": "reference/random/examples/cython/extending_distributions.pyx.html", "F2PY and Conda on Windows": "f2py/windows/conda.html", "F2PY and PGI Fortran on Windows": "f2py/windows/pgi.html", "F2PY and Windows Intel Fortran": "f2py/windows/intel.html", "F2PY and Windows with MSYS2": "f2py/windows/msys2.html", "F2PY examples": "f2py/f2py-examples.html", "F2PY reference manual": "f2py/f2py-reference.html", "F2PY test suite": "f2py/f2py-testing.html", "F2PY user guide": "f2py/f2py-user.html", "F2PY user guide and reference manual": "f2py/index.html", "fft.fft()": "reference/generated/numpy.fft.fft.html", "fft.fft2()": "reference/generated/numpy.fft.fft2.html", "fft.fftfreq()": "reference/generated/numpy.fft.fftfreq.html", "fft.fftn()": "reference/generated/numpy.fft.fftn.html", "fft.fftshift()": "reference/generated/numpy.fft.fftshift.html", "fft.hfft()": "reference/generated/numpy.fft.hfft.html", "fft.ifft()": "reference/generated/numpy.fft.ifft.html", "fft.ifft2()": "reference/generated/numpy.fft.ifft2.html", "fft.ifftn()": "reference/generated/numpy.fft.ifftn.html", "fft.ifftshift()": "reference/generated/numpy.fft.ifftshift.html", "fft.ihfft()": "reference/generated/numpy.fft.ihfft.html", "fft.irfft()": "reference/generated/numpy.fft.irfft.html", "fft.irfft2()": "reference/generated/numpy.fft.irfft2.html", "fft.irfftn()": "reference/generated/numpy.fft.irfftn.html", "fft.rfft()": "reference/generated/numpy.fft.rfft.html", "fft.rfft2()": "reference/generated/numpy.fft.rfft2.html", "fft.rfftfreq()": "reference/generated/numpy.fft.rfftfreq.html", "fft.rfftn()": "reference/generated/numpy.fft.rfftn.html", "flatiter.base": "reference/generated/numpy.flatiter.base.html", "flatiter.coords": "reference/generated/numpy.flatiter.coords.html", "flatiter.copy()": "reference/generated/numpy.flatiter.copy.html", "flatiter.index": "reference/generated/numpy.flatiter.index.html", "float npy_half_to_float()": "reference/c-api/coremath.html#c.npy_half_to_float", "float random_gamma_f()": "reference/random/c-api.html#c.random_gamma_f", "float random_standard_exponential_f()": "reference/random/c-api.html#c.random_standard_exponential_f", "float random_standard_gamma_f()": "reference/random/c-api.html#c.random_standard_gamma_f", "float random_standard_normal_f()": "reference/random/c-api.html#c.random_standard_normal_f", "float random_standard_uniform_f()": "reference/random/c-api.html#c.random_standard_uniform_f", "Floating point error handling": "reference/routines.err.html", "Fortran 77 programs": "f2py/buildtools/index.html", "Functional programming": "reference/routines.functional.html", "generic.__array__()": "reference/generated/numpy.generic.__array__.html", "generic.__array_interface__": "reference/generated/numpy.generic.__array_interface__.html", "generic.__array_priority__": "reference/generated/numpy.generic.__array_priority__.html", "generic.__array_struct__": "reference/generated/numpy.generic.__array_struct__.html", "generic.__array_wrap__()": "reference/generated/numpy.generic.__array_wrap__.html", "generic.__reduce__()": "reference/generated/numpy.generic.__reduce__.html", "generic.__setstate__()": "reference/generated/numpy.generic.__setstate__.html", "generic.base": "reference/generated/numpy.generic.base.html", "generic.byteswap()": "reference/generated/numpy.generic.byteswap.html", "generic.data": "reference/generated/numpy.generic.data.html", "generic.dtype": "reference/generated/numpy.generic.dtype.html", "generic.flags": "reference/generated/numpy.generic.flags.html", "generic.flat": "reference/generated/numpy.generic.flat.html", "generic.imag": "reference/generated/numpy.generic.imag.html", "generic.itemsize": "reference/generated/numpy.generic.itemsize.html", "generic.ndim": "reference/generated/numpy.generic.ndim.html", "generic.real": "reference/generated/numpy.generic.real.html", "generic.setflags()": "reference/generated/numpy.generic.setflags.html", "generic.shape": "reference/generated/numpy.generic.shape.html", "generic.size": "reference/generated/numpy.generic.size.html", "generic.squeeze()": "reference/generated/numpy.generic.squeeze.html", "generic.strides": "reference/generated/numpy.generic.strides.html", "generic.T": "reference/generated/numpy.generic.t.html", "Get the local copy of the code": "dev/gitwash/following_latest.html", "get_build_temp_dir()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.get_build_temp_dir", "get_config_cmd()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.get_config_cmd", "get_distribution()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.get_distribution", "get_info()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.get_info", "get_subpackage()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.get_subpackage", "get_version()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.get_version", "Git configuration": "dev/gitwash/configure_git.html", "Git for development": "dev/gitwash/index.html", "Global State": "reference/global_state.html", "have_f77c()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.have_f77c", "have_f90c()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.have_f90c", "Hermite Series, \u201cPhysicists\u201d (": "reference/routines.polynomials.hermite.html", "HermiteE Series, \u201cProbabilists\u201d (": "reference/routines.polynomials.hermite_e.html", "How does the CPU dispatcher work?": "reference/simd/how-it-works.html", "How to index": "user/how-to-index.html", "How to write a NumPy how-to": "user/how-to-how-to.html", "I/O with NumPy": "user/basics.io.html", "include statements": "f2py/signature-file.html", "Indexing on": "user/basics.indexing.html", "Indexing routines": "reference/arrays.indexing.html", "Input and output": "reference/routines.io.html", "Install git": "dev/gitwash/git_intro.html", "int **cancastscalarkindto": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.cancastscalarkindto", "int *cancastto": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.cancastto", "int *core_dim_ixs": "reference/c-api/types-and-structures.html#c.PyUFuncObject.core_dim_ixs", "int *core_num_dims": "reference/c-api/types-and-structures.html#c.PyUFuncObject.core_num_dims", "int *core_offsets": "reference/c-api/types-and-structures.html#c.PyUFuncObject.core_offsets", "int alignment": "reference/c-api/types-and-structures.html#c.PyArray_Descr.alignment", "int argmax()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.argmax", "int argmin()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.argmin", "int argsort()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.argsort", "int compare()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.compare", "int core_enabled": "reference/c-api/types-and-structures.html#c.PyUFuncObject.core_enabled", "int core_num_dim_ix": "reference/c-api/types-and-structures.html#c.PyUFuncObject.core_num_dim_ix", "int doxy_javadoc_example()": "dev/howto-docs.html", "int elsize": "reference/c-api/types-and-structures.html#c.NPY_USE_SETITEM.elsize", "int flags": "reference/c-api/types-and-structures.html#c.PyArray_Chunk.flags", "int fromstr()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.fromstr", "int identity": "reference/c-api/types-and-structures.html#c.PyUFuncObject.identity", "int itemsize": "reference/c-api/types-and-structures.html#c.PyArrayInterface.itemsize", "int len": "reference/c-api/types-and-structures.html#c.PyArray_Dims.len", "int nargs": "reference/c-api/types-and-structures.html#c.PyUFuncObject.nargs", "int nd": "reference/c-api/types-and-structures.html#c.PyArrayMultiIterObject.nd", "int nout": "reference/c-api/types-and-structures.html#c.PyUFuncObject.nout", "int npy_clear_floatstatus()": "reference/c-api/coremath.html#c.npy_clear_floatstatus", "int npy_clear_floatstatus_barrier()": "reference/c-api/coremath.html#c.npy_clear_floatstatus_barrier", "int npy_get_floatstatus()": "reference/c-api/coremath.html#c.npy_get_floatstatus", "int npy_get_floatstatus_barrier()": "reference/c-api/coremath.html#c.npy_get_floatstatus_barrier", "int npy_half_eq()": "reference/c-api/coremath.html#c.npy_half_eq", "int npy_half_eq_nonan()": "reference/c-api/coremath.html#c.npy_half_eq_nonan", "int npy_half_ge()": "reference/c-api/coremath.html#c.npy_half_ge", "int npy_half_gt()": "reference/c-api/coremath.html#c.npy_half_gt", "int npy_half_isfinite()": "reference/c-api/coremath.html#c.npy_half_isfinite", "int npy_half_isinf()": "reference/c-api/coremath.html#c.npy_half_isinf", "int npy_half_isnan()": "reference/c-api/coremath.html#c.npy_half_isnan", "int npy_half_iszero()": "reference/c-api/coremath.html#c.npy_half_iszero", "int npy_half_le()": "reference/c-api/coremath.html#c.npy_half_le", "int npy_half_le_nonan()": "reference/c-api/coremath.html#c.npy_half_le_nonan", "int npy_half_lt()": "reference/c-api/coremath.html#c.npy_half_lt", "int npy_half_lt_nonan()": "reference/c-api/coremath.html#c.npy_half_lt_nonan", "int npy_half_ne()": "reference/c-api/coremath.html#c.npy_half_ne", "int npy_half_signbit()": "reference/c-api/coremath.html#c.npy_half_signbit", "int NpyIter_CreateCompatibleStrides()": "reference/c-api/iterator.html#c.NpyIter_CreateCompatibleStrides", "int NpyIter_Deallocate()": "reference/c-api/iterator.html#c.NpyIter_Deallocate", "int NpyIter_EnableExternalLoop()": "reference/c-api/iterator.html#c.NpyIter_EnableExternalLoop", "int NpyIter_GetNDim()": "reference/c-api/iterator.html#c.NpyIter_GetNDim", "int NpyIter_GetNOp()": "reference/c-api/iterator.html#c.NpyIter_GetNOp", "int NpyIter_GetShape()": "reference/c-api/iterator.html#c.NpyIter_GetShape", "int NpyIter_GotoIndex()": "reference/c-api/iterator.html#c.NpyIter_GotoIndex", "int NpyIter_GotoIterIndex()": "reference/c-api/iterator.html#c.NpyIter_GotoIterIndex", "int NpyIter_GotoMultiIndex()": "reference/c-api/iterator.html#c.NpyIter_GotoMultiIndex", "int NpyIter_RemoveAxis()": "reference/c-api/iterator.html#c.NpyIter_RemoveAxis", "int NpyIter_RemoveMultiIndex()": "reference/c-api/iterator.html#c.NpyIter_RemoveMultiIndex", "int NpyIter_Reset()": "reference/c-api/iterator.html#c.NpyIter_Reset", "int NpyIter_ResetBasePointers()": "reference/c-api/iterator.html#c.NpyIter_ResetBasePointers", "int NpyIter_ResetToIterIndexRange()": "reference/c-api/iterator.html#c.NpyIter_ResetToIterIndexRange", "int ntypes": "reference/c-api/types-and-structures.html#c.PyUFuncObject.ntypes", "int PyArray_AxisConverter()": "reference/c-api/array.html#c.PyArray_AxisConverter", "int PyArray_BoolConverter()": "reference/c-api/array.html#c.PyArray_BoolConverter", "int PyArray_Broadcast()": "reference/c-api/array.html#c.PyArray_Broadcast", "int PyArray_BufferConverter()": "reference/c-api/array.html#c.PyArray_BufferConverter", "int PyArray_ByteorderConverter()": "reference/c-api/array.html#c.PyArray_ByteorderConverter", "int PyArray_CanCastArrayTo()": "reference/c-api/array.html#c.PyArray_CanCastArrayTo", "int PyArray_CanCastSafely()": "reference/c-api/array.html#c.PyArray_CanCastSafely", "int PyArray_CanCastTo()": "reference/c-api/array.html#c.PyArray_CanCastTo", "int PyArray_CanCastTypeTo()": "reference/c-api/array.html#c.PyArray_CanCastTypeTo", "int PyArray_CanCoerceScalar()": "reference/c-api/array.html#c.PyArray_CanCoerceScalar", "int PyArray_CastingConverter()": "reference/c-api/array.html#c.PyArray_CastingConverter", "int PyArray_CastTo()": "reference/c-api/array.html#c.PyArray_CastTo", "int PyArray_CheckAnyScalar()": "reference/c-api/array.html#c.PyArray_CheckAnyScalar", "int PyArray_CheckExact()": "reference/c-api/array.html#c.PyArray_CheckExact", "int PyArray_CheckScalar()": "reference/c-api/array.html#c.PyArray_CheckScalar", "int PyArray_ClipmodeConverter()": "reference/c-api/array.html#c.PyArray_ClipmodeConverter", "int PyArray_CompareLists()": "reference/c-api/array.html#c.PyArray_CompareLists", "int PyArray_ConvertClipmodeSequence()": "reference/c-api/array.html#c.PyArray_ConvertClipmodeSequence", "int PyArray_CopyInto()": "reference/c-api/array.html#c.PyArray_CopyInto", "int PyArray_CopyObject()": "reference/c-api/array.html#c.PyArray_CopyObject", "int Pyarray_DescrAlignConverter()": "reference/c-api/array.html#c.Pyarray_DescrAlignConverter", "int Pyarray_DescrAlignConverter2()": "reference/c-api/array.html#c.Pyarray_DescrAlignConverter2", "int PyArray_DescrConverter()": "reference/c-api/array.html#c.PyArray_DescrConverter", "int PyArray_DescrConverter2()": "reference/c-api/array.html#c.PyArray_DescrConverter2", "int PyArray_Dump()": "reference/c-api/array.html#c.PyArray_Dump", "int PyArray_EquivByteorders()": "reference/c-api/array.html#c.PyArray_EquivByteorders", "int PyArray_FailUnlessWriteable()": "reference/c-api/array.html#c.PyArray_FailUnlessWriteable", "int PyArray_FillWithScalar()": "reference/c-api/array.html#c.PyArray_FillWithScalar", "int PyArray_FinalizeFunc()": "reference/c-api/array.html#c.PyArray_FinalizeFunc", "int PyArray_FLAGS()": "reference/c-api/array.html#c.PyArray_FLAGS", "int PyArray_Free()": "reference/c-api/array.html#c.PyArray_Free", "int PyArray_GetArrayParamsFromObject()": "reference/c-api/array.html#c.PyArray_GetArrayParamsFromObject", "int PyArray_GetEndianness()": "reference/c-api/config.html#c.PyArray_GetEndianness", "int PyArray_HasArrayInterface()": "reference/c-api/array.html#c.PyArray_HasArrayInterface", "int PyArray_HasArrayInterfaceType()": "reference/c-api/array.html#c.PyArray_HasArrayInterfaceType", "int PyArray_HASFIELDS()": "reference/c-api/array.html#c.PyArray_HASFIELDS", "int PyArray_IntpConverter()": "reference/c-api/array.html#c.PyArray_IntpConverter", "int PyArray_IntpFromSequence()": "reference/c-api/array.html#c.PyArray_IntpFromSequence", "int PyArray_IS_C_CONTIGUOUS()": "reference/c-api/array.html#c.PyArray_IS_C_CONTIGUOUS", "int PyArray_IS_F_CONTIGUOUS()": "reference/c-api/array.html#c.PyArray_IS_F_CONTIGUOUS", "int PyArray_ISALIGNED()": "reference/c-api/array.html#c.PyArray_ISALIGNED", "int PyArray_IsAnyScalar()": "reference/c-api/array.html#c.PyArray_IsAnyScalar", "int PyArray_ISBEHAVED()": "reference/c-api/array.html#c.PyArray_ISBEHAVED", "int PyArray_ISBEHAVED_RO()": "reference/c-api/array.html#c.PyArray_ISBEHAVED_RO", "int PyArray_ISBOOL()": "reference/c-api/array.html#c.PyArray_ISBOOL", "int PyArray_ISBYTESWAPPED()": "reference/c-api/array.html#c.PyArray_ISBYTESWAPPED", "int PyArray_ISCARRAY()": "reference/c-api/array.html#c.PyArray_ISCARRAY", "int PyArray_ISCARRAY_RO()": "reference/c-api/array.html#c.PyArray_ISCARRAY_RO", "int PyArray_ISCOMPLEX()": "reference/c-api/array.html#c.PyArray_ISCOMPLEX", "int PyArray_ISEXTENDED()": "reference/c-api/array.html#c.PyArray_ISEXTENDED", "int PyArray_ISFARRAY()": "reference/c-api/array.html#c.PyArray_ISFARRAY", "int PyArray_ISFARRAY_RO()": "reference/c-api/array.html#c.PyArray_ISFARRAY_RO", "int PyArray_ISFLEXIBLE()": "reference/c-api/array.html#c.PyArray_ISFLEXIBLE", "int PyArray_ISFLOAT()": "reference/c-api/array.html#c.PyArray_ISFLOAT", "int PyArray_ISFORTRAN()": "reference/c-api/array.html#c.PyArray_ISFORTRAN", "int PyArray_ISINTEGER()": "reference/c-api/array.html#c.PyArray_ISINTEGER", "int PyArray_ISNOTSWAPPED()": "reference/c-api/array.html#c.PyArray_ISNOTSWAPPED", "int PyArray_ISNUMBER()": "reference/c-api/array.html#c.PyArray_ISNUMBER", "int PyArray_ISOBJECT()": "reference/c-api/array.html#c.PyArray_ISOBJECT", "int PyArray_ISONESEGMENT()": "reference/c-api/array.html#c.PyArray_ISONESEGMENT", "int PyArray_ISPYTHON()": "reference/c-api/array.html#c.PyArray_ISPYTHON", "int PyArray_IsPythonNumber()": "reference/c-api/array.html#c.PyArray_IsPythonNumber", "int PyArray_IsPythonScalar()": "reference/c-api/array.html#c.PyArray_IsPythonScalar", "int PyArray_ISSIGNED()": "reference/c-api/array.html#c.PyArray_ISSIGNED", "int PyArray_ISSTRING()": "reference/c-api/array.html#c.PyArray_ISSTRING", "int PyArray_ISUNSIGNED()": "reference/c-api/array.html#c.PyArray_ISUNSIGNED", "int PyArray_ISUSERDEF()": "reference/c-api/array.html#c.PyArray_ISUSERDEF", "int PyArray_ISWRITEABLE()": "reference/c-api/array.html#c.PyArray_ISWRITEABLE", "int PyArray_IsZeroDim()": "reference/c-api/array.html#c.PyArray_IsZeroDim", "int PyArray_ITER_NOTDONE()": "reference/c-api/array.html#c.PyArray_ITER_NOTDONE", "int PyArray_MoveInto()": "reference/c-api/array.html#c.PyArray_MoveInto", "int PyArray_MultiIter_NOTDONE()": "reference/c-api/array.html#c.PyArray_MultiIter_NOTDONE", "int PyArray_MultiplyIntList()": "reference/c-api/array.html#c.PyArray_MultiplyIntList", "int PyArray_NDIM()": "reference/c-api/array.html", "int PyArray_ObjectType()": "reference/c-api/array.html#c.PyArray_ObjectType", "int PyArray_OrderConverter()": "reference/c-api/array.html#c.PyArray_OrderConverter", "int PyArray_OutputConverter()": "reference/c-api/array.html#c.PyArray_OutputConverter", "int PyArray_Partition()": "reference/c-api/array.html#c.PyArray_Partition", "int PyArray_RegisterCanCast()": "reference/c-api/array.html#c.PyArray_RegisterCanCast", "int PyArray_RegisterCastFunc()": "reference/c-api/array.html#c.PyArray_RegisterCastFunc", "int PyArray_RegisterDataType()": "reference/c-api/array.html#c.PyArray_RegisterDataType", "int PyArray_RemoveSmallest()": "reference/c-api/array.html#c.PyArray_RemoveSmallest", "int PyArray_ResolveWritebackIfCopy()": "reference/c-api/array.html#c.PyArray_ResolveWritebackIfCopy", "int PyArray_SearchsideConverter()": "reference/c-api/array.html#c.PyArray_SearchsideConverter", "int PyArray_SetBaseObject()": "reference/c-api/array.html#c.PyArray_SetBaseObject", "int PyArray_SetField()": "reference/c-api/array.html#c.PyArray_SetField", "int PyArray_SETITEM()": "reference/c-api/array.html#c.PyArray_SETITEM", "int PyArray_SetWritebackIfCopyBase()": "reference/c-api/array.html#c.PyArray_SetWritebackIfCopyBase", "int PyArray_SortkindConverter()": "reference/c-api/array.html#c.PyArray_SortkindConverter", "int PyArray_TYPE()": "reference/c-api/array.html#c.PyArray_TYPE", "int PyArray_TypeNumFromName()": "reference/c-api/array.html#c.PyArray_TypeNumFromName", "int PyArray_TypestrConvert()": "reference/c-api/array.html#c.PyArray_TypestrConvert", "int PyArray_ValidType()": "reference/c-api/array.html#c.PyArray_ValidType", "int PyArray_XDECREF()": "reference/c-api/array.html#c.PyArray_XDECREF", "int PyArrayIter_Check()": "reference/c-api/array.html#c.PyArrayIter_Check", "int PyArrayNeighborhoodIter_Next()": "reference/c-api/array.html#c.PyArrayNeighborhoodIter_Next", "int PyArrayNeighborhoodIter_Reset()": "reference/c-api/array.html#c.PyArrayNeighborhoodIter_Reset", "int PyDataType_FLAGCHK()": "reference/c-api/types-and-structures.html#c.NPY_USE_SETITEM.PyDataType_FLAGCHK", "int PyDataType_HASFIELDS()": "reference/c-api/array.html#c.PyDataType_HASFIELDS", "int PyDataType_ISBOOL()": "reference/c-api/array.html#c.PyDataType_ISBOOL", "int PyDataType_ISCOMPLEX()": "reference/c-api/array.html#c.PyDataType_ISCOMPLEX", "int PyDataType_ISEXTENDED()": "reference/c-api/array.html#c.PyDataType_ISEXTENDED", "int PyDataType_ISFLEXIBLE()": "reference/c-api/array.html#c.PyDataType_ISFLEXIBLE", "int PyDataType_ISFLOAT()": "reference/c-api/array.html#c.PyDataType_ISFLOAT", "int PyDataType_ISINTEGER()": "reference/c-api/array.html#c.PyDataType_ISINTEGER", "int PyDataType_ISNUMBER()": "reference/c-api/array.html#c.PyDataType_ISNUMBER", "int PyDataType_ISOBJECT()": "reference/c-api/array.html#c.PyDataType_ISOBJECT", "int PyDataType_ISPYTHON()": "reference/c-api/array.html#c.PyDataType_ISPYTHON", "int PyDataType_ISSIGNED()": "reference/c-api/array.html#c.PyDataType_ISSIGNED", "int PyDataType_ISSTRING()": "reference/c-api/array.html#c.PyDataType_ISSTRING", "int PyDataType_ISUNSIGNED()": "reference/c-api/array.html#c.PyDataType_ISUNSIGNED", "int PyDataType_ISUNSIZED()": "reference/c-api/array.html#c.PyDataType_ISUNSIZED", "int PyDataType_ISUSERDEF()": "reference/c-api/array.html#c.PyDataType_ISUSERDEF", "int PyDataType_REFCHK()": "reference/c-api/types-and-structures.html#c.NPY_USE_SETITEM.PyDataType_REFCHK", "int PyModule_AddIntConstant()": "user/c-info.how-to-extend.html#c.PyModule_AddIntConstant", "int PyModule_AddObject()": "user/c-info.how-to-extend.html", "int PyModule_AddStringConstant()": "user/c-info.how-to-extend.html#c.PyModule_AddStringConstant", "int PyTypeNum_ISBOOL()": "reference/c-api/array.html#c.PyTypeNum_ISBOOL", "int PyTypeNum_ISCOMPLEX()": "reference/c-api/array.html#c.PyTypeNum_ISCOMPLEX", "int PyTypeNum_ISEXTENDED()": "reference/c-api/array.html#c.PyTypeNum_ISEXTENDED", "int PyTypeNum_ISFLEXIBLE()": "reference/c-api/array.html#c.PyTypeNum_ISFLEXIBLE", "int PyTypeNum_ISFLOAT()": "reference/c-api/array.html#c.PyTypeNum_ISFLOAT", "int PyTypeNum_ISINTEGER()": "reference/c-api/array.html#c.PyTypeNum_ISINTEGER", "int PyTypeNum_ISNUMBER()": "reference/c-api/array.html#c.PyTypeNum_ISNUMBER", "int PyTypeNum_ISOBJECT()": "reference/c-api/array.html#c.PyTypeNum_ISOBJECT", "int PyTypeNum_ISPYTHON()": "reference/c-api/array.html#c.PyTypeNum_ISPYTHON", "int PyTypeNum_ISSIGNED()": "reference/c-api/array.html#c.PyTypeNum_ISSIGNED", "int PyTypeNum_ISSTRING()": "reference/c-api/array.html#c.PyTypeNum_ISSTRING", "int PyTypeNum_ISUSERDEF()": "reference/c-api/array.html#c.PyTypeNum_ISUSERDEF", "int PyUFunc_checkfperr()": "reference/c-api/ufunc.html#c.PyUFunc_checkfperr", "int PyUFunc_RegisterLoopForDescr()": "reference/c-api/ufunc.html#c.PyUFunc_RegisterLoopForDescr", "int PyUFunc_RegisterLoopForType()": "reference/c-api/ufunc.html#c.PyUFunc_RegisterLoopForType", "int PyUFunc_ReplaceLoopBySignature()": "reference/c-api/ufunc.html#c.PyUFunc_ReplaceLoopBySignature", "int random_multivariate_hypergeometric_count()": "reference/random/c-api.html#c.random_multivariate_hypergeometric_count", "int reserved1": "reference/c-api/types-and-structures.html#c.PyUFuncObject.reserved1", "int scanfunc()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.scanfunc", "int setitem()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.setitem", "int sort()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.sort", "Internal organization of NumPy arrays": "dev/internals.html", "Interoperability with NumPy": "user/basics.interoperability.html", "Is the intended behavior clear under all conditions? Some things to watch:": "dev/reviewer_guidelines.html", "is_array()": "reference/swig.interface-file.html", "Iterating Over Arrays": "reference/arrays.nditer.html", "Laguerre Series (": "reference/routines.polynomials.laguerre.html", "Legendre Series (": "reference/routines.polynomials.legendre.html", "lib.format.descr_to_dtype()": "reference/generated/numpy.lib.format.descr_to_dtype.html", "lib.format.dtype_to_descr()": "reference/generated/numpy.lib.format.dtype_to_descr.html", "lib.format.header_data_from_array_1_0()": "reference/generated/numpy.lib.format.header_data_from_array_1_0.html", "lib.format.magic()": "reference/generated/numpy.lib.format.magic.html", "lib.format.open_memmap()": "reference/generated/numpy.lib.format.open_memmap.html", "lib.format.read_array()": "reference/generated/numpy.lib.format.read_array.html", "lib.format.read_array_header_1_0()": "reference/generated/numpy.lib.format.read_array_header_1_0.html", "lib.format.read_array_header_2_0()": "reference/generated/numpy.lib.format.read_array_header_2_0.html", "lib.format.read_magic()": "reference/generated/numpy.lib.format.read_magic.html", "lib.format.write_array()": "reference/generated/numpy.lib.format.write_array.html", "lib.format.write_array_header_1_0()": "reference/generated/numpy.lib.format.write_array_header_1_0.html", "lib.format.write_array_header_2_0()": "reference/generated/numpy.lib.format.write_array_header_2_0.html", "lib.stride_tricks.as_strided()": "reference/generated/numpy.lib.stride_tricks.as_strided.html", "lib.stride_tricks.sliding_window_view()": "reference/generated/numpy.lib.stride_tricks.sliding_window_view.html", "linalg.cholesky()": "reference/generated/numpy.linalg.cholesky.html", "linalg.cond()": "reference/generated/numpy.linalg.cond.html", "linalg.det()": "reference/generated/numpy.linalg.det.html", "linalg.eig()": "reference/generated/numpy.linalg.eig.html", "linalg.eigh()": "reference/generated/numpy.linalg.eigh.html", "linalg.eigvals()": "reference/generated/numpy.linalg.eigvals.html", "linalg.eigvalsh()": "reference/generated/numpy.linalg.eigvalsh.html", "linalg.inv()": "reference/generated/numpy.linalg.inv.html", "linalg.LinAlgError": "reference/generated/numpy.linalg.linalgerror.html", "linalg.lstsq()": "reference/generated/numpy.linalg.lstsq.html", "linalg.matrix_power()": "reference/generated/numpy.linalg.matrix_power.html", "linalg.matrix_rank()": "reference/generated/numpy.linalg.matrix_rank.html", "linalg.multi_dot()": "reference/generated/numpy.linalg.multi_dot.html", "linalg.norm()": "reference/generated/numpy.linalg.norm.html", "linalg.pinv()": "reference/generated/numpy.linalg.pinv.html", "linalg.qr()": "reference/generated/numpy.linalg.qr.html", "linalg.slogdet()": "reference/generated/numpy.linalg.slogdet.html", "linalg.solve()": "reference/generated/numpy.linalg.solve.html", "linalg.svd()": "reference/generated/numpy.linalg.svd.html", "linalg.tensorinv()": "reference/generated/numpy.linalg.tensorinv.html", "linalg.tensorsolve()": "reference/generated/numpy.linalg.tensorsolve.html", "Linear algebra (": "reference/routines.linalg.html", "Logic functions": "reference/routines.logic.html", "ma.all()": "reference/generated/numpy.ma.all.html", "ma.allclose()": "reference/generated/numpy.ma.allclose.html", "ma.allequal()": "reference/generated/numpy.ma.allequal.html", "ma.anom()": "reference/generated/numpy.ma.anom.html", "ma.anomalies()": "reference/generated/numpy.ma.anomalies.html", "ma.any()": "reference/generated/numpy.ma.any.html", "ma.append()": "reference/generated/numpy.ma.append.html", "ma.apply_along_axis()": "reference/generated/numpy.ma.apply_along_axis.html", "ma.apply_over_axes()": "reference/generated/numpy.ma.apply_over_axes.html", "ma.arange()": "reference/generated/numpy.ma.arange.html", "ma.argmax()": "reference/generated/numpy.ma.argmax.html", "ma.argmin()": "reference/generated/numpy.ma.argmin.html", "ma.argsort()": "reference/generated/numpy.ma.argsort.html", "ma.around": "reference/generated/numpy.ma.around.html", "ma.array()": "reference/generated/numpy.ma.array.html", "ma.asanyarray()": "reference/generated/numpy.ma.asanyarray.html", "ma.asarray()": "reference/generated/numpy.ma.asarray.html", "ma.atleast_1d()": "reference/generated/numpy.ma.atleast_1d.html", "ma.atleast_2d()": "reference/generated/numpy.ma.atleast_2d.html", "ma.atleast_3d()": "reference/generated/numpy.ma.atleast_3d.html", "ma.average()": "reference/generated/numpy.ma.average.html", "ma.choose()": "reference/generated/numpy.ma.choose.html", "ma.clip()": "reference/generated/numpy.ma.clip.html", "ma.clump_masked()": "reference/generated/numpy.ma.clump_masked.html", "ma.clump_unmasked()": "reference/generated/numpy.ma.clump_unmasked.html", "ma.column_stack()": "reference/generated/numpy.ma.column_stack.html", "ma.common_fill_value()": "reference/generated/numpy.ma.common_fill_value.html", "ma.compress_cols()": "reference/generated/numpy.ma.compress_cols.html", "ma.compress_rowcols()": "reference/generated/numpy.ma.compress_rowcols.html", "ma.compress_rows()": "reference/generated/numpy.ma.compress_rows.html", "ma.compressed()": "reference/generated/numpy.ma.compressed.html", "ma.concatenate()": "reference/generated/numpy.ma.concatenate.html", "ma.conjugate()": "reference/generated/numpy.ma.conjugate.html", "ma.copy()": "reference/generated/numpy.ma.copy.html", "ma.corrcoef()": "reference/generated/numpy.ma.corrcoef.html", "ma.count()": "reference/generated/numpy.ma.count.html", "ma.count_masked()": "reference/generated/numpy.ma.count_masked.html", "ma.cov()": "reference/generated/numpy.ma.cov.html", "ma.cumprod()": "reference/generated/numpy.ma.cumprod.html", "ma.cumsum()": "reference/generated/numpy.ma.cumsum.html", "ma.default_fill_value()": "reference/generated/numpy.ma.default_fill_value.html", "ma.diag()": "reference/generated/numpy.ma.diag.html", "ma.diff()": "reference/generated/numpy.ma.diff.html", "ma.dot()": "reference/generated/numpy.ma.dot.html", "ma.dstack()": "reference/generated/numpy.ma.dstack.html", "ma.ediff1d()": "reference/generated/numpy.ma.ediff1d.html", "ma.empty()": "reference/generated/numpy.ma.empty.html", "ma.empty_like()": "reference/generated/numpy.ma.empty_like.html", "ma.expand_dims()": "reference/generated/numpy.ma.expand_dims.html", "ma.filled()": "reference/generated/numpy.ma.filled.html", "ma.fix_invalid()": "reference/generated/numpy.ma.fix_invalid.html", "ma.flatnotmasked_contiguous()": "reference/generated/numpy.ma.flatnotmasked_contiguous.html", "ma.flatnotmasked_edges()": "reference/generated/numpy.ma.flatnotmasked_edges.html", "ma.frombuffer()": "reference/generated/numpy.ma.frombuffer.html", "ma.fromfunction()": "reference/generated/numpy.ma.fromfunction.html", "ma.getdata()": "reference/generated/numpy.ma.getdata.html", "ma.getmask()": "reference/generated/numpy.ma.getmask.html", "ma.getmaskarray()": "reference/generated/numpy.ma.getmaskarray.html", "ma.harden_mask()": "reference/generated/numpy.ma.harden_mask.html", "ma.hsplit()": "reference/generated/numpy.ma.hsplit.html", "ma.hstack()": "reference/generated/numpy.ma.hstack.html", "ma.identity()": "reference/generated/numpy.ma.identity.html", "ma.indices()": "reference/generated/numpy.ma.indices.html", "ma.inner()": "reference/generated/numpy.ma.inner.html", "ma.innerproduct()": "reference/generated/numpy.ma.innerproduct.html", "ma.is_mask()": "reference/generated/numpy.ma.is_mask.html", "ma.is_masked()": "reference/generated/numpy.ma.is_masked.html", "ma.isarray()": "reference/generated/numpy.ma.isarray.html", "ma.isMA()": "reference/generated/numpy.ma.isma.html", "ma.isMaskedArray()": "reference/generated/numpy.ma.ismaskedarray.html", "ma.make_mask()": "reference/generated/numpy.ma.make_mask.html", "ma.make_mask_descr()": "reference/generated/numpy.ma.make_mask_descr.html", "ma.make_mask_none()": "reference/generated/numpy.ma.make_mask_none.html", "ma.mask_cols()": "reference/generated/numpy.ma.mask_cols.html", "ma.mask_or()": "reference/generated/numpy.ma.mask_or.html", "ma.mask_rowcols()": "reference/generated/numpy.ma.mask_rowcols.html", "ma.mask_rows()": "reference/generated/numpy.ma.mask_rows.html", "ma.masked_all()": "reference/generated/numpy.ma.masked_all.html", "ma.masked_all_like()": "reference/generated/numpy.ma.masked_all_like.html", "ma.masked_equal()": "reference/generated/numpy.ma.masked_equal.html", "ma.masked_greater()": "reference/generated/numpy.ma.masked_greater.html", "ma.masked_greater_equal()": "reference/generated/numpy.ma.masked_greater_equal.html", "ma.masked_inside()": "reference/generated/numpy.ma.masked_inside.html", "ma.masked_invalid()": "reference/generated/numpy.ma.masked_invalid.html", "ma.masked_less()": "reference/generated/numpy.ma.masked_less.html", "ma.masked_less_equal()": "reference/generated/numpy.ma.masked_less_equal.html", "ma.masked_not_equal()": "reference/generated/numpy.ma.masked_not_equal.html", "ma.masked_object()": "reference/generated/numpy.ma.masked_object.html", "ma.masked_outside()": "reference/generated/numpy.ma.masked_outside.html", "ma.masked_values()": "reference/generated/numpy.ma.masked_values.html", "ma.masked_where()": "reference/generated/numpy.ma.masked_where.html", "ma.MaskedArray.__abs__()": "reference/generated/numpy.ma.maskedarray.__abs__.html", "ma.MaskedArray.__add__()": "reference/generated/numpy.ma.maskedarray.__add__.html", "ma.MaskedArray.__and__()": "reference/generated/numpy.ma.maskedarray.__and__.html", "ma.MaskedArray.__array__()": "reference/generated/numpy.ma.maskedarray.__array__.html", "ma.MaskedArray.__array_priority__": "reference/generated/numpy.ma.maskedarray.__array_priority__.html", "ma.MaskedArray.__array_wrap__()": "reference/generated/numpy.ma.maskedarray.__array_wrap__.html", "ma.MaskedArray.__bool__()": "reference/generated/numpy.ma.maskedarray.__bool__.html", "ma.MaskedArray.__contains__()": "reference/generated/numpy.ma.maskedarray.__contains__.html", "ma.MaskedArray.__copy__()": "reference/generated/numpy.ma.maskedarray.__copy__.html", "ma.MaskedArray.__deepcopy__()": "reference/generated/numpy.ma.maskedarray.__deepcopy__.html", "ma.MaskedArray.__delitem__()": "reference/generated/numpy.ma.maskedarray.__delitem__.html", "ma.MaskedArray.__div__()": "reference/generated/numpy.ma.maskedarray.__div__.html", "ma.MaskedArray.__divmod__()": "reference/generated/numpy.ma.maskedarray.__divmod__.html", "ma.MaskedArray.__eq__()": "reference/generated/numpy.ma.maskedarray.__eq__.html", "ma.MaskedArray.__float__()": "reference/generated/numpy.ma.maskedarray.__float__.html", "ma.MaskedArray.__floordiv__()": "reference/generated/numpy.ma.maskedarray.__floordiv__.html", "ma.MaskedArray.__ge__()": "reference/generated/numpy.ma.maskedarray.__ge__.html", "ma.MaskedArray.__getitem__()": "reference/generated/numpy.ma.maskedarray.__getitem__.html", "ma.MaskedArray.__getstate__()": "reference/generated/numpy.ma.maskedarray.__getstate__.html", "ma.MaskedArray.__gt__()": "reference/generated/numpy.ma.maskedarray.__gt__.html", "ma.MaskedArray.__iadd__()": "reference/generated/numpy.ma.maskedarray.__iadd__.html", "ma.MaskedArray.__iand__()": "reference/generated/numpy.ma.maskedarray.__iand__.html", "ma.MaskedArray.__idiv__()": "reference/generated/numpy.ma.maskedarray.__idiv__.html", "ma.MaskedArray.__ifloordiv__()": "reference/generated/numpy.ma.maskedarray.__ifloordiv__.html", "ma.MaskedArray.__ilshift__()": "reference/generated/numpy.ma.maskedarray.__ilshift__.html", "ma.MaskedArray.__imod__()": "reference/generated/numpy.ma.maskedarray.__imod__.html", "ma.MaskedArray.__imul__()": "reference/generated/numpy.ma.maskedarray.__imul__.html", "ma.MaskedArray.__int__()": "reference/generated/numpy.ma.maskedarray.__int__.html", "ma.MaskedArray.__ior__()": "reference/generated/numpy.ma.maskedarray.__ior__.html", "ma.MaskedArray.__ipow__()": "reference/generated/numpy.ma.maskedarray.__ipow__.html", "ma.MaskedArray.__irshift__()": "reference/generated/numpy.ma.maskedarray.__irshift__.html", "ma.MaskedArray.__isub__()": "reference/generated/numpy.ma.maskedarray.__isub__.html", "ma.MaskedArray.__itruediv__()": "reference/generated/numpy.ma.maskedarray.__itruediv__.html", "ma.MaskedArray.__ixor__()": "reference/generated/numpy.ma.maskedarray.__ixor__.html", "ma.MaskedArray.__le__()": "reference/generated/numpy.ma.maskedarray.__le__.html", "ma.MaskedArray.__len__()": "reference/generated/numpy.ma.maskedarray.__len__.html", "ma.MaskedArray.__lshift__()": "reference/generated/numpy.ma.maskedarray.__lshift__.html", "ma.MaskedArray.__lt__()": "reference/generated/numpy.ma.maskedarray.__lt__.html", "ma.MaskedArray.__mod__()": "reference/generated/numpy.ma.maskedarray.__mod__.html", "ma.MaskedArray.__mul__()": "reference/generated/numpy.ma.maskedarray.__mul__.html", "ma.MaskedArray.__ne__()": "reference/generated/numpy.ma.maskedarray.__ne__.html", "ma.MaskedArray.__or__()": "reference/generated/numpy.ma.maskedarray.__or__.html", "ma.MaskedArray.__pow__()": "reference/generated/numpy.ma.maskedarray.__pow__.html", "ma.MaskedArray.__radd__()": "reference/generated/numpy.ma.maskedarray.__radd__.html", "ma.MaskedArray.__rand__()": "reference/generated/numpy.ma.maskedarray.__rand__.html", "ma.MaskedArray.__rdivmod__()": "reference/generated/numpy.ma.maskedarray.__rdivmod__.html", "ma.MaskedArray.__reduce__()": "reference/generated/numpy.ma.maskedarray.__reduce__.html", "ma.MaskedArray.__repr__()": "reference/generated/numpy.ma.maskedarray.__repr__.html", "ma.MaskedArray.__rfloordiv__()": "reference/generated/numpy.ma.maskedarray.__rfloordiv__.html", "ma.MaskedArray.__rlshift__()": "reference/generated/numpy.ma.maskedarray.__rlshift__.html", "ma.MaskedArray.__rmod__()": "reference/generated/numpy.ma.maskedarray.__rmod__.html", "ma.MaskedArray.__rmul__()": "reference/generated/numpy.ma.maskedarray.__rmul__.html", "ma.MaskedArray.__ror__()": "reference/generated/numpy.ma.maskedarray.__ror__.html", "ma.MaskedArray.__rpow__()": "reference/generated/numpy.ma.maskedarray.__rpow__.html", "ma.MaskedArray.__rrshift__()": "reference/generated/numpy.ma.maskedarray.__rrshift__.html", "ma.MaskedArray.__rshift__()": "reference/generated/numpy.ma.maskedarray.__rshift__.html", "ma.MaskedArray.__rsub__()": "reference/generated/numpy.ma.maskedarray.__rsub__.html", "ma.MaskedArray.__rtruediv__()": "reference/generated/numpy.ma.maskedarray.__rtruediv__.html", "ma.MaskedArray.__rxor__()": "reference/generated/numpy.ma.maskedarray.__rxor__.html", "ma.MaskedArray.__setitem__()": "reference/generated/numpy.ma.maskedarray.__setitem__.html", "ma.MaskedArray.__setmask__()": "reference/generated/numpy.ma.maskedarray.__setmask__.html", "ma.MaskedArray.__setstate__()": "reference/generated/numpy.ma.maskedarray.__setstate__.html", "ma.MaskedArray.__str__()": "reference/generated/numpy.ma.maskedarray.__str__.html", "ma.MaskedArray.__sub__()": "reference/generated/numpy.ma.maskedarray.__sub__.html", "ma.MaskedArray.__truediv__()": "reference/generated/numpy.ma.maskedarray.__truediv__.html", "ma.MaskedArray.__xor__()": "reference/generated/numpy.ma.maskedarray.__xor__.html", "ma.MaskedArray.all()": "reference/generated/numpy.ma.maskedarray.all.html", "ma.MaskedArray.anom()": "reference/generated/numpy.ma.maskedarray.anom.html", "ma.MaskedArray.any()": "reference/generated/numpy.ma.maskedarray.any.html", "ma.MaskedArray.argmax()": "reference/generated/numpy.ma.maskedarray.argmax.html", "ma.MaskedArray.argmin()": "reference/generated/numpy.ma.maskedarray.argmin.html", "ma.MaskedArray.argsort()": "reference/generated/numpy.ma.maskedarray.argsort.html", "ma.MaskedArray.astype()": "reference/generated/numpy.ma.maskedarray.astype.html", "ma.MaskedArray.base": "reference/generated/numpy.ma.maskedarray.base.html", "ma.MaskedArray.byteswap()": "reference/generated/numpy.ma.maskedarray.byteswap.html", "ma.MaskedArray.choose()": "reference/generated/numpy.ma.maskedarray.choose.html", "ma.MaskedArray.clip()": "reference/generated/numpy.ma.maskedarray.clip.html", "ma.MaskedArray.compress()": "reference/generated/numpy.ma.maskedarray.compress.html", "ma.MaskedArray.compressed()": "reference/generated/numpy.ma.maskedarray.compressed.html", "ma.MaskedArray.conj()": "reference/generated/numpy.ma.maskedarray.conj.html", "ma.MaskedArray.conjugate()": "reference/generated/numpy.ma.maskedarray.conjugate.html", "ma.MaskedArray.copy()": "reference/generated/numpy.ma.maskedarray.copy.html", "ma.MaskedArray.count()": "reference/generated/numpy.ma.maskedarray.count.html", "ma.MaskedArray.ctypes": "reference/generated/numpy.ma.maskedarray.ctypes.html", "ma.MaskedArray.cumprod()": "reference/generated/numpy.ma.maskedarray.cumprod.html", "ma.MaskedArray.cumsum()": "reference/generated/numpy.ma.maskedarray.cumsum.html", "ma.MaskedArray.diagonal()": "reference/generated/numpy.ma.maskedarray.diagonal.html", "ma.MaskedArray.dump()": "reference/generated/numpy.ma.maskedarray.dump.html", "ma.MaskedArray.dumps()": "reference/generated/numpy.ma.maskedarray.dumps.html", "ma.MaskedArray.fill()": "reference/generated/numpy.ma.maskedarray.fill.html", "ma.MaskedArray.filled()": "reference/generated/numpy.ma.maskedarray.filled.html", "ma.MaskedArray.flags": "reference/generated/numpy.ma.maskedarray.flags.html", "ma.MaskedArray.flatten()": "reference/generated/numpy.ma.maskedarray.flatten.html", "ma.MaskedArray.get_fill_value()": "reference/generated/numpy.ma.maskedarray.get_fill_value.html", "ma.MaskedArray.harden_mask()": "reference/generated/numpy.ma.maskedarray.harden_mask.html", "ma.MaskedArray.ids()": "reference/generated/numpy.ma.maskedarray.ids.html", "ma.MaskedArray.iscontiguous()": "reference/generated/numpy.ma.maskedarray.iscontiguous.html", "ma.MaskedArray.item()": "reference/generated/numpy.ma.maskedarray.item.html", "ma.MaskedArray.itemsize": "reference/generated/numpy.ma.maskedarray.itemsize.html", "ma.MaskedArray.max()": "reference/generated/numpy.ma.maskedarray.max.html", "ma.MaskedArray.mean()": "reference/generated/numpy.ma.maskedarray.mean.html", "ma.MaskedArray.min()": "reference/generated/numpy.ma.maskedarray.min.html", "ma.MaskedArray.nbytes": "reference/generated/numpy.ma.maskedarray.nbytes.html", "ma.MaskedArray.ndim": "reference/generated/numpy.ma.maskedarray.ndim.html", "ma.MaskedArray.nonzero()": "reference/generated/numpy.ma.maskedarray.nonzero.html", "ma.MaskedArray.prod()": "reference/generated/numpy.ma.maskedarray.prod.html", "ma.MaskedArray.product()": "reference/generated/numpy.ma.maskedarray.product.html", "ma.MaskedArray.ptp()": "reference/generated/numpy.ma.maskedarray.ptp.html", "ma.MaskedArray.put()": "reference/generated/numpy.ma.maskedarray.put.html", "ma.MaskedArray.ravel()": "reference/generated/numpy.ma.maskedarray.ravel.html", "ma.MaskedArray.repeat()": "reference/generated/numpy.ma.maskedarray.repeat.html", "ma.MaskedArray.reshape()": "reference/generated/numpy.ma.maskedarray.reshape.html", "ma.MaskedArray.resize()": "reference/generated/numpy.ma.maskedarray.resize.html", "ma.MaskedArray.round()": "reference/generated/numpy.ma.maskedarray.round.html", "ma.MaskedArray.searchsorted()": "reference/generated/numpy.ma.maskedarray.searchsorted.html", "ma.MaskedArray.set_fill_value()": "reference/generated/numpy.ma.maskedarray.set_fill_value.html", "ma.MaskedArray.shrink_mask()": "reference/generated/numpy.ma.maskedarray.shrink_mask.html", "ma.MaskedArray.size": "reference/generated/numpy.ma.maskedarray.size.html", "ma.MaskedArray.soften_mask()": "reference/generated/numpy.ma.maskedarray.soften_mask.html", "ma.MaskedArray.sort()": "reference/generated/numpy.ma.maskedarray.sort.html", "ma.MaskedArray.squeeze()": "reference/generated/numpy.ma.maskedarray.squeeze.html", "ma.MaskedArray.std()": "reference/generated/numpy.ma.maskedarray.std.html", "ma.MaskedArray.strides": "reference/generated/numpy.ma.maskedarray.strides.html", "ma.MaskedArray.sum()": "reference/generated/numpy.ma.maskedarray.sum.html", "ma.MaskedArray.swapaxes()": "reference/generated/numpy.ma.maskedarray.swapaxes.html", "ma.MaskedArray.take()": "reference/generated/numpy.ma.maskedarray.take.html", "ma.MaskedArray.tobytes()": "reference/generated/numpy.ma.maskedarray.tobytes.html", "ma.MaskedArray.tofile()": "reference/generated/numpy.ma.maskedarray.tofile.html", "ma.MaskedArray.toflex()": "reference/generated/numpy.ma.maskedarray.toflex.html", "ma.MaskedArray.tolist()": "reference/generated/numpy.ma.maskedarray.tolist.html", "ma.MaskedArray.torecords()": "reference/generated/numpy.ma.maskedarray.torecords.html", "ma.MaskedArray.tostring()": "reference/generated/numpy.ma.maskedarray.tostring.html", "ma.MaskedArray.trace()": "reference/generated/numpy.ma.maskedarray.trace.html", "ma.MaskedArray.transpose()": "reference/generated/numpy.ma.maskedarray.transpose.html", "ma.MaskedArray.unshare_mask()": "reference/generated/numpy.ma.maskedarray.unshare_mask.html", "ma.MaskedArray.var()": "reference/generated/numpy.ma.maskedarray.var.html", "ma.MaskedArray.view()": "reference/generated/numpy.ma.maskedarray.view.html", "ma.max()": "reference/generated/numpy.ma.max.html", "ma.maximum_fill_value()": "reference/generated/numpy.ma.maximum_fill_value.html", "ma.mean()": "reference/generated/numpy.ma.mean.html", "ma.median()": "reference/generated/numpy.ma.median.html", "ma.min()": "reference/generated/numpy.ma.min.html", "ma.minimum_fill_value()": "reference/generated/numpy.ma.minimum_fill_value.html", "ma.mr_": "reference/generated/numpy.ma.mr_.html", "ma.ndenumerate()": "reference/generated/numpy.ma.ndenumerate.html", "ma.nonzero()": "reference/generated/numpy.ma.nonzero.html", "ma.notmasked_contiguous()": "reference/generated/numpy.ma.notmasked_contiguous.html", "ma.notmasked_edges()": "reference/generated/numpy.ma.notmasked_edges.html", "ma.ones()": "reference/generated/numpy.ma.ones.html", "ma.ones_like()": "reference/generated/numpy.ma.ones_like.html", "ma.outer()": "reference/generated/numpy.ma.outer.html", "ma.outerproduct()": "reference/generated/numpy.ma.outerproduct.html", "ma.polyfit()": "reference/generated/numpy.ma.polyfit.html", "ma.power()": "reference/generated/numpy.ma.power.html", "ma.prod()": "reference/generated/numpy.ma.prod.html", "ma.ptp()": "reference/generated/numpy.ma.ptp.html", "ma.ravel()": "reference/generated/numpy.ma.ravel.html", "ma.reshape()": "reference/generated/numpy.ma.reshape.html", "ma.resize()": "reference/generated/numpy.ma.resize.html", "ma.round()": "reference/generated/numpy.ma.round.html", "ma.row_stack()": "reference/generated/numpy.ma.row_stack.html", "ma.set_fill_value()": "reference/generated/numpy.ma.set_fill_value.html", "ma.shape()": "reference/generated/numpy.ma.shape.html", "ma.size()": "reference/generated/numpy.ma.size.html", "ma.soften_mask()": "reference/generated/numpy.ma.soften_mask.html", "ma.sort()": "reference/generated/numpy.ma.sort.html", "ma.squeeze()": "reference/generated/numpy.ma.squeeze.html", "ma.stack()": "reference/generated/numpy.ma.stack.html", "ma.std()": "reference/generated/numpy.ma.std.html", "ma.sum()": "reference/generated/numpy.ma.sum.html", "ma.swapaxes()": "reference/generated/numpy.ma.swapaxes.html", "ma.trace()": "reference/generated/numpy.ma.trace.html", "ma.transpose()": "reference/generated/numpy.ma.transpose.html", "ma.vander()": "reference/generated/numpy.ma.vander.html", "ma.var()": "reference/generated/numpy.ma.var.html", "ma.vstack()": "reference/generated/numpy.ma.vstack.html", "ma.where()": "reference/generated/numpy.ma.where.html", "ma.zeros()": "reference/generated/numpy.ma.zeros.html", "ma.zeros_like()": "reference/generated/numpy.ma.zeros_like.html", "make_config_py()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.make_config_py", "make_svn_version_py()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.make_svn_version_py", "Masked array operations": "reference/routines.ma.html", "Masked arrays": "reference/maskedarray.html", "MaskedArray.baseclass": "reference/maskedarray.baseclass.html#numpy.ma.MaskedArray.baseclass", "MaskedArray.fill_value": "reference/maskedarray.baseclass.html#numpy.ma.MaskedArray.fill_value", "MaskedArray.hardmask": "reference/maskedarray.baseclass.html#numpy.ma.MaskedArray.hardmask", "MaskedArray.mask": "reference/maskedarray.baseclass.html#numpy.ma.MaskedArray.mask", "MaskedArray.recordmask": "reference/maskedarray.baseclass.html#numpy.ma.MaskedArray.recordmask", "MaskedArray.sharedmask": "reference/maskedarray.baseclass.html#numpy.ma.MaskedArray.sharedmask", "Mathematical functions": "reference/routines.math.html", "Mathematical functions with automatic domain": "reference/routines.emath.html", "matlib.empty()": "reference/generated/numpy.matlib.empty.html", "matlib.eye()": "reference/generated/numpy.matlib.eye.html", "matlib.identity()": "reference/generated/numpy.matlib.identity.html", "matlib.ones()": "reference/generated/numpy.matlib.ones.html", "matlib.rand()": "reference/generated/numpy.matlib.rand.html", "matlib.randn()": "reference/generated/numpy.matlib.randn.html", "matlib.repmat()": "reference/generated/numpy.matlib.repmat.html", "matlib.zeros()": "reference/generated/numpy.matlib.zeros.html", "Matrix library (": "reference/routines.matlib.html", "matrix.all()": "reference/generated/numpy.matrix.all.html", "matrix.any()": "reference/generated/numpy.matrix.any.html", "matrix.argmax()": "reference/generated/numpy.matrix.argmax.html", "matrix.argmin()": "reference/generated/numpy.matrix.argmin.html", "matrix.argpartition()": "reference/generated/numpy.matrix.argpartition.html", "matrix.argsort()": "reference/generated/numpy.matrix.argsort.html", "matrix.astype()": "reference/generated/numpy.matrix.astype.html", "matrix.base": "reference/generated/numpy.matrix.base.html", "matrix.byteswap()": "reference/generated/numpy.matrix.byteswap.html", "matrix.choose()": "reference/generated/numpy.matrix.choose.html", "matrix.clip()": "reference/generated/numpy.matrix.clip.html", "matrix.compress()": "reference/generated/numpy.matrix.compress.html", "matrix.conj()": "reference/generated/numpy.matrix.conj.html", "matrix.conjugate()": "reference/generated/numpy.matrix.conjugate.html", "matrix.copy()": "reference/generated/numpy.matrix.copy.html", "matrix.ctypes": "reference/generated/numpy.matrix.ctypes.html", "matrix.cumprod()": "reference/generated/numpy.matrix.cumprod.html", "matrix.cumsum()": "reference/generated/numpy.matrix.cumsum.html", "matrix.data": "reference/generated/numpy.matrix.data.html", "matrix.diagonal()": "reference/generated/numpy.matrix.diagonal.html", "matrix.dump()": "reference/generated/numpy.matrix.dump.html", "matrix.dumps()": "reference/generated/numpy.matrix.dumps.html", "matrix.fill()": "reference/generated/numpy.matrix.fill.html", "matrix.flags": "reference/generated/numpy.matrix.flags.html", "matrix.flat": "reference/generated/numpy.matrix.flat.html", "matrix.flatten()": "reference/generated/numpy.matrix.flatten.html", "matrix.getA()": "reference/generated/numpy.matrix.geta.html", "matrix.getA1()": "reference/generated/numpy.matrix.geta1.html", "matrix.getfield()": "reference/generated/numpy.matrix.getfield.html", "matrix.getH()": "reference/generated/numpy.matrix.geth.html", "matrix.getI()": "reference/generated/numpy.matrix.geti.html", "matrix.getT()": "reference/generated/numpy.matrix.gett.html", "matrix.item()": "reference/generated/numpy.matrix.item.html", "matrix.itemset()": "reference/generated/numpy.matrix.itemset.html", "matrix.itemsize": "reference/generated/numpy.matrix.itemsize.html", "matrix.max()": "reference/generated/numpy.matrix.max.html", "matrix.mean()": "reference/generated/numpy.matrix.mean.html", "matrix.min()": "reference/generated/numpy.matrix.min.html", "matrix.nbytes": "reference/generated/numpy.matrix.nbytes.html", "matrix.ndim": "reference/generated/numpy.matrix.ndim.html", "matrix.newbyteorder()": "reference/generated/numpy.matrix.newbyteorder.html", "matrix.nonzero()": "reference/generated/numpy.matrix.nonzero.html", "matrix.partition()": "reference/generated/numpy.matrix.partition.html", "matrix.prod()": "reference/generated/numpy.matrix.prod.html", "matrix.ptp()": "reference/generated/numpy.matrix.ptp.html", "matrix.put()": "reference/generated/numpy.matrix.put.html", "matrix.ravel()": "reference/generated/numpy.matrix.ravel.html", "matrix.repeat()": "reference/generated/numpy.matrix.repeat.html", "matrix.reshape()": "reference/generated/numpy.matrix.reshape.html", "matrix.resize()": "reference/generated/numpy.matrix.resize.html", "matrix.round()": "reference/generated/numpy.matrix.round.html", "matrix.searchsorted()": "reference/generated/numpy.matrix.searchsorted.html", "matrix.setfield()": "reference/generated/numpy.matrix.setfield.html", "matrix.setflags()": "reference/generated/numpy.matrix.setflags.html", "matrix.size": "reference/generated/numpy.matrix.size.html", "matrix.sort()": "reference/generated/numpy.matrix.sort.html", "matrix.squeeze()": "reference/generated/numpy.matrix.squeeze.html", "matrix.std()": "reference/generated/numpy.matrix.std.html", "matrix.strides": "reference/generated/numpy.matrix.strides.html", "matrix.sum()": "reference/generated/numpy.matrix.sum.html", "matrix.swapaxes()": "reference/generated/numpy.matrix.swapaxes.html", "matrix.take()": "reference/generated/numpy.matrix.take.html", "matrix.tobytes()": "reference/generated/numpy.matrix.tobytes.html", "matrix.tofile()": "reference/generated/numpy.matrix.tofile.html", "matrix.tolist()": "reference/generated/numpy.matrix.tolist.html", "matrix.tostring()": "reference/generated/numpy.matrix.tostring.html", "matrix.trace()": "reference/generated/numpy.matrix.trace.html", "matrix.transpose()": "reference/generated/numpy.matrix.transpose.html", "matrix.var()": "reference/generated/numpy.matrix.var.html", "matrix.view()": "reference/generated/numpy.matrix.view.html", "memmap.flush()": "reference/generated/numpy.memmap.flush.html", "Miscellaneous": "user/misc.html", "Miscellaneous routines": "reference/routines.other.html", "Multithreaded Generation": "reference/random/multithreading.html", "ndarray.__abs__()": "reference/generated/numpy.ndarray.__abs__.html", "ndarray.__add__()": "reference/generated/numpy.ndarray.__add__.html", "ndarray.__and__()": "reference/generated/numpy.ndarray.__and__.html", "ndarray.__array__()": "reference/generated/numpy.ndarray.__array__.html", "ndarray.__array_wrap__()": "reference/generated/numpy.ndarray.__array_wrap__.html", "ndarray.__bool__()": "reference/generated/numpy.ndarray.__bool__.html", "ndarray.__class_getitem__()": "reference/generated/numpy.ndarray.__class_getitem__.html", "ndarray.__complex__()": "reference/generated/numpy.ndarray.__complex__.html", "ndarray.__contains__()": "reference/generated/numpy.ndarray.__contains__.html", "ndarray.__copy__()": "reference/generated/numpy.ndarray.__copy__.html", "ndarray.__deepcopy__()": "reference/generated/numpy.ndarray.__deepcopy__.html", "ndarray.__divmod__()": "reference/generated/numpy.ndarray.__divmod__.html", "ndarray.__eq__()": "reference/generated/numpy.ndarray.__eq__.html", "ndarray.__float__()": "reference/generated/numpy.ndarray.__float__.html", "ndarray.__floordiv__()": "reference/generated/numpy.ndarray.__floordiv__.html", "ndarray.__ge__()": "reference/generated/numpy.ndarray.__ge__.html", "ndarray.__getitem__()": "reference/generated/numpy.ndarray.__getitem__.html", "ndarray.__gt__()": "reference/generated/numpy.ndarray.__gt__.html", "ndarray.__iadd__()": "reference/generated/numpy.ndarray.__iadd__.html", "ndarray.__iand__()": "reference/generated/numpy.ndarray.__iand__.html", "ndarray.__ifloordiv__()": "reference/generated/numpy.ndarray.__ifloordiv__.html", "ndarray.__ilshift__()": "reference/generated/numpy.ndarray.__ilshift__.html", "ndarray.__imod__()": "reference/generated/numpy.ndarray.__imod__.html", "ndarray.__imul__()": "reference/generated/numpy.ndarray.__imul__.html", "ndarray.__int__()": "reference/generated/numpy.ndarray.__int__.html", "ndarray.__invert__()": "reference/generated/numpy.ndarray.__invert__.html", "ndarray.__ior__()": "reference/generated/numpy.ndarray.__ior__.html", "ndarray.__ipow__()": "reference/generated/numpy.ndarray.__ipow__.html", "ndarray.__irshift__()": "reference/generated/numpy.ndarray.__irshift__.html", "ndarray.__isub__()": "reference/generated/numpy.ndarray.__isub__.html", "ndarray.__itruediv__()": "reference/generated/numpy.ndarray.__itruediv__.html", "ndarray.__ixor__()": "reference/generated/numpy.ndarray.__ixor__.html", "ndarray.__le__()": "reference/generated/numpy.ndarray.__le__.html", "ndarray.__len__()": "reference/generated/numpy.ndarray.__len__.html", "ndarray.__lshift__()": "reference/generated/numpy.ndarray.__lshift__.html", "ndarray.__lt__()": "reference/generated/numpy.ndarray.__lt__.html", "ndarray.__matmul__()": "reference/generated/numpy.ndarray.__matmul__.html", "ndarray.__mod__()": "reference/generated/numpy.ndarray.__mod__.html", "ndarray.__mul__()": "reference/generated/numpy.ndarray.__mul__.html", "ndarray.__ne__()": "reference/generated/numpy.ndarray.__ne__.html", "ndarray.__neg__()": "reference/generated/numpy.ndarray.__neg__.html", "ndarray.__new__()": "reference/generated/numpy.ndarray.__new__.html", "ndarray.__or__()": "reference/generated/numpy.ndarray.__or__.html", "ndarray.__pos__()": "reference/generated/numpy.ndarray.__pos__.html", "ndarray.__pow__()": "reference/generated/numpy.ndarray.__pow__.html", "ndarray.__reduce__()": "reference/generated/numpy.ndarray.__reduce__.html", "ndarray.__repr__()": "reference/generated/numpy.ndarray.__repr__.html", "ndarray.__rshift__()": "reference/generated/numpy.ndarray.__rshift__.html", "ndarray.__setitem__()": "reference/generated/numpy.ndarray.__setitem__.html", "ndarray.__setstate__()": "reference/generated/numpy.ndarray.__setstate__.html", "ndarray.__str__()": "reference/generated/numpy.ndarray.__str__.html", "ndarray.__sub__()": "reference/generated/numpy.ndarray.__sub__.html", "ndarray.__truediv__()": "reference/generated/numpy.ndarray.__truediv__.html", "ndarray.__xor__()": "reference/generated/numpy.ndarray.__xor__.html", "ndarray.all()": "reference/generated/numpy.ndarray.all.html", "ndarray.any()": "reference/generated/numpy.ndarray.any.html", "ndarray.argmax()": "reference/generated/numpy.ndarray.argmax.html", "ndarray.argmin()": "reference/generated/numpy.ndarray.argmin.html", "ndarray.argpartition()": "reference/generated/numpy.ndarray.argpartition.html", "ndarray.argsort()": "reference/generated/numpy.ndarray.argsort.html", "ndarray.astype()": "reference/generated/numpy.ndarray.astype.html", "ndarray.base": "reference/generated/numpy.ndarray.base.html", "ndarray.byteswap()": "reference/generated/numpy.ndarray.byteswap.html", "ndarray.choose()": "reference/generated/numpy.ndarray.choose.html", "ndarray.clip()": "reference/generated/numpy.ndarray.clip.html", "ndarray.compress()": "reference/generated/numpy.ndarray.compress.html", "ndarray.conj()": "reference/generated/numpy.ndarray.conj.html", "ndarray.conjugate()": "reference/generated/numpy.ndarray.conjugate.html", "ndarray.copy()": "reference/generated/numpy.ndarray.copy.html", "ndarray.ctypes": "reference/generated/numpy.ndarray.ctypes.html", "ndarray.cumprod()": "reference/generated/numpy.ndarray.cumprod.html", "ndarray.cumsum()": "reference/generated/numpy.ndarray.cumsum.html", "ndarray.data": "reference/generated/numpy.ndarray.data.html", "ndarray.diagonal()": "reference/generated/numpy.ndarray.diagonal.html", "ndarray.dtype": "reference/generated/numpy.ndarray.dtype.html", "ndarray.dump()": "reference/generated/numpy.ndarray.dump.html", "ndarray.dumps()": "reference/generated/numpy.ndarray.dumps.html", "ndarray.fill()": "reference/generated/numpy.ndarray.fill.html", "ndarray.flags": "reference/generated/numpy.ndarray.flags.html", "ndarray.flat": "reference/generated/numpy.ndarray.flat.html", "ndarray.flatten()": "reference/generated/numpy.ndarray.flatten.html", "ndarray.getfield()": "reference/generated/numpy.ndarray.getfield.html", "ndarray.imag": "reference/generated/numpy.ndarray.imag.html", "ndarray.item()": "reference/generated/numpy.ndarray.item.html", "ndarray.itemset()": "reference/generated/numpy.ndarray.itemset.html", "ndarray.itemsize": "reference/generated/numpy.ndarray.itemsize.html", "ndarray.max()": "reference/generated/numpy.ndarray.max.html", "ndarray.mean()": "reference/generated/numpy.ndarray.mean.html", "ndarray.min()": "reference/generated/numpy.ndarray.min.html", "ndarray.nbytes": "reference/generated/numpy.ndarray.nbytes.html", "ndarray.ndim": "reference/generated/numpy.ndarray.ndim.html", "ndarray.newbyteorder()": "reference/generated/numpy.ndarray.newbyteorder.html", "ndarray.nonzero()": "reference/generated/numpy.ndarray.nonzero.html", "ndarray.partition()": "reference/generated/numpy.ndarray.partition.html", "ndarray.prod()": "reference/generated/numpy.ndarray.prod.html", "ndarray.ptp()": "reference/generated/numpy.ndarray.ptp.html", "ndarray.put()": "reference/generated/numpy.ndarray.put.html", "ndarray.ravel()": "reference/generated/numpy.ndarray.ravel.html", "ndarray.real": "reference/generated/numpy.ndarray.real.html", "ndarray.repeat()": "reference/generated/numpy.ndarray.repeat.html", "ndarray.reshape()": "reference/generated/numpy.ndarray.reshape.html", "ndarray.resize()": "reference/generated/numpy.ndarray.resize.html", "ndarray.round()": "reference/generated/numpy.ndarray.round.html", "ndarray.searchsorted()": "reference/generated/numpy.ndarray.searchsorted.html", "ndarray.setfield()": "reference/generated/numpy.ndarray.setfield.html", "ndarray.setflags()": "reference/generated/numpy.ndarray.setflags.html", "ndarray.shape": "reference/generated/numpy.ndarray.shape.html", "ndarray.size": "reference/generated/numpy.ndarray.size.html", "ndarray.sort()": "reference/generated/numpy.ndarray.sort.html", "ndarray.squeeze()": "reference/generated/numpy.ndarray.squeeze.html", "ndarray.std()": "reference/generated/numpy.ndarray.std.html", "ndarray.strides": "reference/generated/numpy.ndarray.strides.html", "ndarray.sum()": "reference/generated/numpy.ndarray.sum.html", "ndarray.swapaxes()": "reference/generated/numpy.ndarray.swapaxes.html", "ndarray.T": "reference/generated/numpy.ndarray.t.html", "ndarray.take()": "reference/generated/numpy.ndarray.take.html", "ndarray.tobytes()": "reference/generated/numpy.ndarray.tobytes.html", "ndarray.tofile()": "reference/generated/numpy.ndarray.tofile.html", "ndarray.tolist()": "reference/generated/numpy.ndarray.tolist.html", "ndarray.tostring()": "reference/generated/numpy.ndarray.tostring.html", "ndarray.trace()": "reference/generated/numpy.ndarray.trace.html", "ndarray.transpose()": "reference/generated/numpy.ndarray.transpose.html", "ndarray.var()": "reference/generated/numpy.ndarray.var.html", "ndarray.view()": "reference/generated/numpy.ndarray.view.html", "ndindex.ndincr()": "reference/generated/numpy.ndindex.ndincr.html", "nditer.close()": "reference/generated/numpy.nditer.close.html", "nditer.copy()": "reference/generated/numpy.nditer.copy.html", "nditer.debug_print()": "reference/generated/numpy.nditer.debug_print.html", "nditer.enable_external_loop()": "reference/generated/numpy.nditer.enable_external_loop.html", "nditer.index": "reference/generated/numpy.nditer.index.html", "nditer.iternext()": "reference/generated/numpy.nditer.iternext.html", "nditer.itersize": "reference/generated/numpy.nditer.itersize.html", "nditer.multi_index": "reference/generated/numpy.nditer.multi_index.html", "nditer.operands": "reference/generated/numpy.nditer.operands.html", "nditer.remove_axis()": "reference/generated/numpy.nditer.remove_axis.html", "nditer.remove_multi_index()": "reference/generated/numpy.nditer.remove_multi_index.html", "nditer.reset()": "reference/generated/numpy.nditer.reset.html", "nditer.value": "reference/generated/numpy.nditer.value.html", "ndpointer()": "user/c-info.python-as-glue.html", "NO_IMPORT_ARRAY": "reference/c-api/array.html#c.NO_IMPORT_ARRAY", "NO_IMPORT_UFUNC": "reference/c-api/ufunc.html#c.NO_IMPORT_UFUNC", "NPY_1_PI": "reference/c-api/coremath.html#c.NPY_1_PI", "NPY_2_PI": "reference/c-api/coremath.html#c.NPY_2_PI", "NPY_ALLOW_C_API": "reference/c-api/array.html#c.NPY_ALLOW_C_API", "NPY_ARRAY_ALIGNED": "reference/c-api/array.html#c.PyArray_FromAny.NPY_ARRAY_ALIGNED", "NPY_ARRAY_BEHAVED": "reference/c-api/array.html#c.PyArray_FromAny.NPY_ARRAY_BEHAVED", "NPY_ARRAY_CARRAY": "reference/c-api/array.html#c.PyArray_FromAny.NPY_ARRAY_CARRAY", "NPY_ARRAY_CARRAY_RO": "reference/c-api/array.html#c.PyArray_FromAny.NPY_ARRAY_CARRAY_RO", "NPY_ARRAY_DEFAULT": "reference/c-api/array.html#c.NPY_ARRAY_DEFAULT", "NPY_ARRAY_ELEMENTSTRIDES": "reference/c-api/array.html#c.NPY_ARRAY_ELEMENTSTRIDES", "NPY_ARRAY_ENSUREARRAY": "reference/c-api/array.html#c.NPY_ARRAY_ENSUREARRAY", "NPY_ARRAY_ENSURECOPY": "reference/c-api/array.html#c.NPY_ARRAY_ENSURECOPY", "NPY_ARRAY_F_CONTIGUOUS": "reference/c-api/array.html#c.PyArray_FromAny.NPY_ARRAY_F_CONTIGUOUS", "NPY_ARRAY_FARRAY": "reference/c-api/array.html#c.NPY_ARRAY_FARRAY", "NPY_ARRAY_FARRAY_RO": "reference/c-api/array.html#c.NPY_ARRAY_FARRAY_RO", "NPY_ARRAY_FORCECAST": "reference/c-api/array.html#c.PyArray_FromAny.NPY_ARRAY_FORCECAST", "NPY_ARRAY_IN_ARRAY": "reference/c-api/array.html#c.NPY_ARRAY_IN_ARRAY", "NPY_ARRAY_INOUT_ARRAY": "reference/c-api/array.html#c.NPY_ARRAY_INOUT_ARRAY", "NPY_ARRAY_NOTSWAPPED": "reference/c-api/array.html#c.NPY_ARRAY_NOTSWAPPED", "NPY_ARRAY_OUT_ARRAY": "reference/c-api/array.html#c.NPY_ARRAY_OUT_ARRAY", "NPY_ARRAY_OWNDATA": "reference/c-api/array.html#c.NPY_ARRAY_OWNDATA", "NPY_ARRAY_UPDATE_ALL": "reference/c-api/array.html#c.NPY_ARRAY_UPDATE_ALL", "NPY_ARRAY_WRITEABLE": "reference/c-api/array.html#c.PyArray_FromAny.NPY_ARRAY_WRITEABLE", "NPY_ARRAY_WRITEBACKIFCOPY": "reference/c-api/array.html#c.NPY_ARRAY_WRITEBACKIFCOPY", "NPY_BEGIN_THREADS": "reference/c-api/array.html#c.NPY_BEGIN_THREADS", "NPY_BEGIN_THREADS_DEF": "reference/c-api/array.html#c.NPY_BEGIN_THREADS_DEF", "NPY_BIG": "reference/c-api/array.html#c.NPY_BIG", "NPY_BIG_ENDIAN": "reference/c-api/config.html#c.NPY_BIG_ENDIAN", "npy_bool contiguous": "reference/c-api/types-and-structures.html#c.PyArrayIterObject.contiguous", "npy_bool nonzero()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.nonzero", "npy_bool NpyIter_HasDelayedBufAlloc()": "reference/c-api/iterator.html#c.NpyIter_HasDelayedBufAlloc", "npy_bool NpyIter_HasExternalLoop()": "reference/c-api/iterator.html#c.NpyIter_HasExternalLoop", "npy_bool NpyIter_HasIndex()": "reference/c-api/iterator.html#c.NpyIter_HasIndex", "npy_bool NpyIter_HasMultiIndex()": "reference/c-api/iterator.html#c.NpyIter_HasMultiIndex", "npy_bool NpyIter_IsBuffered()": "reference/c-api/iterator.html#c.NpyIter_IsBuffered", "npy_bool NpyIter_IsFirstVisit()": "reference/c-api/iterator.html#c.NpyIter_IsFirstVisit", "npy_bool NpyIter_IsGrowInner()": "reference/c-api/iterator.html#c.NpyIter_IsGrowInner", "npy_bool NpyIter_RequiresBuffering()": "reference/c-api/iterator.html#c.NpyIter_RequiresBuffering", "npy_bool PyArray_EquivArrTypes()": "reference/c-api/array.html#c.PyArray_EquivArrTypes", "npy_bool PyArray_EquivTypenums()": "reference/c-api/array.html#c.PyArray_EquivTypenums", "npy_bool PyArray_EquivTypes()": "reference/c-api/array.html#c.PyArray_EquivTypes", "NPY_BYTE_ORDER": "reference/c-api/config.html#c.NPY_BYTE_ORDER", "NPY_CLIP": "reference/c-api/array.html#c.PyArray_Choose.NPY_CLIP", "npy_copysign()": "reference/c-api/coremath.html#c.npy_copysign", "NPY_CPU_AMD64": "reference/c-api/config.html#c.NPY_CPU_AMD64", "NPY_CPU_IA64": "reference/c-api/config.html#c.NPY_CPU_IA64", "NPY_CPU_LITTLE": "reference/c-api/config.html#c.PyArray_GetEndianness.NPY_CPU_LITTLE", "NPY_CPU_PARISC": "reference/c-api/config.html#c.NPY_CPU_PARISC", "NPY_CPU_PPC": "reference/c-api/config.html#c.NPY_CPU_PPC", "NPY_CPU_PPC64": "reference/c-api/config.html#c.NPY_CPU_PPC64", "NPY_CPU_S390": "reference/c-api/config.html#c.NPY_CPU_S390", "NPY_CPU_SPARC": "reference/c-api/config.html#c.NPY_CPU_SPARC", "NPY_CPU_SPARC64": "reference/c-api/config.html#c.NPY_CPU_SPARC64", "NPY_CPU_UNKNOWN_ENDIAN": "reference/c-api/config.html#c.PyArray_GetEndianness.NPY_CPU_UNKNOWN_ENDIAN", "NPY_DISABLE_C_API": "reference/c-api/array.html#c.NPY_DISABLE_C_API", "NPY_END_ALLOW_THREADS": "reference/c-api/array.html#c.NPY_END_ALLOW_THREADS", "NPY_END_THREADS": "reference/c-api/array.html#c.NPY_END_THREADS", "NPY_EULER": "reference/c-api/coremath.html#c.NPY_EULER", "NPY_FAIL": "reference/c-api/array.html#c.NPY_FAIL", "NPY_FALSE": "reference/c-api/array.html#c.NPY_FALSE", "NPY_FEATURE_VERSION": "reference/c-api/array.html#c.NPY_FEATURE_VERSION", "npy_half npy_double_to_half()": "reference/c-api/coremath.html#c.npy_double_to_half", "npy_half npy_float_to_half()": "reference/c-api/coremath.html#c.npy_float_to_half", "npy_half npy_half_copysign()": "reference/c-api/coremath.html#c.npy_half_copysign", "npy_half npy_half_nextafter()": "reference/c-api/coremath.html#c.npy_half_nextafter", "npy_half npy_half_spacing()": "reference/c-api/coremath.html#c.npy_half_spacing", "NPY_HALF_NAN": "reference/c-api/coremath.html#c.NPY_HALF_NAN", "NPY_HALF_NEGONE": "reference/c-api/coremath.html#c.NPY_HALF_NEGONE", "NPY_HALF_NINF": "reference/c-api/coremath.html#c.NPY_HALF_NINF", "NPY_HALF_NZERO": "reference/c-api/coremath.html#c.NPY_HALF_NZERO", "NPY_HALF_ONE": "reference/c-api/coremath.html#c.NPY_HALF_ONE", "NPY_HALF_PINF": "reference/c-api/coremath.html#c.NPY_HALF_PINF", "NPY_HALF_PZERO": "reference/c-api/coremath.html#c.NPY_HALF_PZERO", "npy_hash_t *hash": "reference/c-api/types-and-structures.html#c.NPY_USE_SETITEM.hash", "NPY_IGNORE": "reference/c-api/array.html#c.NPY_IGNORE", "NPY_INFINITY": "reference/c-api/coremath.html#c.NPY_INFINITY", "npy_int32 random_positive_int32()": "reference/random/c-api.html#c.random_positive_int32", "npy_int64 random_binomial()": "reference/random/c-api.html#c.random_binomial", "npy_int64 random_geometric()": "reference/random/c-api.html#c.random_geometric", "npy_int64 random_geometric_inversion()": "reference/random/c-api.html#c.random_geometric_inversion", "npy_int64 random_geometric_search()": "reference/random/c-api.html#c.random_geometric_search", "npy_int64 random_hypergeometric()": "reference/random/c-api.html#c.random_hypergeometric", "npy_int64 random_logseries()": "reference/random/c-api.html#c.random_logseries", "npy_int64 random_negative_binomial()": "reference/random/c-api.html#c.random_negative_binomial", "npy_int64 random_poisson()": "reference/random/c-api.html#c.random_poisson", "npy_int64 random_positive_int()": "reference/random/c-api.html#c.random_positive_int", "npy_int64 random_positive_int64()": "reference/random/c-api.html#c.random_positive_int64", "npy_int64 random_zipf()": "reference/random/c-api.html#c.random_zipf", "npy_intp *backstrides": "reference/c-api/types-and-structures.html#c.PyArrayIterObject.backstrides", "npy_intp *coordinates": "reference/c-api/types-and-structures.html#c.PyArrayIterObject.coordinates", "npy_intp *core_dim_sizes": "reference/c-api/types-and-structures.html#c.PyUFuncObject.core_dim_sizes", "npy_intp *dimensions": "reference/c-api/types-and-structures.html#c.PyArrayMultiIterObject.dimensions", "npy_intp *dims_m1": "reference/c-api/types-and-structures.html#c.PyArrayIterObject.dims_m1", "npy_intp *factors": "reference/c-api/types-and-structures.html#c.PyArrayIterObject.factors", "npy_intp *NpyIter_GetAxisStrideArray()": "reference/c-api/iterator.html#c.NpyIter_GetAxisStrideArray", "npy_intp *NpyIter_GetIndexPtr()": "reference/c-api/iterator.html#c.NpyIter_GetIndexPtr", "npy_intp *NpyIter_GetInnerLoopSizePtr()": "reference/c-api/iterator.html#c.NpyIter_GetInnerLoopSizePtr", "npy_intp *NpyIter_GetInnerStrideArray()": "reference/c-api/iterator.html#c.NpyIter_GetInnerStrideArray", "npy_intp *PyArray_DIMS()": "reference/c-api/array.html#c.PyArray_DIMS", "npy_intp *PyArray_SHAPE()": "reference/c-api/array.html#c.PyArray_SHAPE", "npy_intp *PyArray_STRIDES()": "reference/c-api/array.html#c.PyArray_STRIDES", "npy_intp *PyDimMem_NEW()": "reference/c-api/array.html#c.PyDimMem_NEW", "npy_intp *PyDimMem_RENEW()": "reference/c-api/array.html#c.PyDimMem_RENEW", "npy_intp *shape": "reference/c-api/types-and-structures.html#c.PyArrayInterface.shape", "npy_intp *strides": "reference/c-api/types-and-structures.html#c.PyArrayInterface.strides", "npy_intp dimensions": "reference/c-api/types-and-structures.html#c.NPY_AO.dimensions", "npy_intp index": "reference/c-api/types-and-structures.html#c.PyArrayIterObject.index", "npy_intp len": "reference/c-api/types-and-structures.html#c.PyArray_Chunk.len", "npy_intp NpyIter_GetBufferSize()": "reference/c-api/iterator.html#c.NpyIter_GetBufferSize", "npy_intp NpyIter_GetIterIndex()": "reference/c-api/iterator.html#c.NpyIter_GetIterIndex", "npy_intp NpyIter_GetIterSize()": "reference/c-api/iterator.html#c.NpyIter_GetIterSize", "npy_intp PyArray_CountNonzero()": "reference/c-api/array.html#c.PyArray_CountNonzero", "npy_intp PyArray_DIM()": "reference/c-api/array.html#c.PyArray_DIM", "npy_intp PyArray_ITEMSIZE()": "reference/c-api/array.html#c.PyArray_ITEMSIZE", "npy_intp PyArray_MultiplyList()": "reference/c-api/array.html#c.PyArray_MultiplyList", "npy_intp PyArray_NBYTES()": "reference/c-api/array.html#c.PyArray_NBYTES", "npy_intp PyArray_PyIntAsIntp()": "reference/c-api/array.html#c.PyArray_PyIntAsIntp", "npy_intp PyArray_REFCOUNT()": "reference/c-api/array.html#c.PyArray_REFCOUNT", "npy_intp PyArray_Size()": "reference/c-api/array.html#c.PyArray_Size", "npy_intp PyArray_SIZE()": "reference/c-api/array.html#c.PyArray_SIZE", "npy_intp PyArray_STRIDE()": "reference/c-api/array.html#c.PyArray_STRIDE", "npy_intp size": "reference/c-api/types-and-structures.html#c.PyArrayIterObject.size", "NPY_INTP_FMT": "reference/c-api/dtype.html#c.NPY_INTP_FMT", "npy_isfinite()": "reference/c-api/coremath.html#c.npy_isfinite", "npy_isinf()": "reference/c-api/coremath.html#c.npy_isinf", "npy_isnan()": "reference/c-api/coremath.html#c.npy_isnan", "NPY_ITEM_IS_POINTER": "reference/c-api/types-and-structures.html#c.NPY_ITEM_IS_POINTER", "NPY_ITEM_REFCOUNT": "reference/c-api/types-and-structures.html#c.NPY_ITEM_REFCOUNT", "NPY_ITER_ALIGNED": "reference/c-api/iterator.html#c.NPY_ITER_ALIGNED", "NPY_ITER_ALLOCATE": "reference/c-api/iterator.html#c.NPY_ITER_ALLOCATE", "NPY_ITER_ARRAYMASK": "reference/c-api/iterator.html#c.NPY_ITER_ARRAYMASK", "NPY_ITER_BUFFERED": "reference/c-api/iterator.html#c.NPY_ITER_BUFFERED", "NPY_ITER_C_INDEX": "reference/c-api/iterator.html#c.NPY_ITER_C_INDEX", "NPY_ITER_COMMON_DTYPE": "reference/c-api/iterator.html#c.NPY_ITER_COMMON_DTYPE", "NPY_ITER_CONTIG": "reference/c-api/iterator.html#c.NPY_ITER_CONTIG", "NPY_ITER_COPY": "reference/c-api/iterator.html#c.NPY_ITER_COPY", "NPY_ITER_COPY_IF_OVERLAP": "reference/c-api/iterator.html#c.NPY_ITER_COPY_IF_OVERLAP", "NPY_ITER_DELAY_BUFALLOC": "reference/c-api/iterator.html#c.NPY_ITER_DELAY_BUFALLOC", "NPY_ITER_DONT_NEGATE_STRIDES": "reference/c-api/iterator.html#c.NPY_ITER_DONT_NEGATE_STRIDES", "NPY_ITER_EXTERNAL_LOOP": "reference/c-api/iterator.html#c.NPY_ITER_EXTERNAL_LOOP", "NPY_ITER_F_INDEX": "reference/c-api/iterator.html#c.NPY_ITER_F_INDEX", "NPY_ITER_GROWINNER": "reference/c-api/iterator.html#c.NPY_ITER_GROWINNER", "NPY_ITER_MULTI_INDEX": "reference/c-api/iterator.html#c.NPY_ITER_MULTI_INDEX", "NPY_ITER_NBO": "reference/c-api/iterator.html#c.NPY_ITER_NBO", "NPY_ITER_NO_BROADCAST": "reference/c-api/iterator.html#c.NPY_ITER_NO_BROADCAST", "NPY_ITER_NO_SUBTYPE": "reference/c-api/iterator.html#c.NPY_ITER_NO_SUBTYPE", "NPY_ITER_OVERLAP_ASSUME_ELEMENTWISE": "reference/c-api/iterator.html#c.NPY_ITER_OVERLAP_ASSUME_ELEMENTWISE", "NPY_ITER_RANGED": "reference/c-api/iterator.html#c.NPY_ITER_RANGED", "NPY_ITER_READONLY": "reference/c-api/iterator.html#c.NPY_ITER_READONLY", "NPY_ITER_READWRITE": "reference/c-api/iterator.html#c.NPY_ITER_READWRITE", "NPY_ITER_REDUCE_OK": "reference/c-api/iterator.html#c.NPY_ITER_REDUCE_OK", "NPY_ITER_REFS_OK": "reference/c-api/iterator.html#c.NPY_ITER_REFS_OK", "NPY_ITER_UPDATEIFCOPY": "reference/c-api/iterator.html#c.NPY_ITER_UPDATEIFCOPY", "NPY_ITER_WRITEMASKED": "reference/c-api/iterator.html#c.NPY_ITER_WRITEMASKED", "NPY_ITER_WRITEONLY": "reference/c-api/iterator.html#c.NPY_ITER_WRITEONLY", "NPY_ITER_ZEROSIZE_OK": "reference/c-api/iterator.html#c.NPY_ITER_ZEROSIZE_OK", "NPY_LIST_PICKLE": "reference/c-api/types-and-structures.html#c.NPY_LIST_PICKLE", "NPY_LITTLE": "reference/c-api/array.html#c.NPY_LITTLE", "NPY_LITTLE_ENDIAN": "reference/c-api/config.html#c.NPY_LITTLE_ENDIAN", "NPY_LOG10E": "reference/c-api/coremath.html#c.NPY_LOG10E", "NPY_LOG2E": "reference/c-api/coremath.html#c.NPY_LOG2E", "NPY_LOGE10": "reference/c-api/coremath.html#c.NPY_LOGE10", "NPY_LOGE2": "reference/c-api/coremath.html#c.NPY_LOGE2", "NPY_LONGDOUBLE_FMT": "reference/c-api/dtype.html#c.NPY_LONGDOUBLE_FMT", "NPY_LOOP_END_THREADS": "reference/c-api/ufunc.html#c.NPY_LOOP_END_THREADS", "NPY_MAX_BUFSIZE": "reference/c-api/array.html#c.NPY_MAX_BUFSIZE", "NPY_MAXARGS": "reference/c-api/array.html#c.NPY_MAXARGS", "NPY_MAXDIMS": "reference/c-api/array.html#c.NPY_MAXDIMS", "NPY_MIN_BUFSIZE": "reference/c-api/array.html#c.NPY_MIN_BUFSIZE", "NPY_NAN": "reference/c-api/coremath.html", "NPY_NATIVE": "reference/c-api/array.html#c.NPY_NATIVE", "NPY_NEEDS_INIT": "reference/c-api/types-and-structures.html#c.NPY_NEEDS_INIT", "NPY_NEEDS_PYAPI": "reference/c-api/types-and-structures.html#c.NPY_NEEDS_PYAPI", "NPY_NEIGHBORHOOD_ITER_CIRCULAR_PADDING": "reference/c-api/array.html#c.PyArray_NeighborhoodIterNew.NPY_NEIGHBORHOOD_ITER_CIRCULAR_PADDING", "NPY_NEIGHBORHOOD_ITER_CONSTANT_PADDING": "reference/c-api/array.html#c.PyArray_NeighborhoodIterNew.NPY_NEIGHBORHOOD_ITER_CONSTANT_PADDING", "NPY_NEIGHBORHOOD_ITER_MIRROR_PADDING": "reference/c-api/array.html#c.PyArray_NeighborhoodIterNew.NPY_NEIGHBORHOOD_ITER_MIRROR_PADDING", "NPY_NEIGHBORHOOD_ITER_ONE_PADDING": "reference/c-api/array.html#c.PyArray_NeighborhoodIterNew.NPY_NEIGHBORHOOD_ITER_ONE_PADDING", "NPY_NOTYPE": "reference/c-api/dtype.html#c.NPY_NOTYPE", "NPY_NTYPES": "reference/c-api/dtype.html#c.NPY_NTYPES", "NPY_NZERO": "reference/c-api/coremath.html#c.NPY_NZERO", "NPY_OBJECT_DTYPE_FLAGS": "reference/c-api/types-and-structures.html#c.NPY_USE_SETITEM.NPY_OBJECT_DTYPE_FLAGS", "NPY_OUT_ARRAY": "reference/c-api/array.html#c.NPY_OUT_ARRAY", "NPY_PI": "reference/c-api/coremath.html#c.NPY_PI", "NPY_PI_2": "reference/c-api/coremath.html#c.NPY_PI_2", "NPY_PI_4": "reference/c-api/coremath.html#c.NPY_PI_4", "NPY_PZERO": "reference/c-api/coremath.html#c.NPY_PZERO", "NPY_SCALAR_PRIORITY": "reference/c-api/array.html#c.NPY_SCALAR_PRIORITY", "NPY_SCALARKIND PyArray_ScalarKind()": "reference/c-api/array.html#c.PyArray_ScalarKind", "NPY_SCALARKIND scalarkind()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.scalarkind", "NPY_SIGINT_OFF": "reference/c-api/config.html#c.NPY_SIGINT_OFF", "NPY_SIGINT_ON": "reference/c-api/config.html#c.NPY_SIGINT_ON", "NPY_SIGJMP_BUF": "reference/c-api/config.html#c.NPY_SIGJMP_BUF", "NPY_SIGLONGJMP": "reference/c-api/config.html#c.NPY_SIGLONGJMP", "npy_signbit()": "reference/c-api/coremath.html#c.npy_signbit", "NPY_SIGSETJMP": "reference/c-api/config.html#c.NPY_SIGSETJMP", "NPY_SIZEOF_DOUBLE": "reference/c-api/config.html#c.NPY_SIZEOF_DOUBLE", "NPY_SIZEOF_FLOAT": "reference/c-api/config.html#c.NPY_SIZEOF_FLOAT", "NPY_SIZEOF_INT": "reference/c-api/config.html#c.NPY_SIZEOF_INT", "NPY_SIZEOF_INTP": "reference/c-api/config.html#c.NPY_SIZEOF_INTP", "NPY_SIZEOF_LONG": "reference/c-api/config.html#c.NPY_SIZEOF_LONG", "NPY_SIZEOF_LONG_DOUBLE": "reference/c-api/config.html#c.NPY_SIZEOF_LONG_DOUBLE", "NPY_SIZEOF_LONGDOUBLE": "reference/c-api/config.html#c.NPY_SIZEOF_LONGDOUBLE", "NPY_SIZEOF_LONGLONG": "reference/c-api/config.html#c.NPY_SIZEOF_LONGLONG", "NPY_SIZEOF_PY_INTPTR_T": "reference/c-api/config.html#c.NPY_SIZEOF_PY_INTPTR_T", "NPY_SIZEOF_PY_LONG_LONG": "reference/c-api/config.html#c.NPY_SIZEOF_PY_LONG_LONG", "NPY_SIZEOF_SHORT": "reference/c-api/config.html", "NPY_SUBTYPE_PRIORITY": "reference/c-api/array.html#c.NPY_SUBTYPE_PRIORITY", "NPY_SUCCEED": "reference/c-api/array.html#c.NPY_SUCCEED", "NPY_SWAP": "reference/c-api/array.html#c.NPY_SWAP", "NPY_TRUE": "reference/c-api/array.html#c.NPY_TRUE", "npy_uint16 npy_doublebits_to_halfbits()": "reference/c-api/coremath.html#c.npy_doublebits_to_halfbits", "npy_uint16 npy_floatbits_to_halfbits()": "reference/c-api/coremath.html#c.npy_floatbits_to_halfbits", "npy_uint32 *core_dim_flags": "reference/c-api/types-and-structures.html#c.PyUFuncObject.core_dim_flags", "npy_uint32 iter_flags": "reference/c-api/types-and-structures.html#c.PyUFuncObject.iter_flags", "npy_uint32 npy_halfbits_to_floatbits()": "reference/c-api/coremath.html#c.npy_halfbits_to_floatbits", "npy_uint32 op_flags": "reference/c-api/types-and-structures.html#c.PyUFuncObject.op_flags", "npy_uint64 npy_halfbits_to_doublebits()": "reference/c-api/coremath.html#c.npy_halfbits_to_doublebits", "npy_uint64 random_bounded_uint64()": "reference/random/c-api.html#c.random_bounded_uint64", "npy_uint64 random_interval()": "reference/random/c-api.html#c.random_interval", "npy_uint64 random_uint()": "reference/random/c-api.html#c.random_uint", "NPY_UINTP_FMT": "reference/c-api/dtype.html#c.NPY_UINTP_FMT", "NPY_ULONGLONG_FMT": "reference/c-api/dtype.html#c.NPY_ULONGLONG_FMT", "NPY_UNLIKELY": "reference/c-api/config.html#c.NPY_UNLIKELY", "NPY_UNUSED": "reference/c-api/config.html#c.NPY_UNUSED", "NPY_USE_GETITEM": "reference/c-api/types-and-structures.html#c.NPY_USE_GETITEM", "NPY_USE_SETITEM": "reference/c-api/types-and-structures.html#c.NPY_USE_SETITEM", "NPY_USERDEF": "reference/c-api/dtype.html#c.NPY_USERDEF", "NPY_WRAP": "reference/c-api/array.html#c.PyArray_Choose.NPY_WRAP", "NpyAuxData *c_metadata": "reference/c-api/types-and-structures.html#c.NPY_USE_SETITEM.c_metadata", "NpyAuxData *NPY_AUXDATA_CLONE()": "reference/c-api/array.html#c.NPY_AUXDATA_CLONE", "NpyIter *NpyIter_AdvancedNew()": "reference/c-api/iterator.html#c.NpyIter_AdvancedNew", "NpyIter *NpyIter_Copy()": "reference/c-api/iterator.html#c.NpyIter_Copy", "NpyIter *NpyIter_MultiNew()": "reference/c-api/iterator.html#c.NpyIter_MultiNew", "NpyIter_GetMultiIndexFunc *NpyIter_GetGetMultiIndex()": "reference/c-api/iterator.html#c.NpyIter_GetGetMultiIndex", "number.__class_getitem__()": "reference/generated/numpy.number.__class_getitem__.html", "NumPy and SWIG": "reference/swig.html", "NumPy benchmarks": "benchmarking.html", "NumPy C code explanations": "dev/internals.code-explanations.html", "NumPy C-API": "reference/c-api/index.html", "NumPy for MATLAB users": "user/numpy-for-matlab-users.html", "NumPy fundamentals": "user/basics.html", "NumPy governance": "dev/governance/index.html", "NumPy How Tos": "user/howtos_index.html", "NumPy license": "license.html", "NumPy project governance and decision-making": "dev/governance/governance.html", "NumPy user guide": "user/index.html", "NumPy-specific help functions": "reference/routines.help.html", "numpy.absolute()": "reference/generated/numpy.absolute.html", "numpy.add()": "reference/generated/numpy.add.html", "numpy.all()": "reference/generated/numpy.all.html", "numpy.allclose()": "reference/generated/numpy.allclose.html", "numpy.amax()": "reference/generated/numpy.amax.html", "numpy.amin()": "reference/generated/numpy.amin.html", "numpy.angle()": "reference/generated/numpy.angle.html", "numpy.any()": "reference/generated/numpy.any.html", "numpy.append()": "reference/generated/numpy.append.html", "numpy.apply_along_axis()": "reference/generated/numpy.apply_along_axis.html", "numpy.apply_over_axes()": "reference/generated/numpy.apply_over_axes.html", "numpy.arange()": "reference/generated/numpy.arange.html", "numpy.arccos()": "reference/generated/numpy.arccos.html", "numpy.arccosh()": "reference/generated/numpy.arccosh.html", "numpy.arcsin()": "reference/generated/numpy.arcsin.html", "numpy.arcsinh()": "reference/generated/numpy.arcsinh.html", "numpy.arctan()": "reference/generated/numpy.arctan.html", "numpy.arctan2()": "reference/generated/numpy.arctan2.html", "numpy.arctanh()": "reference/generated/numpy.arctanh.html", "numpy.argmax()": "reference/generated/numpy.argmax.html", "numpy.argmin()": "reference/generated/numpy.argmin.html", "numpy.argpartition()": "reference/generated/numpy.argpartition.html", "numpy.argsort()": "reference/generated/numpy.argsort.html", "numpy.argwhere()": "reference/generated/numpy.argwhere.html", "numpy.around()": "reference/generated/numpy.around.html", "numpy.array()": "reference/generated/numpy.array.html", "numpy.array2string()": "reference/generated/numpy.array2string.html", "numpy.array_equal()": "reference/generated/numpy.array_equal.html", "numpy.array_equiv()": "reference/generated/numpy.array_equiv.html", "numpy.array_repr()": "reference/generated/numpy.array_repr.html", "numpy.array_split()": "reference/generated/numpy.array_split.html", "numpy.array_str()": "reference/generated/numpy.array_str.html", "numpy.asanyarray()": "reference/generated/numpy.asanyarray.html", "numpy.asarray()": "reference/generated/numpy.asarray.html", "numpy.asarray_chkfinite()": "reference/generated/numpy.asarray_chkfinite.html", "numpy.ascontiguousarray()": "reference/generated/numpy.ascontiguousarray.html", "numpy.asfarray()": "reference/generated/numpy.asfarray.html", "numpy.asfortranarray()": "reference/generated/numpy.asfortranarray.html", "numpy.asmatrix()": "reference/generated/numpy.asmatrix.html", "numpy.atleast_1d()": "reference/generated/numpy.atleast_1d.html", "numpy.atleast_2d()": "reference/generated/numpy.atleast_2d.html", "numpy.atleast_3d()": "reference/generated/numpy.atleast_3d.html", "numpy.average()": "reference/generated/numpy.average.html", "numpy.AxisError()": "reference/generated/numpy.axiserror.html", "numpy.bartlett()": "reference/generated/numpy.bartlett.html", "numpy.base_repr()": "reference/generated/numpy.base_repr.html", "numpy.binary_repr()": "reference/generated/numpy.binary_repr.html", "numpy.bincount()": "reference/generated/numpy.bincount.html", "numpy.bitwise_and()": "reference/generated/numpy.bitwise_and.html", "numpy.bitwise_or()": "reference/generated/numpy.bitwise_or.html", "numpy.bitwise_xor()": "reference/generated/numpy.bitwise_xor.html", "numpy.blackman()": "reference/generated/numpy.blackman.html", "numpy.block()": "reference/generated/numpy.block.html", "numpy.bmat()": "reference/generated/numpy.bmat.html", "numpy.broadcast": "reference/generated/numpy.broadcast.html", "numpy.broadcast_arrays()": "reference/generated/numpy.broadcast_arrays.html", "numpy.broadcast_shapes()": "reference/generated/numpy.broadcast_shapes.html", "numpy.broadcast_to()": "reference/generated/numpy.broadcast_to.html", "numpy.busday_count()": "reference/generated/numpy.busday_count.html", "numpy.busday_offset()": "reference/generated/numpy.busday_offset.html", "numpy.busdaycalendar()": "reference/generated/numpy.busdaycalendar.html", "numpy.byte": "reference/arrays.scalars.html#numpy.byte", "numpy.byte_bounds()": "reference/generated/numpy.byte_bounds.html", "numpy.bytes_": "reference/arrays.scalars.html#numpy.bytes_", "numpy.c_": "reference/generated/numpy.c_.html", "numpy.can_cast()": "reference/generated/numpy.can_cast.html", "numpy.cbrt()": "reference/generated/numpy.cbrt.html", "numpy.cdouble()": "reference/arrays.scalars.html#numpy.cdouble", "numpy.ceil()": "reference/generated/numpy.ceil.html", "numpy.cfloat": "reference/arrays.scalars.html#numpy.cfloat", "numpy.char.chararray()": "reference/generated/numpy.char.chararray.html", "numpy.chararray()": "reference/generated/numpy.chararray.html", "numpy.choose()": "reference/generated/numpy.choose.html", "numpy.clip()": "reference/generated/numpy.clip.html", "numpy.clongdouble": "reference/arrays.scalars.html#numpy.clongdouble", "numpy.clongfloat": "reference/arrays.scalars.html#numpy.clongfloat", "numpy.column_stack()": "reference/generated/numpy.column_stack.html", "numpy.common_type()": "reference/generated/numpy.common_type.html", "numpy.complex128": "reference/arrays.scalars.html#numpy.complex128", "numpy.complex192": "reference/arrays.scalars.html#numpy.complex192", "numpy.complex256": "reference/arrays.scalars.html#numpy.complex256", "numpy.complex64": "reference/arrays.scalars.html#numpy.complex64", "numpy.complex_": "reference/arrays.scalars.html#numpy.complex_", "numpy.compress()": "reference/generated/numpy.compress.html", "numpy.concatenate()": "reference/generated/numpy.concatenate.html", "numpy.conj()": "reference/generated/numpy.conj.html", "numpy.conjugate()": "reference/generated/numpy.conjugate.html", "numpy.convolve()": "reference/generated/numpy.convolve.html", "numpy.copy()": "reference/generated/numpy.copy.html", "numpy.copysign()": "reference/generated/numpy.copysign.html", "numpy.copyto()": "reference/generated/numpy.copyto.html", "numpy.corrcoef()": "reference/generated/numpy.corrcoef.html", "numpy.correlate()": "reference/generated/numpy.correlate.html", "numpy.cos()": "reference/generated/numpy.cos.html", "numpy.cosh()": "reference/generated/numpy.cosh.html", "numpy.count_nonzero()": "reference/generated/numpy.count_nonzero.html", "numpy.cov()": "reference/generated/numpy.cov.html", "numpy.cross()": "reference/generated/numpy.cross.html", "numpy.csingle": "reference/arrays.scalars.html#numpy.csingle", "numpy.ctypeslib.as_array()": "reference/routines.ctypeslib.html", "numpy.ctypeslib.as_ctypes()": "reference/routines.ctypeslib.html#numpy.ctypeslib.as_ctypes", "numpy.ctypeslib.as_ctypes_type()": "reference/routines.ctypeslib.html#numpy.ctypeslib.as_ctypes_type", "numpy.ctypeslib.c_intp": "reference/routines.ctypeslib.html#numpy.ctypeslib.c_intp", "numpy.ctypeslib.load_library()": "reference/routines.ctypeslib.html#numpy.ctypeslib.load_library", "numpy.ctypeslib.ndpointer()": "reference/routines.ctypeslib.html#numpy.ctypeslib.ndpointer", "numpy.cumprod()": "reference/generated/numpy.cumprod.html", "numpy.cumsum()": "reference/generated/numpy.cumsum.html", "numpy.DataSource()": "reference/generated/numpy.datasource.html", "numpy.datetime64": "reference/arrays.scalars.html#numpy.datetime64", "numpy.datetime_as_string()": "reference/generated/numpy.datetime_as_string.html", "numpy.datetime_data()": "reference/generated/numpy.datetime_data.html", "numpy.deg2rad()": "reference/generated/numpy.deg2rad.html", "numpy.degrees()": "reference/generated/numpy.degrees.html", "numpy.delete()": "reference/generated/numpy.delete.html", "numpy.deprecate()": "reference/generated/numpy.deprecate.html", "numpy.deprecate_with_doc()": "reference/generated/numpy.deprecate_with_doc.html", "numpy.diag()": "reference/generated/numpy.diag.html", "numpy.diag_indices()": "reference/generated/numpy.diag_indices.html", "numpy.diag_indices_from()": "reference/generated/numpy.diag_indices_from.html", "numpy.diagflat()": "reference/generated/numpy.diagflat.html", "numpy.diagonal()": "reference/generated/numpy.diagonal.html", "numpy.diff()": "reference/generated/numpy.diff.html", "numpy.digitize()": "reference/generated/numpy.digitize.html", "numpy.disp()": "reference/generated/numpy.disp.html", "numpy.distutils.ccompiler": "reference/generated/numpy.distutils.ccompiler.html", "numpy.distutils.ccompiler_opt": "reference/generated/numpy.distutils.ccompiler_opt.html", "numpy.distutils.ccompiler_opt.CCompilerOpt()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.html", "numpy.distutils.core.Extension()": "reference/generated/numpy.distutils.core.extension.html", "numpy.distutils.misc_util.all_strings()": "reference/distutils/misc_util.html", "numpy.distutils.misc_util.allpath()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.allpath", "numpy.distutils.misc_util.appendpath()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.appendpath", "numpy.distutils.misc_util.as_list()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.as_list", "numpy.distutils.misc_util.blue_text()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.blue_text", "numpy.distutils.misc_util.cyan_text()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.cyan_text", "numpy.distutils.misc_util.cyg2win32()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.cyg2win32", "numpy.distutils.misc_util.default_config_dict()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.default_config_dict", "numpy.distutils.misc_util.dict_append()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.dict_append", "numpy.distutils.misc_util.dot_join()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.dot_join", "numpy.distutils.misc_util.exec_mod_from_location()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.exec_mod_from_location", "numpy.distutils.misc_util.filter_sources()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.filter_sources", "numpy.distutils.misc_util.generate_config_py()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.generate_config_py", "numpy.distutils.misc_util.get_build_architecture()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.get_build_architecture", "numpy.distutils.misc_util.get_cmd()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.get_cmd", "numpy.distutils.misc_util.get_data_files()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.get_data_files", "numpy.distutils.misc_util.get_dependencies()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.get_dependencies", "numpy.distutils.misc_util.get_ext_source_files()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.get_ext_source_files", "numpy.distutils.misc_util.get_frame()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.get_frame", "numpy.distutils.misc_util.get_info()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.get_info", "numpy.distutils.misc_util.get_language()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.get_language", "numpy.distutils.misc_util.get_lib_source_files()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.get_lib_source_files", "numpy.distutils.misc_util.get_mathlibs()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.get_mathlibs", "numpy.distutils.misc_util.get_num_build_jobs()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.get_num_build_jobs", "numpy.distutils.misc_util.get_numpy_include_dirs()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.get_numpy_include_dirs", "numpy.distutils.misc_util.get_pkg_info()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.get_pkg_info", "numpy.distutils.misc_util.get_script_files()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.get_script_files", "numpy.distutils.misc_util.gpaths()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.gpaths", "numpy.distutils.misc_util.green_text()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.green_text", "numpy.distutils.misc_util.has_cxx_sources()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.has_cxx_sources", "numpy.distutils.misc_util.has_f_sources()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.has_f_sources", "numpy.distutils.misc_util.is_local_src_dir()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.is_local_src_dir", "numpy.distutils.misc_util.is_sequence()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.is_sequence", "numpy.distutils.misc_util.is_string()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.is_string", "numpy.distutils.misc_util.mingw32()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.mingw32", "numpy.distutils.misc_util.minrelpath()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.minrelpath", "numpy.distutils.misc_util.njoin()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.njoin", "numpy.distutils.misc_util.red_text()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.red_text", "numpy.distutils.misc_util.sanitize_cxx_flags()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.sanitize_cxx_flags", "numpy.distutils.misc_util.terminal_has_colors()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.terminal_has_colors", "numpy.distutils.misc_util.yellow_text()": "reference/distutils/misc_util.html#numpy.distutils.misc_util.yellow_text", "numpy.divide()": "reference/generated/numpy.divide.html", "numpy.divmod()": "reference/generated/numpy.divmod.html", "numpy.dot()": "reference/generated/numpy.dot.html", "numpy.double()": "reference/arrays.scalars.html#numpy.double", "numpy.dsplit()": "reference/generated/numpy.dsplit.html", "numpy.dstack()": "reference/generated/numpy.dstack.html", "numpy.dtype()": "reference/generated/numpy.dtype.html", "numpy.e": "reference/constants.html#numpy.e", "numpy.ediff1d()": "reference/generated/numpy.ediff1d.html", "numpy.einsum()": "reference/generated/numpy.einsum.html", "numpy.einsum_path()": "reference/generated/numpy.einsum_path.html", "numpy.empty()": "reference/generated/numpy.empty.html", "numpy.empty_like()": "reference/generated/numpy.empty_like.html", "numpy.equal()": "reference/generated/numpy.equal.html", "numpy.errstate()": "reference/generated/numpy.errstate.html", "numpy.euler_gamma": "reference/constants.html#numpy.euler_gamma", "numpy.exp()": "reference/generated/numpy.exp.html", "numpy.exp2()": "reference/generated/numpy.exp2.html", "numpy.expand_dims()": "reference/generated/numpy.expand_dims.html", "numpy.expm1()": "reference/generated/numpy.expm1.html", "numpy.extract()": "reference/generated/numpy.extract.html", "numpy.eye()": "reference/generated/numpy.eye.html", "numpy.f2py.get_include()": "f2py/usage.html#numpy.f2py.get_include", "numpy.f2py.run_main()": "f2py/usage.html#numpy.f2py.run_main", "numpy.fabs()": "reference/generated/numpy.fabs.html", "numpy.fill_diagonal()": "reference/generated/numpy.fill_diagonal.html", "numpy.find_common_type()": "reference/generated/numpy.find_common_type.html", "numpy.finfo()": "reference/generated/numpy.finfo.html", "numpy.fix()": "reference/generated/numpy.fix.html", "numpy.flatiter": "reference/generated/numpy.flatiter.html", "numpy.flatnonzero()": "reference/generated/numpy.flatnonzero.html", "numpy.flexible": "reference/arrays.scalars.html#numpy.flexible", "numpy.flip()": "reference/generated/numpy.flip.html", "numpy.fliplr()": "reference/generated/numpy.fliplr.html", "numpy.flipud()": "reference/generated/numpy.flipud.html", "numpy.float128": "reference/arrays.scalars.html#numpy.float128", "numpy.float16": "reference/arrays.scalars.html#numpy.float16", "numpy.float32": "reference/arrays.scalars.html#numpy.float32", "numpy.float64": "reference/arrays.scalars.html#numpy.float64", "numpy.float96": "reference/arrays.scalars.html#numpy.float96", "numpy.float_power()": "reference/generated/numpy.float_power.html", "numpy.floor()": "reference/generated/numpy.floor.html", "numpy.floor_divide()": "reference/generated/numpy.floor_divide.html", "numpy.fmax()": "reference/generated/numpy.fmax.html", "numpy.fmin()": "reference/generated/numpy.fmin.html", "numpy.fmod()": "reference/generated/numpy.fmod.html", "numpy.format_float_positional()": "reference/generated/numpy.format_float_positional.html", "numpy.format_float_scientific()": "reference/generated/numpy.format_float_scientific.html", "numpy.format_parser()": "reference/generated/numpy.format_parser.html", "numpy.frexp()": "reference/generated/numpy.frexp.html", "numpy.from_dlpack()": "reference/generated/numpy.from_dlpack.html", "numpy.frombuffer()": "reference/generated/numpy.frombuffer.html", "numpy.fromfile()": "reference/generated/numpy.fromfile.html", "numpy.fromfunction()": "reference/generated/numpy.fromfunction.html", "numpy.fromiter()": "reference/generated/numpy.fromiter.html", "numpy.frompyfunc()": "reference/generated/numpy.frompyfunc.html", "numpy.fromregex()": "reference/generated/numpy.fromregex.html", "numpy.fromstring()": "reference/generated/numpy.fromstring.html", "numpy.full()": "reference/generated/numpy.full.html", "numpy.full_like()": "reference/generated/numpy.full_like.html", "numpy.gcd()": "reference/generated/numpy.gcd.html", "numpy.genfromtxt()": "reference/generated/numpy.genfromtxt.html", "numpy.geomspace()": "reference/generated/numpy.geomspace.html", "numpy.get_include()": "reference/generated/numpy.get_include.html", "numpy.get_printoptions()": "reference/generated/numpy.get_printoptions.html", "numpy.getbufsize()": "reference/generated/numpy.getbufsize.html", "numpy.geterr()": "reference/generated/numpy.geterr.html", "numpy.geterrcall()": "reference/generated/numpy.geterrcall.html", "numpy.geterrobj()": "reference/generated/numpy.geterrobj.html", "numpy.gradient()": "reference/generated/numpy.gradient.html", "numpy.greater()": "reference/generated/numpy.greater.html", "numpy.greater_equal()": "reference/generated/numpy.greater_equal.html", "numpy.half": "reference/arrays.scalars.html#numpy.half", "numpy.hamming()": "reference/generated/numpy.hamming.html", "numpy.hanning()": "reference/generated/numpy.hanning.html", "numpy.heaviside()": "reference/generated/numpy.heaviside.html", "numpy.histogram()": "reference/generated/numpy.histogram.html", "numpy.histogram2d()": "reference/generated/numpy.histogram2d.html", "numpy.histogram_bin_edges()": "reference/generated/numpy.histogram_bin_edges.html", "numpy.histogramdd()": "reference/generated/numpy.histogramdd.html", "numpy.hsplit()": "reference/generated/numpy.hsplit.html", "numpy.hstack()": "reference/generated/numpy.hstack.html", "numpy.hypot()": "reference/generated/numpy.hypot.html", "numpy.i0()": "reference/generated/numpy.i0.html", "numpy.identity()": "reference/generated/numpy.identity.html", "numpy.iinfo()": "reference/generated/numpy.iinfo.html", "numpy.imag()": "reference/generated/numpy.imag.html", "numpy.in1d()": "reference/generated/numpy.in1d.html", "numpy.indices()": "reference/generated/numpy.indices.html", "numpy.inf": "reference/constants.html#numpy.inf", "numpy.Inf": "reference/constants.html", "numpy.Infinity": "reference/constants.html#numpy.Infinity", "numpy.info()": "reference/generated/numpy.info.html", "numpy.infty": "reference/constants.html#numpy.infty", "numpy.inner()": "reference/generated/numpy.inner.html", "numpy.insert()": "reference/generated/numpy.insert.html", "numpy.int16": "reference/arrays.scalars.html#numpy.int16", "numpy.int32": "reference/arrays.scalars.html#numpy.int32", "numpy.int64": "reference/arrays.scalars.html#numpy.int64", "numpy.int8": "reference/arrays.scalars.html#numpy.int8", "numpy.int_": "reference/arrays.scalars.html#numpy.int_", "numpy.intc": "reference/arrays.scalars.html#numpy.intc", "numpy.interp()": "reference/generated/numpy.interp.html", "numpy.intersect1d()": "reference/generated/numpy.intersect1d.html", "numpy.intp": "reference/arrays.scalars.html#numpy.intp", "numpy.invert()": "reference/generated/numpy.invert.html", "numpy.is_busday()": "reference/generated/numpy.is_busday.html", "numpy.isclose()": "reference/generated/numpy.isclose.html", "numpy.iscomplex()": "reference/generated/numpy.iscomplex.html", "numpy.iscomplexobj()": "reference/generated/numpy.iscomplexobj.html", "numpy.isfinite()": "reference/generated/numpy.isfinite.html", "numpy.isfortran()": "reference/generated/numpy.isfortran.html", "numpy.isin()": "reference/generated/numpy.isin.html", "numpy.isinf()": "reference/generated/numpy.isinf.html", "numpy.isnan()": "reference/generated/numpy.isnan.html", "numpy.isnat()": "reference/generated/numpy.isnat.html", "numpy.isneginf()": "reference/generated/numpy.isneginf.html", "numpy.isposinf()": "reference/generated/numpy.isposinf.html", "numpy.isreal()": "reference/generated/numpy.isreal.html", "numpy.isrealobj()": "reference/generated/numpy.isrealobj.html", "numpy.isscalar()": "reference/generated/numpy.isscalar.html", "numpy.issctype()": "reference/generated/numpy.issctype.html", "numpy.issubclass_()": "reference/generated/numpy.issubclass_.html", "numpy.issubdtype()": "reference/generated/numpy.issubdtype.html", "numpy.issubsctype()": "reference/generated/numpy.issubsctype.html", "numpy.iterable()": "reference/generated/numpy.iterable.html", "numpy.ix_()": "reference/generated/numpy.ix_.html", "numpy.kaiser()": "reference/generated/numpy.kaiser.html", "numpy.kron()": "reference/generated/numpy.kron.html", "numpy.lcm()": "reference/generated/numpy.lcm.html", "numpy.ldexp()": "reference/generated/numpy.ldexp.html", "numpy.left_shift()": "reference/generated/numpy.left_shift.html", "numpy.less()": "reference/generated/numpy.less.html", "numpy.less_equal()": "reference/generated/numpy.less_equal.html", "numpy.lexsort()": "reference/generated/numpy.lexsort.html", "numpy.lib.arraysetops": "reference/generated/numpy.lib.arraysetops.html", "numpy.lib.Arrayterator()": "reference/generated/numpy.lib.arrayterator.html", "numpy.lib.mixins.NDArrayOperatorsMixin": "reference/generated/numpy.lib.mixins.ndarrayoperatorsmixin.html", "numpy.lib.NumpyVersion()": "reference/generated/numpy.lib.numpyversion.html", "numpy.lib.recfunctions.append_fields()": "user/basics.rec.html", "numpy.lib.recfunctions.apply_along_fields()": "user/basics.rec.html#numpy.lib.recfunctions.apply_along_fields", "numpy.lib.recfunctions.assign_fields_by_name()": "user/basics.rec.html#numpy.lib.recfunctions.assign_fields_by_name", "numpy.lib.recfunctions.drop_fields()": "user/basics.rec.html#numpy.lib.recfunctions.drop_fields", "numpy.lib.recfunctions.find_duplicates()": "user/basics.rec.html#numpy.lib.recfunctions.find_duplicates", "numpy.lib.recfunctions.flatten_descr()": "user/basics.rec.html#numpy.lib.recfunctions.flatten_descr", "numpy.lib.recfunctions.get_fieldstructure()": "user/basics.rec.html#numpy.lib.recfunctions.get_fieldstructure", "numpy.lib.recfunctions.get_names()": "user/basics.rec.html#numpy.lib.recfunctions.get_names", "numpy.lib.recfunctions.get_names_flat()": "user/basics.rec.html#numpy.lib.recfunctions.get_names_flat", "numpy.lib.recfunctions.join_by()": "user/basics.rec.html#numpy.lib.recfunctions.join_by", "numpy.lib.recfunctions.merge_arrays()": "user/basics.rec.html#numpy.lib.recfunctions.merge_arrays", "numpy.lib.recfunctions.rec_append_fields()": "user/basics.rec.html#numpy.lib.recfunctions.rec_append_fields", "numpy.lib.recfunctions.rec_drop_fields()": "user/basics.rec.html#numpy.lib.recfunctions.rec_drop_fields", "numpy.lib.recfunctions.rec_join()": "user/basics.rec.html#numpy.lib.recfunctions.rec_join", "numpy.lib.recfunctions.recursive_fill_fields()": "user/basics.rec.html#numpy.lib.recfunctions.recursive_fill_fields", "numpy.lib.recfunctions.rename_fields()": "user/basics.rec.html#numpy.lib.recfunctions.rename_fields", "numpy.lib.recfunctions.repack_fields()": "user/basics.rec.html#numpy.lib.recfunctions.repack_fields", "numpy.lib.recfunctions.require_fields()": "user/basics.rec.html#numpy.lib.recfunctions.require_fields", "numpy.lib.recfunctions.stack_arrays()": "user/basics.rec.html#numpy.lib.recfunctions.stack_arrays", "numpy.lib.recfunctions.structured_to_unstructured()": "user/basics.rec.html#numpy.lib.recfunctions.structured_to_unstructured", "numpy.lib.recfunctions.unstructured_to_structured()": "user/basics.rec.html#numpy.lib.recfunctions.unstructured_to_structured", "numpy.lib.user_array.container()": "reference/generated/numpy.lib.user_array.container.html", "numpy.linspace()": "reference/generated/numpy.linspace.html", "numpy.load()": "reference/generated/numpy.load.html", "numpy.loadtxt()": "reference/generated/numpy.loadtxt.html", "numpy.log()": "reference/generated/numpy.log.html", "numpy.log10()": "reference/generated/numpy.log10.html", "numpy.log1p()": "reference/generated/numpy.log1p.html", "numpy.log2()": "reference/generated/numpy.log2.html", "numpy.logaddexp()": "reference/generated/numpy.logaddexp.html", "numpy.logaddexp2()": "reference/generated/numpy.logaddexp2.html", "numpy.logical_and()": "reference/generated/numpy.logical_and.html", "numpy.logical_not()": "reference/generated/numpy.logical_not.html", "numpy.logical_or()": "reference/generated/numpy.logical_or.html", "numpy.logical_xor()": "reference/generated/numpy.logical_xor.html", "numpy.logspace()": "reference/generated/numpy.logspace.html", "numpy.longcomplex": "reference/arrays.scalars.html#numpy.longcomplex", "numpy.longdouble": "reference/arrays.scalars.html#numpy.longdouble", "numpy.longfloat": "reference/arrays.scalars.html#numpy.longfloat", "numpy.longlong": "reference/arrays.scalars.html#numpy.longlong", "numpy.lookfor()": "reference/generated/numpy.lookfor.html", "numpy.ma.masked": "reference/maskedarray.baseclass.html", "numpy.ma.masked_array": "reference/generated/numpy.ma.masked_array.html", "numpy.ma.masked_print_options": "reference/maskedarray.baseclass.html#numpy.ma.masked_print_options", "numpy.ma.MaskType": "reference/generated/numpy.ma.masktype.html", "numpy.ma.nomask": "reference/maskedarray.baseclass.html#numpy.ma.nomask", "numpy.MachAr()": "reference/generated/numpy.machar.html", "numpy.mask_indices()": "reference/generated/numpy.mask_indices.html", "numpy.mat()": "reference/generated/numpy.mat.html", "numpy.matmul()": "reference/generated/numpy.matmul.html", "numpy.matrix()": "reference/generated/numpy.matrix.html", "numpy.maximum()": "reference/generated/numpy.maximum.html", "numpy.maximum_sctype()": "reference/generated/numpy.maximum_sctype.html", "numpy.may_share_memory()": "reference/generated/numpy.may_share_memory.html", "numpy.mean()": "reference/generated/numpy.mean.html", "numpy.median()": "reference/generated/numpy.median.html", "numpy.memmap()": "reference/generated/numpy.memmap.html", "numpy.meshgrid()": "reference/generated/numpy.meshgrid.html", "numpy.mgrid": "reference/generated/numpy.mgrid.html", "numpy.min_scalar_type()": "reference/generated/numpy.min_scalar_type.html", "numpy.minimum()": "reference/generated/numpy.minimum.html", "numpy.mintypecode()": "reference/generated/numpy.mintypecode.html", "numpy.mod()": "reference/generated/numpy.mod.html", "numpy.modf()": "reference/generated/numpy.modf.html", "numpy.moveaxis()": "reference/generated/numpy.moveaxis.html", "numpy.msort()": "reference/generated/numpy.msort.html", "numpy.multiply()": "reference/generated/numpy.multiply.html", "numpy.NAN": "reference/constants.html#numpy.NAN", "numpy.NaN": "reference/constants.html#numpy.NaN", "numpy.nan": "reference/constants.html#numpy.nan", "numpy.nan_to_num()": "reference/generated/numpy.nan_to_num.html", "numpy.nanargmax()": "reference/generated/numpy.nanargmax.html", "numpy.nanargmin()": "reference/generated/numpy.nanargmin.html", "numpy.nancumprod()": "reference/generated/numpy.nancumprod.html", "numpy.nancumsum()": "reference/generated/numpy.nancumsum.html", "numpy.nanmax()": "reference/generated/numpy.nanmax.html", "numpy.nanmean()": "reference/generated/numpy.nanmean.html", "numpy.nanmedian()": "reference/generated/numpy.nanmedian.html", "numpy.nanmin()": "reference/generated/numpy.nanmin.html", "numpy.nanpercentile()": "reference/generated/numpy.nanpercentile.html", "numpy.nanprod()": "reference/generated/numpy.nanprod.html", "numpy.nanquantile()": "reference/generated/numpy.nanquantile.html", "numpy.nanstd()": "reference/generated/numpy.nanstd.html", "numpy.nansum()": "reference/generated/numpy.nansum.html", "numpy.nanvar()": "reference/generated/numpy.nanvar.html", "numpy.ndarray()": "reference/generated/numpy.ndarray.html", "numpy.ndenumerate()": "reference/generated/numpy.ndenumerate.html", "numpy.ndindex()": "reference/generated/numpy.ndindex.html", "numpy.nditer()": "reference/generated/numpy.nditer.html", "numpy.negative()": "reference/generated/numpy.negative.html", "numpy.nested_iters()": "reference/generated/numpy.nested_iters.html", "numpy.newaxis": "reference/constants.html#numpy.newaxis", "numpy.nextafter()": "reference/generated/numpy.nextafter.html", "numpy.NINF": "reference/constants.html#numpy.NINF", "numpy.nonzero()": "reference/generated/numpy.nonzero.html", "numpy.not_equal()": "reference/generated/numpy.not_equal.html", "numpy.number": "reference/arrays.scalars.html#numpy.number", "numpy.NZERO": "reference/constants.html#numpy.NZERO", "numpy.obj2sctype()": "reference/generated/numpy.obj2sctype.html", "numpy.object_": "reference/arrays.scalars.html#numpy.object_", "numpy.ogrid": "reference/generated/numpy.ogrid.html", "numpy.ones()": "reference/generated/numpy.ones.html", "numpy.ones_like()": "reference/generated/numpy.ones_like.html", "numpy.outer()": "reference/generated/numpy.outer.html", "numpy.packbits()": "reference/generated/numpy.packbits.html", "numpy.pad()": "reference/generated/numpy.pad.html", "numpy.partition()": "reference/generated/numpy.partition.html", "numpy.percentile()": "reference/generated/numpy.percentile.html", "numpy.pi": "reference/constants.html#numpy.pi", "numpy.piecewise()": "reference/generated/numpy.piecewise.html", "numpy.PINF": "reference/constants.html#numpy.PINF", "numpy.place()": "reference/generated/numpy.place.html", "numpy.poly()": "reference/generated/numpy.poly.html", "numpy.poly1d()": "reference/generated/numpy.poly1d.html", "numpy.polyadd()": "reference/generated/numpy.polyadd.html", "numpy.polyder()": "reference/generated/numpy.polyder.html", "numpy.polydiv()": "reference/generated/numpy.polydiv.html", "numpy.polyfit()": "reference/generated/numpy.polyfit.html", "numpy.polyint()": "reference/generated/numpy.polyint.html", "numpy.polymul()": "reference/generated/numpy.polymul.html", "numpy.polynomial.chebyshev.Chebyshev()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.html", "numpy.polynomial.hermite.Hermite()": "reference/generated/numpy.polynomial.hermite.hermite.html", "numpy.polynomial.hermite_e.HermiteE()": "reference/generated/numpy.polynomial.hermite_e.hermitee.html", "numpy.polynomial.laguerre.Laguerre()": "reference/generated/numpy.polynomial.laguerre.laguerre.html", "numpy.polynomial.legendre.Legendre()": "reference/generated/numpy.polynomial.legendre.legendre.html", "numpy.polynomial.polynomial.Polynomial()": "reference/generated/numpy.polynomial.polynomial.polynomial.html", "numpy.polysub()": "reference/generated/numpy.polysub.html", "numpy.polyval()": "reference/generated/numpy.polyval.html", "numpy.positive()": "reference/generated/numpy.positive.html", "numpy.power()": "reference/generated/numpy.power.html", "numpy.printoptions()": "reference/generated/numpy.printoptions.html", "numpy.prod()": "reference/generated/numpy.prod.html", "numpy.promote_types()": "reference/generated/numpy.promote_types.html", "numpy.ptp()": "reference/generated/numpy.ptp.html", "numpy.put()": "reference/generated/numpy.put.html", "numpy.put_along_axis()": "reference/generated/numpy.put_along_axis.html", "numpy.putmask()": "reference/generated/numpy.putmask.html", "numpy.PZERO": "reference/constants.html#numpy.PZERO", "numpy.quantile()": "reference/generated/numpy.quantile.html", "numpy.r_": "reference/generated/numpy.r_.html", "numpy.rad2deg()": "reference/generated/numpy.rad2deg.html", "numpy.radians()": "reference/generated/numpy.radians.html", "numpy.random.BitGenerator()": "reference/random/bit_generators/generated/numpy.random.bitgenerator.html", "numpy.random.default_rng()": "reference/random/generator.html", "numpy.random.Generator()": "reference/random/generator.html#numpy.random.Generator", "numpy.random.MT19937()": "reference/random/bit_generators/mt19937.html", "numpy.random.PCG64()": "reference/random/bit_generators/pcg64.html", "numpy.random.PCG64DXSM()": "reference/random/bit_generators/pcg64dxsm.html", "numpy.random.Philox()": "reference/random/bit_generators/philox.html", "numpy.random.RandomState()": "reference/random/legacy.html", "numpy.random.SeedSequence()": "reference/random/bit_generators/generated/numpy.random.seedsequence.html", "numpy.random.SFC64()": "reference/random/bit_generators/sfc64.html", "numpy.RankWarning": "reference/generated/numpy.rankwarning.html", "numpy.ravel()": "reference/generated/numpy.ravel.html", "numpy.ravel_multi_index()": "reference/generated/numpy.ravel_multi_index.html", "numpy.real()": "reference/generated/numpy.real.html", "numpy.real_if_close()": "reference/generated/numpy.real_if_close.html", "numpy.recarray()": "reference/generated/numpy.recarray.html", "numpy.reciprocal()": "reference/generated/numpy.reciprocal.html", "numpy.record": "reference/generated/numpy.record.html", "numpy.remainder()": "reference/generated/numpy.remainder.html", "numpy.repeat()": "reference/generated/numpy.repeat.html", "numpy.require()": "reference/generated/numpy.require.html", "numpy.reshape()": "reference/generated/numpy.reshape.html", "numpy.resize()": "reference/generated/numpy.resize.html", "numpy.result_type()": "reference/generated/numpy.result_type.html", "numpy.right_shift()": "reference/generated/numpy.right_shift.html", "numpy.rint()": "reference/generated/numpy.rint.html", "numpy.roll()": "reference/generated/numpy.roll.html", "numpy.rollaxis()": "reference/generated/numpy.rollaxis.html", "numpy.roots()": "reference/generated/numpy.roots.html", "numpy.rot90()": "reference/generated/numpy.rot90.html", "numpy.round_()": "reference/generated/numpy.round_.html", "numpy.row_stack()": "reference/generated/numpy.row_stack.html", "numpy.s_": "reference/generated/numpy.s_.html", "numpy.save()": "reference/generated/numpy.save.html", "numpy.savetxt()": "reference/generated/numpy.savetxt.html", "numpy.savez()": "reference/generated/numpy.savez.html", "numpy.savez_compressed()": "reference/generated/numpy.savez_compressed.html", "numpy.sctype2char()": "reference/generated/numpy.sctype2char.html", "numpy.searchsorted()": "reference/generated/numpy.searchsorted.html", "numpy.select()": "reference/generated/numpy.select.html", "numpy.set_printoptions()": "reference/generated/numpy.set_printoptions.html", "numpy.set_string_function()": "reference/generated/numpy.set_string_function.html", "numpy.setbufsize()": "reference/generated/numpy.setbufsize.html", "numpy.setdiff1d()": "reference/generated/numpy.setdiff1d.html", "numpy.seterr()": "reference/generated/numpy.seterr.html", "numpy.seterrcall()": "reference/generated/numpy.seterrcall.html", "numpy.seterrobj()": "reference/generated/numpy.seterrobj.html", "numpy.setxor1d()": "reference/generated/numpy.setxor1d.html", "numpy.shape()": "reference/generated/numpy.shape.html", "numpy.shares_memory()": "reference/generated/numpy.shares_memory.html", "numpy.short": "reference/arrays.scalars.html#numpy.short", "numpy.show_config()": "reference/generated/numpy.show_config.html", "numpy.sign()": "reference/generated/numpy.sign.html", "numpy.signbit()": "reference/generated/numpy.signbit.html", "numpy.sin()": "reference/generated/numpy.sin.html", "numpy.sinc()": "reference/generated/numpy.sinc.html", "numpy.single": "reference/arrays.scalars.html#numpy.single", "numpy.singlecomplex": "reference/arrays.scalars.html#numpy.singlecomplex", "numpy.sinh()": "reference/generated/numpy.sinh.html", "numpy.sort()": "reference/generated/numpy.sort.html", "numpy.sort_complex()": "reference/generated/numpy.sort_complex.html", "numpy.source()": "reference/generated/numpy.source.html", "numpy.spacing()": "reference/generated/numpy.spacing.html", "numpy.split()": "reference/generated/numpy.split.html", "numpy.sqrt()": "reference/generated/numpy.sqrt.html", "numpy.square()": "reference/generated/numpy.square.html", "numpy.squeeze()": "reference/generated/numpy.squeeze.html", "numpy.stack()": "reference/generated/numpy.stack.html", "numpy.std()": "reference/generated/numpy.std.html", "numpy.str_": "reference/arrays.scalars.html#numpy.str_", "numpy.string_": "reference/arrays.scalars.html#numpy.string_", "numpy.subtract()": "reference/generated/numpy.subtract.html", "numpy.sum()": "reference/generated/numpy.sum.html", "numpy.swapaxes()": "reference/generated/numpy.swapaxes.html", "numpy.take()": "reference/generated/numpy.take.html", "numpy.take_along_axis()": "reference/generated/numpy.take_along_axis.html", "numpy.tan()": "reference/generated/numpy.tan.html", "numpy.tanh()": "reference/generated/numpy.tanh.html", "numpy.tensordot()": "reference/generated/numpy.tensordot.html", "numpy.testing.clear_and_catch_warnings()": "reference/generated/numpy.testing.clear_and_catch_warnings.html", "numpy.testing.extbuild.build_and_import_extension()": "reference/testing.html", "numpy.testing.suppress_warnings()": "reference/generated/numpy.testing.suppress_warnings.html", "numpy.testing.Tester": "reference/generated/numpy.testing.tester.html", "numpy.tile()": "reference/generated/numpy.tile.html", "numpy.timedelta64": "reference/arrays.scalars.html#numpy.timedelta64", "numpy.trace()": "reference/generated/numpy.trace.html", "numpy.transpose()": "reference/generated/numpy.transpose.html", "numpy.trapz()": "reference/generated/numpy.trapz.html", "numpy.tri()": "reference/generated/numpy.tri.html", "numpy.tril()": "reference/generated/numpy.tril.html", "numpy.tril_indices()": "reference/generated/numpy.tril_indices.html", "numpy.tril_indices_from()": "reference/generated/numpy.tril_indices_from.html", "numpy.trim_zeros()": "reference/generated/numpy.trim_zeros.html", "numpy.triu()": "reference/generated/numpy.triu.html", "numpy.triu_indices()": "reference/generated/numpy.triu_indices.html", "numpy.triu_indices_from()": "reference/generated/numpy.triu_indices_from.html", "numpy.true_divide()": "reference/generated/numpy.true_divide.html", "numpy.trunc()": "reference/generated/numpy.trunc.html", "numpy.typename()": "reference/generated/numpy.typename.html", "numpy.typing.ArrayLike": "reference/typing.html", "numpy.typing.DTypeLike": "reference/typing.html#numpy.typing.DTypeLike", "numpy.typing.NBitBase": "reference/typing.html#numpy.typing.NBitBase", "numpy.typing.NDArray": "reference/typing.html#numpy.typing.NDArray", "numpy.ubyte": "reference/arrays.scalars.html#numpy.ubyte", "numpy.ufunc": "reference/generated/numpy.ufunc.html", "numpy.uint": "reference/arrays.scalars.html#numpy.uint", "numpy.uint16": "reference/arrays.scalars.html#numpy.uint16", "numpy.uint32": "reference/arrays.scalars.html#numpy.uint32", "numpy.uint64": "reference/arrays.scalars.html#numpy.uint64", "numpy.uint8": "reference/arrays.scalars.html#numpy.uint8", "numpy.uintc": "reference/arrays.scalars.html#numpy.uintc", "numpy.uintp": "reference/arrays.scalars.html#numpy.uintp", "numpy.ulonglong": "reference/arrays.scalars.html#numpy.ulonglong", "numpy.unicode_": "reference/arrays.scalars.html#numpy.unicode_", "numpy.union1d()": "reference/generated/numpy.union1d.html", "numpy.unique()": "reference/generated/numpy.unique.html", "numpy.unpackbits()": "reference/generated/numpy.unpackbits.html", "numpy.unravel_index()": "reference/generated/numpy.unravel_index.html", "numpy.unwrap()": "reference/generated/numpy.unwrap.html", "numpy.ushort": "reference/arrays.scalars.html#numpy.ushort", "numpy.vander()": "reference/generated/numpy.vander.html", "numpy.var()": "reference/generated/numpy.var.html", "numpy.vdot()": "reference/generated/numpy.vdot.html", "numpy.vectorize()": "reference/generated/numpy.vectorize.html", "numpy.void": "reference/arrays.scalars.html#numpy.void", "numpy.vsplit()": "reference/generated/numpy.vsplit.html", "numpy.vstack()": "reference/generated/numpy.vstack.html", "numpy.where()": "reference/generated/numpy.where.html", "numpy.who()": "reference/generated/numpy.who.html", "numpy.zeros()": "reference/generated/numpy.zeros.html", "numpy.zeros_like()": "reference/generated/numpy.zeros_like.html", "NumPy: the absolute basics for beginners": "user/absolute_beginners.html", "Optionally SciPy-accelerated routines (": "reference/routines.dual.html", "Padding Arrays": "reference/routines.padding.html", "Parameters": "reference/distutils.html", "paths()": "reference/distutils.html#numpy.distutils.misc_util.Configuration.paths", "Performance": "reference/random/performance.html", "Poly1d": "reference/routines.polynomials.poly1d.html", "poly1d.__call__()": "reference/generated/numpy.poly1d.__call__.html", "poly1d.deriv()": "reference/generated/numpy.poly1d.deriv.html", "poly1d.integ()": "reference/generated/numpy.poly1d.integ.html", "polynomial.chebyshev.cheb2poly()": "reference/generated/numpy.polynomial.chebyshev.cheb2poly.html", "polynomial.chebyshev.chebadd()": "reference/generated/numpy.polynomial.chebyshev.chebadd.html", "polynomial.chebyshev.chebcompanion()": "reference/generated/numpy.polynomial.chebyshev.chebcompanion.html", "polynomial.chebyshev.chebder()": "reference/generated/numpy.polynomial.chebyshev.chebder.html", "polynomial.chebyshev.chebdiv()": "reference/generated/numpy.polynomial.chebyshev.chebdiv.html", "polynomial.chebyshev.chebdomain": "reference/generated/numpy.polynomial.chebyshev.chebdomain.html", "polynomial.chebyshev.chebfit()": "reference/generated/numpy.polynomial.chebyshev.chebfit.html", "polynomial.chebyshev.chebfromroots()": "reference/generated/numpy.polynomial.chebyshev.chebfromroots.html", "polynomial.chebyshev.chebgauss()": "reference/generated/numpy.polynomial.chebyshev.chebgauss.html", "polynomial.chebyshev.chebgrid2d()": "reference/generated/numpy.polynomial.chebyshev.chebgrid2d.html", "polynomial.chebyshev.chebgrid3d()": "reference/generated/numpy.polynomial.chebyshev.chebgrid3d.html", "polynomial.chebyshev.chebint()": "reference/generated/numpy.polynomial.chebyshev.chebint.html", "polynomial.chebyshev.chebinterpolate()": "reference/generated/numpy.polynomial.chebyshev.chebinterpolate.html", "polynomial.chebyshev.chebline()": "reference/generated/numpy.polynomial.chebyshev.chebline.html", "polynomial.chebyshev.chebmul()": "reference/generated/numpy.polynomial.chebyshev.chebmul.html", "polynomial.chebyshev.chebmulx()": "reference/generated/numpy.polynomial.chebyshev.chebmulx.html", "polynomial.chebyshev.chebone": "reference/generated/numpy.polynomial.chebyshev.chebone.html", "polynomial.chebyshev.chebpow()": "reference/generated/numpy.polynomial.chebyshev.chebpow.html", "polynomial.chebyshev.chebpts1()": "reference/generated/numpy.polynomial.chebyshev.chebpts1.html", "polynomial.chebyshev.chebpts2()": "reference/generated/numpy.polynomial.chebyshev.chebpts2.html", "polynomial.chebyshev.chebroots()": "reference/generated/numpy.polynomial.chebyshev.chebroots.html", "polynomial.chebyshev.chebsub()": "reference/generated/numpy.polynomial.chebyshev.chebsub.html", "polynomial.chebyshev.chebtrim()": "reference/generated/numpy.polynomial.chebyshev.chebtrim.html", "polynomial.chebyshev.chebval()": "reference/generated/numpy.polynomial.chebyshev.chebval.html", "polynomial.chebyshev.chebval2d()": "reference/generated/numpy.polynomial.chebyshev.chebval2d.html", "polynomial.chebyshev.chebval3d()": "reference/generated/numpy.polynomial.chebyshev.chebval3d.html", "polynomial.chebyshev.chebvander()": "reference/generated/numpy.polynomial.chebyshev.chebvander.html", "polynomial.chebyshev.chebvander2d()": "reference/generated/numpy.polynomial.chebyshev.chebvander2d.html", "polynomial.chebyshev.chebvander3d()": "reference/generated/numpy.polynomial.chebyshev.chebvander3d.html", "polynomial.chebyshev.chebweight()": "reference/generated/numpy.polynomial.chebyshev.chebweight.html", "polynomial.chebyshev.chebx": "reference/generated/numpy.polynomial.chebyshev.chebx.html", "polynomial.chebyshev.Chebyshev.__call__()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.__call__.html", "polynomial.chebyshev.Chebyshev.basis()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.basis.html", "polynomial.chebyshev.Chebyshev.cast()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.cast.html", "polynomial.chebyshev.Chebyshev.convert()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.convert.html", "polynomial.chebyshev.Chebyshev.copy()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.copy.html", "polynomial.chebyshev.Chebyshev.cutdeg()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.cutdeg.html", "polynomial.chebyshev.Chebyshev.degree()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.degree.html", "polynomial.chebyshev.Chebyshev.deriv()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.deriv.html", "polynomial.chebyshev.Chebyshev.domain": "reference/generated/numpy.polynomial.chebyshev.chebyshev.domain.html", "polynomial.chebyshev.Chebyshev.fit()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.fit.html", "polynomial.chebyshev.Chebyshev.fromroots()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.fromroots.html", "polynomial.chebyshev.Chebyshev.has_samecoef()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.has_samecoef.html", "polynomial.chebyshev.Chebyshev.has_samedomain()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.has_samedomain.html", "polynomial.chebyshev.Chebyshev.has_sametype()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.has_sametype.html", "polynomial.chebyshev.Chebyshev.has_samewindow()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.has_samewindow.html", "polynomial.chebyshev.Chebyshev.identity()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.identity.html", "polynomial.chebyshev.Chebyshev.integ()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.integ.html", "polynomial.chebyshev.Chebyshev.interpolate()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.interpolate.html", "polynomial.chebyshev.Chebyshev.linspace()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.linspace.html", "polynomial.chebyshev.Chebyshev.mapparms()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.mapparms.html", "polynomial.chebyshev.Chebyshev.roots()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.roots.html", "polynomial.chebyshev.Chebyshev.trim()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.trim.html", "polynomial.chebyshev.Chebyshev.truncate()": "reference/generated/numpy.polynomial.chebyshev.chebyshev.truncate.html", "polynomial.chebyshev.chebzero": "reference/generated/numpy.polynomial.chebyshev.chebzero.html", "polynomial.chebyshev.poly2cheb()": "reference/generated/numpy.polynomial.chebyshev.poly2cheb.html", "polynomial.hermite.herm2poly()": "reference/generated/numpy.polynomial.hermite.herm2poly.html", "polynomial.hermite.hermadd()": "reference/generated/numpy.polynomial.hermite.hermadd.html", "polynomial.hermite.hermcompanion()": "reference/generated/numpy.polynomial.hermite.hermcompanion.html", "polynomial.hermite.hermder()": "reference/generated/numpy.polynomial.hermite.hermder.html", "polynomial.hermite.hermdiv()": "reference/generated/numpy.polynomial.hermite.hermdiv.html", "polynomial.hermite.hermdomain": "reference/generated/numpy.polynomial.hermite.hermdomain.html", "polynomial.hermite.hermfit()": "reference/generated/numpy.polynomial.hermite.hermfit.html", "polynomial.hermite.hermfromroots()": "reference/generated/numpy.polynomial.hermite.hermfromroots.html", "polynomial.hermite.hermgauss()": "reference/generated/numpy.polynomial.hermite.hermgauss.html", "polynomial.hermite.hermgrid2d()": "reference/generated/numpy.polynomial.hermite.hermgrid2d.html", "polynomial.hermite.hermgrid3d()": "reference/generated/numpy.polynomial.hermite.hermgrid3d.html", "polynomial.hermite.hermint()": "reference/generated/numpy.polynomial.hermite.hermint.html", "polynomial.hermite.Hermite.__call__()": "reference/generated/numpy.polynomial.hermite.hermite.__call__.html", "polynomial.hermite.Hermite.basis()": "reference/generated/numpy.polynomial.hermite.hermite.basis.html", "polynomial.hermite.Hermite.cast()": "reference/generated/numpy.polynomial.hermite.hermite.cast.html", "polynomial.hermite.Hermite.convert()": "reference/generated/numpy.polynomial.hermite.hermite.convert.html", "polynomial.hermite.Hermite.copy()": "reference/generated/numpy.polynomial.hermite.hermite.copy.html", "polynomial.hermite.Hermite.cutdeg()": "reference/generated/numpy.polynomial.hermite.hermite.cutdeg.html", "polynomial.hermite.Hermite.degree()": "reference/generated/numpy.polynomial.hermite.hermite.degree.html", "polynomial.hermite.Hermite.deriv()": "reference/generated/numpy.polynomial.hermite.hermite.deriv.html", "polynomial.hermite.Hermite.domain": "reference/generated/numpy.polynomial.hermite.hermite.domain.html", "polynomial.hermite.Hermite.fit()": "reference/generated/numpy.polynomial.hermite.hermite.fit.html", "polynomial.hermite.Hermite.fromroots()": "reference/generated/numpy.polynomial.hermite.hermite.fromroots.html", "polynomial.hermite.Hermite.has_samecoef()": "reference/generated/numpy.polynomial.hermite.hermite.has_samecoef.html", "polynomial.hermite.Hermite.has_samedomain()": "reference/generated/numpy.polynomial.hermite.hermite.has_samedomain.html", "polynomial.hermite.Hermite.has_sametype()": "reference/generated/numpy.polynomial.hermite.hermite.has_sametype.html", "polynomial.hermite.Hermite.has_samewindow()": "reference/generated/numpy.polynomial.hermite.hermite.has_samewindow.html", "polynomial.hermite.Hermite.identity()": "reference/generated/numpy.polynomial.hermite.hermite.identity.html", "polynomial.hermite.Hermite.integ()": "reference/generated/numpy.polynomial.hermite.hermite.integ.html", "polynomial.hermite.Hermite.linspace()": "reference/generated/numpy.polynomial.hermite.hermite.linspace.html", "polynomial.hermite.Hermite.mapparms()": "reference/generated/numpy.polynomial.hermite.hermite.mapparms.html", "polynomial.hermite.Hermite.roots()": "reference/generated/numpy.polynomial.hermite.hermite.roots.html", "polynomial.hermite.Hermite.trim()": "reference/generated/numpy.polynomial.hermite.hermite.trim.html", "polynomial.hermite.Hermite.truncate()": "reference/generated/numpy.polynomial.hermite.hermite.truncate.html", "polynomial.hermite.hermline()": "reference/generated/numpy.polynomial.hermite.hermline.html", "polynomial.hermite.hermmul()": "reference/generated/numpy.polynomial.hermite.hermmul.html", "polynomial.hermite.hermmulx()": "reference/generated/numpy.polynomial.hermite.hermmulx.html", "polynomial.hermite.hermone": "reference/generated/numpy.polynomial.hermite.hermone.html", "polynomial.hermite.hermpow()": "reference/generated/numpy.polynomial.hermite.hermpow.html", "polynomial.hermite.hermroots()": "reference/generated/numpy.polynomial.hermite.hermroots.html", "polynomial.hermite.hermsub()": "reference/generated/numpy.polynomial.hermite.hermsub.html", "polynomial.hermite.hermtrim()": "reference/generated/numpy.polynomial.hermite.hermtrim.html", "polynomial.hermite.hermval()": "reference/generated/numpy.polynomial.hermite.hermval.html", "polynomial.hermite.hermval2d()": "reference/generated/numpy.polynomial.hermite.hermval2d.html", "polynomial.hermite.hermval3d()": "reference/generated/numpy.polynomial.hermite.hermval3d.html", "polynomial.hermite.hermvander()": "reference/generated/numpy.polynomial.hermite.hermvander.html", "polynomial.hermite.hermvander2d()": "reference/generated/numpy.polynomial.hermite.hermvander2d.html", "polynomial.hermite.hermvander3d()": "reference/generated/numpy.polynomial.hermite.hermvander3d.html", "polynomial.hermite.hermweight()": "reference/generated/numpy.polynomial.hermite.hermweight.html", "polynomial.hermite.hermx": "reference/generated/numpy.polynomial.hermite.hermx.html", "polynomial.hermite.hermzero": "reference/generated/numpy.polynomial.hermite.hermzero.html", "polynomial.hermite.poly2herm()": "reference/generated/numpy.polynomial.hermite.poly2herm.html", "polynomial.hermite_e.herme2poly()": "reference/generated/numpy.polynomial.hermite_e.herme2poly.html", "polynomial.hermite_e.hermeadd()": "reference/generated/numpy.polynomial.hermite_e.hermeadd.html", "polynomial.hermite_e.hermecompanion()": "reference/generated/numpy.polynomial.hermite_e.hermecompanion.html", "polynomial.hermite_e.hermeder()": "reference/generated/numpy.polynomial.hermite_e.hermeder.html", "polynomial.hermite_e.hermediv()": "reference/generated/numpy.polynomial.hermite_e.hermediv.html", "polynomial.hermite_e.hermedomain": "reference/generated/numpy.polynomial.hermite_e.hermedomain.html", "polynomial.hermite_e.hermefit()": "reference/generated/numpy.polynomial.hermite_e.hermefit.html", "polynomial.hermite_e.hermefromroots()": "reference/generated/numpy.polynomial.hermite_e.hermefromroots.html", "polynomial.hermite_e.hermegauss()": "reference/generated/numpy.polynomial.hermite_e.hermegauss.html", "polynomial.hermite_e.hermegrid2d()": "reference/generated/numpy.polynomial.hermite_e.hermegrid2d.html", "polynomial.hermite_e.hermegrid3d()": "reference/generated/numpy.polynomial.hermite_e.hermegrid3d.html", "polynomial.hermite_e.hermeint()": "reference/generated/numpy.polynomial.hermite_e.hermeint.html", "polynomial.hermite_e.hermeline()": "reference/generated/numpy.polynomial.hermite_e.hermeline.html", "polynomial.hermite_e.hermemul()": "reference/generated/numpy.polynomial.hermite_e.hermemul.html", "polynomial.hermite_e.hermemulx()": "reference/generated/numpy.polynomial.hermite_e.hermemulx.html", "polynomial.hermite_e.hermeone": "reference/generated/numpy.polynomial.hermite_e.hermeone.html", "polynomial.hermite_e.hermepow()": "reference/generated/numpy.polynomial.hermite_e.hermepow.html", "polynomial.hermite_e.hermeroots()": "reference/generated/numpy.polynomial.hermite_e.hermeroots.html", "polynomial.hermite_e.hermesub()": "reference/generated/numpy.polynomial.hermite_e.hermesub.html", "polynomial.hermite_e.hermetrim()": "reference/generated/numpy.polynomial.hermite_e.hermetrim.html", "polynomial.hermite_e.hermeval()": "reference/generated/numpy.polynomial.hermite_e.hermeval.html", "polynomial.hermite_e.hermeval2d()": "reference/generated/numpy.polynomial.hermite_e.hermeval2d.html", "polynomial.hermite_e.hermeval3d()": "reference/generated/numpy.polynomial.hermite_e.hermeval3d.html", "polynomial.hermite_e.hermevander()": "reference/generated/numpy.polynomial.hermite_e.hermevander.html", "polynomial.hermite_e.hermevander2d()": "reference/generated/numpy.polynomial.hermite_e.hermevander2d.html", "polynomial.hermite_e.hermevander3d()": "reference/generated/numpy.polynomial.hermite_e.hermevander3d.html", "polynomial.hermite_e.hermeweight()": "reference/generated/numpy.polynomial.hermite_e.hermeweight.html", "polynomial.hermite_e.hermex": "reference/generated/numpy.polynomial.hermite_e.hermex.html", "polynomial.hermite_e.hermezero": "reference/generated/numpy.polynomial.hermite_e.hermezero.html", "polynomial.hermite_e.HermiteE.__call__()": "reference/generated/numpy.polynomial.hermite_e.hermitee.__call__.html", "polynomial.hermite_e.HermiteE.basis()": "reference/generated/numpy.polynomial.hermite_e.hermitee.basis.html", "polynomial.hermite_e.HermiteE.cast()": "reference/generated/numpy.polynomial.hermite_e.hermitee.cast.html", "polynomial.hermite_e.HermiteE.convert()": "reference/generated/numpy.polynomial.hermite_e.hermitee.convert.html", "polynomial.hermite_e.HermiteE.copy()": "reference/generated/numpy.polynomial.hermite_e.hermitee.copy.html", "polynomial.hermite_e.HermiteE.cutdeg()": "reference/generated/numpy.polynomial.hermite_e.hermitee.cutdeg.html", "polynomial.hermite_e.HermiteE.degree()": "reference/generated/numpy.polynomial.hermite_e.hermitee.degree.html", "polynomial.hermite_e.HermiteE.deriv()": "reference/generated/numpy.polynomial.hermite_e.hermitee.deriv.html", "polynomial.hermite_e.HermiteE.domain": "reference/generated/numpy.polynomial.hermite_e.hermitee.domain.html", "polynomial.hermite_e.HermiteE.fit()": "reference/generated/numpy.polynomial.hermite_e.hermitee.fit.html", "polynomial.hermite_e.HermiteE.fromroots()": "reference/generated/numpy.polynomial.hermite_e.hermitee.fromroots.html", "polynomial.hermite_e.HermiteE.has_samecoef()": "reference/generated/numpy.polynomial.hermite_e.hermitee.has_samecoef.html", "polynomial.hermite_e.HermiteE.has_samedomain()": "reference/generated/numpy.polynomial.hermite_e.hermitee.has_samedomain.html", "polynomial.hermite_e.HermiteE.has_sametype()": "reference/generated/numpy.polynomial.hermite_e.hermitee.has_sametype.html", "polynomial.hermite_e.HermiteE.has_samewindow()": "reference/generated/numpy.polynomial.hermite_e.hermitee.has_samewindow.html", "polynomial.hermite_e.HermiteE.identity()": "reference/generated/numpy.polynomial.hermite_e.hermitee.identity.html", "polynomial.hermite_e.HermiteE.integ()": "reference/generated/numpy.polynomial.hermite_e.hermitee.integ.html", "polynomial.hermite_e.HermiteE.linspace()": "reference/generated/numpy.polynomial.hermite_e.hermitee.linspace.html", "polynomial.hermite_e.HermiteE.mapparms()": "reference/generated/numpy.polynomial.hermite_e.hermitee.mapparms.html", "polynomial.hermite_e.HermiteE.roots()": "reference/generated/numpy.polynomial.hermite_e.hermitee.roots.html", "polynomial.hermite_e.HermiteE.trim()": "reference/generated/numpy.polynomial.hermite_e.hermitee.trim.html", "polynomial.hermite_e.HermiteE.truncate()": "reference/generated/numpy.polynomial.hermite_e.hermitee.truncate.html", "polynomial.hermite_e.poly2herme()": "reference/generated/numpy.polynomial.hermite_e.poly2herme.html", "polynomial.laguerre.lag2poly()": "reference/generated/numpy.polynomial.laguerre.lag2poly.html", "polynomial.laguerre.lagadd()": "reference/generated/numpy.polynomial.laguerre.lagadd.html", "polynomial.laguerre.lagcompanion()": "reference/generated/numpy.polynomial.laguerre.lagcompanion.html", "polynomial.laguerre.lagder()": "reference/generated/numpy.polynomial.laguerre.lagder.html", "polynomial.laguerre.lagdiv()": "reference/generated/numpy.polynomial.laguerre.lagdiv.html", "polynomial.laguerre.lagdomain": "reference/generated/numpy.polynomial.laguerre.lagdomain.html", "polynomial.laguerre.lagfit()": "reference/generated/numpy.polynomial.laguerre.lagfit.html", "polynomial.laguerre.lagfromroots()": "reference/generated/numpy.polynomial.laguerre.lagfromroots.html", "polynomial.laguerre.laggauss()": "reference/generated/numpy.polynomial.laguerre.laggauss.html", "polynomial.laguerre.laggrid2d()": "reference/generated/numpy.polynomial.laguerre.laggrid2d.html", "polynomial.laguerre.laggrid3d()": "reference/generated/numpy.polynomial.laguerre.laggrid3d.html", "polynomial.laguerre.lagint()": "reference/generated/numpy.polynomial.laguerre.lagint.html", "polynomial.laguerre.lagline()": "reference/generated/numpy.polynomial.laguerre.lagline.html", "polynomial.laguerre.lagmul()": "reference/generated/numpy.polynomial.laguerre.lagmul.html", "polynomial.laguerre.lagmulx()": "reference/generated/numpy.polynomial.laguerre.lagmulx.html", "polynomial.laguerre.lagone": "reference/generated/numpy.polynomial.laguerre.lagone.html", "polynomial.laguerre.lagpow()": "reference/generated/numpy.polynomial.laguerre.lagpow.html", "polynomial.laguerre.lagroots()": "reference/generated/numpy.polynomial.laguerre.lagroots.html", "polynomial.laguerre.lagsub()": "reference/generated/numpy.polynomial.laguerre.lagsub.html", "polynomial.laguerre.lagtrim()": "reference/generated/numpy.polynomial.laguerre.lagtrim.html", "polynomial.laguerre.Laguerre.__call__()": "reference/generated/numpy.polynomial.laguerre.laguerre.__call__.html", "polynomial.laguerre.Laguerre.basis()": "reference/generated/numpy.polynomial.laguerre.laguerre.basis.html", "polynomial.laguerre.Laguerre.cast()": "reference/generated/numpy.polynomial.laguerre.laguerre.cast.html", "polynomial.laguerre.Laguerre.convert()": "reference/generated/numpy.polynomial.laguerre.laguerre.convert.html", "polynomial.laguerre.Laguerre.copy()": "reference/generated/numpy.polynomial.laguerre.laguerre.copy.html", "polynomial.laguerre.Laguerre.cutdeg()": "reference/generated/numpy.polynomial.laguerre.laguerre.cutdeg.html", "polynomial.laguerre.Laguerre.degree()": "reference/generated/numpy.polynomial.laguerre.laguerre.degree.html", "polynomial.laguerre.Laguerre.deriv()": "reference/generated/numpy.polynomial.laguerre.laguerre.deriv.html", "polynomial.laguerre.Laguerre.domain": "reference/generated/numpy.polynomial.laguerre.laguerre.domain.html", "polynomial.laguerre.Laguerre.fit()": "reference/generated/numpy.polynomial.laguerre.laguerre.fit.html", "polynomial.laguerre.Laguerre.fromroots()": "reference/generated/numpy.polynomial.laguerre.laguerre.fromroots.html", "polynomial.laguerre.Laguerre.has_samecoef()": "reference/generated/numpy.polynomial.laguerre.laguerre.has_samecoef.html", "polynomial.laguerre.Laguerre.has_samedomain()": "reference/generated/numpy.polynomial.laguerre.laguerre.has_samedomain.html", "polynomial.laguerre.Laguerre.has_sametype()": "reference/generated/numpy.polynomial.laguerre.laguerre.has_sametype.html", "polynomial.laguerre.Laguerre.has_samewindow()": "reference/generated/numpy.polynomial.laguerre.laguerre.has_samewindow.html", "polynomial.laguerre.Laguerre.identity()": "reference/generated/numpy.polynomial.laguerre.laguerre.identity.html", "polynomial.laguerre.Laguerre.integ()": "reference/generated/numpy.polynomial.laguerre.laguerre.integ.html", "polynomial.laguerre.Laguerre.linspace()": "reference/generated/numpy.polynomial.laguerre.laguerre.linspace.html", "polynomial.laguerre.Laguerre.mapparms()": "reference/generated/numpy.polynomial.laguerre.laguerre.mapparms.html", "polynomial.laguerre.Laguerre.roots()": "reference/generated/numpy.polynomial.laguerre.laguerre.roots.html", "polynomial.laguerre.Laguerre.trim()": "reference/generated/numpy.polynomial.laguerre.laguerre.trim.html", "polynomial.laguerre.Laguerre.truncate()": "reference/generated/numpy.polynomial.laguerre.laguerre.truncate.html", "polynomial.laguerre.lagval()": "reference/generated/numpy.polynomial.laguerre.lagval.html", "polynomial.laguerre.lagval2d()": "reference/generated/numpy.polynomial.laguerre.lagval2d.html", "polynomial.laguerre.lagval3d()": "reference/generated/numpy.polynomial.laguerre.lagval3d.html", "polynomial.laguerre.lagvander()": "reference/generated/numpy.polynomial.laguerre.lagvander.html", "polynomial.laguerre.lagvander2d()": "reference/generated/numpy.polynomial.laguerre.lagvander2d.html", "polynomial.laguerre.lagvander3d()": "reference/generated/numpy.polynomial.laguerre.lagvander3d.html", "polynomial.laguerre.lagweight()": "reference/generated/numpy.polynomial.laguerre.lagweight.html", "polynomial.laguerre.lagx": "reference/generated/numpy.polynomial.laguerre.lagx.html", "polynomial.laguerre.lagzero": "reference/generated/numpy.polynomial.laguerre.lagzero.html", "polynomial.laguerre.poly2lag()": "reference/generated/numpy.polynomial.laguerre.poly2lag.html", "polynomial.legendre.leg2poly()": "reference/generated/numpy.polynomial.legendre.leg2poly.html", "polynomial.legendre.legadd()": "reference/generated/numpy.polynomial.legendre.legadd.html", "polynomial.legendre.legcompanion()": "reference/generated/numpy.polynomial.legendre.legcompanion.html", "polynomial.legendre.legder()": "reference/generated/numpy.polynomial.legendre.legder.html", "polynomial.legendre.legdiv()": "reference/generated/numpy.polynomial.legendre.legdiv.html", "polynomial.legendre.legdomain": "reference/generated/numpy.polynomial.legendre.legdomain.html", "polynomial.legendre.Legendre.__call__()": "reference/generated/numpy.polynomial.legendre.legendre.__call__.html", "polynomial.legendre.Legendre.basis()": "reference/generated/numpy.polynomial.legendre.legendre.basis.html", "polynomial.legendre.Legendre.cast()": "reference/generated/numpy.polynomial.legendre.legendre.cast.html", "polynomial.legendre.Legendre.convert()": "reference/generated/numpy.polynomial.legendre.legendre.convert.html", "polynomial.legendre.Legendre.copy()": "reference/generated/numpy.polynomial.legendre.legendre.copy.html", "polynomial.legendre.Legendre.cutdeg()": "reference/generated/numpy.polynomial.legendre.legendre.cutdeg.html", "polynomial.legendre.Legendre.degree()": "reference/generated/numpy.polynomial.legendre.legendre.degree.html", "polynomial.legendre.Legendre.deriv()": "reference/generated/numpy.polynomial.legendre.legendre.deriv.html", "polynomial.legendre.Legendre.domain": "reference/generated/numpy.polynomial.legendre.legendre.domain.html", "polynomial.legendre.Legendre.fit()": "reference/generated/numpy.polynomial.legendre.legendre.fit.html", "polynomial.legendre.Legendre.fromroots()": "reference/generated/numpy.polynomial.legendre.legendre.fromroots.html", "polynomial.legendre.Legendre.has_samecoef()": "reference/generated/numpy.polynomial.legendre.legendre.has_samecoef.html", "polynomial.legendre.Legendre.has_samedomain()": "reference/generated/numpy.polynomial.legendre.legendre.has_samedomain.html", "polynomial.legendre.Legendre.has_sametype()": "reference/generated/numpy.polynomial.legendre.legendre.has_sametype.html", "polynomial.legendre.Legendre.has_samewindow()": "reference/generated/numpy.polynomial.legendre.legendre.has_samewindow.html", "polynomial.legendre.Legendre.identity()": "reference/generated/numpy.polynomial.legendre.legendre.identity.html", "polynomial.legendre.Legendre.integ()": "reference/generated/numpy.polynomial.legendre.legendre.integ.html", "polynomial.legendre.Legendre.linspace()": "reference/generated/numpy.polynomial.legendre.legendre.linspace.html", "polynomial.legendre.Legendre.mapparms()": "reference/generated/numpy.polynomial.legendre.legendre.mapparms.html", "polynomial.legendre.Legendre.roots()": "reference/generated/numpy.polynomial.legendre.legendre.roots.html", "polynomial.legendre.Legendre.trim()": "reference/generated/numpy.polynomial.legendre.legendre.trim.html", "polynomial.legendre.Legendre.truncate()": "reference/generated/numpy.polynomial.legendre.legendre.truncate.html", "polynomial.legendre.legfit()": "reference/generated/numpy.polynomial.legendre.legfit.html", "polynomial.legendre.legfromroots()": "reference/generated/numpy.polynomial.legendre.legfromroots.html", "polynomial.legendre.leggauss()": "reference/generated/numpy.polynomial.legendre.leggauss.html", "polynomial.legendre.leggrid2d()": "reference/generated/numpy.polynomial.legendre.leggrid2d.html", "polynomial.legendre.leggrid3d()": "reference/generated/numpy.polynomial.legendre.leggrid3d.html", "polynomial.legendre.legint()": "reference/generated/numpy.polynomial.legendre.legint.html", "polynomial.legendre.legline()": "reference/generated/numpy.polynomial.legendre.legline.html", "polynomial.legendre.legmul()": "reference/generated/numpy.polynomial.legendre.legmul.html", "polynomial.legendre.legmulx()": "reference/generated/numpy.polynomial.legendre.legmulx.html", "polynomial.legendre.legone": "reference/generated/numpy.polynomial.legendre.legone.html", "polynomial.legendre.legpow()": "reference/generated/numpy.polynomial.legendre.legpow.html", "polynomial.legendre.legroots()": "reference/generated/numpy.polynomial.legendre.legroots.html", "polynomial.legendre.legsub()": "reference/generated/numpy.polynomial.legendre.legsub.html", "polynomial.legendre.legtrim()": "reference/generated/numpy.polynomial.legendre.legtrim.html", "polynomial.legendre.legval()": "reference/generated/numpy.polynomial.legendre.legval.html", "polynomial.legendre.legval2d()": "reference/generated/numpy.polynomial.legendre.legval2d.html", "polynomial.legendre.legval3d()": "reference/generated/numpy.polynomial.legendre.legval3d.html", "polynomial.legendre.legvander()": "reference/generated/numpy.polynomial.legendre.legvander.html", "polynomial.legendre.legvander2d()": "reference/generated/numpy.polynomial.legendre.legvander2d.html", "polynomial.legendre.legvander3d()": "reference/generated/numpy.polynomial.legendre.legvander3d.html", "polynomial.legendre.legweight()": "reference/generated/numpy.polynomial.legendre.legweight.html", "polynomial.legendre.legx": "reference/generated/numpy.polynomial.legendre.legx.html", "polynomial.legendre.legzero": "reference/generated/numpy.polynomial.legendre.legzero.html", "polynomial.legendre.poly2leg()": "reference/generated/numpy.polynomial.legendre.poly2leg.html", "polynomial.polynomial.polyadd()": "reference/generated/numpy.polynomial.polynomial.polyadd.html", "polynomial.polynomial.polycompanion()": "reference/generated/numpy.polynomial.polynomial.polycompanion.html", "polynomial.polynomial.polyder()": "reference/generated/numpy.polynomial.polynomial.polyder.html", "polynomial.polynomial.polydiv()": "reference/generated/numpy.polynomial.polynomial.polydiv.html", "polynomial.polynomial.polydomain": "reference/generated/numpy.polynomial.polynomial.polydomain.html", "polynomial.polynomial.polyfit()": "reference/generated/numpy.polynomial.polynomial.polyfit.html", "polynomial.polynomial.polyfromroots()": "reference/generated/numpy.polynomial.polynomial.polyfromroots.html", "polynomial.polynomial.polygrid2d()": "reference/generated/numpy.polynomial.polynomial.polygrid2d.html", "polynomial.polynomial.polygrid3d()": "reference/generated/numpy.polynomial.polynomial.polygrid3d.html", "polynomial.polynomial.polyint()": "reference/generated/numpy.polynomial.polynomial.polyint.html", "polynomial.polynomial.polyline()": "reference/generated/numpy.polynomial.polynomial.polyline.html", "polynomial.polynomial.polymul()": "reference/generated/numpy.polynomial.polynomial.polymul.html", "polynomial.polynomial.polymulx()": "reference/generated/numpy.polynomial.polynomial.polymulx.html", "polynomial.polynomial.Polynomial.__call__()": "reference/generated/numpy.polynomial.polynomial.polynomial.__call__.html", "polynomial.polynomial.Polynomial.basis()": "reference/generated/numpy.polynomial.polynomial.polynomial.basis.html", "polynomial.polynomial.Polynomial.cast()": "reference/generated/numpy.polynomial.polynomial.polynomial.cast.html", "polynomial.polynomial.Polynomial.convert()": "reference/generated/numpy.polynomial.polynomial.polynomial.convert.html", "polynomial.polynomial.Polynomial.copy()": "reference/generated/numpy.polynomial.polynomial.polynomial.copy.html", "polynomial.polynomial.Polynomial.cutdeg()": "reference/generated/numpy.polynomial.polynomial.polynomial.cutdeg.html", "polynomial.polynomial.Polynomial.degree()": "reference/generated/numpy.polynomial.polynomial.polynomial.degree.html", "polynomial.polynomial.Polynomial.deriv()": "reference/generated/numpy.polynomial.polynomial.polynomial.deriv.html", "polynomial.polynomial.Polynomial.domain": "reference/generated/numpy.polynomial.polynomial.polynomial.domain.html", "polynomial.polynomial.Polynomial.fit()": "reference/generated/numpy.polynomial.polynomial.polynomial.fit.html", "polynomial.polynomial.Polynomial.fromroots()": "reference/generated/numpy.polynomial.polynomial.polynomial.fromroots.html", "polynomial.polynomial.Polynomial.has_samecoef()": "reference/generated/numpy.polynomial.polynomial.polynomial.has_samecoef.html", "polynomial.polynomial.Polynomial.has_samedomain()": "reference/generated/numpy.polynomial.polynomial.polynomial.has_samedomain.html", "polynomial.polynomial.Polynomial.has_sametype()": "reference/generated/numpy.polynomial.polynomial.polynomial.has_sametype.html", "polynomial.polynomial.Polynomial.has_samewindow()": "reference/generated/numpy.polynomial.polynomial.polynomial.has_samewindow.html", "polynomial.polynomial.Polynomial.identity()": "reference/generated/numpy.polynomial.polynomial.polynomial.identity.html", "polynomial.polynomial.Polynomial.integ()": "reference/generated/numpy.polynomial.polynomial.polynomial.integ.html", "polynomial.polynomial.Polynomial.linspace()": "reference/generated/numpy.polynomial.polynomial.polynomial.linspace.html", "polynomial.polynomial.Polynomial.mapparms()": "reference/generated/numpy.polynomial.polynomial.polynomial.mapparms.html", "polynomial.polynomial.Polynomial.roots()": "reference/generated/numpy.polynomial.polynomial.polynomial.roots.html", "polynomial.polynomial.Polynomial.trim()": "reference/generated/numpy.polynomial.polynomial.polynomial.trim.html", "polynomial.polynomial.Polynomial.truncate()": "reference/generated/numpy.polynomial.polynomial.polynomial.truncate.html", "polynomial.polynomial.polyone": "reference/generated/numpy.polynomial.polynomial.polyone.html", "polynomial.polynomial.polypow()": "reference/generated/numpy.polynomial.polynomial.polypow.html", "polynomial.polynomial.polyroots()": "reference/generated/numpy.polynomial.polynomial.polyroots.html", "polynomial.polynomial.polysub()": "reference/generated/numpy.polynomial.polynomial.polysub.html", "polynomial.polynomial.polytrim()": "reference/generated/numpy.polynomial.polynomial.polytrim.html", "polynomial.polynomial.polyval()": "reference/generated/numpy.polynomial.polynomial.polyval.html", "polynomial.polynomial.polyval2d()": "reference/generated/numpy.polynomial.polynomial.polyval2d.html", "polynomial.polynomial.polyval3d()": "reference/generated/numpy.polynomial.polynomial.polyval3d.html", "polynomial.polynomial.polyvalfromroots()": "reference/generated/numpy.polynomial.polynomial.polyvalfromroots.html", "polynomial.polynomial.polyvander()": "reference/generated/numpy.polynomial.polynomial.polyvander.html", "polynomial.polynomial.polyvander2d()": "reference/generated/numpy.polynomial.polynomial.polyvander2d.html", "polynomial.polynomial.polyvander3d()": "reference/generated/numpy.polynomial.polynomial.polyvander3d.html", "polynomial.polynomial.polyx": "reference/generated/numpy.polynomial.polynomial.polyx.html", "polynomial.polynomial.polyzero": "reference/generated/numpy.polynomial.polynomial.polyzero.html", "polynomial.polyutils.as_series()": "reference/generated/numpy.polynomial.polyutils.as_series.html", "polynomial.polyutils.getdomain()": "reference/generated/numpy.polynomial.polyutils.getdomain.html", "polynomial.polyutils.mapdomain()": "reference/generated/numpy.polynomial.polyutils.mapdomain.html", "polynomial.polyutils.mapparms()": "reference/generated/numpy.polynomial.polyutils.mapparms.html", "polynomial.polyutils.RankWarning": "reference/generated/numpy.polynomial.polyutils.rankwarning.html", "polynomial.polyutils.trimcoef()": "reference/generated/numpy.polynomial.polyutils.trimcoef.html", "polynomial.polyutils.trimseq()": "reference/generated/numpy.polynomial.polyutils.trimseq.html", "polynomial.set_default_printstyle()": "reference/generated/numpy.polynomial.set_default_printstyle.html", "Polyutils": "reference/routines.polynomials.polyutils.html", "Power Series (": "reference/routines.polynomials.polynomial.html", "property finfo.machar": "reference/generated/numpy.finfo.machar.html", "property finfo.smallest_normal": "reference/generated/numpy.finfo.smallest_normal.html", "property finfo.tiny": "reference/generated/numpy.finfo.tiny.html", "property iinfo.max": "reference/generated/numpy.iinfo.max.html", "property iinfo.min": "reference/generated/numpy.iinfo.min.html", "property lib.Arrayterator.flat": "reference/generated/numpy.lib.arrayterator.flat.html", "property lib.Arrayterator.shape": "reference/generated/numpy.lib.arrayterator.shape.html", "property ma.masked_array.mask": "reference/generated/numpy.ma.masked_array.mask.html", "property ma.MaskedArray.dtype": "reference/generated/numpy.ma.maskedarray.dtype.html", "property ma.MaskedArray.flat": "reference/generated/numpy.ma.maskedarray.flat.html", "property ma.MaskedArray.imag": "reference/generated/numpy.ma.maskedarray.imag.html", "property ma.MaskedArray.real": "reference/generated/numpy.ma.maskedarray.real.html", "property ma.MaskedArray.shape": "reference/generated/numpy.ma.maskedarray.shape.html", "property ma.MaskedArray.T": "reference/generated/numpy.ma.maskedarray.t.html", "property matrix.A": "reference/generated/numpy.matrix.a.html", "property matrix.A1": "reference/generated/numpy.matrix.a1.html", "property matrix.H": "reference/generated/numpy.matrix.h.html", "property matrix.I": "reference/generated/numpy.matrix.i.html", "property matrix.T": "reference/generated/numpy.matrix.t.html", "property poly1d.c": "reference/generated/numpy.poly1d.c.html", "property poly1d.coef": "reference/generated/numpy.poly1d.coef.html", "property poly1d.coefficients": "reference/generated/numpy.poly1d.coefficients.html", "property poly1d.coeffs": "reference/generated/numpy.poly1d.coeffs.html", "property poly1d.o": "reference/generated/numpy.poly1d.o.html", "property poly1d.order": "reference/generated/numpy.poly1d.order.html", "property poly1d.r": "reference/generated/numpy.poly1d.r.html", "property poly1d.variable": "reference/generated/numpy.poly1d.variable.html", "PY_ARRAY_UNIQUE_SYMBOL": "reference/c-api/array.html#c.PY_ARRAY_UNIQUE_SYMBOL", "PyArray_ArrayDescr *subarray": "reference/c-api/types-and-structures.html#c.NPY_USE_SETITEM.subarray", "PyArray_ArrFuncs *f": "reference/c-api/types-and-structures.html#c.NPY_USE_SETITEM.f", "PyArray_CEQ()": "reference/c-api/array.html#c.PyArray_CEQ", "PyArray_CGE()": "reference/c-api/array.html#c.PyArray_CGE", "PyArray_CGT()": "reference/c-api/array.html#c.PyArray_CGT", "PyArray_CLE()": "reference/c-api/array.html#c.PyArray_CLE", "PyArray_CLT()": "reference/c-api/array.html#c.PyArray_CLT", "PyArray_CNE()": "reference/c-api/array.html#c.PyArray_CNE", "PyArray_Descr **NpyIter_GetDescrArray()": "reference/c-api/iterator.html#c.NpyIter_GetDescrArray", "PyArray_Descr *descr": "reference/c-api/types-and-structures.html#c.NPY_AO.descr", "PyArray_Descr *PyArray_DESCR()": "reference/c-api/array.html#c.PyArray_DESCR", "PyArray_Descr *PyArray_DescrFromObject()": "reference/c-api/array.html#c.PyArray_DescrFromObject", "PyArray_Descr *PyArray_DescrFromScalar()": "reference/c-api/array.html#c.PyArray_DescrFromScalar", "PyArray_Descr *PyArray_DescrFromType()": "reference/c-api/array.html#c.PyArray_DescrFromType", "PyArray_Descr *PyArray_DescrNew()": "reference/c-api/array.html#c.PyArray_DescrNew", "PyArray_Descr *PyArray_DescrNewByteorder()": "reference/c-api/array.html#c.PyArray_DescrNewByteorder", "PyArray_Descr *PyArray_DescrNewFromType()": "reference/c-api/array.html#c.PyArray_DescrNewFromType", "PyArray_Descr *PyArray_DTYPE()": "reference/c-api/array.html#c.PyArray_DTYPE", "PyArray_Descr *PyArray_MinScalarType()": "reference/c-api/array.html#c.PyArray_MinScalarType", "PyArray_Descr *PyArray_PromoteTypes()": "reference/c-api/array.html#c.PyArray_PromoteTypes", "PyArray_Descr *PyArray_ResultType()": "reference/c-api/array.html#c.PyArray_ResultType", "PyArray_IsScalar()": "reference/c-api/array.html#c.PyArray_IsScalar", "PyArray_MAX()": "reference/c-api/array.html#c.PyArray_MAX", "PyArray_MIN()": "reference/c-api/array.html#c.PyArray_MIN", "PyArray_VectorUnaryFunc *PyArray_GetCastFunc()": "reference/c-api/array.html#c.PyArray_GetCastFunc", "PyArrayIterObject **iters": "reference/c-api/types-and-structures.html#c.PyArrayMultiIterObject.iters", "PyArrayObject **PyArray_ConvertToCommonType()": "reference/c-api/array.html#c.PyArray_ConvertToCommonType", "PyArrayObject *ao": "reference/c-api/types-and-structures.html#c.PyArrayIterObject.ao", "PyArrayObject *PyArray_GETCONTIGUOUS()": "reference/c-api/array.html#c.PyArray_GETCONTIGUOUS", "PyDataMem_EventHookFunc *PyDataMem_SetEventHook()": "reference/c-api/data_memory.html#c.PyDataMem_SetEventHook", "PyObject **NpyIter_GetOperandArray()": "reference/c-api/iterator.html#c.NpyIter_GetOperandArray", "PyObject *base": "reference/c-api/types-and-structures.html#c.NPY_AO.base", "PyObject *castdict": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.castdict", "PyObject *descr": "reference/c-api/types-and-structures.html#c.PyArrayInterface.descr", "PyObject *fields": "reference/c-api/types-and-structures.html#c.NPY_USE_SETITEM.fields", "PyObject *getitem()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.getitem", "PyObject *metadata": "reference/c-api/types-and-structures.html#c.NPY_USE_SETITEM.metadata", "PyObject *names": "reference/c-api/types-and-structures.html#c.NPY_USE_SETITEM.names", "PyObject *NpyIter_GetIterView()": "reference/c-api/iterator.html#c.NpyIter_GetIterView", "PyObject *obj": "reference/c-api/types-and-structures.html#c.PyUFuncObject.obj", "PyObject *PyArray_All()": "reference/c-api/array.html#c.PyArray_All", "PyObject *PyArray_Any()": "reference/c-api/array.html#c.PyArray_Any", "PyObject *PyArray_Arange()": "reference/c-api/array.html#c.PyArray_Arange", "PyObject *PyArray_ArangeObj()": "reference/c-api/array.html#c.PyArray_ArangeObj", "PyObject *PyArray_ArgMin()": "reference/c-api/array.html#c.PyArray_ArgMin", "PyObject *PyArray_ArgPartition()": "reference/c-api/array.html#c.PyArray_ArgPartition", "PyObject *PyArray_ArgSort()": "reference/c-api/array.html#c.PyArray_ArgSort", "PyObject *PyArray_BASE()": "reference/c-api/array.html#c.PyArray_BASE", "PyObject *PyArray_BroadcastToShape()": "reference/c-api/array.html#c.PyArray_BroadcastToShape", "PyObject *PyArray_Byteswap()": "reference/c-api/array.html#c.PyArray_Byteswap", "PyObject *PyArray_CastToType()": "reference/c-api/array.html#c.PyArray_CastToType", "PyObject *PyArray_CheckAxis()": "reference/c-api/array.html#c.PyArray_CheckAxis", "PyObject *PyArray_CheckFromAny()": "reference/c-api/array.html#c.PyArray_CheckFromAny", "PyObject *PyArray_Choose()": "reference/c-api/array.html#c.PyArray_Choose", "PyObject *PyArray_Clip()": "reference/c-api/array.html#c.PyArray_Clip", "PyObject *PyArray_Compress()": "reference/c-api/array.html#c.PyArray_Compress", "PyObject *PyArray_Concatenate()": "reference/c-api/array.html#c.PyArray_Concatenate", "PyObject *PyArray_Conjugate()": "reference/c-api/array.html#c.PyArray_Conjugate", "PyObject *PyArray_ContiguousFromAny()": "reference/c-api/array.html#c.PyArray_ContiguousFromAny", "PyObject *PyArray_ContiguousFromObject()": "reference/c-api/array.html#c.PyArray_ContiguousFromObject", "PyObject *PyArray_CopyAndTranspose()": "reference/c-api/array.html#c.PyArray_CopyAndTranspose", "PyObject *PyArray_Correlate()": "reference/c-api/array.html#c.PyArray_Correlate", "PyObject *PyArray_Correlate2()": "reference/c-api/array.html#c.PyArray_Correlate2", "PyObject *PyArray_CumProd()": "reference/c-api/array.html#c.PyArray_CumProd", "PyObject *PyArray_CumSum()": "reference/c-api/array.html#c.PyArray_CumSum", "PyObject *PyArray_Diagonal()": "reference/c-api/array.html#c.PyArray_Diagonal", "PyObject *PyArray_Dumps()": "reference/c-api/array.html#c.PyArray_Dumps", "PyObject *PyArray_EinsteinSum()": "reference/c-api/array.html#c.PyArray_EinsteinSum", "PyObject *PyArray_EMPTY()": "reference/c-api/array.html#c.PyArray_EMPTY", "PyObject *PyArray_Empty()": "reference/c-api/array.html#c.PyArray_Empty", "PyObject *PyArray_EnsureArray()": "reference/c-api/array.html#c.PyArray_EnsureArray", "PyObject *PyArray_FieldNames()": "reference/c-api/array.html#c.PyArray_FieldNames", "PyObject *PyArray_Flatten()": "reference/c-api/array.html#c.PyArray_Flatten", "PyObject *PyArray_FROM_O()": "reference/c-api/array.html#c.PyArray_FROM_O", "PyObject *PyArray_FROM_OF()": "reference/c-api/array.html#c.PyArray_FROM_OF", "PyObject *PyArray_FROM_OT()": "reference/c-api/array.html#c.PyArray_FROM_OT", "PyObject *PyArray_FROM_OTF()": "reference/c-api/array.html#c.PyArray_FROM_OTF", "PyObject *PyArray_FROMANY()": "reference/c-api/array.html#c.PyArray_FROMANY", "PyObject *PyArray_FromArray()": "reference/c-api/array.html#c.PyArray_FromArray", "PyObject *PyArray_FromArrayAttr()": "reference/c-api/array.html#c.PyArray_FromArrayAttr", "PyObject *PyArray_FromBuffer()": "reference/c-api/array.html#c.PyArray_FromBuffer", "PyObject *PyArray_FromFile()": "reference/c-api/array.html#c.PyArray_FromFile", "PyObject *PyArray_FromInterface()": "reference/c-api/array.html#c.PyArray_FromInterface", "PyObject *PyArray_FromObject()": "reference/c-api/array.html#c.PyArray_FromObject", "PyObject *PyArray_FromScalar()": "reference/c-api/array.html#c.PyArray_FromScalar", "PyObject *PyArray_FromString()": "reference/c-api/array.html#c.PyArray_FromString", "PyObject *PyArray_FromStructInterface()": "reference/c-api/array.html#c.PyArray_FromStructInterface", "PyObject *PyArray_GETITEM()": "reference/c-api/array.html#c.PyArray_GETITEM", "PyObject *PyArray_GetNumericOps()": "reference/c-api/array.html#c.PyArray_GetNumericOps", "PyObject *PyArray_InnerProduct()": "reference/c-api/array.html#c.PyArray_InnerProduct", "PyObject *PyArray_IterAllButAxis()": "reference/c-api/array.html#c.PyArray_IterAllButAxis", "PyObject *PyArray_LexSort()": "reference/c-api/array.html#c.PyArray_LexSort", "PyObject *PyArray_MapIterArrayCopyIfOverlap()": "reference/c-api/array.html#c.PyArray_MapIterArrayCopyIfOverlap", "PyObject *PyArray_MatrixProduct()": "reference/c-api/array.html#c.PyArray_MatrixProduct", "PyObject *PyArray_MatrixProduct2()": "reference/c-api/array.html#c.PyArray_MatrixProduct2", "PyObject *PyArray_Max()": "reference/c-api/array.html#c.PyArray_Max", "PyObject *PyArray_Mean()": "reference/c-api/array.html#c.PyArray_Mean", "PyObject *PyArray_Min()": "reference/c-api/array.html#c.PyArray_Min", "PyObject *PyArray_New()": "reference/c-api/array.html#c.PyArray_New", "PyObject *PyArray_NewCopy()": "reference/c-api/array.html#c.PyArray_NewCopy", "PyObject *PyArray_NewLikeArray()": "reference/c-api/array.html#c.PyArray_NewLikeArray", "PyObject *PyArray_Nonzero()": "reference/c-api/array.html#c.PyArray_Nonzero", "PyObject *PyArray_Prod()": "reference/c-api/array.html#c.PyArray_Prod", "PyObject *PyArray_Ptp()": "reference/c-api/array.html#c.PyArray_Ptp", "PyObject *PyArray_PutMask()": "reference/c-api/array.html#c.PyArray_PutMask", "PyObject *PyArray_PutTo()": "reference/c-api/array.html#c.PyArray_PutTo", "PyObject *PyArray_Ravel()": "reference/c-api/array.html#c.PyArray_Ravel", "PyObject *PyArray_Repeat()": "reference/c-api/array.html#c.PyArray_Repeat", "PyObject *PyArray_Reshape()": "reference/c-api/array.html#c.PyArray_Reshape", "PyObject *PyArray_Resize()": "reference/c-api/array.html#c.PyArray_Resize", "PyObject *PyArray_Round()": "reference/c-api/array.html#c.PyArray_Round", "PyObject *PyArray_Scalar()": "reference/c-api/array.html#c.PyArray_Scalar", "PyObject *PyArray_SearchSorted()": "reference/c-api/array.html#c.PyArray_SearchSorted", "PyObject *PyArray_SimpleNew()": "reference/c-api/array.html#c.PyArray_SimpleNew", "PyObject *PyArray_SimpleNewFromData()": "reference/c-api/array.html#c.PyArray_SimpleNewFromData", "PyObject *PyArray_SimpleNewFromDescr()": "reference/c-api/array.html#c.PyArray_SimpleNewFromDescr", "PyObject *PyArray_Sort()": "reference/c-api/array.html#c.PyArray_Sort", "PyObject *PyArray_Squeeze()": "reference/c-api/array.html#c.PyArray_Squeeze", "PyObject *PyArray_Std()": "reference/c-api/array.html#c.PyArray_Std", "PyObject *PyArray_Sum()": "reference/c-api/array.html#c.PyArray_Sum", "PyObject *PyArray_SwapAxes()": "reference/c-api/array.html#c.PyArray_SwapAxes", "PyObject *PyArray_ToFile()": "reference/c-api/array.html#c.PyArray_ToFile", "PyObject *PyArray_ToList()": "reference/c-api/array.html#c.PyArray_ToList", "PyObject *PyArray_ToScalar()": "reference/c-api/array.html#c.PyArray_ToScalar", "PyObject *PyArray_ToString()": "reference/c-api/array.html#c.PyArray_ToString", "PyObject *PyArray_Trace()": "reference/c-api/array.html#c.PyArray_Trace", "PyObject *PyArray_Transpose()": "reference/c-api/array.html#c.PyArray_Transpose", "PyObject *PyArray_TypeObjectFromType()": "reference/c-api/array.html#c.PyArray_TypeObjectFromType", "PyObject *PyArray_View()": "reference/c-api/array.html#c.PyArray_View", "PyObject *PyArray_Where()": "reference/c-api/array.html#c.PyArray_Where", "PyObject *PyArray_ZEROS()": "reference/c-api/array.html#c.PyArray_ZEROS", "PyObject *PyArray_Zeros()": "reference/c-api/array.html#c.PyArray_Zeros", "PyObject *PyDataMem_GetHandler()": "reference/c-api/data_memory.html#c.PyDataMem_GetHandler", "PyObject *PyDataMem_SetHandler()": "reference/c-api/data_memory.html#c.PyDataMem_SetHandler", "PyObject *PyUFunc_FromFuncAndDataAndSignature()": "reference/c-api/ufunc.html#c.PyUFunc_FromFuncAndDataAndSignature", "PyObject *PyUFunc_FromFuncAndDataAndSignatureAndIdentity()": "reference/c-api/ufunc.html#c.PyUFunc_FromFuncAndDataAndSignatureAndIdentity", "PyObject *shape": "reference/c-api/types-and-structures.html#c.NPY_USE_SETITEM.subarray.PyArray_ArrayDescr.shape", "PyObject *userloops": "reference/c-api/types-and-structures.html#c.PyUFuncObject.userloops", "PyObject *weakreflist": "reference/c-api/types-and-structures.html#c.NPY_AO.weakreflist", "PyTypeObject PyArray_Type": "reference/c-api/types-and-structures.html", "PyTypeObject PyArrayMapIter_Type": "reference/c-api/types-and-structures.html#c.PyArrayMapIter_Type", "PyUFunc_IdentityValue": "reference/c-api/ufunc.html#c.PyUFunc_IdentityValue", "PyUFunc_LegacyInnerLoopSelectionFunc *legacy_inner_loop_selector": "reference/c-api/types-and-structures.html#c.PyUFuncObject.legacy_inner_loop_selector", "PyUFunc_MinusOne": "reference/c-api/ufunc.html#c.PyUFunc_MinusOne", "PyUFunc_None": "reference/c-api/ufunc.html#c.PyUFunc_None", "PyUFunc_ReorderableNone": "reference/c-api/ufunc.html#c.PyUFunc_ReorderableNone", "PyUFunc_TypeResolutionFunc *type_resolver": "reference/c-api/types-and-structures.html#c.PyUFuncObject.type_resolver", "PyUFunc_Zero": "reference/c-api/ufunc.html#c.PyUFunc_Zero", "Random sampling (": "reference/random/index.html", "random.beta()": "reference/random/generated/numpy.random.beta.html", "random.binomial()": "reference/random/generated/numpy.random.binomial.html", "random.BitGenerator.cffi": "reference/random/bit_generators/generated/numpy.random.bitgenerator.cffi.html", "random.BitGenerator.random_raw()": "reference/random/bit_generators/generated/numpy.random.bitgenerator.random_raw.html", "random.bytes()": "reference/random/generated/numpy.random.bytes.html", "random.chisquare()": "reference/random/generated/numpy.random.chisquare.html", "random.choice()": "reference/random/generated/numpy.random.choice.html", "random.dirichlet()": "reference/random/generated/numpy.random.dirichlet.html", "random.exponential()": "reference/random/generated/numpy.random.exponential.html", "random.f()": "reference/random/generated/numpy.random.f.html", "random.gamma()": "reference/random/generated/numpy.random.gamma.html", "random.Generator.beta()": "reference/random/generated/numpy.random.generator.beta.html", "random.Generator.binomial()": "reference/random/generated/numpy.random.generator.binomial.html", "random.Generator.bit_generator": "reference/random/generated/numpy.random.generator.bit_generator.html", "random.Generator.bytes()": "reference/random/generated/numpy.random.generator.bytes.html", "random.Generator.chisquare()": "reference/random/generated/numpy.random.generator.chisquare.html", "random.Generator.choice()": "reference/random/generated/numpy.random.generator.choice.html", "random.Generator.dirichlet()": "reference/random/generated/numpy.random.generator.dirichlet.html", "random.Generator.exponential()": "reference/random/generated/numpy.random.generator.exponential.html", "random.Generator.f()": "reference/random/generated/numpy.random.generator.f.html", "random.Generator.gamma()": "reference/random/generated/numpy.random.generator.gamma.html", "random.Generator.geometric()": "reference/random/generated/numpy.random.generator.geometric.html", "random.Generator.gumbel()": "reference/random/generated/numpy.random.generator.gumbel.html", "random.Generator.hypergeometric()": "reference/random/generated/numpy.random.generator.hypergeometric.html", "random.Generator.integers()": "reference/random/generated/numpy.random.generator.integers.html", "random.Generator.laplace()": "reference/random/generated/numpy.random.generator.laplace.html", "random.Generator.logistic()": "reference/random/generated/numpy.random.generator.logistic.html", "random.Generator.lognormal()": "reference/random/generated/numpy.random.generator.lognormal.html", "random.Generator.logseries()": "reference/random/generated/numpy.random.generator.logseries.html", "random.Generator.multinomial()": "reference/random/generated/numpy.random.generator.multinomial.html", "random.Generator.multivariate_hypergeometric()": "reference/random/generated/numpy.random.generator.multivariate_hypergeometric.html", "random.Generator.multivariate_normal()": "reference/random/generated/numpy.random.generator.multivariate_normal.html", "random.Generator.negative_binomial()": "reference/random/generated/numpy.random.generator.negative_binomial.html", "random.Generator.noncentral_chisquare()": "reference/random/generated/numpy.random.generator.noncentral_chisquare.html", "random.Generator.noncentral_f()": "reference/random/generated/numpy.random.generator.noncentral_f.html", "random.Generator.normal()": "reference/random/generated/numpy.random.generator.normal.html", "random.Generator.pareto()": "reference/random/generated/numpy.random.generator.pareto.html", "random.Generator.permutation()": "reference/random/generated/numpy.random.generator.permutation.html", "random.Generator.permuted()": "reference/random/generated/numpy.random.generator.permuted.html", "random.Generator.poisson()": "reference/random/generated/numpy.random.generator.poisson.html", "random.Generator.power()": "reference/random/generated/numpy.random.generator.power.html", "random.Generator.random()": "reference/random/generated/numpy.random.generator.random.html", "random.Generator.rayleigh()": "reference/random/generated/numpy.random.generator.rayleigh.html", "random.Generator.shuffle()": "reference/random/generated/numpy.random.generator.shuffle.html", "random.Generator.standard_cauchy()": "reference/random/generated/numpy.random.generator.standard_cauchy.html", "random.Generator.standard_exponential()": "reference/random/generated/numpy.random.generator.standard_exponential.html", "random.Generator.standard_gamma()": "reference/random/generated/numpy.random.generator.standard_gamma.html", "random.Generator.standard_normal()": "reference/random/generated/numpy.random.generator.standard_normal.html", "random.Generator.standard_t()": "reference/random/generated/numpy.random.generator.standard_t.html", "random.Generator.triangular()": "reference/random/generated/numpy.random.generator.triangular.html", "random.Generator.uniform()": "reference/random/generated/numpy.random.generator.uniform.html", "random.Generator.vonmises()": "reference/random/generated/numpy.random.generator.vonmises.html", "random.Generator.wald()": "reference/random/generated/numpy.random.generator.wald.html", "random.Generator.weibull()": "reference/random/generated/numpy.random.generator.weibull.html", "random.Generator.zipf()": "reference/random/generated/numpy.random.generator.zipf.html", "random.geometric()": "reference/random/generated/numpy.random.geometric.html", "random.get_state()": "reference/random/generated/numpy.random.get_state.html", "random.gumbel()": "reference/random/generated/numpy.random.gumbel.html", "random.hypergeometric()": "reference/random/generated/numpy.random.hypergeometric.html", "random.laplace()": "reference/random/generated/numpy.random.laplace.html", "random.logistic()": "reference/random/generated/numpy.random.logistic.html", "random.lognormal()": "reference/random/generated/numpy.random.lognormal.html", "random.logseries()": "reference/random/generated/numpy.random.logseries.html", "random.MT19937.cffi": "reference/random/bit_generators/generated/numpy.random.mt19937.cffi.html", "random.MT19937.ctypes": "reference/random/bit_generators/generated/numpy.random.mt19937.ctypes.html", "random.MT19937.jumped()": "reference/random/bit_generators/generated/numpy.random.mt19937.jumped.html", "random.MT19937.state": "reference/random/bit_generators/generated/numpy.random.mt19937.state.html", "random.multinomial()": "reference/random/generated/numpy.random.multinomial.html", "random.multivariate_normal()": "reference/random/generated/numpy.random.multivariate_normal.html", "random.negative_binomial()": "reference/random/generated/numpy.random.negative_binomial.html", "random.noncentral_chisquare()": "reference/random/generated/numpy.random.noncentral_chisquare.html", "random.noncentral_f()": "reference/random/generated/numpy.random.noncentral_f.html", "random.normal()": "reference/random/generated/numpy.random.normal.html", "random.pareto()": "reference/random/generated/numpy.random.pareto.html", "random.PCG64.advance()": "reference/random/bit_generators/generated/numpy.random.pcg64.advance.html", "random.PCG64.cffi": "reference/random/bit_generators/generated/numpy.random.pcg64.cffi.html", "random.PCG64.ctypes": "reference/random/bit_generators/generated/numpy.random.pcg64.ctypes.html", "random.PCG64.jumped()": "reference/random/bit_generators/generated/numpy.random.pcg64.jumped.html", "random.PCG64.state": "reference/random/bit_generators/generated/numpy.random.pcg64.state.html", "random.PCG64DXSM.advance()": "reference/random/bit_generators/generated/numpy.random.pcg64dxsm.advance.html", "random.PCG64DXSM.cffi": "reference/random/bit_generators/generated/numpy.random.pcg64dxsm.cffi.html", "random.PCG64DXSM.ctypes": "reference/random/bit_generators/generated/numpy.random.pcg64dxsm.ctypes.html", "random.PCG64DXSM.jumped()": "reference/random/bit_generators/generated/numpy.random.pcg64dxsm.jumped.html", "random.PCG64DXSM.state": "reference/random/bit_generators/generated/numpy.random.pcg64dxsm.state.html", "random.permutation()": "reference/random/generated/numpy.random.permutation.html", "random.Philox.advance()": "reference/random/bit_generators/generated/numpy.random.philox.advance.html", "random.Philox.cffi": "reference/random/bit_generators/generated/numpy.random.philox.cffi.html", "random.Philox.ctypes": "reference/random/bit_generators/generated/numpy.random.philox.ctypes.html", "random.Philox.jumped()": "reference/random/bit_generators/generated/numpy.random.philox.jumped.html", "random.Philox.state": "reference/random/bit_generators/generated/numpy.random.philox.state.html", "random.poisson()": "reference/random/generated/numpy.random.poisson.html", "random.power()": "reference/random/generated/numpy.random.power.html", "random.rand()": "reference/random/generated/numpy.random.rand.html", "random.randint()": "reference/random/generated/numpy.random.randint.html", "random.randn()": "reference/random/generated/numpy.random.randn.html", "random.random()": "reference/random/generated/numpy.random.random.html", "random.random_integers()": "reference/random/generated/numpy.random.random_integers.html", "random.random_sample()": "reference/random/generated/numpy.random.random_sample.html", "random.RandomState.beta()": "reference/random/generated/numpy.random.randomstate.beta.html", "random.RandomState.binomial()": "reference/random/generated/numpy.random.randomstate.binomial.html", "random.RandomState.bytes()": "reference/random/generated/numpy.random.randomstate.bytes.html", "random.RandomState.chisquare()": "reference/random/generated/numpy.random.randomstate.chisquare.html", "random.RandomState.choice()": "reference/random/generated/numpy.random.randomstate.choice.html", "random.RandomState.dirichlet()": "reference/random/generated/numpy.random.randomstate.dirichlet.html", "random.RandomState.exponential()": "reference/random/generated/numpy.random.randomstate.exponential.html", "random.RandomState.f()": "reference/random/generated/numpy.random.randomstate.f.html", "random.RandomState.gamma()": "reference/random/generated/numpy.random.randomstate.gamma.html", "random.RandomState.geometric()": "reference/random/generated/numpy.random.randomstate.geometric.html", "random.RandomState.get_state()": "reference/random/generated/numpy.random.randomstate.get_state.html", "random.RandomState.gumbel()": "reference/random/generated/numpy.random.randomstate.gumbel.html", "random.RandomState.hypergeometric()": "reference/random/generated/numpy.random.randomstate.hypergeometric.html", "random.RandomState.laplace()": "reference/random/generated/numpy.random.randomstate.laplace.html", "random.RandomState.logistic()": "reference/random/generated/numpy.random.randomstate.logistic.html", "random.RandomState.lognormal()": "reference/random/generated/numpy.random.randomstate.lognormal.html", "random.RandomState.logseries()": "reference/random/generated/numpy.random.randomstate.logseries.html", "random.RandomState.multinomial()": "reference/random/generated/numpy.random.randomstate.multinomial.html", "random.RandomState.multivariate_normal()": "reference/random/generated/numpy.random.randomstate.multivariate_normal.html", "random.RandomState.negative_binomial()": "reference/random/generated/numpy.random.randomstate.negative_binomial.html", "random.RandomState.noncentral_chisquare()": "reference/random/generated/numpy.random.randomstate.noncentral_chisquare.html", "random.RandomState.noncentral_f()": "reference/random/generated/numpy.random.randomstate.noncentral_f.html", "random.RandomState.normal()": "reference/random/generated/numpy.random.randomstate.normal.html", "random.RandomState.pareto()": "reference/random/generated/numpy.random.randomstate.pareto.html", "random.RandomState.permutation()": "reference/random/generated/numpy.random.randomstate.permutation.html", "random.RandomState.poisson()": "reference/random/generated/numpy.random.randomstate.poisson.html", "random.RandomState.power()": "reference/random/generated/numpy.random.randomstate.power.html", "random.RandomState.rand()": "reference/random/generated/numpy.random.randomstate.rand.html", "random.RandomState.randint()": "reference/random/generated/numpy.random.randomstate.randint.html", "random.RandomState.randn()": "reference/random/generated/numpy.random.randomstate.randn.html", "random.RandomState.random_integers()": "reference/random/generated/numpy.random.randomstate.random_integers.html", "random.RandomState.random_sample()": "reference/random/generated/numpy.random.randomstate.random_sample.html", "random.RandomState.rayleigh()": "reference/random/generated/numpy.random.randomstate.rayleigh.html", "random.RandomState.seed()": "reference/random/generated/numpy.random.randomstate.seed.html", "random.RandomState.set_state()": "reference/random/generated/numpy.random.randomstate.set_state.html", "random.RandomState.shuffle()": "reference/random/generated/numpy.random.randomstate.shuffle.html", "random.RandomState.standard_cauchy()": "reference/random/generated/numpy.random.randomstate.standard_cauchy.html", "random.RandomState.standard_exponential()": "reference/random/generated/numpy.random.randomstate.standard_exponential.html", "random.RandomState.standard_gamma()": "reference/random/generated/numpy.random.randomstate.standard_gamma.html", "random.RandomState.standard_normal()": "reference/random/generated/numpy.random.randomstate.standard_normal.html", "random.RandomState.standard_t()": "reference/random/generated/numpy.random.randomstate.standard_t.html", "random.RandomState.triangular()": "reference/random/generated/numpy.random.randomstate.triangular.html", "random.RandomState.uniform()": "reference/random/generated/numpy.random.randomstate.uniform.html", "random.RandomState.vonmises()": "reference/random/generated/numpy.random.randomstate.vonmises.html", "random.RandomState.wald()": "reference/random/generated/numpy.random.randomstate.wald.html", "random.RandomState.weibull()": "reference/random/generated/numpy.random.randomstate.weibull.html", "random.RandomState.zipf()": "reference/random/generated/numpy.random.randomstate.zipf.html", "random.ranf()": "reference/random/generated/numpy.random.ranf.html", "random.rayleigh()": "reference/random/generated/numpy.random.rayleigh.html", "random.sample()": "reference/random/generated/numpy.random.sample.html", "random.seed()": "reference/random/generated/numpy.random.seed.html", "random.SeedSequence.entropy": "reference/random/bit_generators/generated/numpy.random.seedsequence.entropy.html", "random.SeedSequence.generate_state()": "reference/random/bit_generators/generated/numpy.random.seedsequence.generate_state.html", "random.SeedSequence.spawn()": "reference/random/bit_generators/generated/numpy.random.seedsequence.spawn.html", "random.SeedSequence.spawn_key": "reference/random/bit_generators/generated/numpy.random.seedsequence.spawn_key.html", "random.set_state()": "reference/random/generated/numpy.random.set_state.html", "random.SFC64.cffi": "reference/random/bit_generators/generated/numpy.random.sfc64.cffi.html", "random.SFC64.ctypes": "reference/random/bit_generators/generated/numpy.random.sfc64.ctypes.html", "random.SFC64.state": "reference/random/bit_generators/generated/numpy.random.sfc64.state.html", "random.shuffle()": "reference/random/generated/numpy.random.shuffle.html", "random.standard_cauchy()": "reference/random/generated/numpy.random.standard_cauchy.html", "random.standard_exponential()": "reference/random/generated/numpy.random.standard_exponential.html", "random.standard_gamma()": "reference/random/generated/numpy.random.standard_gamma.html", "random.standard_normal()": "reference/random/generated/numpy.random.standard_normal.html", "random.standard_t()": "reference/random/generated/numpy.random.standard_t.html", "random.triangular()": "reference/random/generated/numpy.random.triangular.html", "random.uniform()": "reference/random/generated/numpy.random.uniform.html", "random.vonmises()": "reference/random/generated/numpy.random.vonmises.html", "random.wald()": "reference/random/generated/numpy.random.wald.html", "random.weibull()": "reference/random/generated/numpy.random.weibull.html", "random.zipf()": "reference/random/generated/numpy.random.zipf.html", "Reading and writing files": "user/how-to-io.html", "recarray.all()": "reference/generated/numpy.recarray.all.html", "recarray.any()": "reference/generated/numpy.recarray.any.html", "recarray.argmax()": "reference/generated/numpy.recarray.argmax.html", "recarray.argmin()": "reference/generated/numpy.recarray.argmin.html", "recarray.argpartition()": "reference/generated/numpy.recarray.argpartition.html", "recarray.argsort()": "reference/generated/numpy.recarray.argsort.html", "recarray.astype()": "reference/generated/numpy.recarray.astype.html", "recarray.base": "reference/generated/numpy.recarray.base.html", "recarray.byteswap()": "reference/generated/numpy.recarray.byteswap.html", "recarray.choose()": "reference/generated/numpy.recarray.choose.html", "recarray.clip()": "reference/generated/numpy.recarray.clip.html", "recarray.compress()": "reference/generated/numpy.recarray.compress.html", "recarray.conj()": "reference/generated/numpy.recarray.conj.html", "recarray.conjugate()": "reference/generated/numpy.recarray.conjugate.html", "recarray.copy()": "reference/generated/numpy.recarray.copy.html", "recarray.ctypes": "reference/generated/numpy.recarray.ctypes.html", "recarray.cumprod()": "reference/generated/numpy.recarray.cumprod.html", "recarray.cumsum()": "reference/generated/numpy.recarray.cumsum.html", "recarray.data": "reference/generated/numpy.recarray.data.html", "recarray.diagonal()": "reference/generated/numpy.recarray.diagonal.html", "recarray.dump()": "reference/generated/numpy.recarray.dump.html", "recarray.dumps()": "reference/generated/numpy.recarray.dumps.html", "recarray.fill()": "reference/generated/numpy.recarray.fill.html", "recarray.flags": "reference/generated/numpy.recarray.flags.html", "recarray.flat": "reference/generated/numpy.recarray.flat.html", "recarray.flatten()": "reference/generated/numpy.recarray.flatten.html", "recarray.getfield()": "reference/generated/numpy.recarray.getfield.html", "recarray.item()": "reference/generated/numpy.recarray.item.html", "recarray.itemset()": "reference/generated/numpy.recarray.itemset.html", "recarray.itemsize": "reference/generated/numpy.recarray.itemsize.html", "recarray.max()": "reference/generated/numpy.recarray.max.html", "recarray.mean()": "reference/generated/numpy.recarray.mean.html", "recarray.min()": "reference/generated/numpy.recarray.min.html", "recarray.nbytes": "reference/generated/numpy.recarray.nbytes.html", "recarray.ndim": "reference/generated/numpy.recarray.ndim.html", "recarray.newbyteorder()": "reference/generated/numpy.recarray.newbyteorder.html", "recarray.nonzero()": "reference/generated/numpy.recarray.nonzero.html", "recarray.partition()": "reference/generated/numpy.recarray.partition.html", "recarray.prod()": "reference/generated/numpy.recarray.prod.html", "recarray.ptp()": "reference/generated/numpy.recarray.ptp.html", "recarray.put()": "reference/generated/numpy.recarray.put.html", "recarray.ravel()": "reference/generated/numpy.recarray.ravel.html", "recarray.repeat()": "reference/generated/numpy.recarray.repeat.html", "recarray.reshape()": "reference/generated/numpy.recarray.reshape.html", "recarray.resize()": "reference/generated/numpy.recarray.resize.html", "recarray.round()": "reference/generated/numpy.recarray.round.html", "recarray.searchsorted()": "reference/generated/numpy.recarray.searchsorted.html", "recarray.setfield()": "reference/generated/numpy.recarray.setfield.html", "recarray.setflags()": "reference/generated/numpy.recarray.setflags.html", "recarray.size": "reference/generated/numpy.recarray.size.html", "recarray.sort()": "reference/generated/numpy.recarray.sort.html", "recarray.squeeze()": "reference/generated/numpy.recarray.squeeze.html", "recarray.std()": "reference/generated/numpy.recarray.std.html", "recarray.strides": "reference/generated/numpy.recarray.strides.html", "recarray.sum()": "reference/generated/numpy.recarray.sum.html", "recarray.swapaxes()": "reference/generated/numpy.recarray.swapaxes.html", "recarray.T": "reference/generated/numpy.recarray.t.html", "recarray.take()": "reference/generated/numpy.recarray.take.html", "recarray.tobytes()": "reference/generated/numpy.recarray.tobytes.html", "recarray.tofile()": "reference/generated/numpy.recarray.tofile.html", "recarray.tolist()": "reference/generated/numpy.recarray.tolist.html", "recarray.tostring()": "reference/generated/numpy.recarray.tostring.html", "recarray.trace()": "reference/generated/numpy.recarray.trace.html", "recarray.transpose()": "reference/generated/numpy.recarray.transpose.html", "recarray.var()": "reference/generated/numpy.recarray.var.html", "recarray.view()": "reference/generated/numpy.recarray.view.html", "record.all()": "reference/generated/numpy.record.all.html", "record.any()": "reference/generated/numpy.record.any.html", "record.argmax()": "reference/generated/numpy.record.argmax.html", "record.argmin()": "reference/generated/numpy.record.argmin.html", "record.argsort()": "reference/generated/numpy.record.argsort.html", "record.astype()": "reference/generated/numpy.record.astype.html", "record.base": "reference/generated/numpy.record.base.html", "record.byteswap()": "reference/generated/numpy.record.byteswap.html", "record.choose()": "reference/generated/numpy.record.choose.html", "record.clip()": "reference/generated/numpy.record.clip.html", "record.compress()": "reference/generated/numpy.record.compress.html", "record.conjugate()": "reference/generated/numpy.record.conjugate.html", "record.copy()": "reference/generated/numpy.record.copy.html", "record.cumprod()": "reference/generated/numpy.record.cumprod.html", "record.cumsum()": "reference/generated/numpy.record.cumsum.html", "record.data": "reference/generated/numpy.record.data.html", "record.diagonal()": "reference/generated/numpy.record.diagonal.html", "record.dump()": "reference/generated/numpy.record.dump.html", "record.dumps()": "reference/generated/numpy.record.dumps.html", "record.fill()": "reference/generated/numpy.record.fill.html", "record.flags": "reference/generated/numpy.record.flags.html", "record.flat": "reference/generated/numpy.record.flat.html", "record.flatten()": "reference/generated/numpy.record.flatten.html", "record.getfield()": "reference/generated/numpy.record.getfield.html", "record.item()": "reference/generated/numpy.record.item.html", "record.itemset()": "reference/generated/numpy.record.itemset.html", "record.itemsize": "reference/generated/numpy.record.itemsize.html", "record.max()": "reference/generated/numpy.record.max.html", "record.mean()": "reference/generated/numpy.record.mean.html", "record.min()": "reference/generated/numpy.record.min.html", "record.nbytes": "reference/generated/numpy.record.nbytes.html", "record.ndim": "reference/generated/numpy.record.ndim.html", "record.newbyteorder()": "reference/generated/numpy.record.newbyteorder.html", "record.nonzero()": "reference/generated/numpy.record.nonzero.html", "record.pprint()": "reference/generated/numpy.record.pprint.html", "record.prod()": "reference/generated/numpy.record.prod.html", "record.ptp()": "reference/generated/numpy.record.ptp.html", "record.put()": "reference/generated/numpy.record.put.html", "record.ravel()": "reference/generated/numpy.record.ravel.html", "record.repeat()": "reference/generated/numpy.record.repeat.html", "record.reshape()": "reference/generated/numpy.record.reshape.html", "record.resize()": "reference/generated/numpy.record.resize.html", "record.round()": "reference/generated/numpy.record.round.html", "record.searchsorted()": "reference/generated/numpy.record.searchsorted.html", "record.setfield()": "reference/generated/numpy.record.setfield.html", "record.setflags()": "reference/generated/numpy.record.setflags.html", "record.size": "reference/generated/numpy.record.size.html", "record.sort()": "reference/generated/numpy.record.sort.html", "record.squeeze()": "reference/generated/numpy.record.squeeze.html", "record.std()": "reference/generated/numpy.record.std.html", "record.strides": "reference/generated/numpy.record.strides.html", "record.sum()": "reference/generated/numpy.record.sum.html", "record.swapaxes()": "reference/generated/numpy.record.swapaxes.html", "record.T": "reference/generated/numpy.record.t.html", "record.take()": "reference/generated/numpy.record.take.html", "record.tofile()": "reference/generated/numpy.record.tofile.html", "record.tolist()": "reference/generated/numpy.record.tolist.html", "record.tostring()": "reference/generated/numpy.record.tostring.html", "record.trace()": "reference/generated/numpy.record.trace.html", "record.transpose()": "reference/generated/numpy.record.transpose.html", "record.var()": "reference/generated/numpy.record.var.html", "record.view()": "reference/generated/numpy.record.view.html", "Release": "reference/index.html", "Release notes": "release.html", "Releasing a version": "dev/releasing.html", "Reporting bugs": "bugs.html", "Routines": "reference/routines.html", "self.typeStr": "reference/swig.testing.html", "Set routines": "reference/routines.set.html", "Setting up and using your development environment": "dev/development_environment.html", "Setting up git for NumPy development": "dev/gitwash/development_setup.html", "setup.py": "reference/random/examples/cython/setup.py.html", "Some cases where uint and true alignment are different ()": "dev/alignment.html", "Sorting, searching, and counting": "reference/routines.sort.html", "static distutils.ccompiler_opt.CCompilerOpt.dist_error()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.dist_error.html", "static distutils.ccompiler_opt.CCompilerOpt.dist_fatal()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.dist_fatal.html", "static distutils.ccompiler_opt.CCompilerOpt.dist_load_module()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.dist_load_module.html", "static distutils.ccompiler_opt.CCompilerOpt.dist_log()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.dist_log.html", "static distutils.ccompiler_opt.CCompilerOpt.me()": "reference/generated/numpy.distutils.ccompiler_opt.ccompileropt.me.html", "static ma.MaskedArray.__new__()": "reference/generated/numpy.ma.maskedarray.__new__.html", "Statistics": "reference/routines.statistics.html", "Status of": "reference/distutils_status_migration.html", "String operations": "reference/routines.char.html", "Subclassing ndarray": "user/basics.subclassing.html", "template<typename Tp, std::size_t N>class DoxyLimbo": "dev/howto-docs.html#_CPPv4I0_NSt6size_tEE9DoxyLimbo", "Test Support (": "reference/routines.testing.html", "testing.assert_()": "reference/generated/numpy.testing.assert_.html", "testing.assert_allclose()": "reference/generated/numpy.testing.assert_allclose.html", "testing.assert_almost_equal()": "reference/generated/numpy.testing.assert_almost_equal.html", "testing.assert_approx_equal()": "reference/generated/numpy.testing.assert_approx_equal.html", "testing.assert_array_almost_equal()": "reference/generated/numpy.testing.assert_array_almost_equal.html", "testing.assert_array_almost_equal_nulp()": "reference/generated/numpy.testing.assert_array_almost_equal_nulp.html", "testing.assert_array_equal()": "reference/generated/numpy.testing.assert_array_equal.html", "testing.assert_array_less()": "reference/generated/numpy.testing.assert_array_less.html", "testing.assert_array_max_ulp()": "reference/generated/numpy.testing.assert_array_max_ulp.html", "testing.assert_equal()": "reference/generated/numpy.testing.assert_equal.html", "testing.assert_no_gc_cycles()": "reference/generated/numpy.testing.assert_no_gc_cycles.html", "testing.assert_no_warnings()": "reference/generated/numpy.testing.assert_no_warnings.html", "testing.assert_raises()": "reference/generated/numpy.testing.assert_raises.html", "testing.assert_raises_regex()": "reference/generated/numpy.testing.assert_raises_regex.html", "testing.assert_string_equal()": "reference/generated/numpy.testing.assert_string_equal.html", "testing.assert_warns()": "reference/generated/numpy.testing.assert_warns.html", "testing.dec.deprecated()": "reference/generated/numpy.testing.dec.deprecated.html", "testing.dec.knownfailureif()": "reference/generated/numpy.testing.dec.knownfailureif.html", "testing.dec.setastest()": "reference/generated/numpy.testing.dec.setastest.html", "testing.dec.skipif()": "reference/generated/numpy.testing.dec.skipif.html", "testing.dec.slow()": "reference/generated/numpy.testing.dec.slow.html", "testing.decorate_methods()": "reference/generated/numpy.testing.decorate_methods.html", "testing.measure()": "reference/generated/numpy.testing.measure.html", "testing.print_assert_equal()": "reference/generated/numpy.testing.print_assert_equal.html", "testing.run_module_suite()": "reference/generated/numpy.testing.run_module_suite.html", "testing.rundocs()": "reference/generated/numpy.testing.rundocs.html", "testing.suppress_warnings.__call__()": "reference/generated/numpy.testing.suppress_warnings.__call__.html", "testing.suppress_warnings.filter()": "reference/generated/numpy.testing.suppress_warnings.filter.html", "testing.suppress_warnings.record()": "reference/generated/numpy.testing.suppress_warnings.record.html", "The": "reference/maskedarray.generic.html", "The N-dimensional array (": "reference/arrays.ndarray.html", "Three ways to wrap - getting started": "f2py/f2py.getting-started.html", "Two and three dots in difference specs": "dev/gitwash/dot2_dot3.html", "type binomial_t": "reference/random/c-api.html#c.binomial_t", "type bitgen_t": "reference/random/c-api.html", "type NPY_AO": "reference/c-api/types-and-structures.html#c.NPY_AO", "type npy_cdouble": "reference/c-api/dtype.html#c.npy_cdouble", "type npy_cfloat": "reference/c-api/dtype.html#c.npy_cfloat", "type npy_clongdouble": "reference/c-api/dtype.html#c.npy_clongdouble", "type npy_double": "reference/c-api/dtype.html#c.npy_double", "type npy_float": "reference/c-api/dtype.html#c.npy_float", "type npy_hash_t": "reference/c-api/types-and-structures.html#c.NPY_USE_SETITEM.npy_hash_t", "type npy_int": "reference/c-api/dtype.html#c.npy_int", "type npy_int16": "reference/c-api/dtype.html#c.npy_int16", "type npy_int32": "reference/c-api/dtype.html#c.npy_int32", "type npy_int64": "reference/c-api/dtype.html#c.npy_int64", "type npy_intp": "reference/c-api/dtype.html#c.npy_intp", "type npy_long": "reference/c-api/dtype.html#c.npy_long", "type npy_longdouble": "reference/c-api/dtype.html#c.npy_longdouble", "type npy_longlong": "reference/c-api/dtype.html#c.npy_longlong", "type npy_short": "reference/c-api/dtype.html#c.npy_short", "type npy_ubyte": "reference/c-api/dtype.html#c.npy_ubyte", "type npy_uint": "reference/c-api/dtype.html#c.npy_uint", "type npy_uint16": "reference/c-api/dtype.html#c.npy_uint16", "type npy_uint32": "reference/c-api/dtype.html#c.npy_uint32", "type npy_uint64": "reference/c-api/dtype.html#c.npy_uint64", "type npy_uintp": "reference/c-api/dtype.html#c.npy_uintp", "type npy_ulong": "reference/c-api/dtype.html#c.npy_ulong", "type npy_ulonglong": "reference/c-api/dtype.html#c.npy_ulonglong", "type npy_ushort": "reference/c-api/dtype.html#c.npy_ushort", "type NpyAuxData_CloneFunc": "reference/c-api/array.html#c.NpyAuxData_CloneFunc", "type NpyAuxData_FreeFunc": "reference/c-api/array.html#c.NpyAuxData_FreeFunc", "type NpyIter": "reference/c-api/iterator.html", "type NpyIter_GetMultiIndexFunc": "reference/c-api/iterator.html#c.NpyIter_GetMultiIndexFunc", "type NpyIter_IterNextFunc": "reference/c-api/iterator.html#c.NpyIter_IterNextFunc", "type NpyIter_Type": "reference/c-api/iterator.html#c.NpyIter_Type", "type PyArray_ArrFuncs": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs", "type PyArray_Descr": "reference/c-api/types-and-structures.html#c.PyArray_Descr", "type PyArrayFlagsObject": "reference/c-api/types-and-structures.html#c.PyArrayFlagsObject", "type PyArrayIterObject": "reference/c-api/types-and-structures.html#c.PyArrayIterObject", "type PyArrayMultiIterObject": "reference/c-api/types-and-structures.html#c.PyArrayMultiIterObject", "type PyArrayNeighborhoodIterObject": "reference/c-api/types-and-structures.html#c.PyArrayNeighborhoodIterObject", "type PyArrayObject": "reference/c-api/types-and-structures.html#c.PyArrayObject", "type PyDataMem_Handler": "reference/c-api/data_memory.html", "type PyUFunc_Loop1d": "reference/c-api/types-and-structures.html#c.PyUFunc_Loop1d", "type PyUFuncObject": "reference/c-api/types-and-structures.html#c.PyUFuncObject", "type PyUFuncReduceObject": "reference/c-api/types-and-structures.html#c.PyUFuncReduceObject", "ufunc.__call__()": "reference/generated/numpy.ufunc.__call__.html", "ufunc.accumulate()": "reference/generated/numpy.ufunc.accumulate.html", "ufunc.at()": "reference/generated/numpy.ufunc.at.html", "ufunc.identity": "reference/generated/numpy.ufunc.identity.html", "ufunc.nargs": "reference/generated/numpy.ufunc.nargs.html", "ufunc.nin": "reference/generated/numpy.ufunc.nin.html", "ufunc.nout": "reference/generated/numpy.ufunc.nout.html", "ufunc.ntypes": "reference/generated/numpy.ufunc.ntypes.html", "ufunc.outer()": "reference/generated/numpy.ufunc.outer.html", "ufunc.reduce()": "reference/generated/numpy.ufunc.reduce.html", "ufunc.reduceat()": "reference/generated/numpy.ufunc.reduceat.html", "ufunc.signature": "reference/generated/numpy.ufunc.signature.html", "ufunc.types": "reference/generated/numpy.ufunc.types.html", "UFUNC_CORE_DIM_CAN_IGNORE": "reference/c-api/types-and-structures.html#c.UFUNC_CORE_DIM_CAN_IGNORE", "UFUNC_CORE_DIM_SIZE_INFERRED": "reference/c-api/types-and-structures.html#c.UFUNC_CORE_DIM_SIZE_INFERRED", "UFUNC_ERR_CALL": "reference/c-api/ufunc.html#c.UFUNC_ERR_CALL", "UFUNC_ERR_RAISE": "reference/c-api/ufunc.html#c.UFUNC_ERR_RAISE", "UFUNC_ERR_WARN": "reference/c-api/ufunc.html#c.UFUNC_ERR_WARN", "UFUNC_ERR_{HANDLER}": "reference/c-api/ufunc.html", "UFUNC_FPE_DIVIDEBYZERO": "reference/c-api/ufunc.html#c.UFUNC_FPE_DIVIDEBYZERO", "UFUNC_FPE_INVALID": "reference/c-api/ufunc.html#c.UFUNC_FPE_INVALID", "UFUNC_FPE_OVERFLOW": "reference/c-api/ufunc.html#c.UFUNC_FPE_OVERFLOW", "UFUNC_FPE_UNDERFLOW": "reference/c-api/ufunc.html#c.UFUNC_FPE_UNDERFLOW", "UFUNC_MASK_INVALID": "reference/c-api/ufunc.html#c.UFUNC_MASK_INVALID", "UFUNC_MASK_OVERFLOW": "reference/c-api/ufunc.html#c.UFUNC_MASK_OVERFLOW", "UFUNC_MASK_UNDERFLOW": "reference/c-api/ufunc.html#c.UFUNC_MASK_UNDERFLOW", "UFUNC_SHIFT_DIVIDEBYZERO": "reference/c-api/ufunc.html#c.UFUNC_SHIFT_DIVIDEBYZERO", "UFUNC_SHIFT_INVALID": "reference/c-api/ufunc.html#c.UFUNC_SHIFT_INVALID", "UFUNC_SHIFT_OVERFLOW": "reference/c-api/ufunc.html#c.UFUNC_SHIFT_OVERFLOW", "UFUNC_SHIFT_UNDERFLOW": "reference/c-api/ufunc.html#c.UFUNC_SHIFT_UNDERFLOW", "Under-the-hood Documentation for developers": "dev/underthehood.html", "Universal functions (": "reference/ufuncs.html", "unsigned int PyArray_GetNDArrayCFeatureVersion()": "reference/c-api/array.html#c.PyArray_GetNDArrayCFeatureVersion", "unsigned int PyArray_GetNDArrayCVersion()": "reference/c-api/array.html#c.PyArray_GetNDArrayCVersion", "Upgrading": "reference/random/upgrading-pcg64.html", "Using F2PY bindings in Python": "f2py/python-usage.html", "Using Gitpod for NumPy development": "dev/development_gitpod.html", "Using NumPy C-API": "user/c-info.html", "Using the Convenience Classes": "reference/routines.polynomials.classes.html", "Using via": "f2py/buildtools/meson.html", "vectorize.__call__()": "reference/generated/numpy.vectorize.__call__.html", "version": "reference/arrays.interface.html", "void **data": "reference/c-api/types-and-structures.html#c.PyUFuncObject.data", "void *data": "reference/c-api/types-and-structures.html#c.PyArrayInterface.data", "void *ptr": "reference/c-api/types-and-structures.html#c.PyUFuncObject.ptr", "void *PyArray_DATA()": "reference/c-api/array.html#c.PyArray_DATA", "void *PyArray_GETPTR1()": "reference/c-api/array.html#c.PyArray_GETPTR1", "void *PyArray_GETPTR2()": "reference/c-api/array.html#c.PyArray_GETPTR2", "void *PyArray_GETPTR3()": "reference/c-api/array.html#c.PyArray_GETPTR3", "void *PyArray_GETPTR4()": "reference/c-api/array.html#c.PyArray_GETPTR4", "void *PyArray_ITER_DATA()": "reference/c-api/array.html#c.PyArray_ITER_DATA", "void *PyArray_malloc()": "reference/c-api/array.html#c.PyArray_malloc", "void *PyArray_MultiIter_DATA()": "reference/c-api/array.html#c.PyArray_MultiIter_DATA", "void *PyArray_realloc()": "reference/c-api/array.html#c.PyArray_realloc", "void *reserved2": "reference/c-api/types-and-structures.html#c.PyUFuncObject.reserved2", "void castfunc()": "user/c-info.beyond-basics.html", "void copyswap()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.copyswap", "void copyswapn()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.copyswapn", "void dotfunc()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.dotfunc", "void fastclip()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.fastclip", "void fastputmask()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.fastputmask", "void fasttake()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.fasttake", "void fill()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.fill", "void fillwithscalar()": "reference/c-api/types-and-structures.html#c.PyArray_ArrFuncs.fillwithscalar", "void functions()": "reference/c-api/types-and-structures.html#c.PyUFuncObject.functions", "void import_ufunc()": "reference/c-api/ufunc.html#c.import_ufunc", "void NPY_AUXDATA_FREE()": "reference/c-api/array.html#c.NPY_AUXDATA_FREE", "void NPY_BEGIN_THREADS_DESCR()": "reference/c-api/array.html#c.NPY_BEGIN_THREADS_DESCR", "void NPY_BEGIN_THREADS_THRESHOLDED()": "reference/c-api/array.html#c.NPY_BEGIN_THREADS_THRESHOLDED", "void NPY_END_THREADS_DESCR()": "reference/c-api/array.html#c.NPY_END_THREADS_DESCR", "void npy_set_floatstatus_divbyzero()": "reference/c-api/coremath.html#c.npy_set_floatstatus_divbyzero", "void npy_set_floatstatus_invalid()": "reference/c-api/coremath.html#c.npy_set_floatstatus_invalid", "void npy_set_floatstatus_overflow()": "reference/c-api/coremath.html#c.npy_set_floatstatus_overflow", "void npy_set_floatstatus_underflow()": "reference/c-api/coremath.html#c.npy_set_floatstatus_underflow", "void NpyIter_GetInnerFixedStrideArray()": "reference/c-api/iterator.html#c.NpyIter_GetInnerFixedStrideArray", "void NpyIter_GetIterIndexRange()": "reference/c-api/iterator.html#c.NpyIter_GetIterIndexRange", "void NpyIter_GetReadFlags()": "reference/c-api/iterator.html#c.NpyIter_GetReadFlags", "void NpyIter_GetWriteFlags()": "reference/c-api/iterator.html#c.NpyIter_GetWriteFlags", "void PyArray_ArrayType()": "reference/c-api/array.html#c.PyArray_ArrayType", "void PyArray_CastScalarToCtype()": "reference/c-api/array.html#c.PyArray_CastScalarToCtype", "void PyArray_CLEARFLAGS()": "reference/c-api/array.html#c.PyArray_CLEARFLAGS", "void PyArray_DiscardWritebackIfCopy()": "reference/c-api/array.html#c.PyArray_DiscardWritebackIfCopy", "void PyArray_ENABLEFLAGS()": "reference/c-api/array.html#c.PyArray_ENABLEFLAGS", "void PyArray_FillObjectArray()": "reference/c-api/array.html#c.PyArray_FillObjectArray", "void PyArray_FILLWBYTE()": "reference/c-api/array.html#c.PyArray_FILLWBYTE", "void PyArray_free()": "reference/c-api/array.html#c.PyArray_free", "void PyArray_Item_INCREF()": "reference/c-api/array.html#c.PyArray_Item_INCREF", "void PyArray_Item_XDECREF()": "reference/c-api/array.html#c.PyArray_Item_XDECREF", "void PyArray_ITER_GOTO()": "reference/c-api/array.html#c.PyArray_ITER_GOTO", "void PyArray_ITER_GOTO1D()": "reference/c-api/array.html#c.PyArray_ITER_GOTO1D", "void PyArray_ITER_NEXT()": "reference/c-api/array.html#c.PyArray_ITER_NEXT", "void PyArray_ITER_RESET()": "reference/c-api/array.html#c.PyArray_ITER_RESET", "void PyArray_MapIterNext()": "reference/c-api/array.html#c.PyArray_MapIterNext", "void PyArray_MapIterSwapAxes()": "reference/c-api/array.html#c.PyArray_MapIterSwapAxes", "void PyArray_MultiIter_GOTO()": "reference/c-api/array.html#c.PyArray_MultiIter_GOTO", "void PyArray_MultiIter_GOTO1D()": "reference/c-api/array.html#c.PyArray_MultiIter_GOTO1D", "void PyArray_MultiIter_NEXT()": "reference/c-api/array.html#c.PyArray_MultiIter_NEXT", "void PyArray_MultiIter_NEXTi()": "reference/c-api/array.html#c.PyArray_MultiIter_NEXTi", "void PyArray_MultiIter_RESET()": "reference/c-api/array.html#c.PyArray_MultiIter_RESET", "void PyArray_ScalarAsCtype()": "reference/c-api/array.html#c.PyArray_ScalarAsCtype", "void PyArray_SetStringFunction()": "reference/c-api/array.html#c.PyArray_SetStringFunction", "void PyArray_UpdateFlags()": "reference/c-api/array.html#c.PyArray_UpdateFlags", "void PyArray_XDECREF_ERR()": "reference/c-api/array.html#c.PyArray_XDECREF_ERR", "void PyDataMem_EventHookFunc()": "reference/c-api/data_memory.html#c.PyDataMem_EventHookFunc", "void PyDataMem_FREE()": "reference/c-api/array.html#c.PyDataMem_FREE", "void PyDimMem_FREE()": "reference/c-api/array.html#c.PyDimMem_FREE", "void PyUFunc_clearfperr()": "reference/c-api/ufunc.html#c.PyUFunc_clearfperr", "void PyUFunc_D_D()": "reference/c-api/ufunc.html#c.PyUFunc_D_D", "void PyUFunc_d_d()": "reference/c-api/ufunc.html#c.PyUFunc_d_d", "void PyUFunc_dd_d()": "reference/c-api/ufunc.html#c.PyUFunc_dd_d", "void PyUFunc_DD_D()": "reference/c-api/ufunc.html#c.PyUFunc_DD_D", "void PyUFunc_e_e()": "reference/c-api/ufunc.html#c.PyUFunc_e_e", "void PyUFunc_e_e_As_d_d()": "reference/c-api/ufunc.html#c.PyUFunc_e_e_As_d_d", "void PyUFunc_e_e_As_f_f()": "reference/c-api/ufunc.html#c.PyUFunc_e_e_As_f_f", "void PyUFunc_ee_e()": "reference/c-api/ufunc.html#c.PyUFunc_ee_e", "void PyUFunc_ee_e_As_dd_d()": "reference/c-api/ufunc.html#c.PyUFunc_ee_e_As_dd_d", "void PyUFunc_ee_e_As_ff_f()": "reference/c-api/ufunc.html#c.PyUFunc_ee_e_As_ff_f", "void PyUFunc_f_f()": "reference/c-api/ufunc.html#c.PyUFunc_f_f", "void PyUFunc_F_F()": "reference/c-api/ufunc.html#c.PyUFunc_F_F", "void PyUFunc_F_F_As_D_D()": "reference/c-api/ufunc.html#c.PyUFunc_F_F_As_D_D", "void PyUFunc_ff_f()": "reference/c-api/ufunc.html#c.PyUFunc_ff_f", "void PyUFunc_FF_F()": "reference/c-api/ufunc.html#c.PyUFunc_FF_F", "void PyUFunc_ff_f_As_dd_d()": "reference/c-api/ufunc.html#c.PyUFunc_ff_f_As_dd_d", "void PyUFunc_FF_F_As_DD_D()": "reference/c-api/ufunc.html#c.PyUFunc_FF_F_As_DD_D", "void PyUFunc_G_G()": "reference/c-api/ufunc.html#c.PyUFunc_G_G", "void PyUFunc_g_g()": "reference/c-api/ufunc.html#c.PyUFunc_g_g", "void PyUFunc_GetPyValues()": "reference/c-api/ufunc.html#c.PyUFunc_GetPyValues", "void PyUFunc_GG_G()": "reference/c-api/ufunc.html#c.PyUFunc_GG_G", "void PyUFunc_gg_g()": "reference/c-api/ufunc.html#c.PyUFunc_gg_g", "void PyUFunc_O_O()": "reference/c-api/ufunc.html#c.PyUFunc_O_O", "void PyUFunc_O_O_method()": "reference/c-api/ufunc.html#c.PyUFunc_O_O_method", "void PyUFunc_On_Om()": "reference/c-api/ufunc.html#c.PyUFunc_On_Om", "void PyUFunc_OO_O()": "reference/c-api/ufunc.html#c.PyUFunc_OO_O", "void PyUFunc_OO_O_method()": "reference/c-api/ufunc.html#c.PyUFunc_OO_O_method", "void random_multinomial()": "reference/random/c-api.html#c.random_multinomial", "void random_multivariate_hypergeometric_marginals()": "reference/random/c-api.html#c.random_multivariate_hypergeometric_marginals", "void random_standard_exponential_fill()": "reference/random/c-api.html#c.random_standard_exponential_fill", "void random_standard_exponential_fill_f()": "reference/random/c-api.html#c.random_standard_exponential_fill_f", "void random_standard_exponential_inv_fill()": "reference/random/c-api.html#c.random_standard_exponential_inv_fill", "void random_standard_exponential_inv_fill_f()": "reference/random/c-api.html#c.random_standard_exponential_inv_fill_f", "void random_standard_normal_fill()": "reference/random/c-api.html#c.random_standard_normal_fill", "void random_standard_normal_fill_f()": "reference/random/c-api.html#c.random_standard_normal_fill_f", "void random_standard_uniform_fill()": "reference/random/c-api.html#c.random_standard_uniform_fill", "void random_standard_uniform_fill_f()": "reference/random/c-api.html#c.random_standard_uniform_fill_f", "What is NumPy?": "user/whatisnumpy.html", "What\u2019s New or Different": "reference/random/new-or-different.html", "Window functions": "reference/routines.window.html", "WITH_THREADS": "reference/c-api/array.html#c.WITH_THREADS", "Writing custom array containers": "user/basics.dispatch.html", "Writing your own ufunc": "user/c-info.ufunc-tutorial.html", "\u201cdescr\u201ddtype.descr": "reference/generated/numpy.lib.format.html"}