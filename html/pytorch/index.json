{"torch.__config__": "config_mod.html", "torch.__config__.parallel_info()": "config_mod.html#torch.__config__.parallel_info", "torch.__config__.show()": "config_mod.html#torch.__config__.show", "torch._assert": "generated/torch._assert.html", "torch._foreach_abs": "generated/torch._foreach_abs.html", "torch._foreach_abs_": "generated/torch._foreach_abs_.html", "torch._foreach_acos": "generated/torch._foreach_acos.html", "torch._foreach_acos_": "generated/torch._foreach_acos_.html", "torch._foreach_asin": "generated/torch._foreach_asin.html", "torch._foreach_asin_": "generated/torch._foreach_asin_.html", "torch._foreach_atan": "generated/torch._foreach_atan.html", "torch._foreach_atan_": "generated/torch._foreach_atan_.html", "torch._foreach_ceil": "generated/torch._foreach_ceil.html", "torch._foreach_ceil_": "generated/torch._foreach_ceil_.html", "torch._foreach_cos": "generated/torch._foreach_cos.html", "torch._foreach_cos_": "generated/torch._foreach_cos_.html", "torch._foreach_cosh": "generated/torch._foreach_cosh.html", "torch._foreach_cosh_": "generated/torch._foreach_cosh_.html", "torch._foreach_erf": "generated/torch._foreach_erf.html", "torch._foreach_erf_": "generated/torch._foreach_erf_.html", "torch._foreach_erfc": "generated/torch._foreach_erfc.html", "torch._foreach_erfc_": "generated/torch._foreach_erfc_.html", "torch._foreach_exp": "generated/torch._foreach_exp.html", "torch._foreach_exp_": "generated/torch._foreach_exp_.html", "torch._foreach_expm1": "generated/torch._foreach_expm1.html", "torch._foreach_expm1_": "generated/torch._foreach_expm1_.html", "torch._foreach_floor": "generated/torch._foreach_floor.html", "torch._foreach_floor_": "generated/torch._foreach_floor_.html", "torch._foreach_frac": "generated/torch._foreach_frac.html", "torch._foreach_frac_": "generated/torch._foreach_frac_.html", "torch._foreach_lgamma": "generated/torch._foreach_lgamma.html", "torch._foreach_lgamma_": "generated/torch._foreach_lgamma_.html", "torch._foreach_log": "generated/torch._foreach_log.html", "torch._foreach_log10": "generated/torch._foreach_log10.html", "torch._foreach_log10_": "generated/torch._foreach_log10_.html", "torch._foreach_log1p": "generated/torch._foreach_log1p.html", "torch._foreach_log1p_": "generated/torch._foreach_log1p_.html", "torch._foreach_log2": "generated/torch._foreach_log2.html", "torch._foreach_log2_": "generated/torch._foreach_log2_.html", "torch._foreach_log_": "generated/torch._foreach_log_.html", "torch._foreach_neg": "generated/torch._foreach_neg.html", "torch._foreach_neg_": "generated/torch._foreach_neg_.html", "torch._foreach_reciprocal": "generated/torch._foreach_reciprocal.html", "torch._foreach_reciprocal_": "generated/torch._foreach_reciprocal_.html", "torch._foreach_round": "generated/torch._foreach_round.html", "torch._foreach_round_": "generated/torch._foreach_round_.html", "torch._foreach_sigmoid": "generated/torch._foreach_sigmoid.html", "torch._foreach_sigmoid_": "generated/torch._foreach_sigmoid_.html", "torch._foreach_sin": "generated/torch._foreach_sin.html", "torch._foreach_sin_": "generated/torch._foreach_sin_.html", "torch._foreach_sinh": "generated/torch._foreach_sinh.html", "torch._foreach_sinh_": "generated/torch._foreach_sinh_.html", "torch._foreach_sqrt": "generated/torch._foreach_sqrt.html", "torch._foreach_sqrt_": "generated/torch._foreach_sqrt_.html", "torch._foreach_tan": "generated/torch._foreach_tan.html", "torch._foreach_tan_": "generated/torch._foreach_tan_.html", "torch._foreach_trunc": "generated/torch._foreach_trunc.html", "torch._foreach_trunc_": "generated/torch._foreach_trunc_.html", "torch._foreach_zero_": "generated/torch._foreach_zero_.html", "torch._logging": "logging.html", "torch._logging.set_logs()": "generated/torch._logging.set_logs.html#torch._logging.set_logs", "torch._logging.torch._logging.set_logs": "generated/torch._logging.set_logs.html", "torch.abs": "generated/torch.abs.html", "torch.absolute": "generated/torch.absolute.html", "torch.acos": "generated/torch.acos.html", "torch.acosh": "generated/torch.acosh.html", "torch.add": "generated/torch.add.html", "torch.addbmm": "generated/torch.addbmm.html", "torch.addcdiv": "generated/torch.addcdiv.html", "torch.addcmul": "generated/torch.addcmul.html", "torch.addmm": "generated/torch.addmm.html", "torch.addmv": "generated/torch.addmv.html", "torch.addr": "generated/torch.addr.html", "torch.adjoint": "generated/torch.adjoint.html", "torch.all": "generated/torch.all.html", "torch.allclose": "generated/torch.allclose.html", "torch.amax": "generated/torch.amax.html", "torch.amin": "generated/torch.amin.html", "torch.aminmax": "generated/torch.aminmax.html", "torch.angle": "generated/torch.angle.html", "torch.any": "generated/torch.any.html", "torch.ao.nn.intrinsic.BNReLU2d": "generated/torch.ao.nn.intrinsic.bnrelu2d.html#torch.ao.nn.intrinsic.BNReLU2d", "torch.ao.nn.intrinsic.BNReLU3d": "generated/torch.ao.nn.intrinsic.bnrelu3d.html#torch.ao.nn.intrinsic.BNReLU3d", "torch.ao.nn.intrinsic.ConvBn1d": "generated/torch.ao.nn.intrinsic.convbn1d.html#torch.ao.nn.intrinsic.ConvBn1d", "torch.ao.nn.intrinsic.ConvBn2d": "generated/torch.ao.nn.intrinsic.convbn2d.html#torch.ao.nn.intrinsic.ConvBn2d", "torch.ao.nn.intrinsic.ConvBn3d": "generated/torch.ao.nn.intrinsic.convbn3d.html#torch.ao.nn.intrinsic.ConvBn3d", "torch.ao.nn.intrinsic.ConvBnReLU1d": "generated/torch.ao.nn.intrinsic.convbnrelu1d.html#torch.ao.nn.intrinsic.ConvBnReLU1d", "torch.ao.nn.intrinsic.ConvBnReLU2d": "generated/torch.ao.nn.intrinsic.convbnrelu2d.html#torch.ao.nn.intrinsic.ConvBnReLU2d", "torch.ao.nn.intrinsic.ConvBnReLU3d": "generated/torch.ao.nn.intrinsic.convbnrelu3d.html#torch.ao.nn.intrinsic.ConvBnReLU3d", "torch.ao.nn.intrinsic.ConvReLU1d": "generated/torch.ao.nn.intrinsic.convrelu1d.html#torch.ao.nn.intrinsic.ConvReLU1d", "torch.ao.nn.intrinsic.ConvReLU2d": "generated/torch.ao.nn.intrinsic.convrelu2d.html#torch.ao.nn.intrinsic.ConvReLU2d", "torch.ao.nn.intrinsic.ConvReLU3d": "generated/torch.ao.nn.intrinsic.convrelu3d.html#torch.ao.nn.intrinsic.ConvReLU3d", "torch.ao.nn.intrinsic.LinearReLU": "generated/torch.ao.nn.intrinsic.linearrelu.html#torch.ao.nn.intrinsic.LinearReLU", "torch.ao.nn.intrinsic.qat.ConvBn1d": "generated/torch.ao.nn.intrinsic.qat.convbn1d.html#torch.ao.nn.intrinsic.qat.ConvBn1d", "torch.ao.nn.intrinsic.qat.ConvBn2d": "generated/torch.ao.nn.intrinsic.qat.convbn2d.html#torch.ao.nn.intrinsic.qat.ConvBn2d", "torch.ao.nn.intrinsic.qat.ConvBn3d": "generated/torch.ao.nn.intrinsic.qat.convbn3d.html#torch.ao.nn.intrinsic.qat.ConvBn3d", "torch.ao.nn.intrinsic.qat.ConvBnReLU1d": "generated/torch.ao.nn.intrinsic.qat.convbnrelu1d.html#torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "torch.ao.nn.intrinsic.qat.ConvBnReLU2d": "generated/torch.ao.nn.intrinsic.qat.convbnrelu2d.html#torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "torch.ao.nn.intrinsic.qat.ConvBnReLU3d": "generated/torch.ao.nn.intrinsic.qat.convbnrelu3d.html#torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "torch.ao.nn.intrinsic.qat.ConvReLU2d": "generated/torch.ao.nn.intrinsic.qat.convrelu2d.html#torch.ao.nn.intrinsic.qat.ConvReLU2d", "torch.ao.nn.intrinsic.qat.ConvReLU3d": "generated/torch.ao.nn.intrinsic.qat.convrelu3d.html#torch.ao.nn.intrinsic.qat.ConvReLU3d", "torch.ao.nn.intrinsic.qat.freeze_bn_stats": "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.html#torch.ao.nn.intrinsic.qat.freeze_bn_stats", "torch.ao.nn.intrinsic.qat.LinearReLU": "generated/torch.ao.nn.intrinsic.qat.linearrelu.html#torch.ao.nn.intrinsic.qat.LinearReLU", "torch.ao.nn.intrinsic.qat.update_bn_stats": "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.html#torch.ao.nn.intrinsic.qat.update_bn_stats", "torch.ao.nn.intrinsic.quantized.BNReLU2d": "generated/torch.ao.nn.intrinsic.quantized.bnrelu2d.html#torch.ao.nn.intrinsic.quantized.BNReLU2d", "torch.ao.nn.intrinsic.quantized.BNReLU3d": "generated/torch.ao.nn.intrinsic.quantized.bnrelu3d.html#torch.ao.nn.intrinsic.quantized.BNReLU3d", "torch.ao.nn.intrinsic.quantized.ConvReLU1d": "generated/torch.ao.nn.intrinsic.quantized.convrelu1d.html#torch.ao.nn.intrinsic.quantized.ConvReLU1d", "torch.ao.nn.intrinsic.quantized.ConvReLU2d": "generated/torch.ao.nn.intrinsic.quantized.convrelu2d.html#torch.ao.nn.intrinsic.quantized.ConvReLU2d", "torch.ao.nn.intrinsic.quantized.ConvReLU3d": "generated/torch.ao.nn.intrinsic.quantized.convrelu3d.html#torch.ao.nn.intrinsic.quantized.ConvReLU3d", "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU": "generated/torch.ao.nn.intrinsic.quantized.dynamic.linearrelu.html#torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "torch.ao.nn.intrinsic.quantized.LinearReLU": "generated/torch.ao.nn.intrinsic.quantized.linearrelu.html#torch.ao.nn.intrinsic.quantized.LinearReLU", "torch.ao.nn.qat.Conv2d": "generated/torch.ao.nn.qat.conv2d.html#torch.ao.nn.qat.Conv2d", "torch.ao.nn.qat.Conv3d": "generated/torch.ao.nn.qat.conv3d.html#torch.ao.nn.qat.Conv3d", "torch.ao.nn.qat.dynamic.Linear": "generated/torch.ao.nn.qat.dynamic.linear.html#torch.ao.nn.qat.dynamic.Linear", "torch.ao.nn.qat.Linear": "generated/torch.ao.nn.qat.linear.html#torch.ao.nn.qat.Linear", "torch.ao.nn.qat.Linear.from_float()": "generated/torch.ao.nn.qat.linear.html#torch.ao.nn.qat.Linear.from_float", "torch.ao.nn.quantizable.LSTM": "generated/torch.ao.nn.quantizable.lstm.html#torch.ao.nn.quantizable.LSTM", "torch.ao.nn.quantizable.MultiheadAttention": "generated/torch.ao.nn.quantizable.multiheadattention.html#torch.ao.nn.quantizable.MultiheadAttention", "torch.ao.nn.quantizable.MultiheadAttention.dequantize()": "generated/torch.ao.nn.quantizable.multiheadattention.html#torch.ao.nn.quantizable.MultiheadAttention.dequantize", "torch.ao.nn.quantizable.MultiheadAttention.forward()": "generated/torch.ao.nn.quantizable.multiheadattention.html#torch.ao.nn.quantizable.MultiheadAttention.forward", "torch.ao.nn.quantized.BatchNorm2d": "generated/torch.ao.nn.quantized.batchnorm2d.html#torch.ao.nn.quantized.BatchNorm2d", "torch.ao.nn.quantized.BatchNorm3d": "generated/torch.ao.nn.quantized.batchnorm3d.html#torch.ao.nn.quantized.BatchNorm3d", "torch.ao.nn.quantized.Conv1d": "generated/torch.ao.nn.quantized.conv1d.html#torch.ao.nn.quantized.Conv1d", "torch.ao.nn.quantized.Conv1d.from_float()": "generated/torch.ao.nn.quantized.conv1d.html#torch.ao.nn.quantized.Conv1d.from_float", "torch.ao.nn.quantized.Conv2d": "generated/torch.ao.nn.quantized.conv2d.html#torch.ao.nn.quantized.Conv2d", "torch.ao.nn.quantized.Conv2d.from_float()": "generated/torch.ao.nn.quantized.conv2d.html#torch.ao.nn.quantized.Conv2d.from_float", "torch.ao.nn.quantized.Conv3d": "generated/torch.ao.nn.quantized.conv3d.html#torch.ao.nn.quantized.Conv3d", "torch.ao.nn.quantized.Conv3d.from_float()": "generated/torch.ao.nn.quantized.conv3d.html#torch.ao.nn.quantized.Conv3d.from_float", "torch.ao.nn.quantized.ConvTranspose1d": "generated/torch.ao.nn.quantized.convtranspose1d.html#torch.ao.nn.quantized.ConvTranspose1d", "torch.ao.nn.quantized.ConvTranspose2d": "generated/torch.ao.nn.quantized.convtranspose2d.html#torch.ao.nn.quantized.ConvTranspose2d", "torch.ao.nn.quantized.ConvTranspose3d": "generated/torch.ao.nn.quantized.convtranspose3d.html#torch.ao.nn.quantized.ConvTranspose3d", "torch.ao.nn.quantized.dynamic.GRU": "generated/torch.ao.nn.quantized.dynamic.gru.html#torch.ao.nn.quantized.dynamic.GRU", "torch.ao.nn.quantized.dynamic.GRUCell": "generated/torch.ao.nn.quantized.dynamic.grucell.html#torch.ao.nn.quantized.dynamic.GRUCell", "torch.ao.nn.quantized.dynamic.Linear": "generated/torch.ao.nn.quantized.dynamic.linear.html#torch.ao.nn.quantized.dynamic.Linear", "torch.ao.nn.quantized.dynamic.Linear.from_float()": "generated/torch.ao.nn.quantized.dynamic.linear.html#torch.ao.nn.quantized.dynamic.Linear.from_float", "torch.ao.nn.quantized.dynamic.Linear.from_reference()": "generated/torch.ao.nn.quantized.dynamic.linear.html#torch.ao.nn.quantized.dynamic.Linear.from_reference", "torch.ao.nn.quantized.dynamic.LSTM": "generated/torch.ao.nn.quantized.dynamic.lstm.html#torch.ao.nn.quantized.dynamic.LSTM", "torch.ao.nn.quantized.dynamic.LSTMCell": "generated/torch.ao.nn.quantized.dynamic.lstmcell.html#torch.ao.nn.quantized.dynamic.LSTMCell", "torch.ao.nn.quantized.dynamic.RNNCell": "generated/torch.ao.nn.quantized.dynamic.rnncell.html#torch.ao.nn.quantized.dynamic.RNNCell", "torch.ao.nn.quantized.ELU": "generated/torch.ao.nn.quantized.elu.html#torch.ao.nn.quantized.ELU", "torch.ao.nn.quantized.Embedding": "generated/torch.ao.nn.quantized.embedding.html#torch.ao.nn.quantized.Embedding", "torch.ao.nn.quantized.Embedding.from_float()": "generated/torch.ao.nn.quantized.embedding.html#torch.ao.nn.quantized.Embedding.from_float", "torch.ao.nn.quantized.EmbeddingBag": "generated/torch.ao.nn.quantized.embeddingbag.html#torch.ao.nn.quantized.EmbeddingBag", "torch.ao.nn.quantized.EmbeddingBag.from_float()": "generated/torch.ao.nn.quantized.embeddingbag.html#torch.ao.nn.quantized.EmbeddingBag.from_float", "torch.ao.nn.quantized.FloatFunctional": "generated/torch.ao.nn.quantized.floatfunctional.html#torch.ao.nn.quantized.FloatFunctional", "torch.ao.nn.quantized.functional.adaptive_avg_pool2d": "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.html#torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "torch.ao.nn.quantized.functional.adaptive_avg_pool3d": "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.html#torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "torch.ao.nn.quantized.functional.avg_pool2d": "generated/torch.ao.nn.quantized.functional.avg_pool2d.html#torch.ao.nn.quantized.functional.avg_pool2d", "torch.ao.nn.quantized.functional.avg_pool3d": "generated/torch.ao.nn.quantized.functional.avg_pool3d.html#torch.ao.nn.quantized.functional.avg_pool3d", "torch.ao.nn.quantized.functional.celu": "generated/torch.ao.nn.quantized.functional.celu.html#torch.ao.nn.quantized.functional.celu", "torch.ao.nn.quantized.functional.clamp": "generated/torch.ao.nn.quantized.functional.clamp.html#torch.ao.nn.quantized.functional.clamp", "torch.ao.nn.quantized.functional.conv1d": "generated/torch.ao.nn.quantized.functional.conv1d.html#torch.ao.nn.quantized.functional.conv1d", "torch.ao.nn.quantized.functional.conv2d": "generated/torch.ao.nn.quantized.functional.conv2d.html#torch.ao.nn.quantized.functional.conv2d", "torch.ao.nn.quantized.functional.conv3d": "generated/torch.ao.nn.quantized.functional.conv3d.html#torch.ao.nn.quantized.functional.conv3d", "torch.ao.nn.quantized.functional.elu": "generated/torch.ao.nn.quantized.functional.elu.html#torch.ao.nn.quantized.functional.elu", "torch.ao.nn.quantized.functional.hardsigmoid": "generated/torch.ao.nn.quantized.functional.hardsigmoid.html#torch.ao.nn.quantized.functional.hardsigmoid", "torch.ao.nn.quantized.functional.hardswish": "generated/torch.ao.nn.quantized.functional.hardswish.html#torch.ao.nn.quantized.functional.hardswish", "torch.ao.nn.quantized.functional.hardtanh": "generated/torch.ao.nn.quantized.functional.hardtanh.html#torch.ao.nn.quantized.functional.hardtanh", "torch.ao.nn.quantized.functional.interpolate": "generated/torch.ao.nn.quantized.functional.interpolate.html#torch.ao.nn.quantized.functional.interpolate", "torch.ao.nn.quantized.functional.leaky_relu": "generated/torch.ao.nn.quantized.functional.leaky_relu.html#torch.ao.nn.quantized.functional.leaky_relu", "torch.ao.nn.quantized.functional.linear": "generated/torch.ao.nn.quantized.functional.linear.html#torch.ao.nn.quantized.functional.linear", "torch.ao.nn.quantized.functional.max_pool1d": "generated/torch.ao.nn.quantized.functional.max_pool1d.html#torch.ao.nn.quantized.functional.max_pool1d", "torch.ao.nn.quantized.functional.max_pool2d": "generated/torch.ao.nn.quantized.functional.max_pool2d.html#torch.ao.nn.quantized.functional.max_pool2d", "torch.ao.nn.quantized.functional.threshold": "generated/torch.ao.nn.quantized.functional.threshold.html#torch.ao.nn.quantized.functional.threshold", "torch.ao.nn.quantized.functional.upsample": "generated/torch.ao.nn.quantized.functional.upsample.html#torch.ao.nn.quantized.functional.upsample", "torch.ao.nn.quantized.functional.upsample_bilinear": "generated/torch.ao.nn.quantized.functional.upsample_bilinear.html#torch.ao.nn.quantized.functional.upsample_bilinear", "torch.ao.nn.quantized.functional.upsample_nearest": "generated/torch.ao.nn.quantized.functional.upsample_nearest.html#torch.ao.nn.quantized.functional.upsample_nearest", "torch.ao.nn.quantized.FXFloatFunctional": "generated/torch.ao.nn.quantized.fxfloatfunctional.html#torch.ao.nn.quantized.FXFloatFunctional", "torch.ao.nn.quantized.GroupNorm": "generated/torch.ao.nn.quantized.groupnorm.html#torch.ao.nn.quantized.GroupNorm", "torch.ao.nn.quantized.Hardswish": "generated/torch.ao.nn.quantized.hardswish.html#torch.ao.nn.quantized.Hardswish", "torch.ao.nn.quantized.InstanceNorm1d": "generated/torch.ao.nn.quantized.instancenorm1d.html#torch.ao.nn.quantized.InstanceNorm1d", "torch.ao.nn.quantized.InstanceNorm2d": "generated/torch.ao.nn.quantized.instancenorm2d.html#torch.ao.nn.quantized.InstanceNorm2d", "torch.ao.nn.quantized.InstanceNorm3d": "generated/torch.ao.nn.quantized.instancenorm3d.html#torch.ao.nn.quantized.InstanceNorm3d", "torch.ao.nn.quantized.LayerNorm": "generated/torch.ao.nn.quantized.layernorm.html#torch.ao.nn.quantized.LayerNorm", "torch.ao.nn.quantized.LeakyReLU": "generated/torch.ao.nn.quantized.leakyrelu.html#torch.ao.nn.quantized.LeakyReLU", "torch.ao.nn.quantized.Linear": "generated/torch.ao.nn.quantized.linear.html#torch.ao.nn.quantized.Linear", "torch.ao.nn.quantized.Linear.from_float()": "generated/torch.ao.nn.quantized.linear.html#torch.ao.nn.quantized.Linear.from_float", "torch.ao.nn.quantized.Linear.from_reference()": "generated/torch.ao.nn.quantized.linear.html#torch.ao.nn.quantized.Linear.from_reference", "torch.ao.nn.quantized.QFunctional": "generated/torch.ao.nn.quantized.qfunctional.html#torch.ao.nn.quantized.QFunctional", "torch.ao.nn.quantized.ReLU6": "generated/torch.ao.nn.quantized.relu6.html#torch.ao.nn.quantized.ReLU6", "torch.ao.nn.quantized.Sigmoid": "generated/torch.ao.nn.quantized.sigmoid.html#torch.ao.nn.quantized.Sigmoid", "torch.ao.ns._numeric_suite.compare_model_outputs()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.compare_model_outputs", "torch.ao.ns._numeric_suite.compare_model_stub()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.compare_model_stub", "torch.ao.ns._numeric_suite.compare_weights()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.compare_weights", "torch.ao.ns._numeric_suite.get_logger_dict()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.get_logger_dict", "torch.ao.ns._numeric_suite.get_matching_activations()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.get_matching_activations", "torch.ao.ns._numeric_suite.Logger": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.Logger", "torch.ao.ns._numeric_suite.Logger.forward()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.Logger.forward", "torch.ao.ns._numeric_suite.OutputLogger": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.OutputLogger", "torch.ao.ns._numeric_suite.OutputLogger.forward()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.OutputLogger.forward", "torch.ao.ns._numeric_suite.prepare_model_outputs()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.prepare_model_outputs", "torch.ao.ns._numeric_suite.prepare_model_with_stubs()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.prepare_model_with_stubs", "torch.ao.ns._numeric_suite.Shadow": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.Shadow", "torch.ao.ns._numeric_suite.Shadow.add()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.Shadow.add", "torch.ao.ns._numeric_suite.Shadow.add_relu()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.Shadow.add_relu", "torch.ao.ns._numeric_suite.Shadow.add_scalar()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.Shadow.add_scalar", "torch.ao.ns._numeric_suite.Shadow.cat()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.Shadow.cat", "torch.ao.ns._numeric_suite.Shadow.forward()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.Shadow.forward", "torch.ao.ns._numeric_suite.Shadow.mul()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.Shadow.mul", "torch.ao.ns._numeric_suite.Shadow.mul_scalar()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.Shadow.mul_scalar", "torch.ao.ns._numeric_suite.ShadowLogger": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.ShadowLogger", "torch.ao.ns._numeric_suite.ShadowLogger.forward()": "torch.ao.ns._numeric_suite.html#torch.ao.ns._numeric_suite.ShadowLogger.forward", "torch.ao.ns._numeric_suite_fx.add_loggers()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.add_loggers", "torch.ao.ns._numeric_suite_fx.add_shadow_loggers()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.add_shadow_loggers", "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.convert_n_shadows_model", "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison", "torch.ao.ns._numeric_suite_fx.extract_logger_info()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.extract_logger_info", "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model", "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info", "torch.ao.ns._numeric_suite_fx.extract_weights()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.extract_weights", "torch.ao.ns._numeric_suite_fx.loggers_set_enabled()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.loggers_set_enabled", "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.loggers_set_save_activations", "torch.ao.ns._numeric_suite_fx.NSTracer": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.NSTracer", "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module", "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.OutputComparisonLogger", "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward", "torch.ao.ns._numeric_suite_fx.OutputLogger": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.OutputLogger", "torch.ao.ns._numeric_suite_fx.OutputLogger.forward()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.OutputLogger.forward", "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model", "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model", "torch.ao.ns.fx.utils.compute_cosine_similarity()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns.fx.utils.compute_cosine_similarity", "torch.ao.ns.fx.utils.compute_normalized_l2_error()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns.fx.utils.compute_normalized_l2_error", "torch.ao.ns.fx.utils.compute_sqnr()": "torch.ao.ns._numeric_suite_fx.html#torch.ao.ns.fx.utils.compute_sqnr", "torch.ao.quantization.add_quant_dequant": "generated/torch.ao.quantization.add_quant_dequant.html#torch.ao.quantization.add_quant_dequant", "torch.ao.quantization.backend_config.BackendConfig": "generated/torch.ao.quantization.backend_config.backendconfig.html#torch.ao.quantization.backend_config.BackendConfig", "torch.ao.quantization.backend_config.BackendConfig.configs": "generated/torch.ao.quantization.backend_config.backendconfig.html#torch.ao.quantization.backend_config.BackendConfig.configs", "torch.ao.quantization.backend_config.BackendConfig.from_dict()": "generated/torch.ao.quantization.backend_config.backendconfig.html#torch.ao.quantization.backend_config.BackendConfig.from_dict", "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config()": "generated/torch.ao.quantization.backend_config.backendconfig.html#torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config", "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs()": "generated/torch.ao.quantization.backend_config.backendconfig.html#torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs", "torch.ao.quantization.backend_config.BackendConfig.set_name()": "generated/torch.ao.quantization.backend_config.backendconfig.html#torch.ao.quantization.backend_config.BackendConfig.set_name", "torch.ao.quantization.backend_config.BackendConfig.to_dict()": "generated/torch.ao.quantization.backend_config.backendconfig.html#torch.ao.quantization.backend_config.BackendConfig.to_dict", "torch.ao.quantization.backend_config.BackendPatternConfig": "generated/torch.ao.quantization.backend_config.backendpatternconfig.html#torch.ao.quantization.backend_config.BackendPatternConfig", "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config()": "generated/torch.ao.quantization.backend_config.backendpatternconfig.html#torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config", "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict()": "generated/torch.ao.quantization.backend_config.backendpatternconfig.html#torch.ao.quantization.backend_config.BackendPatternConfig.from_dict", "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs()": "generated/torch.ao.quantization.backend_config.backendpatternconfig.html#torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs", "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module()": "generated/torch.ao.quantization.backend_config.backendpatternconfig.html#torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module", "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method()": "generated/torch.ao.quantization.backend_config.backendpatternconfig.html#torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method", "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type()": "generated/torch.ao.quantization.backend_config.backendpatternconfig.html#torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type", "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern()": "generated/torch.ao.quantization.backend_config.backendpatternconfig.html#torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern", "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module()": "generated/torch.ao.quantization.backend_config.backendpatternconfig.html#torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module", "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module()": "generated/torch.ao.quantization.backend_config.backendpatternconfig.html#torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module", "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module()": "generated/torch.ao.quantization.backend_config.backendpatternconfig.html#torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module", "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict()": "generated/torch.ao.quantization.backend_config.backendpatternconfig.html#torch.ao.quantization.backend_config.BackendPatternConfig.to_dict", "torch.ao.quantization.backend_config.DTypeConfig": "generated/torch.ao.quantization.backend_config.dtypeconfig.html#torch.ao.quantization.backend_config.DTypeConfig", "torch.ao.quantization.backend_config.DTypeConfig.from_dict()": "generated/torch.ao.quantization.backend_config.dtypeconfig.html#torch.ao.quantization.backend_config.DTypeConfig.from_dict", "torch.ao.quantization.backend_config.DTypeConfig.to_dict()": "generated/torch.ao.quantization.backend_config.dtypeconfig.html#torch.ao.quantization.backend_config.DTypeConfig.to_dict", "torch.ao.quantization.backend_config.DTypeWithConstraints": "generated/torch.ao.quantization.backend_config.dtypewithconstraints.html#torch.ao.quantization.backend_config.DTypeWithConstraints", "torch.ao.quantization.backend_config.ObservationType": "generated/torch.ao.quantization.backend_config.observationtype.html#torch.ao.quantization.backend_config.ObservationType", "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED": "generated/torch.ao.quantization.backend_config.observationtype.html#torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED", "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT": "generated/torch.ao.quantization.backend_config.observationtype.html#torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT", "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT": "generated/torch.ao.quantization.backend_config.observationtype.html#torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT", "torch.ao.quantization.convert": "generated/torch.ao.quantization.convert.html#torch.ao.quantization.convert", "torch.ao.quantization.default_eval_fn": "generated/torch.ao.quantization.default_eval_fn.html#torch.ao.quantization.default_eval_fn", "torch.ao.quantization.DeQuantStub": "generated/torch.ao.quantization.dequantstub.html#torch.ao.quantization.DeQuantStub", "torch.ao.quantization.fake_quantize.default_fake_quant": "generated/torch.ao.quantization.fake_quantize.default_fake_quant.html#torch.ao.quantization.fake_quantize.default_fake_quant", "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant": "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.html#torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant": "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.html#torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant": "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.html#torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "torch.ao.quantization.fake_quantize.default_histogram_fake_quant": "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.html#torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant": "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.html#torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "torch.ao.quantization.fake_quantize.default_weight_fake_quant": "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.html#torch.ao.quantization.fake_quantize.default_weight_fake_quant", "torch.ao.quantization.fake_quantize.disable_fake_quant": "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.html#torch.ao.quantization.fake_quantize.disable_fake_quant", "torch.ao.quantization.fake_quantize.disable_observer": "generated/torch.ao.quantization.fake_quantize.disable_observer.html#torch.ao.quantization.fake_quantize.disable_observer", "torch.ao.quantization.fake_quantize.enable_fake_quant": "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.html#torch.ao.quantization.fake_quantize.enable_fake_quant", "torch.ao.quantization.fake_quantize.enable_observer": "generated/torch.ao.quantization.fake_quantize.enable_observer.html#torch.ao.quantization.fake_quantize.enable_observer", "torch.ao.quantization.fake_quantize.FakeQuantize": "generated/torch.ao.quantization.fake_quantize.fakequantize.html#torch.ao.quantization.fake_quantize.FakeQuantize", "torch.ao.quantization.fake_quantize.FakeQuantizeBase": "generated/torch.ao.quantization.fake_quantize.fakequantizebase.html#torch.ao.quantization.fake_quantize.FakeQuantizeBase", "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize": "generated/torch.ao.quantization.fake_quantize.fixedqparamsfakequantize.html#torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize": "generated/torch.ao.quantization.fake_quantize.fusedmovingavgobsfakequantize.html#torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "torch.ao.quantization.fuse_modules": "generated/torch.ao.quantization.fuse_modules.html#torch.ao.quantization.fuse_modules", "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": "generated/torch.ao.quantization.fx.custom_config.convertcustomconfig.html#torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict()": "generated/torch.ao.quantization.fx.custom_config.convertcustomconfig.html#torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict", "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping()": "generated/torch.ao.quantization.fx.custom_config.convertcustomconfig.html#torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping", "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes()": "generated/torch.ao.quantization.fx.custom_config.convertcustomconfig.html#torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes", "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict()": "generated/torch.ao.quantization.fx.custom_config.convertcustomconfig.html#torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict", "torch.ao.quantization.fx.custom_config.FuseCustomConfig": "generated/torch.ao.quantization.fx.custom_config.fusecustomconfig.html#torch.ao.quantization.fx.custom_config.FuseCustomConfig", "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict()": "generated/torch.ao.quantization.fx.custom_config.fusecustomconfig.html#torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict", "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes()": "generated/torch.ao.quantization.fx.custom_config.fusecustomconfig.html#torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes", "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict()": "generated/torch.ao.quantization.fx.custom_config.fusecustomconfig.html#torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict", "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": "generated/torch.ao.quantization.fx.custom_config.preparecustomconfig.html#torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict()": "generated/torch.ao.quantization.fx.custom_config.preparecustomconfig.html#torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict", "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping()": "generated/torch.ao.quantization.fx.custom_config.preparecustomconfig.html#torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping", "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes()": "generated/torch.ao.quantization.fx.custom_config.preparecustomconfig.html#torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes", "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes()": "generated/torch.ao.quantization.fx.custom_config.preparecustomconfig.html#torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes", "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names()": "generated/torch.ao.quantization.fx.custom_config.preparecustomconfig.html#torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names", "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes()": "generated/torch.ao.quantization.fx.custom_config.preparecustomconfig.html#torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes", "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes()": "generated/torch.ao.quantization.fx.custom_config.preparecustomconfig.html#torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes", "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class()": "generated/torch.ao.quantization.fx.custom_config.preparecustomconfig.html#torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class", "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name()": "generated/torch.ao.quantization.fx.custom_config.preparecustomconfig.html#torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name", "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict()": "generated/torch.ao.quantization.fx.custom_config.preparecustomconfig.html#torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict", "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry": "generated/torch.ao.quantization.fx.custom_config.standalonemoduleconfigentry.html#torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "torch.ao.quantization.observer.default_debug_observer": "generated/torch.ao.quantization.observer.default_debug_observer.html#torch.ao.quantization.observer.default_debug_observer", "torch.ao.quantization.observer.default_dynamic_quant_observer": "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.html#torch.ao.quantization.observer.default_dynamic_quant_observer", "torch.ao.quantization.observer.default_float_qparams_observer": "generated/torch.ao.quantization.observer.default_float_qparams_observer.html#torch.ao.quantization.observer.default_float_qparams_observer", "torch.ao.quantization.observer.default_histogram_observer": "generated/torch.ao.quantization.observer.default_histogram_observer.html#torch.ao.quantization.observer.default_histogram_observer", "torch.ao.quantization.observer.default_observer": "generated/torch.ao.quantization.observer.default_observer.html#torch.ao.quantization.observer.default_observer", "torch.ao.quantization.observer.default_per_channel_weight_observer": "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.html#torch.ao.quantization.observer.default_per_channel_weight_observer", "torch.ao.quantization.observer.default_placeholder_observer": "generated/torch.ao.quantization.observer.default_placeholder_observer.html#torch.ao.quantization.observer.default_placeholder_observer", "torch.ao.quantization.observer.default_weight_observer": "generated/torch.ao.quantization.observer.default_weight_observer.html#torch.ao.quantization.observer.default_weight_observer", "torch.ao.quantization.observer.get_observer_state_dict": "generated/torch.ao.quantization.observer.get_observer_state_dict.html#torch.ao.quantization.observer.get_observer_state_dict", "torch.ao.quantization.observer.HistogramObserver": "generated/torch.ao.quantization.observer.histogramobserver.html#torch.ao.quantization.observer.HistogramObserver", "torch.ao.quantization.observer.load_observer_state_dict": "generated/torch.ao.quantization.observer.load_observer_state_dict.html#torch.ao.quantization.observer.load_observer_state_dict", "torch.ao.quantization.observer.MinMaxObserver": "generated/torch.ao.quantization.observer.minmaxobserver.html#torch.ao.quantization.observer.MinMaxObserver", "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams()": "generated/torch.ao.quantization.observer.minmaxobserver.html#torch.ao.quantization.observer.MinMaxObserver.calculate_qparams", "torch.ao.quantization.observer.MinMaxObserver.forward()": "generated/torch.ao.quantization.observer.minmaxobserver.html#torch.ao.quantization.observer.MinMaxObserver.forward", "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals()": "generated/torch.ao.quantization.observer.minmaxobserver.html#torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals", "torch.ao.quantization.observer.MovingAverageMinMaxObserver": "generated/torch.ao.quantization.observer.movingaverageminmaxobserver.html#torch.ao.quantization.observer.MovingAverageMinMaxObserver", "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver": "generated/torch.ao.quantization.observer.movingaverageperchannelminmaxobserver.html#torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "torch.ao.quantization.observer.NoopObserver": "generated/torch.ao.quantization.observer.noopobserver.html#torch.ao.quantization.observer.NoopObserver", "torch.ao.quantization.observer.ObserverBase": "generated/torch.ao.quantization.observer.observerbase.html#torch.ao.quantization.observer.ObserverBase", "torch.ao.quantization.observer.ObserverBase.with_args()": "generated/torch.ao.quantization.observer.observerbase.html#torch.ao.quantization.observer.ObserverBase.with_args", "torch.ao.quantization.observer.ObserverBase.with_callable_args()": "generated/torch.ao.quantization.observer.observerbase.html#torch.ao.quantization.observer.ObserverBase.with_callable_args", "torch.ao.quantization.observer.PerChannelMinMaxObserver": "generated/torch.ao.quantization.observer.perchannelminmaxobserver.html#torch.ao.quantization.observer.PerChannelMinMaxObserver", "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals()": "generated/torch.ao.quantization.observer.perchannelminmaxobserver.html#torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals", "torch.ao.quantization.observer.PlaceholderObserver": "generated/torch.ao.quantization.observer.placeholderobserver.html#torch.ao.quantization.observer.PlaceholderObserver", "torch.ao.quantization.observer.RecordingObserver": "generated/torch.ao.quantization.observer.recordingobserver.html#torch.ao.quantization.observer.RecordingObserver", "torch.ao.quantization.prepare": "generated/torch.ao.quantization.prepare.html#torch.ao.quantization.prepare", "torch.ao.quantization.prepare_qat": "generated/torch.ao.quantization.prepare_qat.html#torch.ao.quantization.prepare_qat", "torch.ao.quantization.propagate_qconfig_": "generated/torch.ao.quantization.propagate_qconfig_.html#torch.ao.quantization.propagate_qconfig_", "torch.ao.quantization.qconfig.default_activation_only_qconfig": "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.html#torch.ao.quantization.qconfig.default_activation_only_qconfig", "torch.ao.quantization.qconfig.default_debug_qconfig": "generated/torch.ao.quantization.qconfig.default_debug_qconfig.html#torch.ao.quantization.qconfig.default_debug_qconfig", "torch.ao.quantization.qconfig.default_dynamic_qconfig": "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.html#torch.ao.quantization.qconfig.default_dynamic_qconfig", "torch.ao.quantization.qconfig.default_per_channel_qconfig": "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.html#torch.ao.quantization.qconfig.default_per_channel_qconfig", "torch.ao.quantization.qconfig.default_qat_qconfig": "generated/torch.ao.quantization.qconfig.default_qat_qconfig.html#torch.ao.quantization.qconfig.default_qat_qconfig", "torch.ao.quantization.qconfig.default_qat_qconfig_v2": "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.html#torch.ao.quantization.qconfig.default_qat_qconfig_v2", "torch.ao.quantization.qconfig.default_qconfig": "generated/torch.ao.quantization.qconfig.default_qconfig.html#torch.ao.quantization.qconfig.default_qconfig", "torch.ao.quantization.qconfig.default_weight_only_qconfig": "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.html#torch.ao.quantization.qconfig.default_weight_only_qconfig", "torch.ao.quantization.qconfig.float16_dynamic_qconfig": "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.html#torch.ao.quantization.qconfig.float16_dynamic_qconfig", "torch.ao.quantization.qconfig.float16_static_qconfig": "generated/torch.ao.quantization.qconfig.float16_static_qconfig.html#torch.ao.quantization.qconfig.float16_static_qconfig", "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig": "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.html#torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig": "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.html#torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "torch.ao.quantization.qconfig.QConfig": "generated/torch.ao.quantization.qconfig.qconfig.html#torch.ao.quantization.qconfig.QConfig", "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping": "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.html#torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping": "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.html#torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "torch.ao.quantization.qconfig_mapping.QConfigMapping": "generated/torch.ao.quantization.qconfig_mapping.qconfigmapping.html#torch.ao.quantization.qconfig_mapping.QConfigMapping", "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict()": "generated/torch.ao.quantization.qconfig_mapping.qconfigmapping.html#torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict", "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global()": "generated/torch.ao.quantization.qconfig_mapping.qconfigmapping.html#torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global", "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name()": "generated/torch.ao.quantization.qconfig_mapping.qconfigmapping.html#torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name", "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order()": "generated/torch.ao.quantization.qconfig_mapping.qconfigmapping.html#torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order", "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex()": "generated/torch.ao.quantization.qconfig_mapping.qconfigmapping.html#torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex", "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type()": "generated/torch.ao.quantization.qconfig_mapping.qconfigmapping.html#torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type", "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict()": "generated/torch.ao.quantization.qconfig_mapping.qconfigmapping.html#torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict", "torch.ao.quantization.quantize": "generated/torch.ao.quantization.quantize.html#torch.ao.quantization.quantize", "torch.ao.quantization.quantize_dynamic": "generated/torch.ao.quantization.quantize_dynamic.html#torch.ao.quantization.quantize_dynamic", "torch.ao.quantization.quantize_fx.convert_fx": "generated/torch.ao.quantization.quantize_fx.convert_fx.html#torch.ao.quantization.quantize_fx.convert_fx", "torch.ao.quantization.quantize_fx.fuse_fx": "generated/torch.ao.quantization.quantize_fx.fuse_fx.html#torch.ao.quantization.quantize_fx.fuse_fx", "torch.ao.quantization.quantize_fx.prepare_fx": "generated/torch.ao.quantization.quantize_fx.prepare_fx.html#torch.ao.quantization.quantize_fx.prepare_fx", "torch.ao.quantization.quantize_fx.prepare_qat_fx": "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.html#torch.ao.quantization.quantize_fx.prepare_qat_fx", "torch.ao.quantization.quantize_qat": "generated/torch.ao.quantization.quantize_qat.html#torch.ao.quantization.quantize_qat", "torch.ao.quantization.QuantStub": "generated/torch.ao.quantization.quantstub.html#torch.ao.quantization.QuantStub", "torch.ao.quantization.QuantWrapper": "generated/torch.ao.quantization.quantwrapper.html#torch.ao.quantization.QuantWrapper", "torch.ao.quantization.swap_module": "generated/torch.ao.quantization.swap_module.html#torch.ao.quantization.swap_module", "torch.arange": "generated/torch.arange.html", "torch.arccos": "generated/torch.arccos.html", "torch.arccosh": "generated/torch.arccosh.html", "torch.arcsin": "generated/torch.arcsin.html", "torch.arcsinh": "generated/torch.arcsinh.html", "torch.arctan": "generated/torch.arctan.html", "torch.arctan2": "generated/torch.arctan2.html", "torch.arctanh": "generated/torch.arctanh.html", "torch.are_deterministic_algorithms_enabled": "generated/torch.are_deterministic_algorithms_enabled.html", "torch.argmax": "generated/torch.argmax.html", "torch.argmin": "generated/torch.argmin.html", "torch.argsort": "generated/torch.argsort.html", "torch.argwhere": "generated/torch.argwhere.html", "torch.as_strided": "generated/torch.as_strided.html", "torch.as_tensor": "generated/torch.as_tensor.html", "torch.asarray": "generated/torch.asarray.html", "torch.asin": "generated/torch.asin.html", "torch.asinh": "generated/torch.asinh.html", "torch.atan": "generated/torch.atan.html", "torch.atan2": "generated/torch.atan2.html", "torch.atanh": "generated/torch.atanh.html", "torch.atleast_1d": "generated/torch.atleast_1d.html", "torch.atleast_2d": "generated/torch.atleast_2d.html", "torch.atleast_3d": "generated/torch.atleast_3d.html", "torch.autocast": "amp.html#torch.autocast", "torch.autograd.backward()": "generated/torch.autograd.backward.html#torch.autograd.backward", "torch.autograd.detect_anomaly": "autograd.html#torch.autograd.detect_anomaly", "torch.autograd.forward_ad.dual_level": "generated/torch.autograd.forward_ad.dual_level.html#torch.autograd.forward_ad.dual_level", "torch.autograd.forward_ad.make_dual()": "generated/torch.autograd.forward_ad.make_dual.html#torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual()": "generated/torch.autograd.forward_ad.unpack_dual.html#torch.autograd.forward_ad.unpack_dual", "torch.autograd.Function": "autograd.html#torch.autograd.Function", "torch.autograd.Function.backward()": "generated/torch.autograd.function.backward.html#torch.autograd.Function.backward", "torch.autograd.Function.forward()": "generated/torch.autograd.function.forward.html#torch.autograd.Function.forward", "torch.autograd.function.FunctionCtx.mark_dirty()": "generated/torch.autograd.function.functionctx.mark_dirty.html#torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable()": "generated/torch.autograd.function.functionctx.mark_non_differentiable.html#torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward()": "generated/torch.autograd.function.functionctx.save_for_backward.html#torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads()": "generated/torch.autograd.function.functionctx.set_materialize_grads.html#torch.autograd.function.FunctionCtx.set_materialize_grads", "torch.autograd.Function.jvp()": "generated/torch.autograd.function.jvp.html#torch.autograd.Function.jvp", "torch.autograd.Function.vmap()": "generated/torch.autograd.function.vmap.html#torch.autograd.Function.vmap", "torch.autograd.functional.hessian()": "generated/torch.autograd.functional.hessian.html#torch.autograd.functional.hessian", "torch.autograd.functional.hvp()": "generated/torch.autograd.functional.hvp.html#torch.autograd.functional.hvp", "torch.autograd.functional.jacobian()": "generated/torch.autograd.functional.jacobian.html#torch.autograd.functional.jacobian", "torch.autograd.functional.jvp()": "generated/torch.autograd.functional.jvp.html#torch.autograd.functional.jvp", "torch.autograd.functional.vhp()": "generated/torch.autograd.functional.vhp.html#torch.autograd.functional.vhp", "torch.autograd.functional.vjp()": "generated/torch.autograd.functional.vjp.html#torch.autograd.functional.vjp", "torch.autograd.grad()": "generated/torch.autograd.grad.html#torch.autograd.grad", "torch.autograd.gradcheck()": "generated/torch.autograd.gradcheck.html#torch.autograd.gradcheck", "torch.autograd.gradgradcheck()": "generated/torch.autograd.gradgradcheck.html#torch.autograd.gradgradcheck", "torch.autograd.graph.allow_mutation_on_saved_tensors": "autograd.html#torch.autograd.graph.allow_mutation_on_saved_tensors", "torch.autograd.graph.disable_saved_tensors_hooks": "autograd.html#torch.autograd.graph.disable_saved_tensors_hooks", "torch.autograd.graph.Node.metadata()": "generated/torch.autograd.graph.node.metadata.html#torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name()": "generated/torch.autograd.graph.node.name.html#torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions": "generated/torch.autograd.graph.node.next_functions.html#torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook()": "generated/torch.autograd.graph.node.register_hook.html#torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook()": "generated/torch.autograd.graph.node.register_prehook.html#torch.autograd.graph.Node.register_prehook", "torch.autograd.graph.register_multi_grad_hook": "autograd.html#torch.autograd.graph.register_multi_grad_hook", "torch.autograd.graph.save_on_cpu": "autograd.html#torch.autograd.graph.save_on_cpu", "torch.autograd.graph.saved_tensors_hooks": "autograd.html#torch.autograd.graph.saved_tensors_hooks", "torch.autograd.profiler.emit_itt": "autograd.html#torch.autograd.profiler.emit_itt", "torch.autograd.profiler.emit_nvtx": "autograd.html#torch.autograd.profiler.emit_nvtx", "torch.autograd.profiler.load_nvprof()": "generated/torch.autograd.profiler.load_nvprof.html#torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.profile": "autograd.html#torch.autograd.profiler.profile", "torch.autograd.profiler.profile.export_chrome_trace()": "generated/torch.autograd.profiler.profile.export_chrome_trace.html#torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages()": "generated/torch.autograd.profiler.profile.key_averages.html#torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total": "generated/torch.autograd.profiler.profile.self_cpu_time_total.html#torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average()": "generated/torch.autograd.profiler.profile.total_average.html#torch.autograd.profiler.profile.total_average", "torch.autograd.set_detect_anomaly": "autograd.html#torch.autograd.set_detect_anomaly", "torch.backends": "backends.html", "torch.backends.cpu.get_cpu_capability()": "backends.html#torch.backends.cpu.get_cpu_capability", "torch.backends.cuda.cufft_plan_cache": "backends.html#torch.backends.cuda.cufft_plan_cache", "torch.backends.cuda.cufft_plan_cache.clear()": "backends.html#torch.backends.cuda.cufft_plan_cache.clear", "torch.backends.cuda.cufft_plan_cache.max_size": "backends.html#torch.backends.cuda.cufft_plan_cache.max_size", "torch.backends.cuda.cufft_plan_cache.size": "backends.html#torch.backends.cuda.cufft_plan_cache.size", "torch.backends.cuda.enable_flash_sdp()": "backends.html#torch.backends.cuda.enable_flash_sdp", "torch.backends.cuda.enable_math_sdp()": "backends.html#torch.backends.cuda.enable_math_sdp", "torch.backends.cuda.enable_mem_efficient_sdp()": "backends.html#torch.backends.cuda.enable_mem_efficient_sdp", "torch.backends.cuda.flash_sdp_enabled()": "backends.html#torch.backends.cuda.flash_sdp_enabled", "torch.backends.cuda.is_built()": "backends.html#torch.backends.cuda.is_built", "torch.backends.cuda.math_sdp_enabled()": "backends.html#torch.backends.cuda.math_sdp_enabled", "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction": "backends.html#torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction", "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction": "backends.html#torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction", "torch.backends.cuda.matmul.allow_tf32": "backends.html#torch.backends.cuda.matmul.allow_tf32", "torch.backends.cuda.mem_efficient_sdp_enabled()": "backends.html#torch.backends.cuda.mem_efficient_sdp_enabled", "torch.backends.cuda.preferred_linalg_library()": "backends.html#torch.backends.cuda.preferred_linalg_library", "torch.backends.cuda.sdp_kernel()": "backends.html#torch.backends.cuda.sdp_kernel", "torch.backends.cuda.SDPBackend": "backends.html#torch.backends.cuda.SDPBackend", "torch.backends.cudnn.allow_tf32": "backends.html#torch.backends.cudnn.allow_tf32", "torch.backends.cudnn.benchmark": "backends.html#torch.backends.cudnn.benchmark", "torch.backends.cudnn.benchmark_limit": "backends.html#torch.backends.cudnn.benchmark_limit", "torch.backends.cudnn.deterministic": "backends.html#torch.backends.cudnn.deterministic", "torch.backends.cudnn.enabled": "backends.html#torch.backends.cudnn.enabled", "torch.backends.cudnn.is_available()": "backends.html#torch.backends.cudnn.is_available", "torch.backends.cudnn.version()": "backends.html#torch.backends.cudnn.version", "torch.backends.mkl.is_available()": "backends.html#torch.backends.mkl.is_available", "torch.backends.mkl.verbose": "backends.html#torch.backends.mkl.verbose", "torch.backends.mkldnn.is_available()": "backends.html#torch.backends.mkldnn.is_available", "torch.backends.mkldnn.verbose": "backends.html#torch.backends.mkldnn.verbose", "torch.backends.mps.is_available()": "backends.html#torch.backends.mps.is_available", "torch.backends.mps.is_built()": "backends.html#torch.backends.mps.is_built", "torch.backends.openmp.is_available()": "backends.html#torch.backends.openmp.is_available", "torch.backends.opt_einsum.enabled": "backends.html#torch.backends.opt_einsum.enabled", "torch.backends.opt_einsum.get_opt_einsum()": "backends.html#torch.backends.opt_einsum.get_opt_einsum", "torch.backends.opt_einsum.is_available()": "backends.html#torch.backends.opt_einsum.is_available", "torch.backends.opt_einsum.strategy": "backends.html#torch.backends.opt_einsum.strategy", "torch.baddbmm": "generated/torch.baddbmm.html", "torch.bartlett_window": "generated/torch.bartlett_window.html", "torch.bernoulli": "generated/torch.bernoulli.html", "torch.BFloat16Storage": "storage.html#torch.BFloat16Storage", "torch.BFloat16Storage.dtype": "storage.html#torch.BFloat16Storage.dtype", "torch.bincount": "generated/torch.bincount.html", "torch.bitwise_and": "generated/torch.bitwise_and.html", "torch.bitwise_left_shift": "generated/torch.bitwise_left_shift.html", "torch.bitwise_not": "generated/torch.bitwise_not.html", "torch.bitwise_or": "generated/torch.bitwise_or.html", "torch.bitwise_right_shift": "generated/torch.bitwise_right_shift.html", "torch.bitwise_xor": "generated/torch.bitwise_xor.html", "torch.blackman_window": "generated/torch.blackman_window.html", "torch.block_diag": "generated/torch.block_diag.html", "torch.bmm": "generated/torch.bmm.html", "torch.BoolStorage": "storage.html#torch.BoolStorage", "torch.BoolStorage.dtype": "storage.html#torch.BoolStorage.dtype", "torch.broadcast_shapes": "generated/torch.broadcast_shapes.html", "torch.broadcast_tensors": "generated/torch.broadcast_tensors.html", "torch.broadcast_to": "generated/torch.broadcast_to.html", "torch.bucketize": "generated/torch.bucketize.html", "torch.ByteStorage": "storage.html#torch.ByteStorage", "torch.ByteStorage.dtype": "storage.html#torch.ByteStorage.dtype", "torch.can_cast": "generated/torch.can_cast.html", "torch.cartesian_prod": "generated/torch.cartesian_prod.html", "torch.cat": "generated/torch.cat.html", "torch.cdist": "generated/torch.cdist.html", "torch.ceil": "generated/torch.ceil.html", "torch.chain_matmul": "generated/torch.chain_matmul.html", "torch.CharStorage": "storage.html#torch.CharStorage", "torch.CharStorage.dtype": "storage.html#torch.CharStorage.dtype", "torch.cholesky": "generated/torch.cholesky.html", "torch.cholesky_inverse": "generated/torch.cholesky_inverse.html", "torch.cholesky_solve": "generated/torch.cholesky_solve.html", "torch.chunk": "generated/torch.chunk.html", "torch.clamp": "generated/torch.clamp.html", "torch.clip": "generated/torch.clip.html", "torch.clone": "generated/torch.clone.html", "torch.column_stack": "generated/torch.column_stack.html", "torch.combinations": "generated/torch.combinations.html", "torch.compile": "generated/torch.compile.html", "torch.compiled_with_cxx11_abi": "generated/torch.compiled_with_cxx11_abi.html", "torch.compiler": "torch.compiler.html", "torch.compiler.allow_in_graph()": "generated/torch.compiler.allow_in_graph.html#torch.compiler.allow_in_graph", "torch.compiler.assume_constant_result()": "generated/torch.compiler.assume_constant_result.html#torch.compiler.assume_constant_result", "torch.compiler.Best Practices for Backends": "torch.compiler_best_practices_for_backends.html", "torch.compiler.compile()": "generated/torch.compiler.compile.html#torch.compiler.compile", "torch.compiler.CUDAGraph Trees": "torch.compiler_cudagraph_trees.html", "torch.compiler.Custom Backends": "torch.compiler_custom_backends.html", "torch.compiler.disable()": "generated/torch.compiler.disable.html#torch.compiler.disable", "torch.compiler.Frequently Asked Questions": "torch.compiler_faq.html", "torch.compiler.Getting Started": "torch.compiler_get_started.html", "torch.compiler.Guards Overview": "torch.compiler_guards_overview.html", "torch.compiler.list_backends()": "generated/torch.compiler.list_backends.html#torch.compiler.list_backends", "torch.compiler.Profiling to understand torch.compile performance": "torch.compiler_profiling_torch_compile.html", "torch.compiler.PyTorch 2.0 NNModule Support": "torch.compiler_nn_module.html", "torch.compiler.PyTorch 2.0 Performance Dashboard": "torch.compiler_performance_dashboard.html", "torch.compiler.PyTorch 2.0 Troubleshooting": "torch.compiler_troubleshooting.html", "torch.compiler.reset()": "generated/torch.compiler.reset.html#torch.compiler.reset", "torch.compiler.torch.compiler API reference": "torch.compiler_api.html", "torch.compiler.torch.compiler API reference.torch.compiler.allow_in_graph": "generated/torch.compiler.allow_in_graph.html", "torch.compiler.torch.compiler API reference.torch.compiler.assume_constant_result": "generated/torch.compiler.assume_constant_result.html", "torch.compiler.torch.compiler API reference.torch.compiler.compile": "generated/torch.compiler.compile.html", "torch.compiler.torch.compiler API reference.torch.compiler.disable": "generated/torch.compiler.disable.html", "torch.compiler.torch.compiler API reference.torch.compiler.list_backends": "generated/torch.compiler.list_backends.html", "torch.compiler.torch.compiler API reference.torch.compiler.reset": "generated/torch.compiler.reset.html", "torch.compiler.TorchDynamo APIs for fine-grained tracing": "torch.compiler_fine_grain_apis.html", "torch.compiler.TorchInductor GPU Profiling": "torch.compiler_inductor_profiling.html", "torch.complex": "generated/torch.complex.html", "torch.ComplexDoubleStorage": "storage.html#torch.ComplexDoubleStorage", "torch.ComplexDoubleStorage.dtype": "storage.html#torch.ComplexDoubleStorage.dtype", "torch.ComplexFloatStorage": "storage.html#torch.ComplexFloatStorage", "torch.ComplexFloatStorage.dtype": "storage.html#torch.ComplexFloatStorage.dtype", "torch.concat": "generated/torch.concat.html", "torch.concatenate": "generated/torch.concatenate.html", "torch.conj": "generated/torch.conj.html", "torch.conj_physical": "generated/torch.conj_physical.html", "torch.copysign": "generated/torch.copysign.html", "torch.corrcoef": "generated/torch.corrcoef.html", "torch.cos": "generated/torch.cos.html", "torch.cosh": "generated/torch.cosh.html", "torch.count_nonzero": "generated/torch.count_nonzero.html", "torch.cov": "generated/torch.cov.html", "torch.cpu": "cpu.html", "torch.cpu.amp.autocast": "amp.html#torch.cpu.amp.autocast", "torch.cpu.current_stream()": "generated/torch.cpu.current_stream.html#torch.cpu.current_stream", "torch.cpu.device_count()": "generated/torch.cpu.device_count.html#torch.cpu.device_count", "torch.cpu.is_available()": "generated/torch.cpu.is_available.html#torch.cpu.is_available", "torch.cpu.stream()": "generated/torch.cpu.stream.html#torch.cpu.stream", "torch.cpu.StreamContext": "generated/torch.cpu.streamcontext.html", "torch.cpu.synchronize()": "generated/torch.cpu.synchronize.html#torch.cpu.synchronize", "torch.cpu.torch.cpu.current_stream": "generated/torch.cpu.current_stream.html", "torch.cpu.torch.cpu.device_count": "generated/torch.cpu.device_count.html", "torch.cpu.torch.cpu.is_available": "generated/torch.cpu.is_available.html", "torch.cpu.torch.cpu.stream": "generated/torch.cpu.stream.html", "torch.cpu.torch.cpu.synchronize": "generated/torch.cpu.synchronize.html", "torch.cross": "generated/torch.cross.html", "torch.cuda": "cuda.html", "torch.cuda._sanitizer.enable_cuda_sanitizer()": "cuda._sanitizer.html#torch.cuda._sanitizer.enable_cuda_sanitizer", "torch.cuda.amp.autocast": "amp.html#torch.cuda.amp.autocast", "torch.cuda.amp.custom_bwd()": "amp.html#torch.cuda.amp.custom_bwd", "torch.cuda.amp.custom_fwd()": "amp.html#torch.cuda.amp.custom_fwd", "torch.cuda.amp.GradScaler": "amp.html#torch.cuda.amp.GradScaler", "torch.cuda.amp.GradScaler.get_backoff_factor()": "amp.html#torch.cuda.amp.GradScaler.get_backoff_factor", "torch.cuda.amp.GradScaler.get_growth_factor()": "amp.html#torch.cuda.amp.GradScaler.get_growth_factor", "torch.cuda.amp.GradScaler.get_growth_interval()": "amp.html#torch.cuda.amp.GradScaler.get_growth_interval", "torch.cuda.amp.GradScaler.get_scale()": "amp.html#torch.cuda.amp.GradScaler.get_scale", "torch.cuda.amp.GradScaler.is_enabled()": "amp.html#torch.cuda.amp.GradScaler.is_enabled", "torch.cuda.amp.GradScaler.load_state_dict()": "amp.html#torch.cuda.amp.GradScaler.load_state_dict", "torch.cuda.amp.GradScaler.scale()": "amp.html#torch.cuda.amp.GradScaler.scale", "torch.cuda.amp.GradScaler.set_backoff_factor()": "amp.html#torch.cuda.amp.GradScaler.set_backoff_factor", "torch.cuda.amp.GradScaler.set_growth_factor()": "amp.html#torch.cuda.amp.GradScaler.set_growth_factor", "torch.cuda.amp.GradScaler.set_growth_interval()": "amp.html#torch.cuda.amp.GradScaler.set_growth_interval", "torch.cuda.amp.GradScaler.state_dict()": "amp.html#torch.cuda.amp.GradScaler.state_dict", "torch.cuda.amp.GradScaler.step()": "amp.html#torch.cuda.amp.GradScaler.step", "torch.cuda.amp.GradScaler.unscale_()": "amp.html#torch.cuda.amp.GradScaler.unscale_", "torch.cuda.amp.GradScaler.update()": "amp.html#torch.cuda.amp.GradScaler.update", "torch.cuda.caching_allocator_alloc()": "generated/torch.cuda.caching_allocator_alloc.html#torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete()": "generated/torch.cuda.caching_allocator_delete.html#torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer()": "generated/torch.cuda.can_device_access_peer.html#torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator()": "generated/torch.cuda.change_current_allocator.html#torch.cuda.change_current_allocator", "torch.cuda.clock_rate()": "generated/torch.cuda.clock_rate.html#torch.cuda.clock_rate", "torch.cuda.comm.broadcast()": "generated/torch.cuda.comm.broadcast.html#torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced()": "generated/torch.cuda.comm.broadcast_coalesced.html#torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather()": "generated/torch.cuda.comm.gather.html#torch.cuda.comm.gather", "torch.cuda.comm.reduce_add()": "generated/torch.cuda.comm.reduce_add.html#torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter()": "generated/torch.cuda.comm.scatter.html#torch.cuda.comm.scatter", "torch.cuda.CUDA Stream Sanitizer": "cuda._sanitizer.html", "torch.cuda.CUDAGraph": "generated/torch.cuda.cudagraph.html", "torch.cuda.CUDAGraph.capture_begin()": "generated/torch.cuda.cudagraph.html#torch.cuda.CUDAGraph.capture_begin", "torch.cuda.CUDAGraph.capture_end()": "generated/torch.cuda.cudagraph.html#torch.cuda.CUDAGraph.capture_end", "torch.cuda.CUDAGraph.debug_dump()": "generated/torch.cuda.cudagraph.html#torch.cuda.CUDAGraph.debug_dump", "torch.cuda.CUDAGraph.enable_debug_mode()": "generated/torch.cuda.cudagraph.html#torch.cuda.CUDAGraph.enable_debug_mode", "torch.cuda.CUDAGraph.pool()": "generated/torch.cuda.cudagraph.html#torch.cuda.CUDAGraph.pool", "torch.cuda.CUDAGraph.replay()": "generated/torch.cuda.cudagraph.html#torch.cuda.CUDAGraph.replay", "torch.cuda.CUDAGraph.reset()": "generated/torch.cuda.cudagraph.html#torch.cuda.CUDAGraph.reset", "torch.cuda.CUDAPluggableAllocator": "generated/torch.cuda.cudapluggableallocator.html", "torch.cuda.current_blas_handle()": "generated/torch.cuda.current_blas_handle.html#torch.cuda.current_blas_handle", "torch.cuda.current_device()": "generated/torch.cuda.current_device.html#torch.cuda.current_device", "torch.cuda.current_stream()": "generated/torch.cuda.current_stream.html#torch.cuda.current_stream", "torch.cuda.default_stream()": "generated/torch.cuda.default_stream.html#torch.cuda.default_stream", "torch.cuda.device": "generated/torch.cuda.device.html", "torch.cuda.device_count()": "generated/torch.cuda.device_count.html#torch.cuda.device_count", "torch.cuda.device_of": "generated/torch.cuda.device_of.html", "torch.cuda.empty_cache()": "generated/torch.cuda.empty_cache.html#torch.cuda.empty_cache", "torch.cuda.Event": "generated/torch.cuda.event.html", "torch.cuda.Event.elapsed_time()": "generated/torch.cuda.event.html#torch.cuda.Event.elapsed_time", "torch.cuda.Event.from_ipc_handle()": "generated/torch.cuda.event.html#torch.cuda.Event.from_ipc_handle", "torch.cuda.Event.ipc_handle()": "generated/torch.cuda.event.html#torch.cuda.Event.ipc_handle", "torch.cuda.Event.query()": "generated/torch.cuda.event.html#torch.cuda.Event.query", "torch.cuda.Event.record()": "generated/torch.cuda.event.html#torch.cuda.Event.record", "torch.cuda.Event.synchronize()": "generated/torch.cuda.event.html#torch.cuda.Event.synchronize", "torch.cuda.Event.wait()": "generated/torch.cuda.event.html#torch.cuda.Event.wait", "torch.cuda.ExternalStream": "generated/torch.cuda.externalstream.html", "torch.cuda.ExternalStream.query()": "generated/torch.cuda.externalstream.html#torch.cuda.ExternalStream.query", "torch.cuda.ExternalStream.record_event()": "generated/torch.cuda.externalstream.html#torch.cuda.ExternalStream.record_event", "torch.cuda.ExternalStream.synchronize()": "generated/torch.cuda.externalstream.html#torch.cuda.ExternalStream.synchronize", "torch.cuda.ExternalStream.wait_event()": "generated/torch.cuda.externalstream.html#torch.cuda.ExternalStream.wait_event", "torch.cuda.ExternalStream.wait_stream()": "generated/torch.cuda.externalstream.html#torch.cuda.ExternalStream.wait_stream", "torch.cuda.get_allocator_backend()": "generated/torch.cuda.get_allocator_backend.html#torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list()": "generated/torch.cuda.get_arch_list.html#torch.cuda.get_arch_list", "torch.cuda.get_device_capability()": "generated/torch.cuda.get_device_capability.html#torch.cuda.get_device_capability", "torch.cuda.get_device_name()": "generated/torch.cuda.get_device_name.html#torch.cuda.get_device_name", "torch.cuda.get_device_properties()": "generated/torch.cuda.get_device_properties.html#torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags()": "generated/torch.cuda.get_gencode_flags.html#torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state()": "generated/torch.cuda.get_rng_state.html#torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all()": "generated/torch.cuda.get_rng_state_all.html#torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode()": "generated/torch.cuda.get_sync_debug_mode.html#torch.cuda.get_sync_debug_mode", "torch.cuda.graph": "generated/torch.cuda.graph.html", "torch.cuda.graph_pool_handle()": "generated/torch.cuda.graph_pool_handle.html#torch.cuda.graph_pool_handle", "torch.cuda.init()": "generated/torch.cuda.init.html#torch.cuda.init", "torch.cuda.initial_seed()": "generated/torch.cuda.initial_seed.html#torch.cuda.initial_seed", "torch.cuda.ipc_collect()": "generated/torch.cuda.ipc_collect.html#torch.cuda.ipc_collect", "torch.cuda.is_available()": "generated/torch.cuda.is_available.html#torch.cuda.is_available", "torch.cuda.is_current_stream_capturing()": "generated/torch.cuda.is_current_stream_capturing.html#torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized()": "generated/torch.cuda.is_initialized.html#torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn()": "generated/torch.cuda.jiterator._create_jit_fn.html#torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn()": "generated/torch.cuda.jiterator._create_multi_output_jit_fn.html#torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes()": "generated/torch.cuda.list_gpu_processes.html#torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables()": "generated/torch.cuda.make_graphed_callables.html#torch.cuda.make_graphed_callables", "torch.cuda.manual_seed()": "generated/torch.cuda.manual_seed.html#torch.cuda.manual_seed", "torch.cuda.manual_seed_all()": "generated/torch.cuda.manual_seed_all.html#torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated()": "generated/torch.cuda.max_memory_allocated.html#torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached()": "generated/torch.cuda.max_memory_cached.html#torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved()": "generated/torch.cuda.max_memory_reserved.html#torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info()": "generated/torch.cuda.mem_get_info.html#torch.cuda.mem_get_info", "torch.cuda.memory._dump_snapshot()": "torch_cuda_memory.html#torch.cuda.memory._dump_snapshot", "torch.cuda.memory._record_memory_history()": "torch_cuda_memory.html#torch.cuda.memory._record_memory_history", "torch.cuda.memory._snapshot()": "torch_cuda_memory.html#torch.cuda.memory._snapshot", "torch.cuda.memory_allocated()": "generated/torch.cuda.memory_allocated.html#torch.cuda.memory_allocated", "torch.cuda.memory_cached()": "generated/torch.cuda.memory_cached.html#torch.cuda.memory_cached", "torch.cuda.memory_reserved()": "generated/torch.cuda.memory_reserved.html#torch.cuda.memory_reserved", "torch.cuda.memory_snapshot()": "generated/torch.cuda.memory_snapshot.html#torch.cuda.memory_snapshot", "torch.cuda.memory_stats()": "generated/torch.cuda.memory_stats.html#torch.cuda.memory_stats", "torch.cuda.memory_summary()": "generated/torch.cuda.memory_summary.html#torch.cuda.memory_summary", "torch.cuda.memory_usage()": "generated/torch.cuda.memory_usage.html#torch.cuda.memory_usage", "torch.cuda.nvtx.mark()": "generated/torch.cuda.nvtx.mark.html#torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop()": "generated/torch.cuda.nvtx.range_pop.html#torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push()": "generated/torch.cuda.nvtx.range_push.html#torch.cuda.nvtx.range_push", "torch.cuda.power_draw()": "generated/torch.cuda.power_draw.html#torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated()": "generated/torch.cuda.reset_max_memory_allocated.html#torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached()": "generated/torch.cuda.reset_max_memory_cached.html#torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats()": "generated/torch.cuda.reset_peak_memory_stats.html#torch.cuda.reset_peak_memory_stats", "torch.cuda.seed()": "generated/torch.cuda.seed.html#torch.cuda.seed", "torch.cuda.seed_all()": "generated/torch.cuda.seed_all.html#torch.cuda.seed_all", "torch.cuda.set_device()": "generated/torch.cuda.set_device.html#torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction()": "generated/torch.cuda.set_per_process_memory_fraction.html#torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state()": "generated/torch.cuda.set_rng_state.html#torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all()": "generated/torch.cuda.set_rng_state_all.html#torch.cuda.set_rng_state_all", "torch.cuda.set_stream()": "generated/torch.cuda.set_stream.html#torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode()": "generated/torch.cuda.set_sync_debug_mode.html#torch.cuda.set_sync_debug_mode", "torch.cuda.stream()": "generated/torch.cuda.stream.html#torch.cuda.stream", "torch.cuda.StreamContext": "generated/torch.cuda.streamcontext.html", "torch.cuda.synchronize()": "generated/torch.cuda.synchronize.html#torch.cuda.synchronize", "torch.cuda.temperature()": "generated/torch.cuda.temperature.html#torch.cuda.temperature", "torch.cuda.torch.cuda.caching_allocator_alloc": "generated/torch.cuda.caching_allocator_alloc.html", "torch.cuda.torch.cuda.caching_allocator_delete": "generated/torch.cuda.caching_allocator_delete.html", "torch.cuda.torch.cuda.can_device_access_peer": "generated/torch.cuda.can_device_access_peer.html", "torch.cuda.torch.cuda.change_current_allocator": "generated/torch.cuda.change_current_allocator.html", "torch.cuda.torch.cuda.clock_rate": "generated/torch.cuda.clock_rate.html", "torch.cuda.torch.cuda.comm.broadcast": "generated/torch.cuda.comm.broadcast.html", "torch.cuda.torch.cuda.comm.broadcast_coalesced": "generated/torch.cuda.comm.broadcast_coalesced.html", "torch.cuda.torch.cuda.comm.gather": "generated/torch.cuda.comm.gather.html", "torch.cuda.torch.cuda.comm.reduce_add": "generated/torch.cuda.comm.reduce_add.html", "torch.cuda.torch.cuda.comm.scatter": "generated/torch.cuda.comm.scatter.html", "torch.cuda.torch.cuda.current_blas_handle": "generated/torch.cuda.current_blas_handle.html", "torch.cuda.torch.cuda.current_device": "generated/torch.cuda.current_device.html", "torch.cuda.torch.cuda.current_stream": "generated/torch.cuda.current_stream.html", "torch.cuda.torch.cuda.default_stream": "generated/torch.cuda.default_stream.html", "torch.cuda.torch.cuda.device_count": "generated/torch.cuda.device_count.html", "torch.cuda.torch.cuda.empty_cache": "generated/torch.cuda.empty_cache.html", "torch.cuda.torch.cuda.get_allocator_backend": "generated/torch.cuda.get_allocator_backend.html", "torch.cuda.torch.cuda.get_arch_list": "generated/torch.cuda.get_arch_list.html", "torch.cuda.torch.cuda.get_device_capability": "generated/torch.cuda.get_device_capability.html", "torch.cuda.torch.cuda.get_device_name": "generated/torch.cuda.get_device_name.html", "torch.cuda.torch.cuda.get_device_properties": "generated/torch.cuda.get_device_properties.html", "torch.cuda.torch.cuda.get_gencode_flags": "generated/torch.cuda.get_gencode_flags.html", "torch.cuda.torch.cuda.get_rng_state": "generated/torch.cuda.get_rng_state.html", "torch.cuda.torch.cuda.get_rng_state_all": "generated/torch.cuda.get_rng_state_all.html", "torch.cuda.torch.cuda.get_sync_debug_mode": "generated/torch.cuda.get_sync_debug_mode.html", "torch.cuda.torch.cuda.graph_pool_handle": "generated/torch.cuda.graph_pool_handle.html", "torch.cuda.torch.cuda.init": "generated/torch.cuda.init.html", "torch.cuda.torch.cuda.initial_seed": "generated/torch.cuda.initial_seed.html", "torch.cuda.torch.cuda.ipc_collect": "generated/torch.cuda.ipc_collect.html", "torch.cuda.torch.cuda.is_available": "generated/torch.cuda.is_available.html", "torch.cuda.torch.cuda.is_current_stream_capturing": "generated/torch.cuda.is_current_stream_capturing.html", "torch.cuda.torch.cuda.is_initialized": "generated/torch.cuda.is_initialized.html", "torch.cuda.torch.cuda.jiterator._create_jit_fn": "generated/torch.cuda.jiterator._create_jit_fn.html", "torch.cuda.torch.cuda.jiterator._create_multi_output_jit_fn": "generated/torch.cuda.jiterator._create_multi_output_jit_fn.html", "torch.cuda.torch.cuda.list_gpu_processes": "generated/torch.cuda.list_gpu_processes.html", "torch.cuda.torch.cuda.make_graphed_callables": "generated/torch.cuda.make_graphed_callables.html", "torch.cuda.torch.cuda.manual_seed": "generated/torch.cuda.manual_seed.html", "torch.cuda.torch.cuda.manual_seed_all": "generated/torch.cuda.manual_seed_all.html", "torch.cuda.torch.cuda.max_memory_allocated": "generated/torch.cuda.max_memory_allocated.html", "torch.cuda.torch.cuda.max_memory_cached": "generated/torch.cuda.max_memory_cached.html", "torch.cuda.torch.cuda.max_memory_reserved": "generated/torch.cuda.max_memory_reserved.html", "torch.cuda.torch.cuda.mem_get_info": "generated/torch.cuda.mem_get_info.html", "torch.cuda.torch.cuda.memory_allocated": "generated/torch.cuda.memory_allocated.html", "torch.cuda.torch.cuda.memory_cached": "generated/torch.cuda.memory_cached.html", "torch.cuda.torch.cuda.memory_reserved": "generated/torch.cuda.memory_reserved.html", "torch.cuda.torch.cuda.memory_snapshot": "generated/torch.cuda.memory_snapshot.html", "torch.cuda.torch.cuda.memory_stats": "generated/torch.cuda.memory_stats.html", "torch.cuda.torch.cuda.memory_summary": "generated/torch.cuda.memory_summary.html", "torch.cuda.torch.cuda.memory_usage": "generated/torch.cuda.memory_usage.html", "torch.cuda.torch.cuda.nvtx.mark": "generated/torch.cuda.nvtx.mark.html", "torch.cuda.torch.cuda.nvtx.range_pop": "generated/torch.cuda.nvtx.range_pop.html", "torch.cuda.torch.cuda.nvtx.range_push": "generated/torch.cuda.nvtx.range_push.html", "torch.cuda.torch.cuda.OutOfMemoryError": "generated/torch.cuda.outofmemoryerror.html", "torch.cuda.torch.cuda.power_draw": "generated/torch.cuda.power_draw.html", "torch.cuda.torch.cuda.reset_max_memory_allocated": "generated/torch.cuda.reset_max_memory_allocated.html", "torch.cuda.torch.cuda.reset_max_memory_cached": "generated/torch.cuda.reset_max_memory_cached.html", "torch.cuda.torch.cuda.reset_peak_memory_stats": "generated/torch.cuda.reset_peak_memory_stats.html", "torch.cuda.torch.cuda.seed": "generated/torch.cuda.seed.html", "torch.cuda.torch.cuda.seed_all": "generated/torch.cuda.seed_all.html", "torch.cuda.torch.cuda.set_device": "generated/torch.cuda.set_device.html", "torch.cuda.torch.cuda.set_per_process_memory_fraction": "generated/torch.cuda.set_per_process_memory_fraction.html", "torch.cuda.torch.cuda.set_rng_state": "generated/torch.cuda.set_rng_state.html", "torch.cuda.torch.cuda.set_rng_state_all": "generated/torch.cuda.set_rng_state_all.html", "torch.cuda.torch.cuda.set_stream": "generated/torch.cuda.set_stream.html", "torch.cuda.torch.cuda.set_sync_debug_mode": "generated/torch.cuda.set_sync_debug_mode.html", "torch.cuda.torch.cuda.stream": "generated/torch.cuda.stream.html", "torch.cuda.torch.cuda.synchronize": "generated/torch.cuda.synchronize.html", "torch.cuda.torch.cuda.temperature": "generated/torch.cuda.temperature.html", "torch.cuda.torch.cuda.utilization": "generated/torch.cuda.utilization.html", "torch.cuda.utilization()": "generated/torch.cuda.utilization.html#torch.cuda.utilization", "torch.cummax": "generated/torch.cummax.html", "torch.cummin": "generated/torch.cummin.html", "torch.cumprod": "generated/torch.cumprod.html", "torch.cumsum": "generated/torch.cumsum.html", "torch.cumulative_trapezoid": "generated/torch.cumulative_trapezoid.html", "torch.deg2rad": "generated/torch.deg2rad.html", "torch.dequantize": "generated/torch.dequantize.html", "torch.det": "generated/torch.det.html", "torch.device": "tensor_attributes.html#torch.device", "torch.diag": "generated/torch.diag.html", "torch.diag_embed": "generated/torch.diag_embed.html", "torch.diagflat": "generated/torch.diagflat.html", "torch.diagonal": "generated/torch.diagonal.html", "torch.diagonal_scatter": "generated/torch.diagonal_scatter.html", "torch.diff": "generated/torch.diff.html", "torch.digamma": "generated/torch.digamma.html", "torch.dist": "generated/torch.dist.html", "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook()": "ddp_comm_hooks.html#torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook", "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook()": "ddp_comm_hooks.html#torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook", "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook()": "ddp_comm_hooks.html#torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook", "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper()": "ddp_comm_hooks.html#torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper", "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook()": "ddp_comm_hooks.html#torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook", "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper()": "ddp_comm_hooks.html#torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper", "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook()": "ddp_comm_hooks.html#torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook", "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook()": "ddp_comm_hooks.html#torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook", "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": "ddp_comm_hooks.html#torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState", "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__()": "ddp_comm_hooks.html#torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__", "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__()": "ddp_comm_hooks.html#torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__", "torch.distributed.algorithms.Join": "distributed.algorithms.join.html#torch.distributed.algorithms.Join", "torch.distributed.algorithms.Join.notify_join_context()": "distributed.algorithms.join.html#torch.distributed.algorithms.Join.notify_join_context", "torch.distributed.algorithms.Joinable": "distributed.algorithms.join.html#torch.distributed.algorithms.Joinable", "torch.distributed.algorithms.Joinable.join_device": "distributed.algorithms.join.html#torch.distributed.algorithms.Joinable.join_device", "torch.distributed.algorithms.Joinable.join_hook()": "distributed.algorithms.join.html#torch.distributed.algorithms.Joinable.join_hook", "torch.distributed.algorithms.Joinable.join_process_group": "distributed.algorithms.join.html#torch.distributed.algorithms.Joinable.join_process_group", "torch.distributed.algorithms.JoinHook": "distributed.algorithms.join.html#torch.distributed.algorithms.JoinHook", "torch.distributed.algorithms.JoinHook.main_hook()": "distributed.algorithms.join.html#torch.distributed.algorithms.JoinHook.main_hook", "torch.distributed.algorithms.JoinHook.post_hook()": "distributed.algorithms.join.html#torch.distributed.algorithms.JoinHook.post_hook", "torch.distributed.all_gather()": "distributed.html#torch.distributed.all_gather", "torch.distributed.all_gather_into_tensor()": "distributed.html#torch.distributed.all_gather_into_tensor", "torch.distributed.all_gather_multigpu()": "distributed.html#torch.distributed.all_gather_multigpu", "torch.distributed.all_gather_object()": "distributed.html#torch.distributed.all_gather_object", "torch.distributed.all_reduce()": "distributed.html#torch.distributed.all_reduce", "torch.distributed.all_reduce_multigpu()": "distributed.html#torch.distributed.all_reduce_multigpu", "torch.distributed.all_to_all()": "distributed.html#torch.distributed.all_to_all", "torch.distributed.all_to_all_single()": "distributed.html#torch.distributed.all_to_all_single", "torch.distributed.autograd.backward()": "rpc.html#torch.distributed.autograd.backward", "torch.distributed.autograd.context": "rpc.html#torch.distributed.autograd.context", "torch.distributed.autograd.get_gradients()": "rpc.html#torch.distributed.autograd.get_gradients", "torch.distributed.Backend": "distributed.html#torch.distributed.Backend", "torch.distributed.Backend.register_backend()": "distributed.html#torch.distributed.Backend.register_backend", "torch.distributed.barrier()": "distributed.html#torch.distributed.barrier", "torch.distributed.batch_isend_irecv()": "distributed.html#torch.distributed.batch_isend_irecv", "torch.distributed.broadcast()": "distributed.html#torch.distributed.broadcast", "torch.distributed.broadcast_multigpu()": "distributed.html#torch.distributed.broadcast_multigpu", "torch.distributed.broadcast_object_list()": "distributed.html#torch.distributed.broadcast_object_list", "torch.distributed.checkpoint.DefaultLoadPlanner": "distributed.checkpoint.html#torch.distributed.checkpoint.DefaultLoadPlanner", "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor()": "distributed.checkpoint.html#torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor", "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor()": "distributed.checkpoint.html#torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor", "torch.distributed.checkpoint.DefaultSavePlanner": "distributed.checkpoint.html#torch.distributed.checkpoint.DefaultSavePlanner", "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object()": "distributed.checkpoint.html#torch.distributed.checkpoint.DefaultSavePlanner.lookup_object", "torch.distributed.checkpoint.DefaultSavePlanner.transform_object()": "distributed.checkpoint.html#torch.distributed.checkpoint.DefaultSavePlanner.transform_object", "torch.distributed.checkpoint.FileSystemReader": "distributed.checkpoint.html#torch.distributed.checkpoint.FileSystemReader", "torch.distributed.checkpoint.FileSystemWriter": "distributed.checkpoint.html#torch.distributed.checkpoint.FileSystemWriter", "torch.distributed.checkpoint.load_state_dict()": "distributed.checkpoint.html#torch.distributed.checkpoint.load_state_dict", "torch.distributed.checkpoint.LoadPlan": "distributed.checkpoint.html#torch.distributed.checkpoint.LoadPlan", "torch.distributed.checkpoint.LoadPlanner": "distributed.checkpoint.html#torch.distributed.checkpoint.LoadPlanner", "torch.distributed.checkpoint.LoadPlanner.commit_tensor()": "distributed.checkpoint.html#torch.distributed.checkpoint.LoadPlanner.commit_tensor", "torch.distributed.checkpoint.LoadPlanner.create_global_plan()": "distributed.checkpoint.html#torch.distributed.checkpoint.LoadPlanner.create_global_plan", "torch.distributed.checkpoint.LoadPlanner.create_local_plan()": "distributed.checkpoint.html#torch.distributed.checkpoint.LoadPlanner.create_local_plan", "torch.distributed.checkpoint.LoadPlanner.finish_plan()": "distributed.checkpoint.html#torch.distributed.checkpoint.LoadPlanner.finish_plan", "torch.distributed.checkpoint.LoadPlanner.load_bytes()": "distributed.checkpoint.html#torch.distributed.checkpoint.LoadPlanner.load_bytes", "torch.distributed.checkpoint.LoadPlanner.resolve_tensor()": "distributed.checkpoint.html#torch.distributed.checkpoint.LoadPlanner.resolve_tensor", "torch.distributed.checkpoint.LoadPlanner.set_up_planner()": "distributed.checkpoint.html#torch.distributed.checkpoint.LoadPlanner.set_up_planner", "torch.distributed.checkpoint.ReadItem": "distributed.checkpoint.html#torch.distributed.checkpoint.ReadItem", "torch.distributed.checkpoint.save_state_dict()": "distributed.checkpoint.html#torch.distributed.checkpoint.save_state_dict", "torch.distributed.checkpoint.SavePlan": "distributed.checkpoint.html#torch.distributed.checkpoint.SavePlan", "torch.distributed.checkpoint.SavePlanner": "distributed.checkpoint.html#torch.distributed.checkpoint.SavePlanner", "torch.distributed.checkpoint.SavePlanner.create_global_plan()": "distributed.checkpoint.html#torch.distributed.checkpoint.SavePlanner.create_global_plan", "torch.distributed.checkpoint.SavePlanner.create_local_plan()": "distributed.checkpoint.html#torch.distributed.checkpoint.SavePlanner.create_local_plan", "torch.distributed.checkpoint.SavePlanner.finish_plan()": "distributed.checkpoint.html#torch.distributed.checkpoint.SavePlanner.finish_plan", "torch.distributed.checkpoint.SavePlanner.resolve_data()": "distributed.checkpoint.html#torch.distributed.checkpoint.SavePlanner.resolve_data", "torch.distributed.checkpoint.SavePlanner.set_up_planner()": "distributed.checkpoint.html#torch.distributed.checkpoint.SavePlanner.set_up_planner", "torch.distributed.checkpoint.StorageReader": "distributed.checkpoint.html#torch.distributed.checkpoint.StorageReader", "torch.distributed.checkpoint.StorageReader.prepare_global_plan()": "distributed.checkpoint.html#torch.distributed.checkpoint.StorageReader.prepare_global_plan", "torch.distributed.checkpoint.StorageReader.prepare_local_plan()": "distributed.checkpoint.html#torch.distributed.checkpoint.StorageReader.prepare_local_plan", "torch.distributed.checkpoint.StorageReader.read_data()": "distributed.checkpoint.html#torch.distributed.checkpoint.StorageReader.read_data", "torch.distributed.checkpoint.StorageReader.read_metadata()": "distributed.checkpoint.html#torch.distributed.checkpoint.StorageReader.read_metadata", "torch.distributed.checkpoint.StorageReader.set_up_storage_reader()": "distributed.checkpoint.html#torch.distributed.checkpoint.StorageReader.set_up_storage_reader", "torch.distributed.checkpoint.StorageWriter": "distributed.checkpoint.html#torch.distributed.checkpoint.StorageWriter", "torch.distributed.checkpoint.StorageWriter.finish()": "distributed.checkpoint.html#torch.distributed.checkpoint.StorageWriter.finish", "torch.distributed.checkpoint.StorageWriter.prepare_global_plan()": "distributed.checkpoint.html#torch.distributed.checkpoint.StorageWriter.prepare_global_plan", "torch.distributed.checkpoint.StorageWriter.prepare_local_plan()": "distributed.checkpoint.html#torch.distributed.checkpoint.StorageWriter.prepare_local_plan", "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer()": "distributed.checkpoint.html#torch.distributed.checkpoint.StorageWriter.set_up_storage_writer", "torch.distributed.checkpoint.StorageWriter.write_data()": "distributed.checkpoint.html#torch.distributed.checkpoint.StorageWriter.write_data", "torch.distributed.checkpoint.WriteItem": "distributed.checkpoint.html#torch.distributed.checkpoint.WriteItem", "torch.distributed.DistBackendError": "distributed.html#torch.distributed.DistBackendError", "torch.distributed.elastic.agent.server.api.RunResult": "elastic/agent.html#torch.distributed.elastic.agent.server.api.RunResult", "torch.distributed.elastic.agent.server.ElasticAgent": "elastic/agent.html#torch.distributed.elastic.agent.server.ElasticAgent", "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group()": "elastic/agent.html#torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group", "torch.distributed.elastic.agent.server.ElasticAgent.run()": "elastic/agent.html#torch.distributed.elastic.agent.server.ElasticAgent.run", "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent": "elastic/agent.html#torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent", "torch.distributed.elastic.agent.server.SimpleElasticAgent": "elastic/agent.html#torch.distributed.elastic.agent.server.SimpleElasticAgent", "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks()": "elastic/agent.html#torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks", "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier()": "elastic/agent.html#torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier", "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers()": "elastic/agent.html#torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers", "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers()": "elastic/agent.html#torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers", "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous()": "elastic/agent.html#torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous", "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers()": "elastic/agent.html#torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers", "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown()": "elastic/agent.html#torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown", "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers()": "elastic/agent.html#torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers", "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers()": "elastic/agent.html#torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers", "torch.distributed.elastic.agent.server.Worker": "elastic/agent.html#torch.distributed.elastic.agent.server.Worker", "torch.distributed.elastic.agent.server.WorkerGroup": "elastic/agent.html#torch.distributed.elastic.agent.server.WorkerGroup", "torch.distributed.elastic.agent.server.WorkerSpec": "elastic/agent.html#torch.distributed.elastic.agent.server.WorkerSpec", "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name()": "elastic/agent.html#torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name", "torch.distributed.elastic.agent.server.WorkerState": "elastic/agent.html#torch.distributed.elastic.agent.server.WorkerState", "torch.distributed.elastic.agent.server.WorkerState.is_running()": "elastic/agent.html#torch.distributed.elastic.agent.server.WorkerState.is_running", "torch.distributed.elastic.events.api.Event": "elastic/events.html#torch.distributed.elastic.events.api.Event", "torch.distributed.elastic.events.api.EventMetadataValue": "elastic/events.html#torch.distributed.elastic.events.api.EventMetadataValue", "torch.distributed.elastic.events.api.EventSource": "elastic/events.html#torch.distributed.elastic.events.api.EventSource", "torch.distributed.elastic.events.get_logging_handler()": "elastic/events.html#torch.distributed.elastic.events.get_logging_handler", "torch.distributed.elastic.events.record()": "elastic/events.html#torch.distributed.elastic.events.record", "torch.distributed.elastic.metrics.api.ConsoleMetricHandler": "elastic/metrics.html#torch.distributed.elastic.metrics.api.ConsoleMetricHandler", "torch.distributed.elastic.metrics.api.MetricHandler": "elastic/metrics.html#torch.distributed.elastic.metrics.api.MetricHandler", "torch.distributed.elastic.metrics.api.NullMetricHandler": "elastic/metrics.html#torch.distributed.elastic.metrics.api.NullMetricHandler", "torch.distributed.elastic.metrics.configure()": "elastic/metrics.html#torch.distributed.elastic.metrics.configure", "torch.distributed.elastic.metrics.prof()": "elastic/metrics.html#torch.distributed.elastic.metrics.prof", "torch.distributed.elastic.metrics.put_metric()": "elastic/metrics.html#torch.distributed.elastic.metrics.put_metric", "torch.distributed.elastic.multiprocessing.api.MultiprocessContext": "elastic/multiprocessing.html#torch.distributed.elastic.multiprocessing.api.MultiprocessContext", "torch.distributed.elastic.multiprocessing.api.PContext": "elastic/multiprocessing.html#torch.distributed.elastic.multiprocessing.api.PContext", "torch.distributed.elastic.multiprocessing.api.RunProcsResult": "elastic/multiprocessing.html#torch.distributed.elastic.multiprocessing.api.RunProcsResult", "torch.distributed.elastic.multiprocessing.api.SubprocessContext": "elastic/multiprocessing.html#torch.distributed.elastic.multiprocessing.api.SubprocessContext", "torch.distributed.elastic.multiprocessing.errors.ChildFailedError": "elastic/errors.html#torch.distributed.elastic.multiprocessing.errors.ChildFailedError", "torch.distributed.elastic.multiprocessing.errors.ErrorHandler": "elastic/errors.html#torch.distributed.elastic.multiprocessing.errors.ErrorHandler", "torch.distributed.elastic.multiprocessing.errors.ProcessFailure": "elastic/errors.html#torch.distributed.elastic.multiprocessing.errors.ProcessFailure", "torch.distributed.elastic.multiprocessing.errors.record()": "elastic/errors.html#torch.distributed.elastic.multiprocessing.errors.record", "torch.distributed.elastic.multiprocessing.start_processes()": "elastic/multiprocessing.html#torch.distributed.elastic.multiprocessing.start_processes", "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend", "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state", "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name", "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state", "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend", "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler", "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler", "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend", "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend", "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state", "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name", "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state", "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout", "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close", "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat", "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join", "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call", "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler", "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend", "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend", "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state", "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name", "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state", "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.etcd_server.EtcdServer", "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.etcd_store.EtcdStore", "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add", "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check", "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get", "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set", "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait", "torch.distributed.elastic.rendezvous.RendezvousClosedError": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousClosedError", "torch.distributed.elastic.rendezvous.RendezvousConnectionError": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousConnectionError", "torch.distributed.elastic.rendezvous.RendezvousError": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousError", "torch.distributed.elastic.rendezvous.RendezvousHandler": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousHandler", "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend", "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id", "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed", "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous", "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting", "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed", "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown", "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry", "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler", "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register", "torch.distributed.elastic.rendezvous.RendezvousParameters": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousParameters", "torch.distributed.elastic.rendezvous.RendezvousParameters.get()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousParameters.get", "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool", "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int()": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int", "torch.distributed.elastic.rendezvous.RendezvousStateError": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousStateError", "torch.distributed.elastic.rendezvous.RendezvousTimeoutError": "elastic/rendezvous.html#torch.distributed.elastic.rendezvous.RendezvousTimeoutError", "torch.distributed.elastic.timer.configure()": "elastic/timer.html#torch.distributed.elastic.timer.configure", "torch.distributed.elastic.timer.expires()": "elastic/timer.html#torch.distributed.elastic.timer.expires", "torch.distributed.elastic.timer.FileTimerClient": "elastic/timer.html#torch.distributed.elastic.timer.FileTimerClient", "torch.distributed.elastic.timer.FileTimerServer": "elastic/timer.html#torch.distributed.elastic.timer.FileTimerServer", "torch.distributed.elastic.timer.LocalTimerClient": "elastic/timer.html#torch.distributed.elastic.timer.LocalTimerClient", "torch.distributed.elastic.timer.LocalTimerServer": "elastic/timer.html#torch.distributed.elastic.timer.LocalTimerServer", "torch.distributed.elastic.timer.TimerClient": "elastic/timer.html#torch.distributed.elastic.timer.TimerClient", "torch.distributed.elastic.timer.TimerClient.acquire()": "elastic/timer.html#torch.distributed.elastic.timer.TimerClient.acquire", "torch.distributed.elastic.timer.TimerClient.release()": "elastic/timer.html#torch.distributed.elastic.timer.TimerClient.release", "torch.distributed.elastic.timer.TimerRequest": "elastic/timer.html#torch.distributed.elastic.timer.TimerRequest", "torch.distributed.elastic.timer.TimerServer": "elastic/timer.html#torch.distributed.elastic.timer.TimerServer", "torch.distributed.elastic.timer.TimerServer.clear_timers()": "elastic/timer.html#torch.distributed.elastic.timer.TimerServer.clear_timers", "torch.distributed.elastic.timer.TimerServer.get_expired_timers()": "elastic/timer.html#torch.distributed.elastic.timer.TimerServer.get_expired_timers", "torch.distributed.elastic.timer.TimerServer.register_timers()": "elastic/timer.html#torch.distributed.elastic.timer.TimerServer.register_timers", "torch.distributed.FileStore": "distributed.html#torch.distributed.FileStore", "torch.distributed.fsdp.BackwardPrefetch": "fsdp.html#torch.distributed.fsdp.BackwardPrefetch", "torch.distributed.fsdp.CPUOffload": "fsdp.html#torch.distributed.fsdp.CPUOffload", "torch.distributed.fsdp.FullOptimStateDictConfig": "fsdp.html#torch.distributed.fsdp.FullOptimStateDictConfig", "torch.distributed.fsdp.FullStateDictConfig": "fsdp.html#torch.distributed.fsdp.FullStateDictConfig", "torch.distributed.fsdp.FullyShardedDataParallel": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel", "torch.distributed.fsdp.FullyShardedDataParallel.apply()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.apply", "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_", "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict", "torch.distributed.fsdp.FullyShardedDataParallel.forward()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.forward", "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules", "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict", "torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type", "torch.distributed.fsdp.FullyShardedDataParallel.module": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.module", "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.named_buffers", "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.named_parameters", "torch.distributed.fsdp.FullyShardedDataParallel.no_sync()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.no_sync", "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict", "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load", "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook", "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict", "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict", "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type", "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict", "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict", "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type", "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params()": "fsdp.html#torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params", "torch.distributed.fsdp.LocalOptimStateDictConfig": "fsdp.html#torch.distributed.fsdp.LocalOptimStateDictConfig", "torch.distributed.fsdp.LocalStateDictConfig": "fsdp.html#torch.distributed.fsdp.LocalStateDictConfig", "torch.distributed.fsdp.MixedPrecision": "fsdp.html#torch.distributed.fsdp.MixedPrecision", "torch.distributed.fsdp.OptimStateDictConfig": "fsdp.html#torch.distributed.fsdp.OptimStateDictConfig", "torch.distributed.fsdp.ShardedOptimStateDictConfig": "fsdp.html#torch.distributed.fsdp.ShardedOptimStateDictConfig", "torch.distributed.fsdp.ShardedStateDictConfig": "fsdp.html#torch.distributed.fsdp.ShardedStateDictConfig", "torch.distributed.fsdp.ShardingStrategy": "fsdp.html#torch.distributed.fsdp.ShardingStrategy", "torch.distributed.fsdp.StateDictConfig": "fsdp.html#torch.distributed.fsdp.StateDictConfig", "torch.distributed.fsdp.StateDictSettings": "fsdp.html#torch.distributed.fsdp.StateDictSettings", "torch.distributed.gather()": "distributed.html#torch.distributed.gather", "torch.distributed.gather_object()": "distributed.html#torch.distributed.gather_object", "torch.distributed.get_backend()": "distributed.html#torch.distributed.get_backend", "torch.distributed.get_global_rank()": "distributed.html#torch.distributed.get_global_rank", "torch.distributed.get_group_rank()": "distributed.html#torch.distributed.get_group_rank", "torch.distributed.get_process_group_ranks()": "distributed.html#torch.distributed.get_process_group_ranks", "torch.distributed.get_rank()": "distributed.html#torch.distributed.get_rank", "torch.distributed.get_world_size()": "distributed.html#torch.distributed.get_world_size", "torch.distributed.GradBucket": "ddp_comm_hooks.html#torch.distributed.GradBucket", "torch.distributed.GradBucket.buffer()": "ddp_comm_hooks.html#torch.distributed.GradBucket.buffer", "torch.distributed.GradBucket.gradients()": "ddp_comm_hooks.html#torch.distributed.GradBucket.gradients", "torch.distributed.GradBucket.index()": "ddp_comm_hooks.html#torch.distributed.GradBucket.index", "torch.distributed.GradBucket.is_last()": "ddp_comm_hooks.html#torch.distributed.GradBucket.is_last", "torch.distributed.GradBucket.parameters()": "ddp_comm_hooks.html#torch.distributed.GradBucket.parameters", "torch.distributed.GradBucket.set_buffer()": "ddp_comm_hooks.html#torch.distributed.GradBucket.set_buffer", "torch.distributed.HashStore": "distributed.html#torch.distributed.HashStore", "torch.distributed.init_process_group()": "distributed.html#torch.distributed.init_process_group", "torch.distributed.irecv()": "distributed.html#torch.distributed.irecv", "torch.distributed.is_available()": "distributed.html#torch.distributed.is_available", "torch.distributed.is_gloo_available()": "distributed.html#torch.distributed.is_gloo_available", "torch.distributed.is_initialized()": "distributed.html#torch.distributed.is_initialized", "torch.distributed.is_mpi_available()": "distributed.html#torch.distributed.is_mpi_available", "torch.distributed.is_nccl_available()": "distributed.html#torch.distributed.is_nccl_available", "torch.distributed.is_torchelastic_launched()": "distributed.html#torch.distributed.is_torchelastic_launched", "torch.distributed.isend()": "distributed.html#torch.distributed.isend", "torch.distributed.monitored_barrier()": "distributed.html#torch.distributed.monitored_barrier", "torch.distributed.new_group()": "distributed.html#torch.distributed.new_group", "torch.distributed.nn.api.remote_module.RemoteModule": "rpc.html#torch.distributed.nn.api.remote_module.RemoteModule", "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref()": "rpc.html#torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref", "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters()": "rpc.html#torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters", "torch.distributed.optim.DistributedOptimizer": "distributed.optim.html#torch.distributed.optim.DistributedOptimizer", "torch.distributed.optim.DistributedOptimizer.step()": "distributed.optim.html#torch.distributed.optim.DistributedOptimizer.step", "torch.distributed.optim.PostLocalSGDOptimizer": "distributed.optim.html#torch.distributed.optim.PostLocalSGDOptimizer", "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict()": "distributed.optim.html#torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict", "torch.distributed.optim.PostLocalSGDOptimizer.state_dict()": "distributed.optim.html#torch.distributed.optim.PostLocalSGDOptimizer.state_dict", "torch.distributed.optim.PostLocalSGDOptimizer.step()": "distributed.optim.html#torch.distributed.optim.PostLocalSGDOptimizer.step", "torch.distributed.optim.ZeroRedundancyOptimizer": "distributed.optim.html#torch.distributed.optim.ZeroRedundancyOptimizer", "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group()": "distributed.optim.html#torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group", "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict()": "distributed.optim.html#torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict", "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook()": "distributed.optim.html#torch.distributed.optim.ZeroRedundancyOptimizer.join_hook", "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict()": "distributed.optim.html#torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict", "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict()": "distributed.optim.html#torch.distributed.optim.ZeroRedundancyOptimizer.state_dict", "torch.distributed.optim.ZeroRedundancyOptimizer.step()": "distributed.optim.html#torch.distributed.optim.ZeroRedundancyOptimizer.step", "torch.distributed.P2POp": "distributed.html#torch.distributed.P2POp", "torch.distributed.pipeline.sync.Pipe": "pipeline.html#torch.distributed.pipeline.sync.Pipe", "torch.distributed.pipeline.sync.Pipe.forward()": "pipeline.html#torch.distributed.pipeline.sync.Pipe.forward", "torch.distributed.pipeline.sync.skip.skippable.pop": "pipeline.html#torch.distributed.pipeline.sync.skip.skippable.pop", "torch.distributed.pipeline.sync.skip.skippable.skippable()": "pipeline.html#torch.distributed.pipeline.sync.skip.skippable.skippable", "torch.distributed.pipeline.sync.skip.skippable.stash": "pipeline.html#torch.distributed.pipeline.sync.skip.skippable.stash", "torch.distributed.pipeline.sync.skip.skippable.verify_skippables()": "pipeline.html#torch.distributed.pipeline.sync.skip.skippable.verify_skippables", "torch.distributed.PrefixStore": "distributed.html#torch.distributed.PrefixStore", "torch.distributed.recv()": "distributed.html#torch.distributed.recv", "torch.distributed.reduce()": "distributed.html#torch.distributed.reduce", "torch.distributed.reduce_multigpu()": "distributed.html#torch.distributed.reduce_multigpu", "torch.distributed.reduce_op": "distributed.html#torch.distributed.reduce_op", "torch.distributed.reduce_scatter()": "distributed.html#torch.distributed.reduce_scatter", "torch.distributed.reduce_scatter_multigpu()": "distributed.html#torch.distributed.reduce_scatter_multigpu", "torch.distributed.reduce_scatter_tensor()": "distributed.html#torch.distributed.reduce_scatter_tensor", "torch.distributed.ReduceOp": "distributed.html#torch.distributed.ReduceOp", "torch.distributed.rpc.BackendType": "rpc.html#torch.distributed.rpc.BackendType", "torch.distributed.rpc.functions.async_execution()": "rpc.html#torch.distributed.rpc.functions.async_execution", "torch.distributed.rpc.get_worker_info()": "rpc.html#torch.distributed.rpc.get_worker_info", "torch.distributed.rpc.init_rpc()": "rpc.html#torch.distributed.rpc.init_rpc", "torch.distributed.rpc.PyRRef": "rpc.html#torch.distributed.rpc.PyRRef", "torch.distributed.rpc.PyRRef.backward()": "rpc.html#torch.distributed.rpc.PyRRef.backward", "torch.distributed.rpc.PyRRef.confirmed_by_owner()": "rpc.html#torch.distributed.rpc.PyRRef.confirmed_by_owner", "torch.distributed.rpc.PyRRef.is_owner()": "rpc.html#torch.distributed.rpc.PyRRef.is_owner", "torch.distributed.rpc.PyRRef.local_value()": "rpc.html#torch.distributed.rpc.PyRRef.local_value", "torch.distributed.rpc.PyRRef.owner()": "rpc.html#torch.distributed.rpc.PyRRef.owner", "torch.distributed.rpc.PyRRef.owner_name()": "rpc.html#torch.distributed.rpc.PyRRef.owner_name", "torch.distributed.rpc.PyRRef.remote()": "rpc.html#torch.distributed.rpc.PyRRef.remote", "torch.distributed.rpc.PyRRef.rpc_async()": "rpc.html#torch.distributed.rpc.PyRRef.rpc_async", "torch.distributed.rpc.PyRRef.rpc_sync()": "rpc.html#torch.distributed.rpc.PyRRef.rpc_sync", "torch.distributed.rpc.PyRRef.to_here()": "rpc.html#torch.distributed.rpc.PyRRef.to_here", "torch.distributed.rpc.remote()": "rpc.html#torch.distributed.rpc.remote", "torch.distributed.rpc.rpc_async()": "rpc.html#torch.distributed.rpc.rpc_async", "torch.distributed.rpc.rpc_sync()": "rpc.html#torch.distributed.rpc.rpc_sync", "torch.distributed.rpc.RpcBackendOptions": "rpc.html#torch.distributed.rpc.RpcBackendOptions", "torch.distributed.rpc.RpcBackendOptions.init_method": "rpc.html#torch.distributed.rpc.RpcBackendOptions.init_method", "torch.distributed.rpc.RpcBackendOptions.rpc_timeout": "rpc.html#torch.distributed.rpc.RpcBackendOptions.rpc_timeout", "torch.distributed.rpc.shutdown()": "rpc.html#torch.distributed.rpc.shutdown", "torch.distributed.rpc.TensorPipeRpcBackendOptions": "rpc.html#torch.distributed.rpc.TensorPipeRpcBackendOptions", "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps": "rpc.html#torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps", "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices": "rpc.html#torch.distributed.rpc.TensorPipeRpcBackendOptions.devices", "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method": "rpc.html#torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method", "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads": "rpc.html#torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads", "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout": "rpc.html#torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout", "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map()": "rpc.html#torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map", "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices()": "rpc.html#torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices", "torch.distributed.rpc.WorkerInfo": "rpc.html#torch.distributed.rpc.WorkerInfo", "torch.distributed.rpc.WorkerInfo.id": "rpc.html#torch.distributed.rpc.WorkerInfo.id", "torch.distributed.rpc.WorkerInfo.name": "rpc.html#torch.distributed.rpc.WorkerInfo.name", "torch.distributed.scatter()": "distributed.html#torch.distributed.scatter", "torch.distributed.scatter_object_list()": "distributed.html#torch.distributed.scatter_object_list", "torch.distributed.send()": "distributed.html#torch.distributed.send", "torch.distributed.Store": "distributed.html#torch.distributed.Store", "torch.distributed.Store.add()": "distributed.html#torch.distributed.Store.add", "torch.distributed.Store.compare_set()": "distributed.html#torch.distributed.Store.compare_set", "torch.distributed.Store.delete_key()": "distributed.html#torch.distributed.Store.delete_key", "torch.distributed.Store.get()": "distributed.html#torch.distributed.Store.get", "torch.distributed.Store.num_keys()": "distributed.html#torch.distributed.Store.num_keys", "torch.distributed.Store.set()": "distributed.html#torch.distributed.Store.set", "torch.distributed.Store.set_timeout()": "distributed.html#torch.distributed.Store.set_timeout", "torch.distributed.Store.wait()": "distributed.html#torch.distributed.Store.wait", "torch.distributed.TCPStore": "distributed.html#torch.distributed.TCPStore", "torch.distributed.tensor.parallel.ddp.pre_dp_module_transform()": "distributed.tensor.parallel.html#torch.distributed.tensor.parallel.ddp.pre_dp_module_transform", "torch.distributed.tensor.parallel.fsdp.enable_2d_with_fsdp()": "distributed.tensor.parallel.html#torch.distributed.tensor.parallel.fsdp.enable_2d_with_fsdp", "torch.distributed.tensor.parallel.parallelize_module()": "distributed.tensor.parallel.html#torch.distributed.tensor.parallel.parallelize_module", "torch.distributed.tensor.parallel.style.ColwiseParallel": "distributed.tensor.parallel.html#torch.distributed.tensor.parallel.style.ColwiseParallel", "torch.distributed.tensor.parallel.style.make_input_replicate_1d()": "distributed.tensor.parallel.html#torch.distributed.tensor.parallel.style.make_input_replicate_1d", "torch.distributed.tensor.parallel.style.make_input_reshard_replicate()": "distributed.tensor.parallel.html#torch.distributed.tensor.parallel.style.make_input_reshard_replicate", "torch.distributed.tensor.parallel.style.make_input_shard_1d()": "distributed.tensor.parallel.html#torch.distributed.tensor.parallel.style.make_input_shard_1d", "torch.distributed.tensor.parallel.style.make_input_shard_1d_last_dim()": "distributed.tensor.parallel.html#torch.distributed.tensor.parallel.style.make_input_shard_1d_last_dim", "torch.distributed.tensor.parallel.style.make_output_replicate_1d()": "distributed.tensor.parallel.html#torch.distributed.tensor.parallel.style.make_output_replicate_1d", "torch.distributed.tensor.parallel.style.make_output_reshard_tensor()": "distributed.tensor.parallel.html#torch.distributed.tensor.parallel.style.make_output_reshard_tensor", "torch.distributed.tensor.parallel.style.make_output_shard_1d()": "distributed.tensor.parallel.html#torch.distributed.tensor.parallel.style.make_output_shard_1d", "torch.distributed.tensor.parallel.style.make_output_tensor()": "distributed.tensor.parallel.html#torch.distributed.tensor.parallel.style.make_output_tensor", "torch.distributed.tensor.parallel.style.PairwiseParallel": "distributed.tensor.parallel.html#torch.distributed.tensor.parallel.style.PairwiseParallel", "torch.distributed.tensor.parallel.style.RowwiseParallel": "distributed.tensor.parallel.html#torch.distributed.tensor.parallel.style.RowwiseParallel", "torch.distributed.tensor.parallel.style.SequenceParallel": "distributed.tensor.parallel.html#torch.distributed.tensor.parallel.style.SequenceParallel", "torch.distributions.bernoulli.Bernoulli": "distributions.html#torch.distributions.bernoulli.Bernoulli", "torch.distributions.bernoulli.Bernoulli.arg_constraints": "distributions.html#torch.distributions.bernoulli.Bernoulli.arg_constraints", "torch.distributions.bernoulli.Bernoulli.entropy()": "distributions.html#torch.distributions.bernoulli.Bernoulli.entropy", "torch.distributions.bernoulli.Bernoulli.enumerate_support()": "distributions.html#torch.distributions.bernoulli.Bernoulli.enumerate_support", "torch.distributions.bernoulli.Bernoulli.expand()": "distributions.html#torch.distributions.bernoulli.Bernoulli.expand", "torch.distributions.bernoulli.Bernoulli.has_enumerate_support": "distributions.html#torch.distributions.bernoulli.Bernoulli.has_enumerate_support", "torch.distributions.bernoulli.Bernoulli.log_prob()": "distributions.html#torch.distributions.bernoulli.Bernoulli.log_prob", "torch.distributions.bernoulli.Bernoulli.logits": "distributions.html#torch.distributions.bernoulli.Bernoulli.logits", "torch.distributions.bernoulli.Bernoulli.mean": "distributions.html#torch.distributions.bernoulli.Bernoulli.mean", "torch.distributions.bernoulli.Bernoulli.mode": "distributions.html#torch.distributions.bernoulli.Bernoulli.mode", "torch.distributions.bernoulli.Bernoulli.param_shape": "distributions.html#torch.distributions.bernoulli.Bernoulli.param_shape", "torch.distributions.bernoulli.Bernoulli.probs": "distributions.html#torch.distributions.bernoulli.Bernoulli.probs", "torch.distributions.bernoulli.Bernoulli.sample()": "distributions.html#torch.distributions.bernoulli.Bernoulli.sample", "torch.distributions.bernoulli.Bernoulli.support": "distributions.html#torch.distributions.bernoulli.Bernoulli.support", "torch.distributions.bernoulli.Bernoulli.variance": "distributions.html#torch.distributions.bernoulli.Bernoulli.variance", "torch.distributions.beta.Beta": "distributions.html#torch.distributions.beta.Beta", "torch.distributions.beta.Beta.arg_constraints": "distributions.html#torch.distributions.beta.Beta.arg_constraints", "torch.distributions.beta.Beta.concentration0": "distributions.html#torch.distributions.beta.Beta.concentration0", "torch.distributions.beta.Beta.concentration1": "distributions.html#torch.distributions.beta.Beta.concentration1", "torch.distributions.beta.Beta.entropy()": "distributions.html#torch.distributions.beta.Beta.entropy", "torch.distributions.beta.Beta.expand()": "distributions.html#torch.distributions.beta.Beta.expand", "torch.distributions.beta.Beta.has_rsample": "distributions.html#torch.distributions.beta.Beta.has_rsample", "torch.distributions.beta.Beta.log_prob()": "distributions.html#torch.distributions.beta.Beta.log_prob", "torch.distributions.beta.Beta.mean": "distributions.html#torch.distributions.beta.Beta.mean", "torch.distributions.beta.Beta.mode": "distributions.html#torch.distributions.beta.Beta.mode", "torch.distributions.beta.Beta.rsample()": "distributions.html#torch.distributions.beta.Beta.rsample", "torch.distributions.beta.Beta.support": "distributions.html#torch.distributions.beta.Beta.support", "torch.distributions.beta.Beta.variance": "distributions.html#torch.distributions.beta.Beta.variance", "torch.distributions.binomial.Binomial": "distributions.html#torch.distributions.binomial.Binomial", "torch.distributions.binomial.Binomial.arg_constraints": "distributions.html#torch.distributions.binomial.Binomial.arg_constraints", "torch.distributions.binomial.Binomial.entropy()": "distributions.html#torch.distributions.binomial.Binomial.entropy", "torch.distributions.binomial.Binomial.enumerate_support()": "distributions.html#torch.distributions.binomial.Binomial.enumerate_support", "torch.distributions.binomial.Binomial.expand()": "distributions.html#torch.distributions.binomial.Binomial.expand", "torch.distributions.binomial.Binomial.has_enumerate_support": "distributions.html#torch.distributions.binomial.Binomial.has_enumerate_support", "torch.distributions.binomial.Binomial.log_prob()": "distributions.html#torch.distributions.binomial.Binomial.log_prob", "torch.distributions.binomial.Binomial.logits": "distributions.html#torch.distributions.binomial.Binomial.logits", "torch.distributions.binomial.Binomial.mean": "distributions.html#torch.distributions.binomial.Binomial.mean", "torch.distributions.binomial.Binomial.mode": "distributions.html#torch.distributions.binomial.Binomial.mode", "torch.distributions.binomial.Binomial.param_shape": "distributions.html#torch.distributions.binomial.Binomial.param_shape", "torch.distributions.binomial.Binomial.probs": "distributions.html#torch.distributions.binomial.Binomial.probs", "torch.distributions.binomial.Binomial.sample()": "distributions.html#torch.distributions.binomial.Binomial.sample", "torch.distributions.binomial.Binomial.support": "distributions.html#torch.distributions.binomial.Binomial.support", "torch.distributions.binomial.Binomial.variance": "distributions.html#torch.distributions.binomial.Binomial.variance", "torch.distributions.categorical.Categorical": "distributions.html#torch.distributions.categorical.Categorical", "torch.distributions.categorical.Categorical.arg_constraints": "distributions.html#torch.distributions.categorical.Categorical.arg_constraints", "torch.distributions.categorical.Categorical.entropy()": "distributions.html#torch.distributions.categorical.Categorical.entropy", "torch.distributions.categorical.Categorical.enumerate_support()": "distributions.html#torch.distributions.categorical.Categorical.enumerate_support", "torch.distributions.categorical.Categorical.expand()": "distributions.html#torch.distributions.categorical.Categorical.expand", "torch.distributions.categorical.Categorical.has_enumerate_support": "distributions.html#torch.distributions.categorical.Categorical.has_enumerate_support", "torch.distributions.categorical.Categorical.log_prob()": "distributions.html#torch.distributions.categorical.Categorical.log_prob", "torch.distributions.categorical.Categorical.logits": "distributions.html#torch.distributions.categorical.Categorical.logits", "torch.distributions.categorical.Categorical.mean": "distributions.html#torch.distributions.categorical.Categorical.mean", "torch.distributions.categorical.Categorical.mode": "distributions.html#torch.distributions.categorical.Categorical.mode", "torch.distributions.categorical.Categorical.param_shape": "distributions.html#torch.distributions.categorical.Categorical.param_shape", "torch.distributions.categorical.Categorical.probs": "distributions.html#torch.distributions.categorical.Categorical.probs", "torch.distributions.categorical.Categorical.sample()": "distributions.html#torch.distributions.categorical.Categorical.sample", "torch.distributions.categorical.Categorical.support": "distributions.html#torch.distributions.categorical.Categorical.support", "torch.distributions.categorical.Categorical.variance": "distributions.html#torch.distributions.categorical.Categorical.variance", "torch.distributions.cauchy.Cauchy": "distributions.html#torch.distributions.cauchy.Cauchy", "torch.distributions.cauchy.Cauchy.arg_constraints": "distributions.html#torch.distributions.cauchy.Cauchy.arg_constraints", "torch.distributions.cauchy.Cauchy.cdf()": "distributions.html#torch.distributions.cauchy.Cauchy.cdf", "torch.distributions.cauchy.Cauchy.entropy()": "distributions.html#torch.distributions.cauchy.Cauchy.entropy", "torch.distributions.cauchy.Cauchy.expand()": "distributions.html#torch.distributions.cauchy.Cauchy.expand", "torch.distributions.cauchy.Cauchy.has_rsample": "distributions.html#torch.distributions.cauchy.Cauchy.has_rsample", "torch.distributions.cauchy.Cauchy.icdf()": "distributions.html#torch.distributions.cauchy.Cauchy.icdf", "torch.distributions.cauchy.Cauchy.log_prob()": "distributions.html#torch.distributions.cauchy.Cauchy.log_prob", "torch.distributions.cauchy.Cauchy.mean": "distributions.html#torch.distributions.cauchy.Cauchy.mean", "torch.distributions.cauchy.Cauchy.mode": "distributions.html#torch.distributions.cauchy.Cauchy.mode", "torch.distributions.cauchy.Cauchy.rsample()": "distributions.html#torch.distributions.cauchy.Cauchy.rsample", "torch.distributions.cauchy.Cauchy.support": "distributions.html#torch.distributions.cauchy.Cauchy.support", "torch.distributions.cauchy.Cauchy.variance": "distributions.html#torch.distributions.cauchy.Cauchy.variance", "torch.distributions.chi2.Chi2": "distributions.html#torch.distributions.chi2.Chi2", "torch.distributions.chi2.Chi2.arg_constraints": "distributions.html#torch.distributions.chi2.Chi2.arg_constraints", "torch.distributions.chi2.Chi2.df": "distributions.html#torch.distributions.chi2.Chi2.df", "torch.distributions.chi2.Chi2.expand()": "distributions.html#torch.distributions.chi2.Chi2.expand", "torch.distributions.constraint_registry.ConstraintRegistry": "distributions.html#torch.distributions.constraint_registry.ConstraintRegistry", "torch.distributions.constraint_registry.ConstraintRegistry.register()": "distributions.html#torch.distributions.constraint_registry.ConstraintRegistry.register", "torch.distributions.constraints.cat": "distributions.html#torch.distributions.constraints.cat", "torch.distributions.constraints.Constraint": "distributions.html#torch.distributions.constraints.Constraint", "torch.distributions.constraints.Constraint.check()": "distributions.html#torch.distributions.constraints.Constraint.check", "torch.distributions.constraints.dependent_property": "distributions.html#torch.distributions.constraints.dependent_property", "torch.distributions.constraints.greater_than": "distributions.html#torch.distributions.constraints.greater_than", "torch.distributions.constraints.greater_than_eq": "distributions.html#torch.distributions.constraints.greater_than_eq", "torch.distributions.constraints.half_open_interval": "distributions.html#torch.distributions.constraints.half_open_interval", "torch.distributions.constraints.independent": "distributions.html#torch.distributions.constraints.independent", "torch.distributions.constraints.integer_interval": "distributions.html#torch.distributions.constraints.integer_interval", "torch.distributions.constraints.interval": "distributions.html#torch.distributions.constraints.interval", "torch.distributions.constraints.less_than": "distributions.html#torch.distributions.constraints.less_than", "torch.distributions.constraints.multinomial": "distributions.html#torch.distributions.constraints.multinomial", "torch.distributions.constraints.stack": "distributions.html#torch.distributions.constraints.stack", "torch.distributions.continuous_bernoulli.ContinuousBernoulli": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli", "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints", "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf()": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf", "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy()": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy", "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand()": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand", "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample", "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf()": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf", "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob()": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob", "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits", "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean", "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape", "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs", "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample()": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample", "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample()": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample", "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev", "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli.support", "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance": "distributions.html#torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance", "torch.distributions.dirichlet.Dirichlet": "distributions.html#torch.distributions.dirichlet.Dirichlet", "torch.distributions.dirichlet.Dirichlet.arg_constraints": "distributions.html#torch.distributions.dirichlet.Dirichlet.arg_constraints", "torch.distributions.dirichlet.Dirichlet.entropy()": "distributions.html#torch.distributions.dirichlet.Dirichlet.entropy", "torch.distributions.dirichlet.Dirichlet.expand()": "distributions.html#torch.distributions.dirichlet.Dirichlet.expand", "torch.distributions.dirichlet.Dirichlet.has_rsample": "distributions.html#torch.distributions.dirichlet.Dirichlet.has_rsample", "torch.distributions.dirichlet.Dirichlet.log_prob()": "distributions.html#torch.distributions.dirichlet.Dirichlet.log_prob", "torch.distributions.dirichlet.Dirichlet.mean": "distributions.html#torch.distributions.dirichlet.Dirichlet.mean", "torch.distributions.dirichlet.Dirichlet.mode": "distributions.html#torch.distributions.dirichlet.Dirichlet.mode", "torch.distributions.dirichlet.Dirichlet.rsample()": "distributions.html#torch.distributions.dirichlet.Dirichlet.rsample", "torch.distributions.dirichlet.Dirichlet.support": "distributions.html#torch.distributions.dirichlet.Dirichlet.support", "torch.distributions.dirichlet.Dirichlet.variance": "distributions.html#torch.distributions.dirichlet.Dirichlet.variance", "torch.distributions.distribution.Distribution": "distributions.html#torch.distributions.distribution.Distribution", "torch.distributions.distribution.Distribution.arg_constraints": "distributions.html#torch.distributions.distribution.Distribution.arg_constraints", "torch.distributions.distribution.Distribution.batch_shape": "distributions.html#torch.distributions.distribution.Distribution.batch_shape", "torch.distributions.distribution.Distribution.cdf()": "distributions.html#torch.distributions.distribution.Distribution.cdf", "torch.distributions.distribution.Distribution.entropy()": "distributions.html#torch.distributions.distribution.Distribution.entropy", "torch.distributions.distribution.Distribution.enumerate_support()": "distributions.html#torch.distributions.distribution.Distribution.enumerate_support", "torch.distributions.distribution.Distribution.event_shape": "distributions.html#torch.distributions.distribution.Distribution.event_shape", "torch.distributions.distribution.Distribution.expand()": "distributions.html#torch.distributions.distribution.Distribution.expand", "torch.distributions.distribution.Distribution.icdf()": "distributions.html#torch.distributions.distribution.Distribution.icdf", "torch.distributions.distribution.Distribution.log_prob()": "distributions.html#torch.distributions.distribution.Distribution.log_prob", "torch.distributions.distribution.Distribution.mean": "distributions.html#torch.distributions.distribution.Distribution.mean", "torch.distributions.distribution.Distribution.mode": "distributions.html#torch.distributions.distribution.Distribution.mode", "torch.distributions.distribution.Distribution.perplexity()": "distributions.html#torch.distributions.distribution.Distribution.perplexity", "torch.distributions.distribution.Distribution.rsample()": "distributions.html#torch.distributions.distribution.Distribution.rsample", "torch.distributions.distribution.Distribution.sample()": "distributions.html#torch.distributions.distribution.Distribution.sample", "torch.distributions.distribution.Distribution.sample_n()": "distributions.html#torch.distributions.distribution.Distribution.sample_n", "torch.distributions.distribution.Distribution.set_default_validate_args()": "distributions.html#torch.distributions.distribution.Distribution.set_default_validate_args", "torch.distributions.distribution.Distribution.stddev": "distributions.html#torch.distributions.distribution.Distribution.stddev", "torch.distributions.distribution.Distribution.support": "distributions.html#torch.distributions.distribution.Distribution.support", "torch.distributions.distribution.Distribution.variance": "distributions.html#torch.distributions.distribution.Distribution.variance", "torch.distributions.exp_family.ExponentialFamily": "distributions.html#torch.distributions.exp_family.ExponentialFamily", "torch.distributions.exp_family.ExponentialFamily.entropy()": "distributions.html#torch.distributions.exp_family.ExponentialFamily.entropy", "torch.distributions.exponential.Exponential": "distributions.html#torch.distributions.exponential.Exponential", "torch.distributions.exponential.Exponential.arg_constraints": "distributions.html#torch.distributions.exponential.Exponential.arg_constraints", "torch.distributions.exponential.Exponential.cdf()": "distributions.html#torch.distributions.exponential.Exponential.cdf", "torch.distributions.exponential.Exponential.entropy()": "distributions.html#torch.distributions.exponential.Exponential.entropy", "torch.distributions.exponential.Exponential.expand()": "distributions.html#torch.distributions.exponential.Exponential.expand", "torch.distributions.exponential.Exponential.has_rsample": "distributions.html#torch.distributions.exponential.Exponential.has_rsample", "torch.distributions.exponential.Exponential.icdf()": "distributions.html#torch.distributions.exponential.Exponential.icdf", "torch.distributions.exponential.Exponential.log_prob()": "distributions.html#torch.distributions.exponential.Exponential.log_prob", "torch.distributions.exponential.Exponential.mean": "distributions.html#torch.distributions.exponential.Exponential.mean", "torch.distributions.exponential.Exponential.mode": "distributions.html#torch.distributions.exponential.Exponential.mode", "torch.distributions.exponential.Exponential.rsample()": "distributions.html#torch.distributions.exponential.Exponential.rsample", "torch.distributions.exponential.Exponential.stddev": "distributions.html#torch.distributions.exponential.Exponential.stddev", "torch.distributions.exponential.Exponential.support": "distributions.html#torch.distributions.exponential.Exponential.support", "torch.distributions.exponential.Exponential.variance": "distributions.html#torch.distributions.exponential.Exponential.variance", "torch.distributions.fishersnedecor.FisherSnedecor": "distributions.html#torch.distributions.fishersnedecor.FisherSnedecor", "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints": "distributions.html#torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints", "torch.distributions.fishersnedecor.FisherSnedecor.expand()": "distributions.html#torch.distributions.fishersnedecor.FisherSnedecor.expand", "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample": "distributions.html#torch.distributions.fishersnedecor.FisherSnedecor.has_rsample", "torch.distributions.fishersnedecor.FisherSnedecor.log_prob()": "distributions.html#torch.distributions.fishersnedecor.FisherSnedecor.log_prob", "torch.distributions.fishersnedecor.FisherSnedecor.mean": "distributions.html#torch.distributions.fishersnedecor.FisherSnedecor.mean", "torch.distributions.fishersnedecor.FisherSnedecor.mode": "distributions.html#torch.distributions.fishersnedecor.FisherSnedecor.mode", "torch.distributions.fishersnedecor.FisherSnedecor.rsample()": "distributions.html#torch.distributions.fishersnedecor.FisherSnedecor.rsample", "torch.distributions.fishersnedecor.FisherSnedecor.support": "distributions.html#torch.distributions.fishersnedecor.FisherSnedecor.support", "torch.distributions.fishersnedecor.FisherSnedecor.variance": "distributions.html#torch.distributions.fishersnedecor.FisherSnedecor.variance", "torch.distributions.gamma.Gamma": "distributions.html#torch.distributions.gamma.Gamma", "torch.distributions.gamma.Gamma.arg_constraints": "distributions.html#torch.distributions.gamma.Gamma.arg_constraints", "torch.distributions.gamma.Gamma.cdf()": "distributions.html#torch.distributions.gamma.Gamma.cdf", "torch.distributions.gamma.Gamma.entropy()": "distributions.html#torch.distributions.gamma.Gamma.entropy", "torch.distributions.gamma.Gamma.expand()": "distributions.html#torch.distributions.gamma.Gamma.expand", "torch.distributions.gamma.Gamma.has_rsample": "distributions.html#torch.distributions.gamma.Gamma.has_rsample", "torch.distributions.gamma.Gamma.log_prob()": "distributions.html#torch.distributions.gamma.Gamma.log_prob", "torch.distributions.gamma.Gamma.mean": "distributions.html#torch.distributions.gamma.Gamma.mean", "torch.distributions.gamma.Gamma.mode": "distributions.html#torch.distributions.gamma.Gamma.mode", "torch.distributions.gamma.Gamma.rsample()": "distributions.html#torch.distributions.gamma.Gamma.rsample", "torch.distributions.gamma.Gamma.support": "distributions.html#torch.distributions.gamma.Gamma.support", "torch.distributions.gamma.Gamma.variance": "distributions.html#torch.distributions.gamma.Gamma.variance", "torch.distributions.geometric.Geometric": "distributions.html#torch.distributions.geometric.Geometric", "torch.distributions.geometric.Geometric.arg_constraints": "distributions.html#torch.distributions.geometric.Geometric.arg_constraints", "torch.distributions.geometric.Geometric.entropy()": "distributions.html#torch.distributions.geometric.Geometric.entropy", "torch.distributions.geometric.Geometric.expand()": "distributions.html#torch.distributions.geometric.Geometric.expand", "torch.distributions.geometric.Geometric.log_prob()": "distributions.html#torch.distributions.geometric.Geometric.log_prob", "torch.distributions.geometric.Geometric.logits": "distributions.html#torch.distributions.geometric.Geometric.logits", "torch.distributions.geometric.Geometric.mean": "distributions.html#torch.distributions.geometric.Geometric.mean", "torch.distributions.geometric.Geometric.mode": "distributions.html#torch.distributions.geometric.Geometric.mode", "torch.distributions.geometric.Geometric.probs": "distributions.html#torch.distributions.geometric.Geometric.probs", "torch.distributions.geometric.Geometric.sample()": "distributions.html#torch.distributions.geometric.Geometric.sample", "torch.distributions.geometric.Geometric.support": "distributions.html#torch.distributions.geometric.Geometric.support", "torch.distributions.geometric.Geometric.variance": "distributions.html#torch.distributions.geometric.Geometric.variance", "torch.distributions.gumbel.Gumbel": "distributions.html#torch.distributions.gumbel.Gumbel", "torch.distributions.gumbel.Gumbel.arg_constraints": "distributions.html#torch.distributions.gumbel.Gumbel.arg_constraints", "torch.distributions.gumbel.Gumbel.entropy()": "distributions.html#torch.distributions.gumbel.Gumbel.entropy", "torch.distributions.gumbel.Gumbel.expand()": "distributions.html#torch.distributions.gumbel.Gumbel.expand", "torch.distributions.gumbel.Gumbel.log_prob()": "distributions.html#torch.distributions.gumbel.Gumbel.log_prob", "torch.distributions.gumbel.Gumbel.mean": "distributions.html#torch.distributions.gumbel.Gumbel.mean", "torch.distributions.gumbel.Gumbel.mode": "distributions.html#torch.distributions.gumbel.Gumbel.mode", "torch.distributions.gumbel.Gumbel.stddev": "distributions.html#torch.distributions.gumbel.Gumbel.stddev", "torch.distributions.gumbel.Gumbel.support": "distributions.html#torch.distributions.gumbel.Gumbel.support", "torch.distributions.gumbel.Gumbel.variance": "distributions.html#torch.distributions.gumbel.Gumbel.variance", "torch.distributions.half_cauchy.HalfCauchy": "distributions.html#torch.distributions.half_cauchy.HalfCauchy", "torch.distributions.half_cauchy.HalfCauchy.arg_constraints": "distributions.html#torch.distributions.half_cauchy.HalfCauchy.arg_constraints", "torch.distributions.half_cauchy.HalfCauchy.cdf()": "distributions.html#torch.distributions.half_cauchy.HalfCauchy.cdf", "torch.distributions.half_cauchy.HalfCauchy.entropy()": "distributions.html#torch.distributions.half_cauchy.HalfCauchy.entropy", "torch.distributions.half_cauchy.HalfCauchy.expand()": "distributions.html#torch.distributions.half_cauchy.HalfCauchy.expand", "torch.distributions.half_cauchy.HalfCauchy.has_rsample": "distributions.html#torch.distributions.half_cauchy.HalfCauchy.has_rsample", "torch.distributions.half_cauchy.HalfCauchy.icdf()": "distributions.html#torch.distributions.half_cauchy.HalfCauchy.icdf", "torch.distributions.half_cauchy.HalfCauchy.log_prob()": "distributions.html#torch.distributions.half_cauchy.HalfCauchy.log_prob", "torch.distributions.half_cauchy.HalfCauchy.mean": "distributions.html#torch.distributions.half_cauchy.HalfCauchy.mean", "torch.distributions.half_cauchy.HalfCauchy.mode": "distributions.html#torch.distributions.half_cauchy.HalfCauchy.mode", "torch.distributions.half_cauchy.HalfCauchy.scale": "distributions.html#torch.distributions.half_cauchy.HalfCauchy.scale", "torch.distributions.half_cauchy.HalfCauchy.support": "distributions.html#torch.distributions.half_cauchy.HalfCauchy.support", "torch.distributions.half_cauchy.HalfCauchy.variance": "distributions.html#torch.distributions.half_cauchy.HalfCauchy.variance", "torch.distributions.half_normal.HalfNormal": "distributions.html#torch.distributions.half_normal.HalfNormal", "torch.distributions.half_normal.HalfNormal.arg_constraints": "distributions.html#torch.distributions.half_normal.HalfNormal.arg_constraints", "torch.distributions.half_normal.HalfNormal.cdf()": "distributions.html#torch.distributions.half_normal.HalfNormal.cdf", "torch.distributions.half_normal.HalfNormal.entropy()": "distributions.html#torch.distributions.half_normal.HalfNormal.entropy", "torch.distributions.half_normal.HalfNormal.expand()": "distributions.html#torch.distributions.half_normal.HalfNormal.expand", "torch.distributions.half_normal.HalfNormal.has_rsample": "distributions.html#torch.distributions.half_normal.HalfNormal.has_rsample", "torch.distributions.half_normal.HalfNormal.icdf()": "distributions.html#torch.distributions.half_normal.HalfNormal.icdf", "torch.distributions.half_normal.HalfNormal.log_prob()": "distributions.html#torch.distributions.half_normal.HalfNormal.log_prob", "torch.distributions.half_normal.HalfNormal.mean": "distributions.html#torch.distributions.half_normal.HalfNormal.mean", "torch.distributions.half_normal.HalfNormal.mode": "distributions.html#torch.distributions.half_normal.HalfNormal.mode", "torch.distributions.half_normal.HalfNormal.scale": "distributions.html#torch.distributions.half_normal.HalfNormal.scale", "torch.distributions.half_normal.HalfNormal.support": "distributions.html#torch.distributions.half_normal.HalfNormal.support", "torch.distributions.half_normal.HalfNormal.variance": "distributions.html#torch.distributions.half_normal.HalfNormal.variance", "torch.distributions.independent.Independent": "distributions.html#torch.distributions.independent.Independent", "torch.distributions.independent.Independent.arg_constraints": "distributions.html#torch.distributions.independent.Independent.arg_constraints", "torch.distributions.independent.Independent.entropy()": "distributions.html#torch.distributions.independent.Independent.entropy", "torch.distributions.independent.Independent.enumerate_support()": "distributions.html#torch.distributions.independent.Independent.enumerate_support", "torch.distributions.independent.Independent.expand()": "distributions.html#torch.distributions.independent.Independent.expand", "torch.distributions.independent.Independent.has_enumerate_support": "distributions.html#torch.distributions.independent.Independent.has_enumerate_support", "torch.distributions.independent.Independent.has_rsample": "distributions.html#torch.distributions.independent.Independent.has_rsample", "torch.distributions.independent.Independent.log_prob()": "distributions.html#torch.distributions.independent.Independent.log_prob", "torch.distributions.independent.Independent.mean": "distributions.html#torch.distributions.independent.Independent.mean", "torch.distributions.independent.Independent.mode": "distributions.html#torch.distributions.independent.Independent.mode", "torch.distributions.independent.Independent.rsample()": "distributions.html#torch.distributions.independent.Independent.rsample", "torch.distributions.independent.Independent.sample()": "distributions.html#torch.distributions.independent.Independent.sample", "torch.distributions.independent.Independent.support": "distributions.html#torch.distributions.independent.Independent.support", "torch.distributions.independent.Independent.variance": "distributions.html#torch.distributions.independent.Independent.variance", "torch.distributions.kl.kl_divergence()": "distributions.html#torch.distributions.kl.kl_divergence", "torch.distributions.kl.register_kl()": "distributions.html#torch.distributions.kl.register_kl", "torch.distributions.kumaraswamy.Kumaraswamy": "distributions.html#torch.distributions.kumaraswamy.Kumaraswamy", "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints": "distributions.html#torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints", "torch.distributions.kumaraswamy.Kumaraswamy.entropy()": "distributions.html#torch.distributions.kumaraswamy.Kumaraswamy.entropy", "torch.distributions.kumaraswamy.Kumaraswamy.expand()": "distributions.html#torch.distributions.kumaraswamy.Kumaraswamy.expand", "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample": "distributions.html#torch.distributions.kumaraswamy.Kumaraswamy.has_rsample", "torch.distributions.kumaraswamy.Kumaraswamy.mean": "distributions.html#torch.distributions.kumaraswamy.Kumaraswamy.mean", "torch.distributions.kumaraswamy.Kumaraswamy.mode": "distributions.html#torch.distributions.kumaraswamy.Kumaraswamy.mode", "torch.distributions.kumaraswamy.Kumaraswamy.support": "distributions.html#torch.distributions.kumaraswamy.Kumaraswamy.support", "torch.distributions.kumaraswamy.Kumaraswamy.variance": "distributions.html#torch.distributions.kumaraswamy.Kumaraswamy.variance", "torch.distributions.laplace.Laplace": "distributions.html#torch.distributions.laplace.Laplace", "torch.distributions.laplace.Laplace.arg_constraints": "distributions.html#torch.distributions.laplace.Laplace.arg_constraints", "torch.distributions.laplace.Laplace.cdf()": "distributions.html#torch.distributions.laplace.Laplace.cdf", "torch.distributions.laplace.Laplace.entropy()": "distributions.html#torch.distributions.laplace.Laplace.entropy", "torch.distributions.laplace.Laplace.expand()": "distributions.html#torch.distributions.laplace.Laplace.expand", "torch.distributions.laplace.Laplace.has_rsample": "distributions.html#torch.distributions.laplace.Laplace.has_rsample", "torch.distributions.laplace.Laplace.icdf()": "distributions.html#torch.distributions.laplace.Laplace.icdf", "torch.distributions.laplace.Laplace.log_prob()": "distributions.html#torch.distributions.laplace.Laplace.log_prob", "torch.distributions.laplace.Laplace.mean": "distributions.html#torch.distributions.laplace.Laplace.mean", "torch.distributions.laplace.Laplace.mode": "distributions.html#torch.distributions.laplace.Laplace.mode", "torch.distributions.laplace.Laplace.rsample()": "distributions.html#torch.distributions.laplace.Laplace.rsample", "torch.distributions.laplace.Laplace.stddev": "distributions.html#torch.distributions.laplace.Laplace.stddev", "torch.distributions.laplace.Laplace.support": "distributions.html#torch.distributions.laplace.Laplace.support", "torch.distributions.laplace.Laplace.variance": "distributions.html#torch.distributions.laplace.Laplace.variance", "torch.distributions.lkj_cholesky.LKJCholesky": "distributions.html#torch.distributions.lkj_cholesky.LKJCholesky", "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints": "distributions.html#torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints", "torch.distributions.lkj_cholesky.LKJCholesky.expand()": "distributions.html#torch.distributions.lkj_cholesky.LKJCholesky.expand", "torch.distributions.lkj_cholesky.LKJCholesky.log_prob()": "distributions.html#torch.distributions.lkj_cholesky.LKJCholesky.log_prob", "torch.distributions.lkj_cholesky.LKJCholesky.sample()": "distributions.html#torch.distributions.lkj_cholesky.LKJCholesky.sample", "torch.distributions.lkj_cholesky.LKJCholesky.support": "distributions.html#torch.distributions.lkj_cholesky.LKJCholesky.support", "torch.distributions.log_normal.LogNormal": "distributions.html#torch.distributions.log_normal.LogNormal", "torch.distributions.log_normal.LogNormal.arg_constraints": "distributions.html#torch.distributions.log_normal.LogNormal.arg_constraints", "torch.distributions.log_normal.LogNormal.entropy()": "distributions.html#torch.distributions.log_normal.LogNormal.entropy", "torch.distributions.log_normal.LogNormal.expand()": "distributions.html#torch.distributions.log_normal.LogNormal.expand", "torch.distributions.log_normal.LogNormal.has_rsample": "distributions.html#torch.distributions.log_normal.LogNormal.has_rsample", "torch.distributions.log_normal.LogNormal.loc": "distributions.html#torch.distributions.log_normal.LogNormal.loc", "torch.distributions.log_normal.LogNormal.mean": "distributions.html#torch.distributions.log_normal.LogNormal.mean", "torch.distributions.log_normal.LogNormal.mode": "distributions.html#torch.distributions.log_normal.LogNormal.mode", "torch.distributions.log_normal.LogNormal.scale": "distributions.html#torch.distributions.log_normal.LogNormal.scale", "torch.distributions.log_normal.LogNormal.support": "distributions.html#torch.distributions.log_normal.LogNormal.support", "torch.distributions.log_normal.LogNormal.variance": "distributions.html#torch.distributions.log_normal.LogNormal.variance", "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": "distributions.html#torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal", "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints": "distributions.html#torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints", "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix": "distributions.html#torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix", "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy()": "distributions.html#torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy", "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand()": "distributions.html#torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand", "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample": "distributions.html#torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample", "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob()": "distributions.html#torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob", "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean": "distributions.html#torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean", "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode": "distributions.html#torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode", "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix": "distributions.html#torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix", "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample()": "distributions.html#torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample", "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril": "distributions.html#torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril", "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support": "distributions.html#torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support", "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance": "distributions.html#torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance", "torch.distributions.mixture_same_family.MixtureSameFamily": "distributions.html#torch.distributions.mixture_same_family.MixtureSameFamily", "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints": "distributions.html#torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints", "torch.distributions.mixture_same_family.MixtureSameFamily.cdf()": "distributions.html#torch.distributions.mixture_same_family.MixtureSameFamily.cdf", "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution": "distributions.html#torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution", "torch.distributions.mixture_same_family.MixtureSameFamily.expand()": "distributions.html#torch.distributions.mixture_same_family.MixtureSameFamily.expand", "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample": "distributions.html#torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample", "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob()": "distributions.html#torch.distributions.mixture_same_family.MixtureSameFamily.log_prob", "torch.distributions.mixture_same_family.MixtureSameFamily.mean": "distributions.html#torch.distributions.mixture_same_family.MixtureSameFamily.mean", "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution": "distributions.html#torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution", "torch.distributions.mixture_same_family.MixtureSameFamily.sample()": "distributions.html#torch.distributions.mixture_same_family.MixtureSameFamily.sample", "torch.distributions.mixture_same_family.MixtureSameFamily.support": "distributions.html#torch.distributions.mixture_same_family.MixtureSameFamily.support", "torch.distributions.mixture_same_family.MixtureSameFamily.variance": "distributions.html#torch.distributions.mixture_same_family.MixtureSameFamily.variance", "torch.distributions.multinomial.Multinomial": "distributions.html#torch.distributions.multinomial.Multinomial", "torch.distributions.multinomial.Multinomial.arg_constraints": "distributions.html#torch.distributions.multinomial.Multinomial.arg_constraints", "torch.distributions.multinomial.Multinomial.entropy()": "distributions.html#torch.distributions.multinomial.Multinomial.entropy", "torch.distributions.multinomial.Multinomial.expand()": "distributions.html#torch.distributions.multinomial.Multinomial.expand", "torch.distributions.multinomial.Multinomial.log_prob()": "distributions.html#torch.distributions.multinomial.Multinomial.log_prob", "torch.distributions.multinomial.Multinomial.logits": "distributions.html#torch.distributions.multinomial.Multinomial.logits", "torch.distributions.multinomial.Multinomial.mean": "distributions.html#torch.distributions.multinomial.Multinomial.mean", "torch.distributions.multinomial.Multinomial.param_shape": "distributions.html#torch.distributions.multinomial.Multinomial.param_shape", "torch.distributions.multinomial.Multinomial.probs": "distributions.html#torch.distributions.multinomial.Multinomial.probs", "torch.distributions.multinomial.Multinomial.sample()": "distributions.html#torch.distributions.multinomial.Multinomial.sample", "torch.distributions.multinomial.Multinomial.support": "distributions.html#torch.distributions.multinomial.Multinomial.support", "torch.distributions.multinomial.Multinomial.total_count": "distributions.html#torch.distributions.multinomial.Multinomial.total_count", "torch.distributions.multinomial.Multinomial.variance": "distributions.html#torch.distributions.multinomial.Multinomial.variance", "torch.distributions.multivariate_normal.MultivariateNormal": "distributions.html#torch.distributions.multivariate_normal.MultivariateNormal", "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints": "distributions.html#torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints", "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix": "distributions.html#torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix", "torch.distributions.multivariate_normal.MultivariateNormal.entropy()": "distributions.html#torch.distributions.multivariate_normal.MultivariateNormal.entropy", "torch.distributions.multivariate_normal.MultivariateNormal.expand()": "distributions.html#torch.distributions.multivariate_normal.MultivariateNormal.expand", "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample": "distributions.html#torch.distributions.multivariate_normal.MultivariateNormal.has_rsample", "torch.distributions.multivariate_normal.MultivariateNormal.log_prob()": "distributions.html#torch.distributions.multivariate_normal.MultivariateNormal.log_prob", "torch.distributions.multivariate_normal.MultivariateNormal.mean": "distributions.html#torch.distributions.multivariate_normal.MultivariateNormal.mean", "torch.distributions.multivariate_normal.MultivariateNormal.mode": "distributions.html#torch.distributions.multivariate_normal.MultivariateNormal.mode", "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix": "distributions.html#torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix", "torch.distributions.multivariate_normal.MultivariateNormal.rsample()": "distributions.html#torch.distributions.multivariate_normal.MultivariateNormal.rsample", "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril": "distributions.html#torch.distributions.multivariate_normal.MultivariateNormal.scale_tril", "torch.distributions.multivariate_normal.MultivariateNormal.support": "distributions.html#torch.distributions.multivariate_normal.MultivariateNormal.support", "torch.distributions.multivariate_normal.MultivariateNormal.variance": "distributions.html#torch.distributions.multivariate_normal.MultivariateNormal.variance", "torch.distributions.negative_binomial.NegativeBinomial": "distributions.html#torch.distributions.negative_binomial.NegativeBinomial", "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints": "distributions.html#torch.distributions.negative_binomial.NegativeBinomial.arg_constraints", "torch.distributions.negative_binomial.NegativeBinomial.expand()": "distributions.html#torch.distributions.negative_binomial.NegativeBinomial.expand", "torch.distributions.negative_binomial.NegativeBinomial.log_prob()": "distributions.html#torch.distributions.negative_binomial.NegativeBinomial.log_prob", "torch.distributions.negative_binomial.NegativeBinomial.logits": "distributions.html#torch.distributions.negative_binomial.NegativeBinomial.logits", "torch.distributions.negative_binomial.NegativeBinomial.mean": "distributions.html#torch.distributions.negative_binomial.NegativeBinomial.mean", "torch.distributions.negative_binomial.NegativeBinomial.mode": "distributions.html#torch.distributions.negative_binomial.NegativeBinomial.mode", "torch.distributions.negative_binomial.NegativeBinomial.param_shape": "distributions.html#torch.distributions.negative_binomial.NegativeBinomial.param_shape", "torch.distributions.negative_binomial.NegativeBinomial.probs": "distributions.html#torch.distributions.negative_binomial.NegativeBinomial.probs", "torch.distributions.negative_binomial.NegativeBinomial.sample()": "distributions.html#torch.distributions.negative_binomial.NegativeBinomial.sample", "torch.distributions.negative_binomial.NegativeBinomial.support": "distributions.html#torch.distributions.negative_binomial.NegativeBinomial.support", "torch.distributions.negative_binomial.NegativeBinomial.variance": "distributions.html#torch.distributions.negative_binomial.NegativeBinomial.variance", "torch.distributions.normal.Normal": "distributions.html#torch.distributions.normal.Normal", "torch.distributions.normal.Normal.arg_constraints": "distributions.html#torch.distributions.normal.Normal.arg_constraints", "torch.distributions.normal.Normal.cdf()": "distributions.html#torch.distributions.normal.Normal.cdf", "torch.distributions.normal.Normal.entropy()": "distributions.html#torch.distributions.normal.Normal.entropy", "torch.distributions.normal.Normal.expand()": "distributions.html#torch.distributions.normal.Normal.expand", "torch.distributions.normal.Normal.has_rsample": "distributions.html#torch.distributions.normal.Normal.has_rsample", "torch.distributions.normal.Normal.icdf()": "distributions.html#torch.distributions.normal.Normal.icdf", "torch.distributions.normal.Normal.log_prob()": "distributions.html#torch.distributions.normal.Normal.log_prob", "torch.distributions.normal.Normal.mean": "distributions.html#torch.distributions.normal.Normal.mean", "torch.distributions.normal.Normal.mode": "distributions.html#torch.distributions.normal.Normal.mode", "torch.distributions.normal.Normal.rsample()": "distributions.html#torch.distributions.normal.Normal.rsample", "torch.distributions.normal.Normal.sample()": "distributions.html#torch.distributions.normal.Normal.sample", "torch.distributions.normal.Normal.stddev": "distributions.html#torch.distributions.normal.Normal.stddev", "torch.distributions.normal.Normal.support": "distributions.html#torch.distributions.normal.Normal.support", "torch.distributions.normal.Normal.variance": "distributions.html#torch.distributions.normal.Normal.variance", "torch.distributions.one_hot_categorical.OneHotCategorical": "distributions.html#torch.distributions.one_hot_categorical.OneHotCategorical", "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints": "distributions.html#torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints", "torch.distributions.one_hot_categorical.OneHotCategorical.entropy()": "distributions.html#torch.distributions.one_hot_categorical.OneHotCategorical.entropy", "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support()": "distributions.html#torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support", "torch.distributions.one_hot_categorical.OneHotCategorical.expand()": "distributions.html#torch.distributions.one_hot_categorical.OneHotCategorical.expand", "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support": "distributions.html#torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support", "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob()": "distributions.html#torch.distributions.one_hot_categorical.OneHotCategorical.log_prob", "torch.distributions.one_hot_categorical.OneHotCategorical.logits": "distributions.html#torch.distributions.one_hot_categorical.OneHotCategorical.logits", "torch.distributions.one_hot_categorical.OneHotCategorical.mean": "distributions.html#torch.distributions.one_hot_categorical.OneHotCategorical.mean", "torch.distributions.one_hot_categorical.OneHotCategorical.mode": "distributions.html#torch.distributions.one_hot_categorical.OneHotCategorical.mode", "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape": "distributions.html#torch.distributions.one_hot_categorical.OneHotCategorical.param_shape", "torch.distributions.one_hot_categorical.OneHotCategorical.probs": "distributions.html#torch.distributions.one_hot_categorical.OneHotCategorical.probs", "torch.distributions.one_hot_categorical.OneHotCategorical.sample()": "distributions.html#torch.distributions.one_hot_categorical.OneHotCategorical.sample", "torch.distributions.one_hot_categorical.OneHotCategorical.support": "distributions.html#torch.distributions.one_hot_categorical.OneHotCategorical.support", "torch.distributions.one_hot_categorical.OneHotCategorical.variance": "distributions.html#torch.distributions.one_hot_categorical.OneHotCategorical.variance", "torch.distributions.pareto.Pareto": "distributions.html#torch.distributions.pareto.Pareto", "torch.distributions.pareto.Pareto.arg_constraints": "distributions.html#torch.distributions.pareto.Pareto.arg_constraints", "torch.distributions.pareto.Pareto.entropy()": "distributions.html#torch.distributions.pareto.Pareto.entropy", "torch.distributions.pareto.Pareto.expand()": "distributions.html#torch.distributions.pareto.Pareto.expand", "torch.distributions.pareto.Pareto.mean": "distributions.html#torch.distributions.pareto.Pareto.mean", "torch.distributions.pareto.Pareto.mode": "distributions.html#torch.distributions.pareto.Pareto.mode", "torch.distributions.pareto.Pareto.support": "distributions.html#torch.distributions.pareto.Pareto.support", "torch.distributions.pareto.Pareto.variance": "distributions.html#torch.distributions.pareto.Pareto.variance", "torch.distributions.poisson.Poisson": "distributions.html#torch.distributions.poisson.Poisson", "torch.distributions.poisson.Poisson.arg_constraints": "distributions.html#torch.distributions.poisson.Poisson.arg_constraints", "torch.distributions.poisson.Poisson.expand()": "distributions.html#torch.distributions.poisson.Poisson.expand", "torch.distributions.poisson.Poisson.log_prob()": "distributions.html#torch.distributions.poisson.Poisson.log_prob", "torch.distributions.poisson.Poisson.mean": "distributions.html#torch.distributions.poisson.Poisson.mean", "torch.distributions.poisson.Poisson.mode": "distributions.html#torch.distributions.poisson.Poisson.mode", "torch.distributions.poisson.Poisson.sample()": "distributions.html#torch.distributions.poisson.Poisson.sample", "torch.distributions.poisson.Poisson.support": "distributions.html#torch.distributions.poisson.Poisson.support", "torch.distributions.poisson.Poisson.variance": "distributions.html#torch.distributions.poisson.Poisson.variance", "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": "distributions.html#torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli", "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints": "distributions.html#torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints", "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand()": "distributions.html#torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand", "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob()": "distributions.html#torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob", "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits": "distributions.html#torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits", "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape": "distributions.html#torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape", "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs": "distributions.html#torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs", "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample()": "distributions.html#torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample", "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support": "distributions.html#torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support", "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": "distributions.html#torch.distributions.relaxed_bernoulli.RelaxedBernoulli", "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints": "distributions.html#torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints", "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand()": "distributions.html#torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand", "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample": "distributions.html#torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample", "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits": "distributions.html#torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits", "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs": "distributions.html#torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs", "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support": "distributions.html#torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support", "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature": "distributions.html#torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature", "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": "distributions.html#torch.distributions.relaxed_categorical.RelaxedOneHotCategorical", "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints": "distributions.html#torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints", "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand()": "distributions.html#torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand", "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample": "distributions.html#torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample", "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits": "distributions.html#torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits", "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs": "distributions.html#torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs", "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support": "distributions.html#torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support", "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature": "distributions.html#torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature", "torch.distributions.studentT.StudentT": "distributions.html#torch.distributions.studentT.StudentT", "torch.distributions.studentT.StudentT.arg_constraints": "distributions.html#torch.distributions.studentT.StudentT.arg_constraints", "torch.distributions.studentT.StudentT.entropy()": "distributions.html#torch.distributions.studentT.StudentT.entropy", "torch.distributions.studentT.StudentT.expand()": "distributions.html#torch.distributions.studentT.StudentT.expand", "torch.distributions.studentT.StudentT.has_rsample": "distributions.html#torch.distributions.studentT.StudentT.has_rsample", "torch.distributions.studentT.StudentT.log_prob()": "distributions.html#torch.distributions.studentT.StudentT.log_prob", "torch.distributions.studentT.StudentT.mean": "distributions.html#torch.distributions.studentT.StudentT.mean", "torch.distributions.studentT.StudentT.mode": "distributions.html#torch.distributions.studentT.StudentT.mode", "torch.distributions.studentT.StudentT.rsample()": "distributions.html#torch.distributions.studentT.StudentT.rsample", "torch.distributions.studentT.StudentT.support": "distributions.html#torch.distributions.studentT.StudentT.support", "torch.distributions.studentT.StudentT.variance": "distributions.html#torch.distributions.studentT.StudentT.variance", "torch.distributions.transformed_distribution.TransformedDistribution": "distributions.html#torch.distributions.transformed_distribution.TransformedDistribution", "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints": "distributions.html#torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints", "torch.distributions.transformed_distribution.TransformedDistribution.cdf()": "distributions.html#torch.distributions.transformed_distribution.TransformedDistribution.cdf", "torch.distributions.transformed_distribution.TransformedDistribution.expand()": "distributions.html#torch.distributions.transformed_distribution.TransformedDistribution.expand", "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample": "distributions.html#torch.distributions.transformed_distribution.TransformedDistribution.has_rsample", "torch.distributions.transformed_distribution.TransformedDistribution.icdf()": "distributions.html#torch.distributions.transformed_distribution.TransformedDistribution.icdf", "torch.distributions.transformed_distribution.TransformedDistribution.log_prob()": "distributions.html#torch.distributions.transformed_distribution.TransformedDistribution.log_prob", "torch.distributions.transformed_distribution.TransformedDistribution.rsample()": "distributions.html#torch.distributions.transformed_distribution.TransformedDistribution.rsample", "torch.distributions.transformed_distribution.TransformedDistribution.sample()": "distributions.html#torch.distributions.transformed_distribution.TransformedDistribution.sample", "torch.distributions.transformed_distribution.TransformedDistribution.support": "distributions.html#torch.distributions.transformed_distribution.TransformedDistribution.support", "torch.distributions.transforms.AbsTransform": "distributions.html#torch.distributions.transforms.AbsTransform", "torch.distributions.transforms.AffineTransform": "distributions.html#torch.distributions.transforms.AffineTransform", "torch.distributions.transforms.CatTransform": "distributions.html#torch.distributions.transforms.CatTransform", "torch.distributions.transforms.ComposeTransform": "distributions.html#torch.distributions.transforms.ComposeTransform", "torch.distributions.transforms.CorrCholeskyTransform": "distributions.html#torch.distributions.transforms.CorrCholeskyTransform", "torch.distributions.transforms.CumulativeDistributionTransform": "distributions.html#torch.distributions.transforms.CumulativeDistributionTransform", "torch.distributions.transforms.ExpTransform": "distributions.html#torch.distributions.transforms.ExpTransform", "torch.distributions.transforms.IndependentTransform": "distributions.html#torch.distributions.transforms.IndependentTransform", "torch.distributions.transforms.LowerCholeskyTransform": "distributions.html#torch.distributions.transforms.LowerCholeskyTransform", "torch.distributions.transforms.PositiveDefiniteTransform": "distributions.html#torch.distributions.transforms.PositiveDefiniteTransform", "torch.distributions.transforms.PowerTransform": "distributions.html#torch.distributions.transforms.PowerTransform", "torch.distributions.transforms.ReshapeTransform": "distributions.html#torch.distributions.transforms.ReshapeTransform", "torch.distributions.transforms.SigmoidTransform": "distributions.html#torch.distributions.transforms.SigmoidTransform", "torch.distributions.transforms.SoftmaxTransform": "distributions.html#torch.distributions.transforms.SoftmaxTransform", "torch.distributions.transforms.SoftplusTransform": "distributions.html#torch.distributions.transforms.SoftplusTransform", "torch.distributions.transforms.StackTransform": "distributions.html#torch.distributions.transforms.StackTransform", "torch.distributions.transforms.StickBreakingTransform": "distributions.html#torch.distributions.transforms.StickBreakingTransform", "torch.distributions.transforms.TanhTransform": "distributions.html#torch.distributions.transforms.TanhTransform", "torch.distributions.transforms.Transform": "distributions.html#torch.distributions.transforms.Transform", "torch.distributions.transforms.Transform.forward_shape()": "distributions.html#torch.distributions.transforms.Transform.forward_shape", "torch.distributions.transforms.Transform.inv": "distributions.html#torch.distributions.transforms.Transform.inv", "torch.distributions.transforms.Transform.inverse_shape()": "distributions.html#torch.distributions.transforms.Transform.inverse_shape", "torch.distributions.transforms.Transform.log_abs_det_jacobian()": "distributions.html#torch.distributions.transforms.Transform.log_abs_det_jacobian", "torch.distributions.transforms.Transform.sign": "distributions.html#torch.distributions.transforms.Transform.sign", "torch.distributions.uniform.Uniform": "distributions.html#torch.distributions.uniform.Uniform", "torch.distributions.uniform.Uniform.arg_constraints": "distributions.html#torch.distributions.uniform.Uniform.arg_constraints", "torch.distributions.uniform.Uniform.cdf()": "distributions.html#torch.distributions.uniform.Uniform.cdf", "torch.distributions.uniform.Uniform.entropy()": "distributions.html#torch.distributions.uniform.Uniform.entropy", "torch.distributions.uniform.Uniform.expand()": "distributions.html#torch.distributions.uniform.Uniform.expand", "torch.distributions.uniform.Uniform.has_rsample": "distributions.html#torch.distributions.uniform.Uniform.has_rsample", "torch.distributions.uniform.Uniform.icdf()": "distributions.html#torch.distributions.uniform.Uniform.icdf", "torch.distributions.uniform.Uniform.log_prob()": "distributions.html#torch.distributions.uniform.Uniform.log_prob", "torch.distributions.uniform.Uniform.mean": "distributions.html#torch.distributions.uniform.Uniform.mean", "torch.distributions.uniform.Uniform.mode": "distributions.html#torch.distributions.uniform.Uniform.mode", "torch.distributions.uniform.Uniform.rsample()": "distributions.html#torch.distributions.uniform.Uniform.rsample", "torch.distributions.uniform.Uniform.stddev": "distributions.html#torch.distributions.uniform.Uniform.stddev", "torch.distributions.uniform.Uniform.support": "distributions.html#torch.distributions.uniform.Uniform.support", "torch.distributions.uniform.Uniform.variance": "distributions.html#torch.distributions.uniform.Uniform.variance", "torch.distributions.von_mises.VonMises": "distributions.html#torch.distributions.von_mises.VonMises", "torch.distributions.von_mises.VonMises.arg_constraints": "distributions.html#torch.distributions.von_mises.VonMises.arg_constraints", "torch.distributions.von_mises.VonMises.expand()": "distributions.html#torch.distributions.von_mises.VonMises.expand", "torch.distributions.von_mises.VonMises.has_rsample": "distributions.html#torch.distributions.von_mises.VonMises.has_rsample", "torch.distributions.von_mises.VonMises.log_prob()": "distributions.html#torch.distributions.von_mises.VonMises.log_prob", "torch.distributions.von_mises.VonMises.mean": "distributions.html#torch.distributions.von_mises.VonMises.mean", "torch.distributions.von_mises.VonMises.mode": "distributions.html#torch.distributions.von_mises.VonMises.mode", "torch.distributions.von_mises.VonMises.sample()": "distributions.html#torch.distributions.von_mises.VonMises.sample", "torch.distributions.von_mises.VonMises.support": "distributions.html#torch.distributions.von_mises.VonMises.support", "torch.distributions.von_mises.VonMises.variance": "distributions.html#torch.distributions.von_mises.VonMises.variance", "torch.distributions.weibull.Weibull": "distributions.html#torch.distributions.weibull.Weibull", "torch.distributions.weibull.Weibull.arg_constraints": "distributions.html#torch.distributions.weibull.Weibull.arg_constraints", "torch.distributions.weibull.Weibull.entropy()": "distributions.html#torch.distributions.weibull.Weibull.entropy", "torch.distributions.weibull.Weibull.expand()": "distributions.html#torch.distributions.weibull.Weibull.expand", "torch.distributions.weibull.Weibull.mean": "distributions.html#torch.distributions.weibull.Weibull.mean", "torch.distributions.weibull.Weibull.mode": "distributions.html#torch.distributions.weibull.Weibull.mode", "torch.distributions.weibull.Weibull.support": "distributions.html#torch.distributions.weibull.Weibull.support", "torch.distributions.weibull.Weibull.variance": "distributions.html#torch.distributions.weibull.Weibull.variance", "torch.distributions.wishart.Wishart": "distributions.html#torch.distributions.wishart.Wishart", "torch.distributions.wishart.Wishart.arg_constraints": "distributions.html#torch.distributions.wishart.Wishart.arg_constraints", "torch.distributions.wishart.Wishart.covariance_matrix": "distributions.html#torch.distributions.wishart.Wishart.covariance_matrix", "torch.distributions.wishart.Wishart.entropy()": "distributions.html#torch.distributions.wishart.Wishart.entropy", "torch.distributions.wishart.Wishart.expand()": "distributions.html#torch.distributions.wishart.Wishart.expand", "torch.distributions.wishart.Wishart.has_rsample": "distributions.html#torch.distributions.wishart.Wishart.has_rsample", "torch.distributions.wishart.Wishart.log_prob()": "distributions.html#torch.distributions.wishart.Wishart.log_prob", "torch.distributions.wishart.Wishart.mean": "distributions.html#torch.distributions.wishart.Wishart.mean", "torch.distributions.wishart.Wishart.mode": "distributions.html#torch.distributions.wishart.Wishart.mode", "torch.distributions.wishart.Wishart.precision_matrix": "distributions.html#torch.distributions.wishart.Wishart.precision_matrix", "torch.distributions.wishart.Wishart.rsample()": "distributions.html#torch.distributions.wishart.Wishart.rsample", "torch.distributions.wishart.Wishart.scale_tril": "distributions.html#torch.distributions.wishart.Wishart.scale_tril", "torch.distributions.wishart.Wishart.support": "distributions.html#torch.distributions.wishart.Wishart.support", "torch.distributions.wishart.Wishart.variance": "distributions.html#torch.distributions.wishart.Wishart.variance", "torch.div": "generated/torch.div.html", "torch.divide": "generated/torch.divide.html", "torch.dot": "generated/torch.dot.html", "torch.DoubleStorage": "storage.html#torch.DoubleStorage", "torch.DoubleStorage.dtype": "storage.html#torch.DoubleStorage.dtype", "torch.dsplit": "generated/torch.dsplit.html", "torch.dstack": "generated/torch.dstack.html", "torch.dtype": "tensor_attributes.html#torch.dtype", "torch.einsum": "generated/torch.einsum.html", "torch.empty": "generated/torch.empty.html", "torch.empty_like": "generated/torch.empty_like.html", "torch.empty_strided": "generated/torch.empty_strided.html", "torch.enable_grad": "generated/torch.enable_grad.html#torch.enable_grad", "torch.eq": "generated/torch.eq.html", "torch.equal": "generated/torch.equal.html", "torch.erf": "generated/torch.erf.html", "torch.erfc": "generated/torch.erfc.html", "torch.erfinv": "generated/torch.erfinv.html", "torch.exp": "generated/torch.exp.html", "torch.exp2": "generated/torch.exp2.html", "torch.expm1": "generated/torch.expm1.html", "torch.export": "export.html", "torch.export.ArgumentKind": "export.html#torch.export.ArgumentKind", "torch.export.ArgumentSpec": "export.html#torch.export.ArgumentSpec", "torch.export.constrain_as_size()": "export.html#torch.export.constrain_as_size", "torch.export.constrain_as_value()": "export.html#torch.export.constrain_as_value", "torch.export.Constraint": "export.html#torch.export.Constraint", "torch.export.Dynamic shapes": "torch.compiler_dynamic_shapes.html", "torch.export.dynamic_dim()": "export.html#torch.export.dynamic_dim", "torch.export.export()": "export.html#torch.export.export", "torch.export.ExportBackwardSignature": "export.html#torch.export.ExportBackwardSignature", "torch.export.ExportDB": "generated/exportdb/index.html", "torch.export.ExportDB.python.assert": "generated/exportdb/python.assert.html", "torch.export.ExportDB.python.builtin": "generated/exportdb/python.builtin.html", "torch.export.ExportDB.python.closure": "generated/exportdb/python.closure.html", "torch.export.ExportDB.python.context-manager": "generated/exportdb/python.context-manager.html", "torch.export.ExportDB.python.control-flow": "generated/exportdb/python.control-flow.html", "torch.export.ExportDB.python.data-structure": "generated/exportdb/python.data-structure.html", "torch.export.ExportDB.torch.cond": "generated/exportdb/torch.cond.html", "torch.export.ExportDB.torch.dynamic-shape": "generated/exportdb/torch.dynamic-shape.html", "torch.export.ExportDB.torch.dynamic-value": "generated/exportdb/torch.dynamic-value.html", "torch.export.ExportDB.torch.escape-hatch": "generated/exportdb/torch.escape-hatch.html", "torch.export.ExportDB.torch.map": "generated/exportdb/torch.map.html", "torch.export.ExportedProgram": "export.html#torch.export.ExportedProgram", "torch.export.ExportedProgram.module()": "export.html#torch.export.ExportedProgram.module", "torch.export.ExportGraphSignature": "export.html#torch.export.ExportGraphSignature", "torch.export.Fake tensor": "torch.compiler_fake_tensor.html", "torch.export.IRs": "torch.compiler_ir.html", "torch.export.load()": "export.html#torch.export.load", "torch.export.ModuleCallEntry": "export.html#torch.export.ModuleCallEntry", "torch.export.ModuleCallSignature": "export.html#torch.export.ModuleCallSignature", "torch.export.save()": "export.html#torch.export.save", "torch.export.TorchDynamo Deep Dive": "torch.compiler_deepdive.html", "torch.export.Writing Graph Transformations on ATen IR": "torch.compiler_transformations.html", "torch.eye": "generated/torch.eye.html", "torch.fake_quantize_per_channel_affine": "generated/torch.fake_quantize_per_channel_affine.html", "torch.fake_quantize_per_tensor_affine": "generated/torch.fake_quantize_per_tensor_affine.html", "torch.fft": "fft.html", "torch.fft.fft()": "generated/torch.fft.fft.html#torch.fft.fft", "torch.fft.fft2()": "generated/torch.fft.fft2.html#torch.fft.fft2", "torch.fft.fftfreq()": "generated/torch.fft.fftfreq.html#torch.fft.fftfreq", "torch.fft.fftn()": "generated/torch.fft.fftn.html#torch.fft.fftn", "torch.fft.fftshift()": "generated/torch.fft.fftshift.html#torch.fft.fftshift", "torch.fft.hfft()": "generated/torch.fft.hfft.html#torch.fft.hfft", "torch.fft.hfft2()": "generated/torch.fft.hfft2.html#torch.fft.hfft2", "torch.fft.hfftn()": "generated/torch.fft.hfftn.html#torch.fft.hfftn", "torch.fft.ifft()": "generated/torch.fft.ifft.html#torch.fft.ifft", "torch.fft.ifft2()": "generated/torch.fft.ifft2.html#torch.fft.ifft2", "torch.fft.ifftn()": "generated/torch.fft.ifftn.html#torch.fft.ifftn", "torch.fft.ifftshift()": "generated/torch.fft.ifftshift.html#torch.fft.ifftshift", "torch.fft.ihfft()": "generated/torch.fft.ihfft.html#torch.fft.ihfft", "torch.fft.ihfft2()": "generated/torch.fft.ihfft2.html#torch.fft.ihfft2", "torch.fft.ihfftn()": "generated/torch.fft.ihfftn.html#torch.fft.ihfftn", "torch.fft.irfft()": "generated/torch.fft.irfft.html#torch.fft.irfft", "torch.fft.irfft2()": "generated/torch.fft.irfft2.html#torch.fft.irfft2", "torch.fft.irfftn()": "generated/torch.fft.irfftn.html#torch.fft.irfftn", "torch.fft.rfft()": "generated/torch.fft.rfft.html#torch.fft.rfft", "torch.fft.rfft2()": "generated/torch.fft.rfft2.html#torch.fft.rfft2", "torch.fft.rfftfreq()": "generated/torch.fft.rfftfreq.html#torch.fft.rfftfreq", "torch.fft.rfftn()": "generated/torch.fft.rfftn.html#torch.fft.rfftn", "torch.fft.torch.fft.fft": "generated/torch.fft.fft.html", "torch.fft.torch.fft.fft2": "generated/torch.fft.fft2.html", "torch.fft.torch.fft.fftfreq": "generated/torch.fft.fftfreq.html", "torch.fft.torch.fft.fftn": "generated/torch.fft.fftn.html", "torch.fft.torch.fft.fftshift": "generated/torch.fft.fftshift.html", "torch.fft.torch.fft.hfft": "generated/torch.fft.hfft.html", "torch.fft.torch.fft.hfft2": "generated/torch.fft.hfft2.html", "torch.fft.torch.fft.hfftn": "generated/torch.fft.hfftn.html", "torch.fft.torch.fft.ifft": "generated/torch.fft.ifft.html", "torch.fft.torch.fft.ifft2": "generated/torch.fft.ifft2.html", "torch.fft.torch.fft.ifftn": "generated/torch.fft.ifftn.html", "torch.fft.torch.fft.ifftshift": "generated/torch.fft.ifftshift.html", "torch.fft.torch.fft.ihfft": "generated/torch.fft.ihfft.html", "torch.fft.torch.fft.ihfft2": "generated/torch.fft.ihfft2.html", "torch.fft.torch.fft.ihfftn": "generated/torch.fft.ihfftn.html", "torch.fft.torch.fft.irfft": "generated/torch.fft.irfft.html", "torch.fft.torch.fft.irfft2": "generated/torch.fft.irfft2.html", "torch.fft.torch.fft.irfftn": "generated/torch.fft.irfftn.html", "torch.fft.torch.fft.rfft": "generated/torch.fft.rfft.html", "torch.fft.torch.fft.rfft2": "generated/torch.fft.rfft2.html", "torch.fft.torch.fft.rfftfreq": "generated/torch.fft.rfftfreq.html", "torch.fft.torch.fft.rfftn": "generated/torch.fft.rfftn.html", "torch.fix": "generated/torch.fix.html", "torch.flatten": "generated/torch.flatten.html", "torch.flip": "generated/torch.flip.html", "torch.fliplr": "generated/torch.fliplr.html", "torch.flipud": "generated/torch.flipud.html", "torch.float_power": "generated/torch.float_power.html", "torch.FloatStorage": "storage.html#torch.FloatStorage", "torch.FloatStorage.dtype": "storage.html#torch.FloatStorage.dtype", "torch.floor": "generated/torch.floor.html", "torch.floor_divide": "generated/torch.floor_divide.html", "torch.fmax": "generated/torch.fmax.html", "torch.fmin": "generated/torch.fmin.html", "torch.fmod": "generated/torch.fmod.html", "torch.frac": "generated/torch.frac.html", "torch.frexp": "generated/torch.frexp.html", "torch.from_dlpack": "generated/torch.from_dlpack.html", "torch.from_numpy": "generated/torch.from_numpy.html", "torch.frombuffer": "generated/torch.frombuffer.html", "torch.full": "generated/torch.full.html", "torch.full_like": "generated/torch.full_like.html", "torch.func": "func.html", "torch.func.functional_call()": "generated/torch.func.functional_call.html#torch.func.functional_call", "torch.func.functionalize()": "generated/torch.func.functionalize.html#torch.func.functionalize", "torch.func.grad()": "generated/torch.func.grad.html#torch.func.grad", "torch.func.grad_and_value()": "generated/torch.func.grad_and_value.html#torch.func.grad_and_value", "torch.func.hessian()": "generated/torch.func.hessian.html#torch.func.hessian", "torch.func.jacfwd()": "generated/torch.func.jacfwd.html#torch.func.jacfwd", "torch.func.jacrev()": "generated/torch.func.jacrev.html#torch.func.jacrev", "torch.func.jvp()": "generated/torch.func.jvp.html#torch.func.jvp", "torch.func.linearize()": "generated/torch.func.linearize.html#torch.func.linearize", "torch.func.Migrating from functorch to torch.func": "func.migrating.html", "torch.func.replace_all_batch_norm_modules_()": "generated/torch.func.replace_all_batch_norm_modules_.html#torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state()": "generated/torch.func.stack_module_state.html#torch.func.stack_module_state", "torch.func.torch.func API Reference": "func.api.html", "torch.func.torch.func API Reference.Patching Batch Norm": "func.batch_norm.html", "torch.func.torch.func API Reference.torch.func.functional_call": "generated/torch.func.functional_call.html", "torch.func.torch.func API Reference.torch.func.functionalize": "generated/torch.func.functionalize.html", "torch.func.torch.func API Reference.torch.func.grad": "generated/torch.func.grad.html", "torch.func.torch.func API Reference.torch.func.grad_and_value": "generated/torch.func.grad_and_value.html", "torch.func.torch.func API Reference.torch.func.hessian": "generated/torch.func.hessian.html", "torch.func.torch.func API Reference.torch.func.jacfwd": "generated/torch.func.jacfwd.html", "torch.func.torch.func API Reference.torch.func.jacrev": "generated/torch.func.jacrev.html", "torch.func.torch.func API Reference.torch.func.jvp": "generated/torch.func.jvp.html", "torch.func.torch.func API Reference.torch.func.linearize": "generated/torch.func.linearize.html", "torch.func.torch.func API Reference.torch.func.replace_all_batch_norm_modules_": "generated/torch.func.replace_all_batch_norm_modules_.html", "torch.func.torch.func API Reference.torch.func.stack_module_state": "generated/torch.func.stack_module_state.html", "torch.func.torch.func API Reference.torch.func.vjp": "generated/torch.func.vjp.html", "torch.func.torch.func API Reference.torch.func.vmap": "generated/torch.func.vmap.html", "torch.func.torch.func Whirlwind Tour": "func.whirlwind_tour.html", "torch.func.UX Limitations": "func.ux_limitations.html", "torch.func.vjp()": "generated/torch.func.vjp.html#torch.func.vjp", "torch.func.vmap()": "generated/torch.func.vmap.html#torch.func.vmap", "torch.futures": "futures.html", "torch.futures.collect_all()": "futures.html#torch.futures.collect_all", "torch.futures.Future": "futures.html#torch.futures.Future", "torch.futures.Future.add_done_callback()": "futures.html#torch.futures.Future.add_done_callback", "torch.futures.Future.done()": "futures.html#torch.futures.Future.done", "torch.futures.Future.set_exception()": "futures.html#torch.futures.Future.set_exception", "torch.futures.Future.set_result()": "futures.html#torch.futures.Future.set_result", "torch.futures.Future.then()": "futures.html#torch.futures.Future.then", "torch.futures.Future.value()": "futures.html#torch.futures.Future.value", "torch.futures.Future.wait()": "futures.html#torch.futures.Future.wait", "torch.futures.wait_all()": "futures.html#torch.futures.wait_all", "torch.fx": "fx.html", "torch.fx.Graph": "fx.html#torch.fx.Graph", "torch.fx.Graph.__init__()": "fx.html#torch.fx.Graph.__init__", "torch.fx.Graph.call_function()": "fx.html#torch.fx.Graph.call_function", "torch.fx.Graph.call_method()": "fx.html#torch.fx.Graph.call_method", "torch.fx.Graph.call_module()": "fx.html#torch.fx.Graph.call_module", "torch.fx.Graph.create_node()": "fx.html#torch.fx.Graph.create_node", "torch.fx.Graph.eliminate_dead_code()": "fx.html#torch.fx.Graph.eliminate_dead_code", "torch.fx.Graph.erase_node()": "fx.html#torch.fx.Graph.erase_node", "torch.fx.Graph.get_attr()": "fx.html#torch.fx.Graph.get_attr", "torch.fx.Graph.graph_copy()": "fx.html#torch.fx.Graph.graph_copy", "torch.fx.Graph.inserting_after()": "fx.html#torch.fx.Graph.inserting_after", "torch.fx.Graph.inserting_before()": "fx.html#torch.fx.Graph.inserting_before", "torch.fx.Graph.lint()": "fx.html#torch.fx.Graph.lint", "torch.fx.Graph.node_copy()": "fx.html#torch.fx.Graph.node_copy", "torch.fx.Graph.nodes": "fx.html#torch.fx.Graph.nodes", "torch.fx.Graph.on_generate_code()": "fx.html#torch.fx.Graph.on_generate_code", "torch.fx.Graph.output()": "fx.html#torch.fx.Graph.output", "torch.fx.Graph.placeholder()": "fx.html#torch.fx.Graph.placeholder", "torch.fx.Graph.print_tabular()": "fx.html#torch.fx.Graph.print_tabular", "torch.fx.Graph.process_inputs()": "fx.html#torch.fx.Graph.process_inputs", "torch.fx.Graph.process_outputs()": "fx.html#torch.fx.Graph.process_outputs", "torch.fx.Graph.python_code()": "fx.html#torch.fx.Graph.python_code", "torch.fx.Graph.set_codegen()": "fx.html#torch.fx.Graph.set_codegen", "torch.fx.GraphModule": "fx.html#torch.fx.GraphModule", "torch.fx.GraphModule.__init__()": "fx.html#torch.fx.GraphModule.__init__", "torch.fx.GraphModule.add_submodule()": "fx.html#torch.fx.GraphModule.add_submodule", "torch.fx.GraphModule.code": "fx.html#torch.fx.GraphModule.code", "torch.fx.GraphModule.delete_all_unused_submodules()": "fx.html#torch.fx.GraphModule.delete_all_unused_submodules", "torch.fx.GraphModule.delete_submodule()": "fx.html#torch.fx.GraphModule.delete_submodule", "torch.fx.GraphModule.graph": "fx.html#torch.fx.GraphModule.graph", "torch.fx.GraphModule.print_readable()": "fx.html#torch.fx.GraphModule.print_readable", "torch.fx.GraphModule.recompile()": "fx.html#torch.fx.GraphModule.recompile", "torch.fx.GraphModule.to_folder()": "fx.html#torch.fx.GraphModule.to_folder", "torch.fx.Interpreter": "fx.html#torch.fx.Interpreter", "torch.fx.Interpreter.boxed_run()": "fx.html#torch.fx.Interpreter.boxed_run", "torch.fx.Interpreter.call_function()": "fx.html#torch.fx.Interpreter.call_function", "torch.fx.Interpreter.call_method()": "fx.html#torch.fx.Interpreter.call_method", "torch.fx.Interpreter.call_module()": "fx.html#torch.fx.Interpreter.call_module", "torch.fx.Interpreter.fetch_args_kwargs_from_env()": "fx.html#torch.fx.Interpreter.fetch_args_kwargs_from_env", "torch.fx.Interpreter.fetch_attr()": "fx.html#torch.fx.Interpreter.fetch_attr", "torch.fx.Interpreter.get_attr()": "fx.html#torch.fx.Interpreter.get_attr", "torch.fx.Interpreter.map_nodes_to_values()": "fx.html#torch.fx.Interpreter.map_nodes_to_values", "torch.fx.Interpreter.output()": "fx.html#torch.fx.Interpreter.output", "torch.fx.Interpreter.placeholder()": "fx.html#torch.fx.Interpreter.placeholder", "torch.fx.Interpreter.run()": "fx.html#torch.fx.Interpreter.run", "torch.fx.Interpreter.run_node()": "fx.html#torch.fx.Interpreter.run_node", "torch.fx.Node": "fx.html#torch.fx.Node", "torch.fx.Node.all_input_nodes": "fx.html#torch.fx.Node.all_input_nodes", "torch.fx.Node.append()": "fx.html#torch.fx.Node.append", "torch.fx.Node.args": "fx.html#torch.fx.Node.args", "torch.fx.Node.format_node()": "fx.html#torch.fx.Node.format_node", "torch.fx.Node.is_impure()": "fx.html#torch.fx.Node.is_impure", "torch.fx.Node.kwargs": "fx.html#torch.fx.Node.kwargs", "torch.fx.Node.next": "fx.html#torch.fx.Node.next", "torch.fx.Node.normalized_arguments()": "fx.html#torch.fx.Node.normalized_arguments", "torch.fx.Node.prepend()": "fx.html#torch.fx.Node.prepend", "torch.fx.Node.prev": "fx.html#torch.fx.Node.prev", "torch.fx.Node.replace_all_uses_with()": "fx.html#torch.fx.Node.replace_all_uses_with", "torch.fx.Node.replace_input_with()": "fx.html#torch.fx.Node.replace_input_with", "torch.fx.Node.stack_trace": "fx.html#torch.fx.Node.stack_trace", "torch.fx.Node.update_arg()": "fx.html#torch.fx.Node.update_arg", "torch.fx.Node.update_kwarg()": "fx.html#torch.fx.Node.update_kwarg", "torch.fx.Proxy": "fx.html#torch.fx.Proxy", "torch.fx.replace_pattern()": "fx.html#torch.fx.replace_pattern", "torch.fx.symbolic_trace()": "fx.html#torch.fx.symbolic_trace", "torch.fx.Tracer": "fx.html#torch.fx.Tracer", "torch.fx.Tracer.call_module()": "fx.html#torch.fx.Tracer.call_module", "torch.fx.Tracer.create_arg()": "fx.html#torch.fx.Tracer.create_arg", "torch.fx.Tracer.create_args_for_root()": "fx.html#torch.fx.Tracer.create_args_for_root", "torch.fx.Tracer.create_node()": "fx.html#torch.fx.Tracer.create_node", "torch.fx.Tracer.create_proxy()": "fx.html#torch.fx.Tracer.create_proxy", "torch.fx.Tracer.getattr()": "fx.html#torch.fx.Tracer.getattr", "torch.fx.Tracer.is_leaf_module()": "fx.html#torch.fx.Tracer.is_leaf_module", "torch.fx.Tracer.iter()": "fx.html#torch.fx.Tracer.iter", "torch.fx.Tracer.keys()": "fx.html#torch.fx.Tracer.keys", "torch.fx.Tracer.path_of_module()": "fx.html#torch.fx.Tracer.path_of_module", "torch.fx.Tracer.proxy()": "fx.html#torch.fx.Tracer.proxy", "torch.fx.Tracer.to_bool()": "fx.html#torch.fx.Tracer.to_bool", "torch.fx.Tracer.trace()": "fx.html#torch.fx.Tracer.trace", "torch.fx.Transformer": "fx.html#torch.fx.Transformer", "torch.fx.Transformer.call_function()": "fx.html#torch.fx.Transformer.call_function", "torch.fx.Transformer.call_module()": "fx.html#torch.fx.Transformer.call_module", "torch.fx.Transformer.get_attr()": "fx.html#torch.fx.Transformer.get_attr", "torch.fx.Transformer.placeholder()": "fx.html#torch.fx.Transformer.placeholder", "torch.fx.Transformer.transform()": "fx.html#torch.fx.Transformer.transform", "torch.fx.wrap()": "fx.html#torch.fx.wrap", "torch.gather": "generated/torch.gather.html", "torch.gcd": "generated/torch.gcd.html", "torch.ge": "generated/torch.ge.html", "torch.Generator": "generated/torch.generator.html#torch.Generator", "torch.Generator.device": "generated/torch.generator.html#torch.Generator.device", "torch.Generator.get_state()": "generated/torch.generator.html#torch.Generator.get_state", "torch.Generator.initial_seed()": "generated/torch.generator.html#torch.Generator.initial_seed", "torch.Generator.manual_seed()": "generated/torch.generator.html#torch.Generator.manual_seed", "torch.Generator.seed()": "generated/torch.generator.html#torch.Generator.seed", "torch.Generator.set_state()": "generated/torch.generator.html#torch.Generator.set_state", "torch.geqrf": "generated/torch.geqrf.html", "torch.ger": "generated/torch.ger.html", "torch.get_default_dtype": "generated/torch.get_default_dtype.html", "torch.get_deterministic_debug_mode": "generated/torch.get_deterministic_debug_mode.html", "torch.get_float32_matmul_precision": "generated/torch.get_float32_matmul_precision.html", "torch.get_num_interop_threads": "generated/torch.get_num_interop_threads.html", "torch.get_num_threads": "generated/torch.get_num_threads.html", "torch.get_rng_state": "generated/torch.get_rng_state.html", "torch.gradient": "generated/torch.gradient.html", "torch.greater": "generated/torch.greater.html", "torch.greater_equal": "generated/torch.greater_equal.html", "torch.gt": "generated/torch.gt.html", "torch.HalfStorage": "storage.html#torch.HalfStorage", "torch.HalfStorage.dtype": "storage.html#torch.HalfStorage.dtype", "torch.hamming_window": "generated/torch.hamming_window.html", "torch.hann_window": "generated/torch.hann_window.html", "torch.heaviside": "generated/torch.heaviside.html", "torch.histc": "generated/torch.histc.html", "torch.histogram": "generated/torch.histogram.html", "torch.histogramdd": "generated/torch.histogramdd.html", "torch.hsplit": "generated/torch.hsplit.html", "torch.hspmm()": "generated/torch.hspmm.html#torch.hspmm", "torch.hstack": "generated/torch.hstack.html", "torch.hub": "hub.html", "torch.hub.download_url_to_file()": "hub.html#torch.hub.download_url_to_file", "torch.hub.get_dir()": "hub.html#torch.hub.get_dir", "torch.hub.help()": "hub.html#torch.hub.help", "torch.hub.list()": "hub.html#torch.hub.list", "torch.hub.load()": "hub.html#torch.hub.load", "torch.hub.load_state_dict_from_url()": "hub.html#torch.hub.load_state_dict_from_url", "torch.hub.set_dir()": "hub.html#torch.hub.set_dir", "torch.hypot": "generated/torch.hypot.html", "torch.i0": "generated/torch.i0.html", "torch.igamma": "generated/torch.igamma.html", "torch.igammac": "generated/torch.igammac.html", "torch.imag": "generated/torch.imag.html", "torch.index_add": "generated/torch.index_add.html", "torch.index_copy": "generated/torch.index_copy.html", "torch.index_reduce": "generated/torch.index_reduce.html", "torch.index_select": "generated/torch.index_select.html", "torch.inference_mode": "generated/torch.inference_mode.html#torch.inference_mode", "torch.initial_seed": "generated/torch.initial_seed.html", "torch.inner": "generated/torch.inner.html", "torch.IntStorage": "storage.html#torch.IntStorage", "torch.IntStorage.dtype": "storage.html#torch.IntStorage.dtype", "torch.inverse": "generated/torch.inverse.html", "torch.is_complex": "generated/torch.is_complex.html", "torch.is_conj": "generated/torch.is_conj.html", "torch.is_deterministic_algorithms_warn_only_enabled": "generated/torch.is_deterministic_algorithms_warn_only_enabled.html", "torch.is_floating_point": "generated/torch.is_floating_point.html", "torch.is_grad_enabled": "generated/torch.is_grad_enabled.html", "torch.is_inference_mode_enabled": "generated/torch.is_inference_mode_enabled.html", "torch.is_nonzero": "generated/torch.is_nonzero.html", "torch.is_storage": "generated/torch.is_storage.html", "torch.is_tensor": "generated/torch.is_tensor.html", "torch.is_warn_always_enabled": "generated/torch.is_warn_always_enabled.html", "torch.isclose": "generated/torch.isclose.html", "torch.isfinite": "generated/torch.isfinite.html", "torch.isin": "generated/torch.isin.html", "torch.isinf": "generated/torch.isinf.html", "torch.isnan": "generated/torch.isnan.html", "torch.isneginf": "generated/torch.isneginf.html", "torch.isposinf": "generated/torch.isposinf.html", "torch.isreal": "generated/torch.isreal.html", "torch.istft": "generated/torch.istft.html", "torch.jit.annotate()": "generated/torch.jit.annotate.html#torch.jit.annotate", "torch.jit.Attribute": "generated/torch.jit.attribute.html#torch.jit.Attribute", "torch.jit.Attribute.count()": "generated/torch.jit.attribute.html#torch.jit.Attribute.count", "torch.jit.Attribute.index()": "generated/torch.jit.attribute.html#torch.jit.Attribute.index", "torch.jit.Attribute.type": "generated/torch.jit.attribute.html#torch.jit.Attribute.type", "torch.jit.Attribute.value": "generated/torch.jit.attribute.html#torch.jit.Attribute.value", "torch.jit.enable_onednn_fusion()": "generated/torch.jit.enable_onednn_fusion.html#torch.jit.enable_onednn_fusion", "torch.jit.export()": "jit.html#torch.jit.export", "torch.jit.fork()": "generated/torch.jit.fork.html#torch.jit.fork", "torch.jit.freeze()": "generated/torch.jit.freeze.html#torch.jit.freeze", "torch.jit.ignore()": "generated/torch.jit.ignore.html#torch.jit.ignore", "torch.jit.is_scripting()": "jit_language_reference.html#torch.jit.is_scripting", "torch.jit.is_tracing()": "jit_language_reference.html#torch.jit.is_tracing", "torch.jit.isinstance()": "generated/torch.jit.isinstance.html#torch.jit.isinstance", "torch.jit.load()": "generated/torch.jit.load.html#torch.jit.load", "torch.jit.onednn_fusion_enabled()": "generated/torch.jit.onednn_fusion_enabled.html#torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference()": "generated/torch.jit.optimize_for_inference.html#torch.jit.optimize_for_inference", "torch.jit.save()": "generated/torch.jit.save.html#torch.jit.save", "torch.jit.script()": "generated/torch.jit.script.html#torch.jit.script", "torch.jit.script_if_tracing()": "generated/torch.jit.script_if_tracing.html#torch.jit.script_if_tracing", "torch.jit.ScriptFunction": "generated/torch.jit.scriptfunction.html#torch.jit.ScriptFunction", "torch.jit.ScriptFunction.get_debug_state()": "generated/torch.jit.scriptfunction.html#torch.jit.ScriptFunction.get_debug_state", "torch.jit.ScriptFunction.save()": "generated/torch.jit.scriptfunction.html#torch.jit.ScriptFunction.save", "torch.jit.ScriptFunction.save_to_buffer()": "generated/torch.jit.scriptfunction.html#torch.jit.ScriptFunction.save_to_buffer", "torch.jit.ScriptModule": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule", "torch.jit.ScriptModule.add_module()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.add_module", "torch.jit.ScriptModule.apply()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.apply", "torch.jit.ScriptModule.bfloat16()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.bfloat16", "torch.jit.ScriptModule.buffers()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.buffers", "torch.jit.ScriptModule.children()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.children", "torch.jit.ScriptModule.code": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.code", "torch.jit.ScriptModule.code_with_constants": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.code_with_constants", "torch.jit.ScriptModule.compile()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.compile", "torch.jit.ScriptModule.cpu()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.cpu", "torch.jit.ScriptModule.cuda()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.cuda", "torch.jit.ScriptModule.double()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.double", "torch.jit.ScriptModule.eval()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.eval", "torch.jit.ScriptModule.extra_repr()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.extra_repr", "torch.jit.ScriptModule.float()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.float", "torch.jit.ScriptModule.get_buffer()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.get_buffer", "torch.jit.ScriptModule.get_extra_state()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.get_extra_state", "torch.jit.ScriptModule.get_parameter()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.get_parameter", "torch.jit.ScriptModule.get_submodule()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.get_submodule", "torch.jit.ScriptModule.graph": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.graph", "torch.jit.ScriptModule.half()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.half", "torch.jit.ScriptModule.inlined_graph": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.inlined_graph", "torch.jit.ScriptModule.ipu()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.ipu", "torch.jit.ScriptModule.load_state_dict()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.load_state_dict", "torch.jit.ScriptModule.modules()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.modules", "torch.jit.ScriptModule.named_buffers()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.named_buffers", "torch.jit.ScriptModule.named_children()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.named_children", "torch.jit.ScriptModule.named_modules()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.named_modules", "torch.jit.ScriptModule.named_parameters()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.named_parameters", "torch.jit.ScriptModule.parameters()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.parameters", "torch.jit.ScriptModule.register_backward_hook()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.register_backward_hook", "torch.jit.ScriptModule.register_buffer()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.register_buffer", "torch.jit.ScriptModule.register_forward_hook()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.register_forward_hook", "torch.jit.ScriptModule.register_forward_pre_hook()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.register_forward_pre_hook", "torch.jit.ScriptModule.register_full_backward_hook()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.register_full_backward_hook", "torch.jit.ScriptModule.register_full_backward_pre_hook()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.register_full_backward_pre_hook", "torch.jit.ScriptModule.register_load_state_dict_post_hook()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.register_load_state_dict_post_hook", "torch.jit.ScriptModule.register_module()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.register_module", "torch.jit.ScriptModule.register_parameter()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.register_parameter", "torch.jit.ScriptModule.register_state_dict_pre_hook()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.register_state_dict_pre_hook", "torch.jit.ScriptModule.requires_grad_()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.requires_grad_", "torch.jit.ScriptModule.save()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.save", "torch.jit.ScriptModule.set_extra_state()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.set_extra_state", "torch.jit.ScriptModule.share_memory()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.share_memory", "torch.jit.ScriptModule.state_dict()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.state_dict", "torch.jit.ScriptModule.to()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.to", "torch.jit.ScriptModule.to_empty()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.to_empty", "torch.jit.ScriptModule.train()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.train", "torch.jit.ScriptModule.type()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.type", "torch.jit.ScriptModule.xpu()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.xpu", "torch.jit.ScriptModule.zero_grad()": "generated/torch.jit.scriptmodule.html#torch.jit.ScriptModule.zero_grad", "torch.jit.set_fusion_strategy()": "generated/torch.jit.set_fusion_strategy.html#torch.jit.set_fusion_strategy", "torch.jit.strict_fusion": "generated/torch.jit.strict_fusion.html#torch.jit.strict_fusion", "torch.jit.trace()": "generated/torch.jit.trace.html#torch.jit.trace", "torch.jit.trace_module()": "generated/torch.jit.trace_module.html#torch.jit.trace_module", "torch.jit.unused()": "generated/torch.jit.unused.html#torch.jit.unused", "torch.jit.wait()": "generated/torch.jit.wait.html#torch.jit.wait", "torch.kaiser_window": "generated/torch.kaiser_window.html", "torch.kron": "generated/torch.kron.html", "torch.kthvalue": "generated/torch.kthvalue.html", "torch.layout": "tensor_attributes.html#torch.layout", "torch.lcm": "generated/torch.lcm.html", "torch.ldexp": "generated/torch.ldexp.html", "torch.le": "generated/torch.le.html", "torch.lerp": "generated/torch.lerp.html", "torch.less": "generated/torch.less.html", "torch.less_equal": "generated/torch.less_equal.html", "torch.lgamma": "generated/torch.lgamma.html", "torch.library": "library.html", "torch.library.fallthrough_kernel()": "library.html#torch.library.fallthrough_kernel", "torch.library.Library": "library.html#torch.library.Library", "torch.library.Library.define()": "library.html#torch.library.Library.define", "torch.library.Library.impl()": "library.html#torch.library.Library.impl", "torch.linalg": "linalg.html", "torch.linalg.cholesky()": "generated/torch.linalg.cholesky.html#torch.linalg.cholesky", "torch.linalg.cholesky_ex()": "generated/torch.linalg.cholesky_ex.html#torch.linalg.cholesky_ex", "torch.linalg.cond()": "generated/torch.linalg.cond.html#torch.linalg.cond", "torch.linalg.cross()": "generated/torch.linalg.cross.html#torch.linalg.cross", "torch.linalg.det()": "generated/torch.linalg.det.html#torch.linalg.det", "torch.linalg.diagonal()": "generated/torch.linalg.diagonal.html#torch.linalg.diagonal", "torch.linalg.eig()": "generated/torch.linalg.eig.html#torch.linalg.eig", "torch.linalg.eigh()": "generated/torch.linalg.eigh.html#torch.linalg.eigh", "torch.linalg.eigvals()": "generated/torch.linalg.eigvals.html#torch.linalg.eigvals", "torch.linalg.eigvalsh()": "generated/torch.linalg.eigvalsh.html#torch.linalg.eigvalsh", "torch.linalg.householder_product()": "generated/torch.linalg.householder_product.html#torch.linalg.householder_product", "torch.linalg.inv()": "generated/torch.linalg.inv.html#torch.linalg.inv", "torch.linalg.inv_ex()": "generated/torch.linalg.inv_ex.html#torch.linalg.inv_ex", "torch.linalg.ldl_factor()": "generated/torch.linalg.ldl_factor.html#torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex()": "generated/torch.linalg.ldl_factor_ex.html#torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve()": "generated/torch.linalg.ldl_solve.html#torch.linalg.ldl_solve", "torch.linalg.lstsq()": "generated/torch.linalg.lstsq.html#torch.linalg.lstsq", "torch.linalg.lu()": "generated/torch.linalg.lu.html#torch.linalg.lu", "torch.linalg.lu_factor()": "generated/torch.linalg.lu_factor.html#torch.linalg.lu_factor", "torch.linalg.lu_factor_ex()": "generated/torch.linalg.lu_factor_ex.html#torch.linalg.lu_factor_ex", "torch.linalg.lu_solve()": "generated/torch.linalg.lu_solve.html#torch.linalg.lu_solve", "torch.linalg.matmul()": "generated/torch.linalg.matmul.html#torch.linalg.matmul", "torch.linalg.matrix_exp()": "generated/torch.linalg.matrix_exp.html#torch.linalg.matrix_exp", "torch.linalg.matrix_norm()": "generated/torch.linalg.matrix_norm.html#torch.linalg.matrix_norm", "torch.linalg.matrix_power()": "generated/torch.linalg.matrix_power.html#torch.linalg.matrix_power", "torch.linalg.matrix_rank()": "generated/torch.linalg.matrix_rank.html#torch.linalg.matrix_rank", "torch.linalg.multi_dot()": "generated/torch.linalg.multi_dot.html#torch.linalg.multi_dot", "torch.linalg.norm()": "generated/torch.linalg.norm.html#torch.linalg.norm", "torch.linalg.pinv()": "generated/torch.linalg.pinv.html#torch.linalg.pinv", "torch.linalg.qr()": "generated/torch.linalg.qr.html#torch.linalg.qr", "torch.linalg.slogdet()": "generated/torch.linalg.slogdet.html#torch.linalg.slogdet", "torch.linalg.solve()": "generated/torch.linalg.solve.html#torch.linalg.solve", "torch.linalg.solve_ex()": "generated/torch.linalg.solve_ex.html#torch.linalg.solve_ex", "torch.linalg.solve_triangular()": "generated/torch.linalg.solve_triangular.html#torch.linalg.solve_triangular", "torch.linalg.svd()": "generated/torch.linalg.svd.html#torch.linalg.svd", "torch.linalg.svdvals()": "generated/torch.linalg.svdvals.html#torch.linalg.svdvals", "torch.linalg.tensorinv()": "generated/torch.linalg.tensorinv.html#torch.linalg.tensorinv", "torch.linalg.tensorsolve()": "generated/torch.linalg.tensorsolve.html#torch.linalg.tensorsolve", "torch.linalg.torch.linalg.cholesky": "generated/torch.linalg.cholesky.html", "torch.linalg.torch.linalg.cholesky_ex": "generated/torch.linalg.cholesky_ex.html", "torch.linalg.torch.linalg.cond": "generated/torch.linalg.cond.html", "torch.linalg.torch.linalg.cross": "generated/torch.linalg.cross.html", "torch.linalg.torch.linalg.det": "generated/torch.linalg.det.html", "torch.linalg.torch.linalg.diagonal": "generated/torch.linalg.diagonal.html", "torch.linalg.torch.linalg.eig": "generated/torch.linalg.eig.html", "torch.linalg.torch.linalg.eigh": "generated/torch.linalg.eigh.html", "torch.linalg.torch.linalg.eigvals": "generated/torch.linalg.eigvals.html", "torch.linalg.torch.linalg.eigvalsh": "generated/torch.linalg.eigvalsh.html", "torch.linalg.torch.linalg.householder_product": "generated/torch.linalg.householder_product.html", "torch.linalg.torch.linalg.inv": "generated/torch.linalg.inv.html", "torch.linalg.torch.linalg.inv_ex": "generated/torch.linalg.inv_ex.html", "torch.linalg.torch.linalg.ldl_factor": "generated/torch.linalg.ldl_factor.html", "torch.linalg.torch.linalg.ldl_factor_ex": "generated/torch.linalg.ldl_factor_ex.html", "torch.linalg.torch.linalg.ldl_solve": "generated/torch.linalg.ldl_solve.html", "torch.linalg.torch.linalg.lstsq": "generated/torch.linalg.lstsq.html", "torch.linalg.torch.linalg.lu": "generated/torch.linalg.lu.html", "torch.linalg.torch.linalg.lu_factor": "generated/torch.linalg.lu_factor.html", "torch.linalg.torch.linalg.lu_factor_ex": "generated/torch.linalg.lu_factor_ex.html", "torch.linalg.torch.linalg.lu_solve": "generated/torch.linalg.lu_solve.html", "torch.linalg.torch.linalg.matmul": "generated/torch.linalg.matmul.html", "torch.linalg.torch.linalg.matrix_exp": "generated/torch.linalg.matrix_exp.html", "torch.linalg.torch.linalg.matrix_norm": "generated/torch.linalg.matrix_norm.html", "torch.linalg.torch.linalg.matrix_power": "generated/torch.linalg.matrix_power.html", "torch.linalg.torch.linalg.matrix_rank": "generated/torch.linalg.matrix_rank.html", "torch.linalg.torch.linalg.multi_dot": "generated/torch.linalg.multi_dot.html", "torch.linalg.torch.linalg.norm": "generated/torch.linalg.norm.html", "torch.linalg.torch.linalg.pinv": "generated/torch.linalg.pinv.html", "torch.linalg.torch.linalg.qr": "generated/torch.linalg.qr.html", "torch.linalg.torch.linalg.slogdet": "generated/torch.linalg.slogdet.html", "torch.linalg.torch.linalg.solve": "generated/torch.linalg.solve.html", "torch.linalg.torch.linalg.solve_ex": "generated/torch.linalg.solve_ex.html", "torch.linalg.torch.linalg.solve_triangular": "generated/torch.linalg.solve_triangular.html", "torch.linalg.torch.linalg.svd": "generated/torch.linalg.svd.html", "torch.linalg.torch.linalg.svdvals": "generated/torch.linalg.svdvals.html", "torch.linalg.torch.linalg.tensorinv": "generated/torch.linalg.tensorinv.html", "torch.linalg.torch.linalg.tensorsolve": "generated/torch.linalg.tensorsolve.html", "torch.linalg.torch.linalg.vander": "generated/torch.linalg.vander.html", "torch.linalg.torch.linalg.vecdot": "generated/torch.linalg.vecdot.html", "torch.linalg.torch.linalg.vector_norm": "generated/torch.linalg.vector_norm.html", "torch.linalg.vander()": "generated/torch.linalg.vander.html#torch.linalg.vander", "torch.linalg.vecdot()": "generated/torch.linalg.vecdot.html#torch.linalg.vecdot", "torch.linalg.vector_norm()": "generated/torch.linalg.vector_norm.html#torch.linalg.vector_norm", "torch.linspace": "generated/torch.linspace.html", "torch.load": "generated/torch.load.html", "torch.lobpcg": "generated/torch.lobpcg.html", "torch.log": "generated/torch.log.html", "torch.log10": "generated/torch.log10.html", "torch.log1p": "generated/torch.log1p.html", "torch.log2": "generated/torch.log2.html", "torch.logaddexp": "generated/torch.logaddexp.html", "torch.logaddexp2": "generated/torch.logaddexp2.html", "torch.logcumsumexp": "generated/torch.logcumsumexp.html", "torch.logdet": "generated/torch.logdet.html", "torch.logical_and": "generated/torch.logical_and.html", "torch.logical_not": "generated/torch.logical_not.html", "torch.logical_or": "generated/torch.logical_or.html", "torch.logical_xor": "generated/torch.logical_xor.html", "torch.logit": "generated/torch.logit.html", "torch.logspace": "generated/torch.logspace.html", "torch.logsumexp": "generated/torch.logsumexp.html", "torch.LongStorage": "storage.html#torch.LongStorage", "torch.LongStorage.dtype": "storage.html#torch.LongStorage.dtype", "torch.lt": "generated/torch.lt.html", "torch.lu": "generated/torch.lu.html", "torch.lu_solve": "generated/torch.lu_solve.html", "torch.lu_unpack": "generated/torch.lu_unpack.html", "torch.manual_seed": "generated/torch.manual_seed.html", "torch.masked": "masked.html", "torch.masked_select": "generated/torch.masked_select.html", "torch.matmul": "generated/torch.matmul.html", "torch.matrix_exp": "generated/torch.matrix_exp.html", "torch.matrix_power": "generated/torch.matrix_power.html", "torch.max": "generated/torch.max.html", "torch.maximum": "generated/torch.maximum.html", "torch.mean": "generated/torch.mean.html", "torch.median": "generated/torch.median.html", "torch.memory_format": "tensor_attributes.html#torch.memory_format", "torch.meshgrid": "generated/torch.meshgrid.html", "torch.min": "generated/torch.min.html", "torch.minimum": "generated/torch.minimum.html", "torch.mm": "generated/torch.mm.html", "torch.mode": "generated/torch.mode.html", "torch.monitor": "monitor.html", "torch.monitor.Aggregation": "monitor.html#torch.monitor.Aggregation", "torch.monitor.Aggregation.name": "monitor.html#torch.monitor.Aggregation.name", "torch.monitor.data_value_t": "monitor.html#torch.monitor.data_value_t", "torch.monitor.Event": "monitor.html#torch.monitor.Event", "torch.monitor.Event.__init__()": "monitor.html#torch.monitor.Event.__init__", "torch.monitor.Event.data": "monitor.html#torch.monitor.Event.data", "torch.monitor.Event.name": "monitor.html#torch.monitor.Event.name", "torch.monitor.Event.timestamp": "monitor.html#torch.monitor.Event.timestamp", "torch.monitor.EventHandlerHandle": "monitor.html#torch.monitor.EventHandlerHandle", "torch.monitor.log_event()": "monitor.html#torch.monitor.log_event", "torch.monitor.register_event_handler()": "monitor.html#torch.monitor.register_event_handler", "torch.monitor.Stat": "monitor.html#torch.monitor.Stat", "torch.monitor.Stat.__init__()": "monitor.html#torch.monitor.Stat.__init__", "torch.monitor.Stat.add()": "monitor.html#torch.monitor.Stat.add", "torch.monitor.Stat.count": "monitor.html#torch.monitor.Stat.count", "torch.monitor.Stat.get()": "monitor.html#torch.monitor.Stat.get", "torch.monitor.Stat.name": "monitor.html#torch.monitor.Stat.name", "torch.monitor.TensorboardEventHandler": "monitor.html#torch.monitor.TensorboardEventHandler", "torch.monitor.TensorboardEventHandler.__init__()": "monitor.html#torch.monitor.TensorboardEventHandler.__init__", "torch.monitor.unregister_event_handler()": "monitor.html#torch.monitor.unregister_event_handler", "torch.moveaxis": "generated/torch.moveaxis.html", "torch.movedim": "generated/torch.movedim.html", "torch.mps": "mps.html", "torch.mps.current_allocated_memory()": "generated/torch.mps.current_allocated_memory.html#torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory()": "generated/torch.mps.driver_allocated_memory.html#torch.mps.driver_allocated_memory", "torch.mps.empty_cache()": "generated/torch.mps.empty_cache.html#torch.mps.empty_cache", "torch.mps.Event": "generated/torch.mps.event.event.html", "torch.mps.event.Event": "generated/torch.mps.event.event.html#torch.mps.event.Event", "torch.mps.event.Event.elapsed_time()": "generated/torch.mps.event.event.html#torch.mps.event.Event.elapsed_time", "torch.mps.event.Event.query()": "generated/torch.mps.event.event.html#torch.mps.event.Event.query", "torch.mps.event.Event.record()": "generated/torch.mps.event.event.html#torch.mps.event.Event.record", "torch.mps.event.Event.synchronize()": "generated/torch.mps.event.event.html#torch.mps.event.Event.synchronize", "torch.mps.event.Event.wait()": "generated/torch.mps.event.event.html#torch.mps.event.Event.wait", "torch.mps.get_rng_state()": "generated/torch.mps.get_rng_state.html#torch.mps.get_rng_state", "torch.mps.manual_seed()": "generated/torch.mps.manual_seed.html#torch.mps.manual_seed", "torch.mps.profiler.profile()": "generated/torch.mps.profiler.profile.html#torch.mps.profiler.profile", "torch.mps.profiler.start()": "generated/torch.mps.profiler.start.html#torch.mps.profiler.start", "torch.mps.profiler.stop()": "generated/torch.mps.profiler.stop.html#torch.mps.profiler.stop", "torch.mps.seed()": "generated/torch.mps.seed.html#torch.mps.seed", "torch.mps.set_per_process_memory_fraction()": "generated/torch.mps.set_per_process_memory_fraction.html#torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state()": "generated/torch.mps.set_rng_state.html#torch.mps.set_rng_state", "torch.mps.synchronize()": "generated/torch.mps.synchronize.html#torch.mps.synchronize", "torch.mps.torch.mps.current_allocated_memory": "generated/torch.mps.current_allocated_memory.html", "torch.mps.torch.mps.driver_allocated_memory": "generated/torch.mps.driver_allocated_memory.html", "torch.mps.torch.mps.empty_cache": "generated/torch.mps.empty_cache.html", "torch.mps.torch.mps.get_rng_state": "generated/torch.mps.get_rng_state.html", "torch.mps.torch.mps.manual_seed": "generated/torch.mps.manual_seed.html", "torch.mps.torch.mps.profiler.profile": "generated/torch.mps.profiler.profile.html", "torch.mps.torch.mps.profiler.start": "generated/torch.mps.profiler.start.html", "torch.mps.torch.mps.profiler.stop": "generated/torch.mps.profiler.stop.html", "torch.mps.torch.mps.seed": "generated/torch.mps.seed.html", "torch.mps.torch.mps.set_per_process_memory_fraction": "generated/torch.mps.set_per_process_memory_fraction.html", "torch.mps.torch.mps.set_rng_state": "generated/torch.mps.set_rng_state.html", "torch.mps.torch.mps.synchronize": "generated/torch.mps.synchronize.html", "torch.msort": "generated/torch.msort.html", "torch.mul": "generated/torch.mul.html", "torch.multinomial": "generated/torch.multinomial.html", "torch.multiply": "generated/torch.multiply.html", "torch.multiprocessing.get_all_sharing_strategies()": "multiprocessing.html#torch.multiprocessing.get_all_sharing_strategies", "torch.multiprocessing.get_sharing_strategy()": "multiprocessing.html#torch.multiprocessing.get_sharing_strategy", "torch.multiprocessing.set_sharing_strategy()": "multiprocessing.html#torch.multiprocessing.set_sharing_strategy", "torch.multiprocessing.spawn()": "multiprocessing.html#torch.multiprocessing.spawn", "torch.multiprocessing.SpawnContext": "multiprocessing.html#torch.multiprocessing.SpawnContext", "torch.multiprocessing.SpawnContext.join()": "multiprocessing.html#torch.multiprocessing.SpawnContext.join", "torch.mv": "generated/torch.mv.html", "torch.mvlgamma": "generated/torch.mvlgamma.html", "torch.nan_to_num": "generated/torch.nan_to_num.html", "torch.nanmean": "generated/torch.nanmean.html", "torch.nanmedian": "generated/torch.nanmedian.html", "torch.nanquantile": "generated/torch.nanquantile.html", "torch.nansum": "generated/torch.nansum.html", "torch.narrow": "generated/torch.narrow.html", "torch.narrow_copy": "generated/torch.narrow_copy.html", "torch.ne": "generated/torch.ne.html", "torch.neg": "generated/torch.neg.html", "torch.negative": "generated/torch.negative.html", "torch.nested": "nested.html", "torch.nested.as_nested_tensor()": "nested.html#torch.nested.as_nested_tensor", "torch.nested.nested_tensor()": "nested.html#torch.nested.nested_tensor", "torch.nested.to_padded_tensor()": "nested.html#torch.nested.to_padded_tensor", "torch.nextafter": "generated/torch.nextafter.html", "torch.nn": "nn.html", "torch.nn.AdaptiveAvgPool1d": "generated/torch.nn.adaptiveavgpool1d.html", "torch.nn.AdaptiveAvgPool2d": "generated/torch.nn.adaptiveavgpool2d.html", "torch.nn.AdaptiveAvgPool3d": "generated/torch.nn.adaptiveavgpool3d.html", "torch.nn.AdaptiveLogSoftmaxWithLoss": "generated/torch.nn.adaptivelogsoftmaxwithloss.html", "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob()": "generated/torch.nn.adaptivelogsoftmaxwithloss.html#torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob", "torch.nn.AdaptiveLogSoftmaxWithLoss.predict()": "generated/torch.nn.adaptivelogsoftmaxwithloss.html#torch.nn.AdaptiveLogSoftmaxWithLoss.predict", "torch.nn.AdaptiveMaxPool1d": "generated/torch.nn.adaptivemaxpool1d.html", "torch.nn.AdaptiveMaxPool2d": "generated/torch.nn.adaptivemaxpool2d.html", "torch.nn.AdaptiveMaxPool3d": "generated/torch.nn.adaptivemaxpool3d.html", "torch.nn.AlphaDropout": "generated/torch.nn.alphadropout.html", "torch.nn.AvgPool1d": "generated/torch.nn.avgpool1d.html", "torch.nn.AvgPool2d": "generated/torch.nn.avgpool2d.html", "torch.nn.AvgPool3d": "generated/torch.nn.avgpool3d.html", "torch.nn.BasePruningMethod": "generated/torch.nn.utils.prune.basepruningmethod.html", "torch.nn.BatchNorm1d": "generated/torch.nn.batchnorm1d.html", "torch.nn.BatchNorm2d": "generated/torch.nn.batchnorm2d.html", "torch.nn.BatchNorm3d": "generated/torch.nn.batchnorm3d.html", "torch.nn.BCELoss": "generated/torch.nn.bceloss.html", "torch.nn.BCEWithLogitsLoss": "generated/torch.nn.bcewithlogitsloss.html", "torch.nn.Bilinear": "generated/torch.nn.bilinear.html", "torch.nn.CELU": "generated/torch.nn.celu.html", "torch.nn.ChannelShuffle": "generated/torch.nn.channelshuffle.html", "torch.nn.ConstantPad1d": "generated/torch.nn.constantpad1d.html", "torch.nn.ConstantPad2d": "generated/torch.nn.constantpad2d.html", "torch.nn.ConstantPad3d": "generated/torch.nn.constantpad3d.html", "torch.nn.Conv1d": "generated/torch.nn.conv1d.html", "torch.nn.Conv2d": "generated/torch.nn.conv2d.html", "torch.nn.Conv3d": "generated/torch.nn.conv3d.html", "torch.nn.ConvTranspose1d": "generated/torch.nn.convtranspose1d.html", "torch.nn.ConvTranspose2d": "generated/torch.nn.convtranspose2d.html", "torch.nn.ConvTranspose3d": "generated/torch.nn.convtranspose3d.html", "torch.nn.CosineEmbeddingLoss": "generated/torch.nn.cosineembeddingloss.html", "torch.nn.CosineSimilarity": "generated/torch.nn.cosinesimilarity.html", "torch.nn.CrossEntropyLoss": "generated/torch.nn.crossentropyloss.html", "torch.nn.CTCLoss": "generated/torch.nn.ctcloss.html", "torch.nn.CustomFromMask": "generated/torch.nn.utils.prune.customfrommask.html", "torch.nn.DataParallel": "generated/torch.nn.dataparallel.html", "torch.nn.DistributedDataParallel": "generated/torch.nn.parallel.distributeddataparallel.html", "torch.nn.Dropout": "generated/torch.nn.dropout.html", "torch.nn.Dropout1d": "generated/torch.nn.dropout1d.html", "torch.nn.Dropout2d": "generated/torch.nn.dropout2d.html", "torch.nn.Dropout3d": "generated/torch.nn.dropout3d.html", "torch.nn.ELU": "generated/torch.nn.elu.html", "torch.nn.Embedding": "generated/torch.nn.embedding.html", "torch.nn.Embedding.from_pretrained()": "generated/torch.nn.embedding.html#torch.nn.Embedding.from_pretrained", "torch.nn.EmbeddingBag": "generated/torch.nn.embeddingbag.html", "torch.nn.EmbeddingBag.forward()": "generated/torch.nn.embeddingbag.html#torch.nn.EmbeddingBag.forward", "torch.nn.EmbeddingBag.from_pretrained()": "generated/torch.nn.embeddingbag.html#torch.nn.EmbeddingBag.from_pretrained", "torch.nn.FeatureAlphaDropout": "generated/torch.nn.featurealphadropout.html", "torch.nn.Flatten": "generated/torch.nn.flatten.html", "torch.nn.Fold": "generated/torch.nn.fold.html", "torch.nn.FractionalMaxPool2d": "generated/torch.nn.fractionalmaxpool2d.html", "torch.nn.FractionalMaxPool3d": "generated/torch.nn.fractionalmaxpool3d.html", "torch.nn.functional": "nn.functional.html", "torch.nn.functional.adaptive_avg_pool1d()": "generated/torch.nn.functional.adaptive_avg_pool1d.html#torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d()": "generated/torch.nn.functional.adaptive_avg_pool2d.html#torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d()": "generated/torch.nn.functional.adaptive_avg_pool3d.html#torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d()": "generated/torch.nn.functional.adaptive_max_pool1d.html#torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d()": "generated/torch.nn.functional.adaptive_max_pool2d.html#torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d()": "generated/torch.nn.functional.adaptive_max_pool3d.html#torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid()": "generated/torch.nn.functional.affine_grid.html#torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout()": "generated/torch.nn.functional.alpha_dropout.html#torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d()": "generated/torch.nn.functional.avg_pool1d.html#torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d()": "generated/torch.nn.functional.avg_pool2d.html#torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d()": "generated/torch.nn.functional.avg_pool3d.html#torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm()": "generated/torch.nn.functional.batch_norm.html#torch.nn.functional.batch_norm", "torch.nn.functional.bilinear()": "generated/torch.nn.functional.bilinear.html#torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy()": "generated/torch.nn.functional.binary_cross_entropy.html#torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits()": "generated/torch.nn.functional.binary_cross_entropy_with_logits.html#torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu()": "generated/torch.nn.functional.celu.html#torch.nn.functional.celu", "torch.nn.functional.conv1d()": "generated/torch.nn.functional.conv1d.html#torch.nn.functional.conv1d", "torch.nn.functional.conv2d()": "generated/torch.nn.functional.conv2d.html#torch.nn.functional.conv2d", "torch.nn.functional.conv3d()": "generated/torch.nn.functional.conv3d.html#torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d()": "generated/torch.nn.functional.conv_transpose1d.html#torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d()": "generated/torch.nn.functional.conv_transpose2d.html#torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d()": "generated/torch.nn.functional.conv_transpose3d.html#torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss()": "generated/torch.nn.functional.cosine_embedding_loss.html#torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity()": "generated/torch.nn.functional.cosine_similarity.html#torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy()": "generated/torch.nn.functional.cross_entropy.html#torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss()": "generated/torch.nn.functional.ctc_loss.html#torch.nn.functional.ctc_loss", "torch.nn.functional.dropout()": "generated/torch.nn.functional.dropout.html#torch.nn.functional.dropout", "torch.nn.functional.dropout1d()": "generated/torch.nn.functional.dropout1d.html#torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d()": "generated/torch.nn.functional.dropout2d.html#torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d()": "generated/torch.nn.functional.dropout3d.html#torch.nn.functional.dropout3d", "torch.nn.functional.elu()": "generated/torch.nn.functional.elu.html#torch.nn.functional.elu", "torch.nn.functional.elu_()": "generated/torch.nn.functional.elu_.html#torch.nn.functional.elu_", "torch.nn.functional.embedding()": "generated/torch.nn.functional.embedding.html#torch.nn.functional.embedding", "torch.nn.functional.embedding_bag()": "generated/torch.nn.functional.embedding_bag.html#torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout()": "generated/torch.nn.functional.feature_alpha_dropout.html#torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold()": "generated/torch.nn.functional.fold.html#torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d()": "generated/torch.nn.functional.fractional_max_pool2d.html#torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d()": "generated/torch.nn.functional.fractional_max_pool3d.html#torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss()": "generated/torch.nn.functional.gaussian_nll_loss.html#torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu()": "generated/torch.nn.functional.gelu.html#torch.nn.functional.gelu", "torch.nn.functional.glu()": "generated/torch.nn.functional.glu.html#torch.nn.functional.glu", "torch.nn.functional.grid_sample()": "generated/torch.nn.functional.grid_sample.html#torch.nn.functional.grid_sample", "torch.nn.functional.group_norm()": "generated/torch.nn.functional.group_norm.html#torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax()": "generated/torch.nn.functional.gumbel_softmax.html#torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink()": "generated/torch.nn.functional.hardshrink.html#torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid()": "generated/torch.nn.functional.hardsigmoid.html#torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish()": "generated/torch.nn.functional.hardswish.html#torch.nn.functional.hardswish", "torch.nn.functional.hardtanh()": "generated/torch.nn.functional.hardtanh.html#torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_()": "generated/torch.nn.functional.hardtanh_.html#torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss()": "generated/torch.nn.functional.hinge_embedding_loss.html#torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss()": "generated/torch.nn.functional.huber_loss.html#torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm()": "generated/torch.nn.functional.instance_norm.html#torch.nn.functional.instance_norm", "torch.nn.functional.interpolate()": "generated/torch.nn.functional.interpolate.html#torch.nn.functional.interpolate", "torch.nn.functional.kl_div()": "generated/torch.nn.functional.kl_div.html#torch.nn.functional.kl_div", "torch.nn.functional.l1_loss()": "generated/torch.nn.functional.l1_loss.html#torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm()": "generated/torch.nn.functional.layer_norm.html#torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu()": "generated/torch.nn.functional.leaky_relu.html#torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_()": "generated/torch.nn.functional.leaky_relu_.html#torch.nn.functional.leaky_relu_", "torch.nn.functional.linear()": "generated/torch.nn.functional.linear.html#torch.nn.functional.linear", "torch.nn.functional.local_response_norm()": "generated/torch.nn.functional.local_response_norm.html#torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax()": "generated/torch.nn.functional.log_softmax.html#torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid()": "generated/torch.nn.functional.logsigmoid.html#torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d()": "generated/torch.nn.functional.lp_pool1d.html#torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d()": "generated/torch.nn.functional.lp_pool2d.html#torch.nn.functional.lp_pool2d", "torch.nn.functional.margin_ranking_loss()": "generated/torch.nn.functional.margin_ranking_loss.html#torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d()": "generated/torch.nn.functional.max_pool1d.html#torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d()": "generated/torch.nn.functional.max_pool2d.html#torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d()": "generated/torch.nn.functional.max_pool3d.html#torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d()": "generated/torch.nn.functional.max_unpool1d.html#torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d()": "generated/torch.nn.functional.max_unpool2d.html#torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d()": "generated/torch.nn.functional.max_unpool3d.html#torch.nn.functional.max_unpool3d", "torch.nn.functional.mish()": "generated/torch.nn.functional.mish.html#torch.nn.functional.mish", "torch.nn.functional.mse_loss()": "generated/torch.nn.functional.mse_loss.html#torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss()": "generated/torch.nn.functional.multi_margin_loss.html#torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss()": "generated/torch.nn.functional.multilabel_margin_loss.html#torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss()": "generated/torch.nn.functional.multilabel_soft_margin_loss.html#torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss()": "generated/torch.nn.functional.nll_loss.html#torch.nn.functional.nll_loss", "torch.nn.functional.normalize()": "generated/torch.nn.functional.normalize.html#torch.nn.functional.normalize", "torch.nn.functional.one_hot()": "generated/torch.nn.functional.one_hot.html#torch.nn.functional.one_hot", "torch.nn.functional.pad()": "generated/torch.nn.functional.pad.html#torch.nn.functional.pad", "torch.nn.functional.pairwise_distance()": "generated/torch.nn.functional.pairwise_distance.html#torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist()": "generated/torch.nn.functional.pdist.html#torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle()": "generated/torch.nn.functional.pixel_shuffle.html#torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle()": "generated/torch.nn.functional.pixel_unshuffle.html#torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss()": "generated/torch.nn.functional.poisson_nll_loss.html#torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu()": "generated/torch.nn.functional.prelu.html#torch.nn.functional.prelu", "torch.nn.functional.relu()": "generated/torch.nn.functional.relu.html#torch.nn.functional.relu", "torch.nn.functional.relu6()": "generated/torch.nn.functional.relu6.html#torch.nn.functional.relu6", "torch.nn.functional.relu_()": "generated/torch.nn.functional.relu_.html#torch.nn.functional.relu_", "torch.nn.functional.rrelu()": "generated/torch.nn.functional.rrelu.html#torch.nn.functional.rrelu", "torch.nn.functional.rrelu_()": "generated/torch.nn.functional.rrelu_.html#torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention()": "generated/torch.nn.functional.scaled_dot_product_attention.html#torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu()": "generated/torch.nn.functional.selu.html#torch.nn.functional.selu", "torch.nn.functional.sigmoid()": "generated/torch.nn.functional.sigmoid.html#torch.nn.functional.sigmoid", "torch.nn.functional.silu()": "generated/torch.nn.functional.silu.html#torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss()": "generated/torch.nn.functional.smooth_l1_loss.html#torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss()": "generated/torch.nn.functional.soft_margin_loss.html#torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax()": "generated/torch.nn.functional.softmax.html#torch.nn.functional.softmax", "torch.nn.functional.softmin()": "generated/torch.nn.functional.softmin.html#torch.nn.functional.softmin", "torch.nn.functional.softplus()": "generated/torch.nn.functional.softplus.html#torch.nn.functional.softplus", "torch.nn.functional.softshrink()": "generated/torch.nn.functional.softshrink.html#torch.nn.functional.softshrink", "torch.nn.functional.softsign()": "generated/torch.nn.functional.softsign.html#torch.nn.functional.softsign", "torch.nn.functional.tanh()": "generated/torch.nn.functional.tanh.html#torch.nn.functional.tanh", "torch.nn.functional.tanhshrink()": "generated/torch.nn.functional.tanhshrink.html#torch.nn.functional.tanhshrink", "torch.nn.functional.threshold()": "generated/torch.nn.functional.threshold.html#torch.nn.functional.threshold", "torch.nn.functional.threshold_()": "generated/torch.nn.functional.threshold_.html#torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.functional.adaptive_avg_pool1d": "generated/torch.nn.functional.adaptive_avg_pool1d.html", "torch.nn.functional.torch.nn.functional.adaptive_avg_pool2d": "generated/torch.nn.functional.adaptive_avg_pool2d.html", "torch.nn.functional.torch.nn.functional.adaptive_avg_pool3d": "generated/torch.nn.functional.adaptive_avg_pool3d.html", "torch.nn.functional.torch.nn.functional.adaptive_max_pool1d": "generated/torch.nn.functional.adaptive_max_pool1d.html", "torch.nn.functional.torch.nn.functional.adaptive_max_pool2d": "generated/torch.nn.functional.adaptive_max_pool2d.html", "torch.nn.functional.torch.nn.functional.adaptive_max_pool3d": "generated/torch.nn.functional.adaptive_max_pool3d.html", "torch.nn.functional.torch.nn.functional.affine_grid": "generated/torch.nn.functional.affine_grid.html", "torch.nn.functional.torch.nn.functional.alpha_dropout": "generated/torch.nn.functional.alpha_dropout.html", "torch.nn.functional.torch.nn.functional.avg_pool1d": "generated/torch.nn.functional.avg_pool1d.html", "torch.nn.functional.torch.nn.functional.avg_pool2d": "generated/torch.nn.functional.avg_pool2d.html", "torch.nn.functional.torch.nn.functional.avg_pool3d": "generated/torch.nn.functional.avg_pool3d.html", "torch.nn.functional.torch.nn.functional.batch_norm": "generated/torch.nn.functional.batch_norm.html", "torch.nn.functional.torch.nn.functional.bilinear": "generated/torch.nn.functional.bilinear.html", "torch.nn.functional.torch.nn.functional.binary_cross_entropy": "generated/torch.nn.functional.binary_cross_entropy.html", "torch.nn.functional.torch.nn.functional.binary_cross_entropy_with_logits": "generated/torch.nn.functional.binary_cross_entropy_with_logits.html", "torch.nn.functional.torch.nn.functional.celu": "generated/torch.nn.functional.celu.html", "torch.nn.functional.torch.nn.functional.conv1d": "generated/torch.nn.functional.conv1d.html", "torch.nn.functional.torch.nn.functional.conv2d": "generated/torch.nn.functional.conv2d.html", "torch.nn.functional.torch.nn.functional.conv3d": "generated/torch.nn.functional.conv3d.html", "torch.nn.functional.torch.nn.functional.conv_transpose1d": "generated/torch.nn.functional.conv_transpose1d.html", "torch.nn.functional.torch.nn.functional.conv_transpose2d": "generated/torch.nn.functional.conv_transpose2d.html", "torch.nn.functional.torch.nn.functional.conv_transpose3d": "generated/torch.nn.functional.conv_transpose3d.html", "torch.nn.functional.torch.nn.functional.cosine_embedding_loss": "generated/torch.nn.functional.cosine_embedding_loss.html", "torch.nn.functional.torch.nn.functional.cosine_similarity": "generated/torch.nn.functional.cosine_similarity.html", "torch.nn.functional.torch.nn.functional.cross_entropy": "generated/torch.nn.functional.cross_entropy.html", "torch.nn.functional.torch.nn.functional.ctc_loss": "generated/torch.nn.functional.ctc_loss.html", "torch.nn.functional.torch.nn.functional.dropout": "generated/torch.nn.functional.dropout.html", "torch.nn.functional.torch.nn.functional.dropout1d": "generated/torch.nn.functional.dropout1d.html", "torch.nn.functional.torch.nn.functional.dropout2d": "generated/torch.nn.functional.dropout2d.html", "torch.nn.functional.torch.nn.functional.dropout3d": "generated/torch.nn.functional.dropout3d.html", "torch.nn.functional.torch.nn.functional.elu": "generated/torch.nn.functional.elu.html", "torch.nn.functional.torch.nn.functional.elu_": "generated/torch.nn.functional.elu_.html", "torch.nn.functional.torch.nn.functional.embedding": "generated/torch.nn.functional.embedding.html", "torch.nn.functional.torch.nn.functional.embedding_bag": "generated/torch.nn.functional.embedding_bag.html", "torch.nn.functional.torch.nn.functional.feature_alpha_dropout": "generated/torch.nn.functional.feature_alpha_dropout.html", "torch.nn.functional.torch.nn.functional.fold": "generated/torch.nn.functional.fold.html", "torch.nn.functional.torch.nn.functional.fractional_max_pool2d": "generated/torch.nn.functional.fractional_max_pool2d.html", "torch.nn.functional.torch.nn.functional.fractional_max_pool3d": "generated/torch.nn.functional.fractional_max_pool3d.html", "torch.nn.functional.torch.nn.functional.gaussian_nll_loss": "generated/torch.nn.functional.gaussian_nll_loss.html", "torch.nn.functional.torch.nn.functional.gelu": "generated/torch.nn.functional.gelu.html", "torch.nn.functional.torch.nn.functional.glu": "generated/torch.nn.functional.glu.html", "torch.nn.functional.torch.nn.functional.grid_sample": "generated/torch.nn.functional.grid_sample.html", "torch.nn.functional.torch.nn.functional.group_norm": "generated/torch.nn.functional.group_norm.html", "torch.nn.functional.torch.nn.functional.gumbel_softmax": "generated/torch.nn.functional.gumbel_softmax.html", "torch.nn.functional.torch.nn.functional.hardshrink": "generated/torch.nn.functional.hardshrink.html", "torch.nn.functional.torch.nn.functional.hardsigmoid": "generated/torch.nn.functional.hardsigmoid.html", "torch.nn.functional.torch.nn.functional.hardswish": "generated/torch.nn.functional.hardswish.html", "torch.nn.functional.torch.nn.functional.hardtanh": "generated/torch.nn.functional.hardtanh.html", "torch.nn.functional.torch.nn.functional.hardtanh_": "generated/torch.nn.functional.hardtanh_.html", "torch.nn.functional.torch.nn.functional.hinge_embedding_loss": "generated/torch.nn.functional.hinge_embedding_loss.html", "torch.nn.functional.torch.nn.functional.huber_loss": "generated/torch.nn.functional.huber_loss.html", "torch.nn.functional.torch.nn.functional.instance_norm": "generated/torch.nn.functional.instance_norm.html", "torch.nn.functional.torch.nn.functional.interpolate": "generated/torch.nn.functional.interpolate.html", "torch.nn.functional.torch.nn.functional.kl_div": "generated/torch.nn.functional.kl_div.html", "torch.nn.functional.torch.nn.functional.l1_loss": "generated/torch.nn.functional.l1_loss.html", "torch.nn.functional.torch.nn.functional.layer_norm": "generated/torch.nn.functional.layer_norm.html", "torch.nn.functional.torch.nn.functional.leaky_relu": "generated/torch.nn.functional.leaky_relu.html", "torch.nn.functional.torch.nn.functional.leaky_relu_": "generated/torch.nn.functional.leaky_relu_.html", "torch.nn.functional.torch.nn.functional.linear": "generated/torch.nn.functional.linear.html", "torch.nn.functional.torch.nn.functional.local_response_norm": "generated/torch.nn.functional.local_response_norm.html", "torch.nn.functional.torch.nn.functional.log_softmax": "generated/torch.nn.functional.log_softmax.html", "torch.nn.functional.torch.nn.functional.logsigmoid": "generated/torch.nn.functional.logsigmoid.html", "torch.nn.functional.torch.nn.functional.lp_pool1d": "generated/torch.nn.functional.lp_pool1d.html", "torch.nn.functional.torch.nn.functional.lp_pool2d": "generated/torch.nn.functional.lp_pool2d.html", "torch.nn.functional.torch.nn.functional.margin_ranking_loss": "generated/torch.nn.functional.margin_ranking_loss.html", "torch.nn.functional.torch.nn.functional.max_pool1d": "generated/torch.nn.functional.max_pool1d.html", "torch.nn.functional.torch.nn.functional.max_pool2d": "generated/torch.nn.functional.max_pool2d.html", "torch.nn.functional.torch.nn.functional.max_pool3d": "generated/torch.nn.functional.max_pool3d.html", "torch.nn.functional.torch.nn.functional.max_unpool1d": "generated/torch.nn.functional.max_unpool1d.html", "torch.nn.functional.torch.nn.functional.max_unpool2d": "generated/torch.nn.functional.max_unpool2d.html", "torch.nn.functional.torch.nn.functional.max_unpool3d": "generated/torch.nn.functional.max_unpool3d.html", "torch.nn.functional.torch.nn.functional.mish": "generated/torch.nn.functional.mish.html", "torch.nn.functional.torch.nn.functional.mse_loss": "generated/torch.nn.functional.mse_loss.html", "torch.nn.functional.torch.nn.functional.multi_margin_loss": "generated/torch.nn.functional.multi_margin_loss.html", "torch.nn.functional.torch.nn.functional.multilabel_margin_loss": "generated/torch.nn.functional.multilabel_margin_loss.html", "torch.nn.functional.torch.nn.functional.multilabel_soft_margin_loss": "generated/torch.nn.functional.multilabel_soft_margin_loss.html", "torch.nn.functional.torch.nn.functional.nll_loss": "generated/torch.nn.functional.nll_loss.html", "torch.nn.functional.torch.nn.functional.normalize": "generated/torch.nn.functional.normalize.html", "torch.nn.functional.torch.nn.functional.one_hot": "generated/torch.nn.functional.one_hot.html", "torch.nn.functional.torch.nn.functional.pad": "generated/torch.nn.functional.pad.html", "torch.nn.functional.torch.nn.functional.pairwise_distance": "generated/torch.nn.functional.pairwise_distance.html", "torch.nn.functional.torch.nn.functional.pdist": "generated/torch.nn.functional.pdist.html", "torch.nn.functional.torch.nn.functional.pixel_shuffle": "generated/torch.nn.functional.pixel_shuffle.html", "torch.nn.functional.torch.nn.functional.pixel_unshuffle": "generated/torch.nn.functional.pixel_unshuffle.html", "torch.nn.functional.torch.nn.functional.poisson_nll_loss": "generated/torch.nn.functional.poisson_nll_loss.html", "torch.nn.functional.torch.nn.functional.prelu": "generated/torch.nn.functional.prelu.html", "torch.nn.functional.torch.nn.functional.relu": "generated/torch.nn.functional.relu.html", "torch.nn.functional.torch.nn.functional.relu6": "generated/torch.nn.functional.relu6.html", "torch.nn.functional.torch.nn.functional.relu_": "generated/torch.nn.functional.relu_.html", "torch.nn.functional.torch.nn.functional.rrelu": "generated/torch.nn.functional.rrelu.html", "torch.nn.functional.torch.nn.functional.rrelu_": "generated/torch.nn.functional.rrelu_.html", "torch.nn.functional.torch.nn.functional.scaled_dot_product_attention": "generated/torch.nn.functional.scaled_dot_product_attention.html", "torch.nn.functional.torch.nn.functional.selu": "generated/torch.nn.functional.selu.html", "torch.nn.functional.torch.nn.functional.sigmoid": "generated/torch.nn.functional.sigmoid.html", "torch.nn.functional.torch.nn.functional.silu": "generated/torch.nn.functional.silu.html", "torch.nn.functional.torch.nn.functional.smooth_l1_loss": "generated/torch.nn.functional.smooth_l1_loss.html", "torch.nn.functional.torch.nn.functional.soft_margin_loss": "generated/torch.nn.functional.soft_margin_loss.html", "torch.nn.functional.torch.nn.functional.softmax": "generated/torch.nn.functional.softmax.html", "torch.nn.functional.torch.nn.functional.softmin": "generated/torch.nn.functional.softmin.html", "torch.nn.functional.torch.nn.functional.softplus": "generated/torch.nn.functional.softplus.html", "torch.nn.functional.torch.nn.functional.softshrink": "generated/torch.nn.functional.softshrink.html", "torch.nn.functional.torch.nn.functional.softsign": "generated/torch.nn.functional.softsign.html", "torch.nn.functional.torch.nn.functional.tanh": "generated/torch.nn.functional.tanh.html", "torch.nn.functional.torch.nn.functional.tanhshrink": "generated/torch.nn.functional.tanhshrink.html", "torch.nn.functional.torch.nn.functional.threshold": "generated/torch.nn.functional.threshold.html", "torch.nn.functional.torch.nn.functional.threshold_": "generated/torch.nn.functional.threshold_.html", "torch.nn.functional.torch.nn.functional.torch.nn.parallel.data_parallel": "generated/torch.nn.functional.torch.nn.parallel.data_parallel.html", "torch.nn.functional.torch.nn.functional.triplet_margin_loss": "generated/torch.nn.functional.triplet_margin_loss.html", "torch.nn.functional.torch.nn.functional.triplet_margin_with_distance_loss": "generated/torch.nn.functional.triplet_margin_with_distance_loss.html", "torch.nn.functional.torch.nn.functional.unfold": "generated/torch.nn.functional.unfold.html", "torch.nn.functional.torch.nn.functional.upsample": "generated/torch.nn.functional.upsample.html", "torch.nn.functional.torch.nn.functional.upsample_bilinear": "generated/torch.nn.functional.upsample_bilinear.html", "torch.nn.functional.torch.nn.functional.upsample_nearest": "generated/torch.nn.functional.upsample_nearest.html", "torch.nn.functional.triplet_margin_loss()": "generated/torch.nn.functional.triplet_margin_loss.html#torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss()": "generated/torch.nn.functional.triplet_margin_with_distance_loss.html#torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold()": "generated/torch.nn.functional.unfold.html#torch.nn.functional.unfold", "torch.nn.functional.upsample()": "generated/torch.nn.functional.upsample.html#torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear()": "generated/torch.nn.functional.upsample_bilinear.html#torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest()": "generated/torch.nn.functional.upsample_nearest.html#torch.nn.functional.upsample_nearest", "torch.nn.GaussianNLLLoss": "generated/torch.nn.gaussiannllloss.html", "torch.nn.GELU": "generated/torch.nn.gelu.html", "torch.nn.GLU": "generated/torch.nn.glu.html", "torch.nn.GroupNorm": "generated/torch.nn.groupnorm.html", "torch.nn.GRU": "generated/torch.nn.gru.html", "torch.nn.GRUCell": "generated/torch.nn.grucell.html", "torch.nn.Hardshrink": "generated/torch.nn.hardshrink.html", "torch.nn.Hardsigmoid": "generated/torch.nn.hardsigmoid.html", "torch.nn.Hardswish": "generated/torch.nn.hardswish.html", "torch.nn.Hardtanh": "generated/torch.nn.hardtanh.html", "torch.nn.HingeEmbeddingLoss": "generated/torch.nn.hingeembeddingloss.html", "torch.nn.HuberLoss": "generated/torch.nn.huberloss.html", "torch.nn.Identity": "generated/torch.nn.utils.prune.identity.html", "torch.nn.init": "nn.init.html", "torch.nn.init.calculate_gain()": "nn.init.html#torch.nn.init.calculate_gain", "torch.nn.init.constant_()": "nn.init.html#torch.nn.init.constant_", "torch.nn.init.dirac_()": "nn.init.html#torch.nn.init.dirac_", "torch.nn.init.eye_()": "nn.init.html#torch.nn.init.eye_", "torch.nn.init.kaiming_normal_()": "nn.init.html#torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_uniform_()": "nn.init.html#torch.nn.init.kaiming_uniform_", "torch.nn.init.normal_()": "nn.init.html#torch.nn.init.normal_", "torch.nn.init.ones_()": "nn.init.html#torch.nn.init.ones_", "torch.nn.init.orthogonal_()": "nn.init.html#torch.nn.init.orthogonal_", "torch.nn.init.sparse_()": "nn.init.html#torch.nn.init.sparse_", "torch.nn.init.trunc_normal_()": "nn.init.html#torch.nn.init.trunc_normal_", "torch.nn.init.uniform_()": "nn.init.html#torch.nn.init.uniform_", "torch.nn.init.xavier_normal_()": "nn.init.html#torch.nn.init.xavier_normal_", "torch.nn.init.xavier_uniform_()": "nn.init.html#torch.nn.init.xavier_uniform_", "torch.nn.init.zeros_()": "nn.init.html#torch.nn.init.zeros_", "torch.nn.InstanceNorm1d": "generated/torch.nn.instancenorm1d.html", "torch.nn.InstanceNorm2d": "generated/torch.nn.instancenorm2d.html", "torch.nn.InstanceNorm3d": "generated/torch.nn.instancenorm3d.html", "torch.nn.KLDivLoss": "generated/torch.nn.kldivloss.html", "torch.nn.L1Loss": "generated/torch.nn.l1loss.html", "torch.nn.L1Unstructured": "generated/torch.nn.utils.prune.l1unstructured.html", "torch.nn.LayerNorm": "generated/torch.nn.layernorm.html", "torch.nn.LazyBatchNorm1d": "generated/torch.nn.lazybatchnorm1d.html", "torch.nn.LazyBatchNorm1d.cls_to_become": "generated/torch.nn.lazybatchnorm1d.html#torch.nn.LazyBatchNorm1d.cls_to_become", "torch.nn.LazyBatchNorm2d": "generated/torch.nn.lazybatchnorm2d.html", "torch.nn.LazyBatchNorm2d.cls_to_become": "generated/torch.nn.lazybatchnorm2d.html#torch.nn.LazyBatchNorm2d.cls_to_become", "torch.nn.LazyBatchNorm3d": "generated/torch.nn.lazybatchnorm3d.html", "torch.nn.LazyBatchNorm3d.cls_to_become": "generated/torch.nn.lazybatchnorm3d.html#torch.nn.LazyBatchNorm3d.cls_to_become", "torch.nn.LazyConv1d": "generated/torch.nn.lazyconv1d.html", "torch.nn.LazyConv1d.cls_to_become": "generated/torch.nn.lazyconv1d.html#torch.nn.LazyConv1d.cls_to_become", "torch.nn.LazyConv2d": "generated/torch.nn.lazyconv2d.html", "torch.nn.LazyConv2d.cls_to_become": "generated/torch.nn.lazyconv2d.html#torch.nn.LazyConv2d.cls_to_become", "torch.nn.LazyConv3d": "generated/torch.nn.lazyconv3d.html", "torch.nn.LazyConv3d.cls_to_become": "generated/torch.nn.lazyconv3d.html#torch.nn.LazyConv3d.cls_to_become", "torch.nn.LazyConvTranspose1d": "generated/torch.nn.lazyconvtranspose1d.html", "torch.nn.LazyConvTranspose1d.cls_to_become": "generated/torch.nn.lazyconvtranspose1d.html#torch.nn.LazyConvTranspose1d.cls_to_become", "torch.nn.LazyConvTranspose2d": "generated/torch.nn.lazyconvtranspose2d.html", "torch.nn.LazyConvTranspose2d.cls_to_become": "generated/torch.nn.lazyconvtranspose2d.html#torch.nn.LazyConvTranspose2d.cls_to_become", "torch.nn.LazyConvTranspose3d": "generated/torch.nn.lazyconvtranspose3d.html", "torch.nn.LazyConvTranspose3d.cls_to_become": "generated/torch.nn.lazyconvtranspose3d.html#torch.nn.LazyConvTranspose3d.cls_to_become", "torch.nn.LazyInstanceNorm1d": "generated/torch.nn.lazyinstancenorm1d.html", "torch.nn.LazyInstanceNorm1d.cls_to_become": "generated/torch.nn.lazyinstancenorm1d.html#torch.nn.LazyInstanceNorm1d.cls_to_become", "torch.nn.LazyInstanceNorm2d": "generated/torch.nn.lazyinstancenorm2d.html", "torch.nn.LazyInstanceNorm2d.cls_to_become": "generated/torch.nn.lazyinstancenorm2d.html#torch.nn.LazyInstanceNorm2d.cls_to_become", "torch.nn.LazyInstanceNorm3d": "generated/torch.nn.lazyinstancenorm3d.html", "torch.nn.LazyInstanceNorm3d.cls_to_become": "generated/torch.nn.lazyinstancenorm3d.html#torch.nn.LazyInstanceNorm3d.cls_to_become", "torch.nn.LazyLinear": "generated/torch.nn.lazylinear.html", "torch.nn.LazyLinear.cls_to_become": "generated/torch.nn.lazylinear.html#torch.nn.LazyLinear.cls_to_become", "torch.nn.LazyModuleMixin": "generated/torch.nn.modules.lazy.lazymodulemixin.html", "torch.nn.LeakyReLU": "generated/torch.nn.leakyrelu.html", "torch.nn.Linear": "generated/torch.nn.linear.html", "torch.nn.LnStructured": "generated/torch.nn.utils.prune.lnstructured.html", "torch.nn.LocalResponseNorm": "generated/torch.nn.localresponsenorm.html", "torch.nn.LogSigmoid": "generated/torch.nn.logsigmoid.html", "torch.nn.LogSoftmax": "generated/torch.nn.logsoftmax.html", "torch.nn.LPPool1d": "generated/torch.nn.lppool1d.html", "torch.nn.LPPool2d": "generated/torch.nn.lppool2d.html", "torch.nn.LSTM": "generated/torch.nn.lstm.html", "torch.nn.LSTMCell": "generated/torch.nn.lstmcell.html", "torch.nn.MarginRankingLoss": "generated/torch.nn.marginrankingloss.html", "torch.nn.MaxPool1d": "generated/torch.nn.maxpool1d.html", "torch.nn.MaxPool2d": "generated/torch.nn.maxpool2d.html", "torch.nn.MaxPool3d": "generated/torch.nn.maxpool3d.html", "torch.nn.MaxUnpool1d": "generated/torch.nn.maxunpool1d.html", "torch.nn.MaxUnpool2d": "generated/torch.nn.maxunpool2d.html", "torch.nn.MaxUnpool3d": "generated/torch.nn.maxunpool3d.html", "torch.nn.Mish": "generated/torch.nn.mish.html", "torch.nn.Module": "generated/torch.nn.module.html", "torch.nn.Module.add_module()": "generated/torch.nn.module.html#torch.nn.Module.add_module", "torch.nn.Module.apply()": "generated/torch.nn.module.html#torch.nn.Module.apply", "torch.nn.Module.bfloat16()": "generated/torch.nn.module.html#torch.nn.Module.bfloat16", "torch.nn.Module.buffers()": "generated/torch.nn.module.html#torch.nn.Module.buffers", "torch.nn.Module.children()": "generated/torch.nn.module.html#torch.nn.Module.children", "torch.nn.Module.compile()": "generated/torch.nn.module.html#torch.nn.Module.compile", "torch.nn.Module.cpu()": "generated/torch.nn.module.html#torch.nn.Module.cpu", "torch.nn.Module.cuda()": "generated/torch.nn.module.html#torch.nn.Module.cuda", "torch.nn.Module.double()": "generated/torch.nn.module.html#torch.nn.Module.double", "torch.nn.Module.eval()": "generated/torch.nn.module.html#torch.nn.Module.eval", "torch.nn.Module.extra_repr()": "generated/torch.nn.module.html#torch.nn.Module.extra_repr", "torch.nn.Module.float()": "generated/torch.nn.module.html#torch.nn.Module.float", "torch.nn.Module.forward()": "generated/torch.nn.module.html#torch.nn.Module.forward", "torch.nn.Module.get_buffer()": "generated/torch.nn.module.html#torch.nn.Module.get_buffer", "torch.nn.Module.get_extra_state()": "generated/torch.nn.module.html#torch.nn.Module.get_extra_state", "torch.nn.Module.get_parameter()": "generated/torch.nn.module.html#torch.nn.Module.get_parameter", "torch.nn.Module.get_submodule()": "generated/torch.nn.module.html#torch.nn.Module.get_submodule", "torch.nn.Module.half()": "generated/torch.nn.module.html#torch.nn.Module.half", "torch.nn.Module.ipu()": "generated/torch.nn.module.html#torch.nn.Module.ipu", "torch.nn.Module.load_state_dict()": "generated/torch.nn.module.html#torch.nn.Module.load_state_dict", "torch.nn.Module.modules()": "generated/torch.nn.module.html#torch.nn.Module.modules", "torch.nn.Module.named_buffers()": "generated/torch.nn.module.html#torch.nn.Module.named_buffers", "torch.nn.Module.named_children()": "generated/torch.nn.module.html#torch.nn.Module.named_children", "torch.nn.Module.named_modules()": "generated/torch.nn.module.html#torch.nn.Module.named_modules", "torch.nn.Module.named_parameters()": "generated/torch.nn.module.html#torch.nn.Module.named_parameters", "torch.nn.Module.parameters()": "generated/torch.nn.module.html#torch.nn.Module.parameters", "torch.nn.Module.register_backward_hook()": "generated/torch.nn.module.html#torch.nn.Module.register_backward_hook", "torch.nn.Module.register_buffer()": "generated/torch.nn.module.html#torch.nn.Module.register_buffer", "torch.nn.Module.register_forward_hook()": "generated/torch.nn.module.html#torch.nn.Module.register_forward_hook", "torch.nn.Module.register_forward_pre_hook()": "generated/torch.nn.module.html#torch.nn.Module.register_forward_pre_hook", "torch.nn.Module.register_full_backward_hook()": "generated/torch.nn.module.html#torch.nn.Module.register_full_backward_hook", "torch.nn.Module.register_full_backward_pre_hook()": "generated/torch.nn.module.html#torch.nn.Module.register_full_backward_pre_hook", "torch.nn.Module.register_load_state_dict_post_hook()": "generated/torch.nn.module.html#torch.nn.Module.register_load_state_dict_post_hook", "torch.nn.Module.register_module()": "generated/torch.nn.module.html#torch.nn.Module.register_module", "torch.nn.Module.register_parameter()": "generated/torch.nn.module.html#torch.nn.Module.register_parameter", "torch.nn.Module.register_state_dict_pre_hook()": "generated/torch.nn.module.html#torch.nn.Module.register_state_dict_pre_hook", "torch.nn.Module.requires_grad_()": "generated/torch.nn.module.html#torch.nn.Module.requires_grad_", "torch.nn.Module.set_extra_state()": "generated/torch.nn.module.html#torch.nn.Module.set_extra_state", "torch.nn.Module.share_memory()": "generated/torch.nn.module.html#torch.nn.Module.share_memory", "torch.nn.Module.state_dict()": "generated/torch.nn.module.html#torch.nn.Module.state_dict", "torch.nn.Module.to()": "generated/torch.nn.module.html#torch.nn.Module.to", "torch.nn.Module.to_empty()": "generated/torch.nn.module.html#torch.nn.Module.to_empty", "torch.nn.Module.train()": "generated/torch.nn.module.html#torch.nn.Module.train", "torch.nn.Module.type()": "generated/torch.nn.module.html#torch.nn.Module.type", "torch.nn.Module.xpu()": "generated/torch.nn.module.html#torch.nn.Module.xpu", "torch.nn.Module.zero_grad()": "generated/torch.nn.module.html#torch.nn.Module.zero_grad", "torch.nn.ModuleDict": "generated/torch.nn.moduledict.html", "torch.nn.ModuleDict.clear()": "generated/torch.nn.moduledict.html#torch.nn.ModuleDict.clear", "torch.nn.ModuleDict.items()": "generated/torch.nn.moduledict.html#torch.nn.ModuleDict.items", "torch.nn.ModuleDict.keys()": "generated/torch.nn.moduledict.html#torch.nn.ModuleDict.keys", "torch.nn.ModuleDict.pop()": "generated/torch.nn.moduledict.html#torch.nn.ModuleDict.pop", "torch.nn.ModuleDict.update()": "generated/torch.nn.moduledict.html#torch.nn.ModuleDict.update", "torch.nn.ModuleDict.values()": "generated/torch.nn.moduledict.html#torch.nn.ModuleDict.values", "torch.nn.ModuleList": "generated/torch.nn.modulelist.html", "torch.nn.ModuleList.append()": "generated/torch.nn.modulelist.html#torch.nn.ModuleList.append", "torch.nn.ModuleList.extend()": "generated/torch.nn.modulelist.html#torch.nn.ModuleList.extend", "torch.nn.ModuleList.insert()": "generated/torch.nn.modulelist.html#torch.nn.ModuleList.insert", "torch.nn.modules.lazy.LazyModuleMixin": "generated/torch.nn.modules.lazy.lazymodulemixin.html#torch.nn.modules.lazy.LazyModuleMixin", "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params()": "generated/torch.nn.modules.lazy.lazymodulemixin.html#torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params", "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters()": "generated/torch.nn.modules.lazy.lazymodulemixin.html#torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters", "torch.nn.modules.module.register_module_backward_hook()": "generated/torch.nn.modules.module.register_module_backward_hook.html#torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook()": "generated/torch.nn.modules.module.register_module_buffer_registration_hook.html#torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook()": "generated/torch.nn.modules.module.register_module_forward_hook.html#torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook()": "generated/torch.nn.modules.module.register_module_forward_pre_hook.html#torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook()": "generated/torch.nn.modules.module.register_module_full_backward_hook.html#torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook()": "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.html#torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook()": "generated/torch.nn.modules.module.register_module_module_registration_hook.html#torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook()": "generated/torch.nn.modules.module.register_module_parameter_registration_hook.html#torch.nn.modules.module.register_module_parameter_registration_hook", "torch.nn.MSELoss": "generated/torch.nn.mseloss.html", "torch.nn.MultiheadAttention": "generated/torch.nn.multiheadattention.html", "torch.nn.MultiheadAttention.forward()": "generated/torch.nn.multiheadattention.html#torch.nn.MultiheadAttention.forward", "torch.nn.MultiheadAttention.merge_masks()": "generated/torch.nn.multiheadattention.html#torch.nn.MultiheadAttention.merge_masks", "torch.nn.MultiLabelMarginLoss": "generated/torch.nn.multilabelmarginloss.html", "torch.nn.MultiLabelSoftMarginLoss": "generated/torch.nn.multilabelsoftmarginloss.html", "torch.nn.MultiMarginLoss": "generated/torch.nn.multimarginloss.html", "torch.nn.NLLLoss": "generated/torch.nn.nllloss.html", "torch.nn.PackedSequence": "generated/torch.nn.utils.rnn.packedsequence.html", "torch.nn.PairwiseDistance": "generated/torch.nn.pairwisedistance.html", "torch.nn.parallel.data_parallel()": "generated/torch.nn.functional.torch.nn.parallel.data_parallel.html#torch.nn.parallel.data_parallel", "torch.nn.parallel.DistributedDataParallel": "generated/torch.nn.parallel.distributeddataparallel.html#torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel.join()": "generated/torch.nn.parallel.distributeddataparallel.html#torch.nn.parallel.DistributedDataParallel.join", "torch.nn.parallel.DistributedDataParallel.join_hook()": "generated/torch.nn.parallel.distributeddataparallel.html#torch.nn.parallel.DistributedDataParallel.join_hook", "torch.nn.parallel.DistributedDataParallel.no_sync()": "generated/torch.nn.parallel.distributeddataparallel.html#torch.nn.parallel.DistributedDataParallel.no_sync", "torch.nn.parallel.DistributedDataParallel.register_comm_hook()": "generated/torch.nn.parallel.distributeddataparallel.html#torch.nn.parallel.DistributedDataParallel.register_comm_hook", "torch.nn.Parameter": "generated/torch.nn.parameter.parameter.html", "torch.nn.parameter.Parameter": "generated/torch.nn.parameter.parameter.html#torch.nn.parameter.Parameter", "torch.nn.parameter.UninitializedBuffer": "generated/torch.nn.parameter.uninitializedbuffer.html#torch.nn.parameter.UninitializedBuffer", "torch.nn.parameter.UninitializedParameter": "generated/torch.nn.parameter.uninitializedparameter.html#torch.nn.parameter.UninitializedParameter", "torch.nn.parameter.UninitializedParameter.cls_to_become": "generated/torch.nn.parameter.uninitializedparameter.html#torch.nn.parameter.UninitializedParameter.cls_to_become", "torch.nn.ParameterDict": "generated/torch.nn.parameterdict.html", "torch.nn.ParameterDict.clear()": "generated/torch.nn.parameterdict.html#torch.nn.ParameterDict.clear", "torch.nn.ParameterDict.copy()": "generated/torch.nn.parameterdict.html#torch.nn.ParameterDict.copy", "torch.nn.ParameterDict.fromkeys()": "generated/torch.nn.parameterdict.html#torch.nn.ParameterDict.fromkeys", "torch.nn.ParameterDict.get()": "generated/torch.nn.parameterdict.html#torch.nn.ParameterDict.get", "torch.nn.ParameterDict.items()": "generated/torch.nn.parameterdict.html#torch.nn.ParameterDict.items", "torch.nn.ParameterDict.keys()": "generated/torch.nn.parameterdict.html#torch.nn.ParameterDict.keys", "torch.nn.ParameterDict.pop()": "generated/torch.nn.parameterdict.html#torch.nn.ParameterDict.pop", "torch.nn.ParameterDict.popitem()": "generated/torch.nn.parameterdict.html#torch.nn.ParameterDict.popitem", "torch.nn.ParameterDict.setdefault()": "generated/torch.nn.parameterdict.html#torch.nn.ParameterDict.setdefault", "torch.nn.ParameterDict.update()": "generated/torch.nn.parameterdict.html#torch.nn.ParameterDict.update", "torch.nn.ParameterDict.values()": "generated/torch.nn.parameterdict.html#torch.nn.ParameterDict.values", "torch.nn.ParameterList": "generated/torch.nn.parameterlist.html", "torch.nn.ParameterList.append()": "generated/torch.nn.parameterlist.html#torch.nn.ParameterList.append", "torch.nn.ParameterList.extend()": "generated/torch.nn.parameterlist.html#torch.nn.ParameterList.extend", "torch.nn.ParametrizationList": "generated/torch.nn.utils.parametrize.parametrizationlist.html", "torch.nn.PixelShuffle": "generated/torch.nn.pixelshuffle.html", "torch.nn.PixelUnshuffle": "generated/torch.nn.pixelunshuffle.html", "torch.nn.PoissonNLLLoss": "generated/torch.nn.poissonnllloss.html", "torch.nn.PReLU": "generated/torch.nn.prelu.html", "torch.nn.PruningContainer": "generated/torch.nn.utils.prune.pruningcontainer.html", "torch.nn.RandomStructured": "generated/torch.nn.utils.prune.randomstructured.html", "torch.nn.RandomUnstructured": "generated/torch.nn.utils.prune.randomunstructured.html", "torch.nn.ReflectionPad1d": "generated/torch.nn.reflectionpad1d.html", "torch.nn.ReflectionPad2d": "generated/torch.nn.reflectionpad2d.html", "torch.nn.ReflectionPad3d": "generated/torch.nn.reflectionpad3d.html", "torch.nn.ReLU": "generated/torch.nn.relu.html", "torch.nn.ReLU6": "generated/torch.nn.relu6.html", "torch.nn.ReplicationPad1d": "generated/torch.nn.replicationpad1d.html", "torch.nn.ReplicationPad2d": "generated/torch.nn.replicationpad2d.html", "torch.nn.ReplicationPad3d": "generated/torch.nn.replicationpad3d.html", "torch.nn.RNN": "generated/torch.nn.rnn.html", "torch.nn.RNNBase": "generated/torch.nn.rnnbase.html", "torch.nn.RNNBase.flatten_parameters()": "generated/torch.nn.rnnbase.html#torch.nn.RNNBase.flatten_parameters", "torch.nn.RNNCell": "generated/torch.nn.rnncell.html", "torch.nn.RReLU": "generated/torch.nn.rrelu.html", "torch.nn.SELU": "generated/torch.nn.selu.html", "torch.nn.Sequential": "generated/torch.nn.sequential.html", "torch.nn.Sequential.append()": "generated/torch.nn.sequential.html#torch.nn.Sequential.append", "torch.nn.Sigmoid": "generated/torch.nn.sigmoid.html", "torch.nn.SiLU": "generated/torch.nn.silu.html", "torch.nn.SmoothL1Loss": "generated/torch.nn.smoothl1loss.html", "torch.nn.SoftMarginLoss": "generated/torch.nn.softmarginloss.html", "torch.nn.Softmax": "generated/torch.nn.softmax.html", "torch.nn.Softmax2d": "generated/torch.nn.softmax2d.html", "torch.nn.Softmin": "generated/torch.nn.softmin.html", "torch.nn.Softplus": "generated/torch.nn.softplus.html", "torch.nn.Softshrink": "generated/torch.nn.softshrink.html", "torch.nn.Softsign": "generated/torch.nn.softsign.html", "torch.nn.SyncBatchNorm": "generated/torch.nn.syncbatchnorm.html", "torch.nn.SyncBatchNorm.convert_sync_batchnorm()": "generated/torch.nn.syncbatchnorm.html#torch.nn.SyncBatchNorm.convert_sync_batchnorm", "torch.nn.Tanh": "generated/torch.nn.tanh.html", "torch.nn.Tanhshrink": "generated/torch.nn.tanhshrink.html", "torch.nn.Threshold": "generated/torch.nn.threshold.html", "torch.nn.torch.nn.modules.module.register_module_backward_hook": "generated/torch.nn.modules.module.register_module_backward_hook.html", "torch.nn.torch.nn.modules.module.register_module_buffer_registration_hook": "generated/torch.nn.modules.module.register_module_buffer_registration_hook.html", "torch.nn.torch.nn.modules.module.register_module_forward_hook": "generated/torch.nn.modules.module.register_module_forward_hook.html", "torch.nn.torch.nn.modules.module.register_module_forward_pre_hook": "generated/torch.nn.modules.module.register_module_forward_pre_hook.html", "torch.nn.torch.nn.modules.module.register_module_full_backward_hook": "generated/torch.nn.modules.module.register_module_full_backward_hook.html", "torch.nn.torch.nn.modules.module.register_module_full_backward_pre_hook": "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.html", "torch.nn.torch.nn.modules.module.register_module_module_registration_hook": "generated/torch.nn.modules.module.register_module_module_registration_hook.html", "torch.nn.torch.nn.modules.module.register_module_parameter_registration_hook": "generated/torch.nn.modules.module.register_module_parameter_registration_hook.html", "torch.nn.torch.nn.utils.clip_grad_norm_": "generated/torch.nn.utils.clip_grad_norm_.html", "torch.nn.torch.nn.utils.clip_grad_value_": "generated/torch.nn.utils.clip_grad_value_.html", "torch.nn.torch.nn.utils.parameters_to_vector": "generated/torch.nn.utils.parameters_to_vector.html", "torch.nn.torch.nn.utils.parametrizations.orthogonal": "generated/torch.nn.utils.parametrizations.orthogonal.html", "torch.nn.torch.nn.utils.parametrizations.spectral_norm": "generated/torch.nn.utils.parametrizations.spectral_norm.html", "torch.nn.torch.nn.utils.parametrize.cached": "generated/torch.nn.utils.parametrize.cached.html", "torch.nn.torch.nn.utils.parametrize.is_parametrized": "generated/torch.nn.utils.parametrize.is_parametrized.html", "torch.nn.torch.nn.utils.parametrize.register_parametrization": "generated/torch.nn.utils.parametrize.register_parametrization.html", "torch.nn.torch.nn.utils.parametrize.remove_parametrizations": "generated/torch.nn.utils.parametrize.remove_parametrizations.html", "torch.nn.torch.nn.utils.prune.custom_from_mask": "generated/torch.nn.utils.prune.custom_from_mask.html", "torch.nn.torch.nn.utils.prune.global_unstructured": "generated/torch.nn.utils.prune.global_unstructured.html", "torch.nn.torch.nn.utils.prune.is_pruned": "generated/torch.nn.utils.prune.is_pruned.html", "torch.nn.torch.nn.utils.prune.l1_unstructured": "generated/torch.nn.utils.prune.l1_unstructured.html", "torch.nn.torch.nn.utils.prune.ln_structured": "generated/torch.nn.utils.prune.ln_structured.html", "torch.nn.torch.nn.utils.prune.random_structured": "generated/torch.nn.utils.prune.random_structured.html", "torch.nn.torch.nn.utils.prune.random_unstructured": "generated/torch.nn.utils.prune.random_unstructured.html", "torch.nn.torch.nn.utils.prune.remove": "generated/torch.nn.utils.prune.remove.html", "torch.nn.torch.nn.utils.remove_spectral_norm": "generated/torch.nn.utils.remove_spectral_norm.html", "torch.nn.torch.nn.utils.remove_weight_norm": "generated/torch.nn.utils.remove_weight_norm.html", "torch.nn.torch.nn.utils.rnn.pack_padded_sequence": "generated/torch.nn.utils.rnn.pack_padded_sequence.html", "torch.nn.torch.nn.utils.rnn.pack_sequence": "generated/torch.nn.utils.rnn.pack_sequence.html", "torch.nn.torch.nn.utils.rnn.pad_packed_sequence": "generated/torch.nn.utils.rnn.pad_packed_sequence.html", "torch.nn.torch.nn.utils.rnn.pad_sequence": "generated/torch.nn.utils.rnn.pad_sequence.html", "torch.nn.torch.nn.utils.rnn.unpack_sequence": "generated/torch.nn.utils.rnn.unpack_sequence.html", "torch.nn.torch.nn.utils.rnn.unpad_sequence": "generated/torch.nn.utils.rnn.unpad_sequence.html", "torch.nn.torch.nn.utils.skip_init": "generated/torch.nn.utils.skip_init.html", "torch.nn.torch.nn.utils.spectral_norm": "generated/torch.nn.utils.spectral_norm.html", "torch.nn.torch.nn.utils.stateless.functional_call": "generated/torch.nn.utils.stateless.functional_call.html", "torch.nn.torch.nn.utils.vector_to_parameters": "generated/torch.nn.utils.vector_to_parameters.html", "torch.nn.torch.nn.utils.weight_norm": "generated/torch.nn.utils.weight_norm.html", "torch.nn.Transformer": "generated/torch.nn.transformer.html", "torch.nn.Transformer.forward()": "generated/torch.nn.transformer.html#torch.nn.Transformer.forward", "torch.nn.Transformer.generate_square_subsequent_mask()": "generated/torch.nn.transformer.html#torch.nn.Transformer.generate_square_subsequent_mask", "torch.nn.TransformerDecoder": "generated/torch.nn.transformerdecoder.html", "torch.nn.TransformerDecoder.forward()": "generated/torch.nn.transformerdecoder.html#torch.nn.TransformerDecoder.forward", "torch.nn.TransformerDecoderLayer": "generated/torch.nn.transformerdecoderlayer.html", "torch.nn.TransformerDecoderLayer.forward()": "generated/torch.nn.transformerdecoderlayer.html#torch.nn.TransformerDecoderLayer.forward", "torch.nn.TransformerEncoder": "generated/torch.nn.transformerencoder.html", "torch.nn.TransformerEncoder.forward()": "generated/torch.nn.transformerencoder.html#torch.nn.TransformerEncoder.forward", "torch.nn.TransformerEncoderLayer": "generated/torch.nn.transformerencoderlayer.html", "torch.nn.TransformerEncoderLayer.forward()": "generated/torch.nn.transformerencoderlayer.html#torch.nn.TransformerEncoderLayer.forward", "torch.nn.TripletMarginLoss": "generated/torch.nn.tripletmarginloss.html", "torch.nn.TripletMarginWithDistanceLoss": "generated/torch.nn.tripletmarginwithdistanceloss.html", "torch.nn.Unflatten": "generated/torch.nn.unflatten.html", "torch.nn.Unfold": "generated/torch.nn.unfold.html", "torch.nn.UninitializedBuffer": "generated/torch.nn.parameter.uninitializedbuffer.html", "torch.nn.UninitializedParameter": "generated/torch.nn.parameter.uninitializedparameter.html", "torch.nn.Upsample": "generated/torch.nn.upsample.html", "torch.nn.UpsamplingBilinear2d": "generated/torch.nn.upsamplingbilinear2d.html", "torch.nn.UpsamplingNearest2d": "generated/torch.nn.upsamplingnearest2d.html", "torch.nn.utils.clip_grad_norm_()": "generated/torch.nn.utils.clip_grad_norm_.html#torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_()": "generated/torch.nn.utils.clip_grad_value_.html#torch.nn.utils.clip_grad_value_", "torch.nn.utils.parameters_to_vector()": "generated/torch.nn.utils.parameters_to_vector.html#torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal()": "generated/torch.nn.utils.parametrizations.orthogonal.html#torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm()": "generated/torch.nn.utils.parametrizations.spectral_norm.html#torch.nn.utils.parametrizations.spectral_norm", "torch.nn.utils.parametrize.cached()": "generated/torch.nn.utils.parametrize.cached.html#torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized()": "generated/torch.nn.utils.parametrize.is_parametrized.html#torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.ParametrizationList": "generated/torch.nn.utils.parametrize.parametrizationlist.html#torch.nn.utils.parametrize.ParametrizationList", "torch.nn.utils.parametrize.ParametrizationList.right_inverse()": "generated/torch.nn.utils.parametrize.parametrizationlist.html#torch.nn.utils.parametrize.ParametrizationList.right_inverse", "torch.nn.utils.parametrize.register_parametrization()": "generated/torch.nn.utils.parametrize.register_parametrization.html#torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations()": "generated/torch.nn.utils.parametrize.remove_parametrizations.html#torch.nn.utils.parametrize.remove_parametrizations", "torch.nn.utils.prune.BasePruningMethod": "generated/torch.nn.utils.prune.basepruningmethod.html#torch.nn.utils.prune.BasePruningMethod", "torch.nn.utils.prune.BasePruningMethod.apply()": "generated/torch.nn.utils.prune.basepruningmethod.html#torch.nn.utils.prune.BasePruningMethod.apply", "torch.nn.utils.prune.BasePruningMethod.apply_mask()": "generated/torch.nn.utils.prune.basepruningmethod.html#torch.nn.utils.prune.BasePruningMethod.apply_mask", "torch.nn.utils.prune.BasePruningMethod.compute_mask()": "generated/torch.nn.utils.prune.basepruningmethod.html#torch.nn.utils.prune.BasePruningMethod.compute_mask", "torch.nn.utils.prune.BasePruningMethod.prune()": "generated/torch.nn.utils.prune.basepruningmethod.html#torch.nn.utils.prune.BasePruningMethod.prune", "torch.nn.utils.prune.BasePruningMethod.remove()": "generated/torch.nn.utils.prune.basepruningmethod.html#torch.nn.utils.prune.BasePruningMethod.remove", "torch.nn.utils.prune.custom_from_mask()": "generated/torch.nn.utils.prune.custom_from_mask.html#torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.CustomFromMask": "generated/torch.nn.utils.prune.customfrommask.html#torch.nn.utils.prune.CustomFromMask", "torch.nn.utils.prune.CustomFromMask.apply()": "generated/torch.nn.utils.prune.customfrommask.html#torch.nn.utils.prune.CustomFromMask.apply", "torch.nn.utils.prune.CustomFromMask.apply_mask()": "generated/torch.nn.utils.prune.customfrommask.html#torch.nn.utils.prune.CustomFromMask.apply_mask", "torch.nn.utils.prune.CustomFromMask.prune()": "generated/torch.nn.utils.prune.customfrommask.html#torch.nn.utils.prune.CustomFromMask.prune", "torch.nn.utils.prune.CustomFromMask.remove()": "generated/torch.nn.utils.prune.customfrommask.html#torch.nn.utils.prune.CustomFromMask.remove", "torch.nn.utils.prune.global_unstructured()": "generated/torch.nn.utils.prune.global_unstructured.html#torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.Identity": "generated/torch.nn.utils.prune.identity.html#torch.nn.utils.prune.Identity", "torch.nn.utils.prune.Identity.apply()": "generated/torch.nn.utils.prune.identity.html#torch.nn.utils.prune.Identity.apply", "torch.nn.utils.prune.Identity.apply_mask()": "generated/torch.nn.utils.prune.identity.html#torch.nn.utils.prune.Identity.apply_mask", "torch.nn.utils.prune.Identity.prune()": "generated/torch.nn.utils.prune.identity.html#torch.nn.utils.prune.Identity.prune", "torch.nn.utils.prune.Identity.remove()": "generated/torch.nn.utils.prune.identity.html#torch.nn.utils.prune.Identity.remove", "torch.nn.utils.prune.is_pruned()": "generated/torch.nn.utils.prune.is_pruned.html#torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured()": "generated/torch.nn.utils.prune.l1_unstructured.html#torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.L1Unstructured": "generated/torch.nn.utils.prune.l1unstructured.html#torch.nn.utils.prune.L1Unstructured", "torch.nn.utils.prune.L1Unstructured.apply()": "generated/torch.nn.utils.prune.l1unstructured.html#torch.nn.utils.prune.L1Unstructured.apply", "torch.nn.utils.prune.L1Unstructured.apply_mask()": "generated/torch.nn.utils.prune.l1unstructured.html#torch.nn.utils.prune.L1Unstructured.apply_mask", "torch.nn.utils.prune.L1Unstructured.prune()": "generated/torch.nn.utils.prune.l1unstructured.html#torch.nn.utils.prune.L1Unstructured.prune", "torch.nn.utils.prune.L1Unstructured.remove()": "generated/torch.nn.utils.prune.l1unstructured.html#torch.nn.utils.prune.L1Unstructured.remove", "torch.nn.utils.prune.ln_structured()": "generated/torch.nn.utils.prune.ln_structured.html#torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.LnStructured": "generated/torch.nn.utils.prune.lnstructured.html#torch.nn.utils.prune.LnStructured", "torch.nn.utils.prune.LnStructured.apply()": "generated/torch.nn.utils.prune.lnstructured.html#torch.nn.utils.prune.LnStructured.apply", "torch.nn.utils.prune.LnStructured.apply_mask()": "generated/torch.nn.utils.prune.lnstructured.html#torch.nn.utils.prune.LnStructured.apply_mask", "torch.nn.utils.prune.LnStructured.compute_mask()": "generated/torch.nn.utils.prune.lnstructured.html#torch.nn.utils.prune.LnStructured.compute_mask", "torch.nn.utils.prune.LnStructured.prune()": "generated/torch.nn.utils.prune.lnstructured.html#torch.nn.utils.prune.LnStructured.prune", "torch.nn.utils.prune.LnStructured.remove()": "generated/torch.nn.utils.prune.lnstructured.html#torch.nn.utils.prune.LnStructured.remove", "torch.nn.utils.prune.PruningContainer": "generated/torch.nn.utils.prune.pruningcontainer.html#torch.nn.utils.prune.PruningContainer", "torch.nn.utils.prune.PruningContainer.add_pruning_method()": "generated/torch.nn.utils.prune.pruningcontainer.html#torch.nn.utils.prune.PruningContainer.add_pruning_method", "torch.nn.utils.prune.PruningContainer.apply()": "generated/torch.nn.utils.prune.pruningcontainer.html#torch.nn.utils.prune.PruningContainer.apply", "torch.nn.utils.prune.PruningContainer.apply_mask()": "generated/torch.nn.utils.prune.pruningcontainer.html#torch.nn.utils.prune.PruningContainer.apply_mask", "torch.nn.utils.prune.PruningContainer.compute_mask()": "generated/torch.nn.utils.prune.pruningcontainer.html#torch.nn.utils.prune.PruningContainer.compute_mask", "torch.nn.utils.prune.PruningContainer.prune()": "generated/torch.nn.utils.prune.pruningcontainer.html#torch.nn.utils.prune.PruningContainer.prune", "torch.nn.utils.prune.PruningContainer.remove()": "generated/torch.nn.utils.prune.pruningcontainer.html#torch.nn.utils.prune.PruningContainer.remove", "torch.nn.utils.prune.random_structured()": "generated/torch.nn.utils.prune.random_structured.html#torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured()": "generated/torch.nn.utils.prune.random_unstructured.html#torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.RandomStructured": "generated/torch.nn.utils.prune.randomstructured.html#torch.nn.utils.prune.RandomStructured", "torch.nn.utils.prune.RandomStructured.apply()": "generated/torch.nn.utils.prune.randomstructured.html#torch.nn.utils.prune.RandomStructured.apply", "torch.nn.utils.prune.RandomStructured.apply_mask()": "generated/torch.nn.utils.prune.randomstructured.html#torch.nn.utils.prune.RandomStructured.apply_mask", "torch.nn.utils.prune.RandomStructured.compute_mask()": "generated/torch.nn.utils.prune.randomstructured.html#torch.nn.utils.prune.RandomStructured.compute_mask", "torch.nn.utils.prune.RandomStructured.prune()": "generated/torch.nn.utils.prune.randomstructured.html#torch.nn.utils.prune.RandomStructured.prune", "torch.nn.utils.prune.RandomStructured.remove()": "generated/torch.nn.utils.prune.randomstructured.html#torch.nn.utils.prune.RandomStructured.remove", "torch.nn.utils.prune.RandomUnstructured": "generated/torch.nn.utils.prune.randomunstructured.html#torch.nn.utils.prune.RandomUnstructured", "torch.nn.utils.prune.RandomUnstructured.apply()": "generated/torch.nn.utils.prune.randomunstructured.html#torch.nn.utils.prune.RandomUnstructured.apply", "torch.nn.utils.prune.RandomUnstructured.apply_mask()": "generated/torch.nn.utils.prune.randomunstructured.html#torch.nn.utils.prune.RandomUnstructured.apply_mask", "torch.nn.utils.prune.RandomUnstructured.prune()": "generated/torch.nn.utils.prune.randomunstructured.html#torch.nn.utils.prune.RandomUnstructured.prune", "torch.nn.utils.prune.RandomUnstructured.remove()": "generated/torch.nn.utils.prune.randomunstructured.html#torch.nn.utils.prune.RandomUnstructured.remove", "torch.nn.utils.prune.remove()": "generated/torch.nn.utils.prune.remove.html#torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm()": "generated/torch.nn.utils.remove_spectral_norm.html#torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm()": "generated/torch.nn.utils.remove_weight_norm.html#torch.nn.utils.remove_weight_norm", "torch.nn.utils.rnn.pack_padded_sequence()": "generated/torch.nn.utils.rnn.pack_padded_sequence.html#torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence()": "generated/torch.nn.utils.rnn.pack_sequence.html#torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.PackedSequence": "generated/torch.nn.utils.rnn.packedsequence.html#torch.nn.utils.rnn.PackedSequence", "torch.nn.utils.rnn.PackedSequence.batch_sizes": "generated/torch.nn.utils.rnn.packedsequence.html#torch.nn.utils.rnn.PackedSequence.batch_sizes", "torch.nn.utils.rnn.PackedSequence.count()": "generated/torch.nn.utils.rnn.packedsequence.html#torch.nn.utils.rnn.PackedSequence.count", "torch.nn.utils.rnn.PackedSequence.data": "generated/torch.nn.utils.rnn.packedsequence.html#torch.nn.utils.rnn.PackedSequence.data", "torch.nn.utils.rnn.PackedSequence.index()": "generated/torch.nn.utils.rnn.packedsequence.html#torch.nn.utils.rnn.PackedSequence.index", "torch.nn.utils.rnn.PackedSequence.is_cuda": "generated/torch.nn.utils.rnn.packedsequence.html#torch.nn.utils.rnn.PackedSequence.is_cuda", "torch.nn.utils.rnn.PackedSequence.is_pinned()": "generated/torch.nn.utils.rnn.packedsequence.html#torch.nn.utils.rnn.PackedSequence.is_pinned", "torch.nn.utils.rnn.PackedSequence.sorted_indices": "generated/torch.nn.utils.rnn.packedsequence.html#torch.nn.utils.rnn.PackedSequence.sorted_indices", "torch.nn.utils.rnn.PackedSequence.to()": "generated/torch.nn.utils.rnn.packedsequence.html#torch.nn.utils.rnn.PackedSequence.to", "torch.nn.utils.rnn.PackedSequence.unsorted_indices": "generated/torch.nn.utils.rnn.packedsequence.html#torch.nn.utils.rnn.PackedSequence.unsorted_indices", "torch.nn.utils.rnn.pad_packed_sequence()": "generated/torch.nn.utils.rnn.pad_packed_sequence.html#torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence()": "generated/torch.nn.utils.rnn.pad_sequence.html#torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence()": "generated/torch.nn.utils.rnn.unpack_sequence.html#torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence()": "generated/torch.nn.utils.rnn.unpad_sequence.html#torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init()": "generated/torch.nn.utils.skip_init.html#torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm()": "generated/torch.nn.utils.spectral_norm.html#torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call()": "generated/torch.nn.utils.stateless.functional_call.html#torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters()": "generated/torch.nn.utils.vector_to_parameters.html#torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm()": "generated/torch.nn.utils.weight_norm.html#torch.nn.utils.weight_norm", "torch.nn.ZeroPad1d": "generated/torch.nn.zeropad1d.html", "torch.nn.ZeroPad2d": "generated/torch.nn.zeropad2d.html", "torch.nn.ZeroPad3d": "generated/torch.nn.zeropad3d.html", "torch.no_grad": "generated/torch.no_grad.html#torch.no_grad", "torch.nonzero": "generated/torch.nonzero.html", "torch.norm": "generated/torch.norm.html", "torch.normal": "generated/torch.normal.html", "torch.not_equal": "generated/torch.not_equal.html", "torch.numel": "generated/torch.numel.html", "torch.ones": "generated/torch.ones.html", "torch.ones_like": "generated/torch.ones_like.html", "torch.onnx": "onnx.html", "torch.onnx.DiagnosticOptions": "onnx_dynamo.html#torch.onnx.DiagnosticOptions", "torch.onnx.disable_log()": "onnx_torchscript.html#torch.onnx.disable_log", "torch.onnx.dynamo_export()": "onnx_dynamo.html#torch.onnx.dynamo_export", "torch.onnx.enable_fake_mode()": "onnx_dynamo.html#torch.onnx.enable_fake_mode", "torch.onnx.enable_log()": "onnx_torchscript.html#torch.onnx.enable_log", "torch.onnx.export()": "onnx_torchscript.html#torch.onnx.export", "torch.onnx.export_to_pretty_string()": "onnx_torchscript.html#torch.onnx.export_to_pretty_string", "torch.onnx.ExportOptions": "onnx_dynamo.html#torch.onnx.ExportOptions", "torch.onnx.ExportOutput": "onnx_dynamo.html#torch.onnx.ExportOutput", "torch.onnx.ExportOutput.adapt_torch_inputs_to_onnx()": "onnx_dynamo.html#torch.onnx.ExportOutput.adapt_torch_inputs_to_onnx", "torch.onnx.ExportOutput.adapt_torch_outputs_to_onnx()": "onnx_dynamo.html#torch.onnx.ExportOutput.adapt_torch_outputs_to_onnx", "torch.onnx.ExportOutput.diagnostic_context": "onnx_dynamo.html#torch.onnx.ExportOutput.diagnostic_context", "torch.onnx.ExportOutput.fake_context": "onnx_dynamo.html#torch.onnx.ExportOutput.fake_context", "torch.onnx.ExportOutput.model_proto": "onnx_dynamo.html#torch.onnx.ExportOutput.model_proto", "torch.onnx.ExportOutput.save()": "onnx_dynamo.html#torch.onnx.ExportOutput.save", "torch.onnx.ExportOutput.save_diagnostics()": "onnx_dynamo.html#torch.onnx.ExportOutput.save_diagnostics", "torch.onnx.ExportOutputSerializer": "onnx_dynamo.html#torch.onnx.ExportOutputSerializer", "torch.onnx.ExportOutputSerializer.serialize()": "onnx_dynamo.html#torch.onnx.ExportOutputSerializer.serialize", "torch.onnx.is_in_onnx_export()": "onnx_torchscript.html#torch.onnx.is_in_onnx_export", "torch.onnx.is_onnxrt_backend_supported()": "onnx_dynamo_onnxruntime_backend.html#torch.onnx.is_onnxrt_backend_supported", "torch.onnx.JitScalarType": "generated/torch.onnx.jitscalartype.html#torch.onnx.JitScalarType", "torch.onnx.JitScalarType.dtype()": "generated/torch.onnx.jitscalartype.html#torch.onnx.JitScalarType.dtype", "torch.onnx.JitScalarType.from_dtype()": "generated/torch.onnx.jitscalartype.html#torch.onnx.JitScalarType.from_dtype", "torch.onnx.JitScalarType.from_value()": "generated/torch.onnx.jitscalartype.html#torch.onnx.JitScalarType.from_value", "torch.onnx.JitScalarType.onnx_compatible()": "generated/torch.onnx.jitscalartype.html#torch.onnx.JitScalarType.onnx_compatible", "torch.onnx.JitScalarType.onnx_type()": "generated/torch.onnx.jitscalartype.html#torch.onnx.JitScalarType.onnx_type", "torch.onnx.JitScalarType.scalar_name()": "generated/torch.onnx.jitscalartype.html#torch.onnx.JitScalarType.scalar_name", "torch.onnx.JitScalarType.torch_name()": "generated/torch.onnx.jitscalartype.html#torch.onnx.JitScalarType.torch_name", "torch.onnx.ONNX Backend for TorchDynamo": "onnx_dynamo_onnxruntime_backend.html", "torch.onnx.OnnxExporterError": "onnx_dynamo.html#torch.onnx.OnnxExporterError", "torch.onnx.OnnxRegistry": "onnx_dynamo.html#torch.onnx.OnnxRegistry", "torch.onnx.OnnxRegistry.get_op_functions()": "onnx_dynamo.html#torch.onnx.OnnxRegistry.get_op_functions", "torch.onnx.OnnxRegistry.is_registered_op()": "onnx_dynamo.html#torch.onnx.OnnxRegistry.is_registered_op", "torch.onnx.OnnxRegistry.opset_version": "onnx_dynamo.html#torch.onnx.OnnxRegistry.opset_version", "torch.onnx.OnnxRegistry.register_op()": "onnx_dynamo.html#torch.onnx.OnnxRegistry.register_op", "torch.onnx.register_custom_op_symbolic()": "onnx_torchscript.html#torch.onnx.register_custom_op_symbolic", "torch.onnx.select_model_mode_for_export()": "onnx_torchscript.html#torch.onnx.select_model_mode_for_export", "torch.onnx.TorchDynamo-based ONNX Exporter": "onnx_dynamo.html", "torch.onnx.TorchDynamo-based ONNX Exporter.FXE0007:fx-graph-to-onnx": "generated/onnx_dynamo_diagnostics_rules/fxe0007%3afx-graph-to-onnx.html", "torch.onnx.TorchDynamo-based ONNX Exporter.FXE0008:fx-node-to-onnx": "generated/onnx_dynamo_diagnostics_rules/fxe0008%3afx-node-to-onnx.html", "torch.onnx.TorchDynamo-based ONNX Exporter.FXE0010:fx-pass": "generated/onnx_dynamo_diagnostics_rules/fxe0010%3afx-pass.html", "torch.onnx.TorchDynamo-based ONNX Exporter.FXE0011:no-symbolic-function-for-call-function": "generated/onnx_dynamo_diagnostics_rules/fxe0011%3ano-symbolic-function-for-call-function.html", "torch.onnx.TorchDynamo-based ONNX Exporter.FXE0012:unsupported-fx-node-analysis": "generated/onnx_dynamo_diagnostics_rules/fxe0012%3aunsupported-fx-node-analysis.html", "torch.onnx.TorchDynamo-based ONNX Exporter.FXE0013:op-level-debugging": "generated/onnx_dynamo_diagnostics_rules/fxe0013%3aop-level-debugging.html", "torch.onnx.TorchDynamo-based ONNX Exporter.FXE0014:find-opschema-matched-symbolic-function": "generated/onnx_dynamo_diagnostics_rules/fxe0014%3afind-opschema-matched-symbolic-function.html", "torch.onnx.TorchDynamo-based ONNX Exporter.FXE0015:fx-node-insert-type-promotion": "generated/onnx_dynamo_diagnostics_rules/fxe0015%3afx-node-insert-type-promotion.html", "torch.onnx.TorchDynamo-based ONNX Exporter.FXE0016:find-operator-overloads-in-onnx-registry": "generated/onnx_dynamo_diagnostics_rules/fxe0016%3afind-operator-overloads-in-onnx-registry.html", "torch.onnx.TorchScript-based ONNX Exporter": "onnx_torchscript.html", "torch.onnx.TorchScript-based ONNX Exporter.GraphInfo": "generated/torch.onnx.verification.graphinfo.html", "torch.onnx.TorchScript-based ONNX Exporter.JitScalarType": "generated/torch.onnx.jitscalartype.html", "torch.onnx.TorchScript-based ONNX Exporter.VerificationOptions": "generated/torch.onnx.verification.verificationoptions.html", "torch.onnx.unregister_custom_op_symbolic()": "onnx_torchscript.html#torch.onnx.unregister_custom_op_symbolic", "torch.onnx.verification.find_mismatch()": "onnx_torchscript.html#torch.onnx.verification.find_mismatch", "torch.onnx.verification.GraphInfo": "generated/torch.onnx.verification.graphinfo.html#torch.onnx.verification.GraphInfo", "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info()": "generated/torch.onnx.verification.graphinfo.html#torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info", "torch.onnx.verification.GraphInfo.clear()": "generated/torch.onnx.verification.graphinfo.html#torch.onnx.verification.GraphInfo.clear", "torch.onnx.verification.GraphInfo.essential_node_count()": "generated/torch.onnx.verification.graphinfo.html#torch.onnx.verification.GraphInfo.essential_node_count", "torch.onnx.verification.GraphInfo.essential_node_kinds()": "generated/torch.onnx.verification.graphinfo.html#torch.onnx.verification.GraphInfo.essential_node_kinds", "torch.onnx.verification.GraphInfo.export_repro()": "generated/torch.onnx.verification.graphinfo.html#torch.onnx.verification.GraphInfo.export_repro", "torch.onnx.verification.GraphInfo.find_mismatch()": "generated/torch.onnx.verification.graphinfo.html#torch.onnx.verification.GraphInfo.find_mismatch", "torch.onnx.verification.GraphInfo.find_partition()": "generated/torch.onnx.verification.graphinfo.html#torch.onnx.verification.GraphInfo.find_partition", "torch.onnx.verification.GraphInfo.has_mismatch()": "generated/torch.onnx.verification.graphinfo.html#torch.onnx.verification.GraphInfo.has_mismatch", "torch.onnx.verification.GraphInfo.pretty_print_mismatch()": "generated/torch.onnx.verification.graphinfo.html#torch.onnx.verification.GraphInfo.pretty_print_mismatch", "torch.onnx.verification.GraphInfo.pretty_print_tree()": "generated/torch.onnx.verification.graphinfo.html#torch.onnx.verification.GraphInfo.pretty_print_tree", "torch.onnx.verification.GraphInfo.verify_export()": "generated/torch.onnx.verification.graphinfo.html#torch.onnx.verification.GraphInfo.verify_export", "torch.onnx.verification.VerificationOptions": "generated/torch.onnx.verification.verificationoptions.html#torch.onnx.verification.VerificationOptions", "torch.optim": "optim.html", "torch.optim.Adadelta": "generated/torch.optim.adadelta.html", "torch.optim.Adadelta.add_param_group()": "generated/torch.optim.adadelta.html#torch.optim.Adadelta.add_param_group", "torch.optim.Adadelta.load_state_dict()": "generated/torch.optim.adadelta.html#torch.optim.Adadelta.load_state_dict", "torch.optim.Adadelta.register_load_state_dict_post_hook()": "generated/torch.optim.adadelta.html#torch.optim.Adadelta.register_load_state_dict_post_hook", "torch.optim.Adadelta.register_load_state_dict_pre_hook()": "generated/torch.optim.adadelta.html#torch.optim.Adadelta.register_load_state_dict_pre_hook", "torch.optim.Adadelta.register_state_dict_post_hook()": "generated/torch.optim.adadelta.html#torch.optim.Adadelta.register_state_dict_post_hook", "torch.optim.Adadelta.register_state_dict_pre_hook()": "generated/torch.optim.adadelta.html#torch.optim.Adadelta.register_state_dict_pre_hook", "torch.optim.Adadelta.register_step_post_hook()": "generated/torch.optim.adadelta.html#torch.optim.Adadelta.register_step_post_hook", "torch.optim.Adadelta.register_step_pre_hook()": "generated/torch.optim.adadelta.html#torch.optim.Adadelta.register_step_pre_hook", "torch.optim.Adadelta.state_dict()": "generated/torch.optim.adadelta.html#torch.optim.Adadelta.state_dict", "torch.optim.Adadelta.step()": "generated/torch.optim.adadelta.html#torch.optim.Adadelta.step", "torch.optim.Adadelta.zero_grad()": "generated/torch.optim.adadelta.html#torch.optim.Adadelta.zero_grad", "torch.optim.Adagrad": "generated/torch.optim.adagrad.html", "torch.optim.Adagrad.add_param_group()": "generated/torch.optim.adagrad.html#torch.optim.Adagrad.add_param_group", "torch.optim.Adagrad.load_state_dict()": "generated/torch.optim.adagrad.html#torch.optim.Adagrad.load_state_dict", "torch.optim.Adagrad.register_load_state_dict_post_hook()": "generated/torch.optim.adagrad.html#torch.optim.Adagrad.register_load_state_dict_post_hook", "torch.optim.Adagrad.register_load_state_dict_pre_hook()": "generated/torch.optim.adagrad.html#torch.optim.Adagrad.register_load_state_dict_pre_hook", "torch.optim.Adagrad.register_state_dict_post_hook()": "generated/torch.optim.adagrad.html#torch.optim.Adagrad.register_state_dict_post_hook", "torch.optim.Adagrad.register_state_dict_pre_hook()": "generated/torch.optim.adagrad.html#torch.optim.Adagrad.register_state_dict_pre_hook", "torch.optim.Adagrad.register_step_post_hook()": "generated/torch.optim.adagrad.html#torch.optim.Adagrad.register_step_post_hook", "torch.optim.Adagrad.register_step_pre_hook()": "generated/torch.optim.adagrad.html#torch.optim.Adagrad.register_step_pre_hook", "torch.optim.Adagrad.state_dict()": "generated/torch.optim.adagrad.html#torch.optim.Adagrad.state_dict", "torch.optim.Adagrad.step()": "generated/torch.optim.adagrad.html#torch.optim.Adagrad.step", "torch.optim.Adagrad.zero_grad()": "generated/torch.optim.adagrad.html#torch.optim.Adagrad.zero_grad", "torch.optim.Adam": "generated/torch.optim.adam.html", "torch.optim.Adam.add_param_group()": "generated/torch.optim.adam.html#torch.optim.Adam.add_param_group", "torch.optim.Adam.load_state_dict()": "generated/torch.optim.adam.html#torch.optim.Adam.load_state_dict", "torch.optim.Adam.register_load_state_dict_post_hook()": "generated/torch.optim.adam.html#torch.optim.Adam.register_load_state_dict_post_hook", "torch.optim.Adam.register_load_state_dict_pre_hook()": "generated/torch.optim.adam.html#torch.optim.Adam.register_load_state_dict_pre_hook", "torch.optim.Adam.register_state_dict_post_hook()": "generated/torch.optim.adam.html#torch.optim.Adam.register_state_dict_post_hook", "torch.optim.Adam.register_state_dict_pre_hook()": "generated/torch.optim.adam.html#torch.optim.Adam.register_state_dict_pre_hook", "torch.optim.Adam.register_step_post_hook()": "generated/torch.optim.adam.html#torch.optim.Adam.register_step_post_hook", "torch.optim.Adam.register_step_pre_hook()": "generated/torch.optim.adam.html#torch.optim.Adam.register_step_pre_hook", "torch.optim.Adam.state_dict()": "generated/torch.optim.adam.html#torch.optim.Adam.state_dict", "torch.optim.Adam.step()": "generated/torch.optim.adam.html#torch.optim.Adam.step", "torch.optim.Adam.zero_grad()": "generated/torch.optim.adam.html#torch.optim.Adam.zero_grad", "torch.optim.Adamax": "generated/torch.optim.adamax.html", "torch.optim.Adamax.add_param_group()": "generated/torch.optim.adamax.html#torch.optim.Adamax.add_param_group", "torch.optim.Adamax.load_state_dict()": "generated/torch.optim.adamax.html#torch.optim.Adamax.load_state_dict", "torch.optim.Adamax.register_load_state_dict_post_hook()": "generated/torch.optim.adamax.html#torch.optim.Adamax.register_load_state_dict_post_hook", "torch.optim.Adamax.register_load_state_dict_pre_hook()": "generated/torch.optim.adamax.html#torch.optim.Adamax.register_load_state_dict_pre_hook", "torch.optim.Adamax.register_state_dict_post_hook()": "generated/torch.optim.adamax.html#torch.optim.Adamax.register_state_dict_post_hook", "torch.optim.Adamax.register_state_dict_pre_hook()": "generated/torch.optim.adamax.html#torch.optim.Adamax.register_state_dict_pre_hook", "torch.optim.Adamax.register_step_post_hook()": "generated/torch.optim.adamax.html#torch.optim.Adamax.register_step_post_hook", "torch.optim.Adamax.register_step_pre_hook()": "generated/torch.optim.adamax.html#torch.optim.Adamax.register_step_pre_hook", "torch.optim.Adamax.state_dict()": "generated/torch.optim.adamax.html#torch.optim.Adamax.state_dict", "torch.optim.Adamax.step()": "generated/torch.optim.adamax.html#torch.optim.Adamax.step", "torch.optim.Adamax.zero_grad()": "generated/torch.optim.adamax.html#torch.optim.Adamax.zero_grad", "torch.optim.AdamW": "generated/torch.optim.adamw.html", "torch.optim.AdamW.add_param_group()": "generated/torch.optim.adamw.html#torch.optim.AdamW.add_param_group", "torch.optim.AdamW.load_state_dict()": "generated/torch.optim.adamw.html#torch.optim.AdamW.load_state_dict", "torch.optim.AdamW.register_load_state_dict_post_hook()": "generated/torch.optim.adamw.html#torch.optim.AdamW.register_load_state_dict_post_hook", "torch.optim.AdamW.register_load_state_dict_pre_hook()": "generated/torch.optim.adamw.html#torch.optim.AdamW.register_load_state_dict_pre_hook", "torch.optim.AdamW.register_state_dict_post_hook()": "generated/torch.optim.adamw.html#torch.optim.AdamW.register_state_dict_post_hook", "torch.optim.AdamW.register_state_dict_pre_hook()": "generated/torch.optim.adamw.html#torch.optim.AdamW.register_state_dict_pre_hook", "torch.optim.AdamW.register_step_post_hook()": "generated/torch.optim.adamw.html#torch.optim.AdamW.register_step_post_hook", "torch.optim.AdamW.register_step_pre_hook()": "generated/torch.optim.adamw.html#torch.optim.AdamW.register_step_pre_hook", "torch.optim.AdamW.state_dict()": "generated/torch.optim.adamw.html#torch.optim.AdamW.state_dict", "torch.optim.AdamW.step()": "generated/torch.optim.adamw.html#torch.optim.AdamW.step", "torch.optim.AdamW.zero_grad()": "generated/torch.optim.adamw.html#torch.optim.AdamW.zero_grad", "torch.optim.ASGD": "generated/torch.optim.asgd.html", "torch.optim.ASGD.add_param_group()": "generated/torch.optim.asgd.html#torch.optim.ASGD.add_param_group", "torch.optim.ASGD.load_state_dict()": "generated/torch.optim.asgd.html#torch.optim.ASGD.load_state_dict", "torch.optim.ASGD.register_load_state_dict_post_hook()": "generated/torch.optim.asgd.html#torch.optim.ASGD.register_load_state_dict_post_hook", "torch.optim.ASGD.register_load_state_dict_pre_hook()": "generated/torch.optim.asgd.html#torch.optim.ASGD.register_load_state_dict_pre_hook", "torch.optim.ASGD.register_state_dict_post_hook()": "generated/torch.optim.asgd.html#torch.optim.ASGD.register_state_dict_post_hook", "torch.optim.ASGD.register_state_dict_pre_hook()": "generated/torch.optim.asgd.html#torch.optim.ASGD.register_state_dict_pre_hook", "torch.optim.ASGD.register_step_post_hook()": "generated/torch.optim.asgd.html#torch.optim.ASGD.register_step_post_hook", "torch.optim.ASGD.register_step_pre_hook()": "generated/torch.optim.asgd.html#torch.optim.ASGD.register_step_pre_hook", "torch.optim.ASGD.state_dict()": "generated/torch.optim.asgd.html#torch.optim.ASGD.state_dict", "torch.optim.ASGD.step()": "generated/torch.optim.asgd.html#torch.optim.ASGD.step", "torch.optim.ASGD.zero_grad()": "generated/torch.optim.asgd.html#torch.optim.ASGD.zero_grad", "torch.optim.ChainedScheduler": "generated/torch.optim.lr_scheduler.chainedscheduler.html", "torch.optim.ConstantLR": "generated/torch.optim.lr_scheduler.constantlr.html", "torch.optim.CosineAnnealingLR": "generated/torch.optim.lr_scheduler.cosineannealinglr.html", "torch.optim.CosineAnnealingWarmRestarts": "generated/torch.optim.lr_scheduler.cosineannealingwarmrestarts.html", "torch.optim.CyclicLR": "generated/torch.optim.lr_scheduler.cycliclr.html", "torch.optim.ExponentialLR": "generated/torch.optim.lr_scheduler.exponentiallr.html", "torch.optim.LambdaLR": "generated/torch.optim.lr_scheduler.lambdalr.html", "torch.optim.LBFGS": "generated/torch.optim.lbfgs.html", "torch.optim.LBFGS.add_param_group()": "generated/torch.optim.lbfgs.html#torch.optim.LBFGS.add_param_group", "torch.optim.LBFGS.load_state_dict()": "generated/torch.optim.lbfgs.html#torch.optim.LBFGS.load_state_dict", "torch.optim.LBFGS.register_load_state_dict_post_hook()": "generated/torch.optim.lbfgs.html#torch.optim.LBFGS.register_load_state_dict_post_hook", "torch.optim.LBFGS.register_load_state_dict_pre_hook()": "generated/torch.optim.lbfgs.html#torch.optim.LBFGS.register_load_state_dict_pre_hook", "torch.optim.LBFGS.register_state_dict_post_hook()": "generated/torch.optim.lbfgs.html#torch.optim.LBFGS.register_state_dict_post_hook", "torch.optim.LBFGS.register_state_dict_pre_hook()": "generated/torch.optim.lbfgs.html#torch.optim.LBFGS.register_state_dict_pre_hook", "torch.optim.LBFGS.register_step_post_hook()": "generated/torch.optim.lbfgs.html#torch.optim.LBFGS.register_step_post_hook", "torch.optim.LBFGS.register_step_pre_hook()": "generated/torch.optim.lbfgs.html#torch.optim.LBFGS.register_step_pre_hook", "torch.optim.LBFGS.state_dict()": "generated/torch.optim.lbfgs.html#torch.optim.LBFGS.state_dict", "torch.optim.LBFGS.step()": "generated/torch.optim.lbfgs.html#torch.optim.LBFGS.step", "torch.optim.LBFGS.zero_grad()": "generated/torch.optim.lbfgs.html#torch.optim.LBFGS.zero_grad", "torch.optim.LinearLR": "generated/torch.optim.lr_scheduler.linearlr.html", "torch.optim.lr_scheduler.ChainedScheduler": "generated/torch.optim.lr_scheduler.chainedscheduler.html#torch.optim.lr_scheduler.ChainedScheduler", "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr()": "generated/torch.optim.lr_scheduler.chainedscheduler.html#torch.optim.lr_scheduler.ChainedScheduler.get_last_lr", "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict()": "generated/torch.optim.lr_scheduler.chainedscheduler.html#torch.optim.lr_scheduler.ChainedScheduler.load_state_dict", "torch.optim.lr_scheduler.ChainedScheduler.print_lr()": "generated/torch.optim.lr_scheduler.chainedscheduler.html#torch.optim.lr_scheduler.ChainedScheduler.print_lr", "torch.optim.lr_scheduler.ChainedScheduler.state_dict()": "generated/torch.optim.lr_scheduler.chainedscheduler.html#torch.optim.lr_scheduler.ChainedScheduler.state_dict", "torch.optim.lr_scheduler.ConstantLR": "generated/torch.optim.lr_scheduler.constantlr.html#torch.optim.lr_scheduler.ConstantLR", "torch.optim.lr_scheduler.ConstantLR.get_last_lr()": "generated/torch.optim.lr_scheduler.constantlr.html#torch.optim.lr_scheduler.ConstantLR.get_last_lr", "torch.optim.lr_scheduler.ConstantLR.load_state_dict()": "generated/torch.optim.lr_scheduler.constantlr.html#torch.optim.lr_scheduler.ConstantLR.load_state_dict", "torch.optim.lr_scheduler.ConstantLR.print_lr()": "generated/torch.optim.lr_scheduler.constantlr.html#torch.optim.lr_scheduler.ConstantLR.print_lr", "torch.optim.lr_scheduler.ConstantLR.state_dict()": "generated/torch.optim.lr_scheduler.constantlr.html#torch.optim.lr_scheduler.ConstantLR.state_dict", "torch.optim.lr_scheduler.CosineAnnealingLR": "generated/torch.optim.lr_scheduler.cosineannealinglr.html#torch.optim.lr_scheduler.CosineAnnealingLR", "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr()": "generated/torch.optim.lr_scheduler.cosineannealinglr.html#torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr", "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict()": "generated/torch.optim.lr_scheduler.cosineannealinglr.html#torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict", "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr()": "generated/torch.optim.lr_scheduler.cosineannealinglr.html#torch.optim.lr_scheduler.CosineAnnealingLR.print_lr", "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict()": "generated/torch.optim.lr_scheduler.cosineannealinglr.html#torch.optim.lr_scheduler.CosineAnnealingLR.state_dict", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": "generated/torch.optim.lr_scheduler.cosineannealingwarmrestarts.html#torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr()": "generated/torch.optim.lr_scheduler.cosineannealingwarmrestarts.html#torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict()": "generated/torch.optim.lr_scheduler.cosineannealingwarmrestarts.html#torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr()": "generated/torch.optim.lr_scheduler.cosineannealingwarmrestarts.html#torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict()": "generated/torch.optim.lr_scheduler.cosineannealingwarmrestarts.html#torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict", "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step()": "generated/torch.optim.lr_scheduler.cosineannealingwarmrestarts.html#torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step", "torch.optim.lr_scheduler.CyclicLR": "generated/torch.optim.lr_scheduler.cycliclr.html#torch.optim.lr_scheduler.CyclicLR", "torch.optim.lr_scheduler.CyclicLR.get_last_lr()": "generated/torch.optim.lr_scheduler.cycliclr.html#torch.optim.lr_scheduler.CyclicLR.get_last_lr", "torch.optim.lr_scheduler.CyclicLR.get_lr()": "generated/torch.optim.lr_scheduler.cycliclr.html#torch.optim.lr_scheduler.CyclicLR.get_lr", "torch.optim.lr_scheduler.CyclicLR.print_lr()": "generated/torch.optim.lr_scheduler.cycliclr.html#torch.optim.lr_scheduler.CyclicLR.print_lr", "torch.optim.lr_scheduler.ExponentialLR": "generated/torch.optim.lr_scheduler.exponentiallr.html#torch.optim.lr_scheduler.ExponentialLR", "torch.optim.lr_scheduler.ExponentialLR.get_last_lr()": "generated/torch.optim.lr_scheduler.exponentiallr.html#torch.optim.lr_scheduler.ExponentialLR.get_last_lr", "torch.optim.lr_scheduler.ExponentialLR.load_state_dict()": "generated/torch.optim.lr_scheduler.exponentiallr.html#torch.optim.lr_scheduler.ExponentialLR.load_state_dict", "torch.optim.lr_scheduler.ExponentialLR.print_lr()": "generated/torch.optim.lr_scheduler.exponentiallr.html#torch.optim.lr_scheduler.ExponentialLR.print_lr", "torch.optim.lr_scheduler.ExponentialLR.state_dict()": "generated/torch.optim.lr_scheduler.exponentiallr.html#torch.optim.lr_scheduler.ExponentialLR.state_dict", "torch.optim.lr_scheduler.LambdaLR": "generated/torch.optim.lr_scheduler.lambdalr.html#torch.optim.lr_scheduler.LambdaLR", "torch.optim.lr_scheduler.LambdaLR.get_last_lr()": "generated/torch.optim.lr_scheduler.lambdalr.html#torch.optim.lr_scheduler.LambdaLR.get_last_lr", "torch.optim.lr_scheduler.LambdaLR.load_state_dict()": "generated/torch.optim.lr_scheduler.lambdalr.html#torch.optim.lr_scheduler.LambdaLR.load_state_dict", "torch.optim.lr_scheduler.LambdaLR.print_lr()": "generated/torch.optim.lr_scheduler.lambdalr.html#torch.optim.lr_scheduler.LambdaLR.print_lr", "torch.optim.lr_scheduler.LambdaLR.state_dict()": "generated/torch.optim.lr_scheduler.lambdalr.html#torch.optim.lr_scheduler.LambdaLR.state_dict", "torch.optim.lr_scheduler.LinearLR": "generated/torch.optim.lr_scheduler.linearlr.html#torch.optim.lr_scheduler.LinearLR", "torch.optim.lr_scheduler.LinearLR.get_last_lr()": "generated/torch.optim.lr_scheduler.linearlr.html#torch.optim.lr_scheduler.LinearLR.get_last_lr", "torch.optim.lr_scheduler.LinearLR.load_state_dict()": "generated/torch.optim.lr_scheduler.linearlr.html#torch.optim.lr_scheduler.LinearLR.load_state_dict", "torch.optim.lr_scheduler.LinearLR.print_lr()": "generated/torch.optim.lr_scheduler.linearlr.html#torch.optim.lr_scheduler.LinearLR.print_lr", "torch.optim.lr_scheduler.LinearLR.state_dict()": "generated/torch.optim.lr_scheduler.linearlr.html#torch.optim.lr_scheduler.LinearLR.state_dict", "torch.optim.lr_scheduler.MultiplicativeLR": "generated/torch.optim.lr_scheduler.multiplicativelr.html#torch.optim.lr_scheduler.MultiplicativeLR", "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr()": "generated/torch.optim.lr_scheduler.multiplicativelr.html#torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr", "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict()": "generated/torch.optim.lr_scheduler.multiplicativelr.html#torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict", "torch.optim.lr_scheduler.MultiplicativeLR.print_lr()": "generated/torch.optim.lr_scheduler.multiplicativelr.html#torch.optim.lr_scheduler.MultiplicativeLR.print_lr", "torch.optim.lr_scheduler.MultiplicativeLR.state_dict()": "generated/torch.optim.lr_scheduler.multiplicativelr.html#torch.optim.lr_scheduler.MultiplicativeLR.state_dict", "torch.optim.lr_scheduler.MultiStepLR": "generated/torch.optim.lr_scheduler.multisteplr.html#torch.optim.lr_scheduler.MultiStepLR", "torch.optim.lr_scheduler.MultiStepLR.get_last_lr()": "generated/torch.optim.lr_scheduler.multisteplr.html#torch.optim.lr_scheduler.MultiStepLR.get_last_lr", "torch.optim.lr_scheduler.MultiStepLR.load_state_dict()": "generated/torch.optim.lr_scheduler.multisteplr.html#torch.optim.lr_scheduler.MultiStepLR.load_state_dict", "torch.optim.lr_scheduler.MultiStepLR.print_lr()": "generated/torch.optim.lr_scheduler.multisteplr.html#torch.optim.lr_scheduler.MultiStepLR.print_lr", "torch.optim.lr_scheduler.MultiStepLR.state_dict()": "generated/torch.optim.lr_scheduler.multisteplr.html#torch.optim.lr_scheduler.MultiStepLR.state_dict", "torch.optim.lr_scheduler.OneCycleLR": "generated/torch.optim.lr_scheduler.onecyclelr.html#torch.optim.lr_scheduler.OneCycleLR", "torch.optim.lr_scheduler.OneCycleLR.get_last_lr()": "generated/torch.optim.lr_scheduler.onecyclelr.html#torch.optim.lr_scheduler.OneCycleLR.get_last_lr", "torch.optim.lr_scheduler.OneCycleLR.load_state_dict()": "generated/torch.optim.lr_scheduler.onecyclelr.html#torch.optim.lr_scheduler.OneCycleLR.load_state_dict", "torch.optim.lr_scheduler.OneCycleLR.print_lr()": "generated/torch.optim.lr_scheduler.onecyclelr.html#torch.optim.lr_scheduler.OneCycleLR.print_lr", "torch.optim.lr_scheduler.OneCycleLR.state_dict()": "generated/torch.optim.lr_scheduler.onecyclelr.html#torch.optim.lr_scheduler.OneCycleLR.state_dict", "torch.optim.lr_scheduler.PolynomialLR": "generated/torch.optim.lr_scheduler.polynomiallr.html#torch.optim.lr_scheduler.PolynomialLR", "torch.optim.lr_scheduler.PolynomialLR.get_last_lr()": "generated/torch.optim.lr_scheduler.polynomiallr.html#torch.optim.lr_scheduler.PolynomialLR.get_last_lr", "torch.optim.lr_scheduler.PolynomialLR.load_state_dict()": "generated/torch.optim.lr_scheduler.polynomiallr.html#torch.optim.lr_scheduler.PolynomialLR.load_state_dict", "torch.optim.lr_scheduler.PolynomialLR.print_lr()": "generated/torch.optim.lr_scheduler.polynomiallr.html#torch.optim.lr_scheduler.PolynomialLR.print_lr", "torch.optim.lr_scheduler.PolynomialLR.state_dict()": "generated/torch.optim.lr_scheduler.polynomiallr.html#torch.optim.lr_scheduler.PolynomialLR.state_dict", "torch.optim.lr_scheduler.ReduceLROnPlateau": "generated/torch.optim.lr_scheduler.reducelronplateau.html#torch.optim.lr_scheduler.ReduceLROnPlateau", "torch.optim.lr_scheduler.SequentialLR": "generated/torch.optim.lr_scheduler.sequentiallr.html#torch.optim.lr_scheduler.SequentialLR", "torch.optim.lr_scheduler.SequentialLR.get_last_lr()": "generated/torch.optim.lr_scheduler.sequentiallr.html#torch.optim.lr_scheduler.SequentialLR.get_last_lr", "torch.optim.lr_scheduler.SequentialLR.load_state_dict()": "generated/torch.optim.lr_scheduler.sequentiallr.html#torch.optim.lr_scheduler.SequentialLR.load_state_dict", "torch.optim.lr_scheduler.SequentialLR.print_lr()": "generated/torch.optim.lr_scheduler.sequentiallr.html#torch.optim.lr_scheduler.SequentialLR.print_lr", "torch.optim.lr_scheduler.SequentialLR.state_dict()": "generated/torch.optim.lr_scheduler.sequentiallr.html#torch.optim.lr_scheduler.SequentialLR.state_dict", "torch.optim.lr_scheduler.StepLR": "generated/torch.optim.lr_scheduler.steplr.html#torch.optim.lr_scheduler.StepLR", "torch.optim.lr_scheduler.StepLR.get_last_lr()": "generated/torch.optim.lr_scheduler.steplr.html#torch.optim.lr_scheduler.StepLR.get_last_lr", "torch.optim.lr_scheduler.StepLR.load_state_dict()": "generated/torch.optim.lr_scheduler.steplr.html#torch.optim.lr_scheduler.StepLR.load_state_dict", "torch.optim.lr_scheduler.StepLR.print_lr()": "generated/torch.optim.lr_scheduler.steplr.html#torch.optim.lr_scheduler.StepLR.print_lr", "torch.optim.lr_scheduler.StepLR.state_dict()": "generated/torch.optim.lr_scheduler.steplr.html#torch.optim.lr_scheduler.StepLR.state_dict", "torch.optim.MultiplicativeLR": "generated/torch.optim.lr_scheduler.multiplicativelr.html", "torch.optim.MultiStepLR": "generated/torch.optim.lr_scheduler.multisteplr.html", "torch.optim.NAdam": "generated/torch.optim.nadam.html", "torch.optim.NAdam.add_param_group()": "generated/torch.optim.nadam.html#torch.optim.NAdam.add_param_group", "torch.optim.NAdam.load_state_dict()": "generated/torch.optim.nadam.html#torch.optim.NAdam.load_state_dict", "torch.optim.NAdam.register_load_state_dict_post_hook()": "generated/torch.optim.nadam.html#torch.optim.NAdam.register_load_state_dict_post_hook", "torch.optim.NAdam.register_load_state_dict_pre_hook()": "generated/torch.optim.nadam.html#torch.optim.NAdam.register_load_state_dict_pre_hook", "torch.optim.NAdam.register_state_dict_post_hook()": "generated/torch.optim.nadam.html#torch.optim.NAdam.register_state_dict_post_hook", "torch.optim.NAdam.register_state_dict_pre_hook()": "generated/torch.optim.nadam.html#torch.optim.NAdam.register_state_dict_pre_hook", "torch.optim.NAdam.register_step_post_hook()": "generated/torch.optim.nadam.html#torch.optim.NAdam.register_step_post_hook", "torch.optim.NAdam.register_step_pre_hook()": "generated/torch.optim.nadam.html#torch.optim.NAdam.register_step_pre_hook", "torch.optim.NAdam.state_dict()": "generated/torch.optim.nadam.html#torch.optim.NAdam.state_dict", "torch.optim.NAdam.step()": "generated/torch.optim.nadam.html#torch.optim.NAdam.step", "torch.optim.NAdam.zero_grad()": "generated/torch.optim.nadam.html#torch.optim.NAdam.zero_grad", "torch.optim.OneCycleLR": "generated/torch.optim.lr_scheduler.onecyclelr.html", "torch.optim.Optimizer": "optim.html#torch.optim.Optimizer", "torch.optim.Optimizer.add_param_group()": "generated/torch.optim.optimizer.add_param_group.html#torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict()": "generated/torch.optim.optimizer.load_state_dict.html#torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict()": "generated/torch.optim.optimizer.state_dict.html#torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step()": "generated/torch.optim.optimizer.step.html#torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad()": "generated/torch.optim.optimizer.zero_grad.html#torch.optim.Optimizer.zero_grad", "torch.optim.PolynomialLR": "generated/torch.optim.lr_scheduler.polynomiallr.html", "torch.optim.RAdam": "generated/torch.optim.radam.html", "torch.optim.RAdam.add_param_group()": "generated/torch.optim.radam.html#torch.optim.RAdam.add_param_group", "torch.optim.RAdam.load_state_dict()": "generated/torch.optim.radam.html#torch.optim.RAdam.load_state_dict", "torch.optim.RAdam.register_load_state_dict_post_hook()": "generated/torch.optim.radam.html#torch.optim.RAdam.register_load_state_dict_post_hook", "torch.optim.RAdam.register_load_state_dict_pre_hook()": "generated/torch.optim.radam.html#torch.optim.RAdam.register_load_state_dict_pre_hook", "torch.optim.RAdam.register_state_dict_post_hook()": "generated/torch.optim.radam.html#torch.optim.RAdam.register_state_dict_post_hook", "torch.optim.RAdam.register_state_dict_pre_hook()": "generated/torch.optim.radam.html#torch.optim.RAdam.register_state_dict_pre_hook", "torch.optim.RAdam.register_step_post_hook()": "generated/torch.optim.radam.html#torch.optim.RAdam.register_step_post_hook", "torch.optim.RAdam.register_step_pre_hook()": "generated/torch.optim.radam.html#torch.optim.RAdam.register_step_pre_hook", "torch.optim.RAdam.state_dict()": "generated/torch.optim.radam.html#torch.optim.RAdam.state_dict", "torch.optim.RAdam.step()": "generated/torch.optim.radam.html#torch.optim.RAdam.step", "torch.optim.RAdam.zero_grad()": "generated/torch.optim.radam.html#torch.optim.RAdam.zero_grad", "torch.optim.ReduceLROnPlateau": "generated/torch.optim.lr_scheduler.reducelronplateau.html", "torch.optim.RMSprop": "generated/torch.optim.rmsprop.html", "torch.optim.RMSprop.add_param_group()": "generated/torch.optim.rmsprop.html#torch.optim.RMSprop.add_param_group", "torch.optim.RMSprop.load_state_dict()": "generated/torch.optim.rmsprop.html#torch.optim.RMSprop.load_state_dict", "torch.optim.RMSprop.register_load_state_dict_post_hook()": "generated/torch.optim.rmsprop.html#torch.optim.RMSprop.register_load_state_dict_post_hook", "torch.optim.RMSprop.register_load_state_dict_pre_hook()": "generated/torch.optim.rmsprop.html#torch.optim.RMSprop.register_load_state_dict_pre_hook", "torch.optim.RMSprop.register_state_dict_post_hook()": "generated/torch.optim.rmsprop.html#torch.optim.RMSprop.register_state_dict_post_hook", "torch.optim.RMSprop.register_state_dict_pre_hook()": "generated/torch.optim.rmsprop.html#torch.optim.RMSprop.register_state_dict_pre_hook", "torch.optim.RMSprop.register_step_post_hook()": "generated/torch.optim.rmsprop.html#torch.optim.RMSprop.register_step_post_hook", "torch.optim.RMSprop.register_step_pre_hook()": "generated/torch.optim.rmsprop.html#torch.optim.RMSprop.register_step_pre_hook", "torch.optim.RMSprop.state_dict()": "generated/torch.optim.rmsprop.html#torch.optim.RMSprop.state_dict", "torch.optim.RMSprop.step()": "generated/torch.optim.rmsprop.html#torch.optim.RMSprop.step", "torch.optim.RMSprop.zero_grad()": "generated/torch.optim.rmsprop.html#torch.optim.RMSprop.zero_grad", "torch.optim.Rprop": "generated/torch.optim.rprop.html", "torch.optim.Rprop.add_param_group()": "generated/torch.optim.rprop.html#torch.optim.Rprop.add_param_group", "torch.optim.Rprop.load_state_dict()": "generated/torch.optim.rprop.html#torch.optim.Rprop.load_state_dict", "torch.optim.Rprop.register_load_state_dict_post_hook()": "generated/torch.optim.rprop.html#torch.optim.Rprop.register_load_state_dict_post_hook", "torch.optim.Rprop.register_load_state_dict_pre_hook()": "generated/torch.optim.rprop.html#torch.optim.Rprop.register_load_state_dict_pre_hook", "torch.optim.Rprop.register_state_dict_post_hook()": "generated/torch.optim.rprop.html#torch.optim.Rprop.register_state_dict_post_hook", "torch.optim.Rprop.register_state_dict_pre_hook()": "generated/torch.optim.rprop.html#torch.optim.Rprop.register_state_dict_pre_hook", "torch.optim.Rprop.register_step_post_hook()": "generated/torch.optim.rprop.html#torch.optim.Rprop.register_step_post_hook", "torch.optim.Rprop.register_step_pre_hook()": "generated/torch.optim.rprop.html#torch.optim.Rprop.register_step_pre_hook", "torch.optim.Rprop.state_dict()": "generated/torch.optim.rprop.html#torch.optim.Rprop.state_dict", "torch.optim.Rprop.step()": "generated/torch.optim.rprop.html#torch.optim.Rprop.step", "torch.optim.Rprop.zero_grad()": "generated/torch.optim.rprop.html#torch.optim.Rprop.zero_grad", "torch.optim.SequentialLR": "generated/torch.optim.lr_scheduler.sequentiallr.html", "torch.optim.SGD": "generated/torch.optim.sgd.html", "torch.optim.SGD.add_param_group()": "generated/torch.optim.sgd.html#torch.optim.SGD.add_param_group", "torch.optim.SGD.load_state_dict()": "generated/torch.optim.sgd.html#torch.optim.SGD.load_state_dict", "torch.optim.SGD.register_load_state_dict_post_hook()": "generated/torch.optim.sgd.html#torch.optim.SGD.register_load_state_dict_post_hook", "torch.optim.SGD.register_load_state_dict_pre_hook()": "generated/torch.optim.sgd.html#torch.optim.SGD.register_load_state_dict_pre_hook", "torch.optim.SGD.register_state_dict_post_hook()": "generated/torch.optim.sgd.html#torch.optim.SGD.register_state_dict_post_hook", "torch.optim.SGD.register_state_dict_pre_hook()": "generated/torch.optim.sgd.html#torch.optim.SGD.register_state_dict_pre_hook", "torch.optim.SGD.register_step_post_hook()": "generated/torch.optim.sgd.html#torch.optim.SGD.register_step_post_hook", "torch.optim.SGD.register_step_pre_hook()": "generated/torch.optim.sgd.html#torch.optim.SGD.register_step_pre_hook", "torch.optim.SGD.state_dict()": "generated/torch.optim.sgd.html#torch.optim.SGD.state_dict", "torch.optim.SGD.step()": "generated/torch.optim.sgd.html#torch.optim.SGD.step", "torch.optim.SGD.zero_grad()": "generated/torch.optim.sgd.html#torch.optim.SGD.zero_grad", "torch.optim.SparseAdam": "generated/torch.optim.sparseadam.html", "torch.optim.SparseAdam.add_param_group()": "generated/torch.optim.sparseadam.html#torch.optim.SparseAdam.add_param_group", "torch.optim.SparseAdam.load_state_dict()": "generated/torch.optim.sparseadam.html#torch.optim.SparseAdam.load_state_dict", "torch.optim.SparseAdam.register_load_state_dict_post_hook()": "generated/torch.optim.sparseadam.html#torch.optim.SparseAdam.register_load_state_dict_post_hook", "torch.optim.SparseAdam.register_load_state_dict_pre_hook()": "generated/torch.optim.sparseadam.html#torch.optim.SparseAdam.register_load_state_dict_pre_hook", "torch.optim.SparseAdam.register_state_dict_post_hook()": "generated/torch.optim.sparseadam.html#torch.optim.SparseAdam.register_state_dict_post_hook", "torch.optim.SparseAdam.register_state_dict_pre_hook()": "generated/torch.optim.sparseadam.html#torch.optim.SparseAdam.register_state_dict_pre_hook", "torch.optim.SparseAdam.register_step_post_hook()": "generated/torch.optim.sparseadam.html#torch.optim.SparseAdam.register_step_post_hook", "torch.optim.SparseAdam.register_step_pre_hook()": "generated/torch.optim.sparseadam.html#torch.optim.SparseAdam.register_step_pre_hook", "torch.optim.SparseAdam.state_dict()": "generated/torch.optim.sparseadam.html#torch.optim.SparseAdam.state_dict", "torch.optim.SparseAdam.step()": "generated/torch.optim.sparseadam.html#torch.optim.SparseAdam.step", "torch.optim.SparseAdam.zero_grad()": "generated/torch.optim.sparseadam.html#torch.optim.SparseAdam.zero_grad", "torch.optim.StepLR": "generated/torch.optim.lr_scheduler.steplr.html", "torch.optim.torch.optim.Optimizer.add_param_group": "generated/torch.optim.optimizer.add_param_group.html", "torch.optim.torch.optim.Optimizer.load_state_dict": "generated/torch.optim.optimizer.load_state_dict.html", "torch.optim.torch.optim.Optimizer.state_dict": "generated/torch.optim.optimizer.state_dict.html", "torch.optim.torch.optim.Optimizer.step": "generated/torch.optim.optimizer.step.html", "torch.optim.torch.optim.Optimizer.zero_grad": "generated/torch.optim.optimizer.zero_grad.html", "torch.orgqr": "generated/torch.orgqr.html", "torch.ormqr": "generated/torch.ormqr.html", "torch.outer": "generated/torch.outer.html", "torch.overrides": "torch.overrides.html", "torch.overrides.get_ignored_functions()": "torch.overrides.html#torch.overrides.get_ignored_functions", "torch.overrides.get_overridable_functions()": "torch.overrides.html#torch.overrides.get_overridable_functions", "torch.overrides.get_testing_overrides()": "torch.overrides.html#torch.overrides.get_testing_overrides", "torch.overrides.handle_torch_function()": "torch.overrides.html#torch.overrides.handle_torch_function", "torch.overrides.has_torch_function()": "torch.overrides.html#torch.overrides.has_torch_function", "torch.overrides.is_tensor_like()": "torch.overrides.html#torch.overrides.is_tensor_like", "torch.overrides.is_tensor_method_or_property()": "torch.overrides.html#torch.overrides.is_tensor_method_or_property", "torch.overrides.resolve_name()": "torch.overrides.html#torch.overrides.resolve_name", "torch.overrides.wrap_torch_function()": "torch.overrides.html#torch.overrides.wrap_torch_function", "torch.package": "package.html", "torch.package.Directory": "package.html#torch.package.Directory", "torch.package.Directory.has_file()": "package.html#torch.package.Directory.has_file", "torch.package.EmptyMatchError": "package.html#torch.package.EmptyMatchError", "torch.package.PackageExporter": "package.html#torch.package.PackageExporter", "torch.package.PackageExporter.__init__()": "package.html#torch.package.PackageExporter.__init__", "torch.package.PackageExporter.add_dependency()": "package.html#torch.package.PackageExporter.add_dependency", "torch.package.PackageExporter.all_paths()": "package.html#torch.package.PackageExporter.all_paths", "torch.package.PackageExporter.close()": "package.html#torch.package.PackageExporter.close", "torch.package.PackageExporter.denied_modules()": "package.html#torch.package.PackageExporter.denied_modules", "torch.package.PackageExporter.deny()": "package.html#torch.package.PackageExporter.deny", "torch.package.PackageExporter.dependency_graph_string()": "package.html#torch.package.PackageExporter.dependency_graph_string", "torch.package.PackageExporter.extern()": "package.html#torch.package.PackageExporter.extern", "torch.package.PackageExporter.externed_modules()": "package.html#torch.package.PackageExporter.externed_modules", "torch.package.PackageExporter.get_rdeps()": "package.html#torch.package.PackageExporter.get_rdeps", "torch.package.PackageExporter.get_unique_id()": "package.html#torch.package.PackageExporter.get_unique_id", "torch.package.PackageExporter.intern()": "package.html#torch.package.PackageExporter.intern", "torch.package.PackageExporter.interned_modules()": "package.html#torch.package.PackageExporter.interned_modules", "torch.package.PackageExporter.mock()": "package.html#torch.package.PackageExporter.mock", "torch.package.PackageExporter.mocked_modules()": "package.html#torch.package.PackageExporter.mocked_modules", "torch.package.PackageExporter.register_extern_hook()": "package.html#torch.package.PackageExporter.register_extern_hook", "torch.package.PackageExporter.register_intern_hook()": "package.html#torch.package.PackageExporter.register_intern_hook", "torch.package.PackageExporter.register_mock_hook()": "package.html#torch.package.PackageExporter.register_mock_hook", "torch.package.PackageExporter.save_binary()": "package.html#torch.package.PackageExporter.save_binary", "torch.package.PackageExporter.save_module()": "package.html#torch.package.PackageExporter.save_module", "torch.package.PackageExporter.save_pickle()": "package.html#torch.package.PackageExporter.save_pickle", "torch.package.PackageExporter.save_source_file()": "package.html#torch.package.PackageExporter.save_source_file", "torch.package.PackageExporter.save_source_string()": "package.html#torch.package.PackageExporter.save_source_string", "torch.package.PackageExporter.save_text()": "package.html#torch.package.PackageExporter.save_text", "torch.package.PackageImporter": "package.html#torch.package.PackageImporter", "torch.package.PackageImporter.__init__()": "package.html#torch.package.PackageImporter.__init__", "torch.package.PackageImporter.file_structure()": "package.html#torch.package.PackageImporter.file_structure", "torch.package.PackageImporter.id()": "package.html#torch.package.PackageImporter.id", "torch.package.PackageImporter.import_module()": "package.html#torch.package.PackageImporter.import_module", "torch.package.PackageImporter.load_binary()": "package.html#torch.package.PackageImporter.load_binary", "torch.package.PackageImporter.load_pickle()": "package.html#torch.package.PackageImporter.load_pickle", "torch.package.PackageImporter.load_text()": "package.html#torch.package.PackageImporter.load_text", "torch.package.PackageImporter.python_version()": "package.html#torch.package.PackageImporter.python_version", "torch.package.PackagingError": "package.html#torch.package.PackagingError", "torch.pca_lowrank": "generated/torch.pca_lowrank.html", "torch.permute": "generated/torch.permute.html", "torch.pinverse": "generated/torch.pinverse.html", "torch.poisson": "generated/torch.poisson.html", "torch.polar": "generated/torch.polar.html", "torch.polygamma": "generated/torch.polygamma.html", "torch.positive": "generated/torch.positive.html", "torch.pow": "generated/torch.pow.html", "torch.prod": "generated/torch.prod.html", "torch.profiler": "profiler.html", "torch.profiler._KinetoProfile": "profiler.html#torch.profiler._KinetoProfile", "torch.profiler._KinetoProfile.add_metadata()": "profiler.html#torch.profiler._KinetoProfile.add_metadata", "torch.profiler._KinetoProfile.add_metadata_json()": "profiler.html#torch.profiler._KinetoProfile.add_metadata_json", "torch.profiler._KinetoProfile.events()": "profiler.html#torch.profiler._KinetoProfile.events", "torch.profiler._KinetoProfile.export_chrome_trace()": "profiler.html#torch.profiler._KinetoProfile.export_chrome_trace", "torch.profiler._KinetoProfile.export_memory_timeline()": "profiler.html#torch.profiler._KinetoProfile.export_memory_timeline", "torch.profiler._KinetoProfile.export_stacks()": "profiler.html#torch.profiler._KinetoProfile.export_stacks", "torch.profiler._KinetoProfile.key_averages()": "profiler.html#torch.profiler._KinetoProfile.key_averages", "torch.profiler.itt.is_available()": "profiler.html#torch.profiler.itt.is_available", "torch.profiler.itt.mark()": "profiler.html#torch.profiler.itt.mark", "torch.profiler.itt.range_pop()": "profiler.html#torch.profiler.itt.range_pop", "torch.profiler.itt.range_push()": "profiler.html#torch.profiler.itt.range_push", "torch.profiler.profile": "profiler.html#torch.profiler.profile", "torch.profiler.profile.step()": "profiler.html#torch.profiler.profile.step", "torch.profiler.ProfilerAction": "profiler.html#torch.profiler.ProfilerAction", "torch.profiler.ProfilerActivity": "profiler.html#torch.profiler.ProfilerActivity", "torch.profiler.ProfilerActivity.name": "profiler.html#torch.profiler.ProfilerActivity.name", "torch.profiler.schedule()": "profiler.html#torch.profiler.schedule", "torch.profiler.tensorboard_trace_handler()": "profiler.html#torch.profiler.tensorboard_trace_handler", "torch.promote_types": "generated/torch.promote_types.html", "torch.QInt32Storage": "storage.html#torch.QInt32Storage", "torch.QInt32Storage.dtype": "storage.html#torch.QInt32Storage.dtype", "torch.QInt8Storage": "storage.html#torch.QInt8Storage", "torch.QInt8Storage.dtype": "storage.html#torch.QInt8Storage.dtype", "torch.qr": "generated/torch.qr.html", "torch.quantile": "generated/torch.quantile.html", "torch.quantize_per_channel": "generated/torch.quantize_per_channel.html", "torch.quantize_per_tensor": "generated/torch.quantize_per_tensor.html", "torch.quantized_batch_norm": "generated/torch.quantized_batch_norm.html", "torch.quantized_max_pool1d": "generated/torch.quantized_max_pool1d.html", "torch.quantized_max_pool2d": "generated/torch.quantized_max_pool2d.html", "torch.quasirandom.SobolEngine": "generated/torch.quasirandom.sobolengine.html#torch.quasirandom.SobolEngine", "torch.quasirandom.SobolEngine.draw()": "generated/torch.quasirandom.sobolengine.html#torch.quasirandom.SobolEngine.draw", "torch.quasirandom.SobolEngine.draw_base2()": "generated/torch.quasirandom.sobolengine.html#torch.quasirandom.SobolEngine.draw_base2", "torch.quasirandom.SobolEngine.fast_forward()": "generated/torch.quasirandom.sobolengine.html#torch.quasirandom.SobolEngine.fast_forward", "torch.quasirandom.SobolEngine.reset()": "generated/torch.quasirandom.sobolengine.html#torch.quasirandom.SobolEngine.reset", "torch.QUInt2x4Storage": "storage.html#torch.QUInt2x4Storage", "torch.QUInt2x4Storage.dtype": "storage.html#torch.QUInt2x4Storage.dtype", "torch.QUInt4x2Storage": "storage.html#torch.QUInt4x2Storage", "torch.QUInt4x2Storage.dtype": "storage.html#torch.QUInt4x2Storage.dtype", "torch.QUInt8Storage": "storage.html#torch.QUInt8Storage", "torch.QUInt8Storage.dtype": "storage.html#torch.QUInt8Storage.dtype", "torch.rad2deg": "generated/torch.rad2deg.html", "torch.rand": "generated/torch.rand.html", "torch.rand_like": "generated/torch.rand_like.html", "torch.randint": "generated/torch.randint.html", "torch.randint_like": "generated/torch.randint_like.html", "torch.randn": "generated/torch.randn.html", "torch.randn_like": "generated/torch.randn_like.html", "torch.random": "random.html", "torch.random.fork_rng()": "random.html#torch.random.fork_rng", "torch.random.get_rng_state()": "random.html#torch.random.get_rng_state", "torch.random.initial_seed()": "random.html#torch.random.initial_seed", "torch.random.manual_seed()": "random.html#torch.random.manual_seed", "torch.random.seed()": "random.html#torch.random.seed", "torch.random.set_rng_state()": "random.html#torch.random.set_rng_state", "torch.randperm": "generated/torch.randperm.html", "torch.range": "generated/torch.range.html", "torch.ravel": "generated/torch.ravel.html", "torch.real": "generated/torch.real.html", "torch.reciprocal": "generated/torch.reciprocal.html", "torch.remainder": "generated/torch.remainder.html", "torch.renorm": "generated/torch.renorm.html", "torch.repeat_interleave": "generated/torch.repeat_interleave.html", "torch.reshape": "generated/torch.reshape.html", "torch.resolve_conj": "generated/torch.resolve_conj.html", "torch.resolve_neg": "generated/torch.resolve_neg.html", "torch.result_type": "generated/torch.result_type.html", "torch.roll": "generated/torch.roll.html", "torch.rot90": "generated/torch.rot90.html", "torch.round": "generated/torch.round.html", "torch.row_stack": "generated/torch.row_stack.html", "torch.rsqrt": "generated/torch.rsqrt.html", "torch.save": "generated/torch.save.html", "torch.scatter": "generated/torch.scatter.html", "torch.scatter_add": "generated/torch.scatter_add.html", "torch.scatter_reduce": "generated/torch.scatter_reduce.html", "torch.searchsorted": "generated/torch.searchsorted.html", "torch.seed": "generated/torch.seed.html", "torch.select": "generated/torch.select.html", "torch.select_scatter": "generated/torch.select_scatter.html", "torch.set_default_device": "generated/torch.set_default_device.html", "torch.set_default_dtype": "generated/torch.set_default_dtype.html", "torch.set_default_tensor_type": "generated/torch.set_default_tensor_type.html", "torch.set_deterministic_debug_mode": "generated/torch.set_deterministic_debug_mode.html", "torch.set_float32_matmul_precision": "generated/torch.set_float32_matmul_precision.html", "torch.set_flush_denormal": "generated/torch.set_flush_denormal.html", "torch.set_grad_enabled": "generated/torch.set_grad_enabled.html#torch.set_grad_enabled", "torch.set_num_interop_threads": "generated/torch.set_num_interop_threads.html", "torch.set_num_threads": "generated/torch.set_num_threads.html", "torch.set_printoptions": "generated/torch.set_printoptions.html", "torch.set_rng_state": "generated/torch.set_rng_state.html", "torch.set_warn_always": "generated/torch.set_warn_always.html", "torch.sgn": "generated/torch.sgn.html", "torch.ShortStorage": "storage.html#torch.ShortStorage", "torch.ShortStorage.dtype": "storage.html#torch.ShortStorage.dtype", "torch.sigmoid": "generated/torch.sigmoid.html", "torch.sign": "generated/torch.sign.html", "torch.signal": "signal.html", "torch.signal.torch.signal.windows.bartlett": "generated/torch.signal.windows.bartlett.html", "torch.signal.torch.signal.windows.blackman": "generated/torch.signal.windows.blackman.html", "torch.signal.torch.signal.windows.cosine": "generated/torch.signal.windows.cosine.html", "torch.signal.torch.signal.windows.exponential": "generated/torch.signal.windows.exponential.html", "torch.signal.torch.signal.windows.gaussian": "generated/torch.signal.windows.gaussian.html", "torch.signal.torch.signal.windows.general_cosine": "generated/torch.signal.windows.general_cosine.html", "torch.signal.torch.signal.windows.general_hamming": "generated/torch.signal.windows.general_hamming.html", "torch.signal.torch.signal.windows.hamming": "generated/torch.signal.windows.hamming.html", "torch.signal.torch.signal.windows.hann": "generated/torch.signal.windows.hann.html", "torch.signal.torch.signal.windows.kaiser": "generated/torch.signal.windows.kaiser.html", "torch.signal.torch.signal.windows.nuttall": "generated/torch.signal.windows.nuttall.html", "torch.signal.windows.bartlett()": "generated/torch.signal.windows.bartlett.html#torch.signal.windows.bartlett", "torch.signal.windows.blackman()": "generated/torch.signal.windows.blackman.html#torch.signal.windows.blackman", "torch.signal.windows.cosine()": "generated/torch.signal.windows.cosine.html#torch.signal.windows.cosine", "torch.signal.windows.exponential()": "generated/torch.signal.windows.exponential.html#torch.signal.windows.exponential", "torch.signal.windows.gaussian()": "generated/torch.signal.windows.gaussian.html#torch.signal.windows.gaussian", "torch.signal.windows.general_cosine()": "generated/torch.signal.windows.general_cosine.html#torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming()": "generated/torch.signal.windows.general_hamming.html#torch.signal.windows.general_hamming", "torch.signal.windows.hamming()": "generated/torch.signal.windows.hamming.html#torch.signal.windows.hamming", "torch.signal.windows.hann()": "generated/torch.signal.windows.hann.html#torch.signal.windows.hann", "torch.signal.windows.kaiser()": "generated/torch.signal.windows.kaiser.html#torch.signal.windows.kaiser", "torch.signal.windows.nuttall()": "generated/torch.signal.windows.nuttall.html#torch.signal.windows.nuttall", "torch.signbit": "generated/torch.signbit.html", "torch.sin": "generated/torch.sin.html", "torch.sinc": "generated/torch.sinc.html", "torch.sinh": "generated/torch.sinh.html", "torch.slice_scatter": "generated/torch.slice_scatter.html", "torch.slogdet": "generated/torch.slogdet.html", "torch.smm()": "generated/torch.smm.html#torch.smm", "torch.softmax": "generated/torch.softmax.html", "torch.sort": "generated/torch.sort.html", "torch.sparse": "sparse.html", "torch.sparse.addmm()": "generated/torch.sparse.addmm.html#torch.sparse.addmm", "torch.sparse.as_sparse_gradcheck()": "generated/torch.sparse.as_sparse_gradcheck.html#torch.sparse.as_sparse_gradcheck", "torch.sparse.check_sparse_tensor_invariants": "generated/torch.sparse.check_sparse_tensor_invariants.html", "torch.sparse.check_sparse_tensor_invariants.disable()": "generated/torch.sparse.check_sparse_tensor_invariants.html#torch.sparse.check_sparse_tensor_invariants.disable", "torch.sparse.check_sparse_tensor_invariants.enable()": "generated/torch.sparse.check_sparse_tensor_invariants.html#torch.sparse.check_sparse_tensor_invariants.enable", "torch.sparse.check_sparse_tensor_invariants.is_enabled()": "generated/torch.sparse.check_sparse_tensor_invariants.html#torch.sparse.check_sparse_tensor_invariants.is_enabled", "torch.sparse.log_softmax()": "generated/torch.sparse.log_softmax.html#torch.sparse.log_softmax", "torch.sparse.mm()": "generated/torch.sparse.mm.html#torch.sparse.mm", "torch.sparse.sampled_addmm()": "generated/torch.sparse.sampled_addmm.html#torch.sparse.sampled_addmm", "torch.sparse.softmax()": "generated/torch.sparse.softmax.html#torch.sparse.softmax", "torch.sparse.spdiags()": "generated/torch.sparse.spdiags.html#torch.sparse.spdiags", "torch.sparse.sum()": "generated/torch.sparse.sum.html#torch.sparse.sum", "torch.sparse.torch.hspmm": "generated/torch.hspmm.html", "torch.sparse.torch.smm": "generated/torch.smm.html", "torch.sparse.torch.sparse.addmm": "generated/torch.sparse.addmm.html", "torch.sparse.torch.sparse.as_sparse_gradcheck": "generated/torch.sparse.as_sparse_gradcheck.html", "torch.sparse.torch.sparse.log_softmax": "generated/torch.sparse.log_softmax.html", "torch.sparse.torch.sparse.mm": "generated/torch.sparse.mm.html", "torch.sparse.torch.sparse.sampled_addmm": "generated/torch.sparse.sampled_addmm.html", "torch.sparse.torch.sparse.softmax": "generated/torch.sparse.softmax.html", "torch.sparse.torch.sparse.spdiags": "generated/torch.sparse.spdiags.html", "torch.sparse.torch.sparse.sum": "generated/torch.sparse.sum.html", "torch.sparse.torch.sparse_compressed_tensor": "generated/torch.sparse_compressed_tensor.html", "torch.sparse.torch.sspaddmm": "generated/torch.sspaddmm.html", "torch.sparse.torch.Tensor.ccol_indices": "generated/torch.tensor.ccol_indices.html", "torch.sparse.torch.Tensor.coalesce": "generated/torch.tensor.coalesce.html", "torch.sparse.torch.Tensor.col_indices": "generated/torch.tensor.col_indices.html", "torch.sparse.torch.Tensor.crow_indices": "generated/torch.tensor.crow_indices.html", "torch.sparse.torch.Tensor.is_coalesced": "generated/torch.tensor.is_coalesced.html", "torch.sparse.torch.Tensor.is_sparse_csr": "generated/torch.tensor.is_sparse_csr.html", "torch.sparse.torch.Tensor.row_indices": "generated/torch.tensor.row_indices.html", "torch.sparse.torch.Tensor.sparse_resize_": "generated/torch.tensor.sparse_resize_.html", "torch.sparse.torch.Tensor.sparse_resize_and_clear_": "generated/torch.tensor.sparse_resize_and_clear_.html", "torch.sparse.torch.Tensor.to_sparse_coo": "generated/torch.tensor.to_sparse_coo.html", "torch.sparse_bsc_tensor": "generated/torch.sparse_bsc_tensor.html", "torch.sparse_bsr_tensor": "generated/torch.sparse_bsr_tensor.html", "torch.sparse_compressed_tensor()": "generated/torch.sparse_compressed_tensor.html#torch.sparse_compressed_tensor", "torch.sparse_coo_tensor": "generated/torch.sparse_coo_tensor.html", "torch.sparse_csc_tensor": "generated/torch.sparse_csc_tensor.html", "torch.sparse_csr_tensor": "generated/torch.sparse_csr_tensor.html", "torch.special": "special.html", "torch.special.airy_ai()": "special.html#torch.special.airy_ai", "torch.special.bessel_j0()": "special.html#torch.special.bessel_j0", "torch.special.bessel_j1()": "special.html#torch.special.bessel_j1", "torch.special.digamma()": "special.html#torch.special.digamma", "torch.special.entr()": "special.html#torch.special.entr", "torch.special.erf()": "special.html#torch.special.erf", "torch.special.erfc()": "special.html#torch.special.erfc", "torch.special.erfcx()": "special.html#torch.special.erfcx", "torch.special.erfinv()": "special.html#torch.special.erfinv", "torch.special.exp2()": "special.html#torch.special.exp2", "torch.special.expit()": "special.html#torch.special.expit", "torch.special.expm1()": "special.html#torch.special.expm1", "torch.special.gammainc()": "special.html#torch.special.gammainc", "torch.special.gammaincc()": "special.html#torch.special.gammaincc", "torch.special.gammaln()": "special.html#torch.special.gammaln", "torch.special.i0()": "special.html#torch.special.i0", "torch.special.i0e()": "special.html#torch.special.i0e", "torch.special.i1()": "special.html#torch.special.i1", "torch.special.i1e()": "special.html#torch.special.i1e", "torch.special.log1p()": "special.html#torch.special.log1p", "torch.special.log_ndtr()": "special.html#torch.special.log_ndtr", "torch.special.log_softmax()": "special.html#torch.special.log_softmax", "torch.special.logit()": "special.html#torch.special.logit", "torch.special.logsumexp()": "special.html#torch.special.logsumexp", "torch.special.multigammaln()": "special.html#torch.special.multigammaln", "torch.special.ndtr()": "special.html#torch.special.ndtr", "torch.special.ndtri()": "special.html#torch.special.ndtri", "torch.special.polygamma()": "special.html#torch.special.polygamma", "torch.special.psi()": "special.html#torch.special.psi", "torch.special.round()": "special.html#torch.special.round", "torch.special.scaled_modified_bessel_k0()": "special.html#torch.special.scaled_modified_bessel_k0", "torch.special.scaled_modified_bessel_k1()": "special.html#torch.special.scaled_modified_bessel_k1", "torch.special.sinc()": "special.html#torch.special.sinc", "torch.special.softmax()": "special.html#torch.special.softmax", "torch.special.spherical_bessel_j0()": "special.html#torch.special.spherical_bessel_j0", "torch.special.xlog1py()": "special.html#torch.special.xlog1py", "torch.special.xlogy()": "special.html#torch.special.xlogy", "torch.special.zeta()": "special.html#torch.special.zeta", "torch.split": "generated/torch.split.html", "torch.sqrt": "generated/torch.sqrt.html", "torch.square": "generated/torch.square.html", "torch.squeeze": "generated/torch.squeeze.html", "torch.sspaddmm()": "generated/torch.sspaddmm.html#torch.sspaddmm", "torch.stack": "generated/torch.stack.html", "torch.std": "generated/torch.std.html", "torch.std_mean": "generated/torch.std_mean.html", "torch.stft": "generated/torch.stft.html", "torch.Storage": "storage.html", "torch.sub": "generated/torch.sub.html", "torch.subtract": "generated/torch.subtract.html", "torch.sum": "generated/torch.sum.html", "torch.svd": "generated/torch.svd.html", "torch.svd_lowrank": "generated/torch.svd_lowrank.html", "torch.swapaxes": "generated/torch.swapaxes.html", "torch.swapdims": "generated/torch.swapdims.html", "torch.sym_float": "generated/torch.sym_float.html", "torch.sym_int": "generated/torch.sym_int.html", "torch.sym_max": "generated/torch.sym_max.html", "torch.sym_min": "generated/torch.sym_min.html", "torch.sym_not": "generated/torch.sym_not.html", "torch.SymBool": "torch.html#torch.SymBool", "torch.SymFloat": "torch.html#torch.SymFloat", "torch.SymInt": "torch.html#torch.SymInt", "torch.t": "generated/torch.t.html", "torch.Tag": "torch.html#torch.Tag", "torch.Tag.name": "torch.html#torch.Tag.name", "torch.take": "generated/torch.take.html", "torch.take_along_dim": "generated/torch.take_along_dim.html", "torch.tan": "generated/torch.tan.html", "torch.tanh": "generated/torch.tanh.html", "torch.Tensor": "tensors.html", "torch.tensor": "generated/torch.tensor.html", "torch.Tensor.abs()": "generated/torch.tensor.abs.html#torch.Tensor.abs", "torch.Tensor.abs_()": "generated/torch.tensor.abs_.html#torch.Tensor.abs_", "torch.Tensor.absolute()": "generated/torch.tensor.absolute.html#torch.Tensor.absolute", "torch.Tensor.absolute_()": "generated/torch.tensor.absolute_.html#torch.Tensor.absolute_", "torch.Tensor.acos()": "generated/torch.tensor.acos.html#torch.Tensor.acos", "torch.Tensor.acos_()": "generated/torch.tensor.acos_.html#torch.Tensor.acos_", "torch.Tensor.acosh()": "generated/torch.tensor.acosh.html#torch.Tensor.acosh", "torch.Tensor.acosh_()": "generated/torch.tensor.acosh_.html#torch.Tensor.acosh_", "torch.Tensor.add()": "generated/torch.tensor.add.html#torch.Tensor.add", "torch.Tensor.add_()": "generated/torch.tensor.add_.html#torch.Tensor.add_", "torch.Tensor.addbmm()": "generated/torch.tensor.addbmm.html#torch.Tensor.addbmm", "torch.Tensor.addbmm_()": "generated/torch.tensor.addbmm_.html#torch.Tensor.addbmm_", "torch.Tensor.addcdiv()": "generated/torch.tensor.addcdiv.html#torch.Tensor.addcdiv", "torch.Tensor.addcdiv_()": "generated/torch.tensor.addcdiv_.html#torch.Tensor.addcdiv_", "torch.Tensor.addcmul()": "generated/torch.tensor.addcmul.html#torch.Tensor.addcmul", "torch.Tensor.addcmul_()": "generated/torch.tensor.addcmul_.html#torch.Tensor.addcmul_", "torch.Tensor.addmm()": "generated/torch.tensor.addmm.html#torch.Tensor.addmm", "torch.Tensor.addmm_()": "generated/torch.tensor.addmm_.html#torch.Tensor.addmm_", "torch.Tensor.addmv()": "generated/torch.tensor.addmv.html#torch.Tensor.addmv", "torch.Tensor.addmv_()": "generated/torch.tensor.addmv_.html#torch.Tensor.addmv_", "torch.Tensor.addr()": "generated/torch.tensor.addr.html#torch.Tensor.addr", "torch.Tensor.addr_()": "generated/torch.tensor.addr_.html#torch.Tensor.addr_", "torch.Tensor.adjoint()": "generated/torch.tensor.adjoint.html#torch.Tensor.adjoint", "torch.Tensor.align_as()": "named_tensor.html#torch.Tensor.align_as", "torch.Tensor.align_to()": "named_tensor.html#torch.Tensor.align_to", "torch.Tensor.all()": "generated/torch.tensor.all.html#torch.Tensor.all", "torch.Tensor.allclose()": "generated/torch.tensor.allclose.html#torch.Tensor.allclose", "torch.Tensor.amax()": "generated/torch.tensor.amax.html#torch.Tensor.amax", "torch.Tensor.amin()": "generated/torch.tensor.amin.html#torch.Tensor.amin", "torch.Tensor.aminmax()": "generated/torch.tensor.aminmax.html#torch.Tensor.aminmax", "torch.Tensor.angle()": "generated/torch.tensor.angle.html#torch.Tensor.angle", "torch.Tensor.any()": "generated/torch.tensor.any.html#torch.Tensor.any", "torch.Tensor.apply_()": "generated/torch.tensor.apply_.html#torch.Tensor.apply_", "torch.Tensor.arccos()": "generated/torch.tensor.arccos.html#torch.Tensor.arccos", "torch.Tensor.arccos_()": "generated/torch.tensor.arccos_.html#torch.Tensor.arccos_", "torch.Tensor.arccosh()": "generated/torch.tensor.arccosh.html#torch.Tensor.arccosh", "torch.Tensor.arccosh_()": "generated/torch.tensor.arccosh_.html#torch.Tensor.arccosh_", "torch.Tensor.arcsin()": "generated/torch.tensor.arcsin.html#torch.Tensor.arcsin", "torch.Tensor.arcsin_()": "generated/torch.tensor.arcsin_.html#torch.Tensor.arcsin_", "torch.Tensor.arcsinh()": "generated/torch.tensor.arcsinh.html#torch.Tensor.arcsinh", "torch.Tensor.arcsinh_()": "generated/torch.tensor.arcsinh_.html#torch.Tensor.arcsinh_", "torch.Tensor.arctan()": "generated/torch.tensor.arctan.html#torch.Tensor.arctan", "torch.Tensor.arctan2()": "generated/torch.tensor.arctan2.html#torch.Tensor.arctan2", "torch.Tensor.arctan2_()": "generated/torch.tensor.arctan2_.html#torch.Tensor.arctan2_", "torch.Tensor.arctan_()": "generated/torch.tensor.arctan_.html#torch.Tensor.arctan_", "torch.Tensor.arctanh()": "generated/torch.tensor.arctanh.html#torch.Tensor.arctanh", "torch.Tensor.arctanh_()": "generated/torch.tensor.arctanh_.html#torch.Tensor.arctanh_", "torch.Tensor.argmax()": "generated/torch.tensor.argmax.html#torch.Tensor.argmax", "torch.Tensor.argmin()": "generated/torch.tensor.argmin.html#torch.Tensor.argmin", "torch.Tensor.argsort()": "generated/torch.tensor.argsort.html#torch.Tensor.argsort", "torch.Tensor.argwhere()": "generated/torch.tensor.argwhere.html#torch.Tensor.argwhere", "torch.Tensor.as_strided()": "generated/torch.tensor.as_strided.html#torch.Tensor.as_strided", "torch.Tensor.as_subclass()": "generated/torch.tensor.as_subclass.html#torch.Tensor.as_subclass", "torch.Tensor.asin()": "generated/torch.tensor.asin.html#torch.Tensor.asin", "torch.Tensor.asin_()": "generated/torch.tensor.asin_.html#torch.Tensor.asin_", "torch.Tensor.asinh()": "generated/torch.tensor.asinh.html#torch.Tensor.asinh", "torch.Tensor.asinh_()": "generated/torch.tensor.asinh_.html#torch.Tensor.asinh_", "torch.Tensor.atan()": "generated/torch.tensor.atan.html#torch.Tensor.atan", "torch.Tensor.atan2()": "generated/torch.tensor.atan2.html#torch.Tensor.atan2", "torch.Tensor.atan2_()": "generated/torch.tensor.atan2_.html#torch.Tensor.atan2_", "torch.Tensor.atan_()": "generated/torch.tensor.atan_.html#torch.Tensor.atan_", "torch.Tensor.atanh()": "generated/torch.tensor.atanh.html#torch.Tensor.atanh", "torch.Tensor.atanh_()": "generated/torch.tensor.atanh_.html#torch.Tensor.atanh_", "torch.Tensor.backward()": "generated/torch.tensor.backward.html#torch.Tensor.backward", "torch.Tensor.baddbmm()": "generated/torch.tensor.baddbmm.html#torch.Tensor.baddbmm", "torch.Tensor.baddbmm_()": "generated/torch.tensor.baddbmm_.html#torch.Tensor.baddbmm_", "torch.Tensor.bernoulli()": "generated/torch.tensor.bernoulli.html#torch.Tensor.bernoulli", "torch.Tensor.bernoulli_()": "generated/torch.tensor.bernoulli_.html#torch.Tensor.bernoulli_", "torch.Tensor.bfloat16()": "generated/torch.tensor.bfloat16.html#torch.Tensor.bfloat16", "torch.Tensor.bincount()": "generated/torch.tensor.bincount.html#torch.Tensor.bincount", "torch.Tensor.bitwise_and()": "generated/torch.tensor.bitwise_and.html#torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_()": "generated/torch.tensor.bitwise_and_.html#torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift()": "generated/torch.tensor.bitwise_left_shift.html#torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_()": "generated/torch.tensor.bitwise_left_shift_.html#torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not()": "generated/torch.tensor.bitwise_not.html#torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_()": "generated/torch.tensor.bitwise_not_.html#torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or()": "generated/torch.tensor.bitwise_or.html#torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_()": "generated/torch.tensor.bitwise_or_.html#torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift()": "generated/torch.tensor.bitwise_right_shift.html#torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_()": "generated/torch.tensor.bitwise_right_shift_.html#torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor()": "generated/torch.tensor.bitwise_xor.html#torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_()": "generated/torch.tensor.bitwise_xor_.html#torch.Tensor.bitwise_xor_", "torch.Tensor.bmm()": "generated/torch.tensor.bmm.html#torch.Tensor.bmm", "torch.Tensor.bool()": "generated/torch.tensor.bool.html#torch.Tensor.bool", "torch.Tensor.broadcast_to()": "generated/torch.tensor.broadcast_to.html#torch.Tensor.broadcast_to", "torch.Tensor.byte()": "generated/torch.tensor.byte.html#torch.Tensor.byte", "torch.Tensor.cauchy_()": "generated/torch.tensor.cauchy_.html#torch.Tensor.cauchy_", "torch.Tensor.ccol_indices()": "generated/torch.tensor.ccol_indices.html#torch.Tensor.ccol_indices", "torch.Tensor.cdouble()": "generated/torch.tensor.cdouble.html#torch.Tensor.cdouble", "torch.Tensor.ceil()": "generated/torch.tensor.ceil.html#torch.Tensor.ceil", "torch.Tensor.ceil_()": "generated/torch.tensor.ceil_.html#torch.Tensor.ceil_", "torch.Tensor.cfloat()": "generated/torch.tensor.cfloat.html#torch.Tensor.cfloat", "torch.Tensor.chalf()": "generated/torch.tensor.chalf.html#torch.Tensor.chalf", "torch.Tensor.char()": "generated/torch.tensor.char.html#torch.Tensor.char", "torch.Tensor.cholesky()": "generated/torch.tensor.cholesky.html#torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse()": "generated/torch.tensor.cholesky_inverse.html#torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve()": "generated/torch.tensor.cholesky_solve.html#torch.Tensor.cholesky_solve", "torch.Tensor.chunk()": "generated/torch.tensor.chunk.html#torch.Tensor.chunk", "torch.Tensor.clamp()": "generated/torch.tensor.clamp.html#torch.Tensor.clamp", "torch.Tensor.clamp_()": "generated/torch.tensor.clamp_.html#torch.Tensor.clamp_", "torch.Tensor.clip()": "generated/torch.tensor.clip.html#torch.Tensor.clip", "torch.Tensor.clip_()": "generated/torch.tensor.clip_.html#torch.Tensor.clip_", "torch.Tensor.clone()": "generated/torch.tensor.clone.html#torch.Tensor.clone", "torch.Tensor.coalesce()": "generated/torch.tensor.coalesce.html#torch.Tensor.coalesce", "torch.Tensor.col_indices()": "generated/torch.tensor.col_indices.html#torch.Tensor.col_indices", "torch.Tensor.conj()": "generated/torch.tensor.conj.html#torch.Tensor.conj", "torch.Tensor.conj_physical()": "generated/torch.tensor.conj_physical.html#torch.Tensor.conj_physical", "torch.Tensor.conj_physical_()": "generated/torch.tensor.conj_physical_.html#torch.Tensor.conj_physical_", "torch.Tensor.contiguous()": "generated/torch.tensor.contiguous.html#torch.Tensor.contiguous", "torch.Tensor.copy_()": "generated/torch.tensor.copy_.html#torch.Tensor.copy_", "torch.Tensor.copysign()": "generated/torch.tensor.copysign.html#torch.Tensor.copysign", "torch.Tensor.copysign_()": "generated/torch.tensor.copysign_.html#torch.Tensor.copysign_", "torch.Tensor.corrcoef()": "generated/torch.tensor.corrcoef.html#torch.Tensor.corrcoef", "torch.Tensor.cos()": "generated/torch.tensor.cos.html#torch.Tensor.cos", "torch.Tensor.cos_()": "generated/torch.tensor.cos_.html#torch.Tensor.cos_", "torch.Tensor.cosh()": "generated/torch.tensor.cosh.html#torch.Tensor.cosh", "torch.Tensor.cosh_()": "generated/torch.tensor.cosh_.html#torch.Tensor.cosh_", "torch.Tensor.count_nonzero()": "generated/torch.tensor.count_nonzero.html#torch.Tensor.count_nonzero", "torch.Tensor.cov()": "generated/torch.tensor.cov.html#torch.Tensor.cov", "torch.Tensor.cpu()": "generated/torch.tensor.cpu.html#torch.Tensor.cpu", "torch.Tensor.cross()": "generated/torch.tensor.cross.html#torch.Tensor.cross", "torch.Tensor.crow_indices()": "generated/torch.tensor.crow_indices.html#torch.Tensor.crow_indices", "torch.Tensor.cuda()": "generated/torch.tensor.cuda.html#torch.Tensor.cuda", "torch.Tensor.cummax()": "generated/torch.tensor.cummax.html#torch.Tensor.cummax", "torch.Tensor.cummin()": "generated/torch.tensor.cummin.html#torch.Tensor.cummin", "torch.Tensor.cumprod()": "generated/torch.tensor.cumprod.html#torch.Tensor.cumprod", "torch.Tensor.cumprod_()": "generated/torch.tensor.cumprod_.html#torch.Tensor.cumprod_", "torch.Tensor.cumsum()": "generated/torch.tensor.cumsum.html#torch.Tensor.cumsum", "torch.Tensor.cumsum_()": "generated/torch.tensor.cumsum_.html#torch.Tensor.cumsum_", "torch.Tensor.data_ptr()": "generated/torch.tensor.data_ptr.html#torch.Tensor.data_ptr", "torch.Tensor.deg2rad()": "generated/torch.tensor.deg2rad.html#torch.Tensor.deg2rad", "torch.Tensor.dense_dim()": "generated/torch.tensor.dense_dim.html#torch.Tensor.dense_dim", "torch.Tensor.dequantize()": "generated/torch.tensor.dequantize.html#torch.Tensor.dequantize", "torch.Tensor.det()": "generated/torch.tensor.det.html#torch.Tensor.det", "torch.Tensor.detach()": "generated/torch.tensor.detach.html#torch.Tensor.detach", "torch.Tensor.detach_()": "generated/torch.tensor.detach_.html#torch.Tensor.detach_", "torch.Tensor.device": "generated/torch.tensor.device.html#torch.Tensor.device", "torch.Tensor.diag()": "generated/torch.tensor.diag.html#torch.Tensor.diag", "torch.Tensor.diag_embed()": "generated/torch.tensor.diag_embed.html#torch.Tensor.diag_embed", "torch.Tensor.diagflat()": "generated/torch.tensor.diagflat.html#torch.Tensor.diagflat", "torch.Tensor.diagonal()": "generated/torch.tensor.diagonal.html#torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter()": "generated/torch.tensor.diagonal_scatter.html#torch.Tensor.diagonal_scatter", "torch.Tensor.diff()": "generated/torch.tensor.diff.html#torch.Tensor.diff", "torch.Tensor.digamma()": "generated/torch.tensor.digamma.html#torch.Tensor.digamma", "torch.Tensor.digamma_()": "generated/torch.tensor.digamma_.html#torch.Tensor.digamma_", "torch.Tensor.dim()": "generated/torch.tensor.dim.html#torch.Tensor.dim", "torch.Tensor.dim_order()": "generated/torch.tensor.dim_order.html#torch.Tensor.dim_order", "torch.Tensor.dist()": "generated/torch.tensor.dist.html#torch.Tensor.dist", "torch.Tensor.div()": "generated/torch.tensor.div.html#torch.Tensor.div", "torch.Tensor.div_()": "generated/torch.tensor.div_.html#torch.Tensor.div_", "torch.Tensor.divide()": "generated/torch.tensor.divide.html#torch.Tensor.divide", "torch.Tensor.divide_()": "generated/torch.tensor.divide_.html#torch.Tensor.divide_", "torch.Tensor.dot()": "generated/torch.tensor.dot.html#torch.Tensor.dot", "torch.Tensor.double()": "generated/torch.tensor.double.html#torch.Tensor.double", "torch.Tensor.dsplit()": "generated/torch.tensor.dsplit.html#torch.Tensor.dsplit", "torch.Tensor.element_size()": "generated/torch.tensor.element_size.html#torch.Tensor.element_size", "torch.Tensor.eq()": "generated/torch.tensor.eq.html#torch.Tensor.eq", "torch.Tensor.eq_()": "generated/torch.tensor.eq_.html#torch.Tensor.eq_", "torch.Tensor.equal()": "generated/torch.tensor.equal.html#torch.Tensor.equal", "torch.Tensor.erf()": "generated/torch.tensor.erf.html#torch.Tensor.erf", "torch.Tensor.erf_()": "generated/torch.tensor.erf_.html#torch.Tensor.erf_", "torch.Tensor.erfc()": "generated/torch.tensor.erfc.html#torch.Tensor.erfc", "torch.Tensor.erfc_()": "generated/torch.tensor.erfc_.html#torch.Tensor.erfc_", "torch.Tensor.erfinv()": "generated/torch.tensor.erfinv.html#torch.Tensor.erfinv", "torch.Tensor.erfinv_()": "generated/torch.tensor.erfinv_.html#torch.Tensor.erfinv_", "torch.Tensor.exp()": "generated/torch.tensor.exp.html#torch.Tensor.exp", "torch.Tensor.exp_()": "generated/torch.tensor.exp_.html#torch.Tensor.exp_", "torch.Tensor.expand()": "generated/torch.tensor.expand.html#torch.Tensor.expand", "torch.Tensor.expand_as()": "generated/torch.tensor.expand_as.html#torch.Tensor.expand_as", "torch.Tensor.expm1()": "generated/torch.tensor.expm1.html#torch.Tensor.expm1", "torch.Tensor.expm1_()": "generated/torch.tensor.expm1_.html#torch.Tensor.expm1_", "torch.Tensor.exponential_()": "generated/torch.tensor.exponential_.html#torch.Tensor.exponential_", "torch.Tensor.fill_()": "generated/torch.tensor.fill_.html#torch.Tensor.fill_", "torch.Tensor.fill_diagonal_()": "generated/torch.tensor.fill_diagonal_.html#torch.Tensor.fill_diagonal_", "torch.Tensor.fix()": "generated/torch.tensor.fix.html#torch.Tensor.fix", "torch.Tensor.fix_()": "generated/torch.tensor.fix_.html#torch.Tensor.fix_", "torch.Tensor.flatten()": "generated/torch.tensor.flatten.html#torch.Tensor.flatten", "torch.Tensor.flip()": "generated/torch.tensor.flip.html#torch.Tensor.flip", "torch.Tensor.fliplr()": "generated/torch.tensor.fliplr.html#torch.Tensor.fliplr", "torch.Tensor.flipud()": "generated/torch.tensor.flipud.html#torch.Tensor.flipud", "torch.Tensor.float()": "generated/torch.tensor.float.html#torch.Tensor.float", "torch.Tensor.float_power()": "generated/torch.tensor.float_power.html#torch.Tensor.float_power", "torch.Tensor.float_power_()": "generated/torch.tensor.float_power_.html#torch.Tensor.float_power_", "torch.Tensor.floor()": "generated/torch.tensor.floor.html#torch.Tensor.floor", "torch.Tensor.floor_()": "generated/torch.tensor.floor_.html#torch.Tensor.floor_", "torch.Tensor.floor_divide()": "generated/torch.tensor.floor_divide.html#torch.Tensor.floor_divide", "torch.Tensor.floor_divide_()": "generated/torch.tensor.floor_divide_.html#torch.Tensor.floor_divide_", "torch.Tensor.fmax()": "generated/torch.tensor.fmax.html#torch.Tensor.fmax", "torch.Tensor.fmin()": "generated/torch.tensor.fmin.html#torch.Tensor.fmin", "torch.Tensor.fmod()": "generated/torch.tensor.fmod.html#torch.Tensor.fmod", "torch.Tensor.fmod_()": "generated/torch.tensor.fmod_.html#torch.Tensor.fmod_", "torch.Tensor.frac()": "generated/torch.tensor.frac.html#torch.Tensor.frac", "torch.Tensor.frac_()": "generated/torch.tensor.frac_.html#torch.Tensor.frac_", "torch.Tensor.frexp()": "generated/torch.tensor.frexp.html#torch.Tensor.frexp", "torch.Tensor.gather()": "generated/torch.tensor.gather.html#torch.Tensor.gather", "torch.Tensor.gcd()": "generated/torch.tensor.gcd.html#torch.Tensor.gcd", "torch.Tensor.gcd_()": "generated/torch.tensor.gcd_.html#torch.Tensor.gcd_", "torch.Tensor.ge()": "generated/torch.tensor.ge.html#torch.Tensor.ge", "torch.Tensor.ge_()": "generated/torch.tensor.ge_.html#torch.Tensor.ge_", "torch.Tensor.geometric_()": "generated/torch.tensor.geometric_.html#torch.Tensor.geometric_", "torch.Tensor.geqrf()": "generated/torch.tensor.geqrf.html#torch.Tensor.geqrf", "torch.Tensor.ger()": "generated/torch.tensor.ger.html#torch.Tensor.ger", "torch.Tensor.get_device()": "generated/torch.tensor.get_device.html#torch.Tensor.get_device", "torch.Tensor.grad": "generated/torch.tensor.grad.html#torch.Tensor.grad", "torch.Tensor.greater()": "generated/torch.tensor.greater.html#torch.Tensor.greater", "torch.Tensor.greater_()": "generated/torch.tensor.greater_.html#torch.Tensor.greater_", "torch.Tensor.greater_equal()": "generated/torch.tensor.greater_equal.html#torch.Tensor.greater_equal", "torch.Tensor.greater_equal_()": "generated/torch.tensor.greater_equal_.html#torch.Tensor.greater_equal_", "torch.Tensor.gt()": "generated/torch.tensor.gt.html#torch.Tensor.gt", "torch.Tensor.gt_()": "generated/torch.tensor.gt_.html#torch.Tensor.gt_", "torch.Tensor.H": "tensors.html#torch.Tensor.H", "torch.Tensor.half()": "generated/torch.tensor.half.html#torch.Tensor.half", "torch.Tensor.hardshrink()": "generated/torch.tensor.hardshrink.html#torch.Tensor.hardshrink", "torch.Tensor.heaviside()": "generated/torch.tensor.heaviside.html#torch.Tensor.heaviside", "torch.Tensor.histc()": "generated/torch.tensor.histc.html#torch.Tensor.histc", "torch.Tensor.histogram()": "generated/torch.tensor.histogram.html#torch.Tensor.histogram", "torch.Tensor.hsplit()": "generated/torch.tensor.hsplit.html#torch.Tensor.hsplit", "torch.Tensor.hypot()": "generated/torch.tensor.hypot.html#torch.Tensor.hypot", "torch.Tensor.hypot_()": "generated/torch.tensor.hypot_.html#torch.Tensor.hypot_", "torch.Tensor.i0()": "generated/torch.tensor.i0.html#torch.Tensor.i0", "torch.Tensor.i0_()": "generated/torch.tensor.i0_.html#torch.Tensor.i0_", "torch.Tensor.igamma()": "generated/torch.tensor.igamma.html#torch.Tensor.igamma", "torch.Tensor.igamma_()": "generated/torch.tensor.igamma_.html#torch.Tensor.igamma_", "torch.Tensor.igammac()": "generated/torch.tensor.igammac.html#torch.Tensor.igammac", "torch.Tensor.igammac_()": "generated/torch.tensor.igammac_.html#torch.Tensor.igammac_", "torch.Tensor.imag": "generated/torch.tensor.imag.html#torch.Tensor.imag", "torch.Tensor.index_add()": "generated/torch.tensor.index_add.html#torch.Tensor.index_add", "torch.Tensor.index_add_()": "generated/torch.tensor.index_add_.html#torch.Tensor.index_add_", "torch.Tensor.index_copy()": "generated/torch.tensor.index_copy.html#torch.Tensor.index_copy", "torch.Tensor.index_copy_()": "generated/torch.tensor.index_copy_.html#torch.Tensor.index_copy_", "torch.Tensor.index_fill()": "generated/torch.tensor.index_fill.html#torch.Tensor.index_fill", "torch.Tensor.index_fill_()": "generated/torch.tensor.index_fill_.html#torch.Tensor.index_fill_", "torch.Tensor.index_put()": "generated/torch.tensor.index_put.html#torch.Tensor.index_put", "torch.Tensor.index_put_()": "generated/torch.tensor.index_put_.html#torch.Tensor.index_put_", "torch.Tensor.index_reduce()": "generated/torch.tensor.index_reduce.html#torch.Tensor.index_reduce", "torch.Tensor.index_reduce_()": "generated/torch.tensor.index_reduce_.html#torch.Tensor.index_reduce_", "torch.Tensor.index_select()": "generated/torch.tensor.index_select.html#torch.Tensor.index_select", "torch.Tensor.indices()": "generated/torch.tensor.indices.html#torch.Tensor.indices", "torch.Tensor.inner()": "generated/torch.tensor.inner.html#torch.Tensor.inner", "torch.Tensor.int()": "generated/torch.tensor.int.html#torch.Tensor.int", "torch.Tensor.int_repr()": "generated/torch.tensor.int_repr.html#torch.Tensor.int_repr", "torch.Tensor.inverse()": "generated/torch.tensor.inverse.html#torch.Tensor.inverse", "torch.Tensor.is_coalesced()": "generated/torch.tensor.is_coalesced.html#torch.Tensor.is_coalesced", "torch.Tensor.is_complex()": "generated/torch.tensor.is_complex.html#torch.Tensor.is_complex", "torch.Tensor.is_conj()": "generated/torch.tensor.is_conj.html#torch.Tensor.is_conj", "torch.Tensor.is_contiguous()": "generated/torch.tensor.is_contiguous.html#torch.Tensor.is_contiguous", "torch.Tensor.is_cuda": "generated/torch.tensor.is_cuda.html#torch.Tensor.is_cuda", "torch.Tensor.is_floating_point()": "generated/torch.tensor.is_floating_point.html#torch.Tensor.is_floating_point", "torch.Tensor.is_inference()": "generated/torch.tensor.is_inference.html#torch.Tensor.is_inference", "torch.Tensor.is_leaf": "generated/torch.tensor.is_leaf.html#torch.Tensor.is_leaf", "torch.Tensor.is_meta": "generated/torch.tensor.is_meta.html#torch.Tensor.is_meta", "torch.Tensor.is_pinned()": "generated/torch.tensor.is_pinned.html#torch.Tensor.is_pinned", "torch.Tensor.is_quantized": "generated/torch.tensor.is_quantized.html#torch.Tensor.is_quantized", "torch.Tensor.is_set_to()": "generated/torch.tensor.is_set_to.html#torch.Tensor.is_set_to", "torch.Tensor.is_shared()": "generated/torch.tensor.is_shared.html#torch.Tensor.is_shared", "torch.Tensor.is_signed()": "generated/torch.tensor.is_signed.html#torch.Tensor.is_signed", "torch.Tensor.is_sparse": "generated/torch.tensor.is_sparse.html#torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr": "generated/torch.tensor.is_sparse_csr.html#torch.Tensor.is_sparse_csr", "torch.Tensor.isclose()": "generated/torch.tensor.isclose.html#torch.Tensor.isclose", "torch.Tensor.isfinite()": "generated/torch.tensor.isfinite.html#torch.Tensor.isfinite", "torch.Tensor.isinf()": "generated/torch.tensor.isinf.html#torch.Tensor.isinf", "torch.Tensor.isnan()": "generated/torch.tensor.isnan.html#torch.Tensor.isnan", "torch.Tensor.isneginf()": "generated/torch.tensor.isneginf.html#torch.Tensor.isneginf", "torch.Tensor.isposinf()": "generated/torch.tensor.isposinf.html#torch.Tensor.isposinf", "torch.Tensor.isreal()": "generated/torch.tensor.isreal.html#torch.Tensor.isreal", "torch.Tensor.istft()": "generated/torch.tensor.istft.html#torch.Tensor.istft", "torch.Tensor.item()": "generated/torch.tensor.item.html#torch.Tensor.item", "torch.Tensor.itemsize": "generated/torch.tensor.itemsize.html#torch.Tensor.itemsize", "torch.Tensor.kthvalue()": "generated/torch.tensor.kthvalue.html#torch.Tensor.kthvalue", "torch.Tensor.lcm()": "generated/torch.tensor.lcm.html#torch.Tensor.lcm", "torch.Tensor.lcm_()": "generated/torch.tensor.lcm_.html#torch.Tensor.lcm_", "torch.Tensor.ldexp()": "generated/torch.tensor.ldexp.html#torch.Tensor.ldexp", "torch.Tensor.ldexp_()": "generated/torch.tensor.ldexp_.html#torch.Tensor.ldexp_", "torch.Tensor.le()": "generated/torch.tensor.le.html#torch.Tensor.le", "torch.Tensor.le_()": "generated/torch.tensor.le_.html#torch.Tensor.le_", "torch.Tensor.lerp()": "generated/torch.tensor.lerp.html#torch.Tensor.lerp", "torch.Tensor.lerp_()": "generated/torch.tensor.lerp_.html#torch.Tensor.lerp_", "torch.Tensor.less()": "generated/torch.tensor.less.html#torch.Tensor.less", "torch.Tensor.less_()": "generated/torch.tensor.less_.html#torch.Tensor.less_", "torch.Tensor.less_equal()": "generated/torch.tensor.less_equal.html#torch.Tensor.less_equal", "torch.Tensor.less_equal_()": "generated/torch.tensor.less_equal_.html#torch.Tensor.less_equal_", "torch.Tensor.lgamma()": "generated/torch.tensor.lgamma.html#torch.Tensor.lgamma", "torch.Tensor.lgamma_()": "generated/torch.tensor.lgamma_.html#torch.Tensor.lgamma_", "torch.Tensor.log()": "generated/torch.tensor.log.html#torch.Tensor.log", "torch.Tensor.log10()": "generated/torch.tensor.log10.html#torch.Tensor.log10", "torch.Tensor.log10_()": "generated/torch.tensor.log10_.html#torch.Tensor.log10_", "torch.Tensor.log1p()": "generated/torch.tensor.log1p.html#torch.Tensor.log1p", "torch.Tensor.log1p_()": "generated/torch.tensor.log1p_.html#torch.Tensor.log1p_", "torch.Tensor.log2()": "generated/torch.tensor.log2.html#torch.Tensor.log2", "torch.Tensor.log2_()": "generated/torch.tensor.log2_.html#torch.Tensor.log2_", "torch.Tensor.log_()": "generated/torch.tensor.log_.html#torch.Tensor.log_", "torch.Tensor.log_normal_()": "generated/torch.tensor.log_normal_.html#torch.Tensor.log_normal_", "torch.Tensor.logaddexp()": "generated/torch.tensor.logaddexp.html#torch.Tensor.logaddexp", "torch.Tensor.logaddexp2()": "generated/torch.tensor.logaddexp2.html#torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp()": "generated/torch.tensor.logcumsumexp.html#torch.Tensor.logcumsumexp", "torch.Tensor.logdet()": "generated/torch.tensor.logdet.html#torch.Tensor.logdet", "torch.Tensor.logical_and()": "generated/torch.tensor.logical_and.html#torch.Tensor.logical_and", "torch.Tensor.logical_and_()": "generated/torch.tensor.logical_and_.html#torch.Tensor.logical_and_", "torch.Tensor.logical_not()": "generated/torch.tensor.logical_not.html#torch.Tensor.logical_not", "torch.Tensor.logical_not_()": "generated/torch.tensor.logical_not_.html#torch.Tensor.logical_not_", "torch.Tensor.logical_or()": "generated/torch.tensor.logical_or.html#torch.Tensor.logical_or", "torch.Tensor.logical_or_()": "generated/torch.tensor.logical_or_.html#torch.Tensor.logical_or_", "torch.Tensor.logical_xor()": "generated/torch.tensor.logical_xor.html#torch.Tensor.logical_xor", "torch.Tensor.logical_xor_()": "generated/torch.tensor.logical_xor_.html#torch.Tensor.logical_xor_", "torch.Tensor.logit()": "generated/torch.tensor.logit.html#torch.Tensor.logit", "torch.Tensor.logit_()": "generated/torch.tensor.logit_.html#torch.Tensor.logit_", "torch.Tensor.logsumexp()": "generated/torch.tensor.logsumexp.html#torch.Tensor.logsumexp", "torch.Tensor.long()": "generated/torch.tensor.long.html#torch.Tensor.long", "torch.Tensor.lt()": "generated/torch.tensor.lt.html#torch.Tensor.lt", "torch.Tensor.lt_()": "generated/torch.tensor.lt_.html#torch.Tensor.lt_", "torch.Tensor.lu()": "generated/torch.tensor.lu.html#torch.Tensor.lu", "torch.Tensor.lu_solve()": "generated/torch.tensor.lu_solve.html#torch.Tensor.lu_solve", "torch.Tensor.map_()": "generated/torch.tensor.map_.html#torch.Tensor.map_", "torch.Tensor.masked_fill()": "generated/torch.tensor.masked_fill.html#torch.Tensor.masked_fill", "torch.Tensor.masked_fill_()": "generated/torch.tensor.masked_fill_.html#torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter()": "generated/torch.tensor.masked_scatter.html#torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_()": "generated/torch.tensor.masked_scatter_.html#torch.Tensor.masked_scatter_", "torch.Tensor.masked_select()": "generated/torch.tensor.masked_select.html#torch.Tensor.masked_select", "torch.Tensor.matmul()": "generated/torch.tensor.matmul.html#torch.Tensor.matmul", "torch.Tensor.matrix_exp()": "generated/torch.tensor.matrix_exp.html#torch.Tensor.matrix_exp", "torch.Tensor.matrix_power()": "generated/torch.tensor.matrix_power.html#torch.Tensor.matrix_power", "torch.Tensor.max()": "generated/torch.tensor.max.html#torch.Tensor.max", "torch.Tensor.maximum()": "generated/torch.tensor.maximum.html#torch.Tensor.maximum", "torch.Tensor.mean()": "generated/torch.tensor.mean.html#torch.Tensor.mean", "torch.Tensor.median()": "generated/torch.tensor.median.html#torch.Tensor.median", "torch.Tensor.mH": "tensors.html#torch.Tensor.mH", "torch.Tensor.min()": "generated/torch.tensor.min.html#torch.Tensor.min", "torch.Tensor.minimum()": "generated/torch.tensor.minimum.html#torch.Tensor.minimum", "torch.Tensor.mm()": "generated/torch.tensor.mm.html#torch.Tensor.mm", "torch.Tensor.mode()": "generated/torch.tensor.mode.html#torch.Tensor.mode", "torch.Tensor.moveaxis()": "generated/torch.tensor.moveaxis.html#torch.Tensor.moveaxis", "torch.Tensor.movedim()": "generated/torch.tensor.movedim.html#torch.Tensor.movedim", "torch.Tensor.msort()": "generated/torch.tensor.msort.html#torch.Tensor.msort", "torch.Tensor.mT": "tensors.html#torch.Tensor.mT", "torch.Tensor.mul()": "generated/torch.tensor.mul.html#torch.Tensor.mul", "torch.Tensor.mul_()": "generated/torch.tensor.mul_.html#torch.Tensor.mul_", "torch.Tensor.multinomial()": "generated/torch.tensor.multinomial.html#torch.Tensor.multinomial", "torch.Tensor.multiply()": "generated/torch.tensor.multiply.html#torch.Tensor.multiply", "torch.Tensor.multiply_()": "generated/torch.tensor.multiply_.html#torch.Tensor.multiply_", "torch.Tensor.mv()": "generated/torch.tensor.mv.html#torch.Tensor.mv", "torch.Tensor.mvlgamma()": "generated/torch.tensor.mvlgamma.html#torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_()": "generated/torch.tensor.mvlgamma_.html#torch.Tensor.mvlgamma_", "torch.Tensor.names": "named_tensor.html#torch.Tensor.names", "torch.Tensor.nan_to_num()": "generated/torch.tensor.nan_to_num.html#torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_()": "generated/torch.tensor.nan_to_num_.html#torch.Tensor.nan_to_num_", "torch.Tensor.nanmean()": "generated/torch.tensor.nanmean.html#torch.Tensor.nanmean", "torch.Tensor.nanmedian()": "generated/torch.tensor.nanmedian.html#torch.Tensor.nanmedian", "torch.Tensor.nanquantile()": "generated/torch.tensor.nanquantile.html#torch.Tensor.nanquantile", "torch.Tensor.nansum()": "generated/torch.tensor.nansum.html#torch.Tensor.nansum", "torch.Tensor.narrow()": "generated/torch.tensor.narrow.html#torch.Tensor.narrow", "torch.Tensor.narrow_copy()": "generated/torch.tensor.narrow_copy.html#torch.Tensor.narrow_copy", "torch.Tensor.nbytes": "generated/torch.tensor.nbytes.html#torch.Tensor.nbytes", "torch.Tensor.ndim": "generated/torch.tensor.ndim.html#torch.Tensor.ndim", "torch.Tensor.ndimension()": "generated/torch.tensor.ndimension.html#torch.Tensor.ndimension", "torch.Tensor.ne()": "generated/torch.tensor.ne.html#torch.Tensor.ne", "torch.Tensor.ne_()": "generated/torch.tensor.ne_.html#torch.Tensor.ne_", "torch.Tensor.neg()": "generated/torch.tensor.neg.html#torch.Tensor.neg", "torch.Tensor.neg_()": "generated/torch.tensor.neg_.html#torch.Tensor.neg_", "torch.Tensor.negative()": "generated/torch.tensor.negative.html#torch.Tensor.negative", "torch.Tensor.negative_()": "generated/torch.tensor.negative_.html#torch.Tensor.negative_", "torch.Tensor.nelement()": "generated/torch.tensor.nelement.html#torch.Tensor.nelement", "torch.Tensor.new_empty()": "generated/torch.tensor.new_empty.html#torch.Tensor.new_empty", "torch.Tensor.new_full()": "generated/torch.tensor.new_full.html#torch.Tensor.new_full", "torch.Tensor.new_ones()": "generated/torch.tensor.new_ones.html#torch.Tensor.new_ones", "torch.Tensor.new_tensor()": "generated/torch.tensor.new_tensor.html#torch.Tensor.new_tensor", "torch.Tensor.new_zeros()": "generated/torch.tensor.new_zeros.html#torch.Tensor.new_zeros", "torch.Tensor.nextafter()": "generated/torch.tensor.nextafter.html#torch.Tensor.nextafter", "torch.Tensor.nextafter_()": "generated/torch.tensor.nextafter_.html#torch.Tensor.nextafter_", "torch.Tensor.nonzero()": "generated/torch.tensor.nonzero.html#torch.Tensor.nonzero", "torch.Tensor.norm()": "generated/torch.tensor.norm.html#torch.Tensor.norm", "torch.Tensor.normal_()": "generated/torch.tensor.normal_.html#torch.Tensor.normal_", "torch.Tensor.not_equal()": "generated/torch.tensor.not_equal.html#torch.Tensor.not_equal", "torch.Tensor.not_equal_()": "generated/torch.tensor.not_equal_.html#torch.Tensor.not_equal_", "torch.Tensor.numel()": "generated/torch.tensor.numel.html#torch.Tensor.numel", "torch.Tensor.numpy()": "generated/torch.tensor.numpy.html#torch.Tensor.numpy", "torch.Tensor.orgqr()": "generated/torch.tensor.orgqr.html#torch.Tensor.orgqr", "torch.Tensor.ormqr()": "generated/torch.tensor.ormqr.html#torch.Tensor.ormqr", "torch.Tensor.outer()": "generated/torch.tensor.outer.html#torch.Tensor.outer", "torch.Tensor.permute()": "generated/torch.tensor.permute.html#torch.Tensor.permute", "torch.Tensor.pin_memory()": "generated/torch.tensor.pin_memory.html#torch.Tensor.pin_memory", "torch.Tensor.pinverse()": "generated/torch.tensor.pinverse.html#torch.Tensor.pinverse", "torch.Tensor.polygamma()": "generated/torch.tensor.polygamma.html#torch.Tensor.polygamma", "torch.Tensor.polygamma_()": "generated/torch.tensor.polygamma_.html#torch.Tensor.polygamma_", "torch.Tensor.positive()": "generated/torch.tensor.positive.html#torch.Tensor.positive", "torch.Tensor.pow()": "generated/torch.tensor.pow.html#torch.Tensor.pow", "torch.Tensor.pow_()": "generated/torch.tensor.pow_.html#torch.Tensor.pow_", "torch.Tensor.prod()": "generated/torch.tensor.prod.html#torch.Tensor.prod", "torch.Tensor.put_()": "generated/torch.tensor.put_.html#torch.Tensor.put_", "torch.Tensor.q_per_channel_axis()": "generated/torch.tensor.q_per_channel_axis.html#torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales()": "generated/torch.tensor.q_per_channel_scales.html#torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points()": "generated/torch.tensor.q_per_channel_zero_points.html#torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale()": "generated/torch.tensor.q_scale.html#torch.Tensor.q_scale", "torch.Tensor.q_zero_point()": "generated/torch.tensor.q_zero_point.html#torch.Tensor.q_zero_point", "torch.Tensor.qr()": "generated/torch.tensor.qr.html#torch.Tensor.qr", "torch.Tensor.qscheme()": "generated/torch.tensor.qscheme.html#torch.Tensor.qscheme", "torch.Tensor.quantile()": "generated/torch.tensor.quantile.html#torch.Tensor.quantile", "torch.Tensor.rad2deg()": "generated/torch.tensor.rad2deg.html#torch.Tensor.rad2deg", "torch.Tensor.random_()": "generated/torch.tensor.random_.html#torch.Tensor.random_", "torch.Tensor.ravel()": "generated/torch.tensor.ravel.html#torch.Tensor.ravel", "torch.Tensor.real": "generated/torch.tensor.real.html#torch.Tensor.real", "torch.Tensor.reciprocal()": "generated/torch.tensor.reciprocal.html#torch.Tensor.reciprocal", "torch.Tensor.reciprocal_()": "generated/torch.tensor.reciprocal_.html#torch.Tensor.reciprocal_", "torch.Tensor.record_stream()": "generated/torch.tensor.record_stream.html#torch.Tensor.record_stream", "torch.Tensor.refine_names()": "named_tensor.html#torch.Tensor.refine_names", "torch.Tensor.register_hook()": "generated/torch.tensor.register_hook.html#torch.Tensor.register_hook", "torch.Tensor.register_post_accumulate_grad_hook()": "generated/torch.tensor.register_post_accumulate_grad_hook.html#torch.Tensor.register_post_accumulate_grad_hook", "torch.Tensor.remainder()": "generated/torch.tensor.remainder.html#torch.Tensor.remainder", "torch.Tensor.remainder_()": "generated/torch.tensor.remainder_.html#torch.Tensor.remainder_", "torch.Tensor.rename()": "named_tensor.html#torch.Tensor.rename", "torch.Tensor.rename_()": "named_tensor.html#torch.Tensor.rename_", "torch.Tensor.renorm()": "generated/torch.tensor.renorm.html#torch.Tensor.renorm", "torch.Tensor.renorm_()": "generated/torch.tensor.renorm_.html#torch.Tensor.renorm_", "torch.Tensor.repeat()": "generated/torch.tensor.repeat.html#torch.Tensor.repeat", "torch.Tensor.repeat_interleave()": "generated/torch.tensor.repeat_interleave.html#torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad": "generated/torch.tensor.requires_grad.html#torch.Tensor.requires_grad", "torch.Tensor.requires_grad_()": "generated/torch.tensor.requires_grad_.html#torch.Tensor.requires_grad_", "torch.Tensor.reshape()": "generated/torch.tensor.reshape.html#torch.Tensor.reshape", "torch.Tensor.reshape_as()": "generated/torch.tensor.reshape_as.html#torch.Tensor.reshape_as", "torch.Tensor.resize_()": "generated/torch.tensor.resize_.html#torch.Tensor.resize_", "torch.Tensor.resize_as_()": "generated/torch.tensor.resize_as_.html#torch.Tensor.resize_as_", "torch.Tensor.resolve_conj()": "generated/torch.tensor.resolve_conj.html#torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg()": "generated/torch.tensor.resolve_neg.html#torch.Tensor.resolve_neg", "torch.Tensor.retain_grad()": "generated/torch.tensor.retain_grad.html#torch.Tensor.retain_grad", "torch.Tensor.retains_grad": "generated/torch.tensor.retains_grad.html#torch.Tensor.retains_grad", "torch.Tensor.roll()": "generated/torch.tensor.roll.html#torch.Tensor.roll", "torch.Tensor.rot90()": "generated/torch.tensor.rot90.html#torch.Tensor.rot90", "torch.Tensor.round()": "generated/torch.tensor.round.html#torch.Tensor.round", "torch.Tensor.round_()": "generated/torch.tensor.round_.html#torch.Tensor.round_", "torch.Tensor.row_indices()": "generated/torch.tensor.row_indices.html#torch.Tensor.row_indices", "torch.Tensor.rsqrt()": "generated/torch.tensor.rsqrt.html#torch.Tensor.rsqrt", "torch.Tensor.rsqrt_()": "generated/torch.tensor.rsqrt_.html#torch.Tensor.rsqrt_", "torch.Tensor.scatter()": "generated/torch.tensor.scatter.html#torch.Tensor.scatter", "torch.Tensor.scatter_()": "generated/torch.tensor.scatter_.html#torch.Tensor.scatter_", "torch.Tensor.scatter_add()": "generated/torch.tensor.scatter_add.html#torch.Tensor.scatter_add", "torch.Tensor.scatter_add_()": "generated/torch.tensor.scatter_add_.html#torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce()": "generated/torch.tensor.scatter_reduce.html#torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_()": "generated/torch.tensor.scatter_reduce_.html#torch.Tensor.scatter_reduce_", "torch.Tensor.select()": "generated/torch.tensor.select.html#torch.Tensor.select", "torch.Tensor.select_scatter()": "generated/torch.tensor.select_scatter.html#torch.Tensor.select_scatter", "torch.Tensor.set_()": "generated/torch.tensor.set_.html#torch.Tensor.set_", "torch.Tensor.sgn()": "generated/torch.tensor.sgn.html#torch.Tensor.sgn", "torch.Tensor.sgn_()": "generated/torch.tensor.sgn_.html#torch.Tensor.sgn_", "torch.Tensor.shape": "generated/torch.tensor.shape.html#torch.Tensor.shape", "torch.Tensor.share_memory_()": "generated/torch.tensor.share_memory_.html#torch.Tensor.share_memory_", "torch.Tensor.short()": "generated/torch.tensor.short.html#torch.Tensor.short", "torch.Tensor.sigmoid()": "generated/torch.tensor.sigmoid.html#torch.Tensor.sigmoid", "torch.Tensor.sigmoid_()": "generated/torch.tensor.sigmoid_.html#torch.Tensor.sigmoid_", "torch.Tensor.sign()": "generated/torch.tensor.sign.html#torch.Tensor.sign", "torch.Tensor.sign_()": "generated/torch.tensor.sign_.html#torch.Tensor.sign_", "torch.Tensor.signbit()": "generated/torch.tensor.signbit.html#torch.Tensor.signbit", "torch.Tensor.sin()": "generated/torch.tensor.sin.html#torch.Tensor.sin", "torch.Tensor.sin_()": "generated/torch.tensor.sin_.html#torch.Tensor.sin_", "torch.Tensor.sinc()": "generated/torch.tensor.sinc.html#torch.Tensor.sinc", "torch.Tensor.sinc_()": "generated/torch.tensor.sinc_.html#torch.Tensor.sinc_", "torch.Tensor.sinh()": "generated/torch.tensor.sinh.html#torch.Tensor.sinh", "torch.Tensor.sinh_()": "generated/torch.tensor.sinh_.html#torch.Tensor.sinh_", "torch.Tensor.size()": "generated/torch.tensor.size.html#torch.Tensor.size", "torch.Tensor.slice_scatter()": "generated/torch.tensor.slice_scatter.html#torch.Tensor.slice_scatter", "torch.Tensor.slogdet()": "generated/torch.tensor.slogdet.html#torch.Tensor.slogdet", "torch.Tensor.smm()": "generated/torch.tensor.smm.html#torch.Tensor.smm", "torch.Tensor.softmax()": "generated/torch.tensor.softmax.html#torch.Tensor.softmax", "torch.Tensor.sort()": "generated/torch.tensor.sort.html#torch.Tensor.sort", "torch.Tensor.sparse_dim()": "generated/torch.tensor.sparse_dim.html#torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask()": "generated/torch.tensor.sparse_mask.html#torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_()": "generated/torch.tensor.sparse_resize_.html#torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_()": "generated/torch.tensor.sparse_resize_and_clear_.html#torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split()": "generated/torch.tensor.split.html#torch.Tensor.split", "torch.Tensor.sqrt()": "generated/torch.tensor.sqrt.html#torch.Tensor.sqrt", "torch.Tensor.sqrt_()": "generated/torch.tensor.sqrt_.html#torch.Tensor.sqrt_", "torch.Tensor.square()": "generated/torch.tensor.square.html#torch.Tensor.square", "torch.Tensor.square_()": "generated/torch.tensor.square_.html#torch.Tensor.square_", "torch.Tensor.squeeze()": "generated/torch.tensor.squeeze.html#torch.Tensor.squeeze", "torch.Tensor.squeeze_()": "generated/torch.tensor.squeeze_.html#torch.Tensor.squeeze_", "torch.Tensor.sspaddmm()": "generated/torch.tensor.sspaddmm.html#torch.Tensor.sspaddmm", "torch.Tensor.std()": "generated/torch.tensor.std.html#torch.Tensor.std", "torch.Tensor.stft()": "generated/torch.tensor.stft.html#torch.Tensor.stft", "torch.Tensor.storage()": "generated/torch.tensor.storage.html#torch.Tensor.storage", "torch.Tensor.storage_offset()": "generated/torch.tensor.storage_offset.html#torch.Tensor.storage_offset", "torch.Tensor.storage_type()": "generated/torch.tensor.storage_type.html#torch.Tensor.storage_type", "torch.Tensor.stride()": "generated/torch.tensor.stride.html#torch.Tensor.stride", "torch.Tensor.sub()": "generated/torch.tensor.sub.html#torch.Tensor.sub", "torch.Tensor.sub_()": "generated/torch.tensor.sub_.html#torch.Tensor.sub_", "torch.Tensor.subtract()": "generated/torch.tensor.subtract.html#torch.Tensor.subtract", "torch.Tensor.subtract_()": "generated/torch.tensor.subtract_.html#torch.Tensor.subtract_", "torch.Tensor.sum()": "generated/torch.tensor.sum.html#torch.Tensor.sum", "torch.Tensor.sum_to_size()": "generated/torch.tensor.sum_to_size.html#torch.Tensor.sum_to_size", "torch.Tensor.svd()": "generated/torch.tensor.svd.html#torch.Tensor.svd", "torch.Tensor.swapaxes()": "generated/torch.tensor.swapaxes.html#torch.Tensor.swapaxes", "torch.Tensor.swapdims()": "generated/torch.tensor.swapdims.html#torch.Tensor.swapdims", "torch.Tensor.T": "tensors.html#torch.Tensor.T", "torch.Tensor.t()": "generated/torch.tensor.t.html#torch.Tensor.t", "torch.Tensor.t_()": "generated/torch.tensor.t_.html#torch.Tensor.t_", "torch.Tensor.take()": "generated/torch.tensor.take.html#torch.Tensor.take", "torch.Tensor.take_along_dim()": "generated/torch.tensor.take_along_dim.html#torch.Tensor.take_along_dim", "torch.Tensor.tan()": "generated/torch.tensor.tan.html#torch.Tensor.tan", "torch.Tensor.tan_()": "generated/torch.tensor.tan_.html#torch.Tensor.tan_", "torch.Tensor.tanh()": "generated/torch.tensor.tanh.html#torch.Tensor.tanh", "torch.Tensor.tanh_()": "generated/torch.tensor.tanh_.html#torch.Tensor.tanh_", "torch.Tensor.tensor_split()": "generated/torch.tensor.tensor_split.html#torch.Tensor.tensor_split", "torch.Tensor.tile()": "generated/torch.tensor.tile.html#torch.Tensor.tile", "torch.Tensor.to()": "generated/torch.tensor.to.html#torch.Tensor.to", "torch.Tensor.to_dense()": "generated/torch.tensor.to_dense.html#torch.Tensor.to_dense", "torch.Tensor.to_mkldnn()": "generated/torch.tensor.to_mkldnn.html#torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse()": "generated/torch.tensor.to_sparse.html#torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc()": "generated/torch.tensor.to_sparse_bsc.html#torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr()": "generated/torch.tensor.to_sparse_bsr.html#torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo()": "generated/torch.tensor.to_sparse_coo.html#torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc()": "generated/torch.tensor.to_sparse_csc.html#torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr()": "generated/torch.tensor.to_sparse_csr.html#torch.Tensor.to_sparse_csr", "torch.Tensor.tolist()": "generated/torch.tensor.tolist.html#torch.Tensor.tolist", "torch.Tensor.topk()": "generated/torch.tensor.topk.html#torch.Tensor.topk", "torch.Tensor.torch.Tensor.abs": "generated/torch.tensor.abs.html", "torch.Tensor.torch.Tensor.abs_": "generated/torch.tensor.abs_.html", "torch.Tensor.torch.Tensor.absolute": "generated/torch.tensor.absolute.html", "torch.Tensor.torch.Tensor.absolute_": "generated/torch.tensor.absolute_.html", "torch.Tensor.torch.Tensor.acos": "generated/torch.tensor.acos.html", "torch.Tensor.torch.Tensor.acos_": "generated/torch.tensor.acos_.html", "torch.Tensor.torch.Tensor.acosh": "generated/torch.tensor.acosh.html", "torch.Tensor.torch.Tensor.acosh_": "generated/torch.tensor.acosh_.html", "torch.Tensor.torch.Tensor.add": "generated/torch.tensor.add.html", "torch.Tensor.torch.Tensor.add_": "generated/torch.tensor.add_.html", "torch.Tensor.torch.Tensor.addbmm": "generated/torch.tensor.addbmm.html", "torch.Tensor.torch.Tensor.addbmm_": "generated/torch.tensor.addbmm_.html", "torch.Tensor.torch.Tensor.addcdiv": "generated/torch.tensor.addcdiv.html", "torch.Tensor.torch.Tensor.addcdiv_": "generated/torch.tensor.addcdiv_.html", "torch.Tensor.torch.Tensor.addcmul": "generated/torch.tensor.addcmul.html", "torch.Tensor.torch.Tensor.addcmul_": "generated/torch.tensor.addcmul_.html", "torch.Tensor.torch.Tensor.addmm": "generated/torch.tensor.addmm.html", "torch.Tensor.torch.Tensor.addmm_": "generated/torch.tensor.addmm_.html", "torch.Tensor.torch.Tensor.addmv": "generated/torch.tensor.addmv.html", "torch.Tensor.torch.Tensor.addmv_": "generated/torch.tensor.addmv_.html", "torch.Tensor.torch.Tensor.addr": "generated/torch.tensor.addr.html", "torch.Tensor.torch.Tensor.addr_": "generated/torch.tensor.addr_.html", "torch.Tensor.torch.Tensor.adjoint": "generated/torch.tensor.adjoint.html", "torch.Tensor.torch.Tensor.all": "generated/torch.tensor.all.html", "torch.Tensor.torch.Tensor.allclose": "generated/torch.tensor.allclose.html", "torch.Tensor.torch.Tensor.amax": "generated/torch.tensor.amax.html", "torch.Tensor.torch.Tensor.amin": "generated/torch.tensor.amin.html", "torch.Tensor.torch.Tensor.aminmax": "generated/torch.tensor.aminmax.html", "torch.Tensor.torch.Tensor.angle": "generated/torch.tensor.angle.html", "torch.Tensor.torch.Tensor.any": "generated/torch.tensor.any.html", "torch.Tensor.torch.Tensor.apply_": "generated/torch.tensor.apply_.html", "torch.Tensor.torch.Tensor.arccos": "generated/torch.tensor.arccos.html", "torch.Tensor.torch.Tensor.arccos_": "generated/torch.tensor.arccos_.html", "torch.Tensor.torch.Tensor.arccosh": "generated/torch.tensor.arccosh.html", "torch.Tensor.torch.Tensor.arccosh_": "generated/torch.tensor.arccosh_.html", "torch.Tensor.torch.Tensor.arcsin": "generated/torch.tensor.arcsin.html", "torch.Tensor.torch.Tensor.arcsin_": "generated/torch.tensor.arcsin_.html", "torch.Tensor.torch.Tensor.arcsinh": "generated/torch.tensor.arcsinh.html", "torch.Tensor.torch.Tensor.arcsinh_": "generated/torch.tensor.arcsinh_.html", "torch.Tensor.torch.Tensor.arctan": "generated/torch.tensor.arctan.html", "torch.Tensor.torch.Tensor.arctan2": "generated/torch.tensor.arctan2.html", "torch.Tensor.torch.Tensor.arctan2_": "generated/torch.tensor.arctan2_.html", "torch.Tensor.torch.Tensor.arctan_": "generated/torch.tensor.arctan_.html", "torch.Tensor.torch.Tensor.arctanh": "generated/torch.tensor.arctanh.html", "torch.Tensor.torch.Tensor.arctanh_": "generated/torch.tensor.arctanh_.html", "torch.Tensor.torch.Tensor.argmax": "generated/torch.tensor.argmax.html", "torch.Tensor.torch.Tensor.argmin": "generated/torch.tensor.argmin.html", "torch.Tensor.torch.Tensor.argsort": "generated/torch.tensor.argsort.html", "torch.Tensor.torch.Tensor.argwhere": "generated/torch.tensor.argwhere.html", "torch.Tensor.torch.Tensor.as_strided": "generated/torch.tensor.as_strided.html", "torch.Tensor.torch.Tensor.as_subclass": "generated/torch.tensor.as_subclass.html", "torch.Tensor.torch.Tensor.asin": "generated/torch.tensor.asin.html", "torch.Tensor.torch.Tensor.asin_": "generated/torch.tensor.asin_.html", "torch.Tensor.torch.Tensor.asinh": "generated/torch.tensor.asinh.html", "torch.Tensor.torch.Tensor.asinh_": "generated/torch.tensor.asinh_.html", "torch.Tensor.torch.Tensor.atan": "generated/torch.tensor.atan.html", "torch.Tensor.torch.Tensor.atan2": "generated/torch.tensor.atan2.html", "torch.Tensor.torch.Tensor.atan2_": "generated/torch.tensor.atan2_.html", "torch.Tensor.torch.Tensor.atan_": "generated/torch.tensor.atan_.html", "torch.Tensor.torch.Tensor.atanh": "generated/torch.tensor.atanh.html", "torch.Tensor.torch.Tensor.atanh_": "generated/torch.tensor.atanh_.html", "torch.Tensor.torch.Tensor.backward": "generated/torch.tensor.backward.html", "torch.Tensor.torch.Tensor.baddbmm": "generated/torch.tensor.baddbmm.html", "torch.Tensor.torch.Tensor.baddbmm_": "generated/torch.tensor.baddbmm_.html", "torch.Tensor.torch.Tensor.bernoulli": "generated/torch.tensor.bernoulli.html", "torch.Tensor.torch.Tensor.bernoulli_": "generated/torch.tensor.bernoulli_.html", "torch.Tensor.torch.Tensor.bfloat16": "generated/torch.tensor.bfloat16.html", "torch.Tensor.torch.Tensor.bincount": "generated/torch.tensor.bincount.html", "torch.Tensor.torch.Tensor.bitwise_and": "generated/torch.tensor.bitwise_and.html", "torch.Tensor.torch.Tensor.bitwise_and_": "generated/torch.tensor.bitwise_and_.html", "torch.Tensor.torch.Tensor.bitwise_left_shift": "generated/torch.tensor.bitwise_left_shift.html", "torch.Tensor.torch.Tensor.bitwise_left_shift_": "generated/torch.tensor.bitwise_left_shift_.html", "torch.Tensor.torch.Tensor.bitwise_not": "generated/torch.tensor.bitwise_not.html", "torch.Tensor.torch.Tensor.bitwise_not_": "generated/torch.tensor.bitwise_not_.html", "torch.Tensor.torch.Tensor.bitwise_or": "generated/torch.tensor.bitwise_or.html", "torch.Tensor.torch.Tensor.bitwise_or_": "generated/torch.tensor.bitwise_or_.html", "torch.Tensor.torch.Tensor.bitwise_right_shift": "generated/torch.tensor.bitwise_right_shift.html", "torch.Tensor.torch.Tensor.bitwise_right_shift_": "generated/torch.tensor.bitwise_right_shift_.html", "torch.Tensor.torch.Tensor.bitwise_xor": "generated/torch.tensor.bitwise_xor.html", "torch.Tensor.torch.Tensor.bitwise_xor_": "generated/torch.tensor.bitwise_xor_.html", "torch.Tensor.torch.Tensor.bmm": "generated/torch.tensor.bmm.html", "torch.Tensor.torch.Tensor.bool": "generated/torch.tensor.bool.html", "torch.Tensor.torch.Tensor.broadcast_to": "generated/torch.tensor.broadcast_to.html", "torch.Tensor.torch.Tensor.byte": "generated/torch.tensor.byte.html", "torch.Tensor.torch.Tensor.cauchy_": "generated/torch.tensor.cauchy_.html", "torch.Tensor.torch.Tensor.cdouble": "generated/torch.tensor.cdouble.html", "torch.Tensor.torch.Tensor.ceil": "generated/torch.tensor.ceil.html", "torch.Tensor.torch.Tensor.ceil_": "generated/torch.tensor.ceil_.html", "torch.Tensor.torch.Tensor.cfloat": "generated/torch.tensor.cfloat.html", "torch.Tensor.torch.Tensor.chalf": "generated/torch.tensor.chalf.html", "torch.Tensor.torch.Tensor.char": "generated/torch.tensor.char.html", "torch.Tensor.torch.Tensor.cholesky": "generated/torch.tensor.cholesky.html", "torch.Tensor.torch.Tensor.cholesky_inverse": "generated/torch.tensor.cholesky_inverse.html", "torch.Tensor.torch.Tensor.cholesky_solve": "generated/torch.tensor.cholesky_solve.html", "torch.Tensor.torch.Tensor.chunk": "generated/torch.tensor.chunk.html", "torch.Tensor.torch.Tensor.clamp": "generated/torch.tensor.clamp.html", "torch.Tensor.torch.Tensor.clamp_": "generated/torch.tensor.clamp_.html", "torch.Tensor.torch.Tensor.clip": "generated/torch.tensor.clip.html", "torch.Tensor.torch.Tensor.clip_": "generated/torch.tensor.clip_.html", "torch.Tensor.torch.Tensor.clone": "generated/torch.tensor.clone.html", "torch.Tensor.torch.Tensor.conj": "generated/torch.tensor.conj.html", "torch.Tensor.torch.Tensor.conj_physical": "generated/torch.tensor.conj_physical.html", "torch.Tensor.torch.Tensor.conj_physical_": "generated/torch.tensor.conj_physical_.html", "torch.Tensor.torch.Tensor.contiguous": "generated/torch.tensor.contiguous.html", "torch.Tensor.torch.Tensor.copy_": "generated/torch.tensor.copy_.html", "torch.Tensor.torch.Tensor.copysign": "generated/torch.tensor.copysign.html", "torch.Tensor.torch.Tensor.copysign_": "generated/torch.tensor.copysign_.html", "torch.Tensor.torch.Tensor.corrcoef": "generated/torch.tensor.corrcoef.html", "torch.Tensor.torch.Tensor.cos": "generated/torch.tensor.cos.html", "torch.Tensor.torch.Tensor.cos_": "generated/torch.tensor.cos_.html", "torch.Tensor.torch.Tensor.cosh": "generated/torch.tensor.cosh.html", "torch.Tensor.torch.Tensor.cosh_": "generated/torch.tensor.cosh_.html", "torch.Tensor.torch.Tensor.count_nonzero": "generated/torch.tensor.count_nonzero.html", "torch.Tensor.torch.Tensor.cov": "generated/torch.tensor.cov.html", "torch.Tensor.torch.Tensor.cpu": "generated/torch.tensor.cpu.html", "torch.Tensor.torch.Tensor.cross": "generated/torch.tensor.cross.html", "torch.Tensor.torch.Tensor.cuda": "generated/torch.tensor.cuda.html", "torch.Tensor.torch.Tensor.cummax": "generated/torch.tensor.cummax.html", "torch.Tensor.torch.Tensor.cummin": "generated/torch.tensor.cummin.html", "torch.Tensor.torch.Tensor.cumprod": "generated/torch.tensor.cumprod.html", "torch.Tensor.torch.Tensor.cumprod_": "generated/torch.tensor.cumprod_.html", "torch.Tensor.torch.Tensor.cumsum": "generated/torch.tensor.cumsum.html", "torch.Tensor.torch.Tensor.cumsum_": "generated/torch.tensor.cumsum_.html", "torch.Tensor.torch.Tensor.data_ptr": "generated/torch.tensor.data_ptr.html", "torch.Tensor.torch.Tensor.deg2rad": "generated/torch.tensor.deg2rad.html", "torch.Tensor.torch.Tensor.dense_dim": "generated/torch.tensor.dense_dim.html", "torch.Tensor.torch.Tensor.dequantize": "generated/torch.tensor.dequantize.html", "torch.Tensor.torch.Tensor.det": "generated/torch.tensor.det.html", "torch.Tensor.torch.Tensor.detach": "generated/torch.tensor.detach.html", "torch.Tensor.torch.Tensor.detach_": "generated/torch.tensor.detach_.html", "torch.Tensor.torch.Tensor.device": "generated/torch.tensor.device.html", "torch.Tensor.torch.Tensor.diag": "generated/torch.tensor.diag.html", "torch.Tensor.torch.Tensor.diag_embed": "generated/torch.tensor.diag_embed.html", "torch.Tensor.torch.Tensor.diagflat": "generated/torch.tensor.diagflat.html", "torch.Tensor.torch.Tensor.diagonal": "generated/torch.tensor.diagonal.html", "torch.Tensor.torch.Tensor.diagonal_scatter": "generated/torch.tensor.diagonal_scatter.html", "torch.Tensor.torch.Tensor.diff": "generated/torch.tensor.diff.html", "torch.Tensor.torch.Tensor.digamma": "generated/torch.tensor.digamma.html", "torch.Tensor.torch.Tensor.digamma_": "generated/torch.tensor.digamma_.html", "torch.Tensor.torch.Tensor.dim": "generated/torch.tensor.dim.html", "torch.Tensor.torch.Tensor.dim_order": "generated/torch.tensor.dim_order.html", "torch.Tensor.torch.Tensor.dist": "generated/torch.tensor.dist.html", "torch.Tensor.torch.Tensor.div": "generated/torch.tensor.div.html", "torch.Tensor.torch.Tensor.div_": "generated/torch.tensor.div_.html", "torch.Tensor.torch.Tensor.divide": "generated/torch.tensor.divide.html", "torch.Tensor.torch.Tensor.divide_": "generated/torch.tensor.divide_.html", "torch.Tensor.torch.Tensor.dot": "generated/torch.tensor.dot.html", "torch.Tensor.torch.Tensor.double": "generated/torch.tensor.double.html", "torch.Tensor.torch.Tensor.dsplit": "generated/torch.tensor.dsplit.html", "torch.Tensor.torch.Tensor.element_size": "generated/torch.tensor.element_size.html", "torch.Tensor.torch.Tensor.eq": "generated/torch.tensor.eq.html", "torch.Tensor.torch.Tensor.eq_": "generated/torch.tensor.eq_.html", "torch.Tensor.torch.Tensor.equal": "generated/torch.tensor.equal.html", "torch.Tensor.torch.Tensor.erf": "generated/torch.tensor.erf.html", "torch.Tensor.torch.Tensor.erf_": "generated/torch.tensor.erf_.html", "torch.Tensor.torch.Tensor.erfc": "generated/torch.tensor.erfc.html", "torch.Tensor.torch.Tensor.erfc_": "generated/torch.tensor.erfc_.html", "torch.Tensor.torch.Tensor.erfinv": "generated/torch.tensor.erfinv.html", "torch.Tensor.torch.Tensor.erfinv_": "generated/torch.tensor.erfinv_.html", "torch.Tensor.torch.Tensor.exp": "generated/torch.tensor.exp.html", "torch.Tensor.torch.Tensor.exp_": "generated/torch.tensor.exp_.html", "torch.Tensor.torch.Tensor.expand": "generated/torch.tensor.expand.html", "torch.Tensor.torch.Tensor.expand_as": "generated/torch.tensor.expand_as.html", "torch.Tensor.torch.Tensor.expm1": "generated/torch.tensor.expm1.html", "torch.Tensor.torch.Tensor.expm1_": "generated/torch.tensor.expm1_.html", "torch.Tensor.torch.Tensor.exponential_": "generated/torch.tensor.exponential_.html", "torch.Tensor.torch.Tensor.fill_": "generated/torch.tensor.fill_.html", "torch.Tensor.torch.Tensor.fill_diagonal_": "generated/torch.tensor.fill_diagonal_.html", "torch.Tensor.torch.Tensor.fix": "generated/torch.tensor.fix.html", "torch.Tensor.torch.Tensor.fix_": "generated/torch.tensor.fix_.html", "torch.Tensor.torch.Tensor.flatten": "generated/torch.tensor.flatten.html", "torch.Tensor.torch.Tensor.flip": "generated/torch.tensor.flip.html", "torch.Tensor.torch.Tensor.fliplr": "generated/torch.tensor.fliplr.html", "torch.Tensor.torch.Tensor.flipud": "generated/torch.tensor.flipud.html", "torch.Tensor.torch.Tensor.float": "generated/torch.tensor.float.html", "torch.Tensor.torch.Tensor.float_power": "generated/torch.tensor.float_power.html", "torch.Tensor.torch.Tensor.float_power_": "generated/torch.tensor.float_power_.html", "torch.Tensor.torch.Tensor.floor": "generated/torch.tensor.floor.html", "torch.Tensor.torch.Tensor.floor_": "generated/torch.tensor.floor_.html", "torch.Tensor.torch.Tensor.floor_divide": "generated/torch.tensor.floor_divide.html", "torch.Tensor.torch.Tensor.floor_divide_": "generated/torch.tensor.floor_divide_.html", "torch.Tensor.torch.Tensor.fmax": "generated/torch.tensor.fmax.html", "torch.Tensor.torch.Tensor.fmin": "generated/torch.tensor.fmin.html", "torch.Tensor.torch.Tensor.fmod": "generated/torch.tensor.fmod.html", "torch.Tensor.torch.Tensor.fmod_": "generated/torch.tensor.fmod_.html", "torch.Tensor.torch.Tensor.frac": "generated/torch.tensor.frac.html", "torch.Tensor.torch.Tensor.frac_": "generated/torch.tensor.frac_.html", "torch.Tensor.torch.Tensor.frexp": "generated/torch.tensor.frexp.html", "torch.Tensor.torch.Tensor.gather": "generated/torch.tensor.gather.html", "torch.Tensor.torch.Tensor.gcd": "generated/torch.tensor.gcd.html", "torch.Tensor.torch.Tensor.gcd_": "generated/torch.tensor.gcd_.html", "torch.Tensor.torch.Tensor.ge": "generated/torch.tensor.ge.html", "torch.Tensor.torch.Tensor.ge_": "generated/torch.tensor.ge_.html", "torch.Tensor.torch.Tensor.geometric_": "generated/torch.tensor.geometric_.html", "torch.Tensor.torch.Tensor.geqrf": "generated/torch.tensor.geqrf.html", "torch.Tensor.torch.Tensor.ger": "generated/torch.tensor.ger.html", "torch.Tensor.torch.Tensor.get_device": "generated/torch.tensor.get_device.html", "torch.Tensor.torch.Tensor.grad": "generated/torch.tensor.grad.html", "torch.Tensor.torch.Tensor.greater": "generated/torch.tensor.greater.html", "torch.Tensor.torch.Tensor.greater_": "generated/torch.tensor.greater_.html", "torch.Tensor.torch.Tensor.greater_equal": "generated/torch.tensor.greater_equal.html", "torch.Tensor.torch.Tensor.greater_equal_": "generated/torch.tensor.greater_equal_.html", "torch.Tensor.torch.Tensor.gt": "generated/torch.tensor.gt.html", "torch.Tensor.torch.Tensor.gt_": "generated/torch.tensor.gt_.html", "torch.Tensor.torch.Tensor.half": "generated/torch.tensor.half.html", "torch.Tensor.torch.Tensor.hardshrink": "generated/torch.tensor.hardshrink.html", "torch.Tensor.torch.Tensor.heaviside": "generated/torch.tensor.heaviside.html", "torch.Tensor.torch.Tensor.histc": "generated/torch.tensor.histc.html", "torch.Tensor.torch.Tensor.histogram": "generated/torch.tensor.histogram.html", "torch.Tensor.torch.Tensor.hsplit": "generated/torch.tensor.hsplit.html", "torch.Tensor.torch.Tensor.hypot": "generated/torch.tensor.hypot.html", "torch.Tensor.torch.Tensor.hypot_": "generated/torch.tensor.hypot_.html", "torch.Tensor.torch.Tensor.i0": "generated/torch.tensor.i0.html", "torch.Tensor.torch.Tensor.i0_": "generated/torch.tensor.i0_.html", "torch.Tensor.torch.Tensor.igamma": "generated/torch.tensor.igamma.html", "torch.Tensor.torch.Tensor.igamma_": "generated/torch.tensor.igamma_.html", "torch.Tensor.torch.Tensor.igammac": "generated/torch.tensor.igammac.html", "torch.Tensor.torch.Tensor.igammac_": "generated/torch.tensor.igammac_.html", "torch.Tensor.torch.Tensor.imag": "generated/torch.tensor.imag.html", "torch.Tensor.torch.Tensor.index_add": "generated/torch.tensor.index_add.html", "torch.Tensor.torch.Tensor.index_add_": "generated/torch.tensor.index_add_.html", "torch.Tensor.torch.Tensor.index_copy": "generated/torch.tensor.index_copy.html", "torch.Tensor.torch.Tensor.index_copy_": "generated/torch.tensor.index_copy_.html", "torch.Tensor.torch.Tensor.index_fill": "generated/torch.tensor.index_fill.html", "torch.Tensor.torch.Tensor.index_fill_": "generated/torch.tensor.index_fill_.html", "torch.Tensor.torch.Tensor.index_put": "generated/torch.tensor.index_put.html", "torch.Tensor.torch.Tensor.index_put_": "generated/torch.tensor.index_put_.html", "torch.Tensor.torch.Tensor.index_reduce": "generated/torch.tensor.index_reduce.html", "torch.Tensor.torch.Tensor.index_reduce_": "generated/torch.tensor.index_reduce_.html", "torch.Tensor.torch.Tensor.index_select": "generated/torch.tensor.index_select.html", "torch.Tensor.torch.Tensor.indices": "generated/torch.tensor.indices.html", "torch.Tensor.torch.Tensor.inner": "generated/torch.tensor.inner.html", "torch.Tensor.torch.Tensor.int": "generated/torch.tensor.int.html", "torch.Tensor.torch.Tensor.int_repr": "generated/torch.tensor.int_repr.html", "torch.Tensor.torch.Tensor.inverse": "generated/torch.tensor.inverse.html", "torch.Tensor.torch.Tensor.is_complex": "generated/torch.tensor.is_complex.html", "torch.Tensor.torch.Tensor.is_conj": "generated/torch.tensor.is_conj.html", "torch.Tensor.torch.Tensor.is_contiguous": "generated/torch.tensor.is_contiguous.html", "torch.Tensor.torch.Tensor.is_cuda": "generated/torch.tensor.is_cuda.html", "torch.Tensor.torch.Tensor.is_floating_point": "generated/torch.tensor.is_floating_point.html", "torch.Tensor.torch.Tensor.is_inference": "generated/torch.tensor.is_inference.html", "torch.Tensor.torch.Tensor.is_leaf": "generated/torch.tensor.is_leaf.html", "torch.Tensor.torch.Tensor.is_meta": "generated/torch.tensor.is_meta.html", "torch.Tensor.torch.Tensor.is_pinned": "generated/torch.tensor.is_pinned.html", "torch.Tensor.torch.Tensor.is_quantized": "generated/torch.tensor.is_quantized.html", "torch.Tensor.torch.Tensor.is_set_to": "generated/torch.tensor.is_set_to.html", "torch.Tensor.torch.Tensor.is_shared": "generated/torch.tensor.is_shared.html", "torch.Tensor.torch.Tensor.is_signed": "generated/torch.tensor.is_signed.html", "torch.Tensor.torch.Tensor.is_sparse": "generated/torch.tensor.is_sparse.html", "torch.Tensor.torch.Tensor.isclose": "generated/torch.tensor.isclose.html", "torch.Tensor.torch.Tensor.isfinite": "generated/torch.tensor.isfinite.html", "torch.Tensor.torch.Tensor.isinf": "generated/torch.tensor.isinf.html", "torch.Tensor.torch.Tensor.isnan": "generated/torch.tensor.isnan.html", "torch.Tensor.torch.Tensor.isneginf": "generated/torch.tensor.isneginf.html", "torch.Tensor.torch.Tensor.isposinf": "generated/torch.tensor.isposinf.html", "torch.Tensor.torch.Tensor.isreal": "generated/torch.tensor.isreal.html", "torch.Tensor.torch.Tensor.istft": "generated/torch.tensor.istft.html", "torch.Tensor.torch.Tensor.item": "generated/torch.tensor.item.html", "torch.Tensor.torch.Tensor.itemsize": "generated/torch.tensor.itemsize.html", "torch.Tensor.torch.Tensor.kthvalue": "generated/torch.tensor.kthvalue.html", "torch.Tensor.torch.Tensor.lcm": "generated/torch.tensor.lcm.html", "torch.Tensor.torch.Tensor.lcm_": "generated/torch.tensor.lcm_.html", "torch.Tensor.torch.Tensor.ldexp": "generated/torch.tensor.ldexp.html", "torch.Tensor.torch.Tensor.ldexp_": "generated/torch.tensor.ldexp_.html", "torch.Tensor.torch.Tensor.le": "generated/torch.tensor.le.html", "torch.Tensor.torch.Tensor.le_": "generated/torch.tensor.le_.html", "torch.Tensor.torch.Tensor.lerp": "generated/torch.tensor.lerp.html", "torch.Tensor.torch.Tensor.lerp_": "generated/torch.tensor.lerp_.html", "torch.Tensor.torch.Tensor.less": "generated/torch.tensor.less.html", "torch.Tensor.torch.Tensor.less_": "generated/torch.tensor.less_.html", "torch.Tensor.torch.Tensor.less_equal": "generated/torch.tensor.less_equal.html", "torch.Tensor.torch.Tensor.less_equal_": "generated/torch.tensor.less_equal_.html", "torch.Tensor.torch.Tensor.lgamma": "generated/torch.tensor.lgamma.html", "torch.Tensor.torch.Tensor.lgamma_": "generated/torch.tensor.lgamma_.html", "torch.Tensor.torch.Tensor.log": "generated/torch.tensor.log.html", "torch.Tensor.torch.Tensor.log10": "generated/torch.tensor.log10.html", "torch.Tensor.torch.Tensor.log10_": "generated/torch.tensor.log10_.html", "torch.Tensor.torch.Tensor.log1p": "generated/torch.tensor.log1p.html", "torch.Tensor.torch.Tensor.log1p_": "generated/torch.tensor.log1p_.html", "torch.Tensor.torch.Tensor.log2": "generated/torch.tensor.log2.html", "torch.Tensor.torch.Tensor.log2_": "generated/torch.tensor.log2_.html", "torch.Tensor.torch.Tensor.log_": "generated/torch.tensor.log_.html", "torch.Tensor.torch.Tensor.log_normal_": "generated/torch.tensor.log_normal_.html", "torch.Tensor.torch.Tensor.logaddexp": "generated/torch.tensor.logaddexp.html", "torch.Tensor.torch.Tensor.logaddexp2": "generated/torch.tensor.logaddexp2.html", "torch.Tensor.torch.Tensor.logcumsumexp": "generated/torch.tensor.logcumsumexp.html", "torch.Tensor.torch.Tensor.logdet": "generated/torch.tensor.logdet.html", "torch.Tensor.torch.Tensor.logical_and": "generated/torch.tensor.logical_and.html", "torch.Tensor.torch.Tensor.logical_and_": "generated/torch.tensor.logical_and_.html", "torch.Tensor.torch.Tensor.logical_not": "generated/torch.tensor.logical_not.html", "torch.Tensor.torch.Tensor.logical_not_": "generated/torch.tensor.logical_not_.html", "torch.Tensor.torch.Tensor.logical_or": "generated/torch.tensor.logical_or.html", "torch.Tensor.torch.Tensor.logical_or_": "generated/torch.tensor.logical_or_.html", "torch.Tensor.torch.Tensor.logical_xor": "generated/torch.tensor.logical_xor.html", "torch.Tensor.torch.Tensor.logical_xor_": "generated/torch.tensor.logical_xor_.html", "torch.Tensor.torch.Tensor.logit": "generated/torch.tensor.logit.html", "torch.Tensor.torch.Tensor.logit_": "generated/torch.tensor.logit_.html", "torch.Tensor.torch.Tensor.logsumexp": "generated/torch.tensor.logsumexp.html", "torch.Tensor.torch.Tensor.long": "generated/torch.tensor.long.html", "torch.Tensor.torch.Tensor.lt": "generated/torch.tensor.lt.html", "torch.Tensor.torch.Tensor.lt_": "generated/torch.tensor.lt_.html", "torch.Tensor.torch.Tensor.lu": "generated/torch.tensor.lu.html", "torch.Tensor.torch.Tensor.lu_solve": "generated/torch.tensor.lu_solve.html", "torch.Tensor.torch.Tensor.map_": "generated/torch.tensor.map_.html", "torch.Tensor.torch.Tensor.masked_fill": "generated/torch.tensor.masked_fill.html", "torch.Tensor.torch.Tensor.masked_fill_": "generated/torch.tensor.masked_fill_.html", "torch.Tensor.torch.Tensor.masked_scatter": "generated/torch.tensor.masked_scatter.html", "torch.Tensor.torch.Tensor.masked_scatter_": "generated/torch.tensor.masked_scatter_.html", "torch.Tensor.torch.Tensor.masked_select": "generated/torch.tensor.masked_select.html", "torch.Tensor.torch.Tensor.matmul": "generated/torch.tensor.matmul.html", "torch.Tensor.torch.Tensor.matrix_exp": "generated/torch.tensor.matrix_exp.html", "torch.Tensor.torch.Tensor.matrix_power": "generated/torch.tensor.matrix_power.html", "torch.Tensor.torch.Tensor.max": "generated/torch.tensor.max.html", "torch.Tensor.torch.Tensor.maximum": "generated/torch.tensor.maximum.html", "torch.Tensor.torch.Tensor.mean": "generated/torch.tensor.mean.html", "torch.Tensor.torch.Tensor.median": "generated/torch.tensor.median.html", "torch.Tensor.torch.Tensor.min": "generated/torch.tensor.min.html", "torch.Tensor.torch.Tensor.minimum": "generated/torch.tensor.minimum.html", "torch.Tensor.torch.Tensor.mm": "generated/torch.tensor.mm.html", "torch.Tensor.torch.Tensor.mode": "generated/torch.tensor.mode.html", "torch.Tensor.torch.Tensor.moveaxis": "generated/torch.tensor.moveaxis.html", "torch.Tensor.torch.Tensor.movedim": "generated/torch.tensor.movedim.html", "torch.Tensor.torch.Tensor.msort": "generated/torch.tensor.msort.html", "torch.Tensor.torch.Tensor.mul": "generated/torch.tensor.mul.html", "torch.Tensor.torch.Tensor.mul_": "generated/torch.tensor.mul_.html", "torch.Tensor.torch.Tensor.multinomial": "generated/torch.tensor.multinomial.html", "torch.Tensor.torch.Tensor.multiply": "generated/torch.tensor.multiply.html", "torch.Tensor.torch.Tensor.multiply_": "generated/torch.tensor.multiply_.html", "torch.Tensor.torch.Tensor.mv": "generated/torch.tensor.mv.html", "torch.Tensor.torch.Tensor.mvlgamma": "generated/torch.tensor.mvlgamma.html", "torch.Tensor.torch.Tensor.mvlgamma_": "generated/torch.tensor.mvlgamma_.html", "torch.Tensor.torch.Tensor.nan_to_num": "generated/torch.tensor.nan_to_num.html", "torch.Tensor.torch.Tensor.nan_to_num_": "generated/torch.tensor.nan_to_num_.html", "torch.Tensor.torch.Tensor.nanmean": "generated/torch.tensor.nanmean.html", "torch.Tensor.torch.Tensor.nanmedian": "generated/torch.tensor.nanmedian.html", "torch.Tensor.torch.Tensor.nanquantile": "generated/torch.tensor.nanquantile.html", "torch.Tensor.torch.Tensor.nansum": "generated/torch.tensor.nansum.html", "torch.Tensor.torch.Tensor.narrow": "generated/torch.tensor.narrow.html", "torch.Tensor.torch.Tensor.narrow_copy": "generated/torch.tensor.narrow_copy.html", "torch.Tensor.torch.Tensor.nbytes": "generated/torch.tensor.nbytes.html", "torch.Tensor.torch.Tensor.ndim": "generated/torch.tensor.ndim.html", "torch.Tensor.torch.Tensor.ndimension": "generated/torch.tensor.ndimension.html", "torch.Tensor.torch.Tensor.ne": "generated/torch.tensor.ne.html", "torch.Tensor.torch.Tensor.ne_": "generated/torch.tensor.ne_.html", "torch.Tensor.torch.Tensor.neg": "generated/torch.tensor.neg.html", "torch.Tensor.torch.Tensor.neg_": "generated/torch.tensor.neg_.html", "torch.Tensor.torch.Tensor.negative": "generated/torch.tensor.negative.html", "torch.Tensor.torch.Tensor.negative_": "generated/torch.tensor.negative_.html", "torch.Tensor.torch.Tensor.nelement": "generated/torch.tensor.nelement.html", "torch.Tensor.torch.Tensor.new_empty": "generated/torch.tensor.new_empty.html", "torch.Tensor.torch.Tensor.new_full": "generated/torch.tensor.new_full.html", "torch.Tensor.torch.Tensor.new_ones": "generated/torch.tensor.new_ones.html", "torch.Tensor.torch.Tensor.new_tensor": "generated/torch.tensor.new_tensor.html", "torch.Tensor.torch.Tensor.new_zeros": "generated/torch.tensor.new_zeros.html", "torch.Tensor.torch.Tensor.nextafter": "generated/torch.tensor.nextafter.html", "torch.Tensor.torch.Tensor.nextafter_": "generated/torch.tensor.nextafter_.html", "torch.Tensor.torch.Tensor.nonzero": "generated/torch.tensor.nonzero.html", "torch.Tensor.torch.Tensor.norm": "generated/torch.tensor.norm.html", "torch.Tensor.torch.Tensor.normal_": "generated/torch.tensor.normal_.html", "torch.Tensor.torch.Tensor.not_equal": "generated/torch.tensor.not_equal.html", "torch.Tensor.torch.Tensor.not_equal_": "generated/torch.tensor.not_equal_.html", "torch.Tensor.torch.Tensor.numel": "generated/torch.tensor.numel.html", "torch.Tensor.torch.Tensor.numpy": "generated/torch.tensor.numpy.html", "torch.Tensor.torch.Tensor.orgqr": "generated/torch.tensor.orgqr.html", "torch.Tensor.torch.Tensor.ormqr": "generated/torch.tensor.ormqr.html", "torch.Tensor.torch.Tensor.outer": "generated/torch.tensor.outer.html", "torch.Tensor.torch.Tensor.permute": "generated/torch.tensor.permute.html", "torch.Tensor.torch.Tensor.pin_memory": "generated/torch.tensor.pin_memory.html", "torch.Tensor.torch.Tensor.pinverse": "generated/torch.tensor.pinverse.html", "torch.Tensor.torch.Tensor.polygamma": "generated/torch.tensor.polygamma.html", "torch.Tensor.torch.Tensor.polygamma_": "generated/torch.tensor.polygamma_.html", "torch.Tensor.torch.Tensor.positive": "generated/torch.tensor.positive.html", "torch.Tensor.torch.Tensor.pow": "generated/torch.tensor.pow.html", "torch.Tensor.torch.Tensor.pow_": "generated/torch.tensor.pow_.html", "torch.Tensor.torch.Tensor.prod": "generated/torch.tensor.prod.html", "torch.Tensor.torch.Tensor.put_": "generated/torch.tensor.put_.html", "torch.Tensor.torch.Tensor.q_per_channel_axis": "generated/torch.tensor.q_per_channel_axis.html", "torch.Tensor.torch.Tensor.q_per_channel_scales": "generated/torch.tensor.q_per_channel_scales.html", "torch.Tensor.torch.Tensor.q_per_channel_zero_points": "generated/torch.tensor.q_per_channel_zero_points.html", "torch.Tensor.torch.Tensor.q_scale": "generated/torch.tensor.q_scale.html", "torch.Tensor.torch.Tensor.q_zero_point": "generated/torch.tensor.q_zero_point.html", "torch.Tensor.torch.Tensor.qr": "generated/torch.tensor.qr.html", "torch.Tensor.torch.Tensor.qscheme": "generated/torch.tensor.qscheme.html", "torch.Tensor.torch.Tensor.quantile": "generated/torch.tensor.quantile.html", "torch.Tensor.torch.Tensor.rad2deg": "generated/torch.tensor.rad2deg.html", "torch.Tensor.torch.Tensor.random_": "generated/torch.tensor.random_.html", "torch.Tensor.torch.Tensor.ravel": "generated/torch.tensor.ravel.html", "torch.Tensor.torch.Tensor.real": "generated/torch.tensor.real.html", "torch.Tensor.torch.Tensor.reciprocal": "generated/torch.tensor.reciprocal.html", "torch.Tensor.torch.Tensor.reciprocal_": "generated/torch.tensor.reciprocal_.html", "torch.Tensor.torch.Tensor.record_stream": "generated/torch.tensor.record_stream.html", "torch.Tensor.torch.Tensor.register_hook": "generated/torch.tensor.register_hook.html", "torch.Tensor.torch.Tensor.register_post_accumulate_grad_hook": "generated/torch.tensor.register_post_accumulate_grad_hook.html", "torch.Tensor.torch.Tensor.remainder": "generated/torch.tensor.remainder.html", "torch.Tensor.torch.Tensor.remainder_": "generated/torch.tensor.remainder_.html", "torch.Tensor.torch.Tensor.renorm": "generated/torch.tensor.renorm.html", "torch.Tensor.torch.Tensor.renorm_": "generated/torch.tensor.renorm_.html", "torch.Tensor.torch.Tensor.repeat": "generated/torch.tensor.repeat.html", "torch.Tensor.torch.Tensor.repeat_interleave": "generated/torch.tensor.repeat_interleave.html", "torch.Tensor.torch.Tensor.requires_grad": "generated/torch.tensor.requires_grad.html", "torch.Tensor.torch.Tensor.requires_grad_": "generated/torch.tensor.requires_grad_.html", "torch.Tensor.torch.Tensor.reshape": "generated/torch.tensor.reshape.html", "torch.Tensor.torch.Tensor.reshape_as": "generated/torch.tensor.reshape_as.html", "torch.Tensor.torch.Tensor.resize_": "generated/torch.tensor.resize_.html", "torch.Tensor.torch.Tensor.resize_as_": "generated/torch.tensor.resize_as_.html", "torch.Tensor.torch.Tensor.resolve_conj": "generated/torch.tensor.resolve_conj.html", "torch.Tensor.torch.Tensor.resolve_neg": "generated/torch.tensor.resolve_neg.html", "torch.Tensor.torch.Tensor.retain_grad": "generated/torch.tensor.retain_grad.html", "torch.Tensor.torch.Tensor.retains_grad": "generated/torch.tensor.retains_grad.html", "torch.Tensor.torch.Tensor.roll": "generated/torch.tensor.roll.html", "torch.Tensor.torch.Tensor.rot90": "generated/torch.tensor.rot90.html", "torch.Tensor.torch.Tensor.round": "generated/torch.tensor.round.html", "torch.Tensor.torch.Tensor.round_": "generated/torch.tensor.round_.html", "torch.Tensor.torch.Tensor.rsqrt": "generated/torch.tensor.rsqrt.html", "torch.Tensor.torch.Tensor.rsqrt_": "generated/torch.tensor.rsqrt_.html", "torch.Tensor.torch.Tensor.scatter": "generated/torch.tensor.scatter.html", "torch.Tensor.torch.Tensor.scatter_": "generated/torch.tensor.scatter_.html", "torch.Tensor.torch.Tensor.scatter_add": "generated/torch.tensor.scatter_add.html", "torch.Tensor.torch.Tensor.scatter_add_": "generated/torch.tensor.scatter_add_.html", "torch.Tensor.torch.Tensor.scatter_reduce": "generated/torch.tensor.scatter_reduce.html", "torch.Tensor.torch.Tensor.scatter_reduce_": "generated/torch.tensor.scatter_reduce_.html", "torch.Tensor.torch.Tensor.select": "generated/torch.tensor.select.html", "torch.Tensor.torch.Tensor.select_scatter": "generated/torch.tensor.select_scatter.html", "torch.Tensor.torch.Tensor.set_": "generated/torch.tensor.set_.html", "torch.Tensor.torch.Tensor.sgn": "generated/torch.tensor.sgn.html", "torch.Tensor.torch.Tensor.sgn_": "generated/torch.tensor.sgn_.html", "torch.Tensor.torch.Tensor.shape": "generated/torch.tensor.shape.html", "torch.Tensor.torch.Tensor.share_memory_": "generated/torch.tensor.share_memory_.html", "torch.Tensor.torch.Tensor.short": "generated/torch.tensor.short.html", "torch.Tensor.torch.Tensor.sigmoid": "generated/torch.tensor.sigmoid.html", "torch.Tensor.torch.Tensor.sigmoid_": "generated/torch.tensor.sigmoid_.html", "torch.Tensor.torch.Tensor.sign": "generated/torch.tensor.sign.html", "torch.Tensor.torch.Tensor.sign_": "generated/torch.tensor.sign_.html", "torch.Tensor.torch.Tensor.signbit": "generated/torch.tensor.signbit.html", "torch.Tensor.torch.Tensor.sin": "generated/torch.tensor.sin.html", "torch.Tensor.torch.Tensor.sin_": "generated/torch.tensor.sin_.html", "torch.Tensor.torch.Tensor.sinc": "generated/torch.tensor.sinc.html", "torch.Tensor.torch.Tensor.sinc_": "generated/torch.tensor.sinc_.html", "torch.Tensor.torch.Tensor.sinh": "generated/torch.tensor.sinh.html", "torch.Tensor.torch.Tensor.sinh_": "generated/torch.tensor.sinh_.html", "torch.Tensor.torch.Tensor.size": "generated/torch.tensor.size.html", "torch.Tensor.torch.Tensor.slice_scatter": "generated/torch.tensor.slice_scatter.html", "torch.Tensor.torch.Tensor.slogdet": "generated/torch.tensor.slogdet.html", "torch.Tensor.torch.Tensor.smm": "generated/torch.tensor.smm.html", "torch.Tensor.torch.Tensor.softmax": "generated/torch.tensor.softmax.html", "torch.Tensor.torch.Tensor.sort": "generated/torch.tensor.sort.html", "torch.Tensor.torch.Tensor.sparse_dim": "generated/torch.tensor.sparse_dim.html", "torch.Tensor.torch.Tensor.sparse_mask": "generated/torch.tensor.sparse_mask.html", "torch.Tensor.torch.Tensor.split": "generated/torch.tensor.split.html", "torch.Tensor.torch.Tensor.sqrt": "generated/torch.tensor.sqrt.html", "torch.Tensor.torch.Tensor.sqrt_": "generated/torch.tensor.sqrt_.html", "torch.Tensor.torch.Tensor.square": "generated/torch.tensor.square.html", "torch.Tensor.torch.Tensor.square_": "generated/torch.tensor.square_.html", "torch.Tensor.torch.Tensor.squeeze": "generated/torch.tensor.squeeze.html", "torch.Tensor.torch.Tensor.squeeze_": "generated/torch.tensor.squeeze_.html", "torch.Tensor.torch.Tensor.sspaddmm": "generated/torch.tensor.sspaddmm.html", "torch.Tensor.torch.Tensor.std": "generated/torch.tensor.std.html", "torch.Tensor.torch.Tensor.stft": "generated/torch.tensor.stft.html", "torch.Tensor.torch.Tensor.storage": "generated/torch.tensor.storage.html", "torch.Tensor.torch.Tensor.storage_offset": "generated/torch.tensor.storage_offset.html", "torch.Tensor.torch.Tensor.storage_type": "generated/torch.tensor.storage_type.html", "torch.Tensor.torch.Tensor.stride": "generated/torch.tensor.stride.html", "torch.Tensor.torch.Tensor.sub": "generated/torch.tensor.sub.html", "torch.Tensor.torch.Tensor.sub_": "generated/torch.tensor.sub_.html", "torch.Tensor.torch.Tensor.subtract": "generated/torch.tensor.subtract.html", "torch.Tensor.torch.Tensor.subtract_": "generated/torch.tensor.subtract_.html", "torch.Tensor.torch.Tensor.sum": "generated/torch.tensor.sum.html", "torch.Tensor.torch.Tensor.sum_to_size": "generated/torch.tensor.sum_to_size.html", "torch.Tensor.torch.Tensor.svd": "generated/torch.tensor.svd.html", "torch.Tensor.torch.Tensor.swapaxes": "generated/torch.tensor.swapaxes.html", "torch.Tensor.torch.Tensor.swapdims": "generated/torch.tensor.swapdims.html", "torch.Tensor.torch.Tensor.t": "generated/torch.tensor.t.html", "torch.Tensor.torch.Tensor.t_": "generated/torch.tensor.t_.html", "torch.Tensor.torch.Tensor.take": "generated/torch.tensor.take.html", "torch.Tensor.torch.Tensor.take_along_dim": "generated/torch.tensor.take_along_dim.html", "torch.Tensor.torch.Tensor.tan": "generated/torch.tensor.tan.html", "torch.Tensor.torch.Tensor.tan_": "generated/torch.tensor.tan_.html", "torch.Tensor.torch.Tensor.tanh": "generated/torch.tensor.tanh.html", "torch.Tensor.torch.Tensor.tanh_": "generated/torch.tensor.tanh_.html", "torch.Tensor.torch.Tensor.tensor_split": "generated/torch.tensor.tensor_split.html", "torch.Tensor.torch.Tensor.tile": "generated/torch.tensor.tile.html", "torch.Tensor.torch.Tensor.to": "generated/torch.tensor.to.html", "torch.Tensor.torch.Tensor.to_dense": "generated/torch.tensor.to_dense.html", "torch.Tensor.torch.Tensor.to_mkldnn": "generated/torch.tensor.to_mkldnn.html", "torch.Tensor.torch.Tensor.to_sparse": "generated/torch.tensor.to_sparse.html", "torch.Tensor.torch.Tensor.to_sparse_bsc": "generated/torch.tensor.to_sparse_bsc.html", "torch.Tensor.torch.Tensor.to_sparse_bsr": "generated/torch.tensor.to_sparse_bsr.html", "torch.Tensor.torch.Tensor.to_sparse_csc": "generated/torch.tensor.to_sparse_csc.html", "torch.Tensor.torch.Tensor.to_sparse_csr": "generated/torch.tensor.to_sparse_csr.html", "torch.Tensor.torch.Tensor.tolist": "generated/torch.tensor.tolist.html", "torch.Tensor.torch.Tensor.topk": "generated/torch.tensor.topk.html", "torch.Tensor.torch.Tensor.trace": "generated/torch.tensor.trace.html", "torch.Tensor.torch.Tensor.transpose": "generated/torch.tensor.transpose.html", "torch.Tensor.torch.Tensor.transpose_": "generated/torch.tensor.transpose_.html", "torch.Tensor.torch.Tensor.triangular_solve": "generated/torch.tensor.triangular_solve.html", "torch.Tensor.torch.Tensor.tril": "generated/torch.tensor.tril.html", "torch.Tensor.torch.Tensor.tril_": "generated/torch.tensor.tril_.html", "torch.Tensor.torch.Tensor.triu": "generated/torch.tensor.triu.html", "torch.Tensor.torch.Tensor.triu_": "generated/torch.tensor.triu_.html", "torch.Tensor.torch.Tensor.true_divide": "generated/torch.tensor.true_divide.html", "torch.Tensor.torch.Tensor.true_divide_": "generated/torch.tensor.true_divide_.html", "torch.Tensor.torch.Tensor.trunc": "generated/torch.tensor.trunc.html", "torch.Tensor.torch.Tensor.trunc_": "generated/torch.tensor.trunc_.html", "torch.Tensor.torch.Tensor.type": "generated/torch.tensor.type.html", "torch.Tensor.torch.Tensor.type_as": "generated/torch.tensor.type_as.html", "torch.Tensor.torch.Tensor.unbind": "generated/torch.tensor.unbind.html", "torch.Tensor.torch.Tensor.unflatten": "generated/torch.tensor.unflatten.html", "torch.Tensor.torch.Tensor.unfold": "generated/torch.tensor.unfold.html", "torch.Tensor.torch.Tensor.uniform_": "generated/torch.tensor.uniform_.html", "torch.Tensor.torch.Tensor.unique": "generated/torch.tensor.unique.html", "torch.Tensor.torch.Tensor.unique_consecutive": "generated/torch.tensor.unique_consecutive.html", "torch.Tensor.torch.Tensor.unsqueeze": "generated/torch.tensor.unsqueeze.html", "torch.Tensor.torch.Tensor.unsqueeze_": "generated/torch.tensor.unsqueeze_.html", "torch.Tensor.torch.Tensor.untyped_storage": "generated/torch.tensor.untyped_storage.html", "torch.Tensor.torch.Tensor.values": "generated/torch.tensor.values.html", "torch.Tensor.torch.Tensor.var": "generated/torch.tensor.var.html", "torch.Tensor.torch.Tensor.vdot": "generated/torch.tensor.vdot.html", "torch.Tensor.torch.Tensor.view": "generated/torch.tensor.view.html", "torch.Tensor.torch.Tensor.view_as": "generated/torch.tensor.view_as.html", "torch.Tensor.torch.Tensor.vsplit": "generated/torch.tensor.vsplit.html", "torch.Tensor.torch.Tensor.where": "generated/torch.tensor.where.html", "torch.Tensor.torch.Tensor.xlogy": "generated/torch.tensor.xlogy.html", "torch.Tensor.torch.Tensor.xlogy_": "generated/torch.tensor.xlogy_.html", "torch.Tensor.torch.Tensor.zero_": "generated/torch.tensor.zero_.html", "torch.Tensor.trace()": "generated/torch.tensor.trace.html#torch.Tensor.trace", "torch.Tensor.transpose()": "generated/torch.tensor.transpose.html#torch.Tensor.transpose", "torch.Tensor.transpose_()": "generated/torch.tensor.transpose_.html#torch.Tensor.transpose_", "torch.Tensor.triangular_solve()": "generated/torch.tensor.triangular_solve.html#torch.Tensor.triangular_solve", "torch.Tensor.tril()": "generated/torch.tensor.tril.html#torch.Tensor.tril", "torch.Tensor.tril_()": "generated/torch.tensor.tril_.html#torch.Tensor.tril_", "torch.Tensor.triu()": "generated/torch.tensor.triu.html#torch.Tensor.triu", "torch.Tensor.triu_()": "generated/torch.tensor.triu_.html#torch.Tensor.triu_", "torch.Tensor.true_divide()": "generated/torch.tensor.true_divide.html#torch.Tensor.true_divide", "torch.Tensor.true_divide_()": "generated/torch.tensor.true_divide_.html#torch.Tensor.true_divide_", "torch.Tensor.trunc()": "generated/torch.tensor.trunc.html#torch.Tensor.trunc", "torch.Tensor.trunc_()": "generated/torch.tensor.trunc_.html#torch.Tensor.trunc_", "torch.Tensor.type()": "generated/torch.tensor.type.html#torch.Tensor.type", "torch.Tensor.type_as()": "generated/torch.tensor.type_as.html#torch.Tensor.type_as", "torch.Tensor.unbind()": "generated/torch.tensor.unbind.html#torch.Tensor.unbind", "torch.Tensor.unflatten()": "generated/torch.tensor.unflatten.html#torch.Tensor.unflatten", "torch.Tensor.unfold()": "generated/torch.tensor.unfold.html#torch.Tensor.unfold", "torch.Tensor.uniform_()": "generated/torch.tensor.uniform_.html#torch.Tensor.uniform_", "torch.Tensor.unique()": "generated/torch.tensor.unique.html#torch.Tensor.unique", "torch.Tensor.unique_consecutive()": "generated/torch.tensor.unique_consecutive.html#torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze()": "generated/torch.tensor.unsqueeze.html#torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_()": "generated/torch.tensor.unsqueeze_.html#torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage()": "generated/torch.tensor.untyped_storage.html#torch.Tensor.untyped_storage", "torch.Tensor.values()": "generated/torch.tensor.values.html#torch.Tensor.values", "torch.Tensor.var()": "generated/torch.tensor.var.html#torch.Tensor.var", "torch.Tensor.vdot()": "generated/torch.tensor.vdot.html#torch.Tensor.vdot", "torch.Tensor.view()": "generated/torch.tensor.view.html#torch.Tensor.view", "torch.Tensor.view_as()": "generated/torch.tensor.view_as.html#torch.Tensor.view_as", "torch.Tensor.vsplit()": "generated/torch.tensor.vsplit.html#torch.Tensor.vsplit", "torch.Tensor.where()": "generated/torch.tensor.where.html#torch.Tensor.where", "torch.Tensor.xlogy()": "generated/torch.tensor.xlogy.html#torch.Tensor.xlogy", "torch.Tensor.xlogy_()": "generated/torch.tensor.xlogy_.html#torch.Tensor.xlogy_", "torch.Tensor.zero_()": "generated/torch.tensor.zero_.html#torch.Tensor.zero_", "torch.tensor_split": "generated/torch.tensor_split.html", "torch.tensordot": "generated/torch.tensordot.html", "torch.testing": "testing.html", "torch.testing.assert_allclose()": "testing.html#torch.testing.assert_allclose", "torch.testing.assert_close()": "testing.html#torch.testing.assert_close", "torch.testing.make_tensor()": "testing.html#torch.testing.make_tensor", "torch.tile": "generated/torch.tile.html", "torch.topk": "generated/torch.topk.html", "torch.torch.default_generator": "torch.html#torch.torch.default_generator", "torch.torch.finfo": "type_info.html#torch.torch.finfo", "torch.torch.iinfo": "type_info.html#torch.torch.iinfo", "torch.trace": "generated/torch.trace.html", "torch.transpose": "generated/torch.transpose.html", "torch.trapezoid": "generated/torch.trapezoid.html", "torch.trapz": "generated/torch.trapz.html", "torch.triangular_solve": "generated/torch.triangular_solve.html", "torch.tril": "generated/torch.tril.html", "torch.tril_indices": "generated/torch.tril_indices.html", "torch.triu": "generated/torch.triu.html", "torch.triu_indices": "generated/torch.triu_indices.html", "torch.true_divide": "generated/torch.true_divide.html", "torch.trunc": "generated/torch.trunc.html", "torch.TypedStorage": "storage.html#torch.TypedStorage", "torch.TypedStorage.bfloat16()": "storage.html#torch.TypedStorage.bfloat16", "torch.TypedStorage.bool()": "storage.html#torch.TypedStorage.bool", "torch.TypedStorage.byte()": "storage.html#torch.TypedStorage.byte", "torch.TypedStorage.char()": "storage.html#torch.TypedStorage.char", "torch.TypedStorage.clone()": "storage.html#torch.TypedStorage.clone", "torch.TypedStorage.complex_double()": "storage.html#torch.TypedStorage.complex_double", "torch.TypedStorage.complex_float()": "storage.html#torch.TypedStorage.complex_float", "torch.TypedStorage.copy_()": "storage.html#torch.TypedStorage.copy_", "torch.TypedStorage.cpu()": "storage.html#torch.TypedStorage.cpu", "torch.TypedStorage.cuda()": "storage.html#torch.TypedStorage.cuda", "torch.TypedStorage.data_ptr()": "storage.html#torch.TypedStorage.data_ptr", "torch.TypedStorage.device": "storage.html#torch.TypedStorage.device", "torch.TypedStorage.double()": "storage.html#torch.TypedStorage.double", "torch.TypedStorage.dtype": "storage.html#torch.TypedStorage.dtype", "torch.TypedStorage.element_size()": "storage.html#torch.TypedStorage.element_size", "torch.TypedStorage.fill_()": "storage.html#torch.TypedStorage.fill_", "torch.TypedStorage.float()": "storage.html#torch.TypedStorage.float", "torch.TypedStorage.from_buffer()": "storage.html#torch.TypedStorage.from_buffer", "torch.TypedStorage.from_file()": "storage.html#torch.TypedStorage.from_file", "torch.TypedStorage.get_device()": "storage.html#torch.TypedStorage.get_device", "torch.TypedStorage.half()": "storage.html#torch.TypedStorage.half", "torch.TypedStorage.hpu()": "storage.html#torch.TypedStorage.hpu", "torch.TypedStorage.int()": "storage.html#torch.TypedStorage.int", "torch.TypedStorage.is_cuda": "storage.html#torch.TypedStorage.is_cuda", "torch.TypedStorage.is_hpu": "storage.html#torch.TypedStorage.is_hpu", "torch.TypedStorage.is_pinned()": "storage.html#torch.TypedStorage.is_pinned", "torch.TypedStorage.is_shared()": "storage.html#torch.TypedStorage.is_shared", "torch.TypedStorage.is_sparse": "storage.html#torch.TypedStorage.is_sparse", "torch.TypedStorage.long()": "storage.html#torch.TypedStorage.long", "torch.TypedStorage.nbytes()": "storage.html#torch.TypedStorage.nbytes", "torch.TypedStorage.pickle_storage_type()": "storage.html#torch.TypedStorage.pickle_storage_type", "torch.TypedStorage.pin_memory()": "storage.html#torch.TypedStorage.pin_memory", "torch.TypedStorage.resize_()": "storage.html#torch.TypedStorage.resize_", "torch.TypedStorage.share_memory_()": "storage.html#torch.TypedStorage.share_memory_", "torch.TypedStorage.short()": "storage.html#torch.TypedStorage.short", "torch.TypedStorage.size()": "storage.html#torch.TypedStorage.size", "torch.TypedStorage.tolist()": "storage.html#torch.TypedStorage.tolist", "torch.TypedStorage.type()": "storage.html#torch.TypedStorage.type", "torch.TypedStorage.untyped()": "storage.html#torch.TypedStorage.untyped", "torch.unbind": "generated/torch.unbind.html", "torch.unflatten": "generated/torch.unflatten.html", "torch.unique": "generated/torch.unique.html", "torch.unique_consecutive": "generated/torch.unique_consecutive.html", "torch.unsqueeze": "generated/torch.unsqueeze.html", "torch.UntypedStorage": "storage.html#torch.UntypedStorage", "torch.UntypedStorage.bfloat16()": "storage.html#torch.UntypedStorage.bfloat16", "torch.UntypedStorage.bool()": "storage.html#torch.UntypedStorage.bool", "torch.UntypedStorage.byte()": "storage.html#torch.UntypedStorage.byte", "torch.UntypedStorage.byteswap()": "storage.html#torch.UntypedStorage.byteswap", "torch.UntypedStorage.char()": "storage.html#torch.UntypedStorage.char", "torch.UntypedStorage.clone()": "storage.html#torch.UntypedStorage.clone", "torch.UntypedStorage.complex_double()": "storage.html#torch.UntypedStorage.complex_double", "torch.UntypedStorage.complex_float()": "storage.html#torch.UntypedStorage.complex_float", "torch.UntypedStorage.copy_()": "storage.html#torch.UntypedStorage.copy_", "torch.UntypedStorage.cpu()": "storage.html#torch.UntypedStorage.cpu", "torch.UntypedStorage.cuda()": "storage.html#torch.UntypedStorage.cuda", "torch.UntypedStorage.data_ptr()": "storage.html#torch.UntypedStorage.data_ptr", "torch.UntypedStorage.device": "storage.html#torch.UntypedStorage.device", "torch.UntypedStorage.double()": "storage.html#torch.UntypedStorage.double", "torch.UntypedStorage.element_size()": "storage.html#torch.UntypedStorage.element_size", "torch.UntypedStorage.fill_()": "storage.html#torch.UntypedStorage.fill_", "torch.UntypedStorage.float()": "storage.html#torch.UntypedStorage.float", "torch.UntypedStorage.from_buffer()": "storage.html#torch.UntypedStorage.from_buffer", "torch.UntypedStorage.from_file()": "storage.html#torch.UntypedStorage.from_file", "torch.UntypedStorage.get_device()": "storage.html#torch.UntypedStorage.get_device", "torch.UntypedStorage.half()": "storage.html#torch.UntypedStorage.half", "torch.UntypedStorage.hpu()": "storage.html#torch.UntypedStorage.hpu", "torch.UntypedStorage.int()": "storage.html#torch.UntypedStorage.int", "torch.UntypedStorage.is_cuda": "storage.html#torch.UntypedStorage.is_cuda", "torch.UntypedStorage.is_hpu": "storage.html#torch.UntypedStorage.is_hpu", "torch.UntypedStorage.is_pinned()": "storage.html#torch.UntypedStorage.is_pinned", "torch.UntypedStorage.is_shared()": "storage.html#torch.UntypedStorage.is_shared", "torch.UntypedStorage.is_sparse": "storage.html#torch.UntypedStorage.is_sparse", "torch.UntypedStorage.is_sparse_csr": "storage.html#torch.UntypedStorage.is_sparse_csr", "torch.UntypedStorage.long()": "storage.html#torch.UntypedStorage.long", "torch.UntypedStorage.mps()": "storage.html#torch.UntypedStorage.mps", "torch.UntypedStorage.nbytes()": "storage.html#torch.UntypedStorage.nbytes", "torch.UntypedStorage.new()": "storage.html#torch.UntypedStorage.new", "torch.UntypedStorage.pin_memory()": "storage.html#torch.UntypedStorage.pin_memory", "torch.UntypedStorage.resize_()": "storage.html#torch.UntypedStorage.resize_", "torch.UntypedStorage.share_memory_()": "storage.html#torch.UntypedStorage.share_memory_", "torch.UntypedStorage.short()": "storage.html#torch.UntypedStorage.short", "torch.UntypedStorage.size()": "storage.html#torch.UntypedStorage.size", "torch.UntypedStorage.tolist()": "storage.html#torch.UntypedStorage.tolist", "torch.UntypedStorage.type()": "storage.html#torch.UntypedStorage.type", "torch.UntypedStorage.untyped()": "storage.html#torch.UntypedStorage.untyped", "torch.use_deterministic_algorithms": "generated/torch.use_deterministic_algorithms.html", "torch.utils": "utils.html", "torch.utils.benchmark.CallgrindStats": "benchmark_utils.html#torch.utils.benchmark.CallgrindStats", "torch.utils.benchmark.CallgrindStats.as_standardized()": "benchmark_utils.html#torch.utils.benchmark.CallgrindStats.as_standardized", "torch.utils.benchmark.CallgrindStats.counts()": "benchmark_utils.html#torch.utils.benchmark.CallgrindStats.counts", "torch.utils.benchmark.CallgrindStats.delta()": "benchmark_utils.html#torch.utils.benchmark.CallgrindStats.delta", "torch.utils.benchmark.CallgrindStats.stats()": "benchmark_utils.html#torch.utils.benchmark.CallgrindStats.stats", "torch.utils.benchmark.FunctionCounts": "benchmark_utils.html#torch.utils.benchmark.FunctionCounts", "torch.utils.benchmark.FunctionCounts.denoise()": "benchmark_utils.html#torch.utils.benchmark.FunctionCounts.denoise", "torch.utils.benchmark.FunctionCounts.filter()": "benchmark_utils.html#torch.utils.benchmark.FunctionCounts.filter", "torch.utils.benchmark.FunctionCounts.transform()": "benchmark_utils.html#torch.utils.benchmark.FunctionCounts.transform", "torch.utils.benchmark.Measurement": "benchmark_utils.html#torch.utils.benchmark.Measurement", "torch.utils.benchmark.Measurement.merge()": "benchmark_utils.html#torch.utils.benchmark.Measurement.merge", "torch.utils.benchmark.Measurement.significant_figures": "benchmark_utils.html#torch.utils.benchmark.Measurement.significant_figures", "torch.utils.benchmark.Timer": "benchmark_utils.html#torch.utils.benchmark.Timer", "torch.utils.benchmark.Timer.blocked_autorange()": "benchmark_utils.html#torch.utils.benchmark.Timer.blocked_autorange", "torch.utils.benchmark.Timer.collect_callgrind()": "benchmark_utils.html#torch.utils.benchmark.Timer.collect_callgrind", "torch.utils.benchmark.Timer.timeit()": "benchmark_utils.html#torch.utils.benchmark.Timer.timeit", "torch.utils.bottleneck": "bottleneck.html", "torch.utils.checkpoint": "checkpoint.html", "torch.utils.checkpoint.checkpoint()": "checkpoint.html#torch.utils.checkpoint.checkpoint", "torch.utils.checkpoint.checkpoint_sequential()": "checkpoint.html#torch.utils.checkpoint.checkpoint_sequential", "torch.utils.cpp_extension": "cpp_extension.html", "torch.utils.cpp_extension.BuildExtension()": "cpp_extension.html#torch.utils.cpp_extension.BuildExtension", "torch.utils.cpp_extension.CppExtension()": "cpp_extension.html#torch.utils.cpp_extension.CppExtension", "torch.utils.cpp_extension.CUDAExtension()": "cpp_extension.html#torch.utils.cpp_extension.CUDAExtension", "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version()": "cpp_extension.html#torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version", "torch.utils.cpp_extension.include_paths()": "cpp_extension.html#torch.utils.cpp_extension.include_paths", "torch.utils.cpp_extension.is_ninja_available()": "cpp_extension.html#torch.utils.cpp_extension.is_ninja_available", "torch.utils.cpp_extension.load()": "cpp_extension.html#torch.utils.cpp_extension.load", "torch.utils.cpp_extension.load_inline()": "cpp_extension.html#torch.utils.cpp_extension.load_inline", "torch.utils.cpp_extension.verify_ninja_availability()": "cpp_extension.html#torch.utils.cpp_extension.verify_ninja_availability", "torch.utils.data": "data.html", "torch.utils.data._utils.collate.collate()": "data.html#torch.utils.data._utils.collate.collate", "torch.utils.data.BatchSampler": "data.html#torch.utils.data.BatchSampler", "torch.utils.data.ChainDataset": "data.html#torch.utils.data.ChainDataset", "torch.utils.data.ConcatDataset": "data.html#torch.utils.data.ConcatDataset", "torch.utils.data.DataLoader": "data.html#torch.utils.data.DataLoader", "torch.utils.data.Dataset": "data.html#torch.utils.data.Dataset", "torch.utils.data.default_collate()": "data.html#torch.utils.data.default_collate", "torch.utils.data.default_convert()": "data.html#torch.utils.data.default_convert", "torch.utils.data.distributed.DistributedSampler": "data.html#torch.utils.data.distributed.DistributedSampler", "torch.utils.data.get_worker_info()": "data.html#torch.utils.data.get_worker_info", "torch.utils.data.IterableDataset": "data.html#torch.utils.data.IterableDataset", "torch.utils.data.random_split()": "data.html#torch.utils.data.random_split", "torch.utils.data.RandomSampler": "data.html#torch.utils.data.RandomSampler", "torch.utils.data.Sampler": "data.html#torch.utils.data.Sampler", "torch.utils.data.SequentialSampler": "data.html#torch.utils.data.SequentialSampler", "torch.utils.data.StackDataset": "data.html#torch.utils.data.StackDataset", "torch.utils.data.Subset": "data.html#torch.utils.data.Subset", "torch.utils.data.SubsetRandomSampler": "data.html#torch.utils.data.SubsetRandomSampler", "torch.utils.data.TensorDataset": "data.html#torch.utils.data.TensorDataset", "torch.utils.data.WeightedRandomSampler": "data.html#torch.utils.data.WeightedRandomSampler", "torch.utils.dlpack": "dlpack.html", "torch.utils.dlpack.from_dlpack()": "dlpack.html#torch.utils.dlpack.from_dlpack", "torch.utils.dlpack.to_dlpack()": "dlpack.html#torch.utils.dlpack.to_dlpack", "torch.utils.generate_methods_for_privateuse1_backend()": "generated/torch.utils.generate_methods_for_privateuse1_backend.html#torch.utils.generate_methods_for_privateuse1_backend", "torch.utils.get_cpp_backtrace()": "generated/torch.utils.get_cpp_backtrace.html#torch.utils.get_cpp_backtrace", "torch.utils.mobile_optimizer": "mobile_optimizer.html", "torch.utils.mobile_optimizer.optimize_for_mobile()": "mobile_optimizer.html#torch.utils.mobile_optimizer.optimize_for_mobile", "torch.utils.model_zoo": "model_zoo.html", "torch.utils.model_zoo.load_url()": "model_zoo.html#torch.utils.model_zoo.load_url", "torch.utils.rename_privateuse1_backend()": "generated/torch.utils.rename_privateuse1_backend.html#torch.utils.rename_privateuse1_backend", "torch.utils.set_module()": "generated/torch.utils.set_module.html#torch.utils.set_module", "torch.utils.tensorboard": "tensorboard.html", "torch.utils.tensorboard.writer.SummaryWriter": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter", "torch.utils.tensorboard.writer.SummaryWriter.__init__()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.__init__", "torch.utils.tensorboard.writer.SummaryWriter.add_audio()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.add_audio", "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars", "torch.utils.tensorboard.writer.SummaryWriter.add_embedding()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.add_embedding", "torch.utils.tensorboard.writer.SummaryWriter.add_figure()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.add_figure", "torch.utils.tensorboard.writer.SummaryWriter.add_graph()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.add_graph", "torch.utils.tensorboard.writer.SummaryWriter.add_histogram()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.add_histogram", "torch.utils.tensorboard.writer.SummaryWriter.add_hparams()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.add_hparams", "torch.utils.tensorboard.writer.SummaryWriter.add_image()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.add_image", "torch.utils.tensorboard.writer.SummaryWriter.add_images()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.add_images", "torch.utils.tensorboard.writer.SummaryWriter.add_mesh()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.add_mesh", "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve", "torch.utils.tensorboard.writer.SummaryWriter.add_scalar()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.add_scalar", "torch.utils.tensorboard.writer.SummaryWriter.add_scalars()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.add_scalars", "torch.utils.tensorboard.writer.SummaryWriter.add_text()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.add_text", "torch.utils.tensorboard.writer.SummaryWriter.add_video()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.add_video", "torch.utils.tensorboard.writer.SummaryWriter.close()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.close", "torch.utils.tensorboard.writer.SummaryWriter.flush()": "tensorboard.html#torch.utils.tensorboard.writer.SummaryWriter.flush", "torch.utils.torch.utils.generate_methods_for_privateuse1_backend": "generated/torch.utils.generate_methods_for_privateuse1_backend.html", "torch.utils.torch.utils.get_cpp_backtrace": "generated/torch.utils.get_cpp_backtrace.html", "torch.utils.torch.utils.rename_privateuse1_backend": "generated/torch.utils.rename_privateuse1_backend.html", "torch.utils.torch.utils.set_module": "generated/torch.utils.set_module.html", "torch.vander": "generated/torch.vander.html", "torch.var": "generated/torch.var.html", "torch.var_mean": "generated/torch.var_mean.html", "torch.vdot": "generated/torch.vdot.html", "torch.view_as_complex": "generated/torch.view_as_complex.html", "torch.view_as_real": "generated/torch.view_as_real.html", "torch.vmap": "generated/torch.vmap.html", "torch.vsplit": "generated/torch.vsplit.html", "torch.vstack": "generated/torch.vstack.html", "torch.where": "generated/torch.where.html", "torch.xlogy": "generated/torch.xlogy.html", "torch.zeros": "generated/torch.zeros.html", "torch.zeros_like": "generated/torch.zeros_like.html"}