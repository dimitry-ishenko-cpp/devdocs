{"$__loc__": "index.html#$__loc__", "$ENV, env": "index.html#$env-env", "$JQ_BUILD_CONFIGURATION": "index.html#$jq_build_configuration", ".[]?": "index.html#.[]?", "==, !=": "index.html#==-!=", ">, >=, <=, <": "index.html#>->=-<=-<", "abs": "index.html#abs", "add": "index.html#add", "Addition: +": "index.html#addition", "all, all(condition), all(generator; condition)": "index.html#all", "Alternative operator: //": "index.html#alternative-operator", "and, or, not": "index.html#and-or-not", "any, any(condition), any(generator; condition)": "index.html#any", "Arithmetic update-assignment: +=, -=, *=, /=, %=, //=": "index.html#arithmetic-update-assignment", "Array construction: []": "index.html#array-construction", "Array Index: .[<number>]": "index.html#array-index", "Array/Object Value Iterator: .[]": "index.html#array-object-value-iterator", "Array/String Slice: .[<number>:<number>]": "index.html#array-string-slice", "arrays, objects, iterables, booleans, numbers, normals, finites, strings, nulls, values, scalars": "index.html#arrays-objects-iterables-booleans-numbers-normals-finites-strings-nulls-values-scalars", "ascii_downcase, ascii_upcase": "index.html#ascii_downcase-ascii_upcase", "Breaking out of control structures": "index.html#breaking-out-of-control-structures", "bsearch(x)": "index.html#bsearch", "builtins": "index.html#builtins", "capture(val), capture(regex; flags)": "index.html#capture", "combinations, combinations(n)": "index.html#combinations", "Comma: ,": "index.html#comma", "Complex assignments": "index.html#complex-assignments", "contains(element)": "index.html#contains", "Convert to/from JSON": "index.html#convert-to-from-json", "Dates": "index.html#dates", "debug, debug(msgs)": "index.html#debug", "Defining Functions": "index.html#defining-functions", "del(path_expression)": "index.html#del", "delpaths(PATHS)": "index.html#delpaths", "Destructuring Alternative Operator: ?//": "index.html#destructuring-alternative-operator", "empty": "index.html#empty", "endswith(str)": "index.html#endswith", "Error Suppression / Optional Operator: ?": "index.html#error-suppression-optional-operator", "error, error(message)": "index.html#error", "explode": "index.html#explode", "first(expr), last(expr), nth(n; expr)": "index.html#first-last-nth-2", "first, last, nth(n)": "index.html#first-last-nth-1", "flatten, flatten(depth)": "index.html#flatten", "floor": "index.html#floor", "foreach": "index.html#foreach", "Format strings and escaping": "index.html#format-strings-and-escaping", "fromstream(stream_expression)": "index.html#fromstream", "Generators and iterators": "index.html#generators-and-iterators", "getpath(PATHS)": "index.html#getpath", "group_by(path_expression)": "index.html#group_by", "gsub(regex; tostring), gsub(regex; tostring; flags)": "index.html#gsub", "halt": "index.html#halt", "halt_error, halt_error(exit_code)": "index.html#halt_error", "has(key)": "index.html#has", "Identity: .": "index.html#identity", "if-then-else-end": "index.html#if-then-else-end", "implode": "index.html#implode", "import RelativePathString as $NAME [<metadata>];": "index.html#import-relativepathstring-as-$name", "import RelativePathString as NAME [<metadata>];": "index.html#import-relativepathstring-as-name", "in": "index.html#in", "include RelativePathString [<metadata>];": "index.html#include-relativepathstring", "index(s), rindex(s)": "index.html#index-rindex", "indices(s)": "index.html#indices", "infinite, nan, isinfinite, isnan, isfinite, isnormal": "index.html#infinite-nan-isinfinite-isnan-isfinite-isnormal", "input": "index.html#input", "input_filename": "index.html#input_filename", "input_line_number": "index.html#input_line_number", "inputs": "index.html#inputs", "inside": "index.html#inside", "isempty(exp)": "index.html#isempty", "join(str)": "index.html#join", "keys, keys_unsorted": "index.html#keys-keys_unsorted", "length": "index.html#length", "limit(n; exp)": "index.html#limit", "ltrimstr(str)": "index.html#ltrimstr", "map(f), map_values(f)": "index.html#map-map_values", "match(val), match(regex; flags)": "index.html#match", "min, max, min_by(path_exp), max_by(path_exp)": "index.html#min-max-min_by-max_by", "module <metadata>;": "index.html#module-<metadata>", "modulemeta": "index.html#modulemeta", "Multiplication, division, modulo: *, /, %": "index.html#multiplication-division-modulo", "Object Construction: {}": "index.html#object-construction", "Object Identifier-Index: .foo, .foo.bar": "index.html#object-identifier-index", "Object Index: .[<string>]": "index.html#object-index", "Optional Object Identifier-Index: .foo?": "index.html#optional-object-identifier-index", "Parenthesis": "index.html#parenthesis", "path(path_expression)": "index.html#path", "paths, paths(node_filter)": "index.html#paths", "pick(pathexps)": "index.html#pick", "Pipe: |": "index.html#pipe", "Plain assignment: =": "index.html#plain-assignment", "range(upto), range(from; upto), range(from; upto; by)": "index.html#range", "recurse(f), recurse, recurse(f; condition)": "index.html#recurse", "Recursion": "index.html#recursion", "Recursive Descent: ..": "index.html#recursive-descent", "reduce": "index.html#reduce", "repeat(exp)": "index.html#repeat", "reverse": "index.html#reverse", "rtrimstr(str)": "index.html#rtrimstr", "scan(regex), scan(regex; flags)": "index.html#scan", "Scoping": "index.html#scoping", "select(boolean_expression)": "index.html#select", "setpath(PATHS; VALUE)": "index.html#setpath", "sort, sort_by(path_expression)": "index.html#sort-sort_by", "split(regex; flags)": "index.html#split-2", "split(str)": "index.html#split-1", "splits(regex), splits(regex; flags)": "index.html#splits", "SQL-Style Operators": "index.html#sql-style-operators", "sqrt": "index.html#sqrt", "startswith(str)": "index.html#startswith", "stderr": "index.html#stderr", "String interpolation: \\(exp)": "index.html#string-interpolation", "sub(regex; tostring), sub(regex; tostring; flags)": "index.html#sub", "Subtraction: -": "index.html#subtraction", "test(val), test(regex; flags)": "index.html#test", "to_entries, from_entries, with_entries(f)": "index.html#to_entries-from_entries-with_entries", "tonumber": "index.html#tonumber", "tostream": "index.html#tostream", "tostring": "index.html#tostring", "transpose": "index.html#transpose", "truncate_stream(stream_expression)": "index.html#truncate_stream", "try-catch": "index.html#try-catch", "type": "index.html#type", "unique, unique_by(path_exp)": "index.html#unique-unique_by", "until(cond; next)": "index.html#until", "Update-assignment: |=": "index.html#update-assignment", "utf8bytelength": "index.html#utf8bytelength", "Variable / Symbolic Binding Operator: ... as $identifier | ...": "index.html#variable-symbolic-binding-operator", "walk(f)": "index.html#walk", "while(cond; update)": "index.html#while"}