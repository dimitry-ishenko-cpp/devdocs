{"@action, {{on}} and {{fn}}": "upgrading/current-edition/action-on-and-fn.html", "@ember-data/adapter": "modules/@ember-data/adapter.html", "@ember-data/adapter/error": "modules/@ember-data/adapter/error.html", "@ember-data/adapter/json-api": "modules/@ember-data/adapter/json-api.html", "@ember-data/adapter/rest": "modules/@ember-data/adapter/rest.html", "@ember-data/canary-features": "modules/@ember-data/canary-features.html", "@ember-data/debug": "modules/@ember-data/debug.html", "@ember-data/deprecations": "modules/@ember-data/deprecations.html", "@ember-data/model": "modules/@ember-data/model.html", "@ember-data/record-data": "modules/@ember-data/record-data.html", "@ember-data/request": "modules/@ember-data/request.html", "@ember-data/request/fetch": "modules/@ember-data/request/fetch.html", "@ember-data/serializer": "modules/@ember-data/serializer.html", "@ember-data/serializer/json": "modules/@ember-data/serializer/json.html", "@ember-data/serializer/json-api": "modules/@ember-data/serializer/json-api.html", "@ember-data/serializer/rest": "modules/@ember-data/serializer/rest.html", "@ember-data/store": "modules/@ember-data/store.html", "@ember-data/tracking": "modules/@ember-data/tracking.html", "@ember/application": "modules/@ember/application.html", "@ember/application/namespace": "modules/@ember/application/namespace.html", "@ember/array": "modules/@ember/array.html", "@ember/array/proxy": "modules/@ember/array/proxy.html", "@ember/canary-features": "modules/@ember/canary-features.html", "@ember/component": "modules/@ember/component.html", "@ember/component/template-only": "modules/@ember/component/template-only.html", "@ember/debug": "modules/@ember/debug.html", "@ember/debug/container-debug-adapter": "modules/@ember/debug/container-debug-adapter.html", "@ember/debug/data-adapter": "modules/@ember/debug/data-adapter.html", "@ember/destroyable": "modules/@ember/destroyable.html", "@ember/engine": "modules/@ember/engine.html", "@ember/enumerable": "modules/@ember/enumerable.html", "@ember/error": "modules/@ember/error.html", "@ember/helper": "modules/@ember/helper.html", "@ember/object": "modules/@ember/object.html", "@ember/object/computed": "classes/@ember/object/computed.html", "@ember/object/computed (methods)": "classes/@ember/object/computed/methods.html", "@ember/object/computed.alias()": "classes/@ember/object/computed/methods.html#alias", "@ember/object/computed.and()": "classes/@ember/object/computed/methods.html#and", "@ember/object/computed.bool()": "classes/@ember/object/computed/methods.html#bool", "@ember/object/computed.collect()": "classes/@ember/object/computed/methods.html#collect", "@ember/object/computed.deprecatingAlias()": "classes/@ember/object/computed/methods.html#deprecatingAlias", "@ember/object/computed.empty()": "classes/@ember/object/computed/methods.html#empty", "@ember/object/computed.equal()": "classes/@ember/object/computed/methods.html#equal", "@ember/object/computed.expandProperties()": "classes/@ember/object/computed/methods.html#expandProperties", "@ember/object/computed.filter()": "classes/@ember/object/computed/methods.html#filter", "@ember/object/computed.filterBy()": "classes/@ember/object/computed/methods.html#filterBy", "@ember/object/computed.gt()": "classes/@ember/object/computed/methods.html#gt", "@ember/object/computed.gte()": "classes/@ember/object/computed/methods.html#gte", "@ember/object/computed.intersect()": "classes/@ember/object/computed/methods.html#intersect", "@ember/object/computed.lt()": "classes/@ember/object/computed/methods.html#lt", "@ember/object/computed.lte()": "classes/@ember/object/computed/methods.html#lte", "@ember/object/computed.map()": "classes/@ember/object/computed/methods.html#map", "@ember/object/computed.mapBy()": "classes/@ember/object/computed/methods.html#mapBy", "@ember/object/computed.match()": "classes/@ember/object/computed/methods.html#match", "@ember/object/computed.max()": "classes/@ember/object/computed/methods.html#max", "@ember/object/computed.min()": "classes/@ember/object/computed/methods.html#min", "@ember/object/computed.none()": "classes/@ember/object/computed/methods.html#none", "@ember/object/computed.not()": "classes/@ember/object/computed/methods.html#not", "@ember/object/computed.notEmpty()": "classes/@ember/object/computed/methods.html#notEmpty", "@ember/object/computed.oneWay()": "classes/@ember/object/computed/methods.html#oneWay", "@ember/object/computed.or()": "classes/@ember/object/computed/methods.html#or", "@ember/object/computed.readOnly()": "classes/@ember/object/computed/methods.html#readOnly", "@ember/object/computed.reads()": "classes/@ember/object/computed/methods.html#reads", "@ember/object/computed.setDiff()": "classes/@ember/object/computed/methods.html#setDiff", "@ember/object/computed.sort()": "classes/@ember/object/computed/methods.html#sort", "@ember/object/computed.sum()": "classes/@ember/object/computed/methods.html#sum", "@ember/object/computed.union()": "classes/@ember/object/computed/methods.html#union", "@ember/object/computed.uniq()": "classes/@ember/object/computed/methods.html#uniq", "@ember/object/computed.uniqBy()": "classes/@ember/object/computed/methods.html#uniqBy", "@ember/object/core": "modules/@ember/object/core.html", "@ember/object/evented": "modules/@ember/object/evented.html", "@ember/object/mixin": "modules/@ember/object/mixin.html", "@ember/object/observable": "modules/@ember/object/observable.html", "@ember/object/promise-proxy-mixin": "modules/@ember/object/promise-proxy-mixin.html", "@ember/object/proxy": "modules/@ember/object/proxy.html", "@ember/polyfills": "modules/@ember/polyfills.html", "@ember/renderer": "modules/@ember/renderer.html", "@ember/routing": "modules/@ember/routing.html", "@ember/routing/auto-location": "modules/@ember/routing/auto-location.html", "@ember/routing/hash-location": "modules/@ember/routing/hash-location.html", "@ember/routing/history-location": "modules/@ember/routing/history-location.html", "@ember/routing/location": "modules/@ember/routing/location.html", "@ember/routing/none-location": "modules/@ember/routing/none-location.html", "@ember/routing/route": "modules/@ember/routing/route.html", "@ember/routing/router": "modules/@ember/routing/router.html", "@ember/routing/router-service": "modules/@ember/routing/router-service.html", "@ember/runloop": "modules/@ember/runloop.html", "@ember/service": "modules/@ember/service.html", "@ember/string": "modules/@ember/string.html", "@ember/template": "modules/@ember/template.html", "@ember/test": "modules/@ember/test.html", "@ember/utils": "modules/@ember/utils.html", "@glimmer/component": "modules/@glimmer/component.html", "@glimmer/tracking": "modules/@glimmer/tracking.html", "@glimmer/tracking/primitives/cache": "modules/@glimmer/tracking/primitives/cache.html", "A()": "functions/@ember/array/a.html#A", "AbortError": "classes/aborterror.html", "action()": "functions/@ember/object/action.html#action", "Adapter": "classes/adapter.html", "Adapter (methods)": "classes/adapter/methods.html", "Adapter (properties)": "classes/adapter/properties.html", "Adapter.coalesceFindRequests": "classes/adapter/properties.html#coalesceFindRequests", "Adapter.createRecord()": "classes/adapter/methods.html#createRecord", "Adapter.deleteRecord()": "classes/adapter/methods.html#deleteRecord", "Adapter.findAll()": "classes/adapter/methods.html#findAll", "Adapter.findMany()": "classes/adapter/methods.html#findMany", "Adapter.findRecord()": "classes/adapter/methods.html#findRecord", "Adapter.generateIdForRecord()": "classes/adapter/methods.html#generateIdForRecord", "Adapter.groupRecordsForFindMany()": "classes/adapter/methods.html#groupRecordsForFindMany", "Adapter.query()": "classes/adapter/methods.html#query", "Adapter.queryRecord()": "classes/adapter/methods.html#queryRecord", "Adapter.serialize()": "classes/adapter/methods.html#serialize", "Adapter.shouldBackgroundReloadAll()": "classes/adapter/methods.html#shouldBackgroundReloadAll", "Adapter.shouldBackgroundReloadRecord()": "classes/adapter/methods.html#shouldBackgroundReloadRecord", "Adapter.shouldReloadAll()": "classes/adapter/methods.html#shouldReloadAll", "Adapter.shouldReloadRecord()": "classes/adapter/methods.html#shouldReloadRecord", "Adapter.updateRecord()": "classes/adapter/methods.html#updateRecord", "AdapterError": "classes/adaptererror.html", "addListener()": "functions/@ember/object/events/addlistener.html#addListener", "addObserver()": "functions/@ember/object/observers/addobserver.html#addObserver", "alias()": "functions/@ember/object/computed/alias.html#alias", "all()": "functions/rsvp/all.html#all", "allSettled()": "functions/rsvp/allsettled.html#allSettled", "Anatomy of an Ember App": "getting-started/anatomy-of-an-ember-app.html", "and()": "functions/@ember/object/computed/and.html#and", "Application": "classes/application.html", "Application (events)": "classes/application/events.html", "Application (methods)": "classes/application/methods.html", "Application (properties)": "classes/application/properties.html", "Application Considerations": "accessibility/application-considerations.html", "Application.advanceReadiness()": "classes/application/methods.html#advanceReadiness", "Application.boot()": "classes/application/methods.html#boot", "Application.buildInstance()": "classes/application/methods.html#buildInstance", "Application.customEvents": "classes/application/properties.html#customEvents", "Application.deferReadiness()": "classes/application/methods.html#deferReadiness", "Application.eventDispatcher": "classes/application/properties.html#eventDispatcher", "Application.hasRegistration()": "classes/application/methods.html#hasRegistration", "Application.initializer()": "classes/application/methods.html#initializer", "Application.instanceInitializer()": "classes/application/methods.html#instanceInitializer", "Application.ready (event)": "classes/application/events.html#ready", "Application.register()": "classes/application/methods.html#register", "Application.registeredOption()": "classes/application/methods.html#registeredOption", "Application.registeredOptions()": "classes/application/methods.html#registeredOptions", "Application.registeredOptionsForType()": "classes/application/methods.html#registeredOptionsForType", "Application.registerOptions()": "classes/application/methods.html#registerOptions", "Application.registerOptionsForType()": "classes/application/methods.html#registerOptionsForType", "Application.reset()": "classes/application/methods.html#reset", "Application.resolver": "classes/application/properties.html#resolver", "Application.resolveRegistration()": "classes/application/methods.html#resolveRegistration", "Application.rootElement": "classes/application/properties.html#rootElement", "Application.unregister()": "classes/application/methods.html#unregister", "Application.visit()": "classes/application/methods.html#visit", "ApplicationInstance": "classes/applicationinstance.html", "ApplicationInstance (methods)": "classes/applicationinstance/methods.html", "ApplicationInstance (properties)": "classes/applicationinstance/properties.html", "ApplicationInstance.addObserver()": "classes/applicationinstance/methods.html#addObserver", "ApplicationInstance.boot()": "classes/applicationinstance/methods.html#boot", "ApplicationInstance.BootOptions": "classes/applicationinstance.bootoptions.html", "ApplicationInstance.BootOptions (properties)": "classes/applicationinstance.bootoptions/properties.html", "ApplicationInstance.BootOptions.document": "classes/applicationinstance.bootoptions/properties.html#document", "ApplicationInstance.BootOptions.isBrowser": "classes/applicationinstance.bootoptions/properties.html#isBrowser", "ApplicationInstance.BootOptions.location": "classes/applicationinstance.bootoptions/properties.html#location", "ApplicationInstance.BootOptions.rootElement": "classes/applicationinstance.bootoptions/properties.html#rootElement", "ApplicationInstance.BootOptions.shouldRender": "classes/applicationinstance.bootoptions/properties.html#shouldRender", "ApplicationInstance.cacheFor()": "classes/applicationinstance/methods.html#cacheFor", "ApplicationInstance.concatenatedProperties": "classes/applicationinstance/properties.html#concatenatedProperties", "ApplicationInstance.decrementProperty()": "classes/applicationinstance/methods.html#decrementProperty", "ApplicationInstance.destroy()": "classes/applicationinstance/methods.html#destroy", "ApplicationInstance.factoryFor()": "classes/applicationinstance/methods.html#factoryFor", "ApplicationInstance.get()": "classes/applicationinstance/methods.html#get", "ApplicationInstance.getProperties()": "classes/applicationinstance/methods.html#getProperties", "ApplicationInstance.hasRegistration()": "classes/applicationinstance/methods.html#hasRegistration", "ApplicationInstance.incrementProperty()": "classes/applicationinstance/methods.html#incrementProperty", "ApplicationInstance.init()": "classes/applicationinstance/methods.html#init", "ApplicationInstance.isDestroyed": "classes/applicationinstance/properties.html#isDestroyed", "ApplicationInstance.isDestroying": "classes/applicationinstance/properties.html#isDestroying", "ApplicationInstance.lookup()": "classes/applicationinstance/methods.html#lookup", "ApplicationInstance.mergedProperties": "classes/applicationinstance/properties.html#mergedProperties", "ApplicationInstance.notifyPropertyChange()": "classes/applicationinstance/methods.html#notifyPropertyChange", "ApplicationInstance.ownerInjection()": "classes/applicationinstance/methods.html#ownerInjection", "ApplicationInstance.register()": "classes/applicationinstance/methods.html#register", "ApplicationInstance.registeredOption()": "classes/applicationinstance/methods.html#registeredOption", "ApplicationInstance.registeredOptions()": "classes/applicationinstance/methods.html#registeredOptions", "ApplicationInstance.registeredOptionsForType()": "classes/applicationinstance/methods.html#registeredOptionsForType", "ApplicationInstance.registerOptions()": "classes/applicationinstance/methods.html#registerOptions", "ApplicationInstance.registerOptionsForType()": "classes/applicationinstance/methods.html#registerOptionsForType", "ApplicationInstance.removeObserver()": "classes/applicationinstance/methods.html#removeObserver", "ApplicationInstance.resolveRegistration()": "classes/applicationinstance/methods.html#resolveRegistration", "ApplicationInstance.set()": "classes/applicationinstance/methods.html#set", "ApplicationInstance.setProperties()": "classes/applicationinstance/methods.html#setProperties", "ApplicationInstance.toggleProperty()": "classes/applicationinstance/methods.html#toggleProperty", "ApplicationInstance.toString()": "classes/applicationinstance/methods.html#toString", "ApplicationInstance.unregister()": "classes/applicationinstance/methods.html#unregister", "ApplicationInstance.willDestroy()": "classes/applicationinstance/methods.html#willDestroy", "Applications and Instances": "applications/index.html", "ArrayProxy": "classes/arrayproxy.html", "ArrayProxy (methods)": "classes/arrayproxy/methods.html", "ArrayProxy (properties)": "classes/arrayproxy/properties.html", "ArrayProxy.[]": "classes/arrayproxy/properties.html#[]", "ArrayProxy.addObject()": "classes/arrayproxy/methods.html#addObject", "ArrayProxy.addObjects()": "classes/arrayproxy/methods.html#addObjects", "ArrayProxy.addObserver()": "classes/arrayproxy/methods.html#addObserver", "ArrayProxy.any()": "classes/arrayproxy/methods.html#any", "ArrayProxy.arrangedContent": "classes/arrayproxy/properties.html#arrangedContent", "ArrayProxy.cacheFor()": "classes/arrayproxy/methods.html#cacheFor", "ArrayProxy.clear()": "classes/arrayproxy/methods.html#clear", "ArrayProxy.compact()": "classes/arrayproxy/methods.html#compact", "ArrayProxy.concatenatedProperties": "classes/arrayproxy/properties.html#concatenatedProperties", "ArrayProxy.content": "classes/arrayproxy/properties.html#content", "ArrayProxy.decrementProperty()": "classes/arrayproxy/methods.html#decrementProperty", "ArrayProxy.destroy()": "classes/arrayproxy/methods.html#destroy", "ArrayProxy.every()": "classes/arrayproxy/methods.html#every", "ArrayProxy.filter()": "classes/arrayproxy/methods.html#filter", "ArrayProxy.filterBy()": "classes/arrayproxy/methods.html#filterBy", "ArrayProxy.find()": "classes/arrayproxy/methods.html#find", "ArrayProxy.findBy()": "classes/arrayproxy/methods.html#findBy", "ArrayProxy.firstObject": "classes/arrayproxy/properties.html#firstObject", "ArrayProxy.forEach()": "classes/arrayproxy/methods.html#forEach", "ArrayProxy.get()": "classes/arrayproxy/methods.html#get", "ArrayProxy.getEach()": "classes/arrayproxy/methods.html#getEach", "ArrayProxy.getProperties()": "classes/arrayproxy/methods.html#getProperties", "ArrayProxy.includes()": "classes/arrayproxy/methods.html#includes", "ArrayProxy.incrementProperty()": "classes/arrayproxy/methods.html#incrementProperty", "ArrayProxy.indexOf()": "classes/arrayproxy/methods.html#indexOf", "ArrayProxy.init()": "classes/arrayproxy/methods.html#init", "ArrayProxy.insertAt()": "classes/arrayproxy/methods.html#insertAt", "ArrayProxy.invoke()": "classes/arrayproxy/methods.html#invoke", "ArrayProxy.isAny()": "classes/arrayproxy/methods.html#isAny", "ArrayProxy.isDestroyed": "classes/arrayproxy/properties.html#isDestroyed", "ArrayProxy.isDestroying": "classes/arrayproxy/properties.html#isDestroying", "ArrayProxy.isEvery()": "classes/arrayproxy/methods.html#isEvery", "ArrayProxy.lastIndexOf()": "classes/arrayproxy/methods.html#lastIndexOf", "ArrayProxy.lastObject": "classes/arrayproxy/properties.html#lastObject", "ArrayProxy.length": "classes/arrayproxy/properties.html#length", "ArrayProxy.map()": "classes/arrayproxy/methods.html#map", "ArrayProxy.mapBy()": "classes/arrayproxy/methods.html#mapBy", "ArrayProxy.mergedProperties": "classes/arrayproxy/properties.html#mergedProperties", "ArrayProxy.notifyPropertyChange()": "classes/arrayproxy/methods.html#notifyPropertyChange", "ArrayProxy.objectAt()": "classes/arrayproxy/methods.html#objectAt", "ArrayProxy.objectAtContent()": "classes/arrayproxy/methods.html#objectAtContent", "ArrayProxy.objectsAt()": "classes/arrayproxy/methods.html#objectsAt", "ArrayProxy.popObject()": "classes/arrayproxy/methods.html#popObject", "ArrayProxy.pushObject()": "classes/arrayproxy/methods.html#pushObject", "ArrayProxy.pushObjects()": "classes/arrayproxy/methods.html#pushObjects", "ArrayProxy.reduce()": "classes/arrayproxy/methods.html#reduce", "ArrayProxy.reject()": "classes/arrayproxy/methods.html#reject", "ArrayProxy.rejectBy()": "classes/arrayproxy/methods.html#rejectBy", "ArrayProxy.removeAt()": "classes/arrayproxy/methods.html#removeAt", "ArrayProxy.removeObject()": "classes/arrayproxy/methods.html#removeObject", "ArrayProxy.removeObjects()": "classes/arrayproxy/methods.html#removeObjects", "ArrayProxy.removeObserver()": "classes/arrayproxy/methods.html#removeObserver", "ArrayProxy.replace()": "classes/arrayproxy/methods.html#replace", "ArrayProxy.replaceContent()": "classes/arrayproxy/methods.html#replaceContent", "ArrayProxy.reverseObjects()": "classes/arrayproxy/methods.html#reverseObjects", "ArrayProxy.set()": "classes/arrayproxy/methods.html#set", "ArrayProxy.setEach()": "classes/arrayproxy/methods.html#setEach", "ArrayProxy.setObjects()": "classes/arrayproxy/methods.html#setObjects", "ArrayProxy.setProperties()": "classes/arrayproxy/methods.html#setProperties", "ArrayProxy.shiftObject()": "classes/arrayproxy/methods.html#shiftObject", "ArrayProxy.slice()": "classes/arrayproxy/methods.html#slice", "ArrayProxy.sortBy()": "classes/arrayproxy/methods.html#sortBy", "ArrayProxy.toArray()": "classes/arrayproxy/methods.html#toArray", "ArrayProxy.toggleProperty()": "classes/arrayproxy/methods.html#toggleProperty", "ArrayProxy.toString()": "classes/arrayproxy/methods.html#toString", "ArrayProxy.uniq()": "classes/arrayproxy/methods.html#uniq", "ArrayProxy.uniqBy()": "classes/arrayproxy/methods.html#uniqBy", "ArrayProxy.unshiftObject()": "classes/arrayproxy/methods.html#unshiftObject", "ArrayProxy.unshiftObjects()": "classes/arrayproxy/methods.html#unshiftObjects", "ArrayProxy.willDestroy()": "classes/arrayproxy/methods.html#willDestroy", "ArrayProxy.without()": "classes/arrayproxy/methods.html#without", "assert()": "functions/@ember/debug/assert.html#assert", "assertDestroyablesDestroyed()": "functions/@ember/destroyable/assertdestroyablesdestroyed.html#assertDestroyablesDestroyed", "assign()": "functions/@ember/polyfills/assign.html#assign", "associateDestroyableChild()": "functions/@ember/destroyable/associatedestroyablechild.html#associateDestroyableChild", "Asynchronous Routing": "routing/asynchronous-routing.html", "attr()": "functions/@ember-data/model/attr.html#attr", "Autotracking In-Depth": "in-depth-topics/autotracking-in-depth.html", "begin()": "functions/@ember/runloop/begin.html#begin", "belongsTo()": "functions/@ember-data/model/belongsto.html#belongsTo", "BelongsToReference": "classes/belongstoreference.html", "BelongsToReference (methods)": "classes/belongstoreference/methods.html", "BelongsToReference (properties)": "classes/belongstoreference/properties.html", "BelongsToReference.id()": "classes/belongstoreference/methods.html#id", "BelongsToReference.identifier": "classes/belongstoreference/properties.html#identifier", "BelongsToReference.link()": "classes/belongstoreference/methods.html#link", "BelongsToReference.links()": "classes/belongstoreference/methods.html#links", "BelongsToReference.load()": "classes/belongstoreference/methods.html#load", "BelongsToReference.meta()": "classes/belongstoreference/methods.html#meta", "BelongsToReference.push()": "classes/belongstoreference/methods.html#push", "BelongsToReference.reload()": "classes/belongstoreference/methods.html#reload", "BelongsToReference.remoteType()": "classes/belongstoreference/methods.html#remoteType", "BelongsToReference.value()": "classes/belongstoreference/methods.html#value", "bind()": "functions/@ember/runloop/bind.html#bind", "Block Content": "components/block-content.html", "bool()": "functions/@ember/object/computed/bool.html#bool", "BooleanTransform": "classes/booleantransform.html", "BooleanTransform (methods)": "classes/booleantransform/methods.html", "BooleanTransform.deserialize()": "classes/booleantransform/methods.html#deserialize", "BooleanTransform.serialize()": "classes/booleantransform/methods.html#serialize", "Build targets": "configuring-ember/build-targets.html", "BuildURLMixin": "classes/buildurlmixin.html", "BuildURLMixin (methods)": "classes/buildurlmixin/methods.html", "BuildURLMixin.buildURL()": "classes/buildurlmixin/methods.html#buildURL", "BuildURLMixin.pathForType()": "classes/buildurlmixin/methods.html#pathForType", "BuildURLMixin.urlForCreateRecord()": "classes/buildurlmixin/methods.html#urlForCreateRecord", "BuildURLMixin.urlForDeleteRecord()": "classes/buildurlmixin/methods.html#urlForDeleteRecord", "BuildURLMixin.urlForFindAll()": "classes/buildurlmixin/methods.html#urlForFindAll", "BuildURLMixin.urlForFindBelongsTo()": "classes/buildurlmixin/methods.html#urlForFindBelongsTo", "BuildURLMixin.urlForFindHasMany()": "classes/buildurlmixin/methods.html#urlForFindHasMany", "BuildURLMixin.urlForFindMany()": "classes/buildurlmixin/methods.html#urlForFindMany", "BuildURLMixin.urlForFindRecord()": "classes/buildurlmixin/methods.html#urlForFindRecord", "BuildURLMixin.urlForQuery()": "classes/buildurlmixin/methods.html#urlForQuery", "BuildURLMixin.urlForQueryRecord()": "classes/buildurlmixin/methods.html#urlForQueryRecord", "BuildURLMixin.urlForUpdateRecord()": "classes/buildurlmixin/methods.html#urlForUpdateRecord", "Built-in Components": "components/built-in-components.html", "cached()": "functions/@glimmer/tracking/cached.html#cached", "cancel()": "functions/@ember/runloop/cancel.html#cancel", "capabilities()": "functions/@ember/helper/capabilities.html#capabilities", "Cheat Sheet": "upgrading/current-edition/cheat-sheet.html", "checkWaiters()": "functions/@ember/test/checkwaiters.html#checkWaiters", "collect()": "functions/@ember/object/computed/collect.html#collect", "compare()": "functions/@ember/utils/compare.html#compare", "Component": "classes/component.html", "Component (events)": "classes/component/events.html", "Component (methods)": "classes/component/methods.html", "Component (properties)": "classes/component/properties.html", "Component Arguments and HTML Attributes": "components/component-arguments-and-html-attributes.html", "Component Considerations": "accessibility/components.html", "Component State and Actions": "components/component-state-and-actions.html", "Component.actions": "classes/component/properties.html#actions", "Component.addObserver()": "classes/component/methods.html#addObserver", "Component.ariaRole": "classes/component/properties.html#ariaRole", "Component.attributeBindings": "classes/component/properties.html#attributeBindings", "Component.cacheFor()": "classes/component/methods.html#cacheFor", "Component.classNameBindings": "classes/component/properties.html#classNameBindings", "Component.classNames": "classes/component/properties.html#classNames", "Component.concatenatedProperties": "classes/component/properties.html#concatenatedProperties", "Component.decrementProperty()": "classes/component/methods.html#decrementProperty", "Component.destroy()": "classes/component/methods.html#destroy", "Component.didInsertElement (event)": "classes/component/events.html#didInsertElement", "Component.didReceiveAttrs (event)": "classes/component/events.html#didReceiveAttrs", "Component.didReceiveAttrs()": "classes/component/methods.html#didReceiveAttrs", "Component.didRender (event)": "classes/component/events.html#didRender", "Component.didRender()": "classes/component/methods.html#didRender", "Component.didUpdate (event)": "classes/component/events.html#didUpdate", "Component.didUpdate()": "classes/component/methods.html#didUpdate", "Component.didUpdateAttrs (event)": "classes/component/events.html#didUpdateAttrs", "Component.didUpdateAttrs()": "classes/component/methods.html#didUpdateAttrs", "Component.element": "classes/component/properties.html#element", "Component.elementId": "classes/component/properties.html#elementId", "Component.get()": "classes/component/methods.html#get", "Component.getProperties()": "classes/component/methods.html#getProperties", "Component.has()": "classes/component/methods.html#has", "Component.incrementProperty()": "classes/component/methods.html#incrementProperty", "Component.init()": "classes/component/methods.html#init", "Component.isDestroyed": "classes/component/properties.html#isDestroyed", "Component.isDestroying": "classes/component/properties.html#isDestroying", "Component.layout": "classes/component/properties.html#layout", "Component.mergedProperties": "classes/component/properties.html#mergedProperties", "Component.notifyPropertyChange()": "classes/component/methods.html#notifyPropertyChange", "Component.off()": "classes/component/methods.html#off", "Component.on()": "classes/component/methods.html#on", "Component.one()": "classes/component/methods.html#one", "Component.positionalParams": "classes/component/properties.html#positionalParams", "Component.readDOMAttr()": "classes/component/methods.html#readDOMAttr", "Component.removeObserver()": "classes/component/methods.html#removeObserver", "Component.rerender()": "classes/component/methods.html#rerender", "Component.send()": "classes/component/methods.html#send", "Component.set()": "classes/component/methods.html#set", "Component.setProperties()": "classes/component/methods.html#setProperties", "Component.tagName": "classes/component/properties.html#tagName", "Component.toggleProperty()": "classes/component/methods.html#toggleProperty", "Component.toString()": "classes/component/methods.html#toString", "Component.trigger()": "classes/component/methods.html#trigger", "Component.willClearRender (event)": "classes/component/events.html#willClearRender", "Component.willDestroy()": "classes/component/methods.html#willDestroy", "Component.willDestroyElement (event)": "classes/component/events.html#willDestroyElement", "Component.willInsertElement (event)": "classes/component/events.html#willInsertElement", "Component.willRender (event)": "classes/component/events.html#willRender", "Component.willRender()": "classes/component/methods.html#willRender", "Component.willUpdate (event)": "classes/component/events.html#willUpdate", "Component.willUpdate()": "classes/component/methods.html#willUpdate", "computed()": "functions/@ember/object/computed.html#computed", "ComputedProperty": "classes/computedproperty.html", "ComputedProperty (methods)": "classes/computedproperty/methods.html", "ComputedProperty.meta()": "classes/computedproperty/methods.html#meta", "ComputedProperty.readOnly()": "classes/computedproperty/methods.html#readOnly", "Conditional Content": "components/conditional-content.html", "Configuring Ember CLI": "configuring-ember/configuring-ember-cli.html", "Configuring Your App": "configuring-ember/index.html", "ConflictError": "classes/conflicterror.html", "ContainerDebugAdapter": "classes/containerdebugadapter.html", "ContainerDebugAdapter (methods)": "classes/containerdebugadapter/methods.html", "ContainerDebugAdapter (properties)": "classes/containerdebugadapter/properties.html", "ContainerDebugAdapter.addObserver()": "classes/containerdebugadapter/methods.html#addObserver", "ContainerDebugAdapter.cacheFor()": "classes/containerdebugadapter/methods.html#cacheFor", "ContainerDebugAdapter.canCatalogEntriesByType()": "classes/containerdebugadapter/methods.html#canCatalogEntriesByType", "ContainerDebugAdapter.catalogEntriesByType()": "classes/containerdebugadapter/methods.html#catalogEntriesByType", "ContainerDebugAdapter.concatenatedProperties": "classes/containerdebugadapter/properties.html#concatenatedProperties", "ContainerDebugAdapter.decrementProperty()": "classes/containerdebugadapter/methods.html#decrementProperty", "ContainerDebugAdapter.destroy()": "classes/containerdebugadapter/methods.html#destroy", "ContainerDebugAdapter.get()": "classes/containerdebugadapter/methods.html#get", "ContainerDebugAdapter.getProperties()": "classes/containerdebugadapter/methods.html#getProperties", "ContainerDebugAdapter.incrementProperty()": "classes/containerdebugadapter/methods.html#incrementProperty", "ContainerDebugAdapter.init()": "classes/containerdebugadapter/methods.html#init", "ContainerDebugAdapter.isDestroyed": "classes/containerdebugadapter/properties.html#isDestroyed", "ContainerDebugAdapter.isDestroying": "classes/containerdebugadapter/properties.html#isDestroying", "ContainerDebugAdapter.mergedProperties": "classes/containerdebugadapter/properties.html#mergedProperties", "ContainerDebugAdapter.notifyPropertyChange()": "classes/containerdebugadapter/methods.html#notifyPropertyChange", "ContainerDebugAdapter.removeObserver()": "classes/containerdebugadapter/methods.html#removeObserver", "ContainerDebugAdapter.resolver": "classes/containerdebugadapter/properties.html#resolver", "ContainerDebugAdapter.set()": "classes/containerdebugadapter/methods.html#set", "ContainerDebugAdapter.setProperties()": "classes/containerdebugadapter/methods.html#setProperties", "ContainerDebugAdapter.toggleProperty()": "classes/containerdebugadapter/methods.html#toggleProperty", "ContainerDebugAdapter.toString()": "classes/containerdebugadapter/methods.html#toString", "ContainerDebugAdapter.willDestroy()": "classes/containerdebugadapter/methods.html#willDestroy", "ContainerProxyMixin": "classes/containerproxymixin.html", "ContainerProxyMixin (methods)": "classes/containerproxymixin/methods.html", "ContainerProxyMixin (properties)": "classes/containerproxymixin/properties.html", "ContainerProxyMixin.factoryFor()": "classes/containerproxymixin/methods.html#factoryFor", "ContainerProxyMixin.lookup()": "classes/containerproxymixin/methods.html#lookup", "ContainerProxyMixin.ownerInjection()": "classes/containerproxymixin/methods.html#ownerInjection", "Controllers": "routing/controllers.html", "CoreObject": "classes/coreobject.html", "CoreObject (methods)": "classes/coreobject/methods.html", "CoreObject (properties)": "classes/coreobject/properties.html", "CoreObject.concatenatedProperties": "classes/coreobject/properties.html#concatenatedProperties", "CoreObject.destroy()": "classes/coreobject/methods.html#destroy", "CoreObject.init()": "classes/coreobject/methods.html#init", "CoreObject.isDestroyed": "classes/coreobject/properties.html#isDestroyed", "CoreObject.isDestroying": "classes/coreobject/properties.html#isDestroying", "CoreObject.mergedProperties": "classes/coreobject/properties.html#mergedProperties", "CoreObject.toString()": "classes/coreobject/methods.html#toString", "CoreObject.willDestroy()": "classes/coreobject/methods.html#willDestroy", "create()": "functions/@ember/object/mixin/create.html#create", "createCache()": "functions/@glimmer/tracking/primitives/cache/createcache.html#createCache", "Creating, Updating and Deleting": "models/creating-updating-and-deleting-records.html", "Customizing Adapters": "models/customizing-adapters.html", "Customizing Serializers": "models/customizing-serializers.html", "Data Tab": "ember-inspector/data.html", "DataAdapter": "classes/dataadapter.html", "DataAdapter (methods)": "classes/dataadapter/methods.html", "DataAdapter (properties)": "classes/dataadapter/properties.html", "DataAdapter.acceptsModelName": "classes/dataadapter/properties.html#acceptsModelName", "DataAdapter.addObserver()": "classes/dataadapter/methods.html#addObserver", "DataAdapter.cacheFor()": "classes/dataadapter/methods.html#cacheFor", "DataAdapter.columnsForType()": "classes/dataadapter/methods.html#columnsForType", "DataAdapter.concatenatedProperties": "classes/dataadapter/properties.html#concatenatedProperties", "DataAdapter.containerDebugAdapter": "classes/dataadapter/properties.html#containerDebugAdapter", "DataAdapter.decrementProperty()": "classes/dataadapter/methods.html#decrementProperty", "DataAdapter.destroy()": "classes/dataadapter/methods.html#destroy", "DataAdapter.detect()": "classes/dataadapter/methods.html#detect", "DataAdapter.get()": "classes/dataadapter/methods.html#get", "DataAdapter.getFilters()": "classes/dataadapter/methods.html#getFilters", "DataAdapter.getProperties()": "classes/dataadapter/methods.html#getProperties", "DataAdapter.getRecordColor()": "classes/dataadapter/methods.html#getRecordColor", "DataAdapter.getRecordColumnValues()": "classes/dataadapter/methods.html#getRecordColumnValues", "DataAdapter.getRecordFilterValues()": "classes/dataadapter/methods.html#getRecordFilterValues", "DataAdapter.getRecordKeywords()": "classes/dataadapter/methods.html#getRecordKeywords", "DataAdapter.getRecords()": "classes/dataadapter/methods.html#getRecords", "DataAdapter.incrementProperty()": "classes/dataadapter/methods.html#incrementProperty", "DataAdapter.init()": "classes/dataadapter/methods.html#init", "DataAdapter.isDestroyed": "classes/dataadapter/properties.html#isDestroyed", "DataAdapter.isDestroying": "classes/dataadapter/properties.html#isDestroying", "DataAdapter.mergedProperties": "classes/dataadapter/properties.html#mergedProperties", "DataAdapter.notifyPropertyChange()": "classes/dataadapter/methods.html#notifyPropertyChange", "DataAdapter.removeObserver()": "classes/dataadapter/methods.html#removeObserver", "DataAdapter.set()": "classes/dataadapter/methods.html#set", "DataAdapter.setProperties()": "classes/dataadapter/methods.html#setProperties", "DataAdapter.toggleProperty()": "classes/dataadapter/methods.html#toggleProperty", "DataAdapter.toString()": "classes/dataadapter/methods.html#toString", "DataAdapter.watchModelTypes()": "classes/dataadapter/methods.html#watchModelTypes", "DataAdapter.watchRecords()": "classes/dataadapter/methods.html#watchRecords", "DataAdapter.willDestroy()": "classes/dataadapter/methods.html#willDestroy", "DateTransform": "classes/datetransform.html", "DateTransform (methods)": "classes/datetransform/methods.html", "DateTransform.deserialize()": "classes/datetransform/methods.html#deserialize", "DateTransform.serialize()": "classes/datetransform/methods.html#serialize", "debounce()": "functions/@ember/runloop/debounce.html#debounce", "debug()": "functions/@ember/debug/debug.html#debug", "Debugging": "configuring-ember/debugging.html", "Debugging Promises": "ember-inspector/promises.html", "DebugLogging": "classes/debuglogging.html", "DebugLogging (properties)": "classes/debuglogging/properties.html", "DebugLogging.LOG_GRAPH": "classes/debuglogging/properties.html#LOG_GRAPH", "DebugLogging.LOG_IDENTIFIERS": "classes/debuglogging/properties.html#LOG_IDENTIFIERS", "DebugLogging.LOG_INSTANCE_CACHE": "classes/debuglogging/properties.html#LOG_INSTANCE_CACHE", "DebugLogging.LOG_MUTATIONS": "classes/debuglogging/properties.html#LOG_MUTATIONS", "DebugLogging.LOG_NOTIFICATIONS": "classes/debuglogging/properties.html#LOG_NOTIFICATIONS", "DebugLogging.LOG_OPERATIONS": "classes/debuglogging/properties.html#LOG_OPERATIONS", "DebugLogging.LOG_PAYLOADS": "classes/debuglogging/properties.html#LOG_PAYLOADS", "DebugLogging.LOG_REQUEST_STATUS": "classes/debuglogging/properties.html#LOG_REQUEST_STATUS", "defer()": "functions/rsvp/defer.html#defer", "defineProperty()": "functions/@ember/object/defineproperty.html#defineProperty", "Defining Models": "models/defining-models.html", "Defining Your Routes": "routing/defining-your-routes.html", "denodeify()": "functions/rsvp/denodeify.html#denodeify", "Dependency Injection": "applications/dependency-injection.html", "dependentKeyCompat()": "functions/@ember/object/compat/dependentkeycompat.html#dependentKeyCompat", "deprecate()": "functions/@ember/debug/deprecate.html#deprecate", "deprecatingAlias()": "functions/@ember/object/computed/deprecatingalias.html#deprecatingAlias", "destroy()": "functions/@ember/destroyable/destroy.html#destroy", "Disabling Prototype Extensions": "configuring-ember/disabling-prototype-extensions.html", "eachAttribute()": "functions/model/eachattribute.html#eachAttribute", "eachRelatedType()": "functions/model/eachrelatedtype.html#eachRelatedType", "eachRelationship()": "functions/model/eachrelationship.html#eachRelationship", "eachTransformedAttribute()": "functions/model/eachtransformedattribute.html#eachTransformedAttribute", "EmbeddedRecordsMixin": "classes/embeddedrecordsmixin.html", "EmbeddedRecordsMixin (methods)": "classes/embeddedrecordsmixin/methods.html", "EmbeddedRecordsMixin.normalize()": "classes/embeddedrecordsmixin/methods.html#normalize", "EmbeddedRecordsMixin.removeEmbeddedForeignKey()": "classes/embeddedrecordsmixin/methods.html#removeEmbeddedForeignKey", "EmbeddedRecordsMixin.serializeBelongsTo()": "classes/embeddedrecordsmixin/methods.html#serializeBelongsTo", "EmbeddedRecordsMixin.serializeHasMany()": "classes/embeddedrecordsmixin/methods.html#serializeHasMany", "Embedding Applications": "configuring-ember/embedding-applications.html", "Ember": "classes/ember.html", "ember": "modules/ember.html", "Ember (methods)": "classes/ember/methods.html", "Ember (properties)": "classes/ember/properties.html", "Ember Engines": "applications/ember-engines.html", "Ember Extensions": "code-editors/index.html", "Ember.Controller": "classes/ember.controller.html", "Ember.Controller (methods)": "classes/ember.controller/methods.html", "Ember.Controller (properties)": "classes/ember.controller/properties.html", "Ember.Controller.actions": "classes/ember.controller/properties.html#actions", "Ember.Controller.addObserver()": "classes/ember.controller/methods.html#addObserver", "Ember.Controller.cacheFor()": "classes/ember.controller/methods.html#cacheFor", "Ember.Controller.concatenatedProperties": "classes/ember.controller/properties.html#concatenatedProperties", "Ember.Controller.decrementProperty()": "classes/ember.controller/methods.html#decrementProperty", "Ember.Controller.destroy()": "classes/ember.controller/methods.html#destroy", "Ember.Controller.get()": "classes/ember.controller/methods.html#get", "Ember.Controller.getProperties()": "classes/ember.controller/methods.html#getProperties", "Ember.Controller.incrementProperty()": "classes/ember.controller/methods.html#incrementProperty", "Ember.Controller.init()": "classes/ember.controller/methods.html#init", "Ember.Controller.isDestroyed": "classes/ember.controller/properties.html#isDestroyed", "Ember.Controller.isDestroying": "classes/ember.controller/properties.html#isDestroying", "Ember.Controller.mergedProperties": "classes/ember.controller/properties.html#mergedProperties", "Ember.Controller.model": "classes/ember.controller/properties.html#model", "Ember.Controller.notifyPropertyChange()": "classes/ember.controller/methods.html#notifyPropertyChange", "Ember.Controller.queryParams": "classes/ember.controller/properties.html#queryParams", "Ember.Controller.removeObserver()": "classes/ember.controller/methods.html#removeObserver", "Ember.Controller.send()": "classes/ember.controller/methods.html#send", "Ember.Controller.set()": "classes/ember.controller/methods.html#set", "Ember.Controller.setProperties()": "classes/ember.controller/methods.html#setProperties", "Ember.Controller.target": "classes/ember.controller/properties.html#target", "Ember.Controller.toggleProperty()": "classes/ember.controller/methods.html#toggleProperty", "Ember.Controller.toString()": "classes/ember.controller/methods.html#toString", "Ember.Controller.willDestroy()": "classes/ember.controller/methods.html#willDestroy", "Ember.Error": "classes/ember.error.html", "Ember.NativeArray": "classes/ember.nativearray.html", "Ember.NativeArray (methods)": "classes/ember.nativearray/methods.html", "Ember.NativeArray (properties)": "classes/ember.nativearray/properties.html", "Ember.NativeArray.[]": "classes/ember.nativearray/properties.html#[]", "Ember.NativeArray.addObject()": "classes/ember.nativearray/methods.html#addObject", "Ember.NativeArray.addObjects()": "classes/ember.nativearray/methods.html#addObjects", "Ember.NativeArray.addObserver()": "classes/ember.nativearray/methods.html#addObserver", "Ember.NativeArray.any()": "classes/ember.nativearray/methods.html#any", "Ember.NativeArray.cacheFor()": "classes/ember.nativearray/methods.html#cacheFor", "Ember.NativeArray.clear()": "classes/ember.nativearray/methods.html#clear", "Ember.NativeArray.compact()": "classes/ember.nativearray/methods.html#compact", "Ember.NativeArray.decrementProperty()": "classes/ember.nativearray/methods.html#decrementProperty", "Ember.NativeArray.every()": "classes/ember.nativearray/methods.html#every", "Ember.NativeArray.filter()": "classes/ember.nativearray/methods.html#filter", "Ember.NativeArray.filterBy()": "classes/ember.nativearray/methods.html#filterBy", "Ember.NativeArray.find()": "classes/ember.nativearray/methods.html#find", "Ember.NativeArray.findBy()": "classes/ember.nativearray/methods.html#findBy", "Ember.NativeArray.firstObject": "classes/ember.nativearray/properties.html#firstObject", "Ember.NativeArray.forEach()": "classes/ember.nativearray/methods.html#forEach", "Ember.NativeArray.get()": "classes/ember.nativearray/methods.html#get", "Ember.NativeArray.getEach()": "classes/ember.nativearray/methods.html#getEach", "Ember.NativeArray.getProperties()": "classes/ember.nativearray/methods.html#getProperties", "Ember.NativeArray.includes()": "classes/ember.nativearray/methods.html#includes", "Ember.NativeArray.incrementProperty()": "classes/ember.nativearray/methods.html#incrementProperty", "Ember.NativeArray.indexOf()": "classes/ember.nativearray/methods.html#indexOf", "Ember.NativeArray.insertAt()": "classes/ember.nativearray/methods.html#insertAt", "Ember.NativeArray.invoke()": "classes/ember.nativearray/methods.html#invoke", "Ember.NativeArray.isAny()": "classes/ember.nativearray/methods.html#isAny", "Ember.NativeArray.isEvery()": "classes/ember.nativearray/methods.html#isEvery", "Ember.NativeArray.lastIndexOf()": "classes/ember.nativearray/methods.html#lastIndexOf", "Ember.NativeArray.lastObject": "classes/ember.nativearray/properties.html#lastObject", "Ember.NativeArray.length": "classes/ember.nativearray/properties.html#length", "Ember.NativeArray.map()": "classes/ember.nativearray/methods.html#map", "Ember.NativeArray.mapBy()": "classes/ember.nativearray/methods.html#mapBy", "Ember.NativeArray.notifyPropertyChange()": "classes/ember.nativearray/methods.html#notifyPropertyChange", "Ember.NativeArray.objectAt()": "classes/ember.nativearray/methods.html#objectAt", "Ember.NativeArray.objectsAt()": "classes/ember.nativearray/methods.html#objectsAt", "Ember.NativeArray.popObject()": "classes/ember.nativearray/methods.html#popObject", "Ember.NativeArray.pushObject()": "classes/ember.nativearray/methods.html#pushObject", "Ember.NativeArray.pushObjects()": "classes/ember.nativearray/methods.html#pushObjects", "Ember.NativeArray.reduce()": "classes/ember.nativearray/methods.html#reduce", "Ember.NativeArray.reject()": "classes/ember.nativearray/methods.html#reject", "Ember.NativeArray.rejectBy()": "classes/ember.nativearray/methods.html#rejectBy", "Ember.NativeArray.removeAt()": "classes/ember.nativearray/methods.html#removeAt", "Ember.NativeArray.removeObject()": "classes/ember.nativearray/methods.html#removeObject", "Ember.NativeArray.removeObjects()": "classes/ember.nativearray/methods.html#removeObjects", "Ember.NativeArray.removeObserver()": "classes/ember.nativearray/methods.html#removeObserver", "Ember.NativeArray.replace()": "classes/ember.nativearray/methods.html#replace", "Ember.NativeArray.reverseObjects()": "classes/ember.nativearray/methods.html#reverseObjects", "Ember.NativeArray.set()": "classes/ember.nativearray/methods.html#set", "Ember.NativeArray.setEach()": "classes/ember.nativearray/methods.html#setEach", "Ember.NativeArray.setObjects()": "classes/ember.nativearray/methods.html#setObjects", "Ember.NativeArray.setProperties()": "classes/ember.nativearray/methods.html#setProperties", "Ember.NativeArray.shiftObject()": "classes/ember.nativearray/methods.html#shiftObject", "Ember.NativeArray.slice()": "classes/ember.nativearray/methods.html#slice", "Ember.NativeArray.sortBy()": "classes/ember.nativearray/methods.html#sortBy", "Ember.NativeArray.toArray()": "classes/ember.nativearray/methods.html#toArray", "Ember.NativeArray.toggleProperty()": "classes/ember.nativearray/methods.html#toggleProperty", "Ember.NativeArray.uniq()": "classes/ember.nativearray/methods.html#uniq", "Ember.NativeArray.uniqBy()": "classes/ember.nativearray/methods.html#uniqBy", "Ember.NativeArray.unshiftObject()": "classes/ember.nativearray/methods.html#unshiftObject", "Ember.NativeArray.unshiftObjects()": "classes/ember.nativearray/methods.html#unshiftObjects", "Ember.NativeArray.without()": "classes/ember.nativearray/methods.html#without", "Ember.Templates.helpers": "classes/ember.templates.helpers.html", "Ember.Templates.helpers (methods)": "classes/ember.templates.helpers/methods.html", "Ember.Templates.helpers.action()": "classes/ember.templates.helpers/methods.html#action", "Ember.Templates.helpers.array()": "classes/ember.templates.helpers/methods.html#array", "Ember.Templates.helpers.component()": "classes/ember.templates.helpers/methods.html#component", "Ember.Templates.helpers.concat()": "classes/ember.templates.helpers/methods.html#concat", "Ember.Templates.helpers.debugger()": "classes/ember.templates.helpers/methods.html#debugger", "Ember.Templates.helpers.each()": "classes/ember.templates.helpers/methods.html#each", "Ember.Templates.helpers.each-in()": "classes/ember.templates.helpers/methods.html#each-in", "Ember.Templates.helpers.fn()": "classes/ember.templates.helpers/methods.html#fn", "Ember.Templates.helpers.get()": "classes/ember.templates.helpers/methods.html#get", "Ember.Templates.helpers.has-block()": "classes/ember.templates.helpers/methods.html#has-block", "Ember.Templates.helpers.has-block-params()": "classes/ember.templates.helpers/methods.html#has-block-params", "Ember.Templates.helpers.hash()": "classes/ember.templates.helpers/methods.html#hash", "Ember.Templates.helpers.helper()": "classes/ember.templates.helpers/methods.html#helper", "Ember.Templates.helpers.if()": "classes/ember.templates.helpers/methods.html#if", "Ember.Templates.helpers.in-element()": "classes/ember.templates.helpers/methods.html#in-element", "Ember.Templates.helpers.input()": "classes/ember.templates.helpers/methods.html#input", "Ember.Templates.helpers.let()": "classes/ember.templates.helpers/methods.html#let", "Ember.Templates.helpers.link-to()": "classes/ember.templates.helpers/methods.html#link-to", "Ember.Templates.helpers.log()": "classes/ember.templates.helpers/methods.html#log", "Ember.Templates.helpers.modifier()": "classes/ember.templates.helpers/methods.html#modifier", "Ember.Templates.helpers.mount()": "classes/ember.templates.helpers/methods.html#mount", "Ember.Templates.helpers.mut()": "classes/ember.templates.helpers/methods.html#mut", "Ember.Templates.helpers.on()": "classes/ember.templates.helpers/methods.html#on", "Ember.Templates.helpers.outlet()": "classes/ember.templates.helpers/methods.html#outlet", "Ember.Templates.helpers.page-title()": "classes/ember.templates.helpers/methods.html#page-title", "Ember.Templates.helpers.textarea()": "classes/ember.templates.helpers/methods.html#textarea", "Ember.Templates.helpers.unbound()": "classes/ember.templates.helpers/methods.html#unbound", "Ember.Templates.helpers.unique-id()": "classes/ember.templates.helpers/methods.html#unique-id", "Ember.Templates.helpers.unless()": "classes/ember.templates.helpers/methods.html#unless", "Ember.Templates.helpers.yield()": "classes/ember.templates.helpers/methods.html#yield", "Ember.Test": "classes/ember.test.html", "Ember.Test (methods)": "classes/ember.test/methods.html", "Ember.Test (properties)": "classes/ember.test/properties.html", "Ember.Test.adapter": "classes/ember.test/properties.html#adapter", "Ember.Test.onInjectHelpers()": "classes/ember.test/methods.html#onInjectHelpers", "Ember.Test.promise()": "classes/ember.test/methods.html#promise", "Ember.Test.QUnitAdapter": "classes/ember.test.qunitadapter.html", "Ember.Test.QUnitAdapter (methods)": "classes/ember.test.qunitadapter/methods.html", "Ember.Test.QUnitAdapter.asyncEnd()": "classes/ember.test.qunitadapter/methods.html#asyncEnd", "Ember.Test.QUnitAdapter.asyncStart()": "classes/ember.test.qunitadapter/methods.html#asyncStart", "Ember.Test.QUnitAdapter.exception()": "classes/ember.test.qunitadapter/methods.html#exception", "Ember.Test.resolve()": "classes/ember.test/methods.html#resolve", "ember/controller": "modules/ember/controller.html", "EmberArray": "classes/emberarray.html", "EmberArray (methods)": "classes/emberarray/methods.html", "EmberArray (properties)": "classes/emberarray/properties.html", "EmberArray.[]": "classes/emberarray/properties.html#[]", "EmberArray.any()": "classes/emberarray/methods.html#any", "EmberArray.compact()": "classes/emberarray/methods.html#compact", "EmberArray.every()": "classes/emberarray/methods.html#every", "EmberArray.filter()": "classes/emberarray/methods.html#filter", "EmberArray.filterBy()": "classes/emberarray/methods.html#filterBy", "EmberArray.find()": "classes/emberarray/methods.html#find", "EmberArray.findBy()": "classes/emberarray/methods.html#findBy", "EmberArray.firstObject": "classes/emberarray/properties.html#firstObject", "EmberArray.forEach()": "classes/emberarray/methods.html#forEach", "EmberArray.getEach()": "classes/emberarray/methods.html#getEach", "EmberArray.includes()": "classes/emberarray/methods.html#includes", "EmberArray.indexOf()": "classes/emberarray/methods.html#indexOf", "EmberArray.invoke()": "classes/emberarray/methods.html#invoke", "EmberArray.isAny()": "classes/emberarray/methods.html#isAny", "EmberArray.isEvery()": "classes/emberarray/methods.html#isEvery", "EmberArray.lastIndexOf()": "classes/emberarray/methods.html#lastIndexOf", "EmberArray.lastObject": "classes/emberarray/properties.html#lastObject", "EmberArray.length": "classes/emberarray/properties.html#length", "EmberArray.map()": "classes/emberarray/methods.html#map", "EmberArray.mapBy()": "classes/emberarray/methods.html#mapBy", "EmberArray.objectAt()": "classes/emberarray/methods.html#objectAt", "EmberArray.objectsAt()": "classes/emberarray/methods.html#objectsAt", "EmberArray.reduce()": "classes/emberarray/methods.html#reduce", "EmberArray.reject()": "classes/emberarray/methods.html#reject", "EmberArray.rejectBy()": "classes/emberarray/methods.html#rejectBy", "EmberArray.setEach()": "classes/emberarray/methods.html#setEach", "EmberArray.slice()": "classes/emberarray/methods.html#slice", "EmberArray.sortBy()": "classes/emberarray/methods.html#sortBy", "EmberArray.toArray()": "classes/emberarray/methods.html#toArray", "EmberArray.uniq()": "classes/emberarray/methods.html#uniq", "EmberArray.uniqBy()": "classes/emberarray/methods.html#uniqBy", "EmberArray.without()": "classes/emberarray/methods.html#without", "EmberENV": "classes/emberenv.html", "EmberENV (properties)": "classes/emberenv/properties.html", "EmberENV.EXTEND_PROTOTYPES": "classes/emberenv/properties.html#EXTEND_PROTOTYPES", "EmberENV.LOG_STACKTRACE_ON_DEPRECATION": "classes/emberenv/properties.html#LOG_STACKTRACE_ON_DEPRECATION", "EmberENV.LOG_VERSION": "classes/emberenv/properties.html#LOG_VERSION", "EmberObject": "classes/emberobject.html", "EmberObject (methods)": "classes/emberobject/methods.html", "EmberObject (properties)": "classes/emberobject/properties.html", "EmberObject.addObserver()": "classes/emberobject/methods.html#addObserver", "EmberObject.cacheFor()": "classes/emberobject/methods.html#cacheFor", "EmberObject.concatenatedProperties": "classes/emberobject/properties.html#concatenatedProperties", "EmberObject.decrementProperty()": "classes/emberobject/methods.html#decrementProperty", "EmberObject.destroy()": "classes/emberobject/methods.html#destroy", "EmberObject.get()": "classes/emberobject/methods.html#get", "EmberObject.getProperties()": "classes/emberobject/methods.html#getProperties", "EmberObject.incrementProperty()": "classes/emberobject/methods.html#incrementProperty", "EmberObject.init()": "classes/emberobject/methods.html#init", "EmberObject.isDestroyed": "classes/emberobject/properties.html#isDestroyed", "EmberObject.isDestroying": "classes/emberobject/properties.html#isDestroying", "EmberObject.mergedProperties": "classes/emberobject/properties.html#mergedProperties", "EmberObject.notifyPropertyChange()": "classes/emberobject/methods.html#notifyPropertyChange", "EmberObject.removeObserver()": "classes/emberobject/methods.html#removeObserver", "EmberObject.set()": "classes/emberobject/methods.html#set", "EmberObject.setProperties()": "classes/emberobject/methods.html#setProperties", "EmberObject.toggleProperty()": "classes/emberobject/methods.html#toggleProperty", "EmberObject.toString()": "classes/emberobject/methods.html#toString", "EmberObject.willDestroy()": "classes/emberobject/methods.html#willDestroy", "EmberRouter": "classes/emberrouter.html", "EmberRouter (methods)": "classes/emberrouter/methods.html", "EmberRouter (properties)": "classes/emberrouter/properties.html", "EmberRouter.addObserver()": "classes/emberrouter/methods.html#addObserver", "EmberRouter.cacheFor()": "classes/emberrouter/methods.html#cacheFor", "EmberRouter.concatenatedProperties": "classes/emberrouter/properties.html#concatenatedProperties", "EmberRouter.decrementProperty()": "classes/emberrouter/methods.html#decrementProperty", "EmberRouter.destroy()": "classes/emberrouter/methods.html#destroy", "EmberRouter.get()": "classes/emberrouter/methods.html#get", "EmberRouter.getProperties()": "classes/emberrouter/methods.html#getProperties", "EmberRouter.has()": "classes/emberrouter/methods.html#has", "EmberRouter.incrementProperty()": "classes/emberrouter/methods.html#incrementProperty", "EmberRouter.init()": "classes/emberrouter/methods.html#init", "EmberRouter.isDestroyed": "classes/emberrouter/properties.html#isDestroyed", "EmberRouter.isDestroying": "classes/emberrouter/properties.html#isDestroying", "EmberRouter.location": "classes/emberrouter/properties.html#location", "EmberRouter.map()": "classes/emberrouter/methods.html#map", "EmberRouter.mergedProperties": "classes/emberrouter/properties.html#mergedProperties", "EmberRouter.notifyPropertyChange()": "classes/emberrouter/methods.html#notifyPropertyChange", "EmberRouter.off()": "classes/emberrouter/methods.html#off", "EmberRouter.on()": "classes/emberrouter/methods.html#on", "EmberRouter.one()": "classes/emberrouter/methods.html#one", "EmberRouter.removeObserver()": "classes/emberrouter/methods.html#removeObserver", "EmberRouter.replaceWith()": "classes/emberrouter/methods.html#replaceWith", "EmberRouter.rootURL": "classes/emberrouter/properties.html#rootURL", "EmberRouter.set()": "classes/emberrouter/methods.html#set", "EmberRouter.setProperties()": "classes/emberrouter/methods.html#setProperties", "EmberRouter.toggleProperty()": "classes/emberrouter/methods.html#toggleProperty", "EmberRouter.toString()": "classes/emberrouter/methods.html#toString", "EmberRouter.transitionTo()": "classes/emberrouter/methods.html#transitionTo", "EmberRouter.trigger()": "classes/emberrouter/methods.html#trigger", "EmberRouter.willDestroy()": "classes/emberrouter/methods.html#willDestroy", "empty()": "functions/@ember/object/computed/empty.html#empty", "enableDestroyableTracking()": "functions/@ember/destroyable/enabledestroyabletracking.html#enableDestroyableTracking", "end()": "functions/@ember/runloop/end.html#end", "Engine": "classes/engine.html", "Engine (methods)": "classes/engine/methods.html", "Engine (properties)": "classes/engine/properties.html", "Engine.buildInstance()": "classes/engine/methods.html#buildInstance", "Engine.hasRegistration()": "classes/engine/methods.html#hasRegistration", "Engine.initializer()": "classes/engine/methods.html#initializer", "Engine.instanceInitializer()": "classes/engine/methods.html#instanceInitializer", "Engine.register()": "classes/engine/methods.html#register", "Engine.registeredOption()": "classes/engine/methods.html#registeredOption", "Engine.registeredOptions()": "classes/engine/methods.html#registeredOptions", "Engine.registeredOptionsForType()": "classes/engine/methods.html#registeredOptionsForType", "Engine.registerOptions()": "classes/engine/methods.html#registerOptions", "Engine.registerOptionsForType()": "classes/engine/methods.html#registerOptionsForType", "Engine.resolver": "classes/engine/properties.html#resolver", "Engine.resolveRegistration()": "classes/engine/methods.html#resolveRegistration", "Engine.unregister()": "classes/engine/methods.html#unregister", "EngineInstance": "classes/engineinstance.html", "EngineInstance (methods)": "classes/engineinstance/methods.html", "EngineInstance (properties)": "classes/engineinstance/properties.html", "EngineInstance.addObserver()": "classes/engineinstance/methods.html#addObserver", "EngineInstance.boot()": "classes/engineinstance/methods.html#boot", "EngineInstance.cacheFor()": "classes/engineinstance/methods.html#cacheFor", "EngineInstance.concatenatedProperties": "classes/engineinstance/properties.html#concatenatedProperties", "EngineInstance.decrementProperty()": "classes/engineinstance/methods.html#decrementProperty", "EngineInstance.destroy()": "classes/engineinstance/methods.html#destroy", "EngineInstance.factoryFor()": "classes/engineinstance/methods.html#factoryFor", "EngineInstance.get()": "classes/engineinstance/methods.html#get", "EngineInstance.getProperties()": "classes/engineinstance/methods.html#getProperties", "EngineInstance.hasRegistration()": "classes/engineinstance/methods.html#hasRegistration", "EngineInstance.incrementProperty()": "classes/engineinstance/methods.html#incrementProperty", "EngineInstance.init()": "classes/engineinstance/methods.html#init", "EngineInstance.isDestroyed": "classes/engineinstance/properties.html#isDestroyed", "EngineInstance.isDestroying": "classes/engineinstance/properties.html#isDestroying", "EngineInstance.lookup()": "classes/engineinstance/methods.html#lookup", "EngineInstance.mergedProperties": "classes/engineinstance/properties.html#mergedProperties", "EngineInstance.notifyPropertyChange()": "classes/engineinstance/methods.html#notifyPropertyChange", "EngineInstance.ownerInjection()": "classes/engineinstance/methods.html#ownerInjection", "EngineInstance.register()": "classes/engineinstance/methods.html#register", "EngineInstance.registeredOption()": "classes/engineinstance/methods.html#registeredOption", "EngineInstance.registeredOptions()": "classes/engineinstance/methods.html#registeredOptions", "EngineInstance.registeredOptionsForType()": "classes/engineinstance/methods.html#registeredOptionsForType", "EngineInstance.registerOptions()": "classes/engineinstance/methods.html#registerOptions", "EngineInstance.registerOptionsForType()": "classes/engineinstance/methods.html#registerOptionsForType", "EngineInstance.removeObserver()": "classes/engineinstance/methods.html#removeObserver", "EngineInstance.resolveRegistration()": "classes/engineinstance/methods.html#resolveRegistration", "EngineInstance.set()": "classes/engineinstance/methods.html#set", "EngineInstance.setProperties()": "classes/engineinstance/methods.html#setProperties", "EngineInstance.toggleProperty()": "classes/engineinstance/methods.html#toggleProperty", "EngineInstance.toString()": "classes/engineinstance/methods.html#toString", "EngineInstance.unregister()": "classes/engineinstance/methods.html#unregister", "EngineInstance.willDestroy()": "classes/engineinstance/methods.html#willDestroy", "Enumerable": "classes/enumerable.html", "equal()": "functions/@ember/object/computed/equal.html#equal", "Errors": "classes/errors.html", "Errors (methods)": "classes/errors/methods.html", "Errors (properties)": "classes/errors/properties.html", "Errors.add()": "classes/errors/methods.html#add", "Errors.clear()": "classes/errors/methods.html#clear", "Errors.errorsFor()": "classes/errors/methods.html#errorsFor", "Errors.has()": "classes/errors/methods.html#has", "Errors.isEmpty": "classes/errors/properties.html#isEmpty", "Errors.length": "classes/errors/properties.html#length", "Errors.messages": "classes/errors/properties.html#messages", "Errors.remove()": "classes/errors/methods.html#remove", "errorsArrayToHash()": "functions/@ember-data/adapter/error/errorsarraytohash.html#errorsArrayToHash", "errorsHashToArray()": "functions/@ember-data/adapter/error/errorshashtoarray.html#errorsHashToArray", "Evented": "classes/evented.html", "Evented (methods)": "classes/evented/methods.html", "Evented.has()": "classes/evented/methods.html#has", "Evented.off()": "classes/evented/methods.html#off", "Evented.on()": "classes/evented/methods.html#on", "Evented.one()": "classes/evented/methods.html#one", "Evented.trigger()": "classes/evented/methods.html#trigger", "EventTarget": "classes/eventtarget.html", "EventTarget (methods)": "classes/eventtarget/methods.html", "expandProperties()": "functions/@ember/object/computed/expandproperties.html#expandProperties", "extend()": "functions/@ember/object/extend.html#extend", "Feature Flags": "configuring-ember/feature-flags.html", "Fetch": "classes/fetch.html", "filter()": "functions/rsvp/filter.html#filter", "filterBy()": "functions/@ember/object/computed/filterby.html#filterBy", "Finding Records": "models/finding-records.html", "ForbiddenError": "classes/forbiddenerror.html", "get()": "functions/@ember/object/get.html#get", "getOwner()": "functions/@ember/application/getowner.html#getOwner", "getProperties()": "functions/@ember/object/getproperties.html#getProperties", "getValue()": "functions/@glimmer/tracking/primitives/cache/getvalue.html#getValue", "Glimmer Components": "upgrading/current-edition/glimmer-components.html", "gt()": "functions/@ember/object/computed/gt.html#gt", "gte()": "functions/@ember/object/computed/gte.html#gte", "guidFor()": "functions/@ember/object/internals/guidfor.html#guidFor", "Handling Deprecations": "configuring-ember/handling-deprecations.html", "Handling Metadata": "models/handling-metadata.html", "hash()": "functions/rsvp/hash.html#hash", "HashLocation": "classes/hashlocation.html", "HashLocation (methods)": "classes/hashlocation/methods.html", "HashLocation (properties)": "classes/hashlocation/properties.html", "HashLocation.addObserver()": "classes/hashlocation/methods.html#addObserver", "HashLocation.cacheFor()": "classes/hashlocation/methods.html#cacheFor", "HashLocation.concatenatedProperties": "classes/hashlocation/properties.html#concatenatedProperties", "HashLocation.decrementProperty()": "classes/hashlocation/methods.html#decrementProperty", "HashLocation.destroy()": "classes/hashlocation/methods.html#destroy", "HashLocation.get()": "classes/hashlocation/methods.html#get", "HashLocation.getProperties()": "classes/hashlocation/methods.html#getProperties", "HashLocation.incrementProperty()": "classes/hashlocation/methods.html#incrementProperty", "HashLocation.init()": "classes/hashlocation/methods.html#init", "HashLocation.isDestroyed": "classes/hashlocation/properties.html#isDestroyed", "HashLocation.isDestroying": "classes/hashlocation/properties.html#isDestroying", "HashLocation.mergedProperties": "classes/hashlocation/properties.html#mergedProperties", "HashLocation.notifyPropertyChange()": "classes/hashlocation/methods.html#notifyPropertyChange", "HashLocation.removeObserver()": "classes/hashlocation/methods.html#removeObserver", "HashLocation.set()": "classes/hashlocation/methods.html#set", "HashLocation.setProperties()": "classes/hashlocation/methods.html#setProperties", "HashLocation.toggleProperty()": "classes/hashlocation/methods.html#toggleProperty", "HashLocation.toString()": "classes/hashlocation/methods.html#toString", "HashLocation.willDestroy()": "classes/hashlocation/methods.html#willDestroy", "hashSettled()": "functions/rsvp/hashsettled.html#hashSettled", "hasListeners()": "functions/@ember/object/events/haslisteners.html#hasListeners", "hasMany()": "functions/@ember-data/model/hasmany.html#hasMany", "HasManyReference": "classes/hasmanyreference.html", "HasManyReference (methods)": "classes/hasmanyreference/methods.html", "HasManyReference (properties)": "classes/hasmanyreference/properties.html", "HasManyReference.identifiers": "classes/hasmanyreference/properties.html#identifiers", "HasManyReference.ids()": "classes/hasmanyreference/methods.html#ids", "HasManyReference.link()": "classes/hasmanyreference/methods.html#link", "HasManyReference.links()": "classes/hasmanyreference/methods.html#links", "HasManyReference.load()": "classes/hasmanyreference/methods.html#load", "HasManyReference.meta()": "classes/hasmanyreference/methods.html#meta", "HasManyReference.push()": "classes/hasmanyreference/methods.html#push", "HasManyReference.reload()": "classes/hasmanyreference/methods.html#reload", "HasManyReference.remoteType()": "classes/hasmanyreference/methods.html#remoteType", "HasManyReference.value()": "classes/hasmanyreference/methods.html#value", "Helper": "classes/helper.html", "Helper (methods)": "classes/helper/methods.html", "Helper (properties)": "classes/helper/properties.html", "Helper Functions": "components/helper-functions.html", "helper()": "functions/@ember/component/helper/helper.html#helper", "Helper.compute()": "classes/helper/methods.html#compute", "Helper.concatenatedProperties": "classes/helper/properties.html#concatenatedProperties", "Helper.destroy()": "classes/helper/methods.html#destroy", "Helper.init()": "classes/helper/methods.html#init", "Helper.isDestroyed": "classes/helper/properties.html#isDestroyed", "Helper.isDestroying": "classes/helper/properties.html#isDestroying", "Helper.mergedProperties": "classes/helper/properties.html#mergedProperties", "Helper.recompute()": "classes/helper/methods.html#recompute", "Helper.toString()": "classes/helper/methods.html#toString", "Helper.willDestroy()": "classes/helper/methods.html#willDestroy", "HistoryLocation": "classes/historylocation.html", "HistoryLocation (methods)": "classes/historylocation/methods.html", "HistoryLocation (properties)": "classes/historylocation/properties.html", "HistoryLocation.addObserver()": "classes/historylocation/methods.html#addObserver", "HistoryLocation.cacheFor()": "classes/historylocation/methods.html#cacheFor", "HistoryLocation.concatenatedProperties": "classes/historylocation/properties.html#concatenatedProperties", "HistoryLocation.decrementProperty()": "classes/historylocation/methods.html#decrementProperty", "HistoryLocation.destroy()": "classes/historylocation/methods.html#destroy", "HistoryLocation.get()": "classes/historylocation/methods.html#get", "HistoryLocation.getProperties()": "classes/historylocation/methods.html#getProperties", "HistoryLocation.incrementProperty()": "classes/historylocation/methods.html#incrementProperty", "HistoryLocation.init()": "classes/historylocation/methods.html#init", "HistoryLocation.isDestroyed": "classes/historylocation/properties.html#isDestroyed", "HistoryLocation.isDestroying": "classes/historylocation/properties.html#isDestroying", "HistoryLocation.mergedProperties": "classes/historylocation/properties.html#mergedProperties", "HistoryLocation.notifyPropertyChange()": "classes/historylocation/methods.html#notifyPropertyChange", "HistoryLocation.removeObserver()": "classes/historylocation/methods.html#removeObserver", "HistoryLocation.set()": "classes/historylocation/methods.html#set", "HistoryLocation.setProperties()": "classes/historylocation/methods.html#setProperties", "HistoryLocation.toggleProperty()": "classes/historylocation/methods.html#toggleProperty", "HistoryLocation.toString()": "classes/historylocation/methods.html#toString", "HistoryLocation.willDestroy()": "classes/historylocation/methods.html#willDestroy", "How to upgrade": "upgrading.html", "How To Use The Guides": "getting-started/index.html", "htmlSafe()": "functions/@ember/template/htmlsafe.html#htmlSafe", "IdentifierCache": "classes/identifiercache.html", "IdentifierCache (methods)": "classes/identifiercache/methods.html", "IdentifierCache.createIdentifierForNewRecord()": "classes/identifiercache/methods.html#createIdentifierForNewRecord", "IdentifierCache.forgetRecordIdentifier()": "classes/identifiercache/methods.html#forgetRecordIdentifier", "IdentifierCache.getOrCreateRecordIdentifier()": "classes/identifiercache/methods.html#getOrCreateRecordIdentifier", "IdentifierCache.updateRecordIdentifier()": "classes/identifiercache/methods.html#updateRecordIdentifier", "Initializers": "applications/initializers.html", "inject()": "functions/ember.@ember/controller/inject.html#inject", "Inspecting Objects via the Container": "ember-inspector/container.html", "Inspecting Routes": "ember-inspector/routes.html", "Installing the Inspector": "ember-inspector/installation.html", "intersect()": "functions/@ember/object/computed/intersect.html#intersect", "Intro to Accessibility": "accessibility/index.html", "Introducing Components": "components/introducing-components.html", "Introduction": "upgrading/current-edition.html", "InvalidError": "classes/invaliderror.html", "inverseFor()": "functions/model/inversefor.html#inverseFor", "invokeHelper()": "functions/@ember/helper/invokehelper.html#invokeHelper", "isArray()": "functions/@ember/array/isarray.html#isArray", "isBlank()": "functions/@ember/utils/isblank.html#isBlank", "isConst()": "functions/@glimmer/tracking/primitives/cache/isconst.html#isConst", "isDestroyed()": "functions/@ember/destroyable/isdestroyed.html#isDestroyed", "isDestroying()": "functions/@ember/destroyable/isdestroying.html#isDestroying", "isEmpty()": "functions/@ember/utils/isempty.html#isEmpty", "isEqual()": "functions/@ember/utils/isequal.html#isEqual", "isHTMLSafe()": "functions/@ember/template/ishtmlsafe.html#isHTMLSafe", "isNone()": "functions/@ember/utils/isnone.html#isNone", "isPresent()": "functions/@ember/utils/ispresent.html#isPresent", "join()": "functions/@ember/runloop/join.html#join", "JSONAPIAdapter": "classes/jsonapiadapter.html", "JSONAPIAdapter (methods)": "classes/jsonapiadapter/methods.html", "JSONAPIAdapter (properties)": "classes/jsonapiadapter/properties.html", "JSONAPIAdapter.buildQuery()": "classes/jsonapiadapter/methods.html#buildQuery", "JSONAPIAdapter.buildURL()": "classes/jsonapiadapter/methods.html#buildURL", "JSONAPIAdapter.coalesceFindRequests": "classes/jsonapiadapter/properties.html#coalesceFindRequests", "JSONAPIAdapter.createRecord()": "classes/jsonapiadapter/methods.html#createRecord", "JSONAPIAdapter.deleteRecord()": "classes/jsonapiadapter/methods.html#deleteRecord", "JSONAPIAdapter.findAll()": "classes/jsonapiadapter/methods.html#findAll", "JSONAPIAdapter.findBelongsTo()": "classes/jsonapiadapter/methods.html#findBelongsTo", "JSONAPIAdapter.findHasMany()": "classes/jsonapiadapter/methods.html#findHasMany", "JSONAPIAdapter.findMany()": "classes/jsonapiadapter/methods.html#findMany", "JSONAPIAdapter.findRecord()": "classes/jsonapiadapter/methods.html#findRecord", "JSONAPIAdapter.generateIdForRecord()": "classes/jsonapiadapter/methods.html#generateIdForRecord", "JSONAPIAdapter.groupRecordsForFindMany()": "classes/jsonapiadapter/methods.html#groupRecordsForFindMany", "JSONAPIAdapter.handleResponse()": "classes/jsonapiadapter/methods.html#handleResponse", "JSONAPIAdapter.headers": "classes/jsonapiadapter/properties.html#headers", "JSONAPIAdapter.host": "classes/jsonapiadapter/properties.html#host", "JSONAPIAdapter.isInvalid()": "classes/jsonapiadapter/methods.html#isInvalid", "JSONAPIAdapter.isSuccess()": "classes/jsonapiadapter/methods.html#isSuccess", "JSONAPIAdapter.namespace": "classes/jsonapiadapter/properties.html#namespace", "JSONAPIAdapter.pathForType()": "classes/jsonapiadapter/methods.html#pathForType", "JSONAPIAdapter.query()": "classes/jsonapiadapter/methods.html#query", "JSONAPIAdapter.queryRecord()": "classes/jsonapiadapter/methods.html#queryRecord", "JSONAPIAdapter.serialize()": "classes/jsonapiadapter/methods.html#serialize", "JSONAPIAdapter.shouldBackgroundReloadAll()": "classes/jsonapiadapter/methods.html#shouldBackgroundReloadAll", "JSONAPIAdapter.shouldBackgroundReloadRecord()": "classes/jsonapiadapter/methods.html#shouldBackgroundReloadRecord", "JSONAPIAdapter.shouldReloadAll()": "classes/jsonapiadapter/methods.html#shouldReloadAll", "JSONAPIAdapter.shouldReloadRecord()": "classes/jsonapiadapter/methods.html#shouldReloadRecord", "JSONAPIAdapter.sortQueryParams()": "classes/jsonapiadapter/methods.html#sortQueryParams", "JSONAPIAdapter.updateRecord()": "classes/jsonapiadapter/methods.html#updateRecord", "JSONAPIAdapter.urlForCreateRecord()": "classes/jsonapiadapter/methods.html#urlForCreateRecord", "JSONAPIAdapter.urlForDeleteRecord()": "classes/jsonapiadapter/methods.html#urlForDeleteRecord", "JSONAPIAdapter.urlForFindAll()": "classes/jsonapiadapter/methods.html#urlForFindAll", "JSONAPIAdapter.urlForFindBelongsTo()": "classes/jsonapiadapter/methods.html#urlForFindBelongsTo", "JSONAPIAdapter.urlForFindHasMany()": "classes/jsonapiadapter/methods.html#urlForFindHasMany", "JSONAPIAdapter.urlForFindMany()": "classes/jsonapiadapter/methods.html#urlForFindMany", "JSONAPIAdapter.urlForFindRecord()": "classes/jsonapiadapter/methods.html#urlForFindRecord", "JSONAPIAdapter.urlForQuery()": "classes/jsonapiadapter/methods.html#urlForQuery", "JSONAPIAdapter.urlForQueryRecord()": "classes/jsonapiadapter/methods.html#urlForQueryRecord", "JSONAPIAdapter.urlForUpdateRecord()": "classes/jsonapiadapter/methods.html#urlForUpdateRecord", "JSONAPIAdapter.useFetch": "classes/jsonapiadapter/properties.html#useFetch", "JSONAPISerializer": "classes/jsonapiserializer.html", "JSONAPISerializer (methods)": "classes/jsonapiserializer/methods.html", "JSONAPISerializer (properties)": "classes/jsonapiserializer/properties.html", "JSONAPISerializer.attrs": "classes/jsonapiserializer/properties.html#attrs", "JSONAPISerializer.extractAttributes()": "classes/jsonapiserializer/methods.html#extractAttributes", "JSONAPISerializer.extractErrors()": "classes/jsonapiserializer/methods.html#extractErrors", "JSONAPISerializer.extractId()": "classes/jsonapiserializer/methods.html#extractId", "JSONAPISerializer.extractMeta()": "classes/jsonapiserializer/methods.html#extractMeta", "JSONAPISerializer.extractPolymorphicRelationship()": "classes/jsonapiserializer/methods.html#extractPolymorphicRelationship", "JSONAPISerializer.extractRelationship()": "classes/jsonapiserializer/methods.html#extractRelationship", "JSONAPISerializer.extractRelationships()": "classes/jsonapiserializer/methods.html#extractRelationships", "JSONAPISerializer.keyForAttribute()": "classes/jsonapiserializer/methods.html#keyForAttribute", "JSONAPISerializer.keyForLink()": "classes/jsonapiserializer/methods.html#keyForLink", "JSONAPISerializer.keyForRelationship()": "classes/jsonapiserializer/methods.html#keyForRelationship", "JSONAPISerializer.modelNameFromPayloadKey()": "classes/jsonapiserializer/methods.html#modelNameFromPayloadKey", "JSONAPISerializer.normalize()": "classes/jsonapiserializer/methods.html#normalize", "JSONAPISerializer.normalizeArrayResponse()": "classes/jsonapiserializer/methods.html#normalizeArrayResponse", "JSONAPISerializer.normalizeCreateRecordResponse()": "classes/jsonapiserializer/methods.html#normalizeCreateRecordResponse", "JSONAPISerializer.normalizeDeleteRecordResponse()": "classes/jsonapiserializer/methods.html#normalizeDeleteRecordResponse", "JSONAPISerializer.normalizeFindAllResponse()": "classes/jsonapiserializer/methods.html#normalizeFindAllResponse", "JSONAPISerializer.normalizeFindBelongsToResponse()": "classes/jsonapiserializer/methods.html#normalizeFindBelongsToResponse", "JSONAPISerializer.normalizeFindHasManyResponse()": "classes/jsonapiserializer/methods.html#normalizeFindHasManyResponse", "JSONAPISerializer.normalizeFindManyResponse()": "classes/jsonapiserializer/methods.html#normalizeFindManyResponse", "JSONAPISerializer.normalizeFindRecordResponse()": "classes/jsonapiserializer/methods.html#normalizeFindRecordResponse", "JSONAPISerializer.normalizeQueryRecordResponse()": "classes/jsonapiserializer/methods.html#normalizeQueryRecordResponse", "JSONAPISerializer.normalizeQueryResponse()": "classes/jsonapiserializer/methods.html#normalizeQueryResponse", "JSONAPISerializer.normalizeResponse()": "classes/jsonapiserializer/methods.html#normalizeResponse", "JSONAPISerializer.normalizeSaveResponse()": "classes/jsonapiserializer/methods.html#normalizeSaveResponse", "JSONAPISerializer.normalizeSingleResponse()": "classes/jsonapiserializer/methods.html#normalizeSingleResponse", "JSONAPISerializer.normalizeUpdateRecordResponse()": "classes/jsonapiserializer/methods.html#normalizeUpdateRecordResponse", "JSONAPISerializer.payloadKeyFromModelName()": "classes/jsonapiserializer/methods.html#payloadKeyFromModelName", "JSONAPISerializer.primaryKey": "classes/jsonapiserializer/properties.html#primaryKey", "JSONAPISerializer.pushPayload()": "classes/jsonapiserializer/methods.html#pushPayload", "JSONAPISerializer.serialize()": "classes/jsonapiserializer/methods.html#serialize", "JSONAPISerializer.serializeAttribute()": "classes/jsonapiserializer/methods.html#serializeAttribute", "JSONAPISerializer.serializeBelongsTo()": "classes/jsonapiserializer/methods.html#serializeBelongsTo", "JSONAPISerializer.serializeHasMany()": "classes/jsonapiserializer/methods.html#serializeHasMany", "JSONAPISerializer.serializeIntoHash()": "classes/jsonapiserializer/methods.html#serializeIntoHash", "JSONAPISerializer.serializePolymorphicType()": "classes/jsonapiserializer/methods.html#serializePolymorphicType", "JSONAPISerializer.shouldSerializeHasMany()": "classes/jsonapiserializer/methods.html#shouldSerializeHasMany", "JSONAPISerializer.store": "classes/jsonapiserializer/properties.html#store", "JSONSerializer": "classes/jsonserializer.html", "JSONSerializer (methods)": "classes/jsonserializer/methods.html", "JSONSerializer (properties)": "classes/jsonserializer/properties.html", "JSONSerializer.attrs": "classes/jsonserializer/properties.html#attrs", "JSONSerializer.extractAttributes()": "classes/jsonserializer/methods.html#extractAttributes", "JSONSerializer.extractErrors()": "classes/jsonserializer/methods.html#extractErrors", "JSONSerializer.extractId()": "classes/jsonserializer/methods.html#extractId", "JSONSerializer.extractMeta()": "classes/jsonserializer/methods.html#extractMeta", "JSONSerializer.extractPolymorphicRelationship()": "classes/jsonserializer/methods.html#extractPolymorphicRelationship", "JSONSerializer.extractRelationship()": "classes/jsonserializer/methods.html#extractRelationship", "JSONSerializer.extractRelationships()": "classes/jsonserializer/methods.html#extractRelationships", "JSONSerializer.keyForAttribute()": "classes/jsonserializer/methods.html#keyForAttribute", "JSONSerializer.keyForLink()": "classes/jsonserializer/methods.html#keyForLink", "JSONSerializer.keyForRelationship()": "classes/jsonserializer/methods.html#keyForRelationship", "JSONSerializer.modelNameFromPayloadKey()": "classes/jsonserializer/methods.html#modelNameFromPayloadKey", "JSONSerializer.normalize()": "classes/jsonserializer/methods.html#normalize", "JSONSerializer.normalizeArrayResponse()": "classes/jsonserializer/methods.html#normalizeArrayResponse", "JSONSerializer.normalizeCreateRecordResponse()": "classes/jsonserializer/methods.html#normalizeCreateRecordResponse", "JSONSerializer.normalizeDeleteRecordResponse()": "classes/jsonserializer/methods.html#normalizeDeleteRecordResponse", "JSONSerializer.normalizeFindAllResponse()": "classes/jsonserializer/methods.html#normalizeFindAllResponse", "JSONSerializer.normalizeFindBelongsToResponse()": "classes/jsonserializer/methods.html#normalizeFindBelongsToResponse", "JSONSerializer.normalizeFindHasManyResponse()": "classes/jsonserializer/methods.html#normalizeFindHasManyResponse", "JSONSerializer.normalizeFindManyResponse()": "classes/jsonserializer/methods.html#normalizeFindManyResponse", "JSONSerializer.normalizeFindRecordResponse()": "classes/jsonserializer/methods.html#normalizeFindRecordResponse", "JSONSerializer.normalizeQueryRecordResponse()": "classes/jsonserializer/methods.html#normalizeQueryRecordResponse", "JSONSerializer.normalizeQueryResponse()": "classes/jsonserializer/methods.html#normalizeQueryResponse", "JSONSerializer.normalizeResponse()": "classes/jsonserializer/methods.html#normalizeResponse", "JSONSerializer.normalizeSaveResponse()": "classes/jsonserializer/methods.html#normalizeSaveResponse", "JSONSerializer.normalizeSingleResponse()": "classes/jsonserializer/methods.html#normalizeSingleResponse", "JSONSerializer.normalizeUpdateRecordResponse()": "classes/jsonserializer/methods.html#normalizeUpdateRecordResponse", "JSONSerializer.primaryKey": "classes/jsonserializer/properties.html#primaryKey", "JSONSerializer.serialize()": "classes/jsonserializer/methods.html#serialize", "JSONSerializer.serializeAttribute()": "classes/jsonserializer/methods.html#serializeAttribute", "JSONSerializer.serializeBelongsTo()": "classes/jsonserializer/methods.html#serializeBelongsTo", "JSONSerializer.serializeHasMany()": "classes/jsonserializer/methods.html#serializeHasMany", "JSONSerializer.serializeIntoHash()": "classes/jsonserializer/methods.html#serializeIntoHash", "JSONSerializer.serializePolymorphicType()": "classes/jsonserializer/methods.html#serializePolymorphicType", "JSONSerializer.shouldSerializeHasMany()": "classes/jsonserializer/methods.html#shouldSerializeHasMany", "JSONSerializer.store": "classes/jsonserializer/properties.html#store", "later()": "functions/@ember/runloop/later.html#later", "Learning Resources": "accessibility/learning-resources.html", "Library Info": "ember-inspector/info.html", "Linking Between Routes": "routing/linking-between-routes.html", "Loading / Error Substates": "routing/loading-and-error-substates.html", "Looping Through Lists": "components/looping-through-lists.html", "lt()": "functions/@ember/object/computed/lt.html#lt", "lte()": "functions/@ember/object/computed/lte.html#lte", "Making API Requests": "in-depth-topics/making-api-requests.html", "Managing Dependencies": "addons-and-dependencies/index.html", "ManyArray": "classes/manyarray.html", "ManyArray (methods)": "classes/manyarray/methods.html", "ManyArray (properties)": "classes/manyarray/properties.html", "ManyArray.createRecord()": "classes/manyarray/methods.html#createRecord", "ManyArray.isLoaded": "classes/manyarray/properties.html#isLoaded", "ManyArray.links": "classes/manyarray/properties.html#links", "ManyArray.meta": "classes/manyarray/properties.html#meta", "ManyArray.reload()": "classes/manyarray/methods.html#reload", "ManyArray.save()": "classes/manyarray/methods.html#save", "map()": "functions/rsvp/map.html#map", "mapBy()": "functions/@ember/object/computed/mapby.html#mapBy", "match()": "functions/@ember/object/computed/match.html#match", "max()": "functions/@ember/object/computed/max.html#max", "memoTransact()": "functions/@ember-data/tracking/memotransact.html#memoTransact", "min()": "functions/@ember/object/computed/min.html#min", "MinimumAdapterInterface": "classes/minimumadapterinterface.html", "MinimumAdapterInterface (methods)": "classes/minimumadapterinterface/methods.html", "MinimumAdapterInterface (properties)": "classes/minimumadapterinterface/properties.html", "MinimumAdapterInterface.coalesceFindRequests [OPTIONAL]": "classes/minimumadapterinterface/properties.html#coalesceFindRequests [OPTIONAL]", "MinimumAdapterInterface.createRecord()": "classes/minimumadapterinterface/methods.html#createRecord", "MinimumAdapterInterface.deleteRecord()": "classes/minimumadapterinterface/methods.html#deleteRecord", "MinimumAdapterInterface.destroy [OPTIONAL]()": "classes/minimumadapterinterface/methods.html#destroy [OPTIONAL]", "MinimumAdapterInterface.findAll()": "classes/minimumadapterinterface/methods.html#findAll", "MinimumAdapterInterface.findBelongsTo [OPTIONAL]()": "classes/minimumadapterinterface/methods.html#findBelongsTo [OPTIONAL]", "MinimumAdapterInterface.findhasMany [OPTIONAL]()": "classes/minimumadapterinterface/methods.html#findhasMany [OPTIONAL]", "MinimumAdapterInterface.findMany [OPTIONAL]()": "classes/minimumadapterinterface/methods.html#findMany [OPTIONAL]", "MinimumAdapterInterface.findRecord()": "classes/minimumadapterinterface/methods.html#findRecord", "MinimumAdapterInterface.generateIdForRecord [OPTIONAL]()": "classes/minimumadapterinterface/methods.html#generateIdForRecord [OPTIONAL]", "MinimumAdapterInterface.groupRecordsForFindMany [OPTIONAL]()": "classes/minimumadapterinterface/methods.html#groupRecordsForFindMany [OPTIONAL]", "MinimumAdapterInterface.query()": "classes/minimumadapterinterface/methods.html#query", "MinimumAdapterInterface.queryRecord()": "classes/minimumadapterinterface/methods.html#queryRecord", "MinimumAdapterInterface.shouldBackgroundReloadAll [OPTIONAL]()": "classes/minimumadapterinterface/methods.html#shouldBackgroundReloadAll [OPTIONAL]", "MinimumAdapterInterface.shouldBackgroundReloadRecord [OPTIONAL]()": "classes/minimumadapterinterface/methods.html#shouldBackgroundReloadRecord [OPTIONAL]", "MinimumAdapterInterface.shouldReloadAll [OPTIONAL]()": "classes/minimumadapterinterface/methods.html#shouldReloadAll [OPTIONAL]", "MinimumAdapterInterface.shouldReloadRecord [OPTIONAL]()": "classes/minimumadapterinterface/methods.html#shouldReloadRecord [OPTIONAL]", "MinimumAdapterInterface.updateRecord()": "classes/minimumadapterinterface/methods.html#updateRecord", "MinimumSerializerInterface": "classes/minimumserializerinterface.html", "MinimumSerializerInterface (methods)": "classes/minimumserializerinterface/methods.html", "MinimumSerializerInterface.destroy [OPTIONAL]()": "classes/minimumserializerinterface/methods.html#destroy [OPTIONAL]", "MinimumSerializerInterface.normalize [OPTIONAL]()": "classes/minimumserializerinterface/methods.html#normalize [OPTIONAL]", "MinimumSerializerInterface.normalizeResponse()": "classes/minimumserializerinterface/methods.html#normalizeResponse", "MinimumSerializerInterface.pushPayload [OPTIONAL]()": "classes/minimumserializerinterface/methods.html#pushPayload [OPTIONAL]", "MinimumSerializerInterface.serialize()": "classes/minimumserializerinterface/methods.html#serialize", "MinimumSerializerInterface.serializeIntoHash [OPTIONAL]()": "classes/minimumserializerinterface/methods.html#serializeIntoHash [OPTIONAL]", "Mixin": "classes/mixin.html", "Mixin (methods)": "classes/mixin/methods.html", "Model": "classes/model.html", "Model (methods)": "classes/model/methods.html", "Model (properties)": "classes/model/properties.html", "Model.adapterError": "classes/model/properties.html#adapterError", "Model.attributes": "classes/model/properties.html#attributes", "Model.belongsTo()": "classes/model/methods.html#belongsTo", "Model.changedAttributes()": "classes/model/methods.html#changedAttributes", "Model.deleteRecord()": "classes/model/methods.html#deleteRecord", "Model.destroyRecord()": "classes/model/methods.html#destroyRecord", "Model.dirtyType": "classes/model/properties.html#dirtyType", "Model.eachAttribute()": "classes/model/methods.html#eachAttribute", "Model.eachRelatedType()": "classes/model/methods.html#eachRelatedType", "Model.eachRelationship()": "classes/model/methods.html#eachRelationship", "Model.eachTransformedAttribute()": "classes/model/methods.html#eachTransformedAttribute", "Model.errors": "classes/model/properties.html#errors", "Model.fields": "classes/model/properties.html#fields", "Model.hasDirtyAttributes": "classes/model/properties.html#hasDirtyAttributes", "Model.hasMany()": "classes/model/methods.html#hasMany", "Model.id": "classes/model/properties.html#id", "Model.inverseFor()": "classes/model/methods.html#inverseFor", "Model.isDeleted": "classes/model/properties.html#isDeleted", "Model.isEmpty": "classes/model/properties.html#isEmpty", "Model.isError": "classes/model/properties.html#isError", "Model.isLoaded": "classes/model/properties.html#isLoaded", "Model.isLoading": "classes/model/properties.html#isLoading", "Model.isNew": "classes/model/properties.html#isNew", "Model.isReloading": "classes/model/properties.html#isReloading", "Model.isSaving": "classes/model/properties.html#isSaving", "Model.isValid": "classes/model/properties.html#isValid", "Model.modelName": "classes/model/properties.html#modelName", "Model.relatedTypes": "classes/model/properties.html#relatedTypes", "Model.relationshipNames": "classes/model/properties.html#relationshipNames", "Model.relationships": "classes/model/properties.html#relationships", "Model.relationshipsByName": "classes/model/properties.html#relationshipsByName", "Model.reload()": "classes/model/methods.html#reload", "Model.rollbackAttributes()": "classes/model/methods.html#rollbackAttributes", "Model.save()": "classes/model/methods.html#save", "Model.serialize()": "classes/model/methods.html#serialize", "Model.store": "classes/model/properties.html#store", "Model.toString()": "classes/model/methods.html#toString", "Model.transformedAttributes": "classes/model/properties.html#transformedAttributes", "Model.typeForRelationship()": "classes/model/methods.html#typeForRelationship", "Model.unloadRecord()": "classes/model/methods.html#unloadRecord", "MutableArray": "classes/mutablearray.html", "MutableArray (methods)": "classes/mutablearray/methods.html", "MutableArray (properties)": "classes/mutablearray/properties.html", "MutableArray.[]": "classes/mutablearray/properties.html#[]", "MutableArray.addObject()": "classes/mutablearray/methods.html#addObject", "MutableArray.addObjects()": "classes/mutablearray/methods.html#addObjects", "MutableArray.any()": "classes/mutablearray/methods.html#any", "MutableArray.clear()": "classes/mutablearray/methods.html#clear", "MutableArray.compact()": "classes/mutablearray/methods.html#compact", "MutableArray.every()": "classes/mutablearray/methods.html#every", "MutableArray.filter()": "classes/mutablearray/methods.html#filter", "MutableArray.filterBy()": "classes/mutablearray/methods.html#filterBy", "MutableArray.find()": "classes/mutablearray/methods.html#find", "MutableArray.findBy()": "classes/mutablearray/methods.html#findBy", "MutableArray.firstObject": "classes/mutablearray/properties.html#firstObject", "MutableArray.forEach()": "classes/mutablearray/methods.html#forEach", "MutableArray.getEach()": "classes/mutablearray/methods.html#getEach", "MutableArray.includes()": "classes/mutablearray/methods.html#includes", "MutableArray.indexOf()": "classes/mutablearray/methods.html#indexOf", "MutableArray.insertAt()": "classes/mutablearray/methods.html#insertAt", "MutableArray.invoke()": "classes/mutablearray/methods.html#invoke", "MutableArray.isAny()": "classes/mutablearray/methods.html#isAny", "MutableArray.isEvery()": "classes/mutablearray/methods.html#isEvery", "MutableArray.lastIndexOf()": "classes/mutablearray/methods.html#lastIndexOf", "MutableArray.lastObject": "classes/mutablearray/properties.html#lastObject", "MutableArray.length": "classes/mutablearray/properties.html#length", "MutableArray.map()": "classes/mutablearray/methods.html#map", "MutableArray.mapBy()": "classes/mutablearray/methods.html#mapBy", "MutableArray.objectAt()": "classes/mutablearray/methods.html#objectAt", "MutableArray.objectsAt()": "classes/mutablearray/methods.html#objectsAt", "MutableArray.popObject()": "classes/mutablearray/methods.html#popObject", "MutableArray.pushObject()": "classes/mutablearray/methods.html#pushObject", "MutableArray.pushObjects()": "classes/mutablearray/methods.html#pushObjects", "MutableArray.reduce()": "classes/mutablearray/methods.html#reduce", "MutableArray.reject()": "classes/mutablearray/methods.html#reject", "MutableArray.rejectBy()": "classes/mutablearray/methods.html#rejectBy", "MutableArray.removeAt()": "classes/mutablearray/methods.html#removeAt", "MutableArray.removeObject()": "classes/mutablearray/methods.html#removeObject", "MutableArray.removeObjects()": "classes/mutablearray/methods.html#removeObjects", "MutableArray.replace()": "classes/mutablearray/methods.html#replace", "MutableArray.reverseObjects()": "classes/mutablearray/methods.html#reverseObjects", "MutableArray.setEach()": "classes/mutablearray/methods.html#setEach", "MutableArray.setObjects()": "classes/mutablearray/methods.html#setObjects", "MutableArray.shiftObject()": "classes/mutablearray/methods.html#shiftObject", "MutableArray.slice()": "classes/mutablearray/methods.html#slice", "MutableArray.sortBy()": "classes/mutablearray/methods.html#sortBy", "MutableArray.toArray()": "classes/mutablearray/methods.html#toArray", "MutableArray.uniq()": "classes/mutablearray/methods.html#uniq", "MutableArray.uniqBy()": "classes/mutablearray/methods.html#uniqBy", "MutableArray.unshiftObject()": "classes/mutablearray/methods.html#unshiftObject", "MutableArray.unshiftObjects()": "classes/mutablearray/methods.html#unshiftObjects", "MutableArray.without()": "classes/mutablearray/methods.html#without", "Namespace": "classes/namespace.html", "Namespace (methods)": "classes/namespace/methods.html", "Namespace (properties)": "classes/namespace/properties.html", "Namespace.addObserver()": "classes/namespace/methods.html#addObserver", "Namespace.cacheFor()": "classes/namespace/methods.html#cacheFor", "Namespace.concatenatedProperties": "classes/namespace/properties.html#concatenatedProperties", "Namespace.decrementProperty()": "classes/namespace/methods.html#decrementProperty", "Namespace.destroy()": "classes/namespace/methods.html#destroy", "Namespace.get()": "classes/namespace/methods.html#get", "Namespace.getProperties()": "classes/namespace/methods.html#getProperties", "Namespace.incrementProperty()": "classes/namespace/methods.html#incrementProperty", "Namespace.init()": "classes/namespace/methods.html#init", "Namespace.isDestroyed": "classes/namespace/properties.html#isDestroyed", "Namespace.isDestroying": "classes/namespace/properties.html#isDestroying", "Namespace.mergedProperties": "classes/namespace/properties.html#mergedProperties", "Namespace.notifyPropertyChange()": "classes/namespace/methods.html#notifyPropertyChange", "Namespace.removeObserver()": "classes/namespace/methods.html#removeObserver", "Namespace.set()": "classes/namespace/methods.html#set", "Namespace.setProperties()": "classes/namespace/methods.html#setProperties", "Namespace.toggleProperty()": "classes/namespace/methods.html#toggleProperty", "Namespace.toString()": "classes/namespace/methods.html#toString", "Namespace.willDestroy()": "classes/namespace/methods.html#willDestroy", "Native Classes": "upgrading/current-edition/native-classes.html", "Native Classes In-Depth": "in-depth-topics/native-classes-in-depth.html", "next()": "functions/@ember/runloop/next.html#next", "none()": "functions/@ember/object/computed/none.html#none", "NoneLocation": "classes/nonelocation.html", "NoneLocation (methods)": "classes/nonelocation/methods.html", "NoneLocation (properties)": "classes/nonelocation/properties.html", "NoneLocation.addObserver()": "classes/nonelocation/methods.html#addObserver", "NoneLocation.cacheFor()": "classes/nonelocation/methods.html#cacheFor", "NoneLocation.concatenatedProperties": "classes/nonelocation/properties.html#concatenatedProperties", "NoneLocation.decrementProperty()": "classes/nonelocation/methods.html#decrementProperty", "NoneLocation.destroy()": "classes/nonelocation/methods.html#destroy", "NoneLocation.get()": "classes/nonelocation/methods.html#get", "NoneLocation.getProperties()": "classes/nonelocation/methods.html#getProperties", "NoneLocation.incrementProperty()": "classes/nonelocation/methods.html#incrementProperty", "NoneLocation.init()": "classes/nonelocation/methods.html#init", "NoneLocation.isDestroyed": "classes/nonelocation/properties.html#isDestroyed", "NoneLocation.isDestroying": "classes/nonelocation/properties.html#isDestroying", "NoneLocation.mergedProperties": "classes/nonelocation/properties.html#mergedProperties", "NoneLocation.notifyPropertyChange()": "classes/nonelocation/methods.html#notifyPropertyChange", "NoneLocation.removeObserver()": "classes/nonelocation/methods.html#removeObserver", "NoneLocation.set()": "classes/nonelocation/methods.html#set", "NoneLocation.setProperties()": "classes/nonelocation/methods.html#setProperties", "NoneLocation.toggleProperty()": "classes/nonelocation/methods.html#toggleProperty", "NoneLocation.toString()": "classes/nonelocation/methods.html#toString", "NoneLocation.willDestroy()": "classes/nonelocation/methods.html#willDestroy", "normalizeModelName()": "functions/@ember-data/store/normalizemodelname.html#normalizeModelName", "not()": "functions/@ember/object/computed/not.html#not", "notEmpty()": "functions/@ember/object/computed/notempty.html#notEmpty", "NotFoundError": "classes/notfounderror.html", "NumberTransform": "classes/numbertransform.html", "NumberTransform (methods)": "classes/numbertransform/methods.html", "NumberTransform.deserialize()": "classes/numbertransform/methods.html#deserialize", "NumberTransform.serialize()": "classes/numbertransform/methods.html#serialize", "Object Inspector": "ember-inspector/object-inspector.html", "ObjectProxy": "classes/objectproxy.html", "ObjectProxy (methods)": "classes/objectproxy/methods.html", "ObjectProxy (properties)": "classes/objectproxy/properties.html", "ObjectProxy.addObserver()": "classes/objectproxy/methods.html#addObserver", "ObjectProxy.cacheFor()": "classes/objectproxy/methods.html#cacheFor", "ObjectProxy.concatenatedProperties": "classes/objectproxy/properties.html#concatenatedProperties", "ObjectProxy.content": "classes/objectproxy/properties.html#content", "ObjectProxy.decrementProperty()": "classes/objectproxy/methods.html#decrementProperty", "ObjectProxy.destroy()": "classes/objectproxy/methods.html#destroy", "ObjectProxy.get()": "classes/objectproxy/methods.html#get", "ObjectProxy.getProperties()": "classes/objectproxy/methods.html#getProperties", "ObjectProxy.incrementProperty()": "classes/objectproxy/methods.html#incrementProperty", "ObjectProxy.init()": "classes/objectproxy/methods.html#init", "ObjectProxy.isDestroyed": "classes/objectproxy/properties.html#isDestroyed", "ObjectProxy.isDestroying": "classes/objectproxy/properties.html#isDestroying", "ObjectProxy.mergedProperties": "classes/objectproxy/properties.html#mergedProperties", "ObjectProxy.notifyPropertyChange()": "classes/objectproxy/methods.html#notifyPropertyChange", "ObjectProxy.removeObserver()": "classes/objectproxy/methods.html#removeObserver", "ObjectProxy.set()": "classes/objectproxy/methods.html#set", "ObjectProxy.setProperties()": "classes/objectproxy/methods.html#setProperties", "ObjectProxy.toggleProperty()": "classes/objectproxy/methods.html#toggleProperty", "ObjectProxy.toString()": "classes/objectproxy/methods.html#toString", "ObjectProxy.willDestroy()": "classes/objectproxy/methods.html#willDestroy", "Observable": "classes/observable.html", "Observable (methods)": "classes/observable/methods.html", "Observable.addObserver()": "classes/observable/methods.html#addObserver", "Observable.cacheFor()": "classes/observable/methods.html#cacheFor", "Observable.decrementProperty()": "classes/observable/methods.html#decrementProperty", "Observable.get()": "classes/observable/methods.html#get", "Observable.getProperties()": "classes/observable/methods.html#getProperties", "Observable.incrementProperty()": "classes/observable/methods.html#incrementProperty", "Observable.notifyPropertyChange()": "classes/observable/methods.html#notifyPropertyChange", "Observable.removeObserver()": "classes/observable/methods.html#removeObserver", "Observable.set()": "classes/observable/methods.html#set", "Observable.setProperties()": "classes/observable/methods.html#setProperties", "Observable.toggleProperty()": "classes/observable/methods.html#toggleProperty", "observer()": "functions/@ember/object/observer.html#observer", "on()": "functions/@ember/object/evented/on.html#on", "once()": "functions/@ember/runloop/once.html#once", "oneWay()": "functions/@ember/object/computed/oneway.html#oneWay", "Optional Features": "configuring-ember/optional-features.html", "or()": "functions/@ember/object/computed/or.html#or", "Overview": "services/index.html", "Page Template Considerations": "accessibility/page-template-considerations.html", "Patterns for Actions": "in-depth-topics/patterns-for-actions.html", "Patterns for Components": "in-depth-topics/patterns-for-components.html", "Preventing and Retrying Transitions": "routing/preventing-and-retrying-transitions.html", "Promise": "classes/promise.html", "Promise (methods)": "classes/promise/methods.html", "Promise.all()": "classes/promise/methods.html#all", "Promise.catch()": "classes/promise/methods.html#catch", "Promise.finally()": "classes/promise/methods.html#finally", "Promise.race()": "classes/promise/methods.html#race", "Promise.reject()": "classes/promise/methods.html#reject", "Promise.resolve()": "classes/promise/methods.html#resolve", "Promise.then()": "classes/promise/methods.html#then", "PromiseArray": "classes/promisearray.html", "PromiseManyArray": "classes/promisemanyarray.html", "PromiseManyArray (methods)": "classes/promisemanyarray/methods.html", "PromiseManyArray (properties)": "classes/promisemanyarray/properties.html", "PromiseManyArray.catch()": "classes/promisemanyarray/methods.html#catch", "PromiseManyArray.finally()": "classes/promisemanyarray/methods.html#finally", "PromiseManyArray.isFulfilled": "classes/promisemanyarray/properties.html#isFulfilled", "PromiseManyArray.isPending": "classes/promisemanyarray/properties.html#isPending", "PromiseManyArray.isRejected": "classes/promisemanyarray/properties.html#isRejected", "PromiseManyArray.isSettled": "classes/promisemanyarray/properties.html#isSettled", "PromiseManyArray.length": "classes/promisemanyarray/properties.html#length", "PromiseManyArray.links": "classes/promisemanyarray/properties.html#links", "PromiseManyArray.meta": "classes/promisemanyarray/properties.html#meta", "PromiseManyArray.reload()": "classes/promisemanyarray/methods.html#reload", "PromiseManyArray.then()": "classes/promisemanyarray/methods.html#then", "PromiseObject": "classes/promiseobject.html", "PromiseProxyMixin": "classes/promiseproxymixin.html", "PromiseProxyMixin (methods)": "classes/promiseproxymixin/methods.html", "PromiseProxyMixin (properties)": "classes/promiseproxymixin/properties.html", "PromiseProxyMixin.catch()": "classes/promiseproxymixin/methods.html#catch", "PromiseProxyMixin.finally()": "classes/promiseproxymixin/methods.html#finally", "PromiseProxyMixin.isFulfilled": "classes/promiseproxymixin/properties.html#isFulfilled", "PromiseProxyMixin.isPending": "classes/promiseproxymixin/properties.html#isPending", "PromiseProxyMixin.isRejected": "classes/promiseproxymixin/properties.html#isRejected", "PromiseProxyMixin.isSettled": "classes/promiseproxymixin/properties.html#isSettled", "PromiseProxyMixin.promise": "classes/promiseproxymixin/properties.html#promise", "PromiseProxyMixin.reason": "classes/promiseproxymixin/properties.html#reason", "PromiseProxyMixin.then()": "classes/promiseproxymixin/methods.html#then", "Pushing Records into the Store": "models/pushing-records-into-the-store.html", "Query Parameters": "routing/query-params.html", "Quick Start": "getting-started/quick-start.html", "race()": "functions/rsvp/race.html#race", "readOnly()": "functions/@ember/object/computed/readonly.html#readOnly", "reads()": "functions/@ember/object/computed/reads.html#reads", "RecordArray": "classes/recordarray.html", "RecordArray (methods)": "classes/recordarray/methods.html", "RecordArray (properties)": "classes/recordarray/properties.html", "RecordArray.isUpdating": "classes/recordarray/properties.html#isUpdating", "RecordArray.save()": "classes/recordarray/methods.html#save", "RecordArray.update()": "classes/recordarray/methods.html#update", "RecordDataDefault": "classes/recorddatadefault.html", "RecordDataDefault (methods)": "classes/recorddatadefault/methods.html", "RecordDataManager": "classes/recorddatamanager.html", "RecordDataManager (methods)": "classes/recorddatamanager/methods.html", "RecordDataManager.clientDidCreate()": "classes/recorddatamanager/methods.html#clientDidCreate", "RecordDataManager.commitWasRejected()": "classes/recorddatamanager/methods.html#commitWasRejected", "RecordDataManager.didCommit()": "classes/recorddatamanager/methods.html#didCommit", "RecordDataManager.getAttr()": "classes/recorddatamanager/methods.html#getAttr", "RecordDataManager.getErrors()": "classes/recorddatamanager/methods.html#getErrors", "RecordDataManager.getRelationship()": "classes/recorddatamanager/methods.html#getRelationship", "RecordDataManager.hasChangedAttrs()": "classes/recorddatamanager/methods.html#hasChangedAttrs", "RecordDataManager.isDeleted()": "classes/recorddatamanager/methods.html#isDeleted", "RecordDataManager.isDeletionCommitted()": "classes/recorddatamanager/methods.html#isDeletionCommitted", "RecordDataManager.isEmpty()": "classes/recorddatamanager/methods.html#isEmpty", "RecordDataManager.isNew()": "classes/recorddatamanager/methods.html#isNew", "RecordDataManager.pushData()": "classes/recorddatamanager/methods.html#pushData", "RecordDataManager.rollbackAttrs()": "classes/recorddatamanager/methods.html#rollbackAttrs", "RecordDataManager.setAttr()": "classes/recorddatamanager/methods.html#setAttr", "RecordDataManager.setIsDeleted()": "classes/recorddatamanager/methods.html#setIsDeleted", "RecordDataManager.sync()": "classes/recorddatamanager/methods.html#sync", "RecordDataManager.unloadRecord()": "classes/recorddatamanager/methods.html#unloadRecord", "RecordDataManager.update()": "classes/recorddatamanager/methods.html#update", "RecordDataManager.willCommit()": "classes/recorddatamanager/methods.html#willCommit", "RecordDataStoreWrapper": "classes/recorddatastorewrapper.html", "RecordDataStoreWrapper (methods)": "classes/recorddatastorewrapper/methods.html", "RecordDataStoreWrapper (properties)": "classes/recorddatastorewrapper/properties.html", "RecordDataStoreWrapper.disconnectRecord()": "classes/recorddatastorewrapper/methods.html#disconnectRecord", "RecordDataStoreWrapper.getSchemaDefinitionService()": "classes/recorddatastorewrapper/methods.html#getSchemaDefinitionService", "RecordDataStoreWrapper.hasRecord()": "classes/recorddatastorewrapper/methods.html#hasRecord", "RecordDataStoreWrapper.identifierCache": "classes/recorddatastorewrapper/properties.html#identifierCache", "RecordDataStoreWrapper.notifyChange()": "classes/recorddatastorewrapper/methods.html#notifyChange", "RecordDataStoreWrapper.recordDataFor()": "classes/recorddatastorewrapper/methods.html#recordDataFor", "RecordDataStoreWrapper.setRecordId()": "classes/recorddatastorewrapper/methods.html#setRecordId", "recordIdentifierFor()": "functions/@ember-data/store/recordidentifierfor.html#recordIdentifierFor", "RecordReference": "classes/recordreference.html", "RecordReference (methods)": "classes/recordreference/methods.html", "RecordReference.id()": "classes/recordreference/methods.html#id", "RecordReference.identifier()": "classes/recordreference/methods.html#identifier", "RecordReference.load()": "classes/recordreference/methods.html#load", "RecordReference.push()": "classes/recordreference/methods.html#push", "RecordReference.reload()": "classes/recordreference/methods.html#reload", "RecordReference.remoteType()": "classes/recordreference/methods.html#remoteType", "RecordReference.value()": "classes/recordreference/methods.html#value", "Redirecting": "routing/redirection.html", "registerDeprecationHandler()": "functions/@ember/debug/registerdeprecationhandler.html#registerDeprecationHandler", "registerDestructor()": "functions/@ember/destroyable/registerdestructor.html#registerDestructor", "registerHelper()": "functions/@ember/test/registerhelper.html#registerHelper", "registerWaiter()": "functions/@ember/test/registerwaiter.html#registerWaiter", "registerWarnHandler()": "functions/@ember/debug/registerwarnhandler.html#registerWarnHandler", "RegistryProxyMixin": "classes/registryproxymixin.html", "RegistryProxyMixin (methods)": "classes/registryproxymixin/methods.html", "RegistryProxyMixin.hasRegistration()": "classes/registryproxymixin/methods.html#hasRegistration", "RegistryProxyMixin.register()": "classes/registryproxymixin/methods.html#register", "RegistryProxyMixin.registeredOption()": "classes/registryproxymixin/methods.html#registeredOption", "RegistryProxyMixin.registeredOptions()": "classes/registryproxymixin/methods.html#registeredOptions", "RegistryProxyMixin.registeredOptionsForType()": "classes/registryproxymixin/methods.html#registeredOptionsForType", "RegistryProxyMixin.registerOptions()": "classes/registryproxymixin/methods.html#registerOptions", "RegistryProxyMixin.registerOptionsForType()": "classes/registryproxymixin/methods.html#registerOptionsForType", "RegistryProxyMixin.resolveRegistration()": "classes/registryproxymixin/methods.html#resolveRegistration", "RegistryProxyMixin.unregister()": "classes/registryproxymixin/methods.html#unregister", "reject()": "functions/rsvp/reject.html#reject", "Relationships": "models/relationships.html", "removeListener()": "functions/@ember/object/events/removelistener.html#removeListener", "removeObserver()": "functions/@ember/object/observers/removeobserver.html#removeObserver", "Renderer": "classes/renderer.html", "Renderer (methods)": "classes/renderer/methods.html", "Renderer.renderSettled()": "classes/renderer/methods.html#renderSettled", "Rendering a Template": "routing/rendering-a-template.html", "Rendering Performance": "ember-inspector/render-performance.html", "reopen()": "functions/@ember/object/reopen.html#reopen", "reopenClass()": "functions/@ember/object/reopenclass.html#reopenClass", "RequestManager": "classes/requestmanager.html", "RequestManager (methods)": "classes/requestmanager/methods.html", "RequestManager.request()": "classes/requestmanager/methods.html#request", "RequestManager.use()": "classes/requestmanager/methods.html#use", "resolve()": "functions/rsvp/resolve.html#resolve", "RESTAdapter": "classes/restadapter.html", "RESTAdapter (methods)": "classes/restadapter/methods.html", "RESTAdapter (properties)": "classes/restadapter/properties.html", "RESTAdapter.buildQuery()": "classes/restadapter/methods.html#buildQuery", "RESTAdapter.buildURL()": "classes/restadapter/methods.html#buildURL", "RESTAdapter.coalesceFindRequests": "classes/restadapter/properties.html#coalesceFindRequests", "RESTAdapter.createRecord()": "classes/restadapter/methods.html#createRecord", "RESTAdapter.deleteRecord()": "classes/restadapter/methods.html#deleteRecord", "RESTAdapter.findAll()": "classes/restadapter/methods.html#findAll", "RESTAdapter.findBelongsTo()": "classes/restadapter/methods.html#findBelongsTo", "RESTAdapter.findHasMany()": "classes/restadapter/methods.html#findHasMany", "RESTAdapter.findMany()": "classes/restadapter/methods.html#findMany", "RESTAdapter.findRecord()": "classes/restadapter/methods.html#findRecord", "RESTAdapter.generateIdForRecord()": "classes/restadapter/methods.html#generateIdForRecord", "RESTAdapter.groupRecordsForFindMany()": "classes/restadapter/methods.html#groupRecordsForFindMany", "RESTAdapter.handleResponse()": "classes/restadapter/methods.html#handleResponse", "RESTAdapter.headers": "classes/restadapter/properties.html#headers", "RESTAdapter.host": "classes/restadapter/properties.html#host", "RESTAdapter.isInvalid()": "classes/restadapter/methods.html#isInvalid", "RESTAdapter.isSuccess()": "classes/restadapter/methods.html#isSuccess", "RESTAdapter.namespace": "classes/restadapter/properties.html#namespace", "RESTAdapter.pathForType()": "classes/restadapter/methods.html#pathForType", "RESTAdapter.query()": "classes/restadapter/methods.html#query", "RESTAdapter.queryRecord()": "classes/restadapter/methods.html#queryRecord", "RESTAdapter.serialize()": "classes/restadapter/methods.html#serialize", "RESTAdapter.shouldBackgroundReloadAll()": "classes/restadapter/methods.html#shouldBackgroundReloadAll", "RESTAdapter.shouldBackgroundReloadRecord()": "classes/restadapter/methods.html#shouldBackgroundReloadRecord", "RESTAdapter.shouldReloadAll()": "classes/restadapter/methods.html#shouldReloadAll", "RESTAdapter.shouldReloadRecord()": "classes/restadapter/methods.html#shouldReloadRecord", "RESTAdapter.sortQueryParams()": "classes/restadapter/methods.html#sortQueryParams", "RESTAdapter.updateRecord()": "classes/restadapter/methods.html#updateRecord", "RESTAdapter.urlForCreateRecord()": "classes/restadapter/methods.html#urlForCreateRecord", "RESTAdapter.urlForDeleteRecord()": "classes/restadapter/methods.html#urlForDeleteRecord", "RESTAdapter.urlForFindAll()": "classes/restadapter/methods.html#urlForFindAll", "RESTAdapter.urlForFindBelongsTo()": "classes/restadapter/methods.html#urlForFindBelongsTo", "RESTAdapter.urlForFindHasMany()": "classes/restadapter/methods.html#urlForFindHasMany", "RESTAdapter.urlForFindMany()": "classes/restadapter/methods.html#urlForFindMany", "RESTAdapter.urlForFindRecord()": "classes/restadapter/methods.html#urlForFindRecord", "RESTAdapter.urlForQuery()": "classes/restadapter/methods.html#urlForQuery", "RESTAdapter.urlForQueryRecord()": "classes/restadapter/methods.html#urlForQueryRecord", "RESTAdapter.urlForUpdateRecord()": "classes/restadapter/methods.html#urlForUpdateRecord", "RESTAdapter.useFetch": "classes/restadapter/properties.html#useFetch", "RESTSerializer": "classes/restserializer.html", "RESTSerializer (methods)": "classes/restserializer/methods.html", "RESTSerializer (properties)": "classes/restserializer/properties.html", "RESTSerializer.attrs": "classes/restserializer/properties.html#attrs", "RESTSerializer.extractAttributes()": "classes/restserializer/methods.html#extractAttributes", "RESTSerializer.extractErrors()": "classes/restserializer/methods.html#extractErrors", "RESTSerializer.extractId()": "classes/restserializer/methods.html#extractId", "RESTSerializer.extractMeta()": "classes/restserializer/methods.html#extractMeta", "RESTSerializer.extractPolymorphicRelationship()": "classes/restserializer/methods.html#extractPolymorphicRelationship", "RESTSerializer.extractRelationship()": "classes/restserializer/methods.html#extractRelationship", "RESTSerializer.extractRelationships()": "classes/restserializer/methods.html#extractRelationships", "RESTSerializer.keyForAttribute()": "classes/restserializer/methods.html#keyForAttribute", "RESTSerializer.keyForLink()": "classes/restserializer/methods.html#keyForLink", "RESTSerializer.keyForPolymorphicType()": "classes/restserializer/methods.html#keyForPolymorphicType", "RESTSerializer.keyForRelationship()": "classes/restserializer/methods.html#keyForRelationship", "RESTSerializer.modelNameFromPayloadKey()": "classes/restserializer/methods.html#modelNameFromPayloadKey", "RESTSerializer.normalize()": "classes/restserializer/methods.html#normalize", "RESTSerializer.normalizeArrayResponse()": "classes/restserializer/methods.html#normalizeArrayResponse", "RESTSerializer.normalizeCreateRecordResponse()": "classes/restserializer/methods.html#normalizeCreateRecordResponse", "RESTSerializer.normalizeDeleteRecordResponse()": "classes/restserializer/methods.html#normalizeDeleteRecordResponse", "RESTSerializer.normalizeFindAllResponse()": "classes/restserializer/methods.html#normalizeFindAllResponse", "RESTSerializer.normalizeFindBelongsToResponse()": "classes/restserializer/methods.html#normalizeFindBelongsToResponse", "RESTSerializer.normalizeFindHasManyResponse()": "classes/restserializer/methods.html#normalizeFindHasManyResponse", "RESTSerializer.normalizeFindManyResponse()": "classes/restserializer/methods.html#normalizeFindManyResponse", "RESTSerializer.normalizeFindRecordResponse()": "classes/restserializer/methods.html#normalizeFindRecordResponse", "RESTSerializer.normalizeQueryRecordResponse()": "classes/restserializer/methods.html#normalizeQueryRecordResponse", "RESTSerializer.normalizeQueryResponse()": "classes/restserializer/methods.html#normalizeQueryResponse", "RESTSerializer.normalizeResponse()": "classes/restserializer/methods.html#normalizeResponse", "RESTSerializer.normalizeSaveResponse()": "classes/restserializer/methods.html#normalizeSaveResponse", "RESTSerializer.normalizeSingleResponse()": "classes/restserializer/methods.html#normalizeSingleResponse", "RESTSerializer.normalizeUpdateRecordResponse()": "classes/restserializer/methods.html#normalizeUpdateRecordResponse", "RESTSerializer.payloadKeyFromModelName()": "classes/restserializer/methods.html#payloadKeyFromModelName", "RESTSerializer.primaryKey": "classes/restserializer/properties.html#primaryKey", "RESTSerializer.pushPayload()": "classes/restserializer/methods.html#pushPayload", "RESTSerializer.serialize()": "classes/restserializer/methods.html#serialize", "RESTSerializer.serializeAttribute()": "classes/restserializer/methods.html#serializeAttribute", "RESTSerializer.serializeBelongsTo()": "classes/restserializer/methods.html#serializeBelongsTo", "RESTSerializer.serializeHasMany()": "classes/restserializer/methods.html#serializeHasMany", "RESTSerializer.serializeIntoHash()": "classes/restserializer/methods.html#serializeIntoHash", "RESTSerializer.serializePolymorphicType()": "classes/restserializer/methods.html#serializePolymorphicType", "RESTSerializer.shouldSerializeHasMany()": "classes/restserializer/methods.html#shouldSerializeHasMany", "RESTSerializer.store": "classes/restserializer/properties.html#store", "rethrow()": "functions/rsvp/rethrow.html#rethrow", "Route": "classes/route.html", "Route (events)": "classes/route/events.html", "Route (methods)": "classes/route/methods.html", "Route (properties)": "classes/route/properties.html", "Route.activate (event)": "classes/route/events.html#activate", "Route.activate()": "classes/route/methods.html#activate", "Route.addObserver()": "classes/route/methods.html#addObserver", "Route.afterModel()": "classes/route/methods.html#afterModel", "Route.beforeModel()": "classes/route/methods.html#beforeModel", "Route.buildRouteInfoMetadata()": "classes/route/methods.html#buildRouteInfoMetadata", "Route.cacheFor()": "classes/route/methods.html#cacheFor", "Route.concatenatedProperties": "classes/route/properties.html#concatenatedProperties", "Route.controller": "classes/route/properties.html#controller", "Route.controllerFor()": "classes/route/methods.html#controllerFor", "Route.controllerName": "classes/route/properties.html#controllerName", "Route.deactivate (event)": "classes/route/events.html#deactivate", "Route.deactivate()": "classes/route/methods.html#deactivate", "Route.decrementProperty()": "classes/route/methods.html#decrementProperty", "Route.destroy()": "classes/route/methods.html#destroy", "Route.didTransition (event)": "classes/route/events.html#didTransition", "Route.error (event)": "classes/route/events.html#error", "Route.fullRouteName": "classes/route/properties.html#fullRouteName", "Route.get()": "classes/route/methods.html#get", "Route.getProperties()": "classes/route/methods.html#getProperties", "Route.has()": "classes/route/methods.html#has", "Route.incrementProperty()": "classes/route/methods.html#incrementProperty", "Route.init()": "classes/route/methods.html#init", "Route.intermediateTransitionTo()": "classes/route/methods.html#intermediateTransitionTo", "Route.isDestroyed": "classes/route/properties.html#isDestroyed", "Route.isDestroying": "classes/route/properties.html#isDestroying", "Route.loading (event)": "classes/route/events.html#loading", "Route.mergedProperties": "classes/route/properties.html#mergedProperties", "Route.model()": "classes/route/methods.html#model", "Route.modelFor()": "classes/route/methods.html#modelFor", "Route.notifyPropertyChange()": "classes/route/methods.html#notifyPropertyChange", "Route.off()": "classes/route/methods.html#off", "Route.on()": "classes/route/methods.html#on", "Route.one()": "classes/route/methods.html#one", "Route.paramsFor()": "classes/route/methods.html#paramsFor", "Route.queryParams": "classes/route/properties.html#queryParams", "Route.redirect()": "classes/route/methods.html#redirect", "Route.refresh()": "classes/route/methods.html#refresh", "Route.removeObserver()": "classes/route/methods.html#removeObserver", "Route.resetController()": "classes/route/methods.html#resetController", "Route.routeName": "classes/route/properties.html#routeName", "Route.send()": "classes/route/methods.html#send", "Route.serialize()": "classes/route/methods.html#serialize", "Route.set()": "classes/route/methods.html#set", "Route.setProperties()": "classes/route/methods.html#setProperties", "Route.setupController()": "classes/route/methods.html#setupController", "Route.templateName": "classes/route/properties.html#templateName", "Route.toggleProperty()": "classes/route/methods.html#toggleProperty", "Route.toString()": "classes/route/methods.html#toString", "Route.trigger()": "classes/route/methods.html#trigger", "Route.willDestroy()": "classes/route/methods.html#willDestroy", "Route.willTransition (event)": "classes/route/events.html#willTransition", "RouteInfo": "classes/routeinfo.html", "RouteInfo (methods)": "classes/routeinfo/methods.html", "RouteInfo (properties)": "classes/routeinfo/properties.html", "RouteInfo.child": "classes/routeinfo/properties.html#child", "RouteInfo.find()": "classes/routeinfo/methods.html#find", "RouteInfo.localName": "classes/routeinfo/properties.html#localName", "RouteInfo.metadata": "classes/routeinfo/properties.html#metadata", "RouteInfo.name": "classes/routeinfo/properties.html#name", "RouteInfo.paramNames": "classes/routeinfo/properties.html#paramNames", "RouteInfo.params": "classes/routeinfo/properties.html#params", "RouteInfo.parent": "classes/routeinfo/properties.html#parent", "RouteInfo.queryParams": "classes/routeinfo/properties.html#queryParams", "RouteInfoWithAttributes": "classes/routeinfowithattributes.html", "RouteInfoWithAttributes (methods)": "classes/routeinfowithattributes/methods.html", "RouteInfoWithAttributes (properties)": "classes/routeinfowithattributes/properties.html", "RouteInfoWithAttributes.attributes": "classes/routeinfowithattributes/properties.html#attributes", "RouteInfoWithAttributes.child": "classes/routeinfowithattributes/properties.html#child", "RouteInfoWithAttributes.find()": "classes/routeinfowithattributes/methods.html#find", "RouteInfoWithAttributes.localName": "classes/routeinfowithattributes/properties.html#localName", "RouteInfoWithAttributes.metadata": "classes/routeinfowithattributes/properties.html#metadata", "RouteInfoWithAttributes.name": "classes/routeinfowithattributes/properties.html#name", "RouteInfoWithAttributes.paramNames": "classes/routeinfowithattributes/properties.html#paramNames", "RouteInfoWithAttributes.params": "classes/routeinfowithattributes/properties.html#params", "RouteInfoWithAttributes.parent": "classes/routeinfowithattributes/properties.html#parent", "RouteInfoWithAttributes.queryParams": "classes/routeinfowithattributes/properties.html#queryParams", "RouterService": "classes/routerservice.html", "RouterService (events)": "classes/routerservice/events.html", "RouterService (methods)": "classes/routerservice/methods.html", "RouterService (properties)": "classes/routerservice/properties.html", "RouterService.addObserver()": "classes/routerservice/methods.html#addObserver", "RouterService.cacheFor()": "classes/routerservice/methods.html#cacheFor", "RouterService.concatenatedProperties": "classes/routerservice/properties.html#concatenatedProperties", "RouterService.currentRoute": "classes/routerservice/properties.html#currentRoute", "RouterService.currentRouteName": "classes/routerservice/properties.html#currentRouteName", "RouterService.currentURL": "classes/routerservice/properties.html#currentURL", "RouterService.decrementProperty()": "classes/routerservice/methods.html#decrementProperty", "RouterService.destroy()": "classes/routerservice/methods.html#destroy", "RouterService.get()": "classes/routerservice/methods.html#get", "RouterService.getProperties()": "classes/routerservice/methods.html#getProperties", "RouterService.incrementProperty()": "classes/routerservice/methods.html#incrementProperty", "RouterService.init()": "classes/routerservice/methods.html#init", "RouterService.isActive()": "classes/routerservice/methods.html#isActive", "RouterService.isDestroyed": "classes/routerservice/properties.html#isDestroyed", "RouterService.isDestroying": "classes/routerservice/properties.html#isDestroying", "RouterService.location": "classes/routerservice/properties.html#location", "RouterService.mergedProperties": "classes/routerservice/properties.html#mergedProperties", "RouterService.notifyPropertyChange()": "classes/routerservice/methods.html#notifyPropertyChange", "RouterService.off()": "classes/routerservice/methods.html#off", "RouterService.on()": "classes/routerservice/methods.html#on", "RouterService.recognize()": "classes/routerservice/methods.html#recognize", "RouterService.recognizeAndLoad()": "classes/routerservice/methods.html#recognizeAndLoad", "RouterService.refresh()": "classes/routerservice/methods.html#refresh", "RouterService.removeObserver()": "classes/routerservice/methods.html#removeObserver", "RouterService.replaceWith()": "classes/routerservice/methods.html#replaceWith", "RouterService.rootURL": "classes/routerservice/properties.html#rootURL", "RouterService.routeDidChange (event)": "classes/routerservice/events.html#routeDidChange", "RouterService.routeWillChange (event)": "classes/routerservice/events.html#routeWillChange", "RouterService.set()": "classes/routerservice/methods.html#set", "RouterService.setProperties()": "classes/routerservice/methods.html#setProperties", "RouterService.toggleProperty()": "classes/routerservice/methods.html#toggleProperty", "RouterService.toString()": "classes/routerservice/methods.html#toString", "RouterService.transitionTo()": "classes/routerservice/methods.html#transitionTo", "RouterService.urlFor()": "classes/routerservice/methods.html#urlFor", "RouterService.willDestroy()": "classes/routerservice/methods.html#willDestroy", "rsvp": "modules/rsvp.html", "run()": "functions/@ember/runloop/run.html#run", "runInDebug()": "functions/@ember/debug/runindebug.html#runInDebug", "schedule()": "functions/@ember/runloop/schedule.html#schedule", "scheduleOnce()": "functions/@ember/runloop/scheduleonce.html#scheduleOnce", "SchemaDefinitionService": "classes/schemadefinitionservice.html", "SchemaDefinitionService (methods)": "classes/schemadefinitionservice/methods.html", "SchemaDefinitionService.attributesDefinitionFor()": "classes/schemadefinitionservice/methods.html#attributesDefinitionFor", "SchemaDefinitionService.doesTypeExist()": "classes/schemadefinitionservice/methods.html#doesTypeExist", "SchemaDefinitionService.relationshipsDefinitionFor()": "classes/schemadefinitionservice/methods.html#relationshipsDefinitionFor", "sendEvent()": "functions/@ember/object/events/sendevent.html#sendEvent", "Serializer": "classes/serializer.html", "Serializer (methods)": "classes/serializer/methods.html", "Serializer (properties)": "classes/serializer/properties.html", "Serializer.normalize()": "classes/serializer/methods.html#normalize", "Serializer.normalizeResponse()": "classes/serializer/methods.html#normalizeResponse", "Serializer.serialize()": "classes/serializer/methods.html#serialize", "Serializer.store": "classes/serializer/properties.html#store", "ServerError": "classes/servererror.html", "Service": "classes/service.html", "Service (methods)": "classes/service/methods.html", "Service (properties)": "classes/service/properties.html", "service()": "functions/@ember/service/service.html#service", "Service.addObserver()": "classes/service/methods.html#addObserver", "Service.cacheFor()": "classes/service/methods.html#cacheFor", "Service.concatenatedProperties": "classes/service/properties.html#concatenatedProperties", "Service.decrementProperty()": "classes/service/methods.html#decrementProperty", "Service.destroy()": "classes/service/methods.html#destroy", "Service.get()": "classes/service/methods.html#get", "Service.getProperties()": "classes/service/methods.html#getProperties", "Service.incrementProperty()": "classes/service/methods.html#incrementProperty", "Service.init()": "classes/service/methods.html#init", "Service.isDestroyed": "classes/service/properties.html#isDestroyed", "Service.isDestroying": "classes/service/properties.html#isDestroying", "Service.mergedProperties": "classes/service/properties.html#mergedProperties", "Service.notifyPropertyChange()": "classes/service/methods.html#notifyPropertyChange", "Service.removeObserver()": "classes/service/methods.html#removeObserver", "Service.set()": "classes/service/methods.html#set", "Service.setProperties()": "classes/service/methods.html#setProperties", "Service.toggleProperty()": "classes/service/methods.html#toggleProperty", "Service.toString()": "classes/service/methods.html#toString", "Service.willDestroy()": "classes/service/methods.html#willDestroy", "set()": "functions/@ember/object/set.html#set", "setDiff()": "functions/@ember/object/computed/setdiff.html#setDiff", "setHelperManager()": "functions/@ember/helper/sethelpermanager.html#setHelperManager", "setIdentifierForgetMethod()": "functions/@ember-data/store/setidentifierforgetmethod.html#setIdentifierForgetMethod", "setIdentifierGenerationMethod()": "functions/@ember-data/store/setidentifiergenerationmethod.html#setIdentifierGenerationMethod", "setIdentifierResetMethod()": "functions/@ember-data/store/setidentifierresetmethod.html#setIdentifierResetMethod", "setIdentifierUpdateMethod()": "functions/@ember-data/store/setidentifierupdatemethod.html#setIdentifierUpdateMethod", "setOwner()": "functions/@ember/application/setowner.html#setOwner", "setProperties()": "functions/@ember/object/setproperties.html#setProperties", "Snapshot": "classes/snapshot.html", "Snapshot (methods)": "classes/snapshot/methods.html", "Snapshot (properties)": "classes/snapshot/properties.html", "Snapshot.adapterOptions": "classes/snapshot/properties.html#adapterOptions", "Snapshot.attr()": "classes/snapshot/methods.html#attr", "Snapshot.attributes()": "classes/snapshot/methods.html#attributes", "Snapshot.belongsTo()": "classes/snapshot/methods.html#belongsTo", "Snapshot.changedAttributes()": "classes/snapshot/methods.html#changedAttributes", "Snapshot.eachAttribute()": "classes/snapshot/methods.html#eachAttribute", "Snapshot.eachRelationship()": "classes/snapshot/methods.html#eachRelationship", "Snapshot.hasMany()": "classes/snapshot/methods.html#hasMany", "Snapshot.id": "classes/snapshot/properties.html#id", "Snapshot.identifier": "classes/snapshot/properties.html#identifier", "Snapshot.include": "classes/snapshot/properties.html#include", "Snapshot.modelName": "classes/snapshot/properties.html#modelName", "Snapshot.record": "classes/snapshot/properties.html#record", "Snapshot.serialize()": "classes/snapshot/methods.html#serialize", "SnapshotRecordArray": "classes/snapshotrecordarray.html", "SnapshotRecordArray (methods)": "classes/snapshotrecordarray/methods.html", "SnapshotRecordArray (properties)": "classes/snapshotrecordarray/properties.html", "SnapshotRecordArray.adapterOptions": "classes/snapshotrecordarray/properties.html#adapterOptions", "SnapshotRecordArray.include": "classes/snapshotrecordarray/properties.html#include", "SnapshotRecordArray.length": "classes/snapshotrecordarray/properties.html#length", "SnapshotRecordArray.modelName": "classes/snapshotrecordarray/properties.html#modelName", "SnapshotRecordArray.snapshots()": "classes/snapshotrecordarray/methods.html#snapshots", "sort()": "functions/@ember/object/computed/sort.html#sort", "Specifying a Route's Model": "routing/specifying-a-routes-model.html", "Specifying the URL Type": "configuring-ember/specifying-url-type.html", "StableRecordIdentifier": "classes/stablerecordidentifier.html", "StableRecordIdentifier (properties)": "classes/stablerecordidentifier/properties.html", "StableRecordIdentifier.id": "classes/stablerecordidentifier/properties.html#id", "StableRecordIdentifier.lid": "classes/stablerecordidentifier/properties.html#lid", "StableRecordIdentifier.type": "classes/stablerecordidentifier/properties.html#type", "Store": "classes/store.html", "Store (methods)": "classes/store/methods.html", "Store (properties)": "classes/store/properties.html", "Store.adapterFor()": "classes/store/methods.html#adapterFor", "Store.createRecord()": "classes/store/methods.html#createRecord", "Store.createRecordDataFor (hook)()": "classes/store/methods.html#createRecordDataFor (hook)", "Store.deleteRecord()": "classes/store/methods.html#deleteRecord", "Store.findAll()": "classes/store/methods.html#findAll", "Store.findRecord()": "classes/store/methods.html#findRecord", "Store.getReference()": "classes/store/methods.html#getReference", "Store.getRequestStateService()": "classes/store/methods.html#getRequestStateService", "Store.getSchemaDefinitionService()": "classes/store/methods.html#getSchemaDefinitionService", "Store.identifierCache": "classes/store/properties.html#identifierCache", "Store.instantiateRecord (hook)()": "classes/store/methods.html#instantiateRecord (hook)", "Store.modelFor()": "classes/store/methods.html#modelFor", "Store.normalize()": "classes/store/methods.html#normalize", "Store.peekAll()": "classes/store/methods.html#peekAll", "Store.peekRecord()": "classes/store/methods.html#peekRecord", "Store.push()": "classes/store/methods.html#push", "Store.pushPayload()": "classes/store/methods.html#pushPayload", "Store.query()": "classes/store/methods.html#query", "Store.queryRecord()": "classes/store/methods.html#queryRecord", "Store.registerSchemaDefinitionService()": "classes/store/methods.html#registerSchemaDefinitionService", "Store.saveRecord()": "classes/store/methods.html#saveRecord", "Store.serializerFor()": "classes/store/methods.html#serializerFor", "Store.teardownRecord (hook)()": "classes/store/methods.html#teardownRecord (hook)", "Store.unloadAll()": "classes/store/methods.html#unloadAll", "Store.unloadRecord()": "classes/store/methods.html#unloadRecord", "String": "classes/string.html", "String (methods)": "classes/string/methods.html", "String.camelize()": "classes/string/methods.html#camelize", "String.capitalize()": "classes/string/methods.html#capitalize", "String.classify()": "classes/string/methods.html#classify", "String.dasherize()": "classes/string/methods.html#dasherize", "String.decamelize()": "classes/string/methods.html#decamelize", "String.underscore()": "classes/string/methods.html#underscore", "String.w()": "classes/string/methods.html#w", "StringTransform": "classes/stringtransform.html", "StringTransform (methods)": "classes/stringtransform/methods.html", "StringTransform.deserialize()": "classes/stringtransform/methods.html#deserialize", "StringTransform.serialize()": "classes/stringtransform/methods.html#serialize", "sum()": "functions/@ember/object/computed/sum.html#sum", "Tackling Deprecations": "ember-inspector/deprecations.html", "Template Lifecycle, DOM, and Modifiers": "components/template-lifecycle-dom-and-modifiers.html", "templateOnly()": "functions/@ember/component/template-only/templateonly.html#templateOnly", "Templates": "upgrading/current-edition/templates.html", "Templates are HTML": "components/index.html", "Test Types": "testing/test-types.html", "TestAdapter": "classes/testadapter.html", "TestAdapter (methods)": "classes/testadapter/methods.html", "TestAdapter.asyncEnd()": "classes/testadapter/methods.html#asyncEnd", "TestAdapter.asyncStart()": "classes/testadapter/methods.html#asyncStart", "TestAdapter.exception()": "classes/testadapter/methods.html#exception", "Testing Application": "testing/testing-application.html", "Testing Basics": "testing/unit-testing-basics.html", "Testing Components": "testing/testing-components.html", "Testing Considerations": "accessibility/testing.html", "Testing Controllers": "testing/testing-controllers.html", "Testing Helpers": "testing/testing-helpers.html", "Testing Models": "testing/testing-models.html", "Testing Routes": "testing/testing-routes.html", "Testing Tools": "testing/testing-tools.html", "The Component Tree": "ember-inspector/component-tree.html", "The Run Loop": "applications/run-loop.html", "throttle()": "functions/@ember/runloop/throttle.html#throttle", "TimeoutError": "classes/timeouterror.html", "toString()": "functions/model/tostring.html#toString", "Tracked Properties": "upgrading/current-edition/tracked-properties.html", "tracked()": "functions/@glimmer/tracking/tracked.html#tracked", "transact()": "functions/@ember-data/tracking/transact.html#transact", "Transform": "classes/transform.html", "Transform (methods)": "classes/transform/methods.html", "Transform.deserialize()": "classes/transform/methods.html#deserialize", "Transform.serialize()": "classes/transform/methods.html#serialize", "Transition": "classes/transition.html", "Transition (methods)": "classes/transition/methods.html", "Transition (properties)": "classes/transition/properties.html", "Transition.abort()": "classes/transition/methods.html#abort", "Transition.catch()": "classes/transition/methods.html#catch", "Transition.data": "classes/transition/properties.html#data", "Transition.debugAbortStack()": "classes/transition/methods.html#debugAbortStack", "Transition.debugCreationStack()": "classes/transition/methods.html#debugCreationStack", "Transition.debugPreviousTransition": "classes/transition/properties.html#debugPreviousTransition", "Transition.finally()": "classes/transition/methods.html#finally", "Transition.followRedirects()": "classes/transition/methods.html#followRedirects", "Transition.from": "classes/transition/properties.html#from", "Transition.method()": "classes/transition/methods.html#method", "Transition.promise": "classes/transition/properties.html#promise", "Transition.retry()": "classes/transition/methods.html#retry", "Transition.then()": "classes/transition/methods.html#then", "Transition.to": "classes/transition/properties.html#to", "Transition.trigger()": "classes/transition/methods.html#trigger", "Troubleshooting": "ember-inspector/troubleshooting.html", "trySet()": "functions/@ember/object/tryset.html#trySet", "typeForRelationship()": "functions/model/typeforrelationship.html#typeForRelationship", "typeOf()": "functions/@ember/utils/typeof.html#typeOf", "UnauthorizedError": "classes/unauthorizederror.html", "union()": "functions/@ember/object/computed/union.html#union", "uniq()": "functions/@ember/object/computed/uniq.html#uniq", "uniqBy()": "functions/@ember/object/computed/uniqby.html#uniqBy", "unregisterDestructor()": "functions/@ember/destroyable/unregisterdestructor.html#unregisterDestructor", "unregisterHelper()": "functions/@ember/test/unregisterhelper.html#unregisterHelper", "unregisterWaiter()": "functions/@ember/test/unregisterwaiter.html#unregisterWaiter", "untracked()": "functions/@ember-data/tracking/untracked.html#untracked", "warn()": "functions/@ember/debug/warn.html#warn", "Working with HTML, CSS, and JavaScript": "getting-started/working-with-html-css-and-javascript.html"}