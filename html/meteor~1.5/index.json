{"Accounts": "api/accounts.html", "Accounts (multi-server)": "api/accounts-multi.html", "accounts-ui": "packages/accounts-ui.html", "Accounts.addEmail()": "api/passwords.html#Accounts-addEmail", "Accounts.changePassword()": "api/passwords.html#Accounts-changePassword", "Accounts.createUser()": "api/passwords.html#Accounts-createUser", "Accounts.emailTemplates": "api/passwords.html#Accounts-emailTemplates", "Accounts.findUserByEmail()": "api/passwords.html#Accounts-findUserByEmail", "Accounts.findUserByUsername()": "api/passwords.html#Accounts-findUserByUsername", "Accounts.forgotPassword()": "api/passwords.html#Accounts-forgotPassword", "Accounts.onEmailVerificationLink": "api/passwords.html#Accounts-onEmailVerificationLink", "Accounts.onEnrollmentLink": "api/passwords.html#Accounts-onEnrollmentLink", "Accounts.onResetPasswordLink": "api/passwords.html#Accounts-onResetPasswordLink", "Accounts.removeEmail()": "api/passwords.html#Accounts-removeEmail", "Accounts.resetPassword()": "api/passwords.html#Accounts-resetPassword", "Accounts.sendEnrollmentEmail()": "api/passwords.html#Accounts-sendEnrollmentEmail", "Accounts.sendResetPasswordEmail()": "api/passwords.html#Accounts-sendResetPasswordEmail", "Accounts.sendVerificationEmail()": "api/passwords.html#Accounts-sendVerificationEmail", "Accounts.setPassword()": "api/passwords.html#Accounts-setPassword", "Accounts.setUsername()": "api/passwords.html#Accounts-setUsername", "Accounts.ui.config()": "api/accounts.html#Accounts-ui-config", "Accounts.verifyEmail()": "api/passwords.html#Accounts-verifyEmail", "AccountsClient#loggingIn()": "api/accounts-multi.html#AccountsClient-loggingIn", "AccountsClient#logout()": "api/accounts-multi.html#AccountsClient-logout", "AccountsClient#logoutOtherClients()": "api/accounts-multi.html#AccountsClient-logoutOtherClients", "AccountsClient()": "api/accounts-multi.html#AccountsClient", "AccountsCommon#config()": "api/accounts-multi.html#AccountsCommon-config", "AccountsCommon#onLogin()": "api/accounts-multi.html#AccountsCommon-onLogin", "AccountsCommon#onLoginFailure()": "api/accounts-multi.html#AccountsCommon-onLoginFailure", "AccountsCommon#onLogout()": "api/accounts-multi.html#AccountsCommon-onLogout", "AccountsCommon#user()": "api/accounts-multi.html#AccountsCommon-user", "AccountsCommon#userId()": "api/accounts-multi.html#AccountsCommon-userId", "AccountsCommon()": "api/accounts-multi.html#AccountsCommon", "AccountsServer#onCreateUser()": "api/accounts-multi.html#AccountsServer-onCreateUser", "AccountsServer#validateLoginAttempt()": "api/accounts-multi.html#AccountsServer-validateLoginAttempt", "AccountsServer#validateNewUser()": "api/accounts-multi.html#AccountsServer-validateNewUser", "AccountsServer()": "api/accounts-multi.html#AccountsServer", "Angular": "angular.html", "api.addAssets()": "api/packagejs.html#PackageAPI-addAssets", "api.addFiles()": "api/packagejs.html#PackageAPI-addFiles", "api.export()": "api/packagejs.html#PackageAPI-export", "api.imply()": "api/packagejs.html#PackageAPI-imply", "api.use()": "api/packagejs.html#PackageAPI-use", "api.versionsFrom()": "api/packagejs.html#PackageAPI-versionsFrom", "apollo": "packages/apollo.html", "App.accessRule()": "api/mobile-config.html#App-accessRule", "App.appendToConfig()": "api/mobile-config.html#App-appendToConfig", "App.configurePlugin()": "api/mobile-config.html#App-configurePlugin", "App.icons()": "api/mobile-config.html#App-icons", "App.info()": "api/mobile-config.html#App-info", "App.launchScreens()": "api/mobile-config.html#App-launchScreens", "App.setPreference()": "api/mobile-config.html#App-setPreference", "appcache": "packages/appcache.html", "Application Structure": "structure.html", "Assets": "api/assets.html", "Assets.absoluteFilePath()": "api/assets.html#Assets-absoluteFilePath", "Assets.getBinary()": "api/assets.html#Assets-getBinary", "Assets.getText()": "api/assets.html#Assets-getText", "Atmosphere vs. npm": "atmosphere-vs-npm.html", "audit-argument-checks": "packages/audit-argument-checks.html", "Blaze": "blaze.html", "Blaze.currentView": "api/blaze.html#Blaze-currentView", "Blaze.Each()": "api/blaze.html#Blaze-Each", "Blaze.getData()": "api/blaze.html#Blaze-getData", "Blaze.getView()": "api/blaze.html#Blaze-getView", "Blaze.If()": "api/blaze.html#Blaze-If", "Blaze.isTemplate()": "api/blaze.html#Blaze-isTemplate", "Blaze.remove()": "api/blaze.html#Blaze-remove", "Blaze.render()": "api/blaze.html#Blaze-render", "Blaze.renderWithData()": "api/blaze.html#Blaze-renderWithData", "Blaze.Template()": "api/blaze.html#Blaze-Template", "Blaze.TemplateInstance#$()": "api/templates.html#Blaze-TemplateInstance-$", "Blaze.TemplateInstance#autorun()": "api/templates.html#Blaze-TemplateInstance-autorun", "Blaze.TemplateInstance#data": "api/templates.html#Blaze-TemplateInstance-data", "Blaze.TemplateInstance#find()": "api/templates.html#Blaze-TemplateInstance-find", "Blaze.TemplateInstance#findAll()": "api/templates.html#Blaze-TemplateInstance-findAll", "Blaze.TemplateInstance#firstNode": "api/templates.html#Blaze-TemplateInstance-firstNode", "Blaze.TemplateInstance#lastNode": "api/templates.html#Blaze-TemplateInstance-lastNode", "Blaze.TemplateInstance#subscribe()": "api/templates.html#Blaze-TemplateInstance-subscribe", "Blaze.TemplateInstance#view": "api/templates.html#Blaze-TemplateInstance-view", "Blaze.toHTML()": "api/blaze.html#Blaze-toHTML", "Blaze.toHTMLWithData()": "api/blaze.html#Blaze-toHTMLWithData", "Blaze.Unless()": "api/blaze.html#Blaze-Unless", "Blaze.View()": "api/blaze.html#Blaze-View", "Blaze.With()": "api/blaze.html#Blaze-With", "Build System": "build-tool.html", "bundle-visualizer": "packages/bundle-visualizer.html", "check": "api/check.html#check", "Check": "api/check.html", "Code Style": "code-style.html", "coffeescript": "packages/coffeescript.html", "Collections": "api/collections.html", "Collections and Schemas": "collections.html", "Command Line": "commandline.html", "Cordova.depends()": "api/packagejs.html#PackageCordova-depends", "Core": "api/core.html", "DDP.connect()": "api/connections.html#DDP-connect", "DDP.onReconnect()": "api/connections.html#DDP-onReconnect", "DDPRateLimiter.addRule()": "api/methods.html#DDPRateLimiter-addRule", "DDPRateLimiter.removeRule()": "api/methods.html#DDPRateLimiter-removeRule", "DDPRateLimiter.setErrorMessage()": "api/methods.html#DDPRateLimiter-setErrorMessage", "Deployment and Monitoring": "deployment.html", "dynamic-import": "packages/dynamic-import.html", "ecmascript": "packages/ecmascript.html", "EJSON": "api/ejson.html", "EJSON.addType()": "api/ejson.html#EJSON-addType", "EJSON.clone()": "api/ejson.html#EJSON-clone", "EJSON.CustomType#clone()": "api/ejson.html#EJSON-CustomType-clone", "EJSON.CustomType#equals()": "api/ejson.html#EJSON-CustomType-equals", "EJSON.CustomType#toJSONValue()": "api/ejson.html#EJSON-CustomType-toJSONValue", "EJSON.CustomType#typeName()": "api/ejson.html#EJSON-CustomType-typeName", "EJSON.equals()": "api/ejson.html#EJSON-equals", "EJSON.fromJSONValue()": "api/ejson.html#EJSON-fromJSONValue", "EJSON.isBinary()": "api/ejson.html#EJSON-isBinary", "EJSON.newBinary": "api/ejson.html#EJSON-newBinary", "EJSON.parse()": "api/ejson.html#EJSON-parse", "EJSON.stringify()": "api/ejson.html#EJSON-stringify", "EJSON.toJSONValue()": "api/ejson.html#EJSON-toJSONValue", "Email": "api/email.html", "Email.send()": "api/email.html#Email-send", "Environment Variables": "environment-variables.html", "HTTP": "api/http.html", "HTTP.call()": "api/http.html#HTTP-call", "HTTP.del()": "api/http.html#HTTP-del", "HTTP.get()": "api/http.html#HTTP-get", "HTTP.post()": "api/http.html#HTTP-post", "HTTP.put()": "api/http.html#HTTP-put", "Introduction": "guide/introduction.html", "jquery": "packages/jquery.html", "less": "packages/less.html", "markdown": "packages/markdown.html", "Match.test()": "api/check.html#Match-test", "meteor add package": "commandline.html#meteoradd", "meteor add-platform platform": "commandline.html#meteoraddplatform", "meteor admin": "commandline.html#meteoradmin", "meteor build": "commandline.html#meteorbuild", "meteor create name": "commandline.html#meteorcreate", "meteor debug": "commandline.html#meteordebug", "meteor deploy site": "commandline.html#meteordeploy", "meteor help": "commandline.html#meteorhelp", "meteor lint": "commandline.html#meteorlint", "meteor list": "commandline.html#meteorlist", "meteor list-platforms": "commandline.html#meteorlistplatforms", "meteor login / logout": "commandline.html#meteorloginlogout", "meteor mongo": "commandline.html#meteormongo", "meteor node": "commandline.html#meteornode", "meteor npm": "commandline.html#meteornpm", "meteor publish": "commandline.html#meteorpublish", "meteor publish-for-arch": "commandline.html#meteorpublishforarch", "meteor publish-release": "commandline.html#meteorpublishrelease", "meteor remove package": "commandline.html#meteorremove", "meteor remove-platform platform": "commandline.html#meteorremoveplatform", "meteor reset": "commandline.html#meteorreset", "meteor run": "commandline.html#meteorrun", "meteor search": "commandline.html#meteorsearch", "meteor shell": "commandline.html#meteorshell", "meteor show": "commandline.html#meteorshow", "meteor test-packages": "commandline.html#meteortestpackages", "meteor update": "commandline.html#meteorupdate", "Meteor.absoluteUrl()": "api/core.html#Meteor-absoluteUrl", "Meteor.apply()": "api/methods.html#Meteor-apply", "Meteor.call()": "api/methods.html#Meteor-call", "Meteor.clearInterval()": "api/timers.html#Meteor-clearInterval", "Meteor.clearTimeout()": "api/timers.html#Meteor-clearTimeout", "Meteor.defer()": "api/core.html#Meteor-defer", "Meteor.disconnect()": "api/connections.html#Meteor-disconnect", "Meteor.Error()": "api/methods.html#Meteor-Error", "Meteor.isClient": "api/core.html#Meteor-isClient", "Meteor.isCordova": "api/core.html#Meteor-isCordova", "Meteor.isDevelopment": "api/core.html#Meteor-isDevelopment", "Meteor.isProduction": "api/core.html#Meteor-isProduction", "Meteor.isServer": "api/core.html#Meteor-isServer", "Meteor.loggingIn()": "api/accounts.html#Meteor-loggingIn", "Meteor.loginWith<ExternalService>()": "api/accounts.html#Meteor-loginWith<ExternalService>", "Meteor.loginWithPassword()": "api/accounts.html#Meteor-loginWithPassword", "Meteor.logout()": "api/accounts.html#Meteor-logout", "Meteor.logoutOtherClients()": "api/accounts.html#Meteor-logoutOtherClients", "Meteor.methods()": "api/methods.html#Meteor-methods", "Meteor.onConnection()": "api/connections.html#Meteor-onConnection", "Meteor.publish()": "api/pubsub.html#Meteor-publish", "Meteor.reconnect()": "api/connections.html#Meteor-reconnect", "Meteor.release": "api/core.html#Meteor-release", "Meteor.setInterval()": "api/timers.html#Meteor-setInterval", "Meteor.setTimeout()": "api/timers.html#Meteor-setTimeout", "Meteor.settings": "api/core.html#Meteor-settings", "Meteor.startup()": "api/core.html#Meteor-startup", "Meteor.status()": "api/connections.html#Meteor-status", "Meteor.subscribe()": "api/pubsub.html#Meteor-subscribe", "Meteor.user()": "api/accounts.html#Meteor-user", "Meteor.userId()": "api/accounts.html#Meteor-userId", "Meteor.users": "api/accounts.html#Meteor-users", "Meteor.wrapAsync()": "api/core.html#Meteor-wrapAsync", "Methods": "api/methods.html", "Migrating to Meteor 1.5": "1.5-migration.html", "Mobile": "mobile.html", "Mobile Configuration": "api/mobile-config.html", "modules": "packages/modules.html", "Mongo.Collection#allow()": "api/collections.html#Mongo-Collection-allow", "Mongo.Collection#deny()": "api/collections.html#Mongo-Collection-deny", "Mongo.Collection#find()": "api/collections.html#Mongo-Collection-find", "Mongo.Collection#findOne()": "api/collections.html#Mongo-Collection-findOne", "Mongo.Collection#insert()": "api/collections.html#Mongo-Collection-insert", "Mongo.Collection#rawCollection()": "api/collections.html#Mongo-Collection-rawCollection", "Mongo.Collection#rawDatabase()": "api/collections.html#Mongo-Collection-rawDatabase", "Mongo.Collection#remove()": "api/collections.html#Mongo-Collection-remove", "Mongo.Collection#update()": "api/collections.html#Mongo-Collection-update", "Mongo.Collection#upsert()": "api/collections.html#Mongo-Collection-upsert", "Mongo.Collection()": "api/collections.html#Mongo-Collection", "Mongo.Cursor#count()": "api/collections.html#Mongo-Cursor-count", "Mongo.Cursor#fetch()": "api/collections.html#Mongo-Cursor-fetch", "Mongo.Cursor#forEach()": "api/collections.html#Mongo-Cursor-forEach", "Mongo.Cursor#map()": "api/collections.html#Mongo-Cursor-map", "Mongo.Cursor#observe()": "api/collections.html#Mongo-Cursor-observe", "Mongo.Cursor#observeChanges()": "api/collections.html#Mongo-Cursor-observeChanges", "Mongo.ObjectID()": "api/collections.html#Mongo-ObjectID", "Npm.depends()": "api/packagejs.html#PackageNpm-depends", "Npm.require": "api/packagejs.html#Npm-require", "oauth-encryption": "packages/oauth-encryption.html", "Package.describe()": "api/packagejs.html#PackageNamespace-describe", "Package.js": "api/packagejs.html", "Package.onTest()": "api/packagejs.html#PackageNamespace-onTest", "Package.onUse()": "api/packagejs.html#PackageNamespace-onUse", "Package.registerBuildPlugin()": "api/packagejs.html#PackageNamespace-registerBuildPlugin", "Passwords": "api/passwords.html", "Plugin.registerSourceHandler()": "api/packagejs.html#Plugin-registerSourceHandler", "Publications and Data Loading": "data-loading.html", "Publish and subscribe": "api/pubsub.html", "random": "packages/random.html", "Random.choice": "packages/random.html#Random-choice", "Random.fraction": "packages/random.html#Random-fraction", "Random.hexString": "packages/random.html#Random-hexString", "Random.id": "packages/random.html#Random-id", "Random.secret": "packages/random.html#Random-secret", "React": "react.html", "ReactiveVar": "api/reactive-var.html", "ReactiveVar#get()": "api/reactive-var.html#ReactiveVar-get", "ReactiveVar#set()": "api/reactive-var.html#ReactiveVar-set", "ReactiveVar()": "api/reactive-var.html#ReactiveVar", "Reusable components in Blaze": "guide/reusable-components.html", "Reusing code in Blaze": "guide/reusing-code.html", "Routing": "guide/routing.html", "Security": "security.html", "Server Connections": "api/connections.html", "server-render": "packages/server-render.html", "Session": "api/session.html", "Session.equals()": "api/session.html#Session-equals", "Session.get()": "api/session.html#Session-get", "Session.set()": "api/session.html#Session-set", "Session.setDefault()": "api/session.html#Session-setDefault", "spacebars": "packages/spacebars.html", "Spacebars": "api/spacebars.html", "Spacebars templates": "guide/spacebars.html", "Template#events()": "api/templates.html#Template-events", "Template#helpers()": "api/templates.html#Template-helpers", "Template#onCreated": "api/templates.html#Template-onCreated", "Template#onDestroyed": "api/templates.html#Template-onDestroyed", "Template#onRendered": "api/templates.html#Template-onRendered", "Template.body": "api/templates.html#Template-body", "Template.currentData()": "api/templates.html#Template-currentData", "Template.instance()": "api/templates.html#Template-instance", "Template.parentData()": "api/templates.html#Template-parentData", "Template.registerHelper()": "api/templates.html#Template-registerHelper", "Templates": "api/templates.html", "Testing": "testing.html", "this.added()": "api/pubsub.html#Subscription-added", "this.changed()": "api/pubsub.html#Subscription-changed", "this.connection": "api/methods.html#DDPCommon-MethodInvocation-connection", "this.error()": "api/pubsub.html#Subscription-error", "this.isSimulation": "api/methods.html#DDPCommon-MethodInvocation-isSimulation", "this.onStop()": "api/pubsub.html#Subscription-onStop", "this.ready()": "api/pubsub.html#Subscription-ready", "this.removed()": "api/pubsub.html#Subscription-removed", "this.setUserId()": "api/methods.html#DDPCommon-MethodInvocation-setUserId", "this.stop()": "api/pubsub.html#Subscription-stop", "this.unblock()": "api/methods.html#DDPCommon-MethodInvocation-unblock", "this.userId": "api/methods.html#DDPCommon-MethodInvocation-userId", "Timers": "api/timers.html", "Tracker": "api/tracker.html", "Tracker.active": "api/tracker.html#Tracker-active", "Tracker.afterFlush()": "api/tracker.html#Tracker-afterFlush", "Tracker.autorun()": "api/tracker.html#Tracker-autorun", "Tracker.Computation#firstRun": "api/tracker.html#Tracker-Computation-firstRun", "Tracker.Computation#invalidate()": "api/tracker.html#Tracker-Computation-invalidate", "Tracker.Computation#invalidated": "api/tracker.html#Tracker-Computation-invalidated", "Tracker.Computation#onInvalidate()": "api/tracker.html#Tracker-Computation-onInvalidate", "Tracker.Computation#onStop()": "api/tracker.html#Tracker-Computation-onStop", "Tracker.Computation#stop()": "api/tracker.html#Tracker-Computation-stop", "Tracker.Computation#stopped": "api/tracker.html#Tracker-Computation-stopped", "Tracker.currentComputation": "api/tracker.html#Tracker-currentComputation", "Tracker.Dependency#changed()": "api/tracker.html#Tracker-Dependency-changed", "Tracker.Dependency#depend()": "api/tracker.html#Tracker-Dependency-depend", "Tracker.Dependency#hasDependents()": "api/tracker.html#Tracker-Dependency-hasDependents", "Tracker.flush()": "api/tracker.html#Tracker-flush", "Tracker.inFlush()": "api/tracker.html#Tracker-inFlush", "Tracker.nonreactive()": "api/tracker.html#Tracker-nonreactive", "Tracker.onInvalidate()": "api/tracker.html#Tracker-onInvalidate", "underscore": "packages/underscore.html", "Understanding Blaze": "guide/understanding-blaze.html", "URLs and Routing": "routing.html", "User Interfaces": "ui-ux.html", "Users and Accounts": "accounts.html", "Using Atmosphere Packages": "using-atmosphere-packages.html", "Using npm Packages": "using-npm-packages.html", "webapp": "packages/webapp.html", "Writing Atmosphere Packages": "writing-atmosphere-packages.html", "Writing npm Packages": "writing-npm-packages.html", "Writing smart components with Blaze": "guide/smart-components.html", "{{ currentUser }}": "api/accounts.html#currentUser", "{{ loggingIn }}": "api/accounts.html#loggingIn", "{{> Template.dynamic }}": "api/templates.html#Template-dynamic"}