{"\"exports\"": "packages.html#exports", "\"imports\"": "packages.html#imports", "\"main\"": "packages.html#main", "\"name\"": "packages.html#name", "\"packageManager\"": "packages.html#packagemanager", "\"type\"": "packages.html#type", "-": "cli.html#-", "--": "cli.html#--", "--abort-on-uncaught-exception": "cli.html#--abort-on-uncaught-exception", "--allow-child-process": "cli.html#--allow-child-process", "--allow-fs-read": "cli.html#--allow-fs-read", "--allow-fs-write": "cli.html#--allow-fs-write", "--allow-worker": "cli.html#--allow-worker", "--build-snapshot": "cli.html#--build-snapshot", "--check": "cli.html#-c---check", "--completion-bash": "cli.html#--completion-bash", "--conditions=condition": "cli.html#-c-condition---conditionscondition", "--cpu-prof": "cli.html#--cpu-prof", "--cpu-prof-dir": "cli.html#--cpu-prof-dir", "--cpu-prof-interval": "cli.html#--cpu-prof-interval", "--cpu-prof-name": "cli.html#--cpu-prof-name", "--diagnostic-dir=directory": "cli.html#--diagnostic-dirdirectory", "--disable-proto=mode": "cli.html#--disable-protomode", "--disallow-code-generation-from-strings": "cli.html#--disallow-code-generation-from-strings", "--dns-result-order=order": "cli.html#--dns-result-orderorder", "--enable-fips": "cli.html#--enable-fips", "--enable-source-maps": "cli.html#--enable-source-maps", "--env-file=config": "cli.html#--env-fileconfig", "--eval \"script\"": "cli.html#-e---eval-script", "--experimental-import-meta-resolve": "cli.html#--experimental-import-meta-resolve", "--experimental-loader=module": "cli.html#--experimental-loadermodule", "--experimental-network-imports": "cli.html#--experimental-network-imports", "--experimental-permission": "cli.html#--experimental-permission", "--experimental-policy": "cli.html#--experimental-policy", "--experimental-sea-config": "cli.html#--experimental-sea-config", "--experimental-shadow-realm": "cli.html#--experimental-shadow-realm", "--experimental-test-coverage": "cli.html#--experimental-test-coverage", "--experimental-vm-modules": "cli.html#--experimental-vm-modules", "--experimental-wasi-unstable-preview1": "cli.html#--experimental-wasi-unstable-preview1", "--experimental-wasm-modules": "cli.html#--experimental-wasm-modules", "--force-context-aware": "cli.html#--force-context-aware", "--force-fips": "cli.html#--force-fips", "--force-node-api-uncaught-exceptions-policy": "cli.html#--force-node-api-uncaught-exceptions-policy", "--frozen-intrinsics": "cli.html#--frozen-intrinsics", "--heap-prof": "cli.html#--heap-prof", "--heap-prof-dir": "cli.html#--heap-prof-dir", "--heap-prof-interval": "cli.html#--heap-prof-interval", "--heap-prof-name": "cli.html#--heap-prof-name", "--heapsnapshot-near-heap-limit=max_count": "cli.html#--heapsnapshot-near-heap-limitmax_count", "--heapsnapshot-signal=signal": "cli.html#--heapsnapshot-signalsignal", "--help": "cli.html#-h---help", "--icu-data-dir=file": "cli.html#--icu-data-dirfile", "--import=module": "cli.html#--importmodule", "--input-type": "packages.html#--input-type-flag", "--input-type=type": "cli.html#--input-typetype", "--insecure-http-parser": "cli.html#--insecure-http-parser", "--inspect-brk[=[host:]port]": "cli.html#--inspect-brkhostport", "--inspect-port=[host:]port": "cli.html#--inspect-porthostport", "--inspect-publish-uid=stderr,http": "cli.html#--inspect-publish-uidstderrhttp", "--inspect[=[host:]port]": "cli.html#--inspecthostport", "--interactive": "cli.html#-i---interactive", "--jitless": "cli.html#--jitless", "--max-http-header-size=size": "cli.html#--max-http-header-sizesize", "--max-old-space-size=SIZE": "cli.html#--max-old-space-sizesize-in-megabytes", "--max-semi-space-size=SIZE": "cli.html#--max-semi-space-sizesize-in-megabytes", "--napi-modules": "cli.html#--napi-modules", "--no-addons": "cli.html#--no-addons", "--no-deprecation": "cli.html#--no-deprecation", "--no-experimental-fetch": "cli.html#--no-experimental-fetch", "--no-experimental-global-customevent": "cli.html#--no-experimental-global-customevent", "--no-experimental-global-webcrypto": "cli.html#--no-experimental-global-webcrypto", "--no-experimental-repl-await": "cli.html#--no-experimental-repl-await", "--no-extra-info-on-fatal-exception": "cli.html#--no-extra-info-on-fatal-exception", "--no-force-async-hooks-checks": "cli.html#--no-force-async-hooks-checks", "--no-global-search-paths": "cli.html#--no-global-search-paths", "--no-network-family-autoselection": "cli.html#--no-network-family-autoselection", "--no-warnings": "cli.html#--no-warnings", "--node-memory-debug": "cli.html#--node-memory-debug", "--openssl-config=file": "cli.html#--openssl-configfile", "--openssl-legacy-provider": "cli.html#--openssl-legacy-provider", "--openssl-shared-config": "cli.html#--openssl-shared-config", "--pending-deprecation": "cli.html#--pending-deprecation", "--policy-integrity=sri": "cli.html#--policy-integritysri", "--preserve-symlinks": "cli.html#--preserve-symlinks", "--preserve-symlinks-main": "cli.html#--preserve-symlinks-main", "--print \"script\"": "cli.html#-p---print-script", "--prof": "cli.html#--prof", "--prof-process": "cli.html#--prof-process", "--redirect-warnings=file": "cli.html#--redirect-warningsfile", "--report-compact": "cli.html#--report-compact", "--report-dir=directory": "cli.html#--report-dirdirectory-report-directorydirectory", "--report-filename=filename": "cli.html#--report-filenamefilename", "--report-on-fatalerror": "cli.html#--report-on-fatalerror", "--report-on-signal": "cli.html#--report-on-signal", "--report-signal=signal": "cli.html#--report-signalsignal", "--report-uncaught-exception": "cli.html#--report-uncaught-exception", "--require module": "cli.html#-r---require-module", "--secure-heap-min=n": "cli.html#--secure-heap-minn", "--secure-heap=n": "cli.html#--secure-heapn", "--snapshot-blob=path": "cli.html#--snapshot-blobpath", "--test": "cli.html#--test", "--test-name-pattern": "cli.html#--test-name-pattern", "--test-only": "cli.html#--test-only", "--test-reporter": "cli.html#--test-reporter", "--test-reporter-destination": "cli.html#--test-reporter-destination", "--test-shard": "cli.html#--test-shard", "--throw-deprecation": "cli.html#--throw-deprecation", "--title=title": "cli.html#--titletitle", "--tls-cipher-list=list": "cli.html#--tls-cipher-listlist", "--tls-keylog=file": "cli.html#--tls-keylogfile", "--tls-max-v1.2": "cli.html#--tls-max-v12", "--tls-max-v1.3": "cli.html#--tls-max-v13", "--tls-min-v1.0": "cli.html#--tls-min-v10", "--tls-min-v1.1": "cli.html#--tls-min-v11", "--tls-min-v1.2": "cli.html#--tls-min-v12", "--tls-min-v1.3": "cli.html#--tls-min-v13", "--trace-atomics-wait": "cli.html#--trace-atomics-wait", "--trace-deprecation": "cli.html#--trace-deprecation", "--trace-event-categories": "cli.html#--trace-event-categories", "--trace-event-file-pattern": "cli.html#--trace-event-file-pattern", "--trace-events-enabled": "cli.html#--trace-events-enabled", "--trace-exit": "cli.html#--trace-exit", "--trace-sigint": "cli.html#--trace-sigint", "--trace-sync-io": "cli.html#--trace-sync-io", "--trace-tls": "cli.html#--trace-tls", "--trace-uncaught": "cli.html#--trace-uncaught", "--trace-warnings": "cli.html#--trace-warnings", "--track-heap-objects": "cli.html#--track-heap-objects", "--unhandled-rejections=mode": "cli.html#--unhandled-rejectionsmode", "--use-bundled-ca": "cli.html#--use-bundled-ca---use-openssl-ca", "--use-largepages=mode": "cli.html#--use-largepagesmode", "--use-openssl-ca": "cli.html#--use-bundled-ca---use-openssl-ca", "--v8-options": "cli.html#--v8-options", "--v8-pool-size=num": "cli.html#--v8-pool-sizenum", "--version": "cli.html#-v---version", "--watch": "cli.html#--watch", "--watch-path": "cli.html#--watch-path", "--watch-preserve-output": "cli.html#--watch-preserve-output", "--zero-fill-buffers": "cli.html#--zero-fill-buffers", "-c": "cli.html#-c---check", "-C condition": "cli.html#-c-condition---conditionscondition", "-e": "cli.html#-e---eval-script", "-h": "cli.html#-h---help", "-i": "cli.html#-i---interactive", "-p": "cli.html#-p---print-script", "-r": "cli.html#-r---require-module", "-v": "cli.html#-v---version", "__dirname": "single-executable-applications.html#__dirname-in-the-injected-module", "__filename": "single-executable-applications.html#__filename-and-modulefilename-in-the-injected-module", "ABORT_ERR": "errors.html#abort_err", "abortController.abort()": "globals.html#abortcontrollerabortreason", "abortController.signal": "globals.html#abortcontrollersignal", "abortSignal.aborted": "globals.html#abortsignalaborted", "abortSignal.onabort": "globals.html#abortsignalonabort", "abortSignal.reason": "globals.html#abortsignalreason", "abortSignal.throwIfAborted()": "globals.html#abortsignalthrowifaborted", "aesCbcParams.iv": "webcrypto.html#aescbcparamsiv", "aesCbcParams.name": "webcrypto.html#aescbcparamsname", "aesCtrParams.counter": "webcrypto.html#aesctrparamscounter", "aesCtrParams.length": "webcrypto.html#aesctrparamslength", "aesCtrParams.name": "webcrypto.html#aesctrparamsname", "aesGcmParams.additionalData": "webcrypto.html#aesgcmparamsadditionaldata", "aesGcmParams.iv": "webcrypto.html#aesgcmparamsiv", "aesGcmParams.name": "webcrypto.html#aesgcmparamsname", "aesGcmParams.tagLength": "webcrypto.html#aesgcmparamstaglength", "aesKeyGenParams.length": "webcrypto.html#aeskeygenparamslength", "aesKeyGenParams.name": "webcrypto.html#aeskeygenparamsname", "after()": "async_hooks.html#afterasyncid", "afterEach()": "test.html#aftereachfn-options", "agent.createConnection()": "http.html#agentcreateconnectionoptions-callback", "agent.destroy()": "http.html#agentdestroy", "agent.freeSockets": "http.html#agentfreesockets", "agent.getName()": "http.html#agentgetnameoptions", "agent.keepSocketAlive()": "http.html#agentkeepsocketalivesocket", "agent.maxFreeSockets": "http.html#agentmaxfreesockets", "agent.maxSockets": "http.html#agentmaxsockets", "agent.maxTotalSockets": "http.html#agentmaxtotalsockets", "agent.requests": "http.html#agentrequests", "agent.reuseSocket()": "http.html#agentreusesocketsocket-request", "agent.sockets": "http.html#agentsockets", "algorithmIdentifier.name": "webcrypto.html#algorithmidentifiername", "Assert": "assert.html", "assert()": "assert.html#assertvalue-message", "assert.deepEqual()": "assert.html#assertdeepequalactual-expected-message", "assert.deepStrictEqual()": "assert.html#assertdeepstrictequalactual-expected-message", "assert.doesNotMatch()": "assert.html#assertdoesnotmatchstring-regexp-message", "assert.doesNotReject()": "assert.html#assertdoesnotrejectasyncfn-error-message", "assert.doesNotThrow()": "assert.html#assertdoesnotthrowfn-error-message", "assert.equal()": "assert.html#assertequalactual-expected-message", "assert.fail()": "assert.html#assertfailactual-expected-message-operator-stackstartfn", "assert.ifError()": "assert.html#assertiferrorvalue", "assert.match()": "assert.html#assertmatchstring-regexp-message", "assert.notDeepEqual()": "assert.html#assertnotdeepequalactual-expected-message", "assert.notDeepStrictEqual()": "assert.html#assertnotdeepstrictequalactual-expected-message", "assert.notEqual()": "assert.html#assertnotequalactual-expected-message", "assert.notStrictEqual()": "assert.html#assertnotstrictequalactual-expected-message", "assert.ok()": "assert.html#assertokvalue-message", "assert.rejects()": "assert.html#assertrejectsasyncfn-error-message", "assert.strictEqual()": "assert.html#assertstrictequalactual-expected-message", "assert.throws()": "assert.html#assertthrowsfn-error-message", "Async hooks": "async_hooks.html", "async_hooks.asyncWrapProviders": "async_hooks.html#async_hooksasyncwrapproviders", "async_hooks.createHook()": "async_hooks.html#async_hookscreatehookcallbacks", "async_hooks.executionAsyncId()": "async_hooks.html#async_hooksexecutionasyncid", "async_hooks.executionAsyncResource()": "async_hooks.html#async_hooksexecutionasyncresource", "async_hooks.triggerAsyncId()": "async_hooks.html#async_hookstriggerasyncid", "asyncEnd()": "diagnostics_channel.html#asyncendevent", "asyncHook.disable()": "async_hooks.html#asynchookdisable", "asyncHook.enable()": "async_hooks.html#asynchookenable", "Asynchronous context tracking": "async_context.html", "asyncLocalStorage.disable()": "async_context.html#asynclocalstoragedisable", "asyncLocalStorage.enterWith()": "async_context.html#asynclocalstorageenterwithstore", "asyncLocalStorage.exit()": "async_context.html#asynclocalstorageexitcallback-args", "asyncLocalStorage.getStore()": "async_context.html#asynclocalstoragegetstore", "asyncLocalStorage.run()": "async_context.html#asynclocalstoragerunstore-callback-args", "asyncResource.asyncId()": "async_context.html#asyncresourceasyncid", "asyncResource.bind()": "async_context.html#asyncresourcebindfn-thisarg", "asyncResource.emitDestroy()": "async_context.html#asyncresourceemitdestroy", "asyncResource.runInAsyncScope()": "async_context.html#asyncresourceruninasyncscopefn-thisarg-args", "asyncResource.triggerAsyncId()": "async_context.html#asyncresourcetriggerasyncid", "asyncStart()": "diagnostics_channel.html#asyncstartevent", "atob()": "globals.html#atobdata", "await": "repl.html#await-keyword", "before()": "test.html#beforefn-options", "beforeEach()": "test.html#beforeeachfn-options", "Blob": "buffer.html#blob-objects-and-messagechannel", "blob.arrayBuffer()": "buffer.html#blobarraybuffer", "blob.size": "buffer.html#blobsize", "blob.slice()": "buffer.html#blobslicestart-end-type", "blob.stream()": "buffer.html#blobstream", "blob.text()": "buffer.html#blobtext", "blob.type": "buffer.html#blobtype", "blockList.addAddress()": "net.html#blocklistaddaddressaddress-type", "blockList.addRange()": "net.html#blocklistaddrangestart-end-type", "blockList.addSubnet()": "net.html#blocklistaddsubnetnet-prefix-type", "blockList.check()": "net.html#blocklistcheckaddress-type", "blockList.rules": "net.html#blocklistrules", "BroadcastChannel": "globals.html#broadcastchannel", "broadcastChannel.close()": "worker_threads.html#broadcastchannelclose", "broadcastChannel.onmessage": "worker_threads.html#broadcastchannelonmessage", "broadcastChannel.onmessageerror": "worker_threads.html#broadcastchannelonmessageerror", "broadcastChannel.postMessage()": "worker_threads.html#broadcastchannelpostmessagemessage", "broadcastChannel.ref()": "worker_threads.html#broadcastchannelref", "broadcastChannel.unref()": "worker_threads.html#broadcastchannelunref", "btoa()": "globals.html#btoadata", "buf.buffer": "buffer.html#bufbuffer", "buf.byteOffset": "buffer.html#bufbyteoffset", "buf.compare()": "buffer.html#bufcomparetarget-targetstart-targetend-sourcestart-sourceend", "buf.copy()": "buffer.html#bufcopytarget-targetstart-sourcestart-sourceend", "buf.entries()": "buffer.html#bufentries", "buf.equals()": "buffer.html#bufequalsotherbuffer", "buf.fill()": "buffer.html#buffillvalue-offset-end-encoding", "buf.includes()": "buffer.html#bufincludesvalue-byteoffset-encoding", "buf.indexOf()": "buffer.html#bufindexofvalue-byteoffset-encoding", "buf.keys()": "buffer.html#bufkeys", "buf.lastIndexOf()": "buffer.html#buflastindexofvalue-byteoffset-encoding", "buf.length": "buffer.html#buflength", "buf.parent": "buffer.html#bufparent", "buf.readBigInt64BE()": "buffer.html#bufreadbigint64beoffset", "buf.readBigInt64LE()": "buffer.html#bufreadbigint64leoffset", "buf.readBigUInt64BE()": "buffer.html#bufreadbiguint64beoffset", "buf.readBigUInt64LE()": "buffer.html#bufreadbiguint64leoffset", "buf.readDoubleBE()": "buffer.html#bufreaddoublebeoffset", "buf.readDoubleLE()": "buffer.html#bufreaddoubleleoffset", "buf.readFloatBE()": "buffer.html#bufreadfloatbeoffset", "buf.readFloatLE()": "buffer.html#bufreadfloatleoffset", "buf.readInt16BE()": "buffer.html#bufreadint16beoffset", "buf.readInt16LE()": "buffer.html#bufreadint16leoffset", "buf.readInt32BE()": "buffer.html#bufreadint32beoffset", "buf.readInt32LE()": "buffer.html#bufreadint32leoffset", "buf.readInt8()": "buffer.html#bufreadint8offset", "buf.readIntBE()": "buffer.html#bufreadintbeoffset-bytelength", "buf.readIntLE()": "buffer.html#bufreadintleoffset-bytelength", "buf.readUInt16BE()": "buffer.html#bufreaduint16beoffset", "buf.readUInt16LE()": "buffer.html#bufreaduint16leoffset", "buf.readUInt32BE()": "buffer.html#bufreaduint32beoffset", "buf.readUInt32LE()": "buffer.html#bufreaduint32leoffset", "buf.readUInt8()": "buffer.html#bufreaduint8offset", "buf.readUIntBE()": "buffer.html#bufreaduintbeoffset-bytelength", "buf.readUIntLE()": "buffer.html#bufreaduintleoffset-bytelength", "buf.slice()": "buffer.html#bufslicestart-end", "buf.subarray()": "buffer.html#bufsubarraystart-end", "buf.swap16()": "buffer.html#bufswap16", "buf.swap32()": "buffer.html#bufswap32", "buf.swap64()": "buffer.html#bufswap64", "buf.toJSON()": "buffer.html#buftojson", "buf.toString()": "buffer.html#buftostringencoding-start-end", "buf.values()": "buffer.html#bufvalues", "buf.write()": "buffer.html#bufwritestring-offset-length-encoding", "buf.writeBigInt64BE()": "buffer.html#bufwritebigint64bevalue-offset", "buf.writeBigInt64LE()": "buffer.html#bufwritebigint64levalue-offset", "buf.writeBigUInt64BE()": "buffer.html#bufwritebiguint64bevalue-offset", "buf.writeBigUInt64LE()": "buffer.html#bufwritebiguint64levalue-offset", "buf.writeDoubleBE()": "buffer.html#bufwritedoublebevalue-offset", "buf.writeDoubleLE()": "buffer.html#bufwritedoublelevalue-offset", "buf.writeFloatBE()": "buffer.html#bufwritefloatbevalue-offset", "buf.writeFloatLE()": "buffer.html#bufwritefloatlevalue-offset", "buf.writeInt16BE()": "buffer.html#bufwriteint16bevalue-offset", "buf.writeInt16LE()": "buffer.html#bufwriteint16levalue-offset", "buf.writeInt32BE()": "buffer.html#bufwriteint32bevalue-offset", "buf.writeInt32LE()": "buffer.html#bufwriteint32levalue-offset", "buf.writeInt8()": "buffer.html#bufwriteint8value-offset", "buf.writeIntBE()": "buffer.html#bufwriteintbevalue-offset-bytelength", "buf.writeIntLE()": "buffer.html#bufwriteintlevalue-offset-bytelength", "buf.writeUInt16BE()": "buffer.html#bufwriteuint16bevalue-offset", "buf.writeUInt16LE()": "buffer.html#bufwriteuint16levalue-offset", "buf.writeUInt32BE()": "buffer.html#bufwriteuint32bevalue-offset", "buf.writeUInt32LE()": "buffer.html#bufwriteuint32levalue-offset", "buf.writeUInt8()": "buffer.html#bufwriteuint8value-offset", "buf.writeUIntBE()": "buffer.html#bufwriteuintbevalue-offset-bytelength", "buf.writeUIntLE()": "buffer.html#bufwriteuintlevalue-offset-bytelength", "buf[index]": "buffer.html#bufindex", "Buffer": "buffer.html", "Buffer.alloc()": "buffer.html#bufferfrom-bufferalloc-and-bufferallocunsafe", "Buffer.allocUnsafe()": "buffer.html#bufferfrom-bufferalloc-and-bufferallocunsafe", "buffer.atob()": "buffer.html#bufferatobdata", "buffer.btoa()": "buffer.html#bufferbtoadata", "buffer.constants.MAX_LENGTH": "buffer.html#bufferconstantsmax_length", "buffer.constants.MAX_STRING_LENGTH": "buffer.html#bufferconstantsmax_string_length", "Buffer.from()": "buffer.html#bufferfrom-bufferalloc-and-bufferallocunsafe", "buffer.INSPECT_MAX_BYTES": "buffer.html#bufferinspect_max_bytes", "buffer.isAscii()": "buffer.html#bufferisasciiinput", "buffer.isUtf8()": "buffer.html#bufferisutf8input", "buffer.kMaxLength": "buffer.html#bufferkmaxlength", "buffer.kStringMaxLength": "buffer.html#bufferkstringmaxlength", "buffer.resolveObjectURL()": "buffer.html#bufferresolveobjecturlid", "buffer.transcode()": "buffer.html#buffertranscodesource-fromenc-toenc", "byteLengthQueuingStrategy.highWaterMark": "webstreams.html#bytelengthqueuingstrategyhighwatermark", "byteLengthQueuingStrategy.size": "webstreams.html#bytelengthqueuingstrategysize", "C++ addons": "addons.html", "C++ embedder API": "embedding.html", "certificate.exportChallenge()": "crypto.html#certificateexportchallengespkac-encoding", "certificate.exportPublicKey()": "crypto.html#certificateexportpublickeyspkac-encoding", "certificate.verifySpkac()": "crypto.html#certificateverifyspkacspkac-encoding", "channel.bindStore()": "diagnostics_channel.html#channelbindstorestore-transform", "channel.hasSubscribers": "diagnostics_channel.html#channelhassubscribers", "channel.publish()": "diagnostics_channel.html#channelpublishmessage", "channel.runStores()": "diagnostics_channel.html#channelrunstorescontext-fn-thisarg-args", "channel.subscribe()": "diagnostics_channel.html#channelsubscribeonmessage", "channel.unbindStore()": "diagnostics_channel.html#channelunbindstorestore", "channel.unsubscribe()": "diagnostics_channel.html#channelunsubscribeonmessage", "Child process": "child_process.html", "child_process.exec()": "child_process.html#child_processexeccommand-options-callback", "child_process.execFile()": "child_process.html#child_processexecfilefile-args-options-callback", "child_process.execFileSync()": "child_process.html#child_processexecfilesyncfile-args-options", "child_process.execSync()": "child_process.html#child_processexecsynccommand-options", "child_process.fork()": "child_process.html#child_processforkmodulepath-args-options", "child_process.spawn()": "child_process.html#child_processspawncommand-args-options", "child_process.spawnSync()": "child_process.html#child_processspawnsynccommand-args-options", "cipher.final()": "crypto.html#cipherfinaloutputencoding", "cipher.getAuthTag()": "crypto.html#ciphergetauthtag", "cipher.setAAD()": "crypto.html#ciphersetaadbuffer-options", "cipher.setAutoPadding()": "crypto.html#ciphersetautopaddingautopadding", "cipher.update()": "crypto.html#cipherupdatedata-inputencoding-outputencoding", "Class AbortController": "globals.html#class-abortcontroller", "Class AbortSignal": "globals.html#class-abortsignal", "Class AesCbcParams": "webcrypto.html#class-aescbcparams", "Class AesCtrParams": "webcrypto.html#class-aesctrparams", "Class AesGcmParams": "webcrypto.html#class-aesgcmparams", "Class AesKeyGenParams": "webcrypto.html#class-aeskeygenparams", "Class AlgorithmIdentifier": "webcrypto.html#class-algorithmidentifier", "Class assert.CallTracker": "assert.html#class-assertcalltracker", "Class AssertionError": "errors.html#class-assertionerror", "Class AsyncHook": "async_hooks.html#class-asynchook", "Class AsyncLocalStorage": "async_context.html#class-asynclocalstorage", "Class AsyncResource": "async_hooks.html#class-asyncresource", "Class Blob": "globals.html#class-blob", "Class BroadcastChannel extends EventTarget": "worker_threads.html#class-broadcastchannel-extends-eventtarget", "Class BrotliOptions": "zlib.html#class-brotlioptions", "Class Buffer": "buffer.html#class-buffer", "Class Buffer.poolSize": "buffer.html#class-property-bufferpoolsize", "Class ByteLengthQueuingStrategy": "webstreams.html#class-bytelengthqueuingstrategy", "Class Certificate": "crypto.html#class-certificate", "Class Channel": "diagnostics_channel.html#class-channel", "Class ChildProcess": "child_process.html#class-childprocess", "Class Cipher": "crypto.html#class-cipher", "Class ClientHttp2Session": "http2.html#class-clienthttp2session", "Class ClientHttp2Stream": "http2.html#class-clienthttp2stream", "Class CompressionStream": "webstreams.html#class-compressionstream", "Class Console": "console.html#class-console", "Class CountQueuingStrategy": "webstreams.html#class-countqueuingstrategy", "Class Crypto": "webcrypto.html#class-crypto", "Class CryptoKey": "webcrypto.html#class-cryptokey", "Class CryptoKeyPair": "webcrypto.html#class-cryptokeypair", "Class CustomEvent": "events.html#class-customevent", "Class Decipher": "crypto.html#class-decipher", "Class DecompressionStream": "webstreams.html#class-decompressionstream", "Class dgram.Socket": "dgram.html#class-dgramsocket", "Class DiffieHellman": "crypto.html#class-diffiehellman", "Class DiffieHellmanGroup": "crypto.html#class-diffiehellmangroup", "Class dns.Resolver": "dns.html#class-dnsresolver", "Class dnsPromises.Resolver": "dns.html#class-dnspromisesresolver", "Class Domain": "domain.html#class-domain", "Class ECDH": "crypto.html#class-ecdh", "Class EcdhKeyDeriveParams": "webcrypto.html#class-ecdhkeyderiveparams", "Class EcdsaParams": "webcrypto.html#class-ecdsaparams", "Class EcKeyGenParams": "webcrypto.html#class-eckeygenparams", "Class EcKeyImportParams": "webcrypto.html#class-eckeyimportparams", "Class Ed448Params": "webcrypto.html#class-ed448params", "Class Error": "errors.html#class-error", "Class Event": "events.html#class-event", "Class EventEmitter": "events.html#class-eventemitter", "Class events.EventEmitterAsyncResource extends EventEmitter": "events.html#class-eventseventemitterasyncresource-extends-eventemitter", "Class EventTarget": "events.html#class-eventtarget", "Class File": "globals.html#class-file", "Class FileHandle": "fs.html#class-filehandle", "Class FormData": "globals.html#class-formdata", "Class fs.Dir": "fs.html#class-fsdir", "Class fs.Dirent": "fs.html#class-fsdirent", "Class fs.FSWatcher": "fs.html#class-fsfswatcher", "Class fs.ReadStream": "fs.html#class-fsreadstream", "Class fs.StatFs": "fs.html#class-fsstatfs", "Class fs.Stats": "fs.html#class-fsstats", "Class fs.StatWatcher": "fs.html#class-fsstatwatcher", "Class fs.WriteStream": "fs.html#class-fswritestream", "Class Hash": "crypto.html#class-hash", "Class Headers": "globals.html#class-headers", "Class Histogram": "perf_hooks.html#class-histogram", "Class HkdfParams": "webcrypto.html#class-hkdfparams", "Class Hmac": "crypto.html#class-hmac", "Class HmacImportParams": "webcrypto.html#class-hmacimportparams", "Class HmacKeyGenParams": "webcrypto.html#class-hmackeygenparams", "Class http.Agent": "http.html#class-httpagent", "Class http.ClientRequest": "http.html#class-httpclientrequest", "Class http.IncomingMessage": "http.html#class-httpincomingmessage", "Class http.OutgoingMessage": "http.html#class-httpoutgoingmessage", "Class http.Server": "http.html#class-httpserver", "Class http.ServerResponse": "http.html#class-httpserverresponse", "Class http2.Http2ServerRequest": "http2.html#class-http2http2serverrequest", "Class http2.Http2ServerResponse": "http2.html#class-http2http2serverresponse", "Class Http2SecureServer": "http2.html#class-http2secureserver", "Class Http2Server": "http2.html#class-http2server", "Class Http2Session": "http2.html#class-http2session", "Class Http2Stream": "http2.html#class-http2stream", "Class https.Agent": "https.html#class-httpsagent", "Class https.Server": "https.html#class-httpsserver", "Class Immediate": "timers.html#class-immediate", "Class inspector.Session": "inspector.html#class-inspectorsession", "Class InterfaceConstructor": "readline.html#class-interfaceconstructor", "Class IntervalHistogram extends Histogram": "perf_hooks.html#class-intervalhistogram-extends-histogram", "Class KeyObject": "crypto.html#class-keyobject", "Class MessageChannel": "worker_threads.html#class-messagechannel", "Class MessagePort": "worker_threads.html#class-messageport", "Class MockFunctionContext": "test.html#class-mockfunctioncontext", "Class MockTimers": "test.html#class-mocktimers", "Class MockTracker": "test.html#class-mocktracker", "Class module.SourceMap": "module.html#class-modulesourcemap", "Class net.BlockList": "net.html#class-netblocklist", "Class net.Server": "net.html#class-netserver", "Class net.Socket": "net.html#class-netsocket", "Class net.SocketAddress": "net.html#class-netsocketaddress", "Class NodeEventTarget": "events.html#class-nodeeventtarget", "Class Options": "zlib.html#class-options", "Class Pbkdf2Params": "webcrypto.html#class-pbkdf2params", "Class PerformanceEntry": "perf_hooks.html#class-performanceentry", "Class PerformanceMark": "perf_hooks.html#class-performancemark", "Class PerformanceMeasure": "perf_hooks.html#class-performancemeasure", "Class PerformanceNodeEntry": "perf_hooks.html#class-performancenodeentry", "Class PerformanceNodeTiming": "perf_hooks.html#class-performancenodetiming", "Class PerformanceObserver": "perf_hooks.html#class-performanceobserver", "Class PerformanceObserverEntryList": "perf_hooks.html#class-performanceobserverentrylist", "Class PerformanceResourceTiming": "perf_hooks.html#class-performanceresourcetiming", "Class RangeError": "errors.html#class-rangeerror", "Class ReadableByteStreamController": "globals.html#class-readablebytestreamcontroller", "Class ReadableStream": "globals.html#class-readablestream", "Class ReadableStreamBYOBReader": "globals.html#class-readablestreambyobreader", "Class ReadableStreamBYOBRequest": "globals.html#class-readablestreambyobrequest", "Class ReadableStreamDefaultController": "webstreams.html#class-readablestreamdefaultcontroller", "Class ReadableStreamDefaultReader": "globals.html#class-readablestreamdefaultreader", "Class readline.Interface": "readline.html#class-readlineinterface", "Class readlinePromises.Interface": "readline.html#class-readlinepromisesinterface", "Class readlinePromises.Readline": "readline.html#class-readlinepromisesreadline", "Class RecordableHistogram extends Histogram": "perf_hooks.html#class-recordablehistogram-extends-histogram", "Class ReferenceError": "errors.html#class-referenceerror", "Class REPLServer": "repl.html#class-replserver", "Class RsaHashedImportParams": "webcrypto.html#class-rsahashedimportparams", "Class RsaHashedKeyGenParams": "webcrypto.html#class-rsahashedkeygenparams", "Class RsaOaepParams": "webcrypto.html#class-rsaoaepparams", "Class RsaPssParams": "webcrypto.html#class-rsapssparams", "Class ServerHttp2Session": "http2.html#class-serverhttp2session", "Class ServerHttp2Stream": "http2.html#class-serverhttp2stream", "Class Sign": "crypto.html#class-sign", "Class SlowBuffer": "buffer.html#class-slowbuffer", "Class stream.Duplex": "stream.html#class-streamduplex", "Class stream.PassThrough": "stream.html#class-streampassthrough", "Class stream.Readable": "stream.html#class-streamreadable", "Class stream.Transform": "stream.html#class-streamtransform", "Class stream.Writable": "stream.html#class-streamwritable", "Class StringDecoder": "string_decoder.html#class-stringdecoder", "Class SubtleCrypto": "webcrypto.html#class-subtlecrypto", "Class SuiteContext": "test.html#class-suitecontext", "Class SyntaxError": "errors.html#class-syntaxerror", "Class SystemError": "errors.html#class-systemerror", "Class TestContext": "test.html#class-testcontext", "Class TestsStream": "test.html#class-testsstream", "Class TextDecoderStream": "globals.html#class-textdecoderstream", "Class TextEncoderStream": "webstreams.html#class-textencoderstream", "Class Timeout": "timers.html#class-timeout", "Class tls.CryptoStream": "tls.html#class-tlscryptostream", "Class tls.SecurePair": "tls.html#class-tlssecurepair", "Class tls.Server": "tls.html#class-tlsserver", "Class tls.TLSSocket": "tls.html#class-tlstlssocket", "Class TracingChannel": "diagnostics_channel.html#class-tracingchannel", "Class TransformStream": "globals.html#class-transformstream", "Class TransformStreamDefaultController": "webstreams.html#class-transformstreamdefaultcontroller", "Class tty.ReadStream": "tty.html#class-ttyreadstream", "Class tty.WriteStream": "tty.html#class-ttywritestream", "Class TypeError": "errors.html#class-typeerror", "Class URL": "url.html#class-url", "Class URLSearchParams": "url.html#class-urlsearchparams", "Class util.MIMEParams": "util.html#class-utilmimeparams", "Class util.MIMEType": "util.html#class-utilmimetype", "Class util.TextDecoder": "util.html#class-utiltextdecoder", "Class util.TextEncoder": "util.html#class-utiltextencoder", "Class v8.DefaultDeserializer": "v8.html#class-v8defaultdeserializer", "Class v8.DefaultSerializer": "v8.html#class-v8defaultserializer", "Class v8.Deserializer": "v8.html#class-v8deserializer", "Class v8.GCProfiler": "v8.html#class-v8gcprofiler", "Class v8.Serializer": "v8.html#class-v8serializer", "Class Verify": "crypto.html#class-verify", "Class vm.Module": "vm.html#class-vmmodule", "Class vm.Script": "vm.html#class-vmscript", "Class vm.SourceTextModule": "vm.html#class-vmsourcetextmodule", "Class vm.SyntheticModule": "vm.html#class-vmsyntheticmodule", "Class WASI": "wasi.html#class-wasi", "Class Worker": "worker_threads.html#class-worker", "Class WritableStream": "globals.html#class-writablestream", "Class WritableStreamDefaultController": "webstreams.html#class-writablestreamdefaultcontroller", "Class WritableStreamDefaultWriter": "globals.html#class-writablestreamdefaultwriter", "Class X509Certificate": "crypto.html#class-x509certificate", "Class zlib.BrotliCompress": "zlib.html#class-zlibbrotlicompress", "Class zlib.BrotliDecompress": "zlib.html#class-zlibbrotlidecompress", "Class zlib.Deflate": "zlib.html#class-zlibdeflate", "Class zlib.DeflateRaw": "zlib.html#class-zlibdeflateraw", "Class zlib.Gunzip": "zlib.html#class-zlibgunzip", "Class zlib.Gzip": "zlib.html#class-zlibgzip", "Class zlib.Inflate": "zlib.html#class-zlibinflate", "Class zlib.InflateRaw": "zlib.html#class-zlibinflateraw", "Class zlib.Unzip": "zlib.html#class-zlibunzip", "Class zlib.ZlibBase": "zlib.html#class-zlibzlibbase", "clearImmediate()": "globals.html#clearimmediateimmediateobject", "clearInterval()": "globals.html#clearintervalintervalobject", "clearTimeout()": "timers.html#cleartimeouttimeout", "clienthttp2session.request()": "http2.html#clienthttp2sessionrequestheaders-options", "Cluster": "cluster.html", "cluster.disconnect()": "cluster.html#clusterdisconnectcallback", "cluster.fork()": "cluster.html#clusterforkenv", "cluster.isMaster": "cluster.html#clusterismaster", "cluster.isPrimary": "cluster.html#clusterisprimary", "cluster.isWorker": "cluster.html#clusterisworker", "cluster.schedulingPolicy": "cluster.html#clusterschedulingpolicy", "cluster.settings": "cluster.html#clustersettings", "cluster.setupMaster()": "cluster.html#clustersetupmastersettings", "cluster.setupPrimary()": "cluster.html#clustersetupprimarysettings", "cluster.worker": "cluster.html#clusterworker", "cluster.workers": "cluster.html#clusterworkers", "Command-line API": "cli.html", "compressionStream.readable": "webstreams.html#compressionstreamreadable", "compressionStream.writable": "webstreams.html#compressionstreamwritable", "console": "globals.html#console", "Console": "console.html", "console.assert()": "console.html#consoleassertvalue-message", "console.clear()": "console.html#consoleclear", "console.count()": "console.html#consolecountlabel", "console.countReset()": "console.html#consolecountresetlabel", "console.debug()": "console.html#consoledebugdata-args", "console.dir()": "console.html#consoledirobj-options", "console.dirxml()": "console.html#consoledirxmldata", "console.error()": "console.html#consoleerrordata-args", "console.group()": "console.html#consolegrouplabel", "console.groupCollapsed()": "console.html#consolegroupcollapsed", "console.groupEnd()": "console.html#consolegroupend", "console.info()": "console.html#consoleinfodata-args", "console.log()": "console.html#consolelogdata-args", "console.profile()": "console.html#consoleprofilelabel", "console.profileEnd()": "console.html#consoleprofileendlabel", "console.table()": "console.html#consoletabletabulardata-properties", "console.time()": "console.html#consoletimelabel", "console.timeEnd()": "console.html#consoletimeendlabel", "console.timeLog()": "console.html#consoletimeloglabel-data", "console.timeStamp()": "console.html#consoletimestamplabel", "console.trace()": "console.html#consoletracemessage-args", "console.warn()": "console.html#consolewarndata-args", "context.after()": "test.html#contextafterfn-options", "context.afterEach()": "test.html#contextaftereachfn-options", "context.before()": "test.html#contextbeforefn-options", "context.beforeEach()": "test.html#contextbeforeeachfn-options", "context.diagnostic()": "test.html#contextdiagnosticmessage", "context.name": "test.html#contextname_1", "context.runOnly()": "test.html#contextrunonlyshouldrunonlytests", "context.signal": "test.html#contextsignal_1", "context.skip()": "test.html#contextskipmessage", "context.test()": "test.html#contexttestname-options-fn", "context.todo()": "test.html#contexttodomessage", "Corepack": "corepack.html", "countQueuingStrategy.highWaterMark": "webstreams.html#countqueuingstrategyhighwatermark", "countQueuingStrategy.size": "webstreams.html#countqueuingstrategysize", "crypto": "globals.html#crypto_1", "Crypto": "crypto.html", "crypto.checkPrime()": "crypto.html#cryptocheckprimecandidate-options-callback", "crypto.checkPrimeSync()": "crypto.html#cryptocheckprimesynccandidate-options", "crypto.constants": "crypto.html#cryptoconstants", "crypto.createCipher()": "crypto.html#cryptocreatecipheralgorithm-password-options", "crypto.createCipheriv()": "crypto.html#cryptocreatecipherivalgorithm-key-iv-options", "crypto.createDecipher()": "crypto.html#cryptocreatedecipheralgorithm-password-options", "crypto.createDecipheriv()": "crypto.html#cryptocreatedecipherivalgorithm-key-iv-options", "crypto.createDiffieHellman()": "crypto.html#cryptocreatediffiehellmanprimelength-generator", "crypto.createDiffieHellmanGroup()": "crypto.html#cryptocreatediffiehellmangroupname", "crypto.createECDH()": "crypto.html#cryptocreateecdhcurvename", "crypto.createHash()": "crypto.html#cryptocreatehashalgorithm-options", "crypto.createHmac()": "crypto.html#cryptocreatehmacalgorithm-key-options", "crypto.createPrivateKey()": "crypto.html#cryptocreateprivatekeykey", "crypto.createPublicKey()": "crypto.html#cryptocreatepublickeykey", "crypto.createSecretKey()": "crypto.html#cryptocreatesecretkeykey-encoding", "crypto.createSign()": "crypto.html#cryptocreatesignalgorithm-options", "crypto.createVerify()": "crypto.html#cryptocreateverifyalgorithm-options", "crypto.diffieHellman()": "crypto.html#cryptodiffiehellmanoptions", "crypto.fips": "crypto.html#cryptofips", "crypto.generateKey()": "crypto.html#cryptogeneratekeytype-options-callback", "crypto.generateKeyPair()": "crypto.html#cryptogeneratekeypairtype-options-callback", "crypto.generateKeyPairSync()": "crypto.html#cryptogeneratekeypairsynctype-options", "crypto.generateKeySync()": "crypto.html#cryptogeneratekeysynctype-options", "crypto.generatePrime()": "crypto.html#cryptogenerateprimesize-options-callback", "crypto.generatePrimeSync()": "crypto.html#cryptogenerateprimesyncsize-options", "crypto.getCipherInfo()": "crypto.html#cryptogetcipherinfonameornid-options", "crypto.getCiphers()": "crypto.html#cryptogetciphers", "crypto.getCurves()": "crypto.html#cryptogetcurves", "crypto.getDiffieHellman()": "crypto.html#cryptogetdiffiehellmangroupname", "crypto.getFips()": "crypto.html#cryptogetfips", "crypto.getHashes()": "crypto.html#cryptogethashes", "crypto.getRandomValues()": "crypto.html#cryptogetrandomvaluestypedarray", "crypto.hkdf()": "crypto.html#cryptohkdfdigest-ikm-salt-info-keylen-callback", "crypto.hkdfSync()": "crypto.html#cryptohkdfsyncdigest-ikm-salt-info-keylen", "crypto.pbkdf2()": "crypto.html#cryptopbkdf2password-salt-iterations-keylen-digest-callback", "crypto.pbkdf2Sync()": "crypto.html#cryptopbkdf2syncpassword-salt-iterations-keylen-digest", "crypto.privateDecrypt()": "crypto.html#cryptoprivatedecryptprivatekey-buffer", "crypto.privateEncrypt()": "crypto.html#cryptoprivateencryptprivatekey-buffer", "crypto.publicDecrypt()": "crypto.html#cryptopublicdecryptkey-buffer", "crypto.publicEncrypt()": "crypto.html#cryptopublicencryptkey-buffer", "crypto.randomBytes()": "crypto.html#cryptorandombytessize-callback", "crypto.randomFill()": "crypto.html#cryptorandomfillbuffer-offset-size-callback", "crypto.randomFillSync()": "crypto.html#cryptorandomfillsyncbuffer-offset-size", "crypto.randomInt()": "crypto.html#cryptorandomintmin-max-callback", "crypto.randomUUID()": "crypto.html#cryptorandomuuidoptions", "crypto.scrypt()": "crypto.html#cryptoscryptpassword-salt-keylen-options-callback", "crypto.scryptSync()": "crypto.html#cryptoscryptsyncpassword-salt-keylen-options", "crypto.secureHeapUsed()": "crypto.html#cryptosecureheapused", "crypto.setEngine()": "crypto.html#cryptosetengineengine-flags", "crypto.setFips()": "crypto.html#cryptosetfipsbool", "crypto.sign()": "crypto.html#cryptosignalgorithm-data-key-callback", "crypto.subtle": "webcrypto.html#cryptosubtle", "crypto.timingSafeEqual()": "crypto.html#cryptotimingsafeequala-b", "crypto.verify()": "crypto.html#cryptoverifyalgorithm-data-key-signature-callback", "crypto.webcrypto": "crypto.html#cryptowebcrypto", "CryptoKey": "globals.html#cryptokey", "cryptoKey.algorithm": "webcrypto.html#cryptokeyalgorithm", "cryptoKey.extractable": "webcrypto.html#cryptokeyextractable", "cryptoKey.type": "webcrypto.html#cryptokeytype", "cryptoKey.usages": "webcrypto.html#cryptokeyusages", "cryptoKeyPair.privateKey": "webcrypto.html#cryptokeypairprivatekey", "cryptoKeyPair.publicKey": "webcrypto.html#cryptokeypairpublickey", "cryptoStream.bytesWritten": "tls.html#cryptostreambyteswritten", "ctx.callCount()": "test.html#ctxcallcount", "ctx.calls": "test.html#ctxcalls", "ctx.mockImplementation()": "test.html#ctxmockimplementationimplementation", "ctx.mockImplementationOnce()": "test.html#ctxmockimplementationonceimplementation-oncall", "ctx.resetCalls()": "test.html#ctxresetcalls", "ctx.restore()": "test.html#ctxrestore", "CustomEvent": "globals.html#customevent", "data:": "esm.html#data-imports", "Debugger": "debugger.html", "debuglog().enabled": "util.html#debuglogenabled", "decipher.final()": "crypto.html#decipherfinaloutputencoding", "decipher.setAAD()": "crypto.html#deciphersetaadbuffer-options", "decipher.setAuthTag()": "crypto.html#deciphersetauthtagbuffer-encoding", "decipher.setAutoPadding()": "crypto.html#deciphersetautopaddingautopadding", "decipher.update()": "crypto.html#decipherupdatedata-inputencoding-outputencoding", "decompressionStream.readable": "webstreams.html#decompressionstreamreadable", "decompressionStream.writable": "webstreams.html#decompressionstreamwritable", "Deprecated APIs": "deprecations.html", "describe": "test.html#describeit-syntax", "describe()": "test.html#describename-options-fn", "describe.only()": "test.html#describeonlyname-options-fn", "describe.skip()": "test.html#describeskipname-options-fn", "describe.todo()": "test.html#describetodoname-options-fn", "deserializer._readHostObject()": "v8.html#deserializer_readhostobject", "deserializer.getWireFormatVersion()": "v8.html#deserializergetwireformatversion", "deserializer.readDouble()": "v8.html#deserializerreaddouble", "deserializer.readHeader()": "v8.html#deserializerreadheader", "deserializer.readRawBytes()": "v8.html#deserializerreadrawbyteslength", "deserializer.readUint32()": "v8.html#deserializerreaduint32", "deserializer.readUint64()": "v8.html#deserializerreaduint64", "deserializer.readValue()": "v8.html#deserializerreadvalue", "deserializer.transferArrayBuffer()": "v8.html#deserializertransferarraybufferid-arraybuffer", "destroy()": "async_hooks.html#destroyasyncid", "dgram.createSocket()": "dgram.html#dgramcreatesocketoptions-callback", "Diagnostic report": "report.html", "Diagnostics Channel": "diagnostics_channel.html", "diagnostics_channel.channel()": "diagnostics_channel.html#diagnostics_channelchannelname", "diagnostics_channel.hasSubscribers()": "diagnostics_channel.html#diagnostics_channelhassubscribersname", "diagnostics_channel.subscribe()": "diagnostics_channel.html#diagnostics_channelsubscribename-onmessage", "diagnostics_channel.tracingChannel()": "diagnostics_channel.html#diagnostics_channeltracingchannelnameorchannels", "diagnostics_channel.unsubscribe()": "diagnostics_channel.html#diagnostics_channelunsubscribename-onmessage", "diffieHellman.computeSecret()": "crypto.html#diffiehellmancomputesecretotherpublickey-inputencoding-outputencoding", "diffieHellman.generateKeys()": "crypto.html#diffiehellmangeneratekeysencoding", "diffieHellman.getGenerator()": "crypto.html#diffiehellmangetgeneratorencoding", "diffieHellman.getPrime()": "crypto.html#diffiehellmangetprimeencoding", "diffieHellman.getPrivateKey()": "crypto.html#diffiehellmangetprivatekeyencoding", "diffieHellman.getPublicKey()": "crypto.html#diffiehellmangetpublickeyencoding", "diffieHellman.setPrivateKey()": "crypto.html#diffiehellmansetprivatekeyprivatekey-encoding", "diffieHellman.setPublicKey()": "crypto.html#diffiehellmansetpublickeypublickey-encoding", "diffieHellman.verifyError": "crypto.html#diffiehellmanverifyerror", "dir.close()": "fs.html#dirclose", "dir.closeSync()": "fs.html#dirclosesync", "dir.path": "fs.html#dirpath", "dir.read()": "fs.html#dirread", "dir.readSync()": "fs.html#dirreadsync", "dir[Symbol.asyncIterator]()": "fs.html#dirsymbolasynciterator", "dirent.isBlockDevice()": "fs.html#direntisblockdevice", "dirent.isCharacterDevice()": "fs.html#direntischaracterdevice", "dirent.isDirectory()": "fs.html#direntisdirectory", "dirent.isFIFO()": "fs.html#direntisfifo", "dirent.isFile()": "fs.html#direntisfile", "dirent.isSocket()": "fs.html#direntissocket", "dirent.isSymbolicLink()": "fs.html#direntissymboliclink", "dirent.name": "fs.html#direntname", "dirent.path": "fs.html#direntpath", "DNS": "dns.html", "dns.getDefaultResultOrder()": "dns.html#dnsgetdefaultresultorder", "dns.getServers()": "dns.html#dnsgetservers", "dns.lookup()": "dns.html#dnslookup", "dns.lookupService()": "dns.html#dnslookupserviceaddress-port-callback", "dns.resolve()": "dns.html#dnsresolve-dnsresolve-and-dnsreverse", "dns.resolve*()": "dns.html#dnsresolve-dnsresolve-and-dnsreverse", "dns.resolve4()": "dns.html#dnsresolve4hostname-options-callback", "dns.resolve6()": "dns.html#dnsresolve6hostname-options-callback", "dns.resolveAny()": "dns.html#dnsresolveanyhostname-callback", "dns.resolveCaa()": "dns.html#dnsresolvecaahostname-callback", "dns.resolveCname()": "dns.html#dnsresolvecnamehostname-callback", "dns.resolveMx()": "dns.html#dnsresolvemxhostname-callback", "dns.resolveNaptr()": "dns.html#dnsresolvenaptrhostname-callback", "dns.resolveNs()": "dns.html#dnsresolvenshostname-callback", "dns.resolvePtr()": "dns.html#dnsresolveptrhostname-callback", "dns.resolveSoa()": "dns.html#dnsresolvesoahostname-callback", "dns.resolveSrv()": "dns.html#dnsresolvesrvhostname-callback", "dns.resolveTxt()": "dns.html#dnsresolvetxthostname-callback", "dns.reverse()": "dns.html#dnsreverseip-callback", "dns.setDefaultResultOrder()": "dns.html#dnssetdefaultresultorderorder", "dns.setServers()": "dns.html#dnssetserversservers", "dnsPromises.getDefaultResultOrder()": "dns.html#dnspromisesgetdefaultresultorder", "dnsPromises.getServers()": "dns.html#dnspromisesgetservers", "dnsPromises.lookup()": "dns.html#dnspromiseslookuphostname-options", "dnsPromises.lookupService()": "dns.html#dnspromiseslookupserviceaddress-port", "dnsPromises.resolve()": "dns.html#dnspromisesresolvehostname-rrtype", "dnsPromises.resolve4()": "dns.html#dnspromisesresolve4hostname-options", "dnsPromises.resolve6()": "dns.html#dnspromisesresolve6hostname-options", "dnsPromises.resolveAny()": "dns.html#dnspromisesresolveanyhostname", "dnsPromises.resolveCaa()": "dns.html#dnspromisesresolvecaahostname", "dnsPromises.resolveCname()": "dns.html#dnspromisesresolvecnamehostname", "dnsPromises.resolveMx()": "dns.html#dnspromisesresolvemxhostname", "dnsPromises.resolveNaptr()": "dns.html#dnspromisesresolvenaptrhostname", "dnsPromises.resolveNs()": "dns.html#dnspromisesresolvenshostname", "dnsPromises.resolvePtr()": "dns.html#dnspromisesresolveptrhostname", "dnsPromises.resolveSoa()": "dns.html#dnspromisesresolvesoahostname", "dnsPromises.resolveSrv()": "dns.html#dnspromisesresolvesrvhostname", "dnsPromises.resolveTxt()": "dns.html#dnspromisesresolvetxthostname", "dnsPromises.reverse()": "dns.html#dnspromisesreverseip", "dnsPromises.setDefaultResultOrder()": "dns.html#dnspromisessetdefaultresultorderorder", "dnsPromises.setServers()": "dns.html#dnspromisessetserversservers", "Domain": "domain.html", "domain.add()": "domain.html#domainaddemitter", "domain.bind()": "domain.html#domainbindcallback", "domain.create()": "domain.html#domaincreate", "domain.enter()": "domain.html#domainenter", "domain.exit()": "domain.html#domainexit", "domain.intercept()": "domain.html#domaininterceptcallback", "domain.members": "domain.html#domainmembers", "domain.remove()": "domain.html#domainremoveemitter", "domain.run()": "domain.html#domainrunfn-args", "DOMException": "globals.html#domexception", "duplex.allowHalfOpen": "stream.html#duplexallowhalfopen", "ecdh.computeSecret()": "crypto.html#ecdhcomputesecretotherpublickey-inputencoding-outputencoding", "ecdh.generateKeys()": "crypto.html#ecdhgeneratekeysencoding-format", "ecdh.getPrivateKey()": "crypto.html#ecdhgetprivatekeyencoding", "ecdh.getPublicKey()": "crypto.html#ecdhgetpublickeyencoding-format", "ecdh.setPrivateKey()": "crypto.html#ecdhsetprivatekeyprivatekey-encoding", "ecdh.setPublicKey()": "crypto.html#ecdhsetpublickeypublickey-encoding", "ecdhKeyDeriveParams.name": "webcrypto.html#ecdhkeyderiveparamsname", "ecdhKeyDeriveParams.public": "webcrypto.html#ecdhkeyderiveparamspublic", "ecdsaParams.hash": "webcrypto.html#ecdsaparamshash", "ecdsaParams.name": "webcrypto.html#ecdsaparamsname", "ecKeyGenParams.name": "webcrypto.html#eckeygenparamsname", "ecKeyGenParams.namedCurve": "webcrypto.html#eckeygenparamsnamedcurve", "ecKeyImportParams.name": "webcrypto.html#eckeyimportparamsname", "ecKeyImportParams.namedCurve": "webcrypto.html#eckeyimportparamsnamedcurve", "ed448Params.context": "webcrypto.html#ed448paramscontext", "ed448Params.name": "webcrypto.html#ed448paramsname", "emitter.addListener()": "events.html#emitteraddlistenereventname-listener", "emitter.emit()": "events.html#emitteremiteventname-args", "emitter.eventNames()": "events.html#emittereventnames", "emitter.getMaxListeners()": "events.html#emittergetmaxlisteners", "emitter.listenerCount()": "events.html#emitterlistenercounteventname-listener", "emitter.listeners()": "events.html#emitterlistenerseventname", "emitter.off()": "events.html#emitteroffeventname-listener", "emitter.on()": "events.html#emitteroneventname-listener", "emitter.once()": "events.html#emitteronceeventname-listener", "emitter.prependListener()": "events.html#emitterprependlistenereventname-listener", "emitter.prependOnceListener()": "events.html#emitterprependoncelistenereventname-listener", "emitter.rawListeners()": "events.html#emitterrawlistenerseventname", "emitter.removeAllListeners()": "events.html#emitterremovealllistenerseventname", "emitter.removeListener()": "events.html#emitterremovelistenereventname-listener", "emitter.setMaxListeners()": "events.html#emittersetmaxlistenersn", "emitter[Symbol.for()": "events.html#emittersymbolfornodejsrejectionerr-eventname-args", "end()": "diagnostics_channel.html#endevent", "ERR_ACCESS_DENIED": "errors.html#err_access_denied", "ERR_AMBIGUOUS_ARGUMENT": "errors.html#err_ambiguous_argument", "ERR_ARG_NOT_ITERABLE": "errors.html#err_arg_not_iterable", "ERR_ASSERTION": "errors.html#err_assertion", "ERR_ASYNC_CALLBACK": "errors.html#err_async_callback", "ERR_ASYNC_TYPE": "errors.html#err_async_type", "ERR_BROTLI_COMPRESSION_FAILED": "errors.html#err_brotli_compression_failed", "ERR_BROTLI_INVALID_PARAM": "errors.html#err_brotli_invalid_param", "ERR_BUFFER_CONTEXT_NOT_AVAILABLE": "errors.html#err_buffer_context_not_available", "ERR_BUFFER_OUT_OF_BOUNDS": "errors.html#err_buffer_out_of_bounds", "ERR_BUFFER_TOO_LARGE": "errors.html#err_buffer_too_large", "ERR_CANNOT_TRANSFER_OBJECT": "errors.html#err_cannot_transfer_object", "ERR_CANNOT_WATCH_SIGINT": "errors.html#err_cannot_watch_sigint", "ERR_CHILD_CLOSED_BEFORE_REPLY": "errors.html#err_child_closed_before_reply", "ERR_CHILD_PROCESS_IPC_REQUIRED": "errors.html#err_child_process_ipc_required", "ERR_CHILD_PROCESS_STDIO_MAXBUFFER": "errors.html#err_child_process_stdio_maxbuffer", "ERR_CLOSED_MESSAGE_PORT": "errors.html#err_closed_message_port", "ERR_CONSOLE_WRITABLE_STREAM": "errors.html#err_console_writable_stream", "ERR_CONSTRUCT_CALL_INVALID": "errors.html#err_construct_call_invalid", "ERR_CONSTRUCT_CALL_REQUIRED": "errors.html#err_construct_call_required", "ERR_CONTEXT_NOT_INITIALIZED": "errors.html#err_context_not_initialized", "ERR_CPU_USAGE": "errors.html#err_cpu_usage", "ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED": "errors.html#err_crypto_custom_engine_not_supported", "ERR_CRYPTO_ECDH_INVALID_FORMAT": "errors.html#err_crypto_ecdh_invalid_format", "ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY": "errors.html#err_crypto_ecdh_invalid_public_key", "ERR_CRYPTO_ENGINE_UNKNOWN": "errors.html#err_crypto_engine_unknown", "ERR_CRYPTO_FIPS_FORCED": "errors.html#err_crypto_fips_forced", "ERR_CRYPTO_FIPS_UNAVAILABLE": "errors.html#err_crypto_fips_unavailable", "ERR_CRYPTO_HASH_DIGEST_NO_UTF16": "errors.html#err_crypto_hash_digest_no_utf16", "ERR_CRYPTO_HASH_FINALIZED": "errors.html#err_crypto_hash_finalized", "ERR_CRYPTO_HASH_UPDATE_FAILED": "errors.html#err_crypto_hash_update_failed", "ERR_CRYPTO_INCOMPATIBLE_KEY": "errors.html#err_crypto_incompatible_key", "ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS": "errors.html#err_crypto_incompatible_key_options", "ERR_CRYPTO_INITIALIZATION_FAILED": "errors.html#err_crypto_initialization_failed", "ERR_CRYPTO_INVALID_AUTH_TAG": "errors.html#err_crypto_invalid_auth_tag", "ERR_CRYPTO_INVALID_COUNTER": "errors.html#err_crypto_invalid_counter", "ERR_CRYPTO_INVALID_CURVE": "errors.html#err_crypto_invalid_curve", "ERR_CRYPTO_INVALID_DIGEST": "errors.html#err_crypto_invalid_digest", "ERR_CRYPTO_INVALID_IV": "errors.html#err_crypto_invalid_iv", "ERR_CRYPTO_INVALID_JWK": "errors.html#err_crypto_invalid_jwk", "ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE": "errors.html#err_crypto_invalid_key_object_type", "ERR_CRYPTO_INVALID_KEYLEN": "errors.html#err_crypto_invalid_keylen", "ERR_CRYPTO_INVALID_KEYPAIR": "errors.html#err_crypto_invalid_keypair", "ERR_CRYPTO_INVALID_KEYTYPE": "errors.html#err_crypto_invalid_keytype", "ERR_CRYPTO_INVALID_MESSAGELEN": "errors.html#err_crypto_invalid_messagelen", "ERR_CRYPTO_INVALID_SCRYPT_PARAMS": "errors.html#err_crypto_invalid_scrypt_params", "ERR_CRYPTO_INVALID_STATE": "errors.html#err_crypto_invalid_state", "ERR_CRYPTO_INVALID_TAG_LENGTH": "errors.html#err_crypto_invalid_tag_length", "ERR_CRYPTO_JOB_INIT_FAILED": "errors.html#err_crypto_job_init_failed", "ERR_CRYPTO_JWK_UNSUPPORTED_CURVE": "errors.html#err_crypto_jwk_unsupported_curve", "ERR_CRYPTO_JWK_UNSUPPORTED_KEY_TYPE": "errors.html#err_crypto_jwk_unsupported_key_type", "ERR_CRYPTO_OPERATION_FAILED": "errors.html#err_crypto_operation_failed", "ERR_CRYPTO_PBKDF2_ERROR": "errors.html#err_crypto_pbkdf2_error", "ERR_CRYPTO_SCRYPT_INVALID_PARAMETER": "errors.html#err_crypto_scrypt_invalid_parameter", "ERR_CRYPTO_SCRYPT_NOT_SUPPORTED": "errors.html#err_crypto_scrypt_not_supported", "ERR_CRYPTO_SIGN_KEY_REQUIRED": "errors.html#err_crypto_sign_key_required", "ERR_CRYPTO_TIMING_SAFE_EQUAL_LENGTH": "errors.html#err_crypto_timing_safe_equal_length", "ERR_CRYPTO_UNKNOWN_CIPHER": "errors.html#err_crypto_unknown_cipher", "ERR_CRYPTO_UNKNOWN_DH_GROUP": "errors.html#err_crypto_unknown_dh_group", "ERR_CRYPTO_UNSUPPORTED_OPERATION": "errors.html#err_crypto_unsupported_operation", "ERR_DEBUGGER_ERROR": "errors.html#err_debugger_error", "ERR_DEBUGGER_STARTUP_ERROR": "errors.html#err_debugger_startup_error", "ERR_DIR_CLOSED": "errors.html#err_dir_closed", "ERR_DIR_CONCURRENT_OPERATION": "errors.html#err_dir_concurrent_operation", "ERR_DLOPEN_DISABLED": "errors.html#err_dlopen_disabled", "ERR_DLOPEN_FAILED": "errors.html#err_dlopen_failed", "ERR_DNS_SET_SERVERS_FAILED": "errors.html#err_dns_set_servers_failed", "ERR_DOMAIN_CALLBACK_NOT_AVAILABLE": "errors.html#err_domain_callback_not_available", "ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE": "errors.html#err_domain_cannot_set_uncaught_exception_capture", "ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION": "errors.html#err_duplicate_startup_snapshot_main_function", "ERR_ENCODING_INVALID_ENCODED_DATA": "errors.html#err_encoding_invalid_encoded_data", "ERR_ENCODING_NOT_SUPPORTED": "errors.html#err_encoding_not_supported", "ERR_EVAL_ESM_CANNOT_PRINT": "errors.html#err_eval_esm_cannot_print", "ERR_EVENT_RECURSION": "errors.html#err_event_recursion", "ERR_EXECUTION_ENVIRONMENT_NOT_AVAILABLE": "errors.html#err_execution_environment_not_available", "ERR_FALSY_VALUE_REJECTION": "errors.html#err_falsy_value_rejection", "ERR_FEATURE_UNAVAILABLE_ON_PLATFORM": "errors.html#err_feature_unavailable_on_platform", "ERR_FS_CP_DIR_TO_NON_DIR": "errors.html#err_fs_cp_dir_to_non_dir", "ERR_FS_CP_EEXIST": "errors.html#err_fs_cp_eexist", "ERR_FS_CP_EINVAL": "errors.html#err_fs_cp_einval", "ERR_FS_CP_FIFO_PIPE": "errors.html#err_fs_cp_fifo_pipe", "ERR_FS_CP_NON_DIR_TO_DIR": "errors.html#err_fs_cp_non_dir_to_dir", "ERR_FS_CP_SOCKET": "errors.html#err_fs_cp_socket", "ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY": "errors.html#err_fs_cp_symlink_to_subdirectory", "ERR_FS_CP_UNKNOWN": "errors.html#err_fs_cp_unknown", "ERR_FS_EISDIR": "errors.html#err_fs_eisdir", "ERR_FS_FILE_TOO_LARGE": "errors.html#err_fs_file_too_large", "ERR_FS_INVALID_SYMLINK_TYPE": "errors.html#err_fs_invalid_symlink_type", "ERR_HTTP2_ALTSVC_INVALID_ORIGIN": "errors.html#err_http2_altsvc_invalid_origin", "ERR_HTTP2_ALTSVC_LENGTH": "errors.html#err_http2_altsvc_length", "ERR_HTTP2_CONNECT_AUTHORITY": "errors.html#err_http2_connect_authority", "ERR_HTTP2_CONNECT_PATH": "errors.html#err_http2_connect_path", "ERR_HTTP2_CONNECT_SCHEME": "errors.html#err_http2_connect_scheme", "ERR_HTTP2_ERROR": "errors.html#err_http2_error", "ERR_HTTP2_FRAME_ERROR": "errors.html#err_http2_frame_error", "ERR_HTTP2_GOAWAY_SESSION": "errors.html#err_http2_goaway_session", "ERR_HTTP2_HEADER_REQUIRED": "errors.html#err_http2_header_required", "ERR_HTTP2_HEADER_SINGLE_VALUE": "errors.html#err_http2_header_single_value", "ERR_HTTP2_HEADERS_AFTER_RESPOND": "errors.html#err_http2_headers_after_respond", "ERR_HTTP2_HEADERS_OBJECT": "errors.html#err_http2_headers_object", "ERR_HTTP2_HEADERS_SENT": "errors.html#err_http2_headers_sent", "ERR_HTTP2_INFO_HEADERS_AFTER_RESPOND": "errors.html#err_http2_info_headers_after_respond", "ERR_HTTP2_INFO_STATUS_NOT_ALLOWED": "errors.html#err_http2_info_status_not_allowed", "ERR_HTTP2_INVALID_CONNECTION_HEADERS": "errors.html#err_http2_invalid_connection_headers", "ERR_HTTP2_INVALID_HEADER_VALUE": "errors.html#err_http2_invalid_header_value", "ERR_HTTP2_INVALID_INFO_STATUS": "errors.html#err_http2_invalid_info_status", "ERR_HTTP2_INVALID_ORIGIN": "errors.html#err_http2_invalid_origin", "ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH": "errors.html#err_http2_invalid_packed_settings_length", "ERR_HTTP2_INVALID_PSEUDOHEADER": "errors.html#err_http2_invalid_pseudoheader", "ERR_HTTP2_INVALID_SESSION": "errors.html#err_http2_invalid_session", "ERR_HTTP2_INVALID_SETTING_VALUE": "errors.html#err_http2_invalid_setting_value", "ERR_HTTP2_INVALID_STREAM": "errors.html#err_http2_invalid_stream", "ERR_HTTP2_MAX_PENDING_SETTINGS_ACK": "errors.html#err_http2_max_pending_settings_ack", "ERR_HTTP2_NESTED_PUSH": "errors.html#err_http2_nested_push", "ERR_HTTP2_NO_MEM": "errors.html#err_http2_no_mem", "ERR_HTTP2_NO_SOCKET_MANIPULATION": "errors.html#err_http2_no_socket_manipulation", "ERR_HTTP2_ORIGIN_LENGTH": "errors.html#err_http2_origin_length", "ERR_HTTP2_OUT_OF_STREAMS": "errors.html#err_http2_out_of_streams", "ERR_HTTP2_PAYLOAD_FORBIDDEN": "errors.html#err_http2_payload_forbidden", "ERR_HTTP2_PING_CANCEL": "errors.html#err_http2_ping_cancel", "ERR_HTTP2_PING_LENGTH": "errors.html#err_http2_ping_length", "ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED": "errors.html#err_http2_pseudoheader_not_allowed", "ERR_HTTP2_PUSH_DISABLED": "errors.html#err_http2_push_disabled", "ERR_HTTP2_SEND_FILE": "errors.html#err_http2_send_file", "ERR_HTTP2_SEND_FILE_NOSEEK": "errors.html#err_http2_send_file_noseek", "ERR_HTTP2_SESSION_ERROR": "errors.html#err_http2_session_error", "ERR_HTTP2_SETTINGS_CANCEL": "errors.html#err_http2_settings_cancel", "ERR_HTTP2_SOCKET_BOUND": "errors.html#err_http2_socket_bound", "ERR_HTTP2_SOCKET_UNBOUND": "errors.html#err_http2_socket_unbound", "ERR_HTTP2_STATUS_101": "errors.html#err_http2_status_101", "ERR_HTTP2_STATUS_INVALID": "errors.html#err_http2_status_invalid", "ERR_HTTP2_STREAM_CANCEL": "errors.html#err_http2_stream_cancel", "ERR_HTTP2_STREAM_CLOSED": "errors.html#err_http2_stream_closed", "ERR_HTTP2_STREAM_ERROR": "errors.html#err_http2_stream_error", "ERR_HTTP2_STREAM_SELF_DEPENDENCY": "errors.html#err_http2_stream_self_dependency", "ERR_HTTP2_TOO_MANY_INVALID_FRAMES": "errors.html#err_http2_too_many_invalid_frames", "ERR_HTTP2_TRAILERS_ALREADY_SENT": "errors.html#err_http2_trailers_already_sent", "ERR_HTTP2_TRAILERS_NOT_READY": "errors.html#err_http2_trailers_not_ready", "ERR_HTTP2_UNSUPPORTED_PROTOCOL": "errors.html#err_http2_unsupported_protocol", "ERR_HTTP_BODY_NOT_ALLOWED": "errors.html#err_http_body_not_allowed", "ERR_HTTP_CONTENT_LENGTH_MISMATCH": "errors.html#err_http_content_length_mismatch", "ERR_HTTP_HEADERS_SENT": "errors.html#err_http_headers_sent", "ERR_HTTP_INVALID_CHAR": "errors.html#err_http_invalid_char", "ERR_HTTP_INVALID_HEADER_VALUE": "errors.html#err_http_invalid_header_value", "ERR_HTTP_INVALID_STATUS_CODE": "errors.html#err_http_invalid_status_code", "ERR_HTTP_REQUEST_TIMEOUT": "errors.html#err_http_request_timeout", "ERR_HTTP_SOCKET_ASSIGNED": "errors.html#err_http_socket_assigned", "ERR_HTTP_SOCKET_ENCODING": "errors.html#err_http_socket_encoding", "ERR_HTTP_TRAILER_INVALID": "errors.html#err_http_trailer_invalid", "ERR_ILLEGAL_CONSTRUCTOR": "errors.html#err_illegal_constructor", "ERR_IMPORT_ASSERTION_TYPE_FAILED": "errors.html#err_import_assertion_type_failed", "ERR_IMPORT_ASSERTION_TYPE_MISSING": "errors.html#err_import_assertion_type_missing", "ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED": "errors.html#err_import_assertion_type_unsupported", "ERR_INCOMPATIBLE_OPTION_PAIR": "errors.html#err_incompatible_option_pair", "ERR_INDEX_OUT_OF_RANGE": "errors.html#err_index_out_of_range", "ERR_INPUT_TYPE_NOT_ALLOWED": "errors.html#err_input_type_not_allowed", "ERR_INSPECTOR_ALREADY_ACTIVATED": "errors.html#err_inspector_already_activated", "ERR_INSPECTOR_ALREADY_CONNECTED": "errors.html#err_inspector_already_connected", "ERR_INSPECTOR_CLOSED": "errors.html#err_inspector_closed", "ERR_INSPECTOR_COMMAND": "errors.html#err_inspector_command", "ERR_INSPECTOR_NOT_ACTIVE": "errors.html#err_inspector_not_active", "ERR_INSPECTOR_NOT_AVAILABLE": "errors.html#err_inspector_not_available", "ERR_INSPECTOR_NOT_CONNECTED": "errors.html#err_inspector_not_connected", "ERR_INSPECTOR_NOT_WORKER": "errors.html#err_inspector_not_worker", "ERR_INTERNAL_ASSERTION": "errors.html#err_internal_assertion", "ERR_INVALID_ADDRESS_FAMILY": "errors.html#err_invalid_address_family", "ERR_INVALID_ARG_TYPE": "errors.html#err_invalid_arg_type", "ERR_INVALID_ARG_VALUE": "errors.html#err_invalid_arg_value", "ERR_INVALID_ASYNC_ID": "errors.html#err_invalid_async_id", "ERR_INVALID_BUFFER_SIZE": "errors.html#err_invalid_buffer_size", "ERR_INVALID_CHAR": "errors.html#err_invalid_char", "ERR_INVALID_CURSOR_POS": "errors.html#err_invalid_cursor_pos", "ERR_INVALID_FD": "errors.html#err_invalid_fd", "ERR_INVALID_FD_TYPE": "errors.html#err_invalid_fd_type", "ERR_INVALID_FILE_URL_HOST": "errors.html#err_invalid_file_url_host", "ERR_INVALID_FILE_URL_PATH": "errors.html#err_invalid_file_url_path", "ERR_INVALID_HANDLE_TYPE": "errors.html#err_invalid_handle_type", "ERR_INVALID_HTTP_TOKEN": "errors.html#err_invalid_http_token", "ERR_INVALID_IP_ADDRESS": "errors.html#err_invalid_ip_address", "ERR_INVALID_MIME_SYNTAX": "errors.html#err_invalid_mime_syntax", "ERR_INVALID_MODULE": "errors.html#err_invalid_module", "ERR_INVALID_MODULE_SPECIFIER": "errors.html#err_invalid_module_specifier", "ERR_INVALID_OBJECT_DEFINE_PROPERTY": "errors.html#err_invalid_object_define_property", "ERR_INVALID_OPT_VALUE": "errors.html#err_invalid_opt_value", "ERR_INVALID_OPT_VALUE_ENCODING": "errors.html#err_invalid_opt_value_encoding", "ERR_INVALID_PACKAGE_CONFIG": "errors.html#err_invalid_package_config", "ERR_INVALID_PACKAGE_TARGET": "errors.html#err_invalid_package_target", "ERR_INVALID_PERFORMANCE_MARK": "errors.html#err_invalid_performance_mark", "ERR_INVALID_PROTOCOL": "errors.html#err_invalid_protocol", "ERR_INVALID_REPL_EVAL_CONFIG": "errors.html#err_invalid_repl_eval_config", "ERR_INVALID_REPL_INPUT": "errors.html#err_invalid_repl_input", "ERR_INVALID_RETURN_PROPERTY": "errors.html#err_invalid_return_property", "ERR_INVALID_RETURN_PROPERTY_VALUE": "errors.html#err_invalid_return_property_value", "ERR_INVALID_RETURN_VALUE": "errors.html#err_invalid_return_value", "ERR_INVALID_STATE": "errors.html#err_invalid_state", "ERR_INVALID_SYNC_FORK_INPUT": "errors.html#err_invalid_sync_fork_input", "ERR_INVALID_THIS": "errors.html#err_invalid_this", "ERR_INVALID_TRANSFER_OBJECT": "errors.html#err_invalid_transfer_object", "ERR_INVALID_TUPLE": "errors.html#err_invalid_tuple", "ERR_INVALID_URI": "errors.html#err_invalid_uri", "ERR_INVALID_URL": "errors.html#err_invalid_url", "ERR_INVALID_URL_SCHEME": "errors.html#err_invalid_url_scheme", "ERR_IPC_CHANNEL_CLOSED": "errors.html#err_ipc_channel_closed", "ERR_IPC_DISCONNECTED": "errors.html#err_ipc_disconnected", "ERR_IPC_ONE_PIPE": "errors.html#err_ipc_one_pipe", "ERR_IPC_SYNC_FORK": "errors.html#err_ipc_sync_fork", "ERR_LOADER_CHAIN_INCOMPLETE": "errors.html#err_loader_chain_incomplete", "ERR_MANIFEST_ASSERT_INTEGRITY": "errors.html#err_manifest_assert_integrity", "ERR_MANIFEST_DEPENDENCY_MISSING": "errors.html#err_manifest_dependency_missing", "ERR_MANIFEST_INTEGRITY_MISMATCH": "errors.html#err_manifest_integrity_mismatch", "ERR_MANIFEST_INVALID_RESOURCE_FIELD": "errors.html#err_manifest_invalid_resource_field", "ERR_MANIFEST_INVALID_SPECIFIER": "errors.html#err_manifest_invalid_specifier", "ERR_MANIFEST_PARSE_POLICY": "errors.html#err_manifest_parse_policy", "ERR_MANIFEST_TDZ": "errors.html#err_manifest_tdz", "ERR_MANIFEST_UNKNOWN_ONERROR": "errors.html#err_manifest_unknown_onerror", "ERR_MEMORY_ALLOCATION_FAILED": "errors.html#err_memory_allocation_failed", "ERR_MESSAGE_TARGET_CONTEXT_UNAVAILABLE": "errors.html#err_message_target_context_unavailable", "ERR_METHOD_NOT_IMPLEMENTED": "errors.html#err_method_not_implemented", "ERR_MISSING_ARGS": "errors.html#err_missing_args", "ERR_MISSING_MESSAGE_PORT_IN_TRANSFER_LIST": "errors.html#err_missing_message_port_in_transfer_list", "ERR_MISSING_OPTION": "errors.html#err_missing_option", "ERR_MISSING_PASSPHRASE": "errors.html#err_missing_passphrase", "ERR_MISSING_PLATFORM_FOR_WORKER": "errors.html#err_missing_platform_for_worker", "ERR_MISSING_TRANSFERABLE_IN_TRANSFER_LIST": "errors.html#err_missing_transferable_in_transfer_list", "ERR_MODULE_NOT_FOUND": "errors.html#err_module_not_found", "ERR_MULTIPLE_CALLBACK": "errors.html#err_multiple_callback", "ERR_NAPI_CONS_FUNCTION": "errors.html#err_napi_cons_function", "ERR_NAPI_CONS_PROTOTYPE_OBJECT": "errors.html#err_napi_cons_prototype_object", "ERR_NAPI_INVALID_DATAVIEW_ARGS": "errors.html#err_napi_invalid_dataview_args", "ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT": "errors.html#err_napi_invalid_typedarray_alignment", "ERR_NAPI_INVALID_TYPEDARRAY_LENGTH": "errors.html#err_napi_invalid_typedarray_length", "ERR_NAPI_TSFN_CALL_JS": "errors.html#err_napi_tsfn_call_js", "ERR_NAPI_TSFN_GET_UNDEFINED": "errors.html#err_napi_tsfn_get_undefined", "ERR_NAPI_TSFN_START_IDLE_LOOP": "errors.html#err_napi_tsfn_start_idle_loop", "ERR_NAPI_TSFN_STOP_IDLE_LOOP": "errors.html#err_napi_tsfn_stop_idle_loop", "ERR_NETWORK_IMPORT_BAD_RESPONSE": "errors.html#err_network_import_bad_response", "ERR_NETWORK_IMPORT_DISALLOWED": "errors.html#err_network_import_disallowed", "ERR_NO_CRYPTO": "errors.html#err_no_crypto", "ERR_NO_ICU": "errors.html#err_no_icu", "ERR_NO_LONGER_SUPPORTED": "errors.html#err_no_longer_supported", "ERR_NON_CONTEXT_AWARE_DISABLED": "errors.html#err_non_context_aware_disabled", "ERR_NOT_BUILDING_SNAPSHOT": "errors.html#err_not_building_snapshot", "ERR_NOT_SUPPORTED_IN_SNAPSHOT": "errors.html#err_not_supported_in_snapshot", "ERR_OPERATION_FAILED": "errors.html#err_operation_failed", "ERR_OUT_OF_RANGE": "errors.html#err_out_of_range", "ERR_OUTOFMEMORY": "errors.html#err_outofmemory", "ERR_PACKAGE_IMPORT_NOT_DEFINED": "errors.html#err_package_import_not_defined", "ERR_PACKAGE_PATH_NOT_EXPORTED": "errors.html#err_package_path_not_exported", "ERR_PARSE_ARGS_INVALID_OPTION_VALUE": "errors.html#err_parse_args_invalid_option_value", "ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL": "errors.html#err_parse_args_unexpected_positional", "ERR_PARSE_ARGS_UNKNOWN_OPTION": "errors.html#err_parse_args_unknown_option", "ERR_PARSE_HISTORY_DATA": "errors.html#err_parse_history_data", "ERR_PERFORMANCE_INVALID_TIMESTAMP": "errors.html#err_performance_invalid_timestamp", "ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS": "errors.html#err_performance_measure_invalid_options", "ERR_PROTO_ACCESS": "errors.html#err_proto_access", "ERR_REQUIRE_ESM": "errors.html#err_require_esm", "ERR_SCRIPT_EXECUTION_INTERRUPTED": "errors.html#err_script_execution_interrupted", "ERR_SCRIPT_EXECUTION_TIMEOUT": "errors.html#err_script_execution_timeout", "ERR_SERVER_ALREADY_LISTEN": "errors.html#err_server_already_listen", "ERR_SERVER_NOT_RUNNING": "errors.html#err_server_not_running", "ERR_SOCKET_ALREADY_BOUND": "errors.html#err_socket_already_bound", "ERR_SOCKET_BAD_BUFFER_SIZE": "errors.html#err_socket_bad_buffer_size", "ERR_SOCKET_BAD_PORT": "errors.html#err_socket_bad_port", "ERR_SOCKET_BAD_TYPE": "errors.html#err_socket_bad_type", "ERR_SOCKET_BUFFER_SIZE": "errors.html#err_socket_buffer_size", "ERR_SOCKET_CANNOT_SEND": "errors.html#err_socket_cannot_send", "ERR_SOCKET_CLOSED": "errors.html#err_socket_closed", "ERR_SOCKET_CLOSED_BEFORE_CONNECTION": "errors.html#err_socket_closed_before_connection", "ERR_SOCKET_CONNECTION_TIMEOUT": "errors.html#err_socket_connection_timeout", "ERR_SOCKET_DGRAM_IS_CONNECTED": "errors.html#err_socket_dgram_is_connected", "ERR_SOCKET_DGRAM_NOT_CONNECTED": "errors.html#err_socket_dgram_not_connected", "ERR_SOCKET_DGRAM_NOT_RUNNING": "errors.html#err_socket_dgram_not_running", "ERR_SRI_PARSE": "errors.html#err_sri_parse", "ERR_STDERR_CLOSE": "errors.html#err_stderr_close", "ERR_STDOUT_CLOSE": "errors.html#err_stdout_close", "ERR_STREAM_ALREADY_FINISHED": "errors.html#err_stream_already_finished", "ERR_STREAM_CANNOT_PIPE": "errors.html#err_stream_cannot_pipe", "ERR_STREAM_DESTROYED": "errors.html#err_stream_destroyed", "ERR_STREAM_NULL_VALUES": "errors.html#err_stream_null_values", "ERR_STREAM_PREMATURE_CLOSE": "errors.html#err_stream_premature_close", "ERR_STREAM_PUSH_AFTER_EOF": "errors.html#err_stream_push_after_eof", "ERR_STREAM_READ_NOT_IMPLEMENTED": "errors.html#err_stream_read_not_implemented", "ERR_STREAM_UNSHIFT_AFTER_END_EVENT": "errors.html#err_stream_unshift_after_end_event", "ERR_STREAM_WRAP": "errors.html#err_stream_wrap", "ERR_STREAM_WRITE_AFTER_END": "errors.html#err_stream_write_after_end", "ERR_STRING_TOO_LONG": "errors.html#err_string_too_long", "ERR_SYNTHETIC": "errors.html#err_synthetic", "ERR_SYSTEM_ERROR": "errors.html#err_system_error", "ERR_TAP_LEXER_ERROR": "errors.html#err_tap_lexer_error", "ERR_TAP_PARSER_ERROR": "errors.html#err_tap_parser_error", "ERR_TAP_VALIDATION_ERROR": "errors.html#err_tap_validation_error", "ERR_TEST_FAILURE": "errors.html#err_test_failure", "ERR_TLS_ALPN_CALLBACK_INVALID_RESULT": "errors.html#err_tls_alpn_callback_invalid_result", "ERR_TLS_ALPN_CALLBACK_WITH_PROTOCOLS": "errors.html#err_tls_alpn_callback_with_protocols", "ERR_TLS_CERT_ALTNAME_FORMAT": "errors.html#err_tls_cert_altname_format", "ERR_TLS_CERT_ALTNAME_INVALID": "errors.html#err_tls_cert_altname_invalid", "ERR_TLS_DH_PARAM_SIZE": "errors.html#err_tls_dh_param_size", "ERR_TLS_HANDSHAKE_TIMEOUT": "errors.html#err_tls_handshake_timeout", "ERR_TLS_INVALID_CONTEXT": "errors.html#err_tls_invalid_context", "ERR_TLS_INVALID_PROTOCOL_METHOD": "errors.html#err_tls_invalid_protocol_method", "ERR_TLS_INVALID_PROTOCOL_VERSION": "errors.html#err_tls_invalid_protocol_version", "ERR_TLS_INVALID_STATE": "errors.html#err_tls_invalid_state", "ERR_TLS_PROTOCOL_VERSION_CONFLICT": "errors.html#err_tls_protocol_version_conflict", "ERR_TLS_PSK_SET_IDENTIY_HINT_FAILED": "errors.html#err_tls_psk_set_identiy_hint_failed", "ERR_TLS_RENEGOTIATION_DISABLED": "errors.html#err_tls_renegotiation_disabled", "ERR_TLS_RENEGOTIATION_FAILED": "errors.html#err_tls_renegotiation_failed", "ERR_TLS_REQUIRED_SERVER_NAME": "errors.html#err_tls_required_server_name", "ERR_TLS_SESSION_ATTACK": "errors.html#err_tls_session_attack", "ERR_TLS_SNI_FROM_SERVER": "errors.html#err_tls_sni_from_server", "ERR_TRACE_EVENTS_CATEGORY_REQUIRED": "errors.html#err_trace_events_category_required", "ERR_TRACE_EVENTS_UNAVAILABLE": "errors.html#err_trace_events_unavailable", "ERR_TRANSFERRING_EXTERNALIZED_SHAREDARRAYBUFFER": "errors.html#err_transferring_externalized_sharedarraybuffer", "ERR_TRANSFORM_ALREADY_TRANSFORMING": "errors.html#err_transform_already_transforming", "ERR_TRANSFORM_WITH_LENGTH_0": "errors.html#err_transform_with_length_0", "ERR_TTY_INIT_FAILED": "errors.html#err_tty_init_failed", "ERR_UNAVAILABLE_DURING_EXIT": "errors.html#err_unavailable_during_exit", "ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET": "errors.html#err_uncaught_exception_capture_already_set", "ERR_UNESCAPED_CHARACTERS": "errors.html#err_unescaped_characters", "ERR_UNHANDLED_ERROR": "errors.html#err_unhandled_error", "ERR_UNKNOWN_BUILTIN_MODULE": "errors.html#err_unknown_builtin_module", "ERR_UNKNOWN_CREDENTIAL": "errors.html#err_unknown_credential", "ERR_UNKNOWN_ENCODING": "errors.html#err_unknown_encoding", "ERR_UNKNOWN_FILE_EXTENSION": "errors.html#err_unknown_file_extension", "ERR_UNKNOWN_MODULE_FORMAT": "errors.html#err_unknown_module_format", "ERR_UNKNOWN_SIGNAL": "errors.html#err_unknown_signal", "ERR_UNKNOWN_STDIN_TYPE": "errors.html#err_unknown_stdin_type", "ERR_UNKNOWN_STREAM_TYPE": "errors.html#err_unknown_stream_type", "ERR_UNSUPPORTED_DIR_IMPORT": "errors.html#err_unsupported_dir_import", "ERR_UNSUPPORTED_ESM_URL_SCHEME": "errors.html#err_unsupported_esm_url_scheme", "ERR_USE_AFTER_CLOSE": "errors.html#err_use_after_close", "ERR_V8BREAKITERATOR": "errors.html#err_v8breakiterator", "ERR_VALID_PERFORMANCE_ENTRY_TYPE": "errors.html#err_valid_performance_entry_type", "ERR_VALUE_OUT_OF_RANGE": "errors.html#err_value_out_of_range", "ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING": "errors.html#err_vm_dynamic_import_callback_missing", "ERR_VM_MODULE_ALREADY_LINKED": "errors.html#err_vm_module_already_linked", "ERR_VM_MODULE_CACHED_DATA_REJECTED": "errors.html#err_vm_module_cached_data_rejected", "ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA": "errors.html#err_vm_module_cannot_create_cached_data", "ERR_VM_MODULE_DIFFERENT_CONTEXT": "errors.html#err_vm_module_different_context", "ERR_VM_MODULE_LINK_FAILURE": "errors.html#err_vm_module_link_failure", "ERR_VM_MODULE_LINKING_ERRORED": "errors.html#err_vm_module_linking_errored", "ERR_VM_MODULE_NOT_LINKED": "errors.html#err_vm_module_not_linked", "ERR_VM_MODULE_NOT_MODULE": "errors.html#err_vm_module_not_module", "ERR_VM_MODULE_STATUS": "errors.html#err_vm_module_status", "ERR_WASI_ALREADY_STARTED": "errors.html#err_wasi_already_started", "ERR_WASI_NOT_STARTED": "errors.html#err_wasi_not_started", "ERR_WEBASSEMBLY_RESPONSE": "errors.html#err_webassembly_response", "ERR_WORKER_INIT_FAILED": "errors.html#err_worker_init_failed", "ERR_WORKER_INVALID_EXEC_ARGV": "errors.html#err_worker_invalid_exec_argv", "ERR_WORKER_NOT_RUNNING": "errors.html#err_worker_not_running", "ERR_WORKER_OUT_OF_MEMORY": "errors.html#err_worker_out_of_memory", "ERR_WORKER_PATH": "errors.html#err_worker_path", "ERR_WORKER_UNSERIALIZABLE_ERROR": "errors.html#err_worker_unserializable_error", "ERR_WORKER_UNSUPPORTED_EXTENSION": "errors.html#err_worker_unsupported_extension", "ERR_WORKER_UNSUPPORTED_OPERATION": "errors.html#err_worker_unsupported_operation", "ERR_ZLIB_BINDING_CLOSED": "errors.html#err_zlib_binding_closed", "ERR_ZLIB_INITIALIZATION_FAILED": "errors.html#err_zlib_initialization_failed", "error()": "diagnostics_channel.html#errorevent", "error.address": "errors.html#erroraddress", "Error.captureStackTrace()": "errors.html#errorcapturestacktracetargetobject-constructoropt", "error.cause": "errors.html#errorcause", "error.code": "errors.html#errorcode", "error.dest": "errors.html#errordest", "error.errno": "errors.html#errorerrno", "error.function": "errors.html#errorfunction", "error.info": "errors.html#errorinfo", "error.library": "errors.html#errorlibrary", "error.message": "errors.html#errormessage", "error.opensslErrorStack": "errors.html#erroropensslerrorstack", "error.path": "errors.html#errorpath", "error.port": "errors.html#errorport", "error.reason": "errors.html#errorreason", "error.stack": "errors.html#errorstack", "Error.stackTraceLimit": "errors.html#errorstacktracelimit", "error.syscall": "errors.html#errorsyscall", "Errors": "errors.html", "Event": "events.html#eventtarget-and-event-api", "Event 'abort'": "http.html#event-abort", "Event 'aborted'": "http.html#event-aborted", "Event 'altsvc'": "http2.html#event-altsvc", "Event 'beforeExit'": "process.html#event-beforeexit", "Event 'change'": "fs.html#event-change", "Event 'checkContinue'": "http2.html#event-checkcontinue", "Event 'checkExpectation'": "http.html#event-checkexpectation", "Event 'clientError'": "http.html#event-clienterror", "Event 'close'": "http.html#event-close_3", "Event 'connect'": "dgram.html#event-connect", "Event 'connection'": "net.html#event-connection", "Event 'continue'": "http2.html#event-continue", "Event 'data'": "stream.html#event-data", "Event 'disconnect'": "cluster.html#event-disconnect", "Event 'drain'": "http.html#event-drain", "Event 'drop'": "net.html#event-drop", "Event 'dropRequest'": "http.html#event-droprequest", "Event 'end'": "net.html#event-end", "Event 'error'": "net.html#event-error_1", "Event 'exit'": "process.html#event-exit", "Event 'finish'": "http.html#event-finish_2", "Event 'fork'": "cluster.html#event-fork", "Event 'frameError'": "http2.html#event-frameerror", "Event 'goaway'": "http2.html#event-goaway", "Event 'headers'": "http2.html#event-headers", "Event 'history'": "readline.html#event-history", "Event 'information'": "http.html#event-information", "Event 'inspectorNotification'": "inspector.html#event-inspectornotification_1", "Event 'keylog'": "https.html#event-keylog", "Event 'line'": "readline.html#event-line", "Event 'listening'": "net.html#event-listening", "Event 'localSettings'": "http2.html#event-localsettings", "Event 'lookup'": "net.html#event-lookup", "Event 'message'": "worker_threads.html#event-message_1", "Event 'messageerror'": "worker_threads.html#event-messageerror_1", "Event 'multipleResolves'": "process.html#event-multipleresolves", "Event 'newListener'": "events.html#event-newlistener", "Event 'newSession'": "tls.html#event-newsession", "Event 'OCSPRequest'": "tls.html#event-ocsprequest", "Event 'OCSPResponse'": "tls.html#event-ocspresponse", "Event 'online'": "cluster.html#event-online", "Event 'open'": "fs.html#event-open", "Event 'origin'": "http2.html#event-origin", "Event 'pause'": "stream.html#event-pause", "Event 'ping'": "http2.html#event-ping", "Event 'pipe'": "stream.html#event-pipe", "Event 'prefinish'": "http.html#event-prefinish", "Event 'push'": "http2.html#event-push", "Event 'readable'": "stream.html#event-readable", "Event 'ready'": "fs.html#event-ready_1", "Event 'rejectionHandled'": "process.html#event-rejectionhandled", "Event 'remoteSettings'": "http2.html#event-remotesettings", "Event 'removeListener'": "events.html#event-removelistener", "Event 'request'": "http2.html#event-request", "Event 'reset'": "repl.html#event-reset", "Event 'resize'": "tty.html#event-resize", "Event 'resourcetimingbufferfull'": "perf_hooks.html#event-resourcetimingbufferfull", "Event 'response'": "http.html#event-response", "Event 'resume'": "stream.html#event-resume", "Event 'resumeSession'": "tls.html#event-resumesession", "Event 'secure'": "tls.html#event-secure", "Event 'secureConnect'": "tls.html#event-secureconnect", "Event 'secureConnection'": "tls.html#event-secureconnection", "Event 'session'": "tls.html#event-session", "Event 'sessionError'": "http2.html#event-sessionerror_1", "Event 'setup'": "cluster.html#event-setup", "Event 'SIGCONT'": "readline.html#event-sigcont", "Event 'SIGINT'": "readline.html#event-sigint", "Event 'SIGTSTP'": "readline.html#event-sigtstp", "Event 'socket'": "http.html#event-socket", "Event 'spawn'": "child_process.html#event-spawn", "Event 'stream'": "http2.html#event-stream", "Event 'test:coverage'": "test.html#event-testcoverage", "Event 'test:dequeue'": "test.html#event-testdequeue", "Event 'test:diagnostic'": "test.html#event-testdiagnostic", "Event 'test:enqueue'": "test.html#event-testenqueue", "Event 'test:fail'": "test.html#event-testfail", "Event 'test:pass'": "test.html#event-testpass", "Event 'test:plan'": "test.html#event-testplan", "Event 'test:start'": "test.html#event-teststart", "Event 'test:stderr'": "test.html#event-teststderr", "Event 'test:stdout'": "test.html#event-teststdout", "Event 'test:watch:drained'": "test.html#event-testwatchdrained", "Event 'timeout'": "net.html#event-timeout", "Event 'tlsClientError'": "tls.html#event-tlsclienterror", "Event 'trailers'": "http2.html#event-trailers", "Event 'uncaughtException'": "process.html#event-uncaughtexception", "Event 'uncaughtExceptionMonitor'": "process.html#event-uncaughtexceptionmonitor", "Event 'unhandledRejection'": "process.html#event-unhandledrejection", "Event 'unknownProtocol'": "http2.html#event-unknownprotocol", "Event 'unpipe'": "stream.html#event-unpipe", "Event 'upgrade'": "http.html#event-upgrade_1", "Event 'wantTrailers'": "http2.html#event-wanttrailers", "Event 'warning'": "process.html#event-warning", "Event 'worker'": "process.html#event-worker", "Event <inspector-protocol-method>": "inspector.html#event-inspector-protocol-method_1", "Event CustomEvent": "globals.html#customevent", "Event Event": "globals.html#event", "Event event.initEvent()": "events.html#eventiniteventtype-bubbles-cancelable", "Event EventEmitter": "events.html#nodeeventtarget-vs-eventemitter", "Event events.getEventListeners()": "events.html#eventsgeteventlistenersemitterortarget-eventname", "Event EventTarget": "events.html#eventtarget-error-handling", "Event eventTarget.addEventListener()": "events.html#eventtargetaddeventlistenertype-listener-options", "Event eventTarget.dispatchEvent()": "events.html#eventtargetdispatcheventevent", "Event eventTarget.removeEventListener()": "events.html#eventtargetremoveeventlistenertype-listener-options", "Event MessageEvent": "globals.html#messageevent", "Event new events.EventEmitterAsyncResource()": "events.html#new-eventseventemitterasyncresourceoptions", "Event NodeEventTarget": "events.html#nodeeventtarget-vs-eventemitter", "Event nodeEventTarget.addListener()": "events.html#nodeeventtargetaddlistenertype-listener", "Event nodeEventTarget.emit()": "events.html#nodeeventtargetemittype-arg", "Event nodeEventTarget.eventNames()": "events.html#nodeeventtargeteventnames", "Event nodeEventTarget.getMaxListeners()": "events.html#nodeeventtargetgetmaxlisteners", "Event nodeEventTarget.listenerCount()": "events.html#nodeeventtargetlistenercounttype", "Event nodeEventTarget.off()": "events.html#nodeeventtargetofftype-listener-options", "Event nodeEventTarget.on()": "events.html#nodeeventtargetontype-listener", "Event nodeEventTarget.once()": "events.html#nodeeventtargetoncetype-listener", "Event nodeEventTarget.removeAllListeners()": "events.html#nodeeventtargetremovealllistenerstype", "Event nodeEventTarget.removeListener()": "events.html#nodeeventtargetremovelistenertype-listener-options", "Event nodeEventTarget.setMaxListeners()": "events.html#nodeeventtargetsetmaxlistenersn", "Event perf_hooks.monitorEventLoopDelay()": "perf_hooks.html#perf_hooksmonitoreventloopdelayoptions", "Event readline.emitKeypressEvents()": "readline.html#readlineemitkeypresseventsstream-interface", "event.bubbles": "events.html#eventbubbles", "event.cancelable": "events.html#eventcancelable", "event.cancelBubble": "events.html#eventcancelbubble", "event.composed": "events.html#eventcomposed", "event.composedPath()": "events.html#eventcomposedpath", "event.currentTarget": "events.html#eventcurrenttarget", "event.defaultPrevented": "events.html#eventdefaultprevented", "event.detail": "events.html#eventdetail", "event.eventPhase": "events.html#eventeventphase", "event.initEvent()": "events.html#eventiniteventtype-bubbles-cancelable", "event.isTrusted": "events.html#eventistrusted", "event.preventDefault()": "events.html#eventpreventdefault", "event.returnValue": "events.html#eventreturnvalue", "event.srcElement": "events.html#eventsrcelement", "event.stopImmediatePropagation()": "events.html#eventstopimmediatepropagation", "event.stopPropagation()": "events.html#eventstoppropagation", "event.target": "events.html#eventtarget", "event.timeStamp": "events.html#eventtimestamp", "event.type": "events.html#eventtype", "EventEmitter": "events.html#nodeeventtarget-vs-eventemitter", "eventemitterasyncresource.asyncId": "events.html#eventemitterasyncresourceasyncid", "eventemitterasyncresource.asyncResource": "events.html#eventemitterasyncresourceasyncresource", "eventemitterasyncresource.emitDestroy()": "events.html#eventemitterasyncresourceemitdestroy", "eventemitterasyncresource.triggerAsyncId": "events.html#eventemitterasyncresourcetriggerasyncid", "Events": "events.html", "events.addAbortListener()": "events.html#eventsaddabortlistenersignal-listener", "events.captureRejections": "events.html#eventscapturerejections", "events.captureRejectionSymbol": "events.html#eventscapturerejectionsymbol", "events.defaultMaxListeners": "events.html#eventsdefaultmaxlisteners", "events.errorMonitor": "events.html#eventserrormonitor", "events.getEventListeners()": "events.html#eventsgeteventlistenersemitterortarget-eventname", "events.getMaxListeners()": "events.html#eventsgetmaxlistenersemitterortarget", "events.listenerCount()": "events.html#eventslistenercountemitter-eventname", "events.on()": "events.html#eventsonemitter-eventname-options", "events.once()": "events.html#eventsonceemitter-name-options", "events.setMaxListeners()": "events.html#eventssetmaxlistenersn-eventtargets", "EventTarget": "globals.html#eventtarget", "eventTarget.addEventListener()": "events.html#eventtargetaddeventlistenertype-listener-options", "eventTarget.dispatchEvent()": "events.html#eventtargetdispatcheventevent", "eventTarget.removeEventListener()": "events.html#eventtargetremoveeventlistenertype-listener-options", "exports": "modules.html#exports", "fetch": "globals.html#fetch", "File system": "fs.html", "file.lastModified": "buffer.html#filelastmodified", "file.name": "buffer.html#filename", "file:": "esm.html#file-urls", "filehandle.appendFile()": "fs.html#filehandleappendfiledata-options", "filehandle.chmod()": "fs.html#filehandlechmodmode", "filehandle.chown()": "fs.html#filehandlechownuid-gid", "filehandle.close()": "fs.html#filehandleclose", "filehandle.createReadStream()": "fs.html#filehandlecreatereadstreamoptions", "filehandle.createWriteStream()": "fs.html#filehandlecreatewritestreamoptions", "filehandle.datasync()": "fs.html#filehandledatasync", "filehandle.fd": "fs.html#filehandlefd", "filehandle.read()": "fs.html#filehandlereadbuffer-options", "filehandle.readableWebStream()": "fs.html#filehandlereadablewebstreamoptions", "filehandle.readFile()": "fs.html#filehandlereadfileoptions", "filehandle.readLines()": "fs.html#filehandlereadlinesoptions", "filehandle.readv()": "fs.html#filehandlereadvbuffers-position", "filehandle.stat()": "fs.html#filehandlestatoptions", "filehandle.sync()": "fs.html#filehandlesync", "filehandle.truncate()": "fs.html#filehandletruncatelen", "filehandle.utimes()": "fs.html#filehandleutimesatime-mtime", "filehandle.write()": "fs.html#filehandlewritestring-position-encoding", "filehandle.writeFile()": "fs.html#filehandlewritefiledata-options", "filehandle.writev()": "fs.html#filehandlewritevbuffers-position", "filehandle[Symbol.asyncDispose]()": "fs.html#filehandlesymbolasyncdispose", "FORCE_COLOR=[1, 2, 3]": "cli.html#force_color1-2-3", "fs.access()": "fs.html#fsaccesspath-mode-callback", "fs.accessSync()": "fs.html#fsaccesssyncpath-mode", "fs.appendFile()": "fs.html#fsappendfilepath-data-options-callback", "fs.appendFileSync()": "fs.html#fsappendfilesyncpath-data-options", "fs.chmod()": "fs.html#fschmodpath-mode-callback", "fs.chmodSync()": "fs.html#fschmodsyncpath-mode", "fs.chown()": "fs.html#fschownpath-uid-gid-callback", "fs.chownSync()": "fs.html#fschownsyncpath-uid-gid", "fs.close()": "fs.html#fsclosefd-callback", "fs.closeSync()": "fs.html#fsclosesyncfd", "fs.constants": "fs.html#fsconstants", "fs.copyFile()": "fs.html#fscopyfilesrc-dest-mode-callback", "fs.copyFileSync()": "fs.html#fscopyfilesyncsrc-dest-mode", "fs.cp()": "fs.html#fscpsrc-dest-options-callback", "fs.cpSync()": "fs.html#fscpsyncsrc-dest-options", "fs.createReadStream()": "fs.html#fscreatereadstreampath-options", "fs.createWriteStream()": "fs.html#fscreatewritestreampath-options", "fs.exists()": "fs.html#fsexistspath-callback", "fs.existsSync()": "fs.html#fsexistssyncpath", "fs.fchmod()": "fs.html#fsfchmodfd-mode-callback", "fs.fchmodSync()": "fs.html#fsfchmodsyncfd-mode", "fs.fchown()": "fs.html#fsfchownfd-uid-gid-callback", "fs.fchownSync()": "fs.html#fsfchownsyncfd-uid-gid", "fs.fdatasync()": "fs.html#fsfdatasyncfd-callback", "fs.fdatasyncSync()": "fs.html#fsfdatasyncsyncfd", "fs.fstat()": "fs.html#fsfstatfd-options-callback", "fs.fstatSync()": "fs.html#fsfstatsyncfd-options", "fs.fsync()": "fs.html#fsfsyncfd-callback", "fs.fsyncSync()": "fs.html#fsfsyncsyncfd", "fs.ftruncate()": "fs.html#fsftruncatefd-len-callback", "fs.ftruncateSync()": "fs.html#fsftruncatesyncfd-len", "fs.futimes()": "fs.html#fsfutimesfd-atime-mtime-callback", "fs.futimesSync()": "fs.html#fsfutimessyncfd-atime-mtime", "fs.lchmod()": "fs.html#fslchmodpath-mode-callback", "fs.lchmodSync()": "fs.html#fslchmodsyncpath-mode", "fs.lchown()": "fs.html#fslchownpath-uid-gid-callback", "fs.lchownSync()": "fs.html#fslchownsyncpath-uid-gid", "fs.link()": "fs.html#fslinkexistingpath-newpath-callback", "fs.linkSync()": "fs.html#fslinksyncexistingpath-newpath", "fs.lstat()": "fs.html#fslstatpath-options-callback", "fs.lstatSync()": "fs.html#fslstatsyncpath-options", "fs.lutimes()": "fs.html#fslutimespath-atime-mtime-callback", "fs.lutimesSync()": "fs.html#fslutimessyncpath-atime-mtime", "fs.mkdir()": "fs.html#fsmkdirpath-options-callback", "fs.mkdirSync()": "fs.html#fsmkdirsyncpath-options", "fs.mkdtemp()": "fs.html#fsmkdtempprefix-options-callback", "fs.mkdtempSync()": "fs.html#fsmkdtempsyncprefix-options", "fs.open()": "fs.html#fsopenpath-flags-mode-callback", "fs.openAsBlob()": "fs.html#fsopenasblobpath-options", "fs.opendir()": "fs.html#fsopendirpath-options-callback", "fs.opendirSync()": "fs.html#fsopendirsyncpath-options", "fs.openSync()": "fs.html#fsopensyncpath-flags-mode", "fs.read()": "fs.html#fsreadfd-buffer-options-callback", "fs.readdir()": "fs.html#fsreaddirpath-options-callback", "fs.readdirSync()": "fs.html#fsreaddirsyncpath-options", "fs.readFile()": "fs.html#fsreadfilepath-options-callback", "fs.readFileSync()": "fs.html#fsreadfilesyncpath-options", "fs.readlink()": "fs.html#fsreadlinkpath-options-callback", "fs.readlinkSync()": "fs.html#fsreadlinksyncpath-options", "fs.readSync()": "fs.html#fsreadsyncfd-buffer-options", "fs.readv()": "fs.html#fsreadvfd-buffers-position-callback", "fs.readvSync()": "fs.html#fsreadvsyncfd-buffers-position", "fs.realpath()": "fs.html#fsrealpathpath-options-callback", "fs.realpath.native()": "fs.html#fsrealpathnativepath-options-callback", "fs.realpathSync()": "fs.html#fsrealpathsyncpath-options", "fs.realpathSync.native()": "fs.html#fsrealpathsyncnativepath-options", "fs.rename()": "fs.html#fsrenameoldpath-newpath-callback", "fs.renameSync()": "fs.html#fsrenamesyncoldpath-newpath", "fs.rm()": "fs.html#fsrmpath-options-callback", "fs.rmdir()": "fs.html#fsrmdirpath-options-callback", "fs.rmdirSync()": "fs.html#fsrmdirsyncpath-options", "fs.rmSync()": "fs.html#fsrmsyncpath-options", "fs.stat()": "fs.html#fsstatpath-options-callback", "fs.statfs()": "fs.html#fsstatfspath-options-callback", "fs.statfsSync()": "fs.html#fsstatfssyncpath-options", "fs.statSync()": "fs.html#fsstatsyncpath-options", "fs.symlink()": "fs.html#fssymlinktarget-path-type-callback", "fs.symlinkSync()": "fs.html#fssymlinksynctarget-path-type", "fs.truncate()": "fs.html#fstruncatepath-len-callback", "fs.truncateSync()": "fs.html#fstruncatesyncpath-len", "fs.unlink()": "fs.html#fsunlinkpath-callback", "fs.unlinkSync()": "fs.html#fsunlinksyncpath", "fs.unwatchFile()": "fs.html#fsunwatchfilefilename-listener", "fs.utimes()": "fs.html#fsutimespath-atime-mtime-callback", "fs.utimesSync()": "fs.html#fsutimessyncpath-atime-mtime", "fs.watch()": "fs.html#fswatchfilename-options-listener", "fs.watchFile()": "fs.html#fswatchfilefilename-options-listener", "fs.write()": "fs.html#fswritefd-string-position-encoding-callback", "fs.writeFile()": "fs.html#fswritefilefile-data-options-callback", "fs.writeFileSync()": "fs.html#fswritefilesyncfile-data-options", "fs.writeSync()": "fs.html#fswritesyncfd-buffer-offset-length-position", "fs.writev()": "fs.html#fswritevfd-buffers-position-callback", "fs.writevSync()": "fs.html#fswritevsyncfd-buffers-position", "fsPromises.access()": "fs.html#fspromisesaccesspath-mode", "fsPromises.appendFile()": "fs.html#fspromisesappendfilepath-data-options", "fsPromises.chmod()": "fs.html#fspromiseschmodpath-mode", "fsPromises.chown()": "fs.html#fspromiseschownpath-uid-gid", "fsPromises.constants": "fs.html#fspromisesconstants", "fsPromises.copyFile()": "fs.html#fspromisescopyfilesrc-dest-mode", "fsPromises.cp()": "fs.html#fspromisescpsrc-dest-options", "fsPromises.lchmod()": "fs.html#fspromiseslchmodpath-mode", "fsPromises.lchown()": "fs.html#fspromiseslchownpath-uid-gid", "fsPromises.link()": "fs.html#fspromiseslinkexistingpath-newpath", "fsPromises.lstat()": "fs.html#fspromiseslstatpath-options", "fsPromises.lutimes()": "fs.html#fspromiseslutimespath-atime-mtime", "fsPromises.mkdir()": "fs.html#fspromisesmkdirpath-options", "fsPromises.mkdtemp()": "fs.html#fspromisesmkdtempprefix-options", "fsPromises.open()": "fs.html#fspromisesopenpath-flags-mode", "fsPromises.opendir()": "fs.html#fspromisesopendirpath-options", "fsPromises.readdir()": "fs.html#fspromisesreaddirpath-options", "fsPromises.readFile()": "fs.html#fspromisesreadfilepath-options", "fsPromises.readlink()": "fs.html#fspromisesreadlinkpath-options", "fsPromises.realpath()": "fs.html#fspromisesrealpathpath-options", "fsPromises.rename()": "fs.html#fspromisesrenameoldpath-newpath", "fsPromises.rm()": "fs.html#fspromisesrmpath-options", "fsPromises.rmdir()": "fs.html#fspromisesrmdirpath-options", "fsPromises.stat()": "fs.html#fspromisesstatpath-options", "fsPromises.statfs()": "fs.html#fspromisesstatfspath-options", "fsPromises.symlink()": "fs.html#fspromisessymlinktarget-path-type", "fsPromises.truncate()": "fs.html#fspromisestruncatepath-len", "fsPromises.unlink()": "fs.html#fspromisesunlinkpath", "fsPromises.utimes()": "fs.html#fspromisesutimespath-atime-mtime", "fsPromises.watch()": "fs.html#fspromiseswatchfilename-options", "fsPromises.writeFile()": "fs.html#fspromiseswritefilefile-data-options", "global": "globals.html#global", "Global objects": "globals.html", "globalPreload()": "module.html#globalpreload", "hash.copy()": "crypto.html#hashcopyoptions", "hash.digest()": "crypto.html#hashdigestencoding", "hash.update()": "crypto.html#hashupdatedata-inputencoding", "highWaterMark": "stream.html#highwatermark-discrepancy-after-calling-readablesetencoding", "histogram.add()": "perf_hooks.html#histogramaddother", "histogram.count": "perf_hooks.html#histogramcount", "histogram.countBigInt": "perf_hooks.html#histogramcountbigint", "histogram.disable()": "perf_hooks.html#histogramdisable", "histogram.enable()": "perf_hooks.html#histogramenable", "histogram.exceeds": "perf_hooks.html#histogramexceeds", "histogram.exceedsBigInt": "perf_hooks.html#histogramexceedsbigint", "histogram.max": "perf_hooks.html#histogrammax", "histogram.maxBigInt": "perf_hooks.html#histogrammaxbigint", "histogram.mean": "perf_hooks.html#histogrammean", "histogram.min": "perf_hooks.html#histogrammin", "histogram.minBigInt": "perf_hooks.html#histogramminbigint", "histogram.percentile()": "perf_hooks.html#histogrampercentilepercentile", "histogram.percentileBigInt()": "perf_hooks.html#histogrampercentilebigintpercentile", "histogram.percentiles": "perf_hooks.html#histogrampercentiles", "histogram.percentilesBigInt": "perf_hooks.html#histogrampercentilesbigint", "histogram.record()": "perf_hooks.html#histogramrecordval", "histogram.recordDelta()": "perf_hooks.html#histogramrecorddelta", "histogram.reset()": "perf_hooks.html#histogramreset", "histogram.stddev": "perf_hooks.html#histogramstddev", "hkdfParams.hash": "webcrypto.html#hkdfparamshash", "hkdfParams.info": "webcrypto.html#hkdfparamsinfo", "hkdfParams.name": "webcrypto.html#hkdfparamsname", "hkdfParams.salt": "webcrypto.html#hkdfparamssalt", "hmac.digest()": "crypto.html#hmacdigestencoding", "hmac.update()": "crypto.html#hmacupdatedata-inputencoding", "hmacImportParams.hash": "webcrypto.html#hmacimportparamshash", "hmacImportParams.length": "webcrypto.html#hmacimportparamslength", "hmacImportParams.name": "webcrypto.html#hmacimportparamsname", "hmacKeyGenParams.hash": "webcrypto.html#hmackeygenparamshash", "hmacKeyGenParams.length": "webcrypto.html#hmackeygenparamslength", "hmacKeyGenParams.name": "webcrypto.html#hmackeygenparamsname", "HPE_HEADER_OVERFLOW": "errors.html#hpe_header_overflow", "HPE_UNEXPECTED_CONTENT_LENGTH": "errors.html#hpe_unexpected_content_length", "HTTP": "http.html", "http.createServer()": "http.html#httpcreateserveroptions-requestlistener", "http.get()": "http.html#httpgeturl-options-callback", "http.globalAgent": "http.html#httpglobalagent", "http.maxHeaderSize": "http.html#httpmaxheadersize", "http.METHODS": "http.html#httpmethods", "http.request()": "http.html#httprequestoptions-callback", "http.setMaxIdleHTTPParsers()": "http.html#httpsetmaxidlehttpparsersmax", "http.STATUS_CODES": "http.html#httpstatus_codes", "http.validateHeaderName()": "http.html#httpvalidateheadernamename-label", "http.validateHeaderValue()": "http.html#httpvalidateheadervaluename-value", "HTTP/2": "http2.html", "http2.connect()": "http2.html#http2connectauthority-options-listener", "http2.constants": "http2.html#http2constants", "http2.createSecureServer()": "http2.html#http2createsecureserveroptions-onrequesthandler", "http2.createServer()": "http2.html#http2createserveroptions-onrequesthandler", "http2.getDefaultSettings()": "http2.html#http2getdefaultsettings", "http2.getPackedSettings()": "http2.html#http2getpackedsettingssettings", "http2.getUnpackedSettings()": "http2.html#http2getunpackedsettingsbuf", "http2.sensitiveHeaders": "http2.html#http2sensitiveheaders", "Http2Session": "http2.html#http2session-and-sockets", "http2session.alpnProtocol": "http2.html#http2sessionalpnprotocol", "http2session.close()": "http2.html#http2sessionclosecallback", "http2session.closed": "http2.html#http2sessionclosed", "http2session.connecting": "http2.html#http2sessionconnecting", "http2session.destroy()": "http2.html#http2sessiondestroyerror-code", "http2session.destroyed": "http2.html#http2sessiondestroyed", "http2session.encrypted": "http2.html#http2sessionencrypted", "http2session.goaway()": "http2.html#http2sessiongoawaycode-laststreamid-opaquedata", "http2session.localSettings": "http2.html#http2sessionlocalsettings", "http2session.originSet": "http2.html#http2sessionoriginset", "http2session.pendingSettingsAck": "http2.html#http2sessionpendingsettingsack", "http2session.ping()": "http2.html#http2sessionpingpayload-callback", "http2session.ref()": "http2.html#http2sessionref", "http2session.remoteSettings": "http2.html#http2sessionremotesettings", "http2session.setLocalWindowSize()": "http2.html#http2sessionsetlocalwindowsizewindowsize", "http2session.setTimeout()": "http2.html#http2sessionsettimeoutmsecs-callback", "http2session.settings()": "http2.html#http2sessionsettingssettings-callback", "http2session.socket": "http2.html#http2sessionsocket", "http2session.state": "http2.html#http2sessionstate", "http2session.type": "http2.html#http2sessiontype", "http2session.unref()": "http2.html#http2sessionunref", "Http2Stream": "http2.html#http2stream-lifecycle", "http2stream.aborted": "http2.html#http2streamaborted", "http2stream.additionalHeaders()": "http2.html#http2streamadditionalheadersheaders", "http2stream.bufferSize": "http2.html#http2streambuffersize", "http2stream.close()": "http2.html#http2streamclosecode-callback", "http2stream.closed": "http2.html#http2streamclosed", "http2stream.destroyed": "http2.html#http2streamdestroyed", "http2stream.endAfterHeaders": "http2.html#http2streamendafterheaders", "http2stream.headersSent": "http2.html#http2streamheaderssent", "http2stream.id": "http2.html#http2streamid", "http2stream.pending": "http2.html#http2streampending", "http2stream.priority()": "http2.html#http2streampriorityoptions", "http2stream.pushAllowed": "http2.html#http2streampushallowed", "http2stream.pushStream()": "http2.html#http2streampushstreamheaders-options-callback", "http2stream.respond()": "http2.html#http2streamrespondheaders-options", "http2stream.respondWithFD()": "http2.html#http2streamrespondwithfdfd-headers-options", "http2stream.respondWithFile()": "http2.html#http2streamrespondwithfilepath-headers-options", "http2stream.rstCode": "http2.html#http2streamrstcode", "http2stream.sendTrailers()": "http2.html#http2streamsendtrailersheaders", "http2stream.sentHeaders": "http2.html#http2streamsentheaders", "http2stream.sentInfoHeaders": "http2.html#http2streamsentinfoheaders", "http2stream.sentTrailers": "http2.html#http2streamsenttrailers", "http2stream.session": "http2.html#http2streamsession", "http2stream.setTimeout()": "http2.html#http2streamsettimeoutmsecs-callback", "http2stream.state": "http2.html#http2streamstate", "HTTPS": "https.html", "https.createServer()": "https.html#httpscreateserveroptions-requestlistener", "https.get()": "https.html#httpsgetoptions-callback", "https.globalAgent": "https.html#httpsglobalagent", "https.request()": "https.html#httpsrequestoptions-callback", "immediate.hasRef()": "timers.html#immediatehasref", "immediate.ref()": "timers.html#immediateref", "immediate.unref()": "timers.html#immediateunref", "immediate[Symbol.dispose]()": "timers.html#immediatesymboldispose", "import": "esm.html#import-specifiers", "import()": "esm.html#import-expressions", "import.meta": "esm.html#importmeta", "import.meta.resolve()": "esm.html#importmetaresolvespecifier", "import.meta.url": "esm.html#importmetaurl", "init()": "async_hooks.html#initasyncid-type-triggerasyncid-resource", "initialize()": "module.html#initialize", "Inspector": "inspector.html", "inspector.close()": "inspector.html#inspectorclose", "inspector.console": "inspector.html#inspectorconsole", "inspector.open()": "inspector.html#inspectoropenport-host-wait", "inspector.url()": "inspector.html#inspectorurl", "inspector.waitForDebugger()": "inspector.html#inspectorwaitfordebugger", "Internationalization support": "intl.html", "it": "test.html#describeit-syntax", "it()": "test.html#itname-options-fn", "it.only()": "test.html#itonlyname-options-fn", "it.skip()": "test.html#itskipname-options-fn", "it.todo()": "test.html#ittodoname-options-fn", "keyObject.asymmetricKeyDetails": "crypto.html#keyobjectasymmetrickeydetails", "keyObject.asymmetricKeyType": "crypto.html#keyobjectasymmetrickeytype", "keyObject.equals()": "crypto.html#keyobjectequalsotherkeyobject", "keyObject.export()": "crypto.html#keyobjectexportoptions", "keyObject.symmetricKeySize": "crypto.html#keyobjectsymmetrickeysize", "keyObject.type": "crypto.html#keyobjecttype", "load()": "module.html#loadurl-context-nextload", "maxBuffer": "child_process.html#maxbuffer-and-unicode", "message.aborted": "http.html#messageaborted", "message.complete": "http.html#messagecomplete", "message.connection": "http.html#messageconnection", "message.destroy()": "http.html#messagedestroyerror", "message.headers": "http.html#messageheaders", "message.headersDistinct": "http.html#messageheadersdistinct", "message.httpVersion": "http.html#messagehttpversion", "message.method": "http.html#messagemethod", "message.rawHeaders": "http.html#messagerawheaders", "message.rawTrailers": "http.html#messagerawtrailers", "message.setTimeout()": "http.html#messagesettimeoutmsecs-callback", "message.socket": "http.html#messagesocket", "message.statusCode": "http.html#messagestatuscode", "message.statusMessage": "http.html#messagestatusmessage", "message.trailers": "http.html#messagetrailers", "message.trailersDistinct": "http.html#messagetrailersdistinct", "message.url": "http.html#messageurl", "MessageChannel": "buffer.html#blob-objects-and-messagechannel", "MessageEvent": "globals.html#messageevent", "MessagePort": "globals.html#messageport", "mime.essence": "util.html#mimeessence", "mime.params": "util.html#mimeparams", "mime.subtype": "util.html#mimesubtype", "mime.toJSON()": "util.html#mimetojson", "mime.toString()": "util.html#mimetostring", "mime.type": "util.html#mimetype", "mimeParams.delete()": "util.html#mimeparamsdeletename", "mimeParams.entries()": "util.html#mimeparamsentries", "mimeParams.get()": "util.html#mimeparamsgetname", "mimeParams.has()": "util.html#mimeparamshasname", "mimeParams.keys()": "util.html#mimeparamskeys", "mimeParams.set()": "util.html#mimeparamssetname-value", "mimeParams.values()": "util.html#mimeparamsvalues", "mimeParams[@@iterator]()": "util.html#mimeparamsiterator", "mock.fn()": "test.html#mockfnoriginal-implementation-options", "mock.getter()": "test.html#mockgetterobject-methodname-implementation-options", "mock.method()": "test.html#mockmethodobject-methodname-implementation-options", "mock.reset()": "test.html#mockreset", "mock.restoreAll()": "test.html#mockrestoreall", "mock.setter()": "test.html#mocksetterobject-methodname-implementation-options", "module": "globals.html#module", "module.builtinModules": "module.html#modulebuiltinmodules", "module.children": "modules.html#modulechildren", "module.createRequire()": "module.html#modulecreaterequirefilename", "module.dependencySpecifiers": "vm.html#moduledependencyspecifiers", "module.error": "vm.html#moduleerror", "module.evaluate()": "vm.html#moduleevaluateoptions", "module.exports": "modules.html#moduleexports", "module.filename": "single-executable-applications.html#__filename-and-modulefilename-in-the-injected-module", "module.findSourceMap()": "module.html#modulefindsourcemappath", "module.id": "modules.html#moduleid", "module.identifier": "vm.html#moduleidentifier", "module.isBuiltin()": "module.html#moduleisbuiltinmodulename", "module.isPreloading": "modules.html#moduleispreloading", "module.link()": "vm.html#modulelinklinker", "module.loaded": "modules.html#moduleloaded", "module.namespace": "vm.html#modulenamespace", "module.parent": "modules.html#moduleparent", "module.path": "modules.html#modulepath", "module.paths": "modules.html#modulepaths", "module.register()": "module.html#moduleregisterspecifier-parenturl-options", "module.require()": "modules.html#modulerequireid", "module.status": "vm.html#modulestatus", "module.syncBuiltinESMExports()": "module.html#modulesyncbuiltinesmexports", "MODULE_NOT_FOUND": "errors.html#module_not_found", "Modules: CommonJS modules": "modules.html", "Modules: ECMAScript modules": "esm.html", "Modules: node:module API": "module.html", "Modules: Packages": "packages.html", "napi_acquire_threadsafe_function": "n-api.html#napi_acquire_threadsafe_function", "napi_add_async_cleanup_hook": "n-api.html#napi_add_async_cleanup_hook", "napi_add_env_cleanup_hook": "n-api.html#napi_add_env_cleanup_hook", "napi_add_finalizer": "n-api.html#napi_add_finalizer", "napi_adjust_external_memory": "n-api.html#napi_adjust_external_memory", "napi_async_cleanup_hook": "n-api.html#napi_async_cleanup_hook", "napi_async_cleanup_hook_handle": "n-api.html#napi_async_cleanup_hook_handle", "napi_async_complete_callback": "n-api.html#napi_async_complete_callback", "napi_async_destroy": "n-api.html#napi_async_destroy", "napi_async_execute_callback": "n-api.html#napi_async_execute_callback", "napi_async_init": "n-api.html#napi_async_init", "napi_call_function": "n-api.html#napi_call_function", "napi_call_threadsafe_function": "n-api.html#napi_call_threadsafe_function", "napi_callback": "n-api.html#napi_callback", "napi_callback_info": "n-api.html#napi_callback_info", "napi_cancel_async_work": "n-api.html#napi_cancel_async_work", "napi_check_object_type_tag": "n-api.html#napi_check_object_type_tag", "napi_cleanup_hook": "n-api.html#napi_cleanup_hook", "napi_close_callback_scope": "n-api.html#napi_close_callback_scope", "napi_close_escapable_handle_scope": "n-api.html#napi_close_escapable_handle_scope", "napi_close_handle_scope": "n-api.html#napi_close_handle_scope", "napi_coerce_to_bool": "n-api.html#napi_coerce_to_bool", "napi_coerce_to_number": "n-api.html#napi_coerce_to_number", "napi_coerce_to_object": "n-api.html#napi_coerce_to_object", "napi_coerce_to_string": "n-api.html#napi_coerce_to_string", "napi_create_array": "n-api.html#napi_create_array", "napi_create_array_with_length": "n-api.html#napi_create_array_with_length", "napi_create_arraybuffer": "n-api.html#napi_create_arraybuffer", "napi_create_async_work": "n-api.html#napi_create_async_work", "napi_create_bigint_int64": "n-api.html#napi_create_bigint_int64", "napi_create_bigint_uint64": "n-api.html#napi_create_bigint_uint64", "napi_create_bigint_words": "n-api.html#napi_create_bigint_words", "napi_create_buffer": "n-api.html#napi_create_buffer", "napi_create_buffer_copy": "n-api.html#napi_create_buffer_copy", "napi_create_dataview": "n-api.html#napi_create_dataview", "napi_create_date": "n-api.html#napi_create_date", "napi_create_double": "n-api.html#napi_create_double", "napi_create_error": "n-api.html#napi_create_error", "napi_create_external": "n-api.html#napi_create_external", "napi_create_external_arraybuffer": "n-api.html#napi_create_external_arraybuffer", "napi_create_external_buffer": "n-api.html#napi_create_external_buffer", "napi_create_function": "n-api.html#napi_create_function", "napi_create_int32": "n-api.html#napi_create_int32", "napi_create_int64": "n-api.html#napi_create_int64", "napi_create_object": "n-api.html#napi_create_object", "napi_create_promise": "n-api.html#napi_create_promise", "napi_create_range_error": "n-api.html#napi_create_range_error", "napi_create_reference": "n-api.html#napi_create_reference", "napi_create_string_latin1": "n-api.html#napi_create_string_latin1", "napi_create_string_utf16": "n-api.html#napi_create_string_utf16", "napi_create_string_utf8": "n-api.html#napi_create_string_utf8", "napi_create_symbol": "n-api.html#napi_create_symbol", "napi_create_threadsafe_function": "n-api.html#napi_create_threadsafe_function", "napi_create_type_error": "n-api.html#napi_create_type_error", "napi_create_typedarray": "n-api.html#napi_create_typedarray", "napi_create_uint32": "n-api.html#napi_create_uint32", "napi_define_class": "n-api.html#napi_define_class", "napi_define_properties": "n-api.html#napi_define_properties", "napi_delete_async_work": "n-api.html#napi_delete_async_work", "napi_delete_element": "n-api.html#napi_delete_element", "napi_delete_property": "n-api.html#napi_delete_property", "napi_delete_reference": "n-api.html#napi_delete_reference", "napi_detach_arraybuffer": "n-api.html#napi_detach_arraybuffer", "napi_env": "n-api.html#napi_env", "napi_escapable_handle_scope": "n-api.html#napi_escapable_handle_scope", "napi_escape_handle": "n-api.html#napi_escape_handle", "napi_extended_error_info": "n-api.html#napi_extended_error_info", "napi_fatal_error": "n-api.html#napi_fatal_error", "napi_fatal_exception": "n-api.html#napi_fatal_exception", "napi_finalize": "n-api.html#napi_finalize", "napi_get_all_property_names": "n-api.html#napi_get_all_property_names", "napi_get_and_clear_last_exception": "n-api.html#napi_get_and_clear_last_exception", "napi_get_array_length": "n-api.html#napi_get_array_length", "napi_get_arraybuffer_info": "n-api.html#napi_get_arraybuffer_info", "napi_get_boolean": "n-api.html#napi_get_boolean", "napi_get_buffer_info": "n-api.html#napi_get_buffer_info", "napi_get_cb_info": "n-api.html#napi_get_cb_info", "napi_get_dataview_info": "n-api.html#napi_get_dataview_info", "napi_get_date_value": "n-api.html#napi_get_date_value", "napi_get_element": "n-api.html#napi_get_element", "napi_get_global": "n-api.html#napi_get_global", "napi_get_instance_data": "n-api.html#napi_get_instance_data", "napi_get_last_error_info": "n-api.html#napi_get_last_error_info", "napi_get_named_property": "n-api.html#napi_get_named_property", "napi_get_new_target": "n-api.html#napi_get_new_target", "napi_get_node_version": "n-api.html#napi_get_node_version", "napi_get_null": "n-api.html#napi_get_null", "napi_get_property": "n-api.html#napi_get_property", "napi_get_property_names": "n-api.html#napi_get_property_names", "napi_get_prototype": "n-api.html#napi_get_prototype", "napi_get_reference_value": "n-api.html#napi_get_reference_value", "napi_get_threadsafe_function_context": "n-api.html#napi_get_threadsafe_function_context", "napi_get_typedarray_info": "n-api.html#napi_get_typedarray_info", "napi_get_undefined": "n-api.html#napi_get_undefined", "napi_get_uv_event_loop": "n-api.html#napi_get_uv_event_loop", "napi_get_value_bigint_int64": "n-api.html#napi_get_value_bigint_int64", "napi_get_value_bigint_uint64": "n-api.html#napi_get_value_bigint_uint64", "napi_get_value_bigint_words": "n-api.html#napi_get_value_bigint_words", "napi_get_value_bool": "n-api.html#napi_get_value_bool", "napi_get_value_double": "n-api.html#napi_get_value_double", "napi_get_value_external": "n-api.html#napi_get_value_external", "napi_get_value_int32": "n-api.html#napi_get_value_int32", "napi_get_value_int64": "n-api.html#napi_get_value_int64", "napi_get_value_string_latin1": "n-api.html#napi_get_value_string_latin1", "napi_get_value_string_utf16": "n-api.html#napi_get_value_string_utf16", "napi_get_value_string_utf8": "n-api.html#napi_get_value_string_utf8", "napi_get_value_uint32": "n-api.html#napi_get_value_uint32", "napi_get_version": "n-api.html#napi_get_version", "napi_handle_scope": "n-api.html#napi_handle_scope", "napi_has_element": "n-api.html#napi_has_element", "napi_has_named_property": "n-api.html#napi_has_named_property", "napi_has_own_property": "n-api.html#napi_has_own_property", "napi_has_property": "n-api.html#napi_has_property", "napi_instanceof": "n-api.html#napi_instanceof", "napi_is_array": "n-api.html#napi_is_array", "napi_is_arraybuffer": "n-api.html#napi_is_arraybuffer", "napi_is_buffer": "n-api.html#napi_is_buffer", "napi_is_dataview": "n-api.html#napi_is_dataview", "napi_is_date": "n-api.html#napi_is_date", "napi_is_detached_arraybuffer": "n-api.html#napi_is_detached_arraybuffer", "napi_is_error": "n-api.html#napi_is_error", "napi_is_exception_pending": "n-api.html#napi_is_exception_pending", "napi_is_promise": "n-api.html#napi_is_promise", "napi_is_typedarray": "n-api.html#napi_is_typedarray", "napi_key_collection_mode": "n-api.html#napi_key_collection_mode", "napi_key_conversion": "n-api.html#napi_key_conversion", "napi_key_filter": "n-api.html#napi_key_filter", "napi_make_callback": "n-api.html#napi_make_callback", "napi_new_instance": "n-api.html#napi_new_instance", "napi_object_freeze": "n-api.html#napi_object_freeze", "napi_object_seal": "n-api.html#napi_object_seal", "napi_open_callback_scope": "n-api.html#napi_open_callback_scope", "napi_open_escapable_handle_scope": "n-api.html#napi_open_escapable_handle_scope", "napi_open_handle_scope": "n-api.html#napi_open_handle_scope", "napi_property_attributes": "n-api.html#napi_property_attributes", "napi_property_descriptor": "n-api.html#napi_property_descriptor", "napi_queue_async_work": "n-api.html#napi_queue_async_work", "napi_ref": "n-api.html#napi_ref", "napi_ref_threadsafe_function": "n-api.html#napi_ref_threadsafe_function", "napi_reference_ref": "n-api.html#napi_reference_ref", "napi_reference_unref": "n-api.html#napi_reference_unref", "napi_reject_deferred": "n-api.html#napi_reject_deferred", "napi_release_threadsafe_function": "n-api.html#napi_release_threadsafe_function", "napi_remove_async_cleanup_hook": "n-api.html#napi_remove_async_cleanup_hook", "napi_remove_env_cleanup_hook": "n-api.html#napi_remove_env_cleanup_hook", "napi_remove_wrap": "n-api.html#napi_remove_wrap", "napi_resolve_deferred": "n-api.html#napi_resolve_deferred", "napi_run_script": "n-api.html#napi_run_script", "napi_set_element": "n-api.html#napi_set_element", "napi_set_instance_data": "n-api.html#napi_set_instance_data", "napi_set_named_property": "n-api.html#napi_set_named_property", "napi_set_property": "n-api.html#napi_set_property", "napi_status": "n-api.html#napi_status", "napi_strict_equals": "n-api.html#napi_strict_equals", "napi_threadsafe_function": "n-api.html#napi_threadsafe_function", "napi_threadsafe_function_call_js": "n-api.html#napi_threadsafe_function_call_js", "napi_threadsafe_function_call_mode": "n-api.html#napi_threadsafe_function_call_mode", "napi_threadsafe_function_release_mode": "n-api.html#napi_threadsafe_function_release_mode", "napi_throw": "n-api.html#napi_throw", "napi_throw_error": "n-api.html#napi_throw_error", "napi_throw_range_error": "n-api.html#napi_throw_range_error", "napi_throw_type_error": "n-api.html#napi_throw_type_error", "napi_type_tag": "n-api.html#napi_type_tag", "napi_type_tag_object": "n-api.html#napi_type_tag_object", "napi_typedarray_type": "n-api.html#napi_typedarray_type", "napi_typeof": "n-api.html#napi_typeof", "napi_unref_threadsafe_function": "n-api.html#napi_unref_threadsafe_function", "napi_unwrap": "n-api.html#napi_unwrap", "napi_value": "n-api.html#napi_value", "napi_valuetype": "n-api.html#napi_valuetype", "napi_wrap": "n-api.html#napi_wrap", "Net": "net.html", "net.connect()": "net.html#netconnect", "net.createConnection()": "net.html#netcreateconnectionport-host-connectlistener", "net.createServer()": "net.html#netcreateserveroptions-connectionlistener", "net.getDefaultAutoSelectFamily()": "net.html#netgetdefaultautoselectfamily", "net.getDefaultAutoSelectFamilyAttemptTimeout()": "net.html#netgetdefaultautoselectfamilyattempttimeout", "net.isIP()": "net.html#netisipinput", "net.isIPv4()": "net.html#netisipv4input", "net.isIPv6()": "net.html#netisipv6input", "net.setDefaultAutoSelectFamily()": "net.html#netsetdefaultautoselectfamilyvalue", "net.setDefaultAutoSelectFamilyAttemptTimeout()": "net.html#netsetdefaultautoselectfamilyattempttimeoutvalue", "new Agent()": "http.html#new-agentoptions", "new assert.AssertionError()": "assert.html#new-assertassertionerroroptions", "new assert.CallTracker()": "assert.html#new-assertcalltracker", "new AsyncLocalStorage()": "async_context.html#new-asynclocalstorage", "new AsyncResource()": "async_context.html#new-asyncresourcetype-options", "new BroadcastChannel()": "worker_threads.html#new-broadcastchannelname", "new Buffer()": "buffer.html#new-bufferarray", "new buffer.Blob()": "buffer.html#new-bufferblobsources-options", "new buffer.File()": "buffer.html#new-bufferfilesources-filename-options", "new ByteLengthQueuingStrategy()": "webstreams.html#new-bytelengthqueuingstrategyinit", "new CompressionStream()": "webstreams.html#new-compressionstreamformat", "new Console()": "console.html#new-consolestdout-stderr-ignoreerrors", "new CountQueuingStrategy()": "webstreams.html#new-countqueuingstrategyinit", "new crypto.Certificate()": "crypto.html#new-cryptocertificate", "new DecompressionStream()": "webstreams.html#new-decompressionstreamformat", "new Deserializer()": "v8.html#new-deserializerbuffer", "new Error()": "errors.html#new-errormessage-options", "new events.EventEmitterAsyncResource()": "events.html#new-eventseventemitterasyncresourceoptions", "new inspector.Session()": "inspector.html#new-inspectorsession", "new net.Server()": "net.html#new-netserveroptions-connectionlistener", "new net.Socket()": "net.html#new-netsocketoptions", "new net.SocketAddress()": "net.html#new-netsocketaddressoptions", "new PerformanceObserver()": "perf_hooks.html#new-performanceobservercallback", "new ReadableStream()": "webstreams.html#new-readablestreamunderlyingsource--strategy", "new ReadableStreamBYOBReader()": "webstreams.html#new-readablestreambyobreaderstream", "new ReadableStreamDefaultReader()": "webstreams.html#new-readablestreamdefaultreaderstream", "new readlinePromises.Readline()": "readline.html#new-readlinepromisesreadlinestream-options", "new Serializer()": "v8.html#new-serializer", "new SlowBuffer()": "buffer.html#new-slowbuffersize", "new SourceMap()": "module.html#new-sourcemappayload--linelengths-", "new stream.Duplex()": "stream.html#new-streamduplexoptions", "new stream.Readable()": "stream.html#new-streamreadableoptions", "new stream.Transform()": "stream.html#new-streamtransformoptions", "new stream.Writable()": "stream.html#new-streamwritableoptions", "new StringDecoder()": "string_decoder.html#new-stringdecoderencoding", "new TextDecoder()": "util.html#new-textdecoderencoding-options", "new TextDecoderStream()": "webstreams.html#new-textdecoderstreamencoding-options", "new TextEncoderStream()": "webstreams.html#new-textencoderstream", "new tls.TLSSocket()": "tls.html#new-tlstlssocketsocket-options", "new TransformStream()": "webstreams.html#new-transformstreamtransformer-writablestrategy-readablestrategy", "new URL()": "url.html#new-urlinput-base", "new URLSearchParams()": "url.html#new-urlsearchparamsstring", "new v8.GCProfiler()": "v8.html#new-v8gcprofiler", "new vm.Script()": "vm.html#new-vmscriptcode-options", "new vm.SourceTextModule()": "vm.html#new-vmsourcetextmodulecode-options", "new vm.SyntheticModule()": "vm.html#new-vmsyntheticmoduleexportnames-evaluatecallback-options", "new WASI()": "wasi.html#new-wasioptions", "new Worker()": "worker_threads.html#new-workerfilename-options", "new WritableStream()": "webstreams.html#new-writablestreamunderlyingsink-strategy", "new WritableStreamDefaultWriter()": "webstreams.html#new-writablestreamdefaultwriterstream", "new X509Certificate()": "crypto.html#new-x509certificatebuffer", "NO_COLOR=<any>": "cli.html#no_colorany", "Node-API": "n-api.html", "node:": "esm.html#node-imports", "node:buffer": "buffer.html#nodebuffer-module-apis", "node:crypto": "crypto.html#nodecrypto-module-methods-and-properties", "node:dgram": "dgram.html#nodedgram-module-functions", "node_api_create_external_string_latin1": "n-api.html#node_api_create_external_string_latin1", "node_api_create_external_string_utf16": "n-api.html#node_api_create_external_string_utf16", "node_api_create_syntax_error": "n-api.html#node_api_create_syntax_error", "node_api_get_module_file_name": "n-api.html#node_api_get_module_file_name", "node_api_symbol_for": "n-api.html#node_api_symbol_for", "node_api_throw_syntax_error": "n-api.html#node_api_throw_syntax_error", "NODE_DEBUG=module[,\u2026]": "cli.html#node_debugmodule", "NODE_DEBUG_NATIVE=module[,\u2026]": "cli.html#node_debug_nativemodule", "NODE_DISABLE_COLORS=1": "cli.html#node_disable_colors1", "NODE_EXTRA_CA_CERTS=file": "cli.html#node_extra_ca_certsfile", "NODE_ICU_DATA=file": "cli.html#node_icu_datafile", "NODE_NO_WARNINGS=1": "cli.html#node_no_warnings1", "NODE_OPTIONS=options...": "cli.html#node_optionsoptions", "NODE_PATH=path[:\u2026]": "cli.html#node_pathpath", "NODE_PENDING_DEPRECATION=1": "cli.html#node_pending_deprecation1", "NODE_PENDING_PIPE_INSTANCES=instances": "cli.html#node_pending_pipe_instancesinstances", "NODE_PRESERVE_SYMLINKS=1": "cli.html#node_preserve_symlinks1", "NODE_REDIRECT_WARNINGS=file": "cli.html#node_redirect_warningsfile", "NODE_REPL_EXTERNAL_MODULE=file": "cli.html#node_repl_external_modulefile", "NODE_REPL_HISTORY=file": "cli.html#node_repl_historyfile", "NODE_SKIP_PLATFORM_CHECK=value": "cli.html#node_skip_platform_checkvalue", "NODE_TEST_CONTEXT=value": "cli.html#node_test_contextvalue", "NODE_TLS_REJECT_UNAUTHORIZED=value": "cli.html#node_tls_reject_unauthorizedvalue", "NODE_V8_COVERAGE=dir": "cli.html#node_v8_coveragedir", "NodeEventTarget": "events.html#nodeeventtarget-vs-eventemitter", "nodeEventTarget.addListener()": "events.html#nodeeventtargetaddlistenertype-listener", "nodeEventTarget.emit()": "events.html#nodeeventtargetemittype-arg", "nodeEventTarget.eventNames()": "events.html#nodeeventtargeteventnames", "nodeEventTarget.getMaxListeners()": "events.html#nodeeventtargetgetmaxlisteners", "nodeEventTarget.listenerCount()": "events.html#nodeeventtargetlistenercounttype", "nodeEventTarget.off()": "events.html#nodeeventtargetofftype-listener-options", "nodeEventTarget.on()": "events.html#nodeeventtargetontype-listener", "nodeEventTarget.once()": "events.html#nodeeventtargetoncetype-listener", "nodeEventTarget.removeAllListeners()": "events.html#nodeeventtargetremovealllistenerstype", "nodeEventTarget.removeListener()": "events.html#nodeeventtargetremovelistenertype-listener-options", "nodeEventTarget.setMaxListeners()": "events.html#nodeeventtargetsetmaxlistenersn", "only": "test.html#only-tests", "OPENSSL_CONF=file": "cli.html#openssl_conffile", "options.detached": "child_process.html#optionsdetached", "options.stdio": "child_process.html#optionsstdio", "OS": "os.html", "os.arch()": "os.html#osarch", "os.availableParallelism()": "os.html#osavailableparallelism", "os.constants": "os.html#osconstants", "os.cpus()": "os.html#oscpus", "os.devNull": "os.html#osdevnull", "os.endianness()": "os.html#osendianness", "os.EOL": "os.html#oseol", "os.freemem()": "os.html#osfreemem", "os.getPriority()": "os.html#osgetprioritypid", "os.homedir()": "os.html#oshomedir", "os.hostname()": "os.html#oshostname", "os.loadavg()": "os.html#osloadavg", "os.machine()": "os.html#osmachine", "os.networkInterfaces()": "os.html#osnetworkinterfaces", "os.platform()": "os.html#osplatform", "os.release()": "os.html#osrelease", "os.setPriority()": "os.html#ossetprioritypid-priority", "os.tmpdir()": "os.html#ostmpdir", "os.totalmem()": "os.html#ostotalmem", "os.type()": "os.html#ostype", "os.uptime()": "os.html#osuptime", "os.userInfo()": "os.html#osuserinfooptions", "os.version()": "os.html#osversion", "outgoingMessage.addTrailers()": "http.html#outgoingmessageaddtrailersheaders", "outgoingMessage.appendHeader()": "http.html#outgoingmessageappendheadername-value", "outgoingMessage.connection": "http.html#outgoingmessageconnection", "outgoingMessage.cork()": "http.html#outgoingmessagecork", "outgoingMessage.destroy()": "http.html#outgoingmessagedestroyerror", "outgoingMessage.end()": "http.html#outgoingmessageendchunk-encoding-callback", "outgoingMessage.flushHeaders()": "http.html#outgoingmessageflushheaders", "outgoingMessage.getHeader()": "http.html#outgoingmessagegetheadername", "outgoingMessage.getHeaderNames()": "http.html#outgoingmessagegetheadernames", "outgoingMessage.getHeaders()": "http.html#outgoingmessagegetheaders", "outgoingMessage.hasHeader()": "http.html#outgoingmessagehasheadername", "outgoingMessage.headersSent": "http.html#outgoingmessageheaderssent", "outgoingMessage.pipe()": "http.html#outgoingmessagepipe", "outgoingMessage.removeHeader()": "http.html#outgoingmessageremoveheadername", "outgoingMessage.setHeader()": "http.html#outgoingmessagesetheadername-value", "outgoingMessage.setHeaders()": "http.html#outgoingmessagesetheadersheaders", "outgoingMessage.setTimeout()": "http.html#outgoingmessagesettimeoutmsesc-callback", "outgoingMessage.socket": "http.html#outgoingmessagesocket", "outgoingMessage.uncork()": "http.html#outgoingmessageuncork", "outgoingMessage.writableCorked": "http.html#outgoingmessagewritablecorked", "outgoingMessage.writableEnded": "http.html#outgoingmessagewritableended", "outgoingMessage.writableFinished": "http.html#outgoingmessagewritablefinished", "outgoingMessage.writableHighWaterMark": "http.html#outgoingmessagewritablehighwatermark", "outgoingMessage.writableLength": "http.html#outgoingmessagewritablelength", "outgoingMessage.writableObjectMode": "http.html#outgoingmessagewritableobjectmode", "outgoingMessage.write()": "http.html#outgoingmessagewritechunk-encoding-callback", "package.json": "packages.html#packagejson-and-file-extensions", "parseArgs": "util.html#parseargs-tokens", "Path": "path.html", "path.basename()": "path.html#pathbasenamepath-suffix", "path.delimiter": "path.html#pathdelimiter", "path.dirname()": "path.html#pathdirnamepath", "path.extname()": "path.html#pathextnamepath", "path.format()": "path.html#pathformatpathobject", "path.isAbsolute()": "path.html#pathisabsolutepath", "path.join()": "path.html#pathjoinpaths", "path.normalize()": "path.html#pathnormalizepath", "path.parse()": "path.html#pathparsepath", "path.posix": "path.html#pathposix", "path.relative()": "path.html#pathrelativefrom-to", "path.resolve()": "path.html#pathresolvepaths", "path.sep": "path.html#pathsep", "path.toNamespacedPath()": "path.html#pathtonamespacedpathpath", "path.win32": "path.html#pathwin32", "pbkdb2Params.hash": "webcrypto.html#pbkdb2paramshash", "pbkdf2Params.iterations": "webcrypto.html#pbkdf2paramsiterations", "pbkdf2Params.name": "webcrypto.html#pbkdf2paramsname", "pbkdf2Params.salt": "webcrypto.html#pbkdf2paramssalt", "perf_hooks.createHistogram()": "perf_hooks.html#perf_hookscreatehistogramoptions", "perf_hooks.monitorEventLoopDelay()": "perf_hooks.html#perf_hooksmonitoreventloopdelayoptions", "perf_hooks.performance": "perf_hooks.html#perf_hooksperformance", "performance": "globals.html#performance", "Performance measurement APIs": "perf_hooks.html", "performance.clearMarks()": "perf_hooks.html#performanceclearmarksname", "performance.clearMeasures()": "perf_hooks.html#performanceclearmeasuresname", "performance.clearResourceTimings()": "perf_hooks.html#performanceclearresourcetimingsname", "performance.eventLoopUtilization()": "perf_hooks.html#performanceeventlooputilizationutilization1-utilization2", "performance.getEntries()": "perf_hooks.html#performancegetentries", "performance.getEntriesByName()": "perf_hooks.html#performancegetentriesbynamename-type", "performance.getEntriesByType()": "perf_hooks.html#performancegetentriesbytypetype", "performance.mark()": "perf_hooks.html#performancemarkname-options", "performance.markResourceTiming()": "perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode", "performance.measure()": "perf_hooks.html#performancemeasurename-startmarkoroptions-endmark", "performance.nodeTiming": "perf_hooks.html#performancenodetiming", "performance.now()": "perf_hooks.html#performancenow", "performance.setResourceTimingBufferSize()": "perf_hooks.html#performancesetresourcetimingbuffersizemaxsize", "performance.timeOrigin": "perf_hooks.html#performancetimeorigin", "performance.timerify()": "perf_hooks.html#performancetimerifyfn-options", "performance.toJSON()": "perf_hooks.html#performancetojson", "PerformanceEntry": "globals.html#performanceentry", "performanceEntry.duration": "perf_hooks.html#performanceentryduration", "performanceEntry.entryType": "perf_hooks.html#performanceentryentrytype", "performanceEntry.name": "perf_hooks.html#performanceentryname", "performanceEntry.startTime": "perf_hooks.html#performanceentrystarttime", "PerformanceMark": "globals.html#performancemark", "performanceMark.detail": "perf_hooks.html#performancemarkdetail", "PerformanceMeasure": "globals.html#performancemeasure", "performanceMeasure.detail": "perf_hooks.html#performancemeasuredetail", "performanceNodeEntry.detail": "perf_hooks.html#performancenodeentrydetail", "performanceNodeEntry.flags": "perf_hooks.html#performancenodeentryflags", "performanceNodeEntry.kind": "perf_hooks.html#performancenodeentrykind", "performanceNodeTiming.bootstrapComplete": "perf_hooks.html#performancenodetimingbootstrapcomplete", "performanceNodeTiming.environment": "perf_hooks.html#performancenodetimingenvironment", "performanceNodeTiming.idleTime": "perf_hooks.html#performancenodetimingidletime", "performanceNodeTiming.loopExit": "perf_hooks.html#performancenodetimingloopexit", "performanceNodeTiming.loopStart": "perf_hooks.html#performancenodetimingloopstart", "performanceNodeTiming.nodeStart": "perf_hooks.html#performancenodetimingnodestart", "performanceNodeTiming.v8Start": "perf_hooks.html#performancenodetimingv8start", "PerformanceObserver": "globals.html#performanceobserver", "performanceObserver.disconnect()": "perf_hooks.html#performanceobserverdisconnect", "performanceObserver.observe()": "perf_hooks.html#performanceobserverobserveoptions", "PerformanceObserver.supportedEntryTypes": "perf_hooks.html#performanceobserversupportedentrytypes", "PerformanceObserverEntryList": "globals.html#performanceobserverentrylist", "performanceObserverEntryList.getEntries()": "perf_hooks.html#performanceobserverentrylistgetentries", "performanceObserverEntryList.getEntriesByName()": "perf_hooks.html#performanceobserverentrylistgetentriesbynamename-type", "performanceObserverEntryList.getEntriesByType()": "perf_hooks.html#performanceobserverentrylistgetentriesbytypetype", "PerformanceResourceTiming": "globals.html#performanceresourcetiming", "performanceResourceTiming.connectEnd": "perf_hooks.html#performanceresourcetimingconnectend", "performanceResourceTiming.connectStart": "perf_hooks.html#performanceresourcetimingconnectstart", "performanceResourceTiming.decodedBodySize": "perf_hooks.html#performanceresourcetimingdecodedbodysize", "performanceResourceTiming.domainLookupEnd": "perf_hooks.html#performanceresourcetimingdomainlookupend", "performanceResourceTiming.domainLookupStart": "perf_hooks.html#performanceresourcetimingdomainlookupstart", "performanceResourceTiming.encodedBodySize": "perf_hooks.html#performanceresourcetimingencodedbodysize", "performanceResourceTiming.fetchStart": "perf_hooks.html#performanceresourcetimingfetchstart", "performanceResourceTiming.redirectEnd": "perf_hooks.html#performanceresourcetimingredirectend", "performanceResourceTiming.redirectStart": "perf_hooks.html#performanceresourcetimingredirectstart", "performanceResourceTiming.requestStart": "perf_hooks.html#performanceresourcetimingrequeststart", "performanceResourceTiming.responseEnd": "perf_hooks.html#performanceresourcetimingresponseend", "performanceResourceTiming.secureConnectionStart": "perf_hooks.html#performanceresourcetimingsecureconnectionstart", "performanceResourceTiming.toJSON()": "perf_hooks.html#performanceresourcetimingtojson", "performanceResourceTiming.transferSize": "perf_hooks.html#performanceresourcetimingtransfersize", "performanceResourceTiming.workerStart": "perf_hooks.html#performanceresourcetimingworkerstart", "permission.has()": "permissions.html#permissionhasscope-reference", "Permissions": "permissions.html", "port.close()": "worker_threads.html#portclose", "port.hasRef()": "worker_threads.html#porthasref", "port.postMessage()": "worker_threads.html#portpostmessagevalue-transferlist", "port.ref()": "worker_threads.html#portref", "port.start()": "worker_threads.html#portstart", "port.unref()": "worker_threads.html#portunref", "Process": "process.html", "process": "globals.html#process", "process.abort()": "process.html#processabort", "process.allowedNodeEnvironmentFlags": "process.html#processallowednodeenvironmentflags", "process.arch": "process.html#processarch", "process.argv": "process.html#processargv", "process.argv0": "process.html#processargv0", "process.channel": "process.html#processchannel", "process.channel.ref()": "process.html#processchannelref", "process.channel.unref()": "process.html#processchannelunref", "process.chdir()": "process.html#processchdirdirectory", "process.config": "process.html#processconfig", "process.connected": "process.html#processconnected", "process.constrainedMemory()": "process.html#processconstrainedmemory", "process.cpuUsage()": "process.html#processcpuusagepreviousvalue", "process.cwd()": "process.html#processcwd", "process.debugPort": "process.html#processdebugport", "process.disconnect()": "process.html#processdisconnect", "process.dlopen()": "process.html#processdlopenmodule-filename-flags", "process.emitWarning()": "process.html#processemitwarningwarning-type-code-ctor", "process.env": "process.html#processenv", "process.execArgv": "process.html#processexecargv", "process.execPath": "process.html#processexecpath", "process.exit()": "process.html#processexitcode", "process.exitCode": "process.html#processexitcode_1", "process.getActiveResourcesInfo()": "process.html#processgetactiveresourcesinfo", "process.getegid()": "process.html#processgetegid", "process.geteuid()": "process.html#processgeteuid", "process.getgid()": "process.html#processgetgid", "process.getgroups()": "process.html#processgetgroups", "process.getuid()": "process.html#processgetuid", "process.hasUncaughtExceptionCaptureCallback()": "process.html#processhasuncaughtexceptioncapturecallback", "process.hrtime()": "process.html#processhrtimetime", "process.hrtime.bigint()": "process.html#processhrtimebigint", "process.initgroups()": "process.html#processinitgroupsuser-extragroup", "process.kill()": "process.html#processkillpid-signal", "process.mainModule": "process.html#processmainmodule", "process.memoryUsage()": "process.html#processmemoryusage", "process.memoryUsage.rss()": "process.html#processmemoryusagerss", "process.nextTick()": "process.html#processnexttickcallback-args", "process.noDeprecation": "process.html#processnodeprecation", "process.permission": "process.html#processpermission", "process.permission.has()": "process.html#processpermissionhasscope-reference", "process.pid": "process.html#processpid", "process.platform": "process.html#processplatform", "process.ppid": "process.html#processppid", "process.release": "process.html#processrelease", "process.report": "process.html#processreport", "process.report.compact": "process.html#processreportcompact", "process.report.directory": "process.html#processreportdirectory", "process.report.filename": "process.html#processreportfilename", "process.report.getReport()": "process.html#processreportgetreporterr", "process.report.reportOnFatalError": "process.html#processreportreportonfatalerror", "process.report.reportOnSignal": "process.html#processreportreportonsignal", "process.report.reportOnUncaughtException": "process.html#processreportreportonuncaughtexception", "process.report.signal": "process.html#processreportsignal", "process.report.writeReport()": "process.html#processreportwritereportfilename-err", "process.resourceUsage()": "process.html#processresourceusage", "process.send()": "process.html#processsendmessage-sendhandle-options-callback", "process.setegid()": "process.html#processsetegidid", "process.seteuid()": "process.html#processseteuidid", "process.setgid()": "process.html#processsetgidid", "process.setgroups()": "process.html#processsetgroupsgroups", "process.setSourceMapsEnabled()": "process.html#processsetsourcemapsenabledval", "process.setuid()": "process.html#processsetuidid", "process.setUncaughtExceptionCaptureCallback()": "process.html#processsetuncaughtexceptioncapturecallbackfn", "process.sourceMapsEnabled": "process.html#processsourcemapsenabled", "process.stderr": "process.html#processstderr", "process.stderr.fd": "process.html#processstderrfd", "process.stdin": "process.html#processstdin", "process.stdin.fd": "process.html#processstdinfd", "process.stdout": "process.html#processstdout", "process.stdout.fd": "process.html#processstdoutfd", "process.throwDeprecation": "process.html#processthrowdeprecation", "process.title": "process.html#processtitle", "process.traceDeprecation": "process.html#processtracedeprecation", "process.umask()": "process.html#processumask", "process.uptime()": "process.html#processuptime", "process.version": "process.html#processversion", "process.versions": "process.html#processversions", "profiler.start()": "v8.html#profilerstart", "profiler.stop()": "v8.html#profilerstop", "promiseHooks.createHook()": "v8.html#promisehookscreatehookcallbacks", "promiseHooks.onAfter()": "v8.html#promisehooksonafterafter", "promiseHooks.onBefore()": "v8.html#promisehooksonbeforebefore", "promiseHooks.onInit()": "v8.html#promisehooksoninitinit", "promiseHooks.onSettled()": "v8.html#promisehooksonsettledsettled", "promiseResolve()": "async_hooks.html#promiseresolveasyncid", "Punycode": "punycode.html", "punycode.decode()": "punycode.html#punycodedecodestring", "punycode.encode()": "punycode.html#punycodeencodestring", "punycode.toASCII()": "punycode.html#punycodetoasciidomain", "punycode.toUnicode()": "punycode.html#punycodetounicodedomain", "punycode.ucs2": "punycode.html#punycodeucs2", "punycode.ucs2.decode()": "punycode.html#punycodeucs2decodestring", "punycode.ucs2.encode()": "punycode.html#punycodeucs2encodecodepoints", "punycode.version": "punycode.html#punycodeversion", "Query string": "querystring.html", "querystring.decode()": "querystring.html#querystringdecode", "querystring.encode()": "querystring.html#querystringencode", "querystring.escape()": "querystring.html#querystringescapestr", "querystring.parse()": "querystring.html#querystringparsestr-sep-eq-options", "querystring.stringify()": "querystring.html#querystringstringifyobj-sep-eq-options", "querystring.unescape()": "querystring.html#querystringunescapestr", "queueMicrotask()": "globals.html#queuemicrotaskcallback", "readable._construct()": "stream.html#readable_constructcallback", "readable._destroy()": "stream.html#readable_destroyerr-callback", "readable._read()": "stream.html#readable_readsize", "readable.asIndexedPairs()": "stream.html#readableasindexedpairsoptions", "readable.closed": "stream.html#readableclosed", "readable.compose()": "stream.html#readablecomposestream-options", "readable.destroy()": "stream.html#readabledestroyerror", "readable.destroyed": "stream.html#readabledestroyed", "readable.drop()": "stream.html#readabledroplimit-options", "readable.errored": "stream.html#readableerrored", "readable.every()": "stream.html#readableeveryfn-options", "readable.filter()": "stream.html#readablefilterfn-options", "readable.find()": "stream.html#readablefindfn-options", "readable.flatMap()": "stream.html#readableflatmapfn-options", "readable.forEach()": "stream.html#readableforeachfn-options", "readable.isPaused()": "stream.html#readableispaused", "readable.iterator()": "stream.html#readableiteratoroptions", "readable.map()": "stream.html#readablemapfn-options", "readable.pause()": "stream.html#readablepause", "readable.pipe()": "stream.html#readablepipedestination-options", "readable.push()": "stream.html#readablepush", "readable.read()": "stream.html#readableread0", "readable.readable": "stream.html#readablereadable", "readable.readableAborted": "stream.html#readablereadableaborted", "readable.readableDidRead": "stream.html#readablereadabledidread", "readable.readableEncoding": "stream.html#readablereadableencoding", "readable.readableEnded": "stream.html#readablereadableended", "readable.readableFlowing": "stream.html#readablereadableflowing", "readable.readableHighWaterMark": "stream.html#readablereadablehighwatermark", "readable.readableLength": "stream.html#readablereadablelength", "readable.readableObjectMode": "stream.html#readablereadableobjectmode", "readable.reduce()": "stream.html#readablereducefn-initial-options", "readable.resume()": "stream.html#readableresume", "readable.setEncoding()": "stream.html#readablesetencodingencoding", "readable.some()": "stream.html#readablesomefn-options", "readable.take()": "stream.html#readabletakelimit-options", "readable.toArray()": "stream.html#readabletoarrayoptions", "readable.unpipe()": "stream.html#readableunpipedestination", "readable.unshift()": "stream.html#readableunshiftchunk-encoding", "readable.wrap()": "stream.html#readablewrapstream", "readable[Symbol.asyncDispose]()": "stream.html#readablesymbolasyncdispose", "readable[Symbol.asyncIterator]()": "stream.html#readablesymbolasynciterator", "readableByteStreamController.byobRequest": "webstreams.html#readablebytestreamcontrollerbyobrequest", "readableByteStreamController.close()": "webstreams.html#readablebytestreamcontrollerclose", "readableByteStreamController.desiredSize": "webstreams.html#readablebytestreamcontrollerdesiredsize", "readableByteStreamController.enqueue()": "webstreams.html#readablebytestreamcontrollerenqueuechunk", "readableByteStreamController.error()": "webstreams.html#readablebytestreamcontrollererrorerror", "readableStream.cancel()": "webstreams.html#readablestreamcancelreason", "ReadableStream.from()": "webstreams.html#readablestreamfromiterable", "readableStream.getReader()": "webstreams.html#readablestreamgetreaderoptions", "readableStream.locked": "webstreams.html#readablestreamlocked", "readableStream.pipeThrough()": "webstreams.html#readablestreampipethroughtransform-options", "readableStream.pipeTo()": "webstreams.html#readablestreampipetodestination-options", "readableStream.tee()": "webstreams.html#readablestreamtee", "readableStream.values()": "webstreams.html#readablestreamvaluesoptions", "readableStreamBYOBReader.cancel()": "webstreams.html#readablestreambyobreadercancelreason", "readableStreamBYOBReader.closed": "webstreams.html#readablestreambyobreaderclosed", "readableStreamBYOBReader.read()": "webstreams.html#readablestreambyobreaderreadview", "readableStreamBYOBReader.releaseLock()": "webstreams.html#readablestreambyobreaderreleaselock", "readableStreamBYOBRequest.respond()": "webstreams.html#readablestreambyobrequestrespondbyteswritten", "readableStreamBYOBRequest.respondWithNewView()": "webstreams.html#readablestreambyobrequestrespondwithnewviewview", "readableStreamBYOBRequest.view": "webstreams.html#readablestreambyobrequestview", "readableStreamDefaultController.close()": "webstreams.html#readablestreamdefaultcontrollerclose", "readableStreamDefaultController.desiredSize": "webstreams.html#readablestreamdefaultcontrollerdesiredsize", "readableStreamDefaultController.enqueue()": "webstreams.html#readablestreamdefaultcontrollerenqueuechunk", "readableStreamDefaultController.error()": "webstreams.html#readablestreamdefaultcontrollererrorerror", "readableStreamDefaultReader.cancel()": "webstreams.html#readablestreamdefaultreadercancelreason", "readableStreamDefaultReader.closed": "webstreams.html#readablestreamdefaultreaderclosed", "readableStreamDefaultReader.read()": "webstreams.html#readablestreamdefaultreaderread", "readableStreamDefaultReader.releaseLock()": "webstreams.html#readablestreamdefaultreaderreleaselock", "Readline": "readline.html", "readline.clearLine()": "readline.html#readlineclearlinestream-dir-callback", "readline.clearScreenDown()": "readline.html#readlineclearscreendownstream-callback", "readline.createInterface()": "readline.html#readlinecreateinterfaceoptions", "readline.cursorTo()": "readline.html#readlinecursortostream-x-y-callback", "readline.emitKeypressEvents()": "readline.html#readlineemitkeypresseventsstream-interface", "readline.moveCursor()": "readline.html#readlinemovecursorstream-dx-dy-callback", "readlinePromises.createInterface()": "readline.html#readlinepromisescreateinterfaceoptions", "readStream.bytesRead": "fs.html#readstreambytesread", "readStream.isRaw": "tty.html#readstreamisraw", "readStream.isTTY": "tty.html#readstreamistty", "readStream.path": "fs.html#readstreampath", "readStream.pending": "fs.html#readstreampending", "readStream.setRawMode()": "tty.html#readstreamsetrawmodemode", "REPL": "repl.html", "repl.builtinModules": "repl.html#replbuiltinmodules", "repl.start()": "repl.html#replstartoptions", "replServer.clearBufferedCommand()": "repl.html#replserverclearbufferedcommand", "replServer.defineCommand()": "repl.html#replserverdefinecommandkeyword-cmd", "replServer.displayPrompt()": "repl.html#replserverdisplaypromptpreservecursor", "replServer.parseREPLKeyword()": "repl.html#replserverparsereplkeywordkeyword-rest", "replServer.setupHistory()": "repl.html#replserversetuphistoryhistorypath-callback", "report-directory=directory": "cli.html#--report-dirdirectory-report-directorydirectory", "Request": "globals.html#request", "request.abort()": "http.html#requestabort", "request.aborted": "http2.html#requestaborted", "request.authority": "http2.html#requestauthority", "request.complete": "http2.html#requestcomplete", "request.connection": "http.html#requestconnection", "request.cork()": "http.html#requestcork", "request.destroy()": "http.html#requestdestroyerror", "request.destroyed": "http.html#requestdestroyed", "request.end()": "http.html#requestenddata-encoding-callback", "request.finished": "http.html#requestfinished", "request.flushHeaders()": "http.html#requestflushheaders", "request.getHeader()": "http.html#requestgetheadername", "request.getHeaderNames()": "http.html#requestgetheadernames", "request.getHeaders()": "http.html#requestgetheaders", "request.getRawHeaderNames()": "http.html#requestgetrawheadernames", "request.hasHeader()": "http.html#requesthasheadername", "request.headers": "http2.html#requestheaders", "request.host": "http.html#requesthost", "request.httpVersion": "http2.html#requesthttpversion", "request.maxHeadersCount": "http.html#requestmaxheaderscount", "request.method": "http.html#requestmethod", "request.path": "http.html#requestpath", "request.protocol": "http.html#requestprotocol", "request.rawHeaders": "http2.html#requestrawheaders", "request.rawTrailers": "http2.html#requestrawtrailers", "request.removeHeader()": "http.html#requestremoveheadername", "request.reusedSocket": "http.html#requestreusedsocket", "request.scheme": "http2.html#requestscheme", "request.setHeader()": "http.html#requestsetheadername-value", "request.setNoDelay()": "http.html#requestsetnodelaynodelay", "request.setSocketKeepAlive()": "http.html#requestsetsocketkeepaliveenable-initialdelay", "request.setTimeout()": "http.html#requestsettimeouttimeout-callback", "request.socket": "http2.html#requestsocket", "request.stream": "http2.html#requeststream", "request.trailers": "http2.html#requesttrailers", "request.uncork()": "http.html#requestuncork", "request.url": "http2.html#requesturl", "request.writableEnded": "http.html#requestwritableended", "request.writableFinished": "http.html#requestwritablefinished", "request.write()": "http.html#requestwritechunk-encoding-callback", "require": "esm.html#require", "require()": "modules.html#requireid", "require.cache": "modules.html#requirecache", "require.extensions": "modules.html#requireextensions", "require.main": "modules.html#requiremain", "require.resolve()": "modules.html#requireresolverequest-options", "require.resolve.paths()": "modules.html#requireresolvepathsrequest", "resolve()": "module.html#resolvespecifier-context-nextresolve", "Resolver()": "dns.html#resolveroptions", "resolver.cancel()": "dns.html#resolvercancel", "resolver.setLocalAddress()": "dns.html#resolversetlocaladdressipv4-ipv6", "resource": "async_hooks.html#resource", "Response": "globals.html#response", "response.addTrailers()": "http2.html#responseaddtrailersheaders", "response.connection": "http.html#responseconnection", "response.cork()": "http.html#responsecork", "response.createPushResponse()": "http2.html#responsecreatepushresponseheaders-callback", "response.end()": "http2.html#responseenddata-encoding-callback", "response.finished": "http.html#responsefinished", "response.flushHeaders()": "http.html#responseflushheaders", "response.getHeader()": "http.html#responsegetheadername", "response.getHeaderNames()": "http2.html#responsegetheadernames", "response.getHeaders()": "http.html#responsegetheaders", "response.hasHeader()": "http.html#responsehasheadername", "response.headersSent": "http.html#responseheaderssent", "response.removeHeader()": "http.html#responseremoveheadername", "response.req": "http.html#responsereq", "response.sendDate": "http2.html#responsesenddate", "response.setHeader()": "http.html#responsesetheadername-value", "response.setTimeout()": "http.html#responsesettimeoutmsecs-callback", "response.socket": "http2.html#responsesocket", "response.statusCode": "http.html#responsestatuscode", "response.statusMessage": "http2.html#responsestatusmessage", "response.stream": "http2.html#responsestream", "response.strictContentLength": "http.html#responsestrictcontentlength", "response.uncork()": "http.html#responseuncork", "response.writableEnded": "http2.html#responsewritableended", "response.writableFinished": "http.html#responsewritablefinished", "response.write()": "http2.html#responsewritechunk-encoding-callback", "response.writeContinue()": "http.html#responsewritecontinue", "response.writeEarlyHints()": "http.html#responsewriteearlyhintshints-callback", "response.writeHead()": "http.html#responsewriteheadstatuscode-statusmessage-headers", "response.writeProcessing()": "http.html#responsewriteprocessing", "rl.clearLine()": "readline.html#rlclearlinedir", "rl.clearScreenDown()": "readline.html#rlclearscreendown", "rl.close()": "readline.html#rlclose", "rl.commit()": "readline.html#rlcommit", "rl.cursor": "readline.html#rlcursor", "rl.cursorTo()": "readline.html#rlcursortox-y", "rl.getCursorPos()": "readline.html#rlgetcursorpos", "rl.getPrompt()": "readline.html#rlgetprompt", "rl.line": "readline.html#rlline", "rl.moveCursor()": "readline.html#rlmovecursordx-dy", "rl.pause()": "readline.html#rlpause", "rl.prompt()": "readline.html#rlpromptpreservecursor", "rl.question()": "readline.html#rlquestionquery-options", "rl.resume()": "readline.html#rlresume", "rl.rollback()": "readline.html#rlrollback", "rl.setPrompt()": "readline.html#rlsetpromptprompt", "rl.write()": "readline.html#rlwritedata-key", "rl[Symbol.asyncIterator]()": "readline.html#rlsymbolasynciterator", "rsaHashedImportParams.hash": "webcrypto.html#rsahashedimportparamshash", "rsaHashedImportParams.name": "webcrypto.html#rsahashedimportparamsname", "rsaHashedKeyGenParams.hash": "webcrypto.html#rsahashedkeygenparamshash", "rsaHashedKeyGenParams.modulusLength": "webcrypto.html#rsahashedkeygenparamsmoduluslength", "rsaHashedKeyGenParams.name": "webcrypto.html#rsahashedkeygenparamsname", "rsaHashedKeyGenParams.publicExponent": "webcrypto.html#rsahashedkeygenparamspublicexponent", "rsaOaepParams.label": "webcrypto.html#rsaoaepparamslabel", "rsaOaepParams.name": "webcrypto.html#rsaoaepparamsname", "rsaPssParams.name": "webcrypto.html#rsapssparamsname", "rsaPssParams.saltLength": "webcrypto.html#rsapssparamssaltlength", "run()": "test.html#runoptions", "script.cachedDataRejected": "vm.html#scriptcacheddatarejected", "script.createCachedData()": "vm.html#scriptcreatecacheddata", "script.runInContext()": "vm.html#scriptrunincontextcontextifiedobject-options", "script.runInNewContext()": "vm.html#scriptruninnewcontextcontextobject-options", "script.runInThisContext()": "vm.html#scriptruninthiscontextoptions", "script.sourceMapURL": "vm.html#scriptsourcemapurl", "serializer._getDataCloneError()": "v8.html#serializer_getdatacloneerrormessage", "serializer._getSharedArrayBufferId()": "v8.html#serializer_getsharedarraybufferidsharedarraybuffer", "serializer._setTreatArrayBufferViewsAsHostObjects()": "v8.html#serializer_settreatarraybufferviewsashostobjectsflag", "serializer._writeHostObject()": "v8.html#serializer_writehostobjectobject", "serializer.releaseBuffer()": "v8.html#serializerreleasebuffer", "serializer.transferArrayBuffer()": "v8.html#serializertransferarraybufferid-arraybuffer", "serializer.writeDouble()": "v8.html#serializerwritedoublevalue", "serializer.writeHeader()": "v8.html#serializerwriteheader", "serializer.writeRawBytes()": "v8.html#serializerwriterawbytesbuffer", "serializer.writeUint32()": "v8.html#serializerwriteuint32value", "serializer.writeUint64()": "v8.html#serializerwriteuint64hi-lo", "serializer.writeValue()": "v8.html#serializerwritevaluevalue", "server.addContext()": "tls.html#serveraddcontexthostname-context", "server.address()": "tls.html#serveraddress", "server.close()": "http2.html#serverclosecallback", "server.closeAllConnections()": "http.html#servercloseallconnections", "server.closeIdleConnections()": "https.html#servercloseidleconnections", "server.getConnections()": "net.html#servergetconnectionscallback", "server.getTicketKeys()": "tls.html#servergetticketkeys", "server.headersTimeout": "https.html#serverheaderstimeout", "server.keepAliveTimeout": "https.html#serverkeepalivetimeout", "server.listen()": "net.html#serverlisten", "server.listening": "net.html#serverlistening", "server.maxConnections": "net.html#servermaxconnections", "server.maxHeadersCount": "http.html#servermaxheaderscount", "server.maxRequestsPerSocket": "http.html#servermaxrequestspersocket", "server.ref()": "net.html#serverref", "server.requestTimeout": "http.html#serverrequesttimeout", "server.setSecureContext()": "tls.html#serversetsecurecontextoptions", "server.setTicketKeys()": "tls.html#serversetticketkeyskeys", "server.setTimeout()": "http.html#serversettimeoutmsecs-callback", "server.timeout": "https.html#servertimeout", "server.unref()": "net.html#serverunref", "server.updateSettings()": "http2.html#serverupdatesettingssettings_1", "server[Symbol.asyncDispose]()": "net.html#serversymbolasyncdispose", "serverhttp2session.altsvc()": "http2.html#serverhttp2sessionaltsvcalt-originorstream", "serverhttp2session.origin()": "http2.html#serverhttp2sessionoriginorigins", "session.connect()": "inspector.html#sessionconnect", "session.connectToMainThread()": "inspector.html#sessionconnecttomainthread_1", "session.disconnect()": "inspector.html#sessiondisconnect_1", "session.post()": "inspector.html#sessionpostmethod-params", "setImmediate()": "timers.html#setimmediatecallback-args", "setInterval()": "timers.html#setintervalcallback-delay-args", "setTimeout()": "timers.html#settimeoutcallback-delay-args", "settled()": "v8.html#settledpromise", "sign.sign()": "crypto.html#signsignprivatekey-outputencoding", "sign.update()": "crypto.html#signupdatedata-inputencoding", "Single executable applications": "single-executable-applications.html", "socket.addMembership()": "dgram.html#socketaddmembershipmulticastaddress-multicastinterface", "socket.address()": "net.html#socketaddress", "socket.addSourceSpecificMembership()": "dgram.html#socketaddsourcespecificmembershipsourceaddress-groupaddress-multicastinterface", "socket.autoSelectFamilyAttemptedAddresses": "net.html#socketautoselectfamilyattemptedaddresses", "socket.bind()": "dgram.html#socketbindoptions-callback", "socket.bufferSize": "net.html#socketbuffersize", "socket.bytesRead": "net.html#socketbytesread", "socket.bytesWritten": "net.html#socketbyteswritten", "socket.close()": "dgram.html#socketclosecallback", "socket.connect()": "net.html#socketconnectpath-connectlistener", "socket.connecting": "net.html#socketconnecting", "socket.destroy()": "net.html#socketdestroyerror", "socket.destroyed": "net.html#socketdestroyed", "socket.destroySoon()": "net.html#socketdestroysoon", "socket.disconnect()": "dgram.html#socketdisconnect", "socket.dropMembership()": "dgram.html#socketdropmembershipmulticastaddress-multicastinterface", "socket.dropSourceSpecificMembership()": "dgram.html#socketdropsourcespecificmembershipsourceaddress-groupaddress-multicastinterface", "socket.end()": "net.html#socketenddata-encoding-callback", "socket.getRecvBufferSize()": "dgram.html#socketgetrecvbuffersize", "socket.getSendBufferSize()": "dgram.html#socketgetsendbuffersize", "socket.getSendQueueCount()": "dgram.html#socketgetsendqueuecount", "socket.getSendQueueSize()": "dgram.html#socketgetsendqueuesize", "socket.localAddress": "net.html#socketlocaladdress", "socket.localFamily": "net.html#socketlocalfamily", "socket.localPort": "net.html#socketlocalport", "socket.pause()": "net.html#socketpause", "socket.pending": "net.html#socketpending", "socket.readyState": "net.html#socketreadystate", "socket.ref()": "dgram.html#socketref", "socket.remoteAddress": "net.html#socketremoteaddress", "socket.remoteAddress()": "dgram.html#socketremoteaddress", "socket.remoteFamily": "net.html#socketremotefamily", "socket.remotePort": "net.html#socketremoteport", "socket.resetAndDestroy()": "net.html#socketresetanddestroy", "socket.resume()": "net.html#socketresume", "socket.send()": "dgram.html#socketsendmsg-offset-length-port-address-callback", "socket.setBroadcast()": "dgram.html#socketsetbroadcastflag", "socket.setEncoding()": "net.html#socketsetencodingencoding", "socket.setKeepAlive()": "net.html#socketsetkeepaliveenable-initialdelay", "socket.setMulticastInterface()": "dgram.html#socketsetmulticastinterfacemulticastinterface", "socket.setMulticastLoopback()": "dgram.html#socketsetmulticastloopbackflag", "socket.setMulticastTTL()": "dgram.html#socketsetmulticastttlttl", "socket.setNoDelay()": "net.html#socketsetnodelaynodelay", "socket.setRecvBufferSize()": "dgram.html#socketsetrecvbuffersizesize", "socket.setSendBufferSize()": "dgram.html#socketsetsendbuffersizesize", "socket.setTimeout()": "net.html#socketsettimeouttimeout-callback", "socket.setTTL()": "dgram.html#socketsetttlttl", "socket.timeout": "net.html#sockettimeout", "socket.unref()": "net.html#socketunref", "socket.write()": "net.html#socketwritedata-encoding-callback", "socket[Symbol.asyncDispose]()": "dgram.html#socketsymbolasyncdispose", "socketaddress.address": "net.html#socketaddressaddress", "socketaddress.family": "net.html#socketaddressfamily", "socketaddress.flowlabel": "net.html#socketaddressflowlabel", "socketaddress.port": "net.html#socketaddressport", "sourceMap.findEntry()": "module.html#sourcemapfindentrylineoffset-columnoffset", "sourceMap.findOrigin()": "module.html#sourcemapfindoriginlinenumber-columnnumber", "sourceMap.payload": "module.html#sourcemappayload", "sourceTextModule.createCachedData()": "vm.html#sourcetextmodulecreatecacheddata", "SSL_CERT_DIR=dir": "cli.html#ssl_cert_dirdir", "SSL_CERT_FILE=file": "cli.html#ssl_cert_filefile", "start()": "diagnostics_channel.html#startevent", "statfs.bavail": "fs.html#statfsbavail", "statfs.bfree": "fs.html#statfsbfree", "statfs.blocks": "fs.html#statfsblocks", "statfs.bsize": "fs.html#statfsbsize", "statfs.ffree": "fs.html#statfsffree", "statfs.files": "fs.html#statfsfiles", "statfs.type": "fs.html#statfstype", "stats.atime": "fs.html#statsatime", "stats.atimeMs": "fs.html#statsatimems", "stats.atimeNs": "fs.html#statsatimens", "stats.birthtime": "fs.html#statsbirthtime", "stats.birthtimeMs": "fs.html#statsbirthtimems", "stats.birthtimeNs": "fs.html#statsbirthtimens", "stats.blksize": "fs.html#statsblksize", "stats.blocks": "fs.html#statsblocks", "stats.ctime": "fs.html#statsctime", "stats.ctimeMs": "fs.html#statsctimems", "stats.ctimeNs": "fs.html#statsctimens", "stats.dev": "fs.html#statsdev", "stats.gid": "fs.html#statsgid", "stats.ino": "fs.html#statsino", "stats.isBlockDevice()": "fs.html#statsisblockdevice", "stats.isCharacterDevice()": "fs.html#statsischaracterdevice", "stats.isDirectory()": "fs.html#statsisdirectory", "stats.isFIFO()": "fs.html#statsisfifo", "stats.isFile()": "fs.html#statsisfile", "stats.isSocket()": "fs.html#statsissocket", "stats.isSymbolicLink()": "fs.html#statsissymboliclink", "stats.mode": "fs.html#statsmode", "stats.mtime": "fs.html#statsmtime", "stats.mtimeMs": "fs.html#statsmtimems", "stats.mtimeNs": "fs.html#statsmtimens", "stats.nlink": "fs.html#statsnlink", "stats.rdev": "fs.html#statsrdev", "stats.size": "fs.html#statssize", "stats.uid": "fs.html#statsuid", "stream.addAbortSignal()": "stream.html#streamaddabortsignalsignal-stream", "stream.compose()": "stream.html#streamcomposestreams", "stream.Duplex.from()": "stream.html#streamduplexfromsrc", "stream.Duplex.fromWeb()": "stream.html#streamduplexfromwebpair-options", "stream.Duplex.toWeb()": "stream.html#streamduplextowebstreamduplex", "stream.finished()": "stream.html#streamfinishedstream-options-callback", "stream.getDefaultHighWaterMark()": "stream.html#streamgetdefaulthighwatermarkobjectmode", "stream.isErrored()": "stream.html#streamiserroredstream", "stream.isReadable()": "stream.html#streamisreadablestream", "stream.pipeline()": "stream.html#streampipelinesource-transforms-destination-callback", "stream.Readable.from()": "stream.html#streamreadablefromiterable-options", "stream.Readable.fromWeb()": "stream.html#streamreadablefromwebreadablestream-options", "stream.Readable.isDisturbed()": "stream.html#streamreadableisdisturbedstream", "stream.Readable.toWeb()": "stream.html#streamreadabletowebstreamreadable-options", "stream.setDefaultHighWaterMark()": "stream.html#streamsetdefaulthighwatermarkobjectmode-value", "stream.Writable.fromWeb()": "stream.html#streamwritablefromwebwritablestream-options", "stream.Writable.toWeb()": "stream.html#streamwritabletowebstreamwritable", "Stream[src]": "stream.html", "streamConsumers.arrayBuffer()": "webstreams.html#streamconsumersarraybufferstream", "streamConsumers.blob()": "webstreams.html#streamconsumersblobstream", "streamConsumers.buffer()": "webstreams.html#streamconsumersbufferstream", "streamConsumers.json()": "webstreams.html#streamconsumersjsonstream", "streamConsumers.text()": "webstreams.html#streamconsumerstextstream", "String decoder": "string_decoder.html", "stringDecoder.end()": "string_decoder.html#stringdecoderendbuffer", "stringDecoder.write()": "string_decoder.html#stringdecoderwritebuffer", "structuredClone()": "globals.html#structuredclonevalue-options", "subprocess.channel": "child_process.html#subprocesschannel", "subprocess.channel.ref()": "child_process.html#subprocesschannelref", "subprocess.channel.unref()": "child_process.html#subprocesschannelunref", "subprocess.connected": "child_process.html#subprocessconnected", "subprocess.disconnect()": "child_process.html#subprocessdisconnect", "subprocess.exitCode": "child_process.html#subprocessexitcode", "subprocess.kill()": "child_process.html#subprocesskillsignal", "subprocess.killed": "child_process.html#subprocesskilled", "subprocess.pid": "child_process.html#subprocesspid", "subprocess.ref()": "child_process.html#subprocessref", "subprocess.send()": "child_process.html#subprocesssendmessage-sendhandle-options-callback", "subprocess.signalCode": "child_process.html#subprocesssignalcode", "subprocess.spawnargs": "child_process.html#subprocessspawnargs", "subprocess.spawnfile": "child_process.html#subprocessspawnfile", "subprocess.stderr": "child_process.html#subprocessstderr", "subprocess.stdin": "child_process.html#subprocessstdin", "subprocess.stdio": "child_process.html#subprocessstdio", "subprocess.stdout": "child_process.html#subprocessstdout", "subprocess.unref()": "child_process.html#subprocessunref", "subprocess[Symbol.dispose]()": "child_process.html#subprocesssymboldispose", "subtle.decrypt()": "webcrypto.html#subtledecryptalgorithm-key-data", "subtle.deriveBits()": "webcrypto.html#subtlederivebitsalgorithm-basekey-length", "subtle.deriveKey()": "webcrypto.html#subtlederivekeyalgorithm-basekey-derivedkeyalgorithm-extractable-keyusages", "subtle.digest()": "webcrypto.html#subtledigestalgorithm-data", "subtle.encrypt()": "webcrypto.html#subtleencryptalgorithm-key-data", "subtle.exportKey()": "webcrypto.html#subtleexportkeyformat-key", "subtle.generateKey()": "webcrypto.html#subtlegeneratekeyalgorithm-extractable-keyusages", "subtle.importKey()": "webcrypto.html#subtleimportkeyformat-keydata-algorithm-extractable-keyusages", "subtle.sign()": "webcrypto.html#subtlesignalgorithm-key-data", "subtle.unwrapKey()": "webcrypto.html#subtleunwrapkeyformat-wrappedkey-unwrappingkey-unwrapalgo-unwrappedkeyalgo-extractable-keyusages", "subtle.verify()": "webcrypto.html#subtleverifyalgorithm-key-signature-data", "subtle.wrapKey()": "webcrypto.html#subtlewrapkeyformat-key-wrappingkey-wrapalgo", "SubtleCrypto": "globals.html#subtlecrypto", "syntheticModule.setExport()": "vm.html#syntheticmodulesetexportname-value", "Test runner": "test.html", "test()": "test.html#testname-options-fn", "test.only()": "test.html#testonlyname-options-fn", "test.skip()": "test.html#testskipname-options-fn", "test.todo()": "test.html#testtodoname-options-fn", "TextDecoder": "globals.html#textdecoder", "textDecoder.decode()": "util.html#textdecoderdecodeinput-options", "textDecoder.encoding": "util.html#textdecoderencoding", "textDecoder.fatal": "util.html#textdecoderfatal", "textDecoder.ignoreBOM": "util.html#textdecoderignorebom", "textDecoderStream.encoding": "webstreams.html#textdecoderstreamencoding", "textDecoderStream.fatal": "webstreams.html#textdecoderstreamfatal", "textDecoderStream.ignoreBOM": "webstreams.html#textdecoderstreamignorebom", "textDecoderStream.readable": "webstreams.html#textdecoderstreamreadable", "textDecoderStream.writable": "webstreams.html#textdecoderstreamwritable", "TextEncoder": "globals.html#textencoder", "textEncoder.encode()": "util.html#textencoderencodeinput", "textEncoder.encodeInto()": "util.html#textencoderencodeintosrc-dest", "textEncoder.encoding": "util.html#textencoderencoding", "textEncoderStream.encoding": "webstreams.html#textencoderstreamencoding", "textEncoderStream.readable": "webstreams.html#textencoderstreamreadable", "textEncoderStream.writable": "webstreams.html#textencoderstreamwritable", "timeout.close()": "timers.html#timeoutclose", "timeout.hasRef()": "timers.html#timeouthasref", "timeout.ref()": "timers.html#timeoutref", "timeout.refresh()": "timers.html#timeoutrefresh", "timeout.unref()": "timers.html#timeoutunref", "timeout[Symbol.dispose]()": "timers.html#timeoutsymboldispose", "timeout[Symbol.toPrimitive]()": "timers.html#timeoutsymboltoprimitive", "Timers": "timers.html", "timers.enable()": "test.html#timersenabletimers", "timers.reset()": "test.html#timersreset", "timers.runAll()": "test.html#timersrunall", "timers.tick()": "test.html#timerstickmilliseconds", "timers[Symbol.dispose]()": "test.html#timerssymboldispose", "timersPromises.scheduler.wait()": "timers.html#timerspromisesschedulerwaitdelay-options", "timersPromises.scheduler.yield()": "timers.html#timerspromisesscheduleryield", "timersPromises.setImmediate()": "timers.html#timerspromisessetimmediatevalue-options", "timersPromises.setInterval()": "timers.html#timerspromisessetintervaldelay-value-options", "timersPromises.setTimeout()": "timers.html#timerspromisessettimeoutdelay-value-options", "TLS (SSL)": "tls.html", "tls.checkServerIdentity()": "tls.html#tlscheckserveridentityhostname-cert", "tls.connect()": "tls.html#tlsconnectpath-options-callback", "tls.createSecureContext()": "tls.html#tlscreatesecurecontextoptions", "tls.createSecurePair()": "tls.html#tlscreatesecurepaircontext-isserver-requestcert-rejectunauthorized-options", "tls.createServer()": "tls.html#tlscreateserveroptions-secureconnectionlistener", "tls.DEFAULT_CIPHERS": "tls.html#tlsdefault_ciphers", "tls.DEFAULT_ECDH_CURVE": "tls.html#tlsdefault_ecdh_curve", "tls.DEFAULT_MAX_VERSION": "tls.html#tlsdefault_max_version", "tls.DEFAULT_MIN_VERSION": "tls.html#tlsdefault_min_version", "tls.getCiphers()": "tls.html#tlsgetciphers", "tls.rootCertificates": "tls.html#tlsrootcertificates", "tlsSocket.address()": "tls.html#tlssocketaddress", "tlsSocket.authorizationError": "tls.html#tlssocketauthorizationerror", "tlsSocket.authorized": "tls.html#tlssocketauthorized", "tlsSocket.disableRenegotiation()": "tls.html#tlssocketdisablerenegotiation", "tlsSocket.enableTrace()": "tls.html#tlssocketenabletrace", "tlsSocket.encrypted": "tls.html#tlssocketencrypted", "tlsSocket.exportKeyingMaterial()": "tls.html#tlssocketexportkeyingmateriallength-label-context", "tlsSocket.getCertificate()": "tls.html#tlssocketgetcertificate", "tlsSocket.getCipher()": "tls.html#tlssocketgetcipher", "tlsSocket.getEphemeralKeyInfo()": "tls.html#tlssocketgetephemeralkeyinfo", "tlsSocket.getFinished()": "tls.html#tlssocketgetfinished", "tlsSocket.getPeerCertificate()": "tls.html#tlssocketgetpeercertificatedetailed", "tlsSocket.getPeerFinished()": "tls.html#tlssocketgetpeerfinished", "tlsSocket.getPeerX509Certificate()": "tls.html#tlssocketgetpeerx509certificate", "tlsSocket.getProtocol()": "tls.html#tlssocketgetprotocol", "tlsSocket.getSession()": "tls.html#tlssocketgetsession", "tlsSocket.getSharedSigalgs()": "tls.html#tlssocketgetsharedsigalgs", "tlsSocket.getTLSTicket()": "tls.html#tlssocketgettlsticket", "tlsSocket.getX509Certificate()": "tls.html#tlssocketgetx509certificate", "tlsSocket.isSessionReused()": "tls.html#tlssocketissessionreused", "tlsSocket.localAddress": "tls.html#tlssocketlocaladdress", "tlsSocket.localPort": "tls.html#tlssocketlocalport", "tlsSocket.remoteAddress": "tls.html#tlssocketremoteaddress", "tlsSocket.remoteFamily": "tls.html#tlssocketremotefamily", "tlsSocket.remotePort": "tls.html#tlssocketremoteport", "tlsSocket.renegotiate()": "tls.html#tlssocketrenegotiateoptions-callback", "tlsSocket.setMaxSendFragment()": "tls.html#tlssocketsetmaxsendfragmentsize", "tokens": "util.html#parseargs-tokens", "Trace events": "tracing.html", "trace_events.createTracing()": "tracing.html#trace_eventscreatetracingoptions", "trace_events.getEnabledCategories()": "tracing.html#trace_eventsgetenabledcategories", "Tracing": "tracing.html#tracing-object", "tracing.categories": "tracing.html#tracingcategories", "tracing.disable()": "tracing.html#tracingdisable", "tracing.enable()": "tracing.html#tracingenable", "tracing.enabled": "tracing.html#tracingenabled", "tracingChannel.subscribe()": "diagnostics_channel.html#tracingchannelsubscribesubscribers", "tracingChannel.traceCallback()": "diagnostics_channel.html#tracingchanneltracecallbackfn-position-context-thisarg-args", "tracingChannel.tracePromise()": "diagnostics_channel.html#tracingchanneltracepromisefn-context-thisarg-args", "tracingChannel.traceSync()": "diagnostics_channel.html#tracingchanneltracesyncfn-context-thisarg-args", "tracingChannel.unsubscribe()": "diagnostics_channel.html#tracingchannelunsubscribesubscribers", "tracker.calls()": "assert.html#trackercallsfn-exact", "tracker.getCalls()": "assert.html#trackergetcallsfn", "tracker.report()": "assert.html#trackerreport", "tracker.reset()": "assert.html#trackerresetfn", "tracker.verify()": "assert.html#trackerverify", "transform._flush()": "stream.html#transform_flushcallback", "transform._transform()": "stream.html#transform_transformchunk-encoding-callback", "transform.destroy()": "stream.html#transformdestroyerror", "transformStream.readable": "webstreams.html#transformstreamreadable", "transformStream.writable": "webstreams.html#transformstreamwritable", "transformStreamDefaultController.desiredSize": "webstreams.html#transformstreamdefaultcontrollerdesiredsize", "transformStreamDefaultController.enqueue()": "webstreams.html#transformstreamdefaultcontrollerenqueuechunk", "transformStreamDefaultController.error()": "webstreams.html#transformstreamdefaultcontrollererrorreason", "transformStreamDefaultController.terminate()": "webstreams.html#transformstreamdefaultcontrollerterminate", "triggerAsyncId": "async_hooks.html#triggerasyncid", "TTY": "tty.html", "tty.isatty()": "tty.html#ttyisattyfd", "type": "async_hooks.html#type", "TZ": "cli.html#tz", "UDP/datagram sockets": "dgram.html", "URL": "globals.html#url", "URL.canParse()": "url.html#urlcanparseinput-base", "URL.createObjectURL()": "url.html#urlcreateobjecturlblob", "url.domainToASCII()": "url.html#urldomaintoasciidomain", "url.domainToUnicode()": "url.html#urldomaintounicodedomain", "url.fileURLToPath()": "url.html#urlfileurltopathurl", "url.format()": "url.html#urlformaturl-options", "url.hash": "url.html#urlhash", "url.host": "url.html#urlhost", "url.hostname": "url.html#urlhostname", "url.href": "url.html#urlhref", "url.origin": "url.html#urlorigin", "url.parse()": "url.html#urlparseurlstring-parsequerystring-slashesdenotehost", "url.password": "url.html#urlpassword", "url.pathname": "url.html#urlpathname", "url.pathToFileURL()": "url.html#urlpathtofileurlpath", "url.port": "url.html#urlport", "url.protocol": "url.html#urlprotocol", "url.resolve()": "url.html#urlresolvefrom-to", "URL.revokeObjectURL()": "url.html#urlrevokeobjecturlid", "url.search": "url.html#urlsearch", "url.searchParams": "url.html#urlsearchparams", "url.toJSON()": "url.html#urltojson", "url.toString()": "url.html#urltostring", "url.urlToHttpOptions()": "url.html#urlurltohttpoptionsurl", "url.username": "url.html#urlusername", "urlObject.auth": "url.html#urlobjectauth", "urlObject.hash": "url.html#urlobjecthash", "urlObject.host": "url.html#urlobjecthost", "urlObject.hostname": "url.html#urlobjecthostname", "urlObject.href": "url.html#urlobjecthref", "urlObject.path": "url.html#urlobjectpath", "urlObject.pathname": "url.html#urlobjectpathname", "urlObject.port": "url.html#urlobjectport", "urlObject.protocol": "url.html#urlobjectprotocol", "urlObject.query": "url.html#urlobjectquery", "urlObject.search": "url.html#urlobjectsearch", "urlObject.slashes": "url.html#urlobjectslashes", "URLSearchParams": "globals.html#urlsearchparams", "urlSearchParams.append()": "url.html#urlsearchparamsappendname-value", "urlSearchParams.delete()": "url.html#urlsearchparamsdeletename-value", "urlSearchParams.entries()": "url.html#urlsearchparamsentries", "urlSearchParams.forEach()": "url.html#urlsearchparamsforeachfn-thisarg", "urlSearchParams.get()": "url.html#urlsearchparamsgetname", "urlSearchParams.getAll()": "url.html#urlsearchparamsgetallname", "urlSearchParams.has()": "url.html#urlsearchparamshasname-value", "urlSearchParams.keys()": "url.html#urlsearchparamskeys", "urlSearchParams.set()": "url.html#urlsearchparamssetname-value", "urlSearchParams.size": "url.html#urlsearchparamssize", "urlSearchParams.sort()": "url.html#urlsearchparamssort", "urlSearchParams.toString()": "url.html#urlsearchparamstostring", "urlSearchParams.values()": "url.html#urlsearchparamsvalues", "urlSearchParams[Symbol.iterator]()": "url.html#urlsearchparamssymboliterator", "Util": "util.html", "util._extend()": "util.html#util_extendtarget-source", "util.aborted()": "util.html#utilabortedsignal-resource", "util.callbackify()": "util.html#utilcallbackifyoriginal", "util.debug()": "util.html#utildebugsection", "util.debuglog()": "util.html#utildebuglogsection-callback", "util.deprecate()": "util.html#utildeprecatefn-msg-code", "util.format()": "util.html#utilformatformat-args", "util.formatWithOptions()": "util.html#utilformatwithoptionsinspectoptions-format-args", "util.getSystemErrorMap()": "util.html#utilgetsystemerrormap", "util.getSystemErrorName()": "util.html#utilgetsystemerrornameerr", "util.inherits()": "util.html#utilinheritsconstructor-superconstructor", "util.inspect()": "util.html#utilinspectobject-showhidden-depth-colors", "util.inspect.custom": "util.html#utilinspectcustom", "util.inspect.defaultOptions": "util.html#utilinspectdefaultoptions", "util.isArray()": "util.html#utilisarrayobject", "util.isBoolean()": "util.html#utilisbooleanobject", "util.isBuffer()": "util.html#utilisbufferobject", "util.isDate()": "util.html#utilisdateobject", "util.isDeepStrictEqual()": "util.html#utilisdeepstrictequalval1-val2", "util.isError()": "util.html#utiliserrorobject", "util.isFunction()": "util.html#utilisfunctionobject", "util.isNull()": "util.html#utilisnullobject", "util.isNullOrUndefined()": "util.html#utilisnullorundefinedobject", "util.isNumber()": "util.html#utilisnumberobject", "util.isObject()": "util.html#utilisobjectobject", "util.isPrimitive()": "util.html#utilisprimitiveobject", "util.isRegExp()": "util.html#utilisregexpobject", "util.isString()": "util.html#utilisstringobject", "util.isSymbol()": "util.html#utilissymbolobject", "util.isUndefined()": "util.html#utilisundefinedobject", "util.log()": "util.html#utillogstring", "util.parseArgs()": "util.html#utilparseargsconfig", "util.promisify()": "util.html#utilpromisifyoriginal", "util.promisify.custom": "util.html#utilpromisifycustom", "util.stripVTControlCharacters()": "util.html#utilstripvtcontrolcharactersstr", "util.toUSVString()": "util.html#utiltousvstringstring", "util.transferableAbortController()": "util.html#utiltransferableabortcontroller", "util.transferableAbortSignal()": "util.html#utiltransferableabortsignalsignal", "util.types": "util.html#utiltypes", "util.types.isAnyArrayBuffer()": "util.html#utiltypesisanyarraybuffervalue", "util.types.isArgumentsObject()": "util.html#utiltypesisargumentsobjectvalue", "util.types.isArrayBuffer()": "util.html#utiltypesisarraybuffervalue", "util.types.isArrayBufferView()": "util.html#utiltypesisarraybufferviewvalue", "util.types.isAsyncFunction()": "util.html#utiltypesisasyncfunctionvalue", "util.types.isBigInt64Array()": "util.html#utiltypesisbigint64arrayvalue", "util.types.isBigUint64Array()": "util.html#utiltypesisbiguint64arrayvalue", "util.types.isBooleanObject()": "util.html#utiltypesisbooleanobjectvalue", "util.types.isBoxedPrimitive()": "util.html#utiltypesisboxedprimitivevalue", "util.types.isCryptoKey()": "util.html#utiltypesiscryptokeyvalue", "util.types.isDataView()": "util.html#utiltypesisdataviewvalue", "util.types.isDate()": "util.html#utiltypesisdatevalue", "util.types.isExternal()": "util.html#utiltypesisexternalvalue", "util.types.isFloat32Array()": "util.html#utiltypesisfloat32arrayvalue", "util.types.isFloat64Array()": "util.html#utiltypesisfloat64arrayvalue", "util.types.isGeneratorFunction()": "util.html#utiltypesisgeneratorfunctionvalue", "util.types.isGeneratorObject()": "util.html#utiltypesisgeneratorobjectvalue", "util.types.isInt16Array()": "util.html#utiltypesisint16arrayvalue", "util.types.isInt32Array()": "util.html#utiltypesisint32arrayvalue", "util.types.isInt8Array()": "util.html#utiltypesisint8arrayvalue", "util.types.isKeyObject()": "util.html#utiltypesiskeyobjectvalue", "util.types.isMap()": "util.html#utiltypesismapvalue", "util.types.isMapIterator()": "util.html#utiltypesismapiteratorvalue", "util.types.isModuleNamespaceObject()": "util.html#utiltypesismodulenamespaceobjectvalue", "util.types.isNativeError()": "util.html#utiltypesisnativeerrorvalue", "util.types.isNumberObject()": "util.html#utiltypesisnumberobjectvalue", "util.types.isPromise()": "util.html#utiltypesispromisevalue", "util.types.isProxy()": "util.html#utiltypesisproxyvalue", "util.types.isRegExp()": "util.html#utiltypesisregexpvalue", "util.types.isSet()": "util.html#utiltypesissetvalue", "util.types.isSetIterator()": "util.html#utiltypesissetiteratorvalue", "util.types.isSharedArrayBuffer()": "util.html#utiltypesissharedarraybuffervalue", "util.types.isStringObject()": "util.html#utiltypesisstringobjectvalue", "util.types.isSymbolObject()": "util.html#utiltypesissymbolobjectvalue", "util.types.isTypedArray()": "util.html#utiltypesistypedarrayvalue", "util.types.isUint16Array()": "util.html#utiltypesisuint16arrayvalue", "util.types.isUint32Array()": "util.html#utiltypesisuint32arrayvalue", "util.types.isUint8Array()": "util.html#utiltypesisuint8arrayvalue", "util.types.isUint8ClampedArray()": "util.html#utiltypesisuint8clampedarrayvalue", "util.types.isWeakMap()": "util.html#utiltypesisweakmapvalue", "util.types.isWeakSet()": "util.html#utiltypesisweaksetvalue", "util.types.isWebAssemblyCompiledModule()": "util.html#utiltypesiswebassemblycompiledmodulevalue", "UV_THREADPOOL_SIZE=size": "cli.html#uv_threadpool_sizesize", "V8": "v8.html", "v8.cachedDataVersionTag()": "v8.html#v8cacheddataversiontag", "v8.deserialize()": "v8.html#v8deserializebuffer", "v8.getHeapCodeStatistics()": "v8.html#v8getheapcodestatistics", "v8.getHeapSnapshot()": "v8.html#v8getheapsnapshotoptions", "v8.getHeapSpaceStatistics()": "v8.html#v8getheapspacestatistics", "v8.getHeapStatistics()": "v8.html#v8getheapstatistics", "v8.serialize()": "v8.html#v8serializevalue", "v8.setFlagsFromString()": "v8.html#v8setflagsfromstringflags", "v8.setHeapSnapshotNearHeapLimit()": "v8.html#v8setheapsnapshotnearheaplimitlimit", "v8.startupSnapshot.addDeserializeCallback()": "v8.html#v8startupsnapshotadddeserializecallbackcallback-data", "v8.startupSnapshot.addSerializeCallback()": "v8.html#v8startupsnapshotaddserializecallbackcallback-data", "v8.startupSnapshot.isBuildingSnapshot()": "v8.html#v8startupsnapshotisbuildingsnapshot", "v8.startupSnapshot.setDeserializeMainFunction()": "v8.html#v8startupsnapshotsetdeserializemainfunctioncallback-data", "v8.stopCoverage()": "v8.html#v8stopcoverage", "v8.takeCoverage()": "v8.html#v8takecoverage", "v8.writeHeapSnapshot()": "v8.html#v8writeheapsnapshotfilenameoptions", "verify.update()": "crypto.html#verifyupdatedata-inputencoding", "verify.verify()": "crypto.html#verifyverifyobject-signature-signatureencoding", "VM (executing JavaScript)": "vm.html", "vm.compileFunction()": "vm.html#vmcompilefunctioncode-params-options", "vm.createContext()": "vm.html#vmcreatecontextcontextobject-options", "vm.isContext()": "vm.html#vmiscontextobject", "vm.measureMemory()": "vm.html#vmmeasurememoryoptions", "vm.runInContext()": "vm.html#vmrunincontextcode-contextifiedobject-options", "vm.runInNewContext()": "vm.html#vmruninnewcontextcode-contextobject-options", "vm.runInThisContext()": "vm.html#vmruninthiscontextcode-options", "wasi.getImportObject()": "wasi.html#wasigetimportobject", "wasi.initialize()": "wasi.html#wasiinitializeinstance", "wasi.start()": "wasi.html#wasistartinstance", "wasi.wasiImport": "wasi.html#wasiwasiimport", "watcher.close()": "fs.html#watcherclose", "watcher.ref()": "fs.html#watcherref_1", "watcher.unref()": "fs.html#watcherunref_1", "Web Crypto API": "webcrypto.html", "Web Streams API": "webstreams.html", "WebAssembly": "globals.html#webassembly", "WebAssembly System Interface (WASI)": "wasi.html", "Worker threads": "worker_threads.html", "worker.disconnect()": "cluster.html#workerdisconnect", "worker.exitedAfterDisconnect": "cluster.html#workerexitedafterdisconnect", "worker.getEnvironmentData()": "worker_threads.html#workergetenvironmentdatakey", "worker.getHeapSnapshot()": "worker_threads.html#workergetheapsnapshotoptions", "worker.id": "cluster.html#workerid", "worker.isConnected()": "cluster.html#workerisconnected", "worker.isDead()": "cluster.html#workerisdead", "worker.isMainThread": "worker_threads.html#workerismainthread", "worker.kill()": "cluster.html#workerkillsignal", "worker.markAsUntransferable()": "worker_threads.html#workermarkasuntransferableobject", "worker.moveMessagePortToContext()": "worker_threads.html#workermovemessageporttocontextport-contextifiedsandbox", "worker.parentPort": "worker_threads.html#workerparentport", "worker.performance": "worker_threads.html#workerperformance", "worker.postMessage()": "worker_threads.html#workerpostmessagevalue-transferlist", "worker.process": "cluster.html#workerprocess", "worker.receiveMessageOnPort()": "worker_threads.html#workerreceivemessageonportport", "worker.ref()": "worker_threads.html#workerref", "worker.resourceLimits": "worker_threads.html#workerresourcelimits_1", "worker.send()": "cluster.html#workersendmessage-sendhandle-options-callback", "worker.setEnvironmentData()": "worker_threads.html#workersetenvironmentdatakey-value", "worker.SHARE_ENV": "worker_threads.html#workershare_env", "worker.stderr": "worker_threads.html#workerstderr", "worker.stdin": "worker_threads.html#workerstdin", "worker.stdout": "worker_threads.html#workerstdout", "worker.terminate()": "worker_threads.html#workerterminate", "worker.threadId": "worker_threads.html#workerthreadid", "worker.unref()": "worker_threads.html#workerunref", "worker.workerData": "worker_threads.html#workerworkerdata", "writable._construct()": "stream.html#writable_constructcallback", "writable._destroy()": "stream.html#writable_destroyerr-callback", "writable._final()": "stream.html#writable_finalcallback", "writable._write()": "stream.html#writable_writechunk-encoding-callback", "writable._writev()": "stream.html#writable_writevchunks-callback", "writable.closed": "stream.html#writableclosed", "writable.cork()": "stream.html#writablecork", "writable.destroy()": "stream.html#writabledestroyerror", "writable.destroyed": "stream.html#writabledestroyed", "writable.end()": "stream.html#writableendchunk-encoding-callback", "writable.errored": "stream.html#writableerrored", "writable.setDefaultEncoding()": "stream.html#writablesetdefaultencodingencoding", "writable.uncork()": "stream.html#writableuncork", "writable.writable": "stream.html#writablewritable", "writable.writableAborted": "stream.html#writablewritableaborted", "writable.writableCorked": "stream.html#writablewritablecorked", "writable.writableEnded": "stream.html#writablewritableended", "writable.writableFinished": "stream.html#writablewritablefinished", "writable.writableHighWaterMark": "stream.html#writablewritablehighwatermark", "writable.writableLength": "stream.html#writablewritablelength", "writable.writableNeedDrain": "stream.html#writablewritableneeddrain", "writable.writableObjectMode": "stream.html#writablewritableobjectmode", "writable.write()": "stream.html#writablewritechunk-encoding-callback", "writableStream.abort()": "webstreams.html#writablestreamabortreason", "writableStream.close()": "webstreams.html#writablestreamclose", "writableStream.getWriter()": "webstreams.html#writablestreamgetwriter", "writableStream.locked": "webstreams.html#writablestreamlocked", "writableStreamDefaultController.error()": "webstreams.html#writablestreamdefaultcontrollererrorerror", "writableStreamDefaultController.signal": "webstreams.html#writablestreamdefaultcontrollersignal", "writableStreamDefaultWriter.abort()": "webstreams.html#writablestreamdefaultwriterabortreason", "writableStreamDefaultWriter.close()": "webstreams.html#writablestreamdefaultwriterclose", "writableStreamDefaultWriter.closed": "webstreams.html#writablestreamdefaultwriterclosed", "writableStreamDefaultWriter.desiredSize": "webstreams.html#writablestreamdefaultwriterdesiredsize", "writableStreamDefaultWriter.ready": "webstreams.html#writablestreamdefaultwriterready", "writableStreamDefaultWriter.releaseLock()": "webstreams.html#writablestreamdefaultwriterreleaselock", "writableStreamDefaultWriter.write()": "webstreams.html#writablestreamdefaultwriterwritechunk", "writeStream.bytesWritten": "fs.html#writestreambyteswritten", "writeStream.clearLine()": "tty.html#writestreamclearlinedir-callback", "writeStream.clearScreenDown()": "tty.html#writestreamclearscreendowncallback", "writeStream.close()": "fs.html#writestreamclosecallback", "writeStream.columns": "tty.html#writestreamcolumns", "writeStream.cursorTo()": "tty.html#writestreamcursortox-y-callback", "writeStream.getColorDepth()": "tty.html#writestreamgetcolordepthenv", "writeStream.getWindowSize()": "tty.html#writestreamgetwindowsize", "writeStream.hasColors()": "tty.html#writestreamhascolorscount-env", "writeStream.isTTY": "tty.html#writestreamistty", "writeStream.moveCursor()": "tty.html#writestreammovecursordx-dy-callback", "writeStream.path": "fs.html#writestreampath", "writeStream.pending": "fs.html#writestreampending", "writeStream.rows": "tty.html#writestreamrows", "x509.ca": "crypto.html#x509ca", "x509.checkEmail()": "crypto.html#x509checkemailemail-options", "x509.checkHost()": "crypto.html#x509checkhostname-options", "x509.checkIP()": "crypto.html#x509checkipip", "x509.checkIssued()": "crypto.html#x509checkissuedothercert", "x509.checkPrivateKey()": "crypto.html#x509checkprivatekeyprivatekey", "x509.fingerprint": "crypto.html#x509fingerprint", "x509.fingerprint256": "crypto.html#x509fingerprint256", "x509.fingerprint512": "crypto.html#x509fingerprint512", "x509.infoAccess": "crypto.html#x509infoaccess", "x509.issuer": "crypto.html#x509issuer", "x509.issuerCertificate": "crypto.html#x509issuercertificate", "x509.keyUsage": "crypto.html#x509keyusage", "x509.publicKey": "crypto.html#x509publickey", "x509.raw": "crypto.html#x509raw", "x509.serialNumber": "crypto.html#x509serialnumber", "x509.subject": "crypto.html#x509subject", "x509.subjectAltName": "crypto.html#x509subjectaltname", "x509.toJSON()": "crypto.html#x509tojson", "x509.toLegacyObject()": "crypto.html#x509tolegacyobject", "x509.toString()": "crypto.html#x509tostring", "x509.validFrom": "crypto.html#x509validfrom", "x509.validTo": "crypto.html#x509validto", "x509.verify()": "crypto.html#x509verifypublickey", "Zlib": "zlib.html", "zlib.brotliCompress()": "zlib.html#zlibbrotlicompressbuffer-options-callback", "zlib.brotliCompressSync()": "zlib.html#zlibbrotlicompresssyncbuffer-options", "zlib.brotliDecompress()": "zlib.html#zlibbrotlidecompressbuffer-options-callback", "zlib.brotliDecompressSync()": "zlib.html#zlibbrotlidecompresssyncbuffer-options", "zlib.bytesRead": "zlib.html#zlibbytesread", "zlib.bytesWritten": "zlib.html#zlibbyteswritten", "zlib.close()": "zlib.html#zlibclosecallback", "zlib.constants": "zlib.html#zlibconstants", "zlib.createBrotliCompress()": "zlib.html#zlibcreatebrotlicompressoptions", "zlib.createBrotliDecompress()": "zlib.html#zlibcreatebrotlidecompressoptions", "zlib.createDeflate()": "zlib.html#zlibcreatedeflateoptions", "zlib.createDeflateRaw()": "zlib.html#zlibcreatedeflaterawoptions", "zlib.createGunzip()": "zlib.html#zlibcreategunzipoptions", "zlib.createGzip()": "zlib.html#zlibcreategzipoptions", "zlib.createInflate()": "zlib.html#zlibcreateinflateoptions", "zlib.createInflateRaw()": "zlib.html#zlibcreateinflaterawoptions", "zlib.createUnzip()": "zlib.html#zlibcreateunzipoptions", "zlib.deflate()": "zlib.html#zlibdeflatebuffer-options-callback", "zlib.deflateRaw()": "zlib.html#zlibdeflaterawbuffer-options-callback", "zlib.deflateRawSync()": "zlib.html#zlibdeflaterawsyncbuffer-options", "zlib.deflateSync()": "zlib.html#zlibdeflatesyncbuffer-options", "zlib.flush()": "zlib.html#zlibflushkind-callback", "zlib.gunzip()": "zlib.html#zlibgunzipbuffer-options-callback", "zlib.gunzipSync()": "zlib.html#zlibgunzipsyncbuffer-options", "zlib.gzip()": "zlib.html#zlibgzipbuffer-options-callback", "zlib.gzipSync()": "zlib.html#zlibgzipsyncbuffer-options", "zlib.inflate()": "zlib.html#zlibinflatebuffer-options-callback", "zlib.inflateRaw()": "zlib.html#zlibinflaterawbuffer-options-callback", "zlib.inflateRawSync()": "zlib.html#zlibinflaterawsyncbuffer-options", "zlib.inflateSync()": "zlib.html#zlibinflatesyncbuffer-options", "zlib.params()": "zlib.html#zlibparamslevel-strategy-callback", "zlib.reset()": "zlib.html#zlibreset", "zlib.unzip()": "zlib.html#zlibunzipbuffer-options-callback", "zlib.unzipSync()": "zlib.html#zlibunzipsyncbuffer-options"}