#!/usr/bin/env python3

from json import load
from pathlib import Path
from subprocess import call, check_output
from sys import argv

pgm = argv[0]
sep = " â€¢ "

root_path = Path("@DEVDOCS_INSTALL_DATADIR@")
html_path = root_path / "html"

index = sorted([ path.name for path in html_path.iterdir() ])

def get_item(items):
    input = "\n".join(items)
    try: return check_output([ "fzf", "--no-sort" ], input=input, encoding="utf8").rstrip()
    except: return None

def open_url(url):
    call([ "w3m", url ])

def find_doc(name):
    for doc in index:
        if doc.startswith(name): return doc
    return None

def open_index(name=None):
    doc = find_doc(name) if name else get_item(index)
    if doc:
        path = html_path / doc / "index.html"
        if path.exists(): open_url(path)
    else: open_item(None, name)

def open_item(name, item):
    if name: docs = [ doc ] if (doc := find_doc(name)) else []
    else: docs = index

    items = { }
    for doc in docs:
        doc_path = html_path / doc
        with open(doc_path / "index.json") as fp: doc_index = load(fp)
        item_path = doc_index.get(item)
        if item_path: items[doc + sep + item] = doc_path / item_path

    if len(items) > 1:
        if item := get_item(items.keys()): open_url(items[item])

    elif len(items) == 1:
        open_url(next(iter(items.values())))

def usage():
    b = "\033[1m"
    n = "\033[0m"
    print(f"""
Usage: {b}{pgm}{n} [{b}topic{n}] [{b}entry{n}]
   or: {b}{pgm}{n} -h|--help
   or: {b}{pgm}{n} -v|--version

If {b}topic{n} is omitted or set to {b}?{n}, the {b}entry{n} will be searched
in all available topics.

If {b}entry{n} is omitted, index page for the given {b}topic{n} will be shown.

Examples:

(1) {b}{pgm}{n} - show interactive list of available topics and open index page
for the selected one (see {b}fzf(1){n} on how to navigate the list).

(2) {b}{pgm} typescript{n} - open index page for {b}typescript{n}.

(3) {b}{pgm} type{n} - same as above (topic name can be abbreviated).

(4) {b}{pgm} cpp string{n} - open entry page for {b}string{n} in the {b}cpp{n} topic.

(5) {b}{pgm} pe glob{n} - open entry page for {b}glob{n} in {b}perl{n} (abbreviated).

(6) {b}{pgm} glob{n} - search all topics for the {b}glob{n} entry; if {b}glob{n}
exists in more than one topic, show interactive list.

(7) {b}{pgm} ? type{n} - search all topics for the {b}type{n} entry.

(8) {b}{pgm} ? -h{n} - search all topics for the {b}-h{n} entry (or {b}?{n}, {b}-v{n}, etc).

Share and enjoy.
""")

####################
if len(argv) == 1: open_index()

elif len(argv) == 2:
    if argv[1] in [ "-h", "--help" ]: usage()

    elif argv[1] in [ "-v", "--version" ]:
        print(pgm + " version @PROJECT_VERSION@")

    else:
        _, name = argv
        name, _, item = name.partition(sep)
        open_item(name, item) if item else open_index(name)

elif len(argv) == 3:
    _, name, item = argv
    open_item(None if name == "?" else name, item)

else: usage()
